diff --git a/.vsts-dotnet.yml b/.vsts-dotnet.yml
index c816e8f283d..0ce3034d70b 100644
--- a/.vsts-dotnet.yml
+++ b/.vsts-dotnet.yml
@@ -31,6 +31,7 @@ stages:
       name: VSEng-MicroBuildVS2019
       demands:
       - agent.os -equals Windows_NT
+      - VSTS_OS -equals Windows_Server_2019_Data_Center_with_Containers
 
     timeoutInMinutes: 180
 
diff --git a/README.md b/README.md
index ec95e8f97d6..c8331538f45 100644
--- a/README.md
+++ b/README.md
@@ -6,13 +6,13 @@ For more information on MSBuild, see the [MSBuild documentation](https://docs.mi
 
 ### Build Status
 
-The current development branch is `master`. Changes in `master` will go into a future update of MSBuild, which will release with Visual Studio 16.6 and a corresponding version of the .NET Core SDK.
+The current development branch is `master`. Changes in `master` will go into a future update of MSBuild, which will release with Visual Studio 16.7 and a corresponding version of the .NET Core SDK.
 
 [![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/Microsoft/msbuild/msbuild-pr?branchName=master)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=86&branchName=master)
 
-We have forked for MSBuild 16.5 in the branch [`vs16.5`](https://github.com/Microsoft/msbuild/tree/vs16.5). Changes to that branch need special approval.
+We have forked for MSBuild 16.6 in the branch [`vs16.6`](https://github.com/Microsoft/msbuild/tree/vs16.6). Changes to that branch need special approval.
 
-[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/Microsoft/msbuild/msbuild-pr?branchName=vs16.5)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=86&branchName=vs16.5)
+[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/Microsoft/msbuild/msbuild-pr?branchName=vs16.6)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=86&branchName=vs16.6)
 
 MSBuild 16.4 builds from the branch [`vs16.4`](https://github.com/Microsoft/msbuild/tree/vs16.4). Only high-priority bugfixes will be considered for servicing 16.4.
 
diff --git a/documentation/wiki/Contributing-Code.md b/documentation/wiki/Contributing-Code.md
index 361cbbe47a2..02760fb0b8b 100644
--- a/documentation/wiki/Contributing-Code.md
+++ b/documentation/wiki/Contributing-Code.md
@@ -7,7 +7,7 @@ Because our focus right now is on maintaining backwards compatibility, the team
 - Only contributions referencing an approved Issue will be accepted.
 - Pull requests that do not merge easily with the tip of the master branch will be declined. The author will be asked to merge with tip and submit a new pull request.
 - Submissions must meet functional and performance expectations, including scenarios for which the team doesn't yet have open source tests. This means you may be asked to fix and resubmit your pull request against a new open test case if it fails one of these tests.
-- Submissions must follow the [.Net Foundation Coding Guidelines](https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/coding-style.md)
+- Submissions must follow the [.NET Runtime Coding Guidelines](https://github.com/dotnet/runtime/blob/master/docs/coding-guidelines/coding-style.md)
 
 When you are ready to proceed with making a change, get set up to [build](Home.md "See 'Building Testing and Debugging'") the code and familiarize yourself with our workflow and our coding conventions. These two blogs posts on contributing code to open source projects are good too: [Open Source Contribution Etiquette by Miguel de Icaza](https://tirania.org/blog/archive/2010/Dec-31.html) and [Don’t “Push” Your Pull Requests by Ilya Grigorik](https://www.igvita.com/2011/12/19/dont-push-your-pull-requests/).
 
@@ -33,4 +33,4 @@ Please follow these guidelines when creating new issues in the issue tracker:
 - Subscribe to notifications for the created issue in case there are any follow up questions.
 
 ### Coding Conventions
-- Use the coding style outlined in the [.Net Foundation Coding Guidelines](https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/coding-style.md)
+- Use the coding style outlined in the [.NET Runtime Coding Guidelines](https://github.com/dotnet/runtime/blob/master/docs/coding-guidelines/coding-style.md)
diff --git a/eng/Packages.props b/eng/Packages.props
index baec54fee41..b8ebc96c259 100644
--- a/eng/Packages.props
+++ b/eng/Packages.props
@@ -49,7 +49,7 @@
   </ItemGroup>
 
   <ItemGroup Condition="'$(DotNetBuildFromSource)' != 'true'">
-    <GlobalPackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0-alpha-004" PrivateAssets="All"/>
+    <GlobalPackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0" PrivateAssets="All"/>
   </ItemGroup>
 
   <ItemGroup>
diff --git a/eng/Version.Details.xml b/eng/Version.Details.xml
index 84809c75278..3aa465663ec 100644
--- a/eng/Version.Details.xml
+++ b/eng/Version.Details.xml
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Dependencies>
   <ToolsetDependencies>
-    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="1.0.0-beta.20124.2">
+    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="1.0.0-beta.20215.5">
       <Uri>https://github.com/dotnet/arcade</Uri>
-      <Sha>0b8ce7c1c078eefb4cbc4d7e67ffc02f1f73382d</Sha>
+      <Sha>36fd49bf87b14b78d722179b787e6518b5205518</Sha>
     </Dependency>
   </ToolsetDependencies>
 </Dependencies>
diff --git a/eng/Versions.props b/eng/Versions.props
index 4d68046b631..1aedd883c78 100644
--- a/eng/Versions.props
+++ b/eng/Versions.props
@@ -15,7 +15,7 @@
     <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
   </PropertyGroup>
   <PropertyGroup>
-    <VersionPrefix>16.6.0</VersionPrefix>
+    <VersionPrefix>16.7.0</VersionPrefix>
     <AssemblyVersion>15.1.0.0</AssemblyVersion>
     <PreReleaseVersionLabel>preview</PreReleaseVersionLabel>
     <DotNetUseShippingVersions>true</DotNetUseShippingVersions>
diff --git a/eng/common/tools.sh b/eng/common/tools.sh
index 94965a8fd2a..acbb0c5b3ff 100755
--- a/eng/common/tools.sh
+++ b/eng/common/tools.sh
@@ -210,7 +210,14 @@ function InstallDotNet {
 
       local runtimeSourceFeedKey=''
       if [[ -n "${7:-}" ]]; then
-        decodedFeedKey=`echo $7 | base64 --decode`
+        # The 'base64' binary on alpine uses '-d' and doesn't support '--decode'
+        # '-d'. To work around this, do a simple detection and switch the parameter
+        # accordingly.
+        decodeArg="--decode"
+        if base64 --help 2>&1 | grep -q "BusyBox"; then
+            decodeArg="-d"
+        fi
+        decodedFeedKey=`echo $7 | base64 $decodeArg`
         runtimeSourceFeedKey="--feed-credential $decodedFeedKey"
       fi
 
diff --git a/global.json b/global.json
index e2c34768525..aae65e77550 100644
--- a/global.json
+++ b/global.json
@@ -12,6 +12,6 @@
   },
   "msbuild-sdks": {
     "Microsoft.Build.CentralPackageVersions": "2.0.1",
-    "Microsoft.DotNet.Arcade.Sdk": "1.0.0-beta.20124.2"
+    "Microsoft.DotNet.Arcade.Sdk": "1.0.0-beta.20215.5"
   }
 }
diff --git a/ref/Microsoft.Build.Tasks.Core/netstandard/Microsoft.Build.Tasks.Core.cs b/ref/Microsoft.Build.Tasks.Core/netstandard/Microsoft.Build.Tasks.Core.cs
index 2184424e3f4..1babf5ee2d4 100644
--- a/ref/Microsoft.Build.Tasks.Core/netstandard/Microsoft.Build.Tasks.Core.cs
+++ b/ref/Microsoft.Build.Tasks.Core/netstandard/Microsoft.Build.Tasks.Core.cs
@@ -682,6 +682,32 @@ public void CleanupTask(Microsoft.Build.Framework.ITask task) { }
         public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters() { throw null; }
         public bool Initialize(string taskName, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) { throw null; }
     }
+    public partial class SGen : Microsoft.Build.Tasks.ToolTaskExtension
+    {
+        public SGen() { }
+        [Microsoft.Build.Framework.RequiredAttribute]
+        public string BuildAssemblyName { get { throw null; } set { } }
+        [Microsoft.Build.Framework.RequiredAttribute]
+        public string BuildAssemblyPath { get { throw null; } set { } }
+        public bool DelaySign { get { throw null; } set { } }
+        public string KeyContainer { get { throw null; } set { } }
+        public string KeyFile { get { throw null; } set { } }
+        public string Platform { get { throw null; } set { } }
+        public string[] References { get { throw null; } set { } }
+        public string SdkToolsPath { get { throw null; } set { } }
+        [Microsoft.Build.Framework.OutputAttribute]
+        public Microsoft.Build.Framework.ITaskItem[] SerializationAssembly { get { throw null; } set { } }
+        public string SerializationAssemblyName { get { throw null; } }
+        [Microsoft.Build.Framework.RequiredAttribute]
+        public bool ShouldGenerateSerializer { get { throw null; } set { } }
+        protected override string ToolName { get { throw null; } }
+        public string[] Types { get { throw null; } set { } }
+        public bool UseKeep { get { throw null; } set { } }
+        [Microsoft.Build.Framework.RequiredAttribute]
+        public bool UseProxyTypes { get { throw null; } set { } }
+        public override bool Execute() { throw null; }
+        protected override string GenerateFullPathToTool() { throw null; }
+    }
     public abstract partial class TaskExtension : Microsoft.Build.Utilities.Task
     {
         internal TaskExtension() { }
diff --git a/ref/Microsoft.Build/net/Microsoft.Build.cs b/ref/Microsoft.Build/net/Microsoft.Build.cs
index 39712e7b9ef..b8440d4530d 100644
--- a/ref/Microsoft.Build/net/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/net/Microsoft.Build.cs
@@ -147,6 +147,10 @@ internal ProjectItemElement() { }
         public Microsoft.Build.Construction.ElementLocation KeepDuplicatesLocation { get { throw null; } }
         public string KeepMetadata { get { throw null; } set { } }
         public Microsoft.Build.Construction.ElementLocation KeepMetadataLocation { get { throw null; } }
+        public string MatchOnMetadata { get { throw null; } set { } }
+        public Microsoft.Build.Construction.ElementLocation MatchOnMetadataLocation { get { throw null; } }
+        public string MatchOnMetadataOptions { get { throw null; } set { } }
+        public Microsoft.Build.Construction.ElementLocation MatchOnMetadataOptionsLocation { get { throw null; } }
         public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectMetadataElement> Metadata { get { throw null; } }
         public string Remove { get { throw null; } set { } }
         public Microsoft.Build.Construction.ElementLocation RemoveLocation { get { throw null; } }
@@ -504,6 +508,16 @@ public GlobResult(Microsoft.Build.Construction.ProjectItemElement itemElement, S
         public Microsoft.Build.Globbing.IMSBuildGlob MsBuildGlob { get { throw null; } set { } }
         public System.Collections.Generic.IEnumerable<string> Removes { get { throw null; } set { } }
     }
+    public static partial class MatchOnMetadataConstants
+    {
+        public const Microsoft.Build.Evaluation.MatchOnMetadataOptions MatchOnMetadataOptionsDefaultValue = Microsoft.Build.Evaluation.MatchOnMetadataOptions.CaseSensitive;
+    }
+    public enum MatchOnMetadataOptions
+    {
+        CaseInsensitive = 1,
+        CaseSensitive = 0,
+        PathLike = 2,
+    }
     [System.FlagsAttribute]
     public enum NewProjectFileOptions
     {
@@ -972,6 +986,7 @@ public BuildParameters(Microsoft.Build.Evaluation.ProjectCollection projectColle
         public System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> Loggers { get { throw null; } set { } }
         public bool LogInitialPropertiesAndItems { get { throw null; } set { } }
         public bool LogTaskInputs { get { throw null; } set { } }
+        public bool LowPriority { get { throw null; } set { } }
         public int MaxNodeCount { get { throw null; } set { } }
         public int MemoryUseLimit { get { throw null; } set { } }
         public string NodeExeLocation { get { throw null; } set { } }
@@ -1091,6 +1106,7 @@ public enum NodeEngineShutdownReason
     public partial class OutOfProcNode
     {
         public OutOfProcNode() { }
+        public Microsoft.Build.Execution.NodeEngineShutdownReason Run(bool enableReuse, bool lowPriority, out System.Exception shutdownException) { shutdownException = default(System.Exception); throw null; }
         public Microsoft.Build.Execution.NodeEngineShutdownReason Run(bool enableReuse, out System.Exception shutdownException) { shutdownException = default(System.Exception); throw null; }
         public Microsoft.Build.Execution.NodeEngineShutdownReason Run(out System.Exception shutdownException) { shutdownException = default(System.Exception); throw null; }
     }
@@ -1194,6 +1210,10 @@ internal ProjectItemGroupTaskItemInstance() { }
         public string KeepMetadata { get { throw null; } }
         public Microsoft.Build.Construction.ElementLocation KeepMetadataLocation { get { throw null; } }
         public Microsoft.Build.Construction.ElementLocation Location { get { throw null; } }
+        public string MatchOnMetadata { get { throw null; } }
+        public Microsoft.Build.Construction.ElementLocation MatchOnMetadataLocation { get { throw null; } }
+        public string MatchOnMetadataOptions { get { throw null; } }
+        public Microsoft.Build.Construction.ElementLocation MatchOnMetadataOptionsLocation { get { throw null; } }
         public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance> Metadata { get { throw null; } }
         public string Remove { get { throw null; } }
         public Microsoft.Build.Construction.ElementLocation RemoveLocation { get { throw null; } }
diff --git a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
index 53256cf1600..5a215a8c307 100644
--- a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
@@ -147,6 +147,10 @@ internal ProjectItemElement() { }
         public Microsoft.Build.Construction.ElementLocation KeepDuplicatesLocation { get { throw null; } }
         public string KeepMetadata { get { throw null; } set { } }
         public Microsoft.Build.Construction.ElementLocation KeepMetadataLocation { get { throw null; } }
+        public string MatchOnMetadata { get { throw null; } set { } }
+        public Microsoft.Build.Construction.ElementLocation MatchOnMetadataLocation { get { throw null; } }
+        public string MatchOnMetadataOptions { get { throw null; } set { } }
+        public Microsoft.Build.Construction.ElementLocation MatchOnMetadataOptionsLocation { get { throw null; } }
         public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectMetadataElement> Metadata { get { throw null; } }
         public string Remove { get { throw null; } set { } }
         public Microsoft.Build.Construction.ElementLocation RemoveLocation { get { throw null; } }
@@ -504,6 +508,16 @@ public GlobResult(Microsoft.Build.Construction.ProjectItemElement itemElement, S
         public Microsoft.Build.Globbing.IMSBuildGlob MsBuildGlob { get { throw null; } set { } }
         public System.Collections.Generic.IEnumerable<string> Removes { get { throw null; } set { } }
     }
+    public static partial class MatchOnMetadataConstants
+    {
+        public const Microsoft.Build.Evaluation.MatchOnMetadataOptions MatchOnMetadataOptionsDefaultValue = Microsoft.Build.Evaluation.MatchOnMetadataOptions.CaseSensitive;
+    }
+    public enum MatchOnMetadataOptions
+    {
+        CaseInsensitive = 1,
+        CaseSensitive = 0,
+        PathLike = 2,
+    }
     [System.FlagsAttribute]
     public enum NewProjectFileOptions
     {
@@ -967,6 +981,7 @@ public BuildParameters(Microsoft.Build.Evaluation.ProjectCollection projectColle
         public System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> Loggers { get { throw null; } set { } }
         public bool LogInitialPropertiesAndItems { get { throw null; } set { } }
         public bool LogTaskInputs { get { throw null; } set { } }
+        public bool LowPriority { get { throw null; } set { } }
         public int MaxNodeCount { get { throw null; } set { } }
         public int MemoryUseLimit { get { throw null; } set { } }
         public string NodeExeLocation { get { throw null; } set { } }
@@ -1085,6 +1100,7 @@ public enum NodeEngineShutdownReason
     public partial class OutOfProcNode
     {
         public OutOfProcNode() { }
+        public Microsoft.Build.Execution.NodeEngineShutdownReason Run(bool enableReuse, bool lowPriority, out System.Exception shutdownException) { shutdownException = default(System.Exception); throw null; }
         public Microsoft.Build.Execution.NodeEngineShutdownReason Run(bool enableReuse, out System.Exception shutdownException) { shutdownException = default(System.Exception); throw null; }
         public Microsoft.Build.Execution.NodeEngineShutdownReason Run(out System.Exception shutdownException) { shutdownException = default(System.Exception); throw null; }
     }
@@ -1188,6 +1204,10 @@ internal ProjectItemGroupTaskItemInstance() { }
         public string KeepMetadata { get { throw null; } }
         public Microsoft.Build.Construction.ElementLocation KeepMetadataLocation { get { throw null; } }
         public Microsoft.Build.Construction.ElementLocation Location { get { throw null; } }
+        public string MatchOnMetadata { get { throw null; } }
+        public Microsoft.Build.Construction.ElementLocation MatchOnMetadataLocation { get { throw null; } }
+        public string MatchOnMetadataOptions { get { throw null; } }
+        public Microsoft.Build.Construction.ElementLocation MatchOnMetadataOptionsLocation { get { throw null; } }
         public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance> Metadata { get { throw null; } }
         public string Remove { get { throw null; } }
         public Microsoft.Build.Construction.ElementLocation RemoveLocation { get { throw null; } }
diff --git a/scripts/Deploy-MSBuild.ps1 b/scripts/Deploy-MSBuild.ps1
index 7fb7115821e..125e9447ca5 100644
--- a/scripts/Deploy-MSBuild.ps1
+++ b/scripts/Deploy-MSBuild.ps1
@@ -8,15 +8,30 @@ Param(
   [string] $runtime = "Desktop"
 )
 
+Set-StrictMode -Version "Latest"
+$ErrorActionPreference = "Stop"
+
 function Copy-WithBackup ($origin) {
-    $destinationPath = Join-Path -Path $destination -ChildPath (Split-Path $origin -leaf)
+    $directoryPart = Join-Path -Path $destination $origin.IntermediaryDirectories 
+    $destinationPath = Join-Path -Path $directoryPart (Split-Path $origin.SourceFile -leaf)
 
     if (Test-Path $destinationPath -PathType Leaf) {
         # Back up previous copy of the file
         Copy-Item $destinationPath $BackupFolder -ErrorAction Stop
     }
 
-    Copy-Item $origin $destinationPath -ErrorAction Stop
+    if (!(Test-Path $directoryPart)) {
+        [system.io.directory]::CreateDirectory($directoryPart)
+    }
+
+    Copy-Item $origin.SourceFile $destinationPath -ErrorAction Stop
+
+    echo "Copied $($origin.SourceFile) to $destinationPath"
+}
+
+function FileToCopy([string] $sourceFileRelativeToRepoRoot, [string] $intermediaryDirectories)
+{
+    return [PSCustomObject]@{"SourceFile"=$([IO.Path]::Combine($PSScriptRoot, "..", $sourceFileRelativeToRepoRoot)); "IntermediaryDirectories"=$intermediaryDirectories}
 }
 
 # TODO: find destination in PATH if not specified
@@ -36,58 +51,65 @@ if ($runtime -eq "Desktop") {
     $targetFramework = "netcoreapp2.1"
 }
 
+$bootstrapBinDirectory = "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework"
+
 $filesToCopyToBin = @(
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Build.dll"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Build.Framework.dll"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Build.Tasks.Core.dll"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Build.Utilities.Core.dll"
-
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Common.CrossTargeting.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Common.CurrentVersion.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Common.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.CSharp.CrossTargeting.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.CSharp.CurrentVersion.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.CSharp.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Managed.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Managed.Before.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Managed.After.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Net.props"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.NetFramework.CurrentVersion.props"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.NetFramework.CurrentVersion.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.NetFramework.props"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.NetFramework.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.VisualBasic.CrossTargeting.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.VisualBasic.CurrentVersion.targets"
-    "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.VisualBasic.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Build.dll"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Build.Framework.dll"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Build.Tasks.Core.dll"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Build.Utilities.Core.dll"
+
+    FileToCopy "$bootstrapBinDirectory\en\Microsoft.Build.resources.dll" "en"
+    FileToCopy "$bootstrapBinDirectory\en\Microsoft.Build.Tasks.Core.resources.dll" "en"
+    FileToCopy "$bootstrapBinDirectory\en\Microsoft.Build.Utilities.Core.resources.dll" "en"
+    FileToCopy "$bootstrapBinDirectory\en\MSBuild.resources.dll" "en"
+
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Common.CrossTargeting.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Common.CurrentVersion.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Common.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.CSharp.CrossTargeting.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.CSharp.CurrentVersion.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.CSharp.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Managed.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Managed.Before.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Managed.After.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.Net.props"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.NetFramework.CurrentVersion.props"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.NetFramework.CurrentVersion.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.NetFramework.props"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.NetFramework.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.VisualBasic.CrossTargeting.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.VisualBasic.CurrentVersion.targets"
+    FileToCopy "$bootstrapBinDirectory\Microsoft.VisualBasic.targets"
 )
 
 if ($runtime -eq "Desktop") {
     $runtimeSpecificFiles = @(
-        "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\MSBuild.exe"
-        "artifacts\bin\Microsoft.Build.Conversion\$configuration\$targetFramework\Microsoft.Build.Conversion.Core.dll"
-        "artifacts\bin\Microsoft.Build.Engine\$configuration\$targetFramework\Microsoft.Build.Engine.dll"
-
-        "artifacts\bin\MSBuildTaskHost\$configuration\net35\MSBuildTaskHost.exe"
-        "artifacts\bin\MSBuildTaskHost\$configuration\net35\MSBuildTaskHost.pdb"
-
-        "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Data.Entity.targets"
-        "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.ServiceModel.targets"
-        "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.WinFx.targets"
-        "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.WorkflowBuildExtensions.targets"
-        "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Microsoft.Xaml.targets"
-        "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Workflow.targets"
-        "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\Workflow.VisualBasic.targets"
+        FileToCopy "$bootstrapBinDirectory\MSBuild.exe"
+        FileToCopy "artifacts\bin\Microsoft.Build.Conversion\$configuration\$targetFramework\Microsoft.Build.Conversion.Core.dll"
+        FileToCopy "artifacts\bin\Microsoft.Build.Engine\$configuration\$targetFramework\Microsoft.Build.Engine.dll"
+
+        FileToCopy "artifacts\bin\MSBuildTaskHost\$configuration\net35\MSBuildTaskHost.exe"
+        FileToCopy "artifacts\bin\MSBuildTaskHost\$configuration\net35\MSBuildTaskHost.pdb"
+
+        FileToCopy "$bootstrapBinDirectory\Microsoft.Data.Entity.targets"
+        FileToCopy "$bootstrapBinDirectory\Microsoft.ServiceModel.targets"
+        FileToCopy "$bootstrapBinDirectory\Microsoft.WinFx.targets"
+        FileToCopy "$bootstrapBinDirectory\Microsoft.WorkflowBuildExtensions.targets"
+        FileToCopy "$bootstrapBinDirectory\Microsoft.Xaml.targets"
+        FileToCopy "$bootstrapBinDirectory\Workflow.targets"
+        FileToCopy "$bootstrapBinDirectory\Workflow.VisualBasic.targets"
     )
 } else {
     $runtimeSpecificFiles = @(
-        "artifacts\bin\MSBuild.Bootstrap\$configuration\$targetFramework\MSBuild.dll"
+        FileToCopy "$bootstrapBinDirectory\MSBuild.dll"
     )
 }
 
 $filesToCopyToBin += $runtimeSpecificFiles
 
 foreach ($file in $filesToCopyToBin) {
-    Copy-WithBackup $([IO.Path]::Combine($PSScriptRoot, "..", $file))
+    Copy-WithBackup $file
 }
 
 Write-Host -ForegroundColor Green "Copy succeeded"
diff --git a/src/Build.OM.UnitTests/Definition/ProjectItem_Tests.cs b/src/Build.OM.UnitTests/Definition/ProjectItem_Tests.cs
index 7da61e2d3b8..1ee4bde1de2 100644
--- a/src/Build.OM.UnitTests/Definition/ProjectItem_Tests.cs
+++ b/src/Build.OM.UnitTests/Definition/ProjectItem_Tests.cs
@@ -16,6 +16,7 @@
 using Shouldly;
 using InvalidProjectFileException = Microsoft.Build.Exceptions.InvalidProjectFileException;
 using Xunit;
+using System.Runtime.InteropServices;
 
 namespace Microsoft.Build.UnitTests.OM.Definition
 {
@@ -2111,7 +2112,7 @@ public void RemoveShouldMatchNonCanonicPaths(string include, string remove)
 
             Assert.Empty(items);
         }
-        
+
         [Fact]
         public void RemoveShouldRespectCondition()
         {
@@ -2144,6 +2145,305 @@ public void RemoveWithConditionShouldNotApplyOnItemsIgnoringCondition()
             Assert.Equal(@"a;b;c", string.Join(";", project.ItemsIgnoringCondition.Select(i => i.EvaluatedInclude)));
         }
 
+        [Fact]
+        public void RemoveWithItemReferenceOnMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.FormatProjectContentsWithItemGroupFragment(
+                @"<I1 Include='a1' M1='1' M2='a'/>
+                <I1 Include='b1' M1='2' M2='x'/>
+                <I1 Include='c1' M1='3' M2='y'/>
+                <I1 Include='d1' M1='4' M2='b'/>
+
+                <I2 Include='a2' M1='x' m2='c'/>
+                <I2 Include='b2' M1='2' m2='x'/>
+                <I2 Include='c2' M1='3' m2='Y'/>
+                <I2 Include='d2' M1='y' m2='d'/>
+
+                <I2 Remove='@(I1)' MatchOnMetadata='m1'/>");
+
+            var project = ObjectModelHelpers.CreateInMemoryProject(content);
+            var items = project.ItemsIgnoringCondition.Where(i => i.ItemType.Equals("I2"));
+
+            items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "d2" });
+
+            items.ElementAt(0).GetMetadataValue("M1").ShouldBe("x");
+            items.ElementAt(0).GetMetadataValue("M2").ShouldBe("c");
+            items.ElementAt(1).GetMetadataValue("M1").ShouldBe("y");
+            items.ElementAt(1).GetMetadataValue("M2").ShouldBe("d");
+        }
+
+        [Fact]
+        public void RemoveWithItemReferenceOnCaseInsensitiveMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.FormatProjectContentsWithItemGroupFragment(
+                @"<I1 Include='a1' M1='1' M2='a'/>
+                <I1 Include='b1' M1='2' M2='x'/>
+                <I1 Include='c1' M1='3' M2='y'/>
+                <I1 Include='d1' M1='4' M2='b'/>
+
+                <I2 Include='a2' M1='x' m2='c'/>
+                <I2 Include='b2' M1='2' m2='x'/>
+                <I2 Include='c2' M1='3' m2='Y'/>
+                <I2 Include='d2' M1='y' m2='d'/>
+
+                <I2 Remove='@(I1)' MatchOnMetadata='m2' MatchOnMetadataOptions='CaseInsensitive' />");
+
+            var project = ObjectModelHelpers.CreateInMemoryProject(content);
+            var items = project.ItemsIgnoringCondition.Where(i => i.ItemType.Equals("I2"));
+
+            items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "d2" });
+
+            items.ElementAt(0).GetMetadataValue("M1").ShouldBe("x");
+            items.ElementAt(0).GetMetadataValue("M2").ShouldBe("c");
+            items.ElementAt(1).GetMetadataValue("M1").ShouldBe("y");
+            items.ElementAt(1).GetMetadataValue("M2").ShouldBe("d");
+        }
+
+        [Fact]
+        public void RemoveWithItemReferenceOnFilePathMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.FormatProjectContentsWithItemGroupFragment(
+                $@"<I1 Include='a1' M1='foo.txt\' M2='a'/>
+                <I1 Include='b1' M1='foo/bar.cs' M2='x'/>
+                <I1 Include='c1' M1='foo/bar.vb' M2='y'/>
+                <I1 Include='d1' M1='foo\foo\foo' M2='b'/>
+                <I1 Include='e1' M1='a/b/../c/./d' M2='1'/>
+                <I1 Include='f1' M1='{ ObjectModelHelpers.TempProjectDir }\b\c' M2='6'/>
+
+                <I2 Include='a2' M1='FOO.TXT' m2='c'/>
+                <I2 Include='b2' M1='foo/bar.txt' m2='x'/>
+                <I2 Include='c2' M1='/foo/BAR.vb\\/' m2='Y'/>
+                <I2 Include='d2' M1='foo/foo/foo/' m2='d'/>
+                <I2 Include='e2' M1='foo/foo/foo/' m2='c'/>
+                <I2 Include='f2' M1='b\c' m2='e'/>
+                <I2 Include='g2' M1='b\d\c' m2='f'/>
+
+                <I2 Remove='@(I1)' MatchOnMetadata='m1' MatchOnMetadataOptions='PathLike' />");
+
+            var project = ObjectModelHelpers.CreateInMemoryProject(content);
+            var items = project.ItemsIgnoringCondition.Where(i => i.ItemType.Equals("I2"));
+
+            if (FileUtilities.GetIsFileSystemCaseSensitive())
+            {
+                items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "b2", "c2", "g2" });
+
+                items.ElementAt(0).GetMetadataValue("M1").ShouldBe(@"FOO.TXT");
+                items.ElementAt(0).GetMetadataValue("M2").ShouldBe("c");
+                items.ElementAt(1).GetMetadataValue("M1").ShouldBe("foo/bar.txt");
+                items.ElementAt(1).GetMetadataValue("M2").ShouldBe("x");
+                items.ElementAt(2).GetMetadataValue("M1").ShouldBe(@"/foo/BAR.vb\\/");
+                items.ElementAt(2).GetMetadataValue("M2").ShouldBe("Y");
+                items.ElementAt(3).GetMetadataValue("M1").ShouldBe(@"b\d\c");
+                items.ElementAt(3).GetMetadataValue("M2").ShouldBe("f");
+            }
+            else
+            {
+                items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "b2", "c2", "g2" });
+
+                items.ElementAt(0).GetMetadataValue("M1").ShouldBe("foo/bar.txt");
+                items.ElementAt(0).GetMetadataValue("M2").ShouldBe("x");
+                items.ElementAt(1).GetMetadataValue("M1").ShouldBe(@"/foo/BAR.vb\\/");
+                items.ElementAt(1).GetMetadataValue("M2").ShouldBe("Y");
+                items.ElementAt(2).GetMetadataValue("M1").ShouldBe(@"b\d\c");
+                items.ElementAt(2).GetMetadataValue("M2").ShouldBe("f");
+            }
+        }
+
+        [Fact]
+        public void RemoveWithItemReferenceOnIntrinsicMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.FormatProjectContentsWithItemGroupFragment(
+                $@"<I1 Include='foo.txt' />
+                <I1 Include='bar.cs' />
+                <I1 Include='../bar.cs' />
+                <I1 Include='/foo/../bar.txt' />
+
+                <I2 Include='foo.txt' />
+                <I2 Include='../foo.txt' />
+                <I2 Include='/bar.txt' />
+                <I2 Include='/foo/bar.txt' />
+
+                <I2 Remove='@(I1)' MatchOnMetadata='FullPath' MatchOnMetadataOptions='PathLike' />");
+
+            var project = ObjectModelHelpers.CreateInMemoryProject(content);
+            var items = project.ItemsIgnoringCondition.Where(i => i.ItemType.Equals("I2"));
+
+            items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "../foo.txt", "/foo/bar.txt" });
+        }
+
+        [Fact]
+        public void RemoveWithPropertyReferenceInMatchOnMetadata()
+        {
+            string content = 
+                @"<Project>
+                    <PropertyGroup>
+                        <Meta1>v0</Meta1>
+                    </PropertyGroup>
+                    <ItemGroup>
+                        <I1 Include='a1' v0='1' M2='a'/>
+                        <I1 Include='b1' v0='2' M2='x'/>
+                        <I1 Include='c1' v0='3' M2='y'/>
+                        <I1 Include='d1' v0='4' M2='b'/>
+
+                        <I2 Include='a2' v0='x' m2='c'/>
+                        <I2 Include='b2' v0='2' m2='x'/>
+                        <I2 Include='c2' v0='3' m2='Y'/>
+                        <I2 Include='d2' v0='y' m2='d'/>
+
+                        <I2 Remove='@(I1)' MatchOnMetadata='$(Meta1)' />
+                    </ItemGroup>
+                </Project>";
+
+            using (var env = TestEnvironment.Create())
+            {
+                var project = ObjectModelHelpers.CreateInMemoryProject(env.CreateProjectCollection().Collection, content, null, null);
+
+                var items = project.ItemsIgnoringCondition.Where(i => i.ItemType.Equals("I2"));
+
+                items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "d2" });
+
+                items.ElementAt(0).GetMetadataValue("v0").ShouldBe("x");
+                items.ElementAt(0).GetMetadataValue("M2").ShouldBe("c");
+                items.ElementAt(1).GetMetadataValue("v0").ShouldBe("y");
+                items.ElementAt(1).GetMetadataValue("M2").ShouldBe("d");
+            }
+        }
+
+        [Fact]
+        public void RemoveWithItemReferenceInMatchOnMetadata()
+        {
+            string content =
+                @"<Project>
+                    <ItemGroup>
+                        <Meta2 Include='M2'/>
+
+                        <I1 Include='a1' v0='1' M2='a'/>
+                        <I1 Include='b1' v0='2' M2='x'/>
+                        <I1 Include='c1' v0='3' M2='y'/>
+                        <I1 Include='d1' v0='4' M2='b'/>
+
+                        <I2 Include='a2' v0='x' m2='c'/>
+                        <I2 Include='b2' v0='2' m2='x'/>
+                        <I2 Include='c2' v0='3' m2='Y'/>
+                        <I2 Include='d2' v0='y' m2='d'/>
+
+                        <I2 Remove='@(I1)' MatchOnMetadata='@(Meta2)' />
+                    </ItemGroup>
+                </Project>";
+
+            using (var env = TestEnvironment.Create())
+            {
+                var project = ObjectModelHelpers.CreateInMemoryProject(env.CreateProjectCollection().Collection, content, null, null);
+
+                var items = project.ItemsIgnoringCondition.Where(i => i.ItemType.Equals("I2"));
+
+                items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "c2", "d2" });
+
+                items.ElementAt(0).GetMetadataValue("v0").ShouldBe("x");
+                items.ElementAt(0).GetMetadataValue("M2").ShouldBe("c");
+                items.ElementAt(1).GetMetadataValue("v0").ShouldBe("3");
+                items.ElementAt(1).GetMetadataValue("M2").ShouldBe("Y");
+                items.ElementAt(2).GetMetadataValue("v0").ShouldBe("y");
+                items.ElementAt(2).GetMetadataValue("M2").ShouldBe("d");
+            }
+        }
+
+        [Fact]
+        public void KeepWithItemReferenceOnNonmatchingMetadata()
+        {
+            string content = ObjectModelHelpers.FormatProjectContentsWithItemGroupFragment(
+                @"<I1 Include='a1' a='1' b='a'/>
+                <I1 Include='b1' a='2' b='x'/>
+                <I1 Include='c1' a='3' b='y'/>
+                <I1 Include='d1' a='4' b='b'/>
+
+                <I2 Include='a2' c='x' d='c'/>
+                <I2 Include='b2' c='2' d='x'/>
+                <I2 Include='c2' c='3' d='Y'/>
+                <I2 Include='d2' c='y' d='d'/>
+
+                <I2 Remove='@(I1)' MatchOnMetadata='e' />");
+
+            var project = ObjectModelHelpers.CreateInMemoryProject(content);
+            var items = project.ItemsIgnoringCondition.Where(i => i.ItemType.Equals("I2"));
+
+            items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "b2", "c2", "d2" });
+
+            items.ElementAt(0).GetMetadataValue("c").ShouldBe("x");
+            items.ElementAt(1).GetMetadataValue("c").ShouldBe("2");
+            items.ElementAt(2).GetMetadataValue("c").ShouldBe("3");
+            items.ElementAt(3).GetMetadataValue("c").ShouldBe("y");
+            items.ElementAt(0).GetMetadataValue("d").ShouldBe("c");
+            items.ElementAt(1).GetMetadataValue("d").ShouldBe("x");
+            items.ElementAt(2).GetMetadataValue("d").ShouldBe("Y");
+            items.ElementAt(3).GetMetadataValue("d").ShouldBe("d");
+        }
+
+        [Fact]
+        public void FailWithMatchingMultipleMetadata()
+        {
+            string content = ObjectModelHelpers.FormatProjectContentsWithItemGroupFragment(
+                @"<I1 Include='a1' M1='1' M2='a'/>
+                <I1 Include='b1' M1='2' M2='x'/>
+                <I1 Include='c1' M1='3' M2='y'/>
+                <I1 Include='d1' M1='4' M2='b'/>
+
+                <I2 Include='a2' M1='x' m2='c'/>
+                <I2 Include='b2' M1='2' m2='x'/>
+                <I2 Include='c2' M1='3' m2='Y'/>
+                <I2 Include='d2' M1='y' m2='d'/>
+
+                <I2 Remove='@(I1)' MatchOnMetadata='M1;M2'/>");
+
+            Should.Throw<InvalidProjectFileException>(() => ObjectModelHelpers.CreateInMemoryProject(content))
+                .HelpKeyword.ShouldBe("MSBuild.OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem");
+        }
+
+        [Fact]
+        public void FailWithMultipleItemReferenceOnMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.FormatProjectContentsWithItemGroupFragment(
+                @"<I1 Include='a1' M1='1' M2='a'/>
+                <I1 Include='b1' M1='2' M2='x'/>
+                <I1 Include='c1' M1='3' M2='y'/>
+                <I1 Include='d1' M1='4' M2='b'/>
+
+                <I2 Include='a2' M1='x' m2='c'/>
+                <I2 Include='b2' M1='2' m2='x'/>
+                <I2 Include='c2' M1='3' m2='Y'/>
+                <I2 Include='d2' M1='y' m2='d'/>
+
+                <I3 Include='a3' M1='1' m2='b'/>
+                <I3 Include='b3' M1='x' m2='a'/>
+                <I3 Include='c3' M1='3' m2='2'/>
+                <I3 Include='d3' M1='y' m2='d'/>
+
+                <I3 Remove='@(I1);@(I2)' MatchOnMetadata='M1' />");
+
+            Should.Throw<InvalidProjectFileException>(() => ObjectModelHelpers.CreateInMemoryProject(content))
+                .HelpKeyword.ShouldBe("MSBuild.OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem");
+        }
+
+        [Fact]
+        public void FailWithMetadataItemReferenceOnMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.FormatProjectContentsWithItemGroupFragment(
+                @"<I1 Include='a1' M1='1' M2='a'/>
+                <I1 Include='b1' M1='2' M2='x'/>
+                <I1 Include='c1' M1='3' M2='y'/>
+                <I1 Include='d1' M1='4' M2='b'/>
+
+                <I2 Include='a2' M1='x' m2='c'/>
+                <I2 Include='b2' M1='2' m2='x'/>
+                <I2 Include='c2' M1='3' m2='Y'/>
+                <I2 Include='d2' M1='y' m2='d'/>
+
+                <I2 Remove='%(I1.M1)' MatchOnMetadata='M1' />");
+
+            Should.Throw<InvalidProjectFileException>(() => ObjectModelHelpers.CreateInMemoryProject(content))
+                .HelpKeyword.ShouldBe("MSBuild.OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem");
+        }
+
         [Fact]
         public void UpdateMetadataShouldAddOrReplace()
         {
@@ -2855,15 +3155,28 @@ public void UpdateAndRemoveShouldUseCaseInsensitiveMatching()
 
             IList<ProjectItem> items = ObjectModelHelpers.GetItemsFromFragment(content);
 
-            Assert.Single(items);
+            if (FileUtilities.GetIsFileSystemCaseSensitive())
+            {
+                var expectedUpdated = new Dictionary<string, string>
+                {
+                    {"m1", "m1_contents"},
+                    {"m2", "m2_contents"},
+                };
 
-            var expectedUpdated = new Dictionary<string, string>
+                ObjectModelHelpers.AssertItemHasMetadata(expectedUpdated, items[0]);
+            }
+            else
             {
-                {"m1", "m1_updated"},
-                {"m2", "m2_updated"},
-            };
+                items.ShouldHaveSingleItem();
 
-            ObjectModelHelpers.AssertItemHasMetadata(expectedUpdated, items[0]);
+                var expectedUpdated = new Dictionary<string, string>
+                {
+                    {"m1", "m1_updated"},
+                    {"m2", "m2_updated"},
+                };
+
+                ObjectModelHelpers.AssertItemHasMetadata(expectedUpdated, items[0]);
+            }
         }
 
         public static IEnumerable<Object[]> UpdateAndRemoveShouldWorkWithEscapedCharactersTestData
diff --git a/src/Build.OM.UnitTests/Definition/Project_Tests.cs b/src/Build.OM.UnitTests/Definition/Project_Tests.cs
index 2edf330dd9c..6ba9633aab7 100644
--- a/src/Build.OM.UnitTests/Definition/Project_Tests.cs
+++ b/src/Build.OM.UnitTests/Definition/Project_Tests.cs
@@ -21,8 +21,8 @@
 
 using Task = System.Threading.Tasks.Task;
 // can't use an actual ProvenanceResult because it points to a ProjectItemElement which is hard to mock.
-using ProvenanceResultTupleList = System.Collections.Generic.List<System.Tuple<string, Microsoft.Build.Evaluation.Operation, Microsoft.Build.Evaluation.Provenance, int>>;
-using GlobResultList = System.Collections.Generic.List<System.Tuple<string, string[], System.Collections.Immutable.ImmutableHashSet<string>, System.Collections.Immutable.ImmutableHashSet<string>>>;
+using ProvenanceResultTupleList = System.Collections.Generic.List<(string, Microsoft.Build.Evaluation.Operation, Microsoft.Build.Evaluation.Provenance, int)>;
+using GlobResultList = System.Collections.Generic.List<(string, string[], System.Collections.Immutable.ImmutableHashSet<string>, System.Collections.Immutable.ImmutableHashSet<string>)>;
 using InvalidProjectFileException = Microsoft.Build.Exceptions.InvalidProjectFileException;
 using ToolLocationHelper = Microsoft.Build.Utilities.ToolLocationHelper;
 using TargetDotNetFrameworkVersion = Microsoft.Build.Utilities.TargetDotNetFrameworkVersion;
@@ -2756,8 +2756,8 @@ public void GetItemProvenanceOnlyStringLiteral()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 1),
-                Tuple.Create("B", Operation.Exclude, Provenance.StringLiteral, 1)
+                ("A", Operation.Include, Provenance.StringLiteral, 1),
+                ("B", Operation.Exclude, Provenance.StringLiteral, 1)
             };
 
             AssertProvenanceResult(expected, project, "1");
@@ -2792,7 +2792,7 @@ public void GetItemProvenanceSimpleGlob()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Include, Provenance.Glob, 1),
+                ("A", Operation.Include, Provenance.Glob, 1),
             };
 
             AssertProvenanceResult(expected, project, "a");
@@ -2815,8 +2815,8 @@ public void GetItemProvenanceOnlyGlob()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Include, Provenance.Glob, 1),
-                Tuple.Create("B", Operation.Exclude, Provenance.Glob, 1)
+                ("A", Operation.Include, Provenance.Glob, 1),
+                ("B", Operation.Exclude, Provenance.Glob, 1)
             };
 
             AssertProvenanceResult(expected, project, "2.foo");
@@ -2836,14 +2836,14 @@ public void GetItemProvenanceGlobMatchesItselfAsGlob()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Include, Provenance.Glob, 1),
+                ("A", Operation.Include, Provenance.Glob, 1),
             };
 
             AssertProvenanceResult(expected, project, "ab*cd");
 
             expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("B", Operation.Include, Provenance.Glob, 1),
+                ("B", Operation.Include, Provenance.Glob, 1),
             };
 
             AssertProvenanceResult(expected, project, "tx?yz");
@@ -2867,7 +2867,7 @@ public void GetItemProvenanceResultsShouldBeInItemElementOrder()
             for (int i = 0; i < itemElements; i++)
             {
                 sb.AppendLine($"<i_{i} Include=\"a\"/>");
-                expected.Add(Tuple.Create($"i_{i}", Operation.Include, Provenance.StringLiteral, 1));
+                expected.Add(($"i_{i}", Operation.Include, Provenance.StringLiteral, 1));
             }
 
             project = string.Format(project, sb);
@@ -2890,8 +2890,8 @@ public void GetItemProvenanceShouldReturnTheSameResultsIfProjectIsReevaluated()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Include, Provenance.Glob, 1),
-                Tuple.Create("B", Operation.Exclude, Provenance.Glob, 1)
+                ("A", Operation.Include, Provenance.Glob, 1),
+                ("B", Operation.Exclude, Provenance.Glob, 1)
             };
 
             // Create a project. The initial evaluation does not record the information needed for GetItemProvenance
@@ -2923,7 +2923,7 @@ public void GetItemProvenanceShouldHandleComplexGlobExclusion()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Exclude, Provenance.Glob, 1)
+                ("A", Operation.Exclude, Provenance.Glob, 1)
             };
 
             AssertProvenanceResult(expected, project, @"bin\1.cs");
@@ -2960,8 +2960,8 @@ public void GetItemProvenanceGlobAndLiteral()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Include, Provenance.Glob | Provenance.StringLiteral, 3),
-                Tuple.Create("B", Operation.Exclude, Provenance.Glob | Provenance.StringLiteral, 4)
+                ("A", Operation.Include, Provenance.Glob | Provenance.StringLiteral, 3),
+                ("B", Operation.Exclude, Provenance.Glob | Provenance.StringLiteral, 4)
             };
 
             AssertProvenanceResult(expected, project, "1.foo");
@@ -2983,8 +2983,8 @@ public void GetItemProvenanceByItemType()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("B", Operation.Include, Provenance.Glob | Provenance.StringLiteral, 2),
-                Tuple.Create("B", Operation.Exclude, Provenance.Glob | Provenance.StringLiteral, 2)
+                ("B", Operation.Include, Provenance.Glob | Provenance.StringLiteral, 2),
+                ("B", Operation.Exclude, Provenance.Glob | Provenance.StringLiteral, 2)
             };
 
             AssertProvenanceResult(expected, project, "1.foo", "B");
@@ -3008,10 +3008,10 @@ public static IEnumerable<Object[]> GetItemProvenanceByProjectItemTestData
                     0, // first item 'a' from the include
                     new ProvenanceResultTupleList()
                     {
-                        Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 2),
-                        Tuple.Create("A", Operation.Update, Provenance.StringLiteral, 1),
-                        Tuple.Create("A", Operation.Update, Provenance.Glob, 1),
-                        Tuple.Create("A", Operation.Update, Provenance.StringLiteral | Provenance.Glob, 2)
+                        ("A", Operation.Include, Provenance.StringLiteral, 2),
+                        ("A", Operation.Update, Provenance.StringLiteral, 1),
+                        ("A", Operation.Update, Provenance.Glob, 1),
+                        ("A", Operation.Update, Provenance.StringLiteral | Provenance.Glob, 2)
                     }
                 };
 
@@ -3028,7 +3028,7 @@ public static IEnumerable<Object[]> GetItemProvenanceByProjectItemTestData
                     2, // item 'a' from last include
                     new ProvenanceResultTupleList()
                     {
-                        Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 1)
+                        ("A", Operation.Include, Provenance.StringLiteral, 1)
                     }
                 };
 
@@ -3045,7 +3045,7 @@ public static IEnumerable<Object[]> GetItemProvenanceByProjectItemTestData
                     0, // item 'a' from first include
                     new ProvenanceResultTupleList()
                     {
-                        Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 1)
+                        ("A", Operation.Include, Provenance.StringLiteral, 1)
                     }
                 };
 
@@ -3076,9 +3076,9 @@ public static IEnumerable<Object[]> GetItemProvenanceByProjectItemTestData
                     2, // item 'a' from second include
                     new ProvenanceResultTupleList
                     {
-                        Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 1),
-                        Tuple.Create("A", Operation.Update, Provenance.StringLiteral, 2),
-                        Tuple.Create("A", Operation.Update, Provenance.StringLiteral | Provenance.Glob, 2)
+                        ("A", Operation.Include, Provenance.StringLiteral, 1),
+                        ("A", Operation.Update, Provenance.StringLiteral, 2),
+                        ("A", Operation.Update, Provenance.StringLiteral | Provenance.Glob, 2)
                     }
                 };
             }
@@ -3110,8 +3110,8 @@ public void GetItemProvenanceWhenExcludeHasIndirectReferences()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("B", Operation.Include, Provenance.StringLiteral, 1),
-                Tuple.Create("A", Operation.Exclude, Provenance.Inconclusive | Provenance.StringLiteral, 3)
+                ("B", Operation.Include, Provenance.StringLiteral, 1),
+                ("A", Operation.Exclude, Provenance.Inconclusive | Provenance.StringLiteral, 3)
             };
 
             AssertProvenanceResult(expected, project, "1");
@@ -3136,9 +3136,9 @@ public void GetItemProvenanceWhenIncludeHasIndirectReferences()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("B", Operation.Include, Provenance.StringLiteral, 1),
-                Tuple.Create("A", Operation.Include, Provenance.Inconclusive | Provenance.StringLiteral, 3),
-                Tuple.Create("C", Operation.Include, Provenance.Inconclusive, 3)
+                ("B", Operation.Include, Provenance.StringLiteral, 1),
+                ("A", Operation.Include, Provenance.Inconclusive | Provenance.StringLiteral, 3),
+                ("C", Operation.Include, Provenance.Inconclusive, 3)
             };
 
             AssertProvenanceResult(expected, project, "1");
@@ -3162,8 +3162,8 @@ public void GetItemProvenanceWhenIncludeHasIndirectItemReferencesAndOnlyGlobsExi
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("B", Operation.Include, Provenance.StringLiteral, 1),
-                Tuple.Create("A", Operation.Include, Provenance.Inconclusive | Provenance.Glob, 3)
+                ("B", Operation.Include, Provenance.StringLiteral, 1),
+                ("A", Operation.Include, Provenance.Inconclusive | Provenance.Glob, 3)
             };
 
             AssertProvenanceResult(expected, project, "1");
@@ -3190,8 +3190,8 @@ public void GetItemProvenanceShouldReturnInconclusiveWhenIndirectPropertyDoesNot
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("B", Operation.Include, Provenance.StringLiteral | Provenance.Inconclusive, 1),
-                Tuple.Create("C", Operation.Include, Provenance.StringLiteral, 1)
+                ("B", Operation.Include, Provenance.StringLiteral | Provenance.Inconclusive, 1),
+                ("C", Operation.Include, Provenance.StringLiteral, 1)
             };
 
             AssertProvenanceResult(expected, project, "a");
@@ -3261,7 +3261,7 @@ public void GetItemProvenanceMatchesLiteralsWithNonCanonicPaths()
 
             var expected1Foo = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 3)
+                ("A", Operation.Include, Provenance.StringLiteral, 3)
             };
 
             AssertProvenanceResult(expected1Foo, projectContents, "1.foo");
@@ -3275,7 +3275,7 @@ public void GetItemProvenanceMatchesLiteralsWithNonCanonicPaths()
 
                 var expected2Foo = new ProvenanceResultTupleList
                 {
-                    Tuple.Create("B", Operation.Include, Provenance.StringLiteral, 1)
+                    ("B", Operation.Include, Provenance.StringLiteral, 1)
                 };
 
                 AssertProvenanceResult(expected2Foo, project.GetItemProvenance(@"../x/d13/../../x/d12/d23/../2.foo"));
@@ -3305,8 +3305,8 @@ public void GetItemProvenanceMatchesAbsoluteAndRelativePaths()
 
                 var expectedProvenance = new ProvenanceResultTupleList
                 {
-                    Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 1),
-                    Tuple.Create("B", Operation.Include, Provenance.StringLiteral | Provenance.Inconclusive, 1)
+                    ("A", Operation.Include, Provenance.StringLiteral, 1),
+                    ("B", Operation.Include, Provenance.StringLiteral | Provenance.Inconclusive, 1)
                 };
 
                 AssertProvenanceResult(expectedProvenance, project.GetItemProvenance(@"1.foo"));
@@ -3331,7 +3331,7 @@ public void GetItemProvenanceShouldNotFailWithIllegalPathCharacters()
 
             AssertProvenanceResult(expected, project, @"?:/*\|");
 
-            expected.Add(Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 1));
+            expected.Add(("A", Operation.Include, Provenance.StringLiteral, 1));
 
             AssertProvenanceResult(expected, project, @"|:/\");
         }
@@ -3354,7 +3354,6 @@ public void GetItemProvenanceShouldNotFailWithStringsExceedingMaxPath()
             AssertProvenanceResult(expected, project, longString + "a");
         }
 
-        // todo: on xplat, split this to windows and non-windows test
         [Fact]
         public void GetItemProvenancePathMatchingShouldBeCaseInsensitive()
         {
@@ -3368,10 +3367,10 @@ public void GetItemProvenancePathMatchingShouldBeCaseInsensitive()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 1)
+                ("A", Operation.Include, Provenance.StringLiteral, 1)
             };
 
-            AssertProvenanceResult(expected, project, "A");
+            AssertProvenanceResult(expected, project, FileUtilities.GetIsFileSystemCaseSensitive() ? "a" : "A");
         }
 
 
@@ -3397,9 +3396,9 @@ public static IEnumerable<object[]> GetItemProvenanceShouldWorkWithEscapedCharac
                     // the expected GetItemProvenance result
                     new ProvenanceResultTupleList
                     {
-                        Tuple.Create("A", Operation.Include, Provenance.StringLiteral | Provenance.Glob, 3),
-                        Tuple.Create("A", Operation.Update, Provenance.StringLiteral | Provenance.Glob, 3),
-                        Tuple.Create("A", Operation.Remove, Provenance.StringLiteral | Provenance.Glob, 3)
+                        ("A", Operation.Include, Provenance.StringLiteral | Provenance.Glob, 3),
+                        ("A", Operation.Update, Provenance.StringLiteral | Provenance.Glob, 3),
+                        ("A", Operation.Remove, Provenance.StringLiteral | Provenance.Glob, 3)
                     }
                 };
 
@@ -3416,9 +3415,9 @@ public static IEnumerable<object[]> GetItemProvenanceShouldWorkWithEscapedCharac
                     "abc",
                     new ProvenanceResultTupleList
                     {
-                        Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 1),
-                        Tuple.Create("A", Operation.Update, Provenance.StringLiteral, 1),
-                        Tuple.Create("A", Operation.Remove, Provenance.StringLiteral, 1)
+                        ("A", Operation.Include, Provenance.StringLiteral, 1),
+                        ("A", Operation.Update, Provenance.StringLiteral, 1),
+                        ("A", Operation.Remove, Provenance.StringLiteral, 1)
                     }
                 };
 
@@ -3449,9 +3448,9 @@ public static IEnumerable<object[]> GetItemProvenanceShouldWorkWithEscapedCharac
                     "abc",
                     new ProvenanceResultTupleList
                     {
-                        Tuple.Create("A", Operation.Include, Provenance.Glob, 1),
-                        Tuple.Create("A", Operation.Update, Provenance.Glob, 1),
-                        Tuple.Create("A", Operation.Remove, Provenance.Glob, 1)
+                        ("A", Operation.Include, Provenance.Glob, 1),
+                        ("A", Operation.Update, Provenance.Glob, 1),
+                        ("A", Operation.Remove, Provenance.Glob, 1)
                     }
                 };
 
@@ -3475,9 +3474,9 @@ public static IEnumerable<object[]> GetItemProvenanceShouldWorkWithEscapedCharac
                     "a%62c",
                     new ProvenanceResultTupleList
                     {
-                        Tuple.Create("A", Operation.Include, Provenance.Glob, 1),
-                        Tuple.Create("A", Operation.Update, Provenance.Glob, 1),
-                        Tuple.Create("A", Operation.Remove, Provenance.Glob, 1)
+                        ("A", Operation.Include, Provenance.Glob, 1),
+                        ("A", Operation.Update, Provenance.Glob, 1),
+                        ("A", Operation.Remove, Provenance.Glob, 1)
                     }
                 };
 
@@ -3487,9 +3486,9 @@ public static IEnumerable<object[]> GetItemProvenanceShouldWorkWithEscapedCharac
                     "abcdefc",
                     new ProvenanceResultTupleList
                     {
-                        Tuple.Create("A", Operation.Include, Provenance.Glob, 1),
-                        Tuple.Create("A", Operation.Update, Provenance.Glob, 1),
-                        Tuple.Create("A", Operation.Remove, Provenance.Glob, 1)
+                        ("A", Operation.Include, Provenance.Glob, 1),
+                        ("A", Operation.Update, Provenance.Glob, 1),
+                        ("A", Operation.Remove, Provenance.Glob, 1)
                     }
                 };
 
@@ -3499,9 +3498,9 @@ public static IEnumerable<object[]> GetItemProvenanceShouldWorkWithEscapedCharac
                     "a%62%61c",
                     new ProvenanceResultTupleList
                     {
-                        Tuple.Create("A", Operation.Include, Provenance.Glob, 1),
-                        Tuple.Create("A", Operation.Update, Provenance.Glob, 1),
-                        Tuple.Create("A", Operation.Remove, Provenance.Glob, 1)
+                        ("A", Operation.Include, Provenance.Glob, 1),
+                        ("A", Operation.Update, Provenance.Glob, 1),
+                        ("A", Operation.Remove, Provenance.Glob, 1)
                     }
                 };
             }
@@ -3534,10 +3533,10 @@ public void GetItemProvenanceShouldWorkWithUpdateElements()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 1),
-                Tuple.Create("C", Operation.Update, Provenance.StringLiteral, 1),
-                Tuple.Create("D", Operation.Update, Provenance.StringLiteral | Provenance.Glob, 2),
-                Tuple.Create("E", Operation.Update, Provenance.Glob | Provenance.Inconclusive, 3)
+                ("A", Operation.Include, Provenance.StringLiteral, 1),
+                ("C", Operation.Update, Provenance.StringLiteral, 1),
+                ("D", Operation.Update, Provenance.StringLiteral | Provenance.Glob, 2),
+                ("E", Operation.Update, Provenance.Glob | Provenance.Inconclusive, 3)
             };
 
             AssertProvenanceResult(expected, project, "1.foo");
@@ -3564,10 +3563,10 @@ public void GetItemProvenanceShouldWorkWithRemoveElements()
 
             var expected = new ProvenanceResultTupleList
             {
-                Tuple.Create("A", Operation.Include, Provenance.StringLiteral, 1),
-                Tuple.Create("C", Operation.Remove, Provenance.StringLiteral, 1),
-                Tuple.Create("D", Operation.Remove, Provenance.StringLiteral | Provenance.Glob, 2),
-                Tuple.Create("E", Operation.Remove, Provenance.Glob | Provenance.Inconclusive, 3)
+                ("A", Operation.Include, Provenance.StringLiteral, 1),
+                ("C", Operation.Remove, Provenance.StringLiteral, 1),
+                ("D", Operation.Remove, Provenance.StringLiteral | Provenance.Glob, 2),
+                ("E", Operation.Remove, Provenance.Glob | Provenance.Inconclusive, 3)
             };
 
             AssertProvenanceResult(expected, project, "1.foo");
@@ -3601,7 +3600,7 @@ public void GetItemProvenanceShouldBeSensitiveToGlobbingCone(string includeGlob,
                 expectedProvenance = provenanceShouldFindAMatch
                     ? new ProvenanceResultTupleList
                     {
-                        Tuple.Create("A", Operation.Include, provenanceKind, 1)
+                        ("A", Operation.Include, provenanceKind, 1)
                     }
                     : new ProvenanceResultTupleList();
 
@@ -3676,7 +3675,7 @@ public void GetAllGlobsShouldFindDirectlyReferencedGlobs()
             var expectedExcludes = new[] { "1", "*", "3" }.ToImmutableHashSet();
             var expected = new GlobResultList
             {
-                Tuple.Create("A", expectedIncludes, expectedExcludes, ImmutableHashSet.Create<string>())
+                ("A", expectedIncludes, expectedExcludes, ImmutableHashSet.Create<string>())
             };
 
             AssertGlobResult(expected, project);
@@ -3699,8 +3698,8 @@ public void GetAllGlobsShouldFindAllExcludesAndRemoves()
 
             var expected = new GlobResultList
             {
-                Tuple.Create("A", new []{"**"}, new [] {"e**"}.ToImmutableHashSet(), new [] {"c"}.ToImmutableHashSet()),
-                Tuple.Create("A", new []{"*"}, new [] {"e*"}.ToImmutableHashSet(), new [] {"c", "b", "a"}.ToImmutableHashSet()),
+                ("A", new []{"**"}, new [] {"e**"}.ToImmutableHashSet(), new [] {"c"}.ToImmutableHashSet()),
+                ("A", new []{"*"}, new [] {"e*"}.ToImmutableHashSet(), new [] {"c", "b", "a"}.ToImmutableHashSet()),
             };
 
             AssertGlobResult(expected, project);
@@ -3813,7 +3812,7 @@ public void GetAllGlobsShouldFindGlobsByItemType()
             var expectedExcludes = new[] { "1", "*", "3" }.ToImmutableHashSet();
             var expected = new GlobResultList
             {
-                Tuple.Create("A", expectedIncludes, expectedExcludes, ImmutableHashSet<string>.Empty)
+                ("A", expectedIncludes, expectedExcludes, ImmutableHashSet<string>.Empty)
             };
 
             AssertGlobResult(expected, project, "A");
@@ -3836,7 +3835,7 @@ public void GetAllGlobsShouldFindIndirectlyReferencedGlobsFromProperties()
 
             var expected = new GlobResultList
             {
-                Tuple.Create("A", new []{"*"}, new[] {"*"}.ToImmutableHashSet(), ImmutableHashSet<string>.Empty),
+                ("A", new []{"*"}, new[] {"*"}.ToImmutableHashSet(), ImmutableHashSet<string>.Empty),
             };
 
             AssertGlobResult(expected, project);
@@ -3864,8 +3863,8 @@ public void GetAllGlobsShouldNotFindIndirectlyReferencedGlobsFromItems()
 
                 var expected = new GlobResultList
                 {
-                    Tuple.Create("C", new []{"**"}, new [] {"build.proj", "a", "b"}.ToImmutableHashSet(), new [] {"build.proj", "a", "b"}.ToImmutableHashSet()),
-                    Tuple.Create("A", new []{"*"}, ImmutableHashSet<string>.Empty, ImmutableHashSet<string>.Empty)
+                    ("C", new []{"**"}, new [] {"build.proj", "a", "b"}.ToImmutableHashSet(), new [] {"build.proj", "a", "b"}.ToImmutableHashSet()),
+                    ("A", new []{"*"}, ImmutableHashSet<string>.Empty, ImmutableHashSet<string>.Empty)
                 };
 
                 AssertGlobResultsEqual(expected, globResult);
diff --git a/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs b/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
index d5752c34fd5..f43d6e7718c 100644
--- a/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
@@ -1517,7 +1517,10 @@ public void CancelledBuild()
 
             asyncResult.ExecuteAsync(null, null);
             _buildManager.CancelAllSubmissions();
-            asyncResult.WaitHandle.WaitOne();
+            // This test intermittently hangs. This timeout is designed to prevent that, turning a hang into a failure.
+            // Todo: Investigate why this test sometimes hangs.
+            asyncResult.WaitHandle.WaitOne(TimeSpan.FromSeconds(10));
+            asyncResult.IsCompleted.ShouldBeTrue("Failing to complete by this point indicates a hang.");
             BuildResult result = asyncResult.BuildResult;
             _buildManager.EndBuild();
 
@@ -2297,8 +2300,10 @@ public void CacheLifetime()
         /// overall build result -- and thus the return value of the MSBuild task -- should reflect
         /// that failure. 
         /// </summary>
-        [Fact]
-        public void FailedAfterTargetInP2PShouldCauseOverallBuildFailure()
+        [Theory]
+        [InlineData(false)]
+        [InlineData(true)]
+        public void FailedAfterTargetInP2PShouldCauseOverallBuildFailure(bool disableInProcNode)
         {
             var projA = _env.CreateFile(".proj").Path;
             var projB = _env.CreateFile(".proj").Path;
@@ -2328,6 +2333,7 @@ public void FailedAfterTargetInP2PShouldCauseOverallBuildFailure()
             File.WriteAllText(projA, CleanupFileContents(contentsA));
             File.WriteAllText(projB, CleanupFileContents(contentsB));
 
+            _parameters.DisableInProcNode = disableInProcNode;
             _buildManager.BeginBuild(_parameters);
             var data = new BuildRequestData(projA, new Dictionary<string, string>(), null, new[] { "Build" }, new HostServices());
             BuildResult result = _buildManager.PendBuildRequest(data).Execute();
@@ -2343,8 +2349,10 @@ public void FailedAfterTargetInP2PShouldCauseOverallBuildFailure()
         /// that failure.  Specifically tests where there are multiple entrypoint targets with 
         /// AfterTargets, only one of which fails. 
         /// </summary>
-        [Fact]
-        public void FailedAfterTargetInP2PShouldCauseOverallBuildFailure_MultipleEntrypoints()
+        [Theory]
+        [InlineData(false)]
+        [InlineData(true)]
+        public void FailedAfterTargetInP2PShouldCauseOverallBuildFailure_MultipleEntrypoints(bool disableInProcNode)
         {
             var projA = _env.CreateFile(".proj").Path;
             var projB = _env.CreateFile(".proj").Path;
@@ -2386,6 +2394,7 @@ public void FailedAfterTargetInP2PShouldCauseOverallBuildFailure_MultipleEntrypo
             File.WriteAllText(projA, CleanupFileContents(contentsA));
             File.WriteAllText(projB, CleanupFileContents(contentsB));
 
+            _parameters.DisableInProcNode = disableInProcNode;
             _buildManager.BeginBuild(_parameters);
             var data = new BuildRequestData(projA, new Dictionary<string, string>(), null, new[] { "Build" }, new HostServices());
             BuildResult result = _buildManager.PendBuildRequest(data).Execute();
@@ -2406,8 +2415,10 @@ public void FailedAfterTargetInP2PShouldCauseOverallBuildFailure_MultipleEntrypo
         /// that failure. This should also be true if the AfterTarget is an AfterTarget of the 
         /// entrypoint target.
         /// </summary>
-        [Fact]
-        public void FailedNestedAfterTargetInP2PShouldCauseOverallBuildFailure()
+        [Theory]
+        [InlineData(false)]
+        [InlineData(true)]
+        public void FailedNestedAfterTargetInP2PShouldCauseOverallBuildFailure(bool disableInProcNode)
         {
             var projA = _env.CreateFile(".proj").Path;
             var projB = _env.CreateFile(".proj").Path;
@@ -2441,6 +2452,7 @@ public void FailedNestedAfterTargetInP2PShouldCauseOverallBuildFailure()
             File.WriteAllText(projA, CleanupFileContents(contentsA));
             File.WriteAllText(projB, CleanupFileContents(contentsB));
 
+            _parameters.DisableInProcNode = disableInProcNode;
             _buildManager.BeginBuild(_parameters);
             var data = new BuildRequestData(projA, new Dictionary<string, string>(), null, new[] { "Build" }, new HostServices());
             BuildResult result = _buildManager.PendBuildRequest(data).Execute();
diff --git a/src/Build.UnitTests/BackEnd/BuildResult_Tests.cs b/src/Build.UnitTests/BackEnd/BuildResult_Tests.cs
index af9bf647c5d..0db697ff651 100644
--- a/src/Build.UnitTests/BackEnd/BuildResult_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/BuildResult_Tests.cs
@@ -10,8 +10,8 @@
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Unittest;
-using Shouldly;
 using Xunit;
+
 using TaskItem = Microsoft.Build.Execution.ProjectItemInstance.TaskItem;
 
 namespace Microsoft.Build.UnitTests.BackEnd
diff --git a/src/Build.UnitTests/BackEnd/FailingBuilderTask.cs b/src/Build.UnitTests/BackEnd/FailingBuilderTask.cs
new file mode 100644
index 00000000000..7371e45ffd4
--- /dev/null
+++ b/src/Build.UnitTests/BackEnd/FailingBuilderTask.cs
@@ -0,0 +1,24 @@
+﻿// Copyright (c) Microsoft. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+using System.Collections;
+using Microsoft.Build.Framework;
+using Microsoft.Build.Utilities;
+
+namespace Microsoft.Build.UnitTests
+{
+    public  class FailingBuilderTask : Task
+    {
+        public FailingBuilderTask()
+            : base(null)
+        { }
+
+        public override bool Execute()
+        {
+            // BuildEngine.BuildProjectFile is how the GenerateTemporaryTargetAssembly task builds projects.
+            return BuildEngine.BuildProjectFile(CurrentProject, new string[] { "ErrorTask" }, new Hashtable(), null);
+        }
+
+        [Required]
+        public string CurrentProject { get; set; }
+    }
+}
diff --git a/src/Build.UnitTests/BackEnd/GenerateTemporaryTargetAssembly_Tests.cs b/src/Build.UnitTests/BackEnd/GenerateTemporaryTargetAssembly_Tests.cs
new file mode 100644
index 00000000000..5faa5279a03
--- /dev/null
+++ b/src/Build.UnitTests/BackEnd/GenerateTemporaryTargetAssembly_Tests.cs
@@ -0,0 +1,36 @@
+﻿// Copyright (c) Microsoft. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+using Microsoft.Build.UnitTests;
+using Shouldly;
+using System.Linq;
+using System.Reflection;
+using Xunit;
+
+namespace Microsoft.Build.Engine.UnitTests.BackEnd
+{
+    sealed public class GenerateTemporaryTargetAssembly_Tests
+    {
+        [Fact]
+        public void FailsWithOnlyTargetErrors()
+        {
+            using (TestEnvironment testenv = TestEnvironment.Create())
+            {
+                TransientTestFile otherproj = testenv.CreateFile("otherproj.csproj", @"
+<Project>
+    <Target Name=""ErrorTask"">
+        <Error Text=""Task successfully failed."" />
+    </Target>
+</Project>");
+                MockLogger logger = ObjectModelHelpers.BuildProjectExpectFailure(@$"
+<Project>
+    <UsingTask TaskName=""FailingBuilderTask"" AssemblyFile=""{Assembly.GetExecutingAssembly().Location}"" />
+    <Target Name=""MyTarget"">
+        <FailingBuilderTask CurrentProject=""{otherproj.Path}"" />
+    </Target>
+</Project>");
+                logger.ErrorCount.ShouldBe(1);
+                logger.Errors.First().Message.ShouldBe("Task successfully failed.");
+            }
+        }
+    }
+}
diff --git a/src/Build.UnitTests/BackEnd/IntrinsicTask_Tests.cs b/src/Build.UnitTests/BackEnd/IntrinsicTask_Tests.cs
index 6351441a858..ff272e8da60 100644
--- a/src/Build.UnitTests/BackEnd/IntrinsicTask_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/IntrinsicTask_Tests.cs
@@ -17,8 +17,7 @@
 using Microsoft.Build.Execution;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
-
-
+using Shouldly;
 using InvalidProjectFileException = Microsoft.Build.Exceptions.InvalidProjectFileException;
 using NodeLoggingContext = Microsoft.Build.BackEnd.Logging.NodeLoggingContext;
 using Xunit;
@@ -1714,6 +1713,366 @@ public void RemoveAllItemsInList()
             Assert.Empty(lookup.GetItems("i1"));
         }
 
+        [Fact]
+        public void RemoveWithItemReferenceOnMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.CleanupFileContents(
+                @"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
+                    <Target Name='t'>
+                        <ItemGroup>
+                            <I1 Include='a1' M1='1' M2='a'/>
+                            <I1 Include='b1' M1='2' M2='x'/>
+                            <I1 Include='c1' M1='3' M2='y'/>
+                            <I1 Include='d1' M1='4' M2='b'/>
+
+                            <I2 Include='a2' M1='x' m2='c'/>
+                            <I2 Include='b2' M1='2' m2='x'/>
+                            <I2 Include='c2' M1='3' m2='Y'/>
+                            <I2 Include='d2' M1='y' m2='d'/>
+
+                            <I2 Remove='@(I1)' MatchOnMetadata='m1' />
+                        </ItemGroup>
+                    </Target></Project>");
+            IntrinsicTask task = CreateIntrinsicTask(content);
+            Lookup lookup = LookupHelpers.CreateEmptyLookup();
+            ExecuteTask(task, lookup);
+
+            var items = lookup.GetItems("I2");
+
+            items.Select(i => i.EvaluatedInclude).ShouldBe(new []{"a2", "d2"});
+
+            items.ElementAt(0).GetMetadataValue("M1").ShouldBe("x");
+            items.ElementAt(0).GetMetadataValue("M2").ShouldBe("c");
+            items.ElementAt(1).GetMetadataValue("M1").ShouldBe("y");
+            items.ElementAt(1).GetMetadataValue("M2").ShouldBe("d");
+        }
+
+        [Fact]
+        public void RemoveWithItemReferenceOnCaseInsensitiveMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.CleanupFileContents(
+                @"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
+                    <Target Name='t'>
+                        <ItemGroup>
+                            <I1 Include='a1' M1='1' M2='a'/>
+                            <I1 Include='b1' M1='2' M2='x'/>
+                            <I1 Include='c1' M1='3' M2='y'/>
+                            <I1 Include='d1' M1='4' M2='b'/>
+
+                            <I2 Include='a2' M1='x' m2='c'/>
+                            <I2 Include='b2' M1='2' m2='x'/>
+                            <I2 Include='c2' M1='3' m2='Y'/>
+                            <I2 Include='d2' M1='y' m2='d'/>
+
+                            <I2 Remove='@(I1)' MatchOnMetadata='m2' MatchOnMetadataOptions='CaseInsensitive' />
+                        </ItemGroup>
+                    </Target></Project>");
+            IntrinsicTask task = CreateIntrinsicTask(content);
+            Lookup lookup = LookupHelpers.CreateEmptyLookup();
+            ExecuteTask(task, lookup);
+
+            var items = lookup.GetItems("I2");
+
+            items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "d2" });
+
+            items.ElementAt(0).GetMetadataValue("M1").ShouldBe("x");
+            items.ElementAt(0).GetMetadataValue("M2").ShouldBe("c");
+            items.ElementAt(1).GetMetadataValue("M1").ShouldBe("y");
+            items.ElementAt(1).GetMetadataValue("M2").ShouldBe("d");
+        }
+
+        [Fact]
+        public void RemoveWithItemReferenceOnFilePathMatchingMetadata()
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                env.SetCurrentDirectory(Environment.CurrentDirectory);
+                string content = ObjectModelHelpers.CleanupFileContents(
+                    $@"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
+                    <Target Name='t'>
+                        <ItemGroup>
+                            <I1 Include='a1' M1='foo.txt\' M2='a'/>
+                            <I1 Include='b1' M1='foo/bar.cs' M2='x'/>
+                            <I1 Include='c1' M1='foo/bar.vb' M2='y'/>
+                            <I1 Include='d1' M1='foo\foo\foo' M2='b'/>
+                            <I1 Include='e1' M1='a/b/../c/./d' M2='1'/>
+                            <I1 Include='f1' M1='{ Environment.CurrentDirectory }\b\c' M2='6'/>
+
+                            <I2 Include='a2' M1='FOO.TXT' m2='c'/>
+                            <I2 Include='b2' M1='foo/bar.txt' m2='x'/>
+                            <I2 Include='c2' M1='/foo/BAR.vb\\/' m2='Y'/>
+                            <I2 Include='d2' M1='foo/foo/foo/' m2='d'/>
+                            <I2 Include='e2' M1='foo/foo/foo/' m2='c'/>
+                            <I2 Include='f2' M1='b\c' m2='e'/>
+                            <I2 Include='g2' M1='b\d\c' m2='f'/>
+
+                            <I2 Remove='@(I1)' MatchOnMetadata='m1' MatchOnMetadataOptions='PathLike' />
+                        </ItemGroup>
+                    </Target></Project>");
+                IntrinsicTask task = CreateIntrinsicTask(content);
+                Lookup lookup = LookupHelpers.CreateEmptyLookup();
+                ExecuteTask(task, lookup);
+
+                var items = lookup.GetItems("I2");
+
+                if (FileUtilities.GetIsFileSystemCaseSensitive())
+                {
+                    items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "b2", "c2", "g2" });
+
+                    items.ElementAt(0).GetMetadataValue("M1").ShouldBe(@"FOO.TXT");
+                    items.ElementAt(0).GetMetadataValue("M2").ShouldBe("c");
+                    items.ElementAt(1).GetMetadataValue("M1").ShouldBe("foo/bar.txt");
+                    items.ElementAt(1).GetMetadataValue("M2").ShouldBe("x");
+                    items.ElementAt(2).GetMetadataValue("M1").ShouldBe(@"/foo/BAR.vb\\/");
+                    items.ElementAt(2).GetMetadataValue("M2").ShouldBe("Y");
+                    items.ElementAt(3).GetMetadataValue("M1").ShouldBe(@"b\d\c");
+                    items.ElementAt(3).GetMetadataValue("M2").ShouldBe("f");
+                }
+                else
+                {
+                    items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "b2", "c2", "g2" });
+
+                    items.ElementAt(0).GetMetadataValue("M1").ShouldBe("foo/bar.txt");
+                    items.ElementAt(0).GetMetadataValue("M2").ShouldBe("x");
+                    items.ElementAt(1).GetMetadataValue("M1").ShouldBe(@"/foo/BAR.vb\\/");
+                    items.ElementAt(1).GetMetadataValue("M2").ShouldBe("Y");
+                    items.ElementAt(2).GetMetadataValue("M1").ShouldBe(@"b\d\c");
+                    items.ElementAt(2).GetMetadataValue("M2").ShouldBe("f");
+                }
+            }
+        }
+
+        [Fact]
+        public void RemoveWithItemReferenceOnIntrinsicMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.CleanupFileContents(
+                $@"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
+                    <Target Name='t'>
+                        <ItemGroup>
+                            <I1 Include='foo.txt' />
+                            <I1 Include='bar.cs' />
+                            <I1 Include='../bar.cs' />
+                            <I1 Include='/foo/../bar.txt' />
+
+                            <I2 Include='foo.txt' />
+                            <I2 Include='../foo.txt' />
+                            <I2 Include='/bar.txt' />
+                            <I2 Include='/foo/bar.txt' />
+
+                            <I2 Remove='@(I1)' MatchOnMetadata='FullPath' MatchOnMetadataOptions='PathLike' />
+                        </ItemGroup>
+                    </Target></Project> ");
+
+            IntrinsicTask task = CreateIntrinsicTask(content);
+            PropertyDictionary<ProjectPropertyInstance> properties = GeneratePropertyGroup();
+            Lookup lookup = LookupHelpers.CreateLookup(properties);
+            ExecuteTask(task, lookup);
+
+            var items = lookup.GetItems("I2");
+
+            items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "../foo.txt", "/foo/bar.txt" });
+        }
+
+        [Fact]
+        public void RemoveWithPropertyReferenceInMatchOnMetadata()
+        {
+            // <PropertyGroup>
+            //     <p0>v0</p0>
+            // </PropertyGroup>
+            string content = ObjectModelHelpers.CleanupFileContents(
+                @"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
+                    <Target Name='t'>
+                        <ItemGroup>
+                            <I1 Include='a1' v0='1' M2='a'/>
+                            <I1 Include='b1' v0='2' M2='x'/>
+                            <I1 Include='c1' v0='3' M2='y'/>
+                            <I1 Include='d1' v0='4' M2='b'/>
+
+                            <I2 Include='a2' v0='x' m2='c'/>
+                            <I2 Include='b2' v0='2' m2='x'/>
+                            <I2 Include='c2' v0='3' m2='Y'/>
+                            <I2 Include='d2' v0='y' m2='d'/>
+
+                            <I2 Remove='@(I1)' MatchOnMetadata='$(p0)' />
+                        </ItemGroup>
+                    </Target></Project>");
+
+            IntrinsicTask task = CreateIntrinsicTask(content);
+            PropertyDictionary<ProjectPropertyInstance> properties = GeneratePropertyGroup();
+            Lookup lookup = LookupHelpers.CreateLookup(properties);
+            ExecuteTask(task, lookup);
+
+            var items = lookup.GetItems("I2");
+
+            items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "d2" });
+
+            items.ElementAt(0).GetMetadataValue("v0").ShouldBe("x");
+            items.ElementAt(0).GetMetadataValue("M2").ShouldBe("c");
+            items.ElementAt(1).GetMetadataValue("v0").ShouldBe("y");
+            items.ElementAt(1).GetMetadataValue("M2").ShouldBe("d");
+        }
+
+        [Fact]
+        public void RemoveWithItemReferenceInMatchOnMetadata()
+        {
+            string content = ObjectModelHelpers.CleanupFileContents(
+                @"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
+                    <Target Name='t'>
+                        <ItemGroup>
+                            <Meta2 Include='M2'/>
+
+                            <I1 Include='a1' v0='1' M2='a'/>
+                            <I1 Include='b1' v0='2' M2='x'/>
+                            <I1 Include='c1' v0='3' M2='y'/>
+                            <I1 Include='d1' v0='4' M2='b'/>
+
+                            <I2 Include='a2' v0='x' m2='c'/>
+                            <I2 Include='b2' v0='2' m2='x'/>
+                            <I2 Include='c2' v0='3' m2='Y'/>
+                            <I2 Include='d2' v0='y' m2='d'/>
+
+                            <I2 Remove='@(I1)' MatchOnMetadata='@(Meta2)' />
+                        </ItemGroup>
+                    </Target></Project>");
+
+            IntrinsicTask task = CreateIntrinsicTask(content);
+            PropertyDictionary<ProjectPropertyInstance> properties = GeneratePropertyGroup();
+            Lookup lookup = LookupHelpers.CreateLookup(properties);
+            ExecuteTask(task, lookup);
+
+            var items = lookup.GetItems("I2");
+
+            items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "c2", "d2" });
+
+            items.ElementAt(0).GetMetadataValue("v0").ShouldBe("x");
+            items.ElementAt(0).GetMetadataValue("M2").ShouldBe("c");
+            items.ElementAt(1).GetMetadataValue("v0").ShouldBe("3");
+            items.ElementAt(1).GetMetadataValue("M2").ShouldBe("Y");
+            items.ElementAt(2).GetMetadataValue("v0").ShouldBe("y");
+            items.ElementAt(2).GetMetadataValue("M2").ShouldBe("d");
+        }
+
+        [Fact]
+        public void KeepWithItemReferenceOnNonmatchingMetadata()
+        {
+            string content = ObjectModelHelpers.CleanupFileContents(
+                @"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
+                    <Target Name='t'>
+                        <ItemGroup>
+                            <I1 Include='a1' a='1' b='a'/>
+                            <I1 Include='b1' a='2' b='x'/>
+                            <I1 Include='c1' a='3' b='y'/>
+                            <I1 Include='d1' a='4' b='b'/>
+
+                            <I2 Include='a2' c='x' d='c'/>
+                            <I2 Include='b2' c='2' d='x'/>
+                            <I2 Include='c2' c='3' d='Y'/>
+                            <I2 Include='d2' c='y' d='d'/>
+
+                            <I2 Remove='@(I1)' MatchOnMetadata='e' />
+                        </ItemGroup>
+                    </Target></Project>");
+            IntrinsicTask task = CreateIntrinsicTask(content);
+            Lookup lookup = LookupHelpers.CreateEmptyLookup();
+            ExecuteTask(task, lookup);
+
+            var items = lookup.GetItems("I2");
+
+            items.Select(i => i.EvaluatedInclude).ShouldBe(new[] { "a2", "b2", "c2", "d2" });
+
+            items.ElementAt(0).GetMetadataValue("c").ShouldBe("x");
+            items.ElementAt(1).GetMetadataValue("c").ShouldBe("2");
+            items.ElementAt(2).GetMetadataValue("c").ShouldBe("3");
+            items.ElementAt(3).GetMetadataValue("c").ShouldBe("y");
+            items.ElementAt(0).GetMetadataValue("d").ShouldBe("c");
+            items.ElementAt(1).GetMetadataValue("d").ShouldBe("x");
+            items.ElementAt(2).GetMetadataValue("d").ShouldBe("Y");
+            items.ElementAt(3).GetMetadataValue("d").ShouldBe("d");
+        }
+
+        [Fact]
+        public void FailWithMatchingMultipleMetadata()
+        {
+            string content = ObjectModelHelpers.CleanupFileContents(
+                @"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
+                    <Target Name='t'>
+                        <ItemGroup>
+                            <I1 Include='a1' M1='1' M2='a'/>
+                            <I1 Include='b1' M1='2' M2='x'/>
+                            <I1 Include='c1' M1='3' M2='y'/>
+                            <I1 Include='d1' M1='4' M2='b'/>
+
+                            <I2 Include='a2' M1='x' m2='c'/>
+                            <I2 Include='b2' M1='2' m2='x'/>
+                            <I2 Include='c2' M1='3' m2='Y'/>
+                            <I2 Include='d2' M1='y' m2='d'/>
+
+                            <I2 Remove='@(I1)' MatchOnMetadata='M1;M2' />
+                        </ItemGroup>
+                    </Target></Project>");
+            IntrinsicTask task = CreateIntrinsicTask(content);
+            Lookup lookup = LookupHelpers.CreateEmptyLookup();
+            Assert.ThrowsAny<InvalidProjectFileException>(() => ExecuteTask(task, lookup))
+                .HelpKeyword.ShouldBe("MSBuild.OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem");
+        }
+
+        [Fact]
+        public void FailWithMultipleItemReferenceOnMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.CleanupFileContents(
+                @"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
+                    <Target Name='t'>
+                        <ItemGroup>
+                            <I1 Include='a1' M1='1' M2='a'/>
+                            <I1 Include='b1' M1='2' M2='x'/>
+                            <I1 Include='c1' M1='3' M2='y'/>
+                            <I1 Include='d1' M1='4' M2='b'/>
+
+                            <I2 Include='a2' M1='x' m2='c'/>
+                            <I2 Include='b2' M1='2' m2='x'/>
+                            <I2 Include='c2' M1='3' m2='Y'/>
+                            <I2 Include='d2' M1='y' m2='d'/>
+
+                            <I3 Include='a3' M1='1' m2='b'/>
+                            <I3 Include='b3' M1='x' m2='a'/>
+                            <I3 Include='c3' M1='3' m2='2'/>
+                            <I3 Include='d3' M1='y' m2='d'/>
+
+                            <I3 Remove='@(I1);@(I2)' MatchOnMetadata='M1' />
+                        </ItemGroup>
+                    </Target></Project>");
+            IntrinsicTask task = CreateIntrinsicTask(content);
+            Lookup lookup = LookupHelpers.CreateEmptyLookup();
+            Assert.ThrowsAny<InvalidProjectFileException>(() => ExecuteTask(task, lookup))
+                .HelpKeyword.ShouldBe("MSBuild.OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem");
+        }
+
+        [Fact]
+        public void FailWithMetadataItemReferenceOnMatchingMetadata()
+        {
+            string content = ObjectModelHelpers.CleanupFileContents(
+                @"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
+                    <Target Name='t'>
+                        <ItemGroup>
+                            <I1 Include='a1' M1='1' M2='a'/>
+                            <I1 Include='b1' M1='2' M2='x'/>
+                            <I1 Include='c1' M1='3' M2='y'/>
+                            <I1 Include='d1' M1='4' M2='b'/>
+
+                            <I2 Include='a2' M1='x' m2='c'/>
+                            <I2 Include='b2' M1='2' m2='x'/>
+                            <I2 Include='c2' M1='3' m2='Y'/>
+                            <I2 Include='d2' M1='y' m2='d'/>
+
+                            <I2 Remove='%(I1.M1)' MatchOnMetadata='M1' />
+                        </ItemGroup>
+                    </Target></Project>");
+            IntrinsicTask task = CreateIntrinsicTask(content);
+            Lookup lookup = LookupHelpers.CreateEmptyLookup();
+            Assert.ThrowsAny<InvalidProjectFileException>(() => ExecuteTask(task, lookup))
+                .HelpKeyword.ShouldBe("MSBuild.OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem");
+        }
+
         [Fact]
         public void RemoveItemOutsideTarget()
         {
diff --git a/src/Build.UnitTests/BackEnd/LoggingContext_Tests.cs b/src/Build.UnitTests/BackEnd/LoggingContext_Tests.cs
index 338cc793c8e..861d10cd4b6 100644
--- a/src/Build.UnitTests/BackEnd/LoggingContext_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/LoggingContext_Tests.cs
@@ -4,10 +4,8 @@
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Shared;
-using Shouldly;
 using System;
 using Xunit;
-using Xunit.Abstractions;
 
 namespace Microsoft.Build.UnitTests.BackEnd
 {
@@ -16,36 +14,29 @@ namespace Microsoft.Build.UnitTests.BackEnd
     /// </summary>
     public class LoggingContext_Tests
     {
-        private readonly ITestOutputHelper _output;
-
-        public LoggingContext_Tests(ITestOutputHelper outputHelper)
-        {
-            _output = outputHelper;
-        }
-
         /// <summary>
         /// A few simple tests for NodeLoggingContexts. 
         /// </summary>
         [Fact]
         public void CreateValidNodeLoggingContexts()
         {
-            NodeLoggingContext context = new NodeLoggingContext(new MockLoggingService(_output.WriteLine), 1, true);
-            context.IsInProcNode.ShouldBeTrue();
-            context.IsValid.ShouldBeTrue();
+            NodeLoggingContext context = new NodeLoggingContext(new MockLoggingService(), 1, true);
+            Assert.True(context.IsInProcNode);
+            Assert.True(context.IsValid);
 
             context.LogBuildFinished(true);
-            context.IsValid.ShouldBeFalse();
+            Assert.False(context.IsValid);
 
-            context.BuildEventContext.NodeId.ShouldBe(1);
+            Assert.Equal(1, context.BuildEventContext.NodeId);
 
-            NodeLoggingContext context2 = new NodeLoggingContext(new MockLoggingService(_output.WriteLine), 2, false);
-            context2.IsInProcNode.ShouldBeFalse();
-            context2.IsValid.ShouldBeTrue();
+            NodeLoggingContext context2 = new NodeLoggingContext(new MockLoggingService(), 2, false);
+            Assert.False(context2.IsInProcNode);
+            Assert.True(context2.IsValid);
 
             context2.LogBuildFinished(true);
-            context2.IsValid.ShouldBeFalse();
+            Assert.False(context2.IsValid);
 
-            context2.BuildEventContext.NodeId.ShouldBe(2);
+            Assert.Equal(2, context2.BuildEventContext.NodeId);
         }
 
         /// <summary>
@@ -58,25 +49,9 @@ public void InvalidNodeIdOnNodeLoggingContext()
         {
             Assert.Throws<InternalErrorException>(() =>
             {
-                _ = new NodeLoggingContext(new MockLoggingService(), -2, true);
+                NodeLoggingContext context = new NodeLoggingContext(new MockLoggingService(), -2, true);
             }
            );
         }
-
-        [Fact]
-        public void HasLoggedErrors()
-        {
-            NodeLoggingContext context = new NodeLoggingContext(new MockLoggingService(_output.WriteLine), 1, true);
-            context.HasLoggedErrors.ShouldBeFalse();
-
-            context.LogCommentFromText(Framework.MessageImportance.High, "Test message");
-            context.HasLoggedErrors.ShouldBeFalse();
-
-            context.LogWarningFromText(null, null, null, null, "Test warning");
-            context.HasLoggedErrors.ShouldBeFalse();
-
-            context.LogErrorFromText(null, null, null, null, "Test error");
-            context.HasLoggedErrors.ShouldBeTrue();
-        }
     }
-}
+}
\ No newline at end of file
diff --git a/src/Build.UnitTests/BackEnd/ReturnFailureWithoutLoggingErrorTask.cs b/src/Build.UnitTests/BackEnd/ProcessIdTask.cs
similarity index 54%
rename from src/Build.UnitTests/BackEnd/ReturnFailureWithoutLoggingErrorTask.cs
rename to src/Build.UnitTests/BackEnd/ProcessIdTask.cs
index 8d9b0b8b436..71e5379e2ba 100644
--- a/src/Build.UnitTests/BackEnd/ReturnFailureWithoutLoggingErrorTask.cs
+++ b/src/Build.UnitTests/BackEnd/ProcessIdTask.cs
@@ -1,26 +1,28 @@
-﻿// Copyright (c) Microsoft. All rights reserved.
+// Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
-using Microsoft.Build.BackEnd.Logging;
+using Microsoft.Build.Framework;
 using Microsoft.Build.Utilities;
 using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
+using System.Diagnostics;
 namespace Microsoft.Build.UnitTests
 {
     /// <summary>
-    /// This task was created for https://github.com/microsoft/msbuild/issues/2036
+    /// This task was created for https://github.com/microsoft/msbuild/issues/3141
     /// </summary>
-    public class ReturnFailureWithoutLoggingErrorTask : Task
+    public class ProcessIdTask : Task
     {
+        [Output]
+        public int Pid { get; set; }
+
         /// <summary>
-        /// Intentionally return false without logging an error to test proper error catching.
+        /// Log the id for this process.
         /// </summary>
         /// <returns></returns>
         public override bool Execute()
         {
-            return false;
+            Pid = Process.GetCurrentProcess().Id;
+            return true;
         }
     }
 }
diff --git a/src/Build.UnitTests/BackEnd/ResultsCache_Tests.cs b/src/Build.UnitTests/BackEnd/ResultsCache_Tests.cs
index 3e42d31bfa2..5500f71f1d6 100644
--- a/src/Build.UnitTests/BackEnd/ResultsCache_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/ResultsCache_Tests.cs
@@ -168,8 +168,8 @@ public void TestRetrieveSubsetResults()
 
         /// <summary>
         /// If a result had multiple targets associated with it and we only requested some of their 
-        /// results, the returned result should only contain the targets we asked for, BUT the overall 
-        /// status of the result should remain the same.  
+        /// results, the returned result should only contain the targets we asked for, and the overall
+        /// status of the result should reflect the targets we asked for as well.
         /// </summary>
         [Fact]
         public void TestRetrieveSubsetTargetsFromResult()
@@ -182,13 +182,13 @@ public void TestRetrieveSubsetTargetsFromResult()
             result.AddResultsForTarget("testTarget2", BuildResultUtilities.GetEmptySucceedingTargetResult());
             cache.AddResult(result);
 
-            ResultsCacheResponse response = cache.SatisfyRequest(request, new List<string>(), new List<string>(new string[] { "testTarget2" }), new List<string>(new string[] { "testTarget" }), skippedResultsDoNotCauseCacheMiss: false);
+            ResultsCacheResponse response = cache.SatisfyRequest(request, new List<string>(), new List<string>(new string[] { "testTarget2" }), skippedResultsDoNotCauseCacheMiss: false);
 
             Assert.Equal(ResultsCacheResponseType.Satisfied, response.Type);
 
             Assert.True(AreResultsIdenticalForTarget(result, response.Results, "testTarget2"));
             Assert.False(response.Results.HasResultsForTarget("testTarget"));
-            Assert.Equal(BuildResultCode.Failure, response.Results.OverallResult);
+            Assert.Equal(BuildResultCode.Success, response.Results.OverallResult);
         }
 
         [Fact]
diff --git a/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs b/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
index 5a2b254cf52..f8597385549 100644
--- a/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
@@ -16,6 +16,7 @@
 using Microsoft.Build.Evaluation;
 using Microsoft.Build.Execution;
 using Microsoft.Build.Shared;
+using Shouldly;
 
 using ILoggingService = Microsoft.Build.BackEnd.Logging.ILoggingService;
 using ProjectLoggingContext = Microsoft.Build.BackEnd.Logging.ProjectLoggingContext;
@@ -691,6 +692,7 @@ public void TestAfterTargetsEmpty()
 
             BuildResult result = builder.BuildTargets(GetProjectLoggingContext(entry), entry, this, entry.Request.Targets.ToArray(), CreateStandardLookup(project), CancellationToken.None).Result;
             AssertTaskExecutionOrder(new string[] { "BuildTask" });
+            Assert.False(result.ResultsByTarget["Build"].AfterTargetsHaveFailed);
         }
 
         /// <summary>
@@ -716,6 +718,7 @@ public void TestAfterTargetsSkip()
 
             BuildResult result = builder.BuildTargets(GetProjectLoggingContext(entry), entry, this, entry.Request.Targets.ToArray(), CreateStandardLookup(project), CancellationToken.None).Result;
             AssertTaskExecutionOrder(new string[] { "AfterTask" });
+            Assert.False(result.ResultsByTarget["Build"].AfterTargetsHaveFailed);
         }
 
         /// <summary>
@@ -744,6 +747,7 @@ public void TestAfterTargetsSingleWithError()
 
             BuildResult result = builder.BuildTargets(GetProjectLoggingContext(entry), entry, this, entry.Request.Targets.ToArray(), CreateStandardLookup(project), CancellationToken.None).Result;
             AssertTaskExecutionOrder(new string[] { "BuildTask" });
+            Assert.False(result.ResultsByTarget["Build"].AfterTargetsHaveFailed);
         }
 
         /// <summary>
@@ -786,6 +790,7 @@ public void TestAfterTargetsSingleWithErrorAndParent()
 
             BuildResult result = builder.BuildTargets(GetProjectLoggingContext(entry), entry, this, entry.Request.Targets.ToArray(), CreateStandardLookup(project), CancellationToken.None).Result;
             AssertTaskExecutionOrder(new string[] { "BuildTask", "AfterTask", "Error2" });
+            Assert.False(result.ResultsByTarget["PostBuild"].AfterTargetsHaveFailed);
         }
 
         /// <summary>
@@ -811,6 +816,7 @@ public void TestAfterTargetsSingle()
 
             BuildResult result = builder.BuildTargets(GetProjectLoggingContext(entry), entry, this, entry.Request.Targets.ToArray(), CreateStandardLookup(project), CancellationToken.None).Result;
             AssertTaskExecutionOrder(new string[] { "BuildTask", "AfterTask" });
+            Assert.False(result.ResultsByTarget["Build"].AfterTargetsHaveFailed);
         }
 
         /// <summary>
@@ -836,6 +842,7 @@ public void TestAfterTargetsEscaped()
 
             BuildResult result = builder.BuildTargets(GetProjectLoggingContext(entry), entry, this, entry.Request.Targets.ToArray(), CreateStandardLookup(project), CancellationToken.None).Result;
             AssertTaskExecutionOrder(new string[] { "BuildTask", "AfterTask" });
+            Assert.False(result.ResultsByTarget["Build;Me"].AfterTargetsHaveFailed);
         }
 
         /// <summary>
@@ -866,6 +873,53 @@ public void TestAfterTargetsWithTwoReferringToOne()
 
             BuildResult result = builder.BuildTargets(GetProjectLoggingContext(entry), entry, this, entry.Request.Targets.ToArray(), CreateStandardLookup(project), CancellationToken.None).Result;
             AssertTaskExecutionOrder(new string[] { "BuildTask", "AfterTask", "AfterTask2" });
+            Assert.False(result.ResultsByTarget["Build"].AfterTargetsHaveFailed);
+        }
+
+        /// <summary>
+        /// Test a failing after target
+        /// </summary>
+        [Fact]
+        public void TestAfterTargetsWithFailure()
+        {
+            string projectBody = @"
+<Target Name='Build'>
+    <BuildTask/>
+</Target>
+
+<Target Name='After' AfterTargets='Build'>
+    <ErrorTask1/>
+</Target>
+";
+
+            BuildResult result = BuildSimpleProject(projectBody, new string[] { "Build" }, failTaskNumber: 2 /* Fail on After */);
+            result.ResultsByTarget["Build"].ResultCode.ShouldBe(TargetResultCode.Success);
+            result.ResultsByTarget["Build"].AfterTargetsHaveFailed.ShouldBe(true);
+        }
+
+        /// <summary>
+        /// Test a transitively failing after target
+        /// </summary>
+        [Fact]
+        public void TestAfterTargetsWithTransitiveFailure()
+        {
+            string projectBody = @"
+<Target Name='Build'>
+    <BuildTask/>
+</Target>
+
+<Target Name='After1' AfterTargets='Build'>
+    <BuildTask/>
+</Target>
+
+<Target Name='After2' AfterTargets='After1'>
+    <ErrorTask1/>
+</Target>
+";
+
+            BuildResult result = BuildSimpleProject(projectBody, new string[] { "Build" }, failTaskNumber: 3 /* Fail on After2 */);
+            result.ResultsByTarget["Build"].ResultCode.ShouldBe(TargetResultCode.Success);
+            result.ResultsByTarget["Build"].AfterTargetsHaveFailed.ShouldBe(true);
         }
 
         /// <summary>
@@ -1080,6 +1134,7 @@ public void TestBeforeAndAfterWithErrorTargets()
 
             BuildResult result = builder.BuildTargets(GetProjectLoggingContext(entry), entry, this, entry.Request.Targets.ToArray(), CreateStandardLookup(project), CancellationToken.None).Result;
             AssertTaskExecutionOrder(new string[] { "BuildTask", "BeforeErrorTargetTask", "ErrorTargetTask", "AfterErrorTargetTask" });
+            Assert.False(result.ResultsByTarget["Build"].AfterTargetsHaveFailed);
         }
 
         /// <summary>
@@ -1484,6 +1539,27 @@ private ProjectLoggingContext GetProjectLoggingContext(BuildRequestEntry entry)
             return new ProjectLoggingContext(new NodeLoggingContext(_host, 1, false), entry, null);
         }
 
+        /// <summary>
+        /// Builds a project using TargetBuilder and returns the result.
+        /// </summary>
+        /// <param name="projectBody">The project contents.</param>
+        /// <param name="targets">The targets to build.</param>
+        /// <param name="failTaskNumber">The task ordinal to fail on.</param>
+        /// <returns>The result of building the specified project/tasks.</returns>
+        private BuildResult BuildSimpleProject(string projectBody, string[] targets, int failTaskNumber)
+        {
+            ProjectInstance project = CreateTestProject(projectBody);
+
+            MockTaskBuilder taskBuilder = (MockTaskBuilder)_host.GetComponent(BuildComponentType.TaskBuilder);
+            taskBuilder.FailTaskNumber = failTaskNumber;
+
+            TargetBuilder builder = (TargetBuilder)_host.GetComponent(BuildComponentType.TargetBuilder);
+            IConfigCache cache = (IConfigCache)_host.GetComponent(BuildComponentType.ConfigCache);
+            BuildRequestEntry entry = new BuildRequestEntry(CreateNewBuildRequest(1, targets), cache[1]);
+
+            return builder.BuildTargets(GetProjectLoggingContext(entry), entry, this, entry.Request.Targets.ToArray(), CreateStandardLookup(project), CancellationToken.None).Result;
+        }
+
         /// <summary>
         /// The mock component host object.
         /// </summary>
diff --git a/src/Build.UnitTests/BackEnd/TaskExecutionHost_Tests.cs b/src/Build.UnitTests/BackEnd/TaskExecutionHost_Tests.cs
index f2c4d85b94f..e997a7cdea5 100644
--- a/src/Build.UnitTests/BackEnd/TaskExecutionHost_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TaskExecutionHost_Tests.cs
@@ -135,8 +135,8 @@ public void Dispose()
         [Fact]
         public void ValidateNoParameters()
         {
-            Dictionary<string, Tuple<string, ElementLocation>> parameters = new Dictionary<string, Tuple<string, ElementLocation>>(StringComparer.OrdinalIgnoreCase);
-            parameters["ExecuteReturnParam"] = new Tuple<string, ElementLocation>("true", ElementLocation.Create("foo.proj"));
+            var parameters = new Dictionary<string, (string, ElementLocation)>(StringComparer.OrdinalIgnoreCase);
+            parameters["ExecuteReturnParam"] = ("true", ElementLocation.Create("foo.proj"));
 
             Assert.True(_host.SetTaskParameters(parameters));
             Assert.Single(_parametersSetOnTask);
@@ -151,7 +151,7 @@ public void ValidateNoParameters_MissingRequired()
         {
             Assert.Throws<InvalidProjectFileException>(() =>
             {
-                Dictionary<string, Tuple<string, ElementLocation>> parameters = new Dictionary<string, Tuple<string, ElementLocation>>(StringComparer.OrdinalIgnoreCase);
+                var parameters = new Dictionary<string, (string, ElementLocation)>(StringComparer.OrdinalIgnoreCase);
                 _host.SetTaskParameters(parameters);
             }
            );
@@ -162,8 +162,8 @@ public void ValidateNoParameters_MissingRequired()
         [Fact]
         public void ValidateNonExistantParameter()
         {
-            Dictionary<string, Tuple<string, ElementLocation>> parameters = new Dictionary<string, Tuple<string, ElementLocation>>(StringComparer.OrdinalIgnoreCase);
-            parameters["NonExistantParam"] = new Tuple<string, ElementLocation>("foo", ElementLocation.Create("foo.proj"));
+            var parameters = new Dictionary<string, (string, ElementLocation)>(StringComparer.OrdinalIgnoreCase);
+            parameters["NonExistantParam"] = ("foo", ElementLocation.Create("foo.proj"));
             Assert.False(_host.SetTaskParameters(parameters));
         }
 
@@ -602,8 +602,8 @@ public void TestSetItemArrayParamEmptyItem()
         [Fact]
         public void TestExecuteTrue()
         {
-            Dictionary<string, Tuple<string, ElementLocation>> parameters = new Dictionary<string, Tuple<string, ElementLocation>>(StringComparer.OrdinalIgnoreCase);
-            parameters["ExecuteReturnParam"] = new Tuple<string, ElementLocation>("true", ElementLocation.Create("foo.proj"));
+            var parameters = new Dictionary<string, (string, ElementLocation)>(StringComparer.OrdinalIgnoreCase);
+            parameters["ExecuteReturnParam"] = ("true", ElementLocation.Create("foo.proj"));
 
             Assert.True(_host.SetTaskParameters(parameters));
 
@@ -618,8 +618,8 @@ public void TestExecuteTrue()
         [Fact]
         public void TestExecuteFalse()
         {
-            Dictionary<string, Tuple<string, ElementLocation>> parameters = new Dictionary<string, Tuple<string, ElementLocation>>(StringComparer.OrdinalIgnoreCase);
-            parameters["ExecuteReturnParam"] = new Tuple<string, ElementLocation>("false", ElementLocation.Create("foo.proj"));
+            var parameters = new Dictionary<string, (string, ElementLocation)>(StringComparer.OrdinalIgnoreCase);
+            parameters["ExecuteReturnParam"] = ("false", ElementLocation.Create("foo.proj"));
 
             Assert.True(_host.SetTaskParameters(parameters));
 
@@ -636,8 +636,8 @@ public void TestExecuteThrow()
         {
             Assert.Throws<IndexOutOfRangeException>(() =>
             {
-                Dictionary<string, Tuple<string, ElementLocation>> parameters = new Dictionary<string, Tuple<string, ElementLocation>>(StringComparer.OrdinalIgnoreCase);
-                parameters["ExecuteReturnParam"] = new Tuple<string, ElementLocation>("false", ElementLocation.Create("foo.proj"));
+                var parameters = new Dictionary<string, (string, ElementLocation)>(StringComparer.OrdinalIgnoreCase);
+                parameters["ExecuteReturnParam"] = ("false", ElementLocation.Create("foo.proj"));
 
                 Dispose();
                 InitializeHost(true);
@@ -1398,8 +1398,8 @@ private void ValidateTaskParameterNotSet(string parameterName, string value)
         /// </summary>
         private void SetTaskParameter(string parameterName, string value)
         {
-            Dictionary<string, Tuple<string, ElementLocation>> parameters = GetStandardParametersDictionary(true);
-            parameters[parameterName] = new Tuple<string, ElementLocation>(value, ElementLocation.Create("foo.proj"));
+            var parameters = GetStandardParametersDictionary(true);
+            parameters[parameterName] = (value, ElementLocation.Create("foo.proj"));
             bool success = _host.SetTaskParameters(parameters);
             Assert.True(success);
         }
@@ -1407,10 +1407,10 @@ private void SetTaskParameter(string parameterName, string value)
         /// <summary>
         /// Helper method for tests
         /// </summary>
-        private Dictionary<string, Tuple<string, ElementLocation>> GetStandardParametersDictionary(bool returnParam)
+        private Dictionary<string, (string, ElementLocation)> GetStandardParametersDictionary(bool returnParam)
         {
-            Dictionary<string, Tuple<string, ElementLocation>> parameters = new Dictionary<string, Tuple<string, ElementLocation>>(StringComparer.OrdinalIgnoreCase);
-            parameters["ExecuteReturnParam"] = new Tuple<string, ElementLocation>(returnParam ? "true" : "false", ElementLocation.Create("foo.proj"));
+            var parameters = new Dictionary<string, (string, ElementLocation)>(StringComparer.OrdinalIgnoreCase);
+            parameters["ExecuteReturnParam"] = (returnParam ? "true" : "false", ElementLocation.Create("foo.proj"));
             return parameters;
         }
 
diff --git a/src/Build.UnitTests/BackEnd/TaskHostFactory_Tests.cs b/src/Build.UnitTests/BackEnd/TaskHostFactory_Tests.cs
new file mode 100644
index 00000000000..3b383fe1a3f
--- /dev/null
+++ b/src/Build.UnitTests/BackEnd/TaskHostFactory_Tests.cs
@@ -0,0 +1,54 @@
+﻿// Copyright (c) Microsoft. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+using System;
+using System.Diagnostics;
+using System.Threading;
+using Microsoft.Build.Execution;
+using Microsoft.Build.UnitTests;
+using Microsoft.Build.Utilities;
+using Shouldly;
+using Xunit;
+using Xunit.Abstractions;
+
+namespace Microsoft.Build.Engine.UnitTests.BackEnd
+{
+    public sealed class TaskHostFactory_Tests
+    {
+        [Fact]
+        [SkipOnTargetFramework(TargetFrameworkMonikers.Netcoreapp, "https://github.com/microsoft/msbuild/issues/5158")]
+        [Trait("Category", "mono-osx-failing")]
+        public void TaskNodesDieAfterBuild()
+        {
+            using (TestEnvironment env = TestEnvironment.Create())
+            {
+                string pidTaskProject = $@"
+<Project>
+    <UsingTask TaskName=""ProcessIdTask"" AssemblyName=""Microsoft.Build.Engine.UnitTests"" TaskFactory=""TaskHostFactory"" />
+    <Target Name='AccessPID'>
+        <ProcessIdTask>
+            <Output PropertyName=""PID"" TaskParameter=""Pid"" />
+        </ProcessIdTask>
+    </Target>
+</Project>";
+                TransientTestFile project = env.CreateFile("testProject.csproj", pidTaskProject);
+                ProjectInstance projectInstance = new ProjectInstance(project.Path);
+                projectInstance.Build().ShouldBeTrue();
+                string processId = projectInstance.GetPropertyValue("PID");
+                string.IsNullOrEmpty(processId).ShouldBeFalse();
+                Int32.TryParse(processId, out int pid).ShouldBeTrue();
+                Process.GetCurrentProcess().Id.ShouldNotBe<int>(pid);
+                try
+                {
+                    Process taskHostNode = Process.GetProcessById(pid);
+                    taskHostNode.WaitForExit(2000).ShouldBeTrue();
+                }
+                // We expect the TaskHostNode to exit quickly. If it exits before Process.GetProcessById, it will throw an ArgumentException.
+                catch (ArgumentException e)
+                {
+                    e.Message.ShouldBe($"Process with an Id of {pid} is not running.");
+                }
+            }
+        }
+
+    }
+}
diff --git a/src/Build.UnitTests/Evaluation/Expander_Tests.cs b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
index 3dfc11a9f97..6766d6124cf 100644
--- a/src/Build.UnitTests/Evaluation/Expander_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
@@ -3888,6 +3888,12 @@ public void PropertyFunctionStringPadLeftComplex()
             TestPropertyFunction("$(prop.PadLeft($([MSBuild]::Multiply(1, 2)), '0'))", "prop", "x", "0x");
         }
 
+        [Fact]
+        public void PropertyFunctionStringPadLeftChar()
+        {
+            TestPropertyFunction("$(VersionSuffixBuildOfTheDay.PadLeft(3, $([System.Convert]::ToChar(`0`))))", "VersionSuffixBuildOfTheDay", "4", "004");
+        }
+
         [Fact]
         public void PropertyFunctionStringPadRight1()
         {
diff --git a/src/Build.UnitTests/Evaluation/SemiColonTokenizer_Tests.cs b/src/Build.UnitTests/Evaluation/SemiColonTokenizer_Tests.cs
new file mode 100644
index 00000000000..68334db169b
--- /dev/null
+++ b/src/Build.UnitTests/Evaluation/SemiColonTokenizer_Tests.cs
@@ -0,0 +1,29 @@
+// Copyright (c) Microsoft. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+
+using Microsoft.Build.Evaluation;
+
+using Xunit;
+using Shouldly;
+
+namespace Microsoft.Build.UnitTests.Evaluation
+{
+    public class SemiColonTokenizer_Tests
+    {
+        [Theory]
+        [InlineData("", new string[0])]
+        [InlineData(";", new string[0])]
+        [InlineData(";;", new string[0])]
+        [InlineData(" ; ; ", new string[0])]
+        [InlineData("First", new string[] { "First" })]
+        [InlineData("First;", new string[] { "First" })]
+        [InlineData("First;Second", new string[] { "First", "Second" })]
+        [InlineData("First;Second;Third", new string[] { "First", "Second", "Third" })]
+        [InlineData(" First ;\tSecond\t;\nThird\n", new string[] { "First", "Second", "Third" })]
+        [InlineData("@(foo->'xxx;xxx');@(foo, 'xxx;xxx');@(foo->'xxx;xxx', 'xxx;xxx')", new string[] { "@(foo->'xxx;xxx')", "@(foo, 'xxx;xxx')", "@(foo->'xxx;xxx', 'xxx;xxx')" })]
+        public void TokenizeExpression(string expression, string[] expectedTokens)
+        {
+            new SemiColonTokenizer(expression).ShouldBe(expectedTokens);
+        }
+    }
+}
diff --git a/src/Build.UnitTests/Instance/ProjectTaskInstance_Internal_Tests.cs b/src/Build.UnitTests/Instance/ProjectTaskInstance_Internal_Tests.cs
index b350d214d67..103589548de 100644
--- a/src/Build.UnitTests/Instance/ProjectTaskInstance_Internal_Tests.cs
+++ b/src/Build.UnitTests/Instance/ProjectTaskInstance_Internal_Tests.cs
@@ -28,15 +28,15 @@ public static IEnumerable<object[]> TestData
 
                 yield return new object[]
                 {
-                    new Dictionary<string, Tuple<string, MockElementLocation>>(),
+                    new Dictionary<string, (string, MockElementLocation)>(),
                     new List<ProjectTaskInstanceChild>()
                 };
 
                 yield return new object[]
                 {
-                    new Dictionary<string, Tuple<string, MockElementLocation>>
+                    new Dictionary<string, (string, MockElementLocation)>
                     {
-                        {"p1", Tuple.Create("v1", new MockElementLocation("p1"))}
+                        {"p1", ("v1", new MockElementLocation("p1"))}
                     },
                     new List<ProjectTaskInstanceChild>
                     {
@@ -46,10 +46,10 @@ public static IEnumerable<object[]> TestData
 
                 yield return new object[]
                 {
-                    new Dictionary<string, Tuple<string, MockElementLocation>>
+                    new Dictionary<string, (string, MockElementLocation)>
                     {
-                        {"p1", Tuple.Create("v1", new MockElementLocation("p1"))},
-                        {"p2", Tuple.Create("v2", new MockElementLocation("p2"))}
+                        {"p1", ("v1", new MockElementLocation("p1"))},
+                        {"p2", ("v2", new MockElementLocation("p2"))}
                     },
                     new List<ProjectTaskInstanceChild>
                     {
@@ -63,15 +63,15 @@ public static IEnumerable<object[]> TestData
         [Theory]
         [MemberData(nameof(TestData))]
         public void ProjectTaskInstanceCanSerializeViaTranslator(
-            IDictionary<string, Tuple<string, MockElementLocation>> parameters,
+            IDictionary<string, (string, MockElementLocation)> parameters,
             List<ProjectTaskInstanceChild> outputs)
         {
-            parameters = parameters ?? new Dictionary<string, Tuple<string, MockElementLocation>>();
+            parameters = parameters ?? new Dictionary<string, (string, MockElementLocation)>();
 
-            var parametersCopy = new Dictionary<string, Tuple<string, ElementLocation>>(parameters.Count);
+            var parametersCopy = new Dictionary<string, (string, ElementLocation)>(parameters.Count);
             foreach (var param in parameters)
             {
-                parametersCopy[param.Key] = Tuple.Create(param.Value.Item1, (ElementLocation) param.Value.Item2);
+                parametersCopy[param.Key] = (param.Value.Item1, param.Value.Item2);
             }
 
             var original = CreateTargetTask(null, parametersCopy, outputs);
diff --git a/src/Build.UnitTests/TestComparers/ProjectInstanceModelTestComparers.cs b/src/Build.UnitTests/TestComparers/ProjectInstanceModelTestComparers.cs
index 1c4b54d5670..a8a88862e4f 100644
--- a/src/Build.UnitTests/TestComparers/ProjectInstanceModelTestComparers.cs
+++ b/src/Build.UnitTests/TestComparers/ProjectInstanceModelTestComparers.cs
@@ -330,7 +330,7 @@ public int GetHashCode(ProjectTaskInstance obj)
             throw new NotImplementedException();
         }
 
-        private void AssertParametersEqual(IDictionary<string, Tuple<string, ElementLocation>> x, IDictionary<string, Tuple<string, ElementLocation>> y)
+        private void AssertParametersEqual(IDictionary<string, (string, ElementLocation)> x, IDictionary<string, (string, ElementLocation)> y)
         {
             Assert.Equal(x.Count, y.Count);
 
diff --git a/src/Build.UnitTests/TestData/ProjectInstanceTestObjects.cs b/src/Build.UnitTests/TestData/ProjectInstanceTestObjects.cs
index cb5ba6497cb..c0da58b2809 100644
--- a/src/Build.UnitTests/TestData/ProjectInstanceTestObjects.cs
+++ b/src/Build.UnitTests/TestData/ProjectInstanceTestObjects.cs
@@ -14,7 +14,7 @@ internal static class ProjectInstanceTestObjects
     {
         public static ProjectItemGroupTaskInstance CreateTargetItemGroup(int? counter = null, List<ProjectItemGroupTaskItemInstance> items = null)
         {
-            items = items ?? new List<ProjectItemGroupTaskItemInstance>();
+            items ??= new List<ProjectItemGroupTaskItemInstance>();
             var stringCounter = CounterToString(counter);
 
             return new ProjectItemGroupTaskInstance(
@@ -26,27 +26,31 @@ public static ProjectItemGroupTaskInstance CreateTargetItemGroup(int? counter =
 
         public static ProjectItemGroupTaskItemInstance CreateTargetItem(int? counter = null, List<ProjectItemGroupTaskMetadataInstance> metadata = null)
         {
-            metadata = metadata ?? new List<ProjectItemGroupTaskMetadataInstance>();
+            metadata ??= new List<ProjectItemGroupTaskMetadataInstance>();
             var stringCounter = CounterToString(counter);
 
             return new ProjectItemGroupTaskItemInstance(
-                $"i{stringCounter}",
-                $"v{stringCounter}",
-                $"e{stringCounter}",
-                $"r{stringCounter}",
-                $"km{stringCounter}",
-                $"rm{stringCounter}",
-                $"kd{stringCounter}",
-                $"c{stringCounter}",
-                new MockElementLocation($"location{stringCounter}"),
-                new MockElementLocation($"include{stringCounter}"),
-                new MockElementLocation($"remove{stringCounter}"),
-                new MockElementLocation($"exclude{stringCounter}"),
-                new MockElementLocation($"km{stringCounter}"),
-                new MockElementLocation($"rm{stringCounter}"),
-                new MockElementLocation($"kd{stringCounter}"),
-                new MockElementLocation($"cl{stringCounter}"),
-                metadata
+                itemType: $"i{stringCounter}",
+                include: $"v{stringCounter}",
+                exclude: $"e{stringCounter}",
+                remove: $"r{stringCounter}",
+                matchOnMetadata: $"mm{stringCounter}",
+                matchOnMetadataOptions: $"mmo{stringCounter}",
+                keepMetadata: $"km{stringCounter}",
+                removeMetadata: $"rm{stringCounter}",
+                keepDuplicates: $"kd{stringCounter}",
+                condition: $"c{stringCounter}",
+                location: new MockElementLocation($"location{stringCounter}"),
+                includeLocation: new MockElementLocation($"include{stringCounter}"),
+                excludeLocation: new MockElementLocation($"remove{stringCounter}"),
+                removeLocation: new MockElementLocation($"exclude{stringCounter}"),
+                matchOnMetadataLocation: new MockElementLocation($"mm{stringCounter}"),
+                matchOnMetadataOptionsLocation: new MockElementLocation($"mmo{stringCounter}"),
+                keepMetadataLocation: new MockElementLocation($"km{stringCounter}"),
+                removeMetadataLocation: new MockElementLocation($"rm{stringCounter}"),
+                keepDuplicatesLocation: new MockElementLocation($"kd{stringCounter}"),
+                conditionLocation: new MockElementLocation($"cl{stringCounter}"),
+                metadata: metadata
             );
         }
 
@@ -67,7 +71,7 @@ public static ProjectPropertyGroupTaskInstance CreateTargetPropertyGroup(
             int? counter = null,
             List<ProjectPropertyGroupTaskPropertyInstance> properties = null)
         {
-            properties = properties ?? new List<ProjectPropertyGroupTaskPropertyInstance>();
+            properties ??= new List<ProjectPropertyGroupTaskPropertyInstance>();
             var stringCounter = CounterToString(counter);
 
             return new ProjectPropertyGroupTaskInstance(
@@ -105,16 +109,16 @@ public static ProjectOnErrorInstance CreateTargetOnError(int? counter = null)
 
         public static ProjectTaskInstance CreateTargetTask(
             int? counter = null,
-            IDictionary<string, Tuple<string, ElementLocation>> parameters = null,
+            IDictionary<string, (string, ElementLocation)> parameters = null,
             List<ProjectTaskInstanceChild> outputs = null)
         {
             var stringCounter = CounterToString(counter);
 
             var readonlyParameters = parameters != null
-                ? new CopyOnWriteDictionary<string, Tuple<string, ElementLocation>>(parameters)
-                : new CopyOnWriteDictionary<string, Tuple<string, ElementLocation>>();
+                ? new CopyOnWriteDictionary<string, (string, ElementLocation)>(parameters)
+                : new CopyOnWriteDictionary<string, (string, ElementLocation)>();
 
-            outputs = outputs ?? new List<ProjectTaskInstanceChild>();
+            outputs ??= new List<ProjectTaskInstanceChild>();
 
             return new ProjectTaskInstance(
                 $"n{stringCounter}",
@@ -167,8 +171,8 @@ public static ProjectTargetInstance CreateTarget(
             System.Collections.ObjectModel.ReadOnlyCollection<ProjectTargetInstanceChild> children,
             System.Collections.ObjectModel.ReadOnlyCollection<ProjectOnErrorInstance> errorChildren)
         {
-            children = children ?? new System.Collections.ObjectModel.ReadOnlyCollection<ProjectTargetInstanceChild>(new List<ProjectTargetInstanceChild>());
-            errorChildren = errorChildren ?? new System.Collections.ObjectModel.ReadOnlyCollection<ProjectOnErrorInstance>(new List<ProjectOnErrorInstance>());
+            children ??= new System.Collections.ObjectModel.ReadOnlyCollection<ProjectTargetInstanceChild>(new List<ProjectTargetInstanceChild>());
+            errorChildren ??= new System.Collections.ObjectModel.ReadOnlyCollection<ProjectOnErrorInstance>(new List<ProjectOnErrorInstance>());
             var stringCounter = CounterToString(counter);
 
             return new ProjectTargetInstance(
diff --git a/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs b/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs
index 07c44ac86cb..0c8aa4a2da8 100644
--- a/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs
+++ b/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs
@@ -1,11 +1,10 @@
 ﻿using System;
 using System.Collections.Generic;
+using System.Diagnostics;
 using System.Linq;
 using Microsoft.Build.Framework;
 using Microsoft.Build.UnitTests;
-using Shouldly;
 using Xunit;
-using Xunit.Abstractions;
 
 namespace Microsoft.Build.Engine.UnitTests
 {
@@ -14,13 +13,6 @@ public sealed class WarningsAsMessagesAndErrorsTests
         private const string ExpectedEventMessage = "03767942CDB147B98D0ECDBDE1436DA3";
         private const string ExpectedEventCode = "0BF68998";
 
-        ITestOutputHelper _output;
-
-        public WarningsAsMessagesAndErrorsTests(ITestOutputHelper output)
-        {
-            _output = output;
-        }
-
         [Fact]
         public void TreatAllWarningsAsErrors()
         {
@@ -37,7 +29,7 @@ public void TreatAllWarningsAsErrors()
         [Fact]
         public void TreatWarningsAsErrorsWhenBuildingSameProjectMultipleTimes()
         {
-            using (TestEnvironment testEnvironment = TestEnvironment.Create(_output))
+            using (TestEnvironment testEnvironment = TestEnvironment.Create())
             {
                 TransientTestProjectWithFiles project2 = testEnvironment.CreateTestProjectWithFiles($@"
                 <Project xmlns=""msbuildnamespace"">
@@ -131,7 +123,7 @@ public void TreatWarningsAsMessagesWhenSpecified()
         [Fact]
         public void TreatWarningsAsMessagesWhenBuildingSameProjectMultipleTimes()
         {
-            using (TestEnvironment testEnvironment = TestEnvironment.Create(_output))
+            using (TestEnvironment testEnvironment = TestEnvironment.Create())
             {
                 TransientTestProjectWithFiles project2 = testEnvironment.CreateTestProjectWithFiles($@"
                 <Project xmlns=""msbuildnamespace"">
@@ -271,111 +263,5 @@ private string GetTestProject(bool? treatAllWarningsAsErrors = null, string warn
                 </Target>
             </Project>";
         }
-
-        [Fact]
-        public void TaskReturnsFailureButDoesNotLogError_ShouldCauseBuildFailure()
-        {
-
-            using (TestEnvironment env = TestEnvironment.Create(_output))
-            {
-                TransientTestProjectWithFiles proj = env.CreateTestProjectWithFiles($@"
-                <Project>
-                    <UsingTask TaskName = ""ReturnFailureWithoutLoggingErrorTask"" AssemblyName=""Microsoft.Build.Engine.UnitTests""/>
-                    <Target Name='Build'>
-                        <ReturnFailureWithoutLoggingErrorTask/>
-                    </Target>
-                </Project>");
-
-                MockLogger logger = proj.BuildProjectExpectFailure();
-
-                logger.AssertLogContains("MSB4132");
-            }
-        }
-
-        [Fact]
-        public void TaskReturnsFailureButDoesNotLogError_ContinueOnError_WarnAndContinue()
-        {
-
-            using (TestEnvironment env = TestEnvironment.Create(_output))
-            {
-                TransientTestProjectWithFiles proj = env.CreateTestProjectWithFiles($@"
-                <Project>
-                    <UsingTask TaskName = ""ReturnFailureWithoutLoggingErrorTask"" AssemblyName=""Microsoft.Build.Engine.UnitTests""/>
-                    <Target Name='Build'>
-                        <ReturnFailureWithoutLoggingErrorTask
-                            ContinueOnError=""WarnAndContinue""/>
-                    </Target>
-                </Project>");
-
-                MockLogger logger = proj.BuildProjectExpectSuccess();
-
-                logger.WarningCount.ShouldBe(1);
-
-                logger.AssertLogContains("MSB4132");
-            }
-        }
-
-        [Fact]
-        public void TaskReturnsFailureButDoesNotLogError_ContinueOnError_True()
-        {
-
-            using (TestEnvironment env = TestEnvironment.Create(_output))
-            {
-                TransientTestProjectWithFiles proj = env.CreateTestProjectWithFiles($@"
-                <Project>
-                    <UsingTask TaskName = ""ReturnFailureWithoutLoggingErrorTask"" AssemblyName=""Microsoft.Build.Engine.UnitTests""/>
-                    <Target Name='Build'>
-                        <ReturnFailureWithoutLoggingErrorTask
-                            ContinueOnError=""true""/>
-                    </Target>
-                </Project>");
-
-                MockLogger logger = proj.BuildProjectExpectSuccess();
-
-                logger.AssertLogContains("MSB4132");
-            }
-        }
-
-        [Fact]
-        public void TaskReturnsFailureButDoesNotLogError_ContinueOnError_ErrorAndStop()
-        {
-
-            using (TestEnvironment env = TestEnvironment.Create(_output))
-            {
-                TransientTestProjectWithFiles proj = env.CreateTestProjectWithFiles($@"
-                <Project>
-                    <UsingTask TaskName = ""ReturnFailureWithoutLoggingErrorTask"" AssemblyName=""Microsoft.Build.Engine.UnitTests""/>
-                    <Target Name='Build'>
-                        <ReturnFailureWithoutLoggingErrorTask
-                            ContinueOnError=""ErrorAndStop""/>
-                    </Target>
-                </Project>");
-
-                MockLogger logger = proj.BuildProjectExpectFailure();
-
-                logger.AssertLogContains("MSB4132");
-            }
-        }
-
-        [Fact]
-        public void TaskReturnsFailureButDoesNotLogError_ContinueOnError_False()
-        {
-
-            using (TestEnvironment env = TestEnvironment.Create(_output))
-            {
-                TransientTestProjectWithFiles proj = env.CreateTestProjectWithFiles($@"
-                <Project>
-                    <UsingTask TaskName = ""ReturnFailureWithoutLoggingErrorTask"" AssemblyName=""Microsoft.Build.Engine.UnitTests""/>
-                    <Target Name='Build'>
-                        <ReturnFailureWithoutLoggingErrorTask
-                            ContinueOnError=""false""/>
-                    </Target>
-                </Project>");
-
-                MockLogger logger = proj.BuildProjectExpectFailure();
-
-                logger.AssertLogContains("MSB4132");
-            }
-        }
     }
 }
diff --git a/src/Build/BackEnd/BuildManager/BuildParameters.cs b/src/Build/BackEnd/BuildManager/BuildParameters.cs
index 8fe63b79834..44a8f200613 100644
--- a/src/Build/BackEnd/BuildManager/BuildParameters.cs
+++ b/src/Build/BackEnd/BuildManager/BuildParameters.cs
@@ -296,6 +296,7 @@ private BuildParameters(BuildParameters other)
             _inputResultsCacheFiles = other._inputResultsCacheFiles;
             _outputResultsCacheFile = other._outputResultsCacheFile;
             DiscardBuildResults = other.DiscardBuildResults;
+            LowPriority = other.LowPriority;
         }
 
 #if FEATURE_THREAD_PRIORITY
@@ -769,6 +770,11 @@ public string OutputResultsCacheFile
         /// </summary>
         public bool DiscardBuildResults { get; set; } = false;
 
+        /// <summary>
+        /// Gets or sets a value indicating whether the build process should run as low priority.
+        /// </summary>
+        public bool LowPriority { get; set; }
+
         /// <summary>
         /// Retrieves a toolset.
         /// </summary>
@@ -833,6 +839,7 @@ void ITranslatable.Translate(ITranslator translator)
             // LegacyThreadingSemantics is not transmitted.
             // InputResultsCacheFiles and OutputResultsCacheFile are not transmitted, as they are only used by the BuildManager
             // DiscardBuildResults is not transmitted.
+            // LowPriority is passed as an argument to new nodes, so it doesn't need to be transmitted here.
         }
 
 #region INodePacketTranslatable Members
diff --git a/src/Build/BackEnd/Components/BuildRequestEngine/BuildRequestEngine.cs b/src/Build/BackEnd/Components/BuildRequestEngine/BuildRequestEngine.cs
index 5cb0afd7c05..2cf6ea5f8ed 100644
--- a/src/Build/BackEnd/Components/BuildRequestEngine/BuildRequestEngine.cs
+++ b/src/Build/BackEnd/Components/BuildRequestEngine/BuildRequestEngine.cs
@@ -280,13 +280,8 @@ public void CleanupForBuild()
             {
                 _workQueue.Completion.Wait();
             }
-            catch (Exception e)
+            catch (Exception e) when (!ExceptionHandling.IsCriticalException(e))
             {
-                if (ExceptionHandling.IsCriticalException(e))
-                {
-                    throw;
-                }
-
                 // If we caught an exception during cleanup, we need to log that
                 ErrorUtilities.ThrowInternalError("Failure during engine shutdown.  Exception: {0}", e.ToString());
             }
@@ -516,7 +511,6 @@ public void ReportConfigurationResponse(BuildRequestConfigurationResponse respon
                                         request: request,
                                         configInitialTargets: config.ProjectInitialTargets,
                                         configDefaultTargets: config.ProjectDefaultTargets,
-                                        additionalTargetsToCheckForOverallResult: config.GetAfterTargetsForDefaultTargets(request),
                                         skippedResultsDoNotCauseCacheMiss: _componentHost.BuildParameters.SkippedResultsDoNotCauseCacheMiss());
 
                                     if (cacheResponse.Type == ResultsCacheResponseType.Satisfied)
@@ -1178,7 +1172,6 @@ private void IssueBuildRequests(BuildRequestEntry issuingEntry, FullyQualifiedBu
                             request: newRequest,
                             configInitialTargets: matchingConfig.ProjectInitialTargets,
                             configDefaultTargets: matchingConfig.ProjectDefaultTargets,
-                            additionalTargetsToCheckForOverallResult: matchingConfig.GetAfterTargetsForDefaultTargets(newRequest),
                             skippedResultsDoNotCauseCacheMiss: _componentHost.BuildParameters.SkippedResultsDoNotCauseCacheMiss());
 
                         if (response.Type == ResultsCacheResponseType.Satisfied)
diff --git a/src/Build/BackEnd/Components/Caching/IResultsCache.cs b/src/Build/BackEnd/Components/Caching/IResultsCache.cs
index 482db3eb491..15e9bfb9db8 100644
--- a/src/Build/BackEnd/Components/Caching/IResultsCache.cs
+++ b/src/Build/BackEnd/Components/Caching/IResultsCache.cs
@@ -49,14 +49,12 @@ internal interface IResultsCache : IBuildComponent, ITranslatable, IEnumerable<B
         /// <param name="request">The request whose results we should return</param>
         /// <param name="configInitialTargets">The initial targets for the request's configuration.</param>
         /// <param name="configDefaultTargets">The default targets for the request's configuration.</param>
-        /// <param name="additionalTargetsToCheckForOverallResult">Any additional targets that need to be checked to determine overall 
-        /// pass or failure, but that are not included as actual results. (E.g. AfterTargets of an entrypoint target)</param>
         /// <param name="skippedResultsDoNotCauseCacheMiss">If false, a cached skipped target will cause this method to return "NotSatisfied".  
         /// If true, then as long as there is a result in the cache (regardless of whether it was skipped or not), this method 
         /// will return "Satisfied". In most cases this should be false, but it may be set to true in a situation where there is no 
         /// chance of re-execution (which is the usual response to missing / skipped targets), and the caller just needs the data.</param>
         /// <returns>A response indicating the results, if any, and the targets needing to be built, if any.</returns>
-        ResultsCacheResponse SatisfyRequest(BuildRequest request, List<string> configInitialTargets, List<string> configDefaultTargets, List<string> additionalTargetsToCheckForOverallResult, bool skippedResultsDoNotCauseCacheMiss);
+        ResultsCacheResponse SatisfyRequest(BuildRequest request, List<string> configInitialTargets, List<string> configDefaultTargets, bool skippedResultsDoNotCauseCacheMiss);
 
         /// <summary>
         /// Clears the results for a specific configuration.
diff --git a/src/Build/BackEnd/Components/Caching/ResultsCache.cs b/src/Build/BackEnd/Components/Caching/ResultsCache.cs
index 6b478133210..36e1a24824e 100644
--- a/src/Build/BackEnd/Components/Caching/ResultsCache.cs
+++ b/src/Build/BackEnd/Components/Caching/ResultsCache.cs
@@ -149,14 +149,12 @@ public BuildResult GetResultsForConfiguration(int configurationId)
         /// <param name="request">The request whose results we should return</param>
         /// <param name="configInitialTargets">The initial targets for the request's configuration.</param>
         /// <param name="configDefaultTargets">The default targets for the request's configuration.</param>
-        /// <param name="additionalTargetsToCheckForOverallResult">Any additional targets that need to be checked to determine overall 
-        /// pass or failure, but that are not included as actual results. (E.g. AfterTargets of an entrypoint target)</param>
         /// <param name="skippedResultsDoNotCauseCacheMiss">If false, a cached skipped target will cause this method to return "NotSatisfied".  
         /// If true, then as long as there is a result in the cache (regardless of whether it was skipped or not), this method 
         /// will return "Satisfied". In most cases this should be false, but it may be set to true in a situation where there is no 
         /// chance of re-execution (which is the usual response to missing / skipped targets), and the caller just needs the data.</param>
         /// <returns>A response indicating the results, if any, and the targets needing to be built, if any.</returns>
-        public ResultsCacheResponse SatisfyRequest(BuildRequest request, List<string> configInitialTargets, List<string> configDefaultTargets, List<string> additionalTargetsToCheckForOverallResult, bool skippedResultsDoNotCauseCacheMiss)
+        public ResultsCacheResponse SatisfyRequest(BuildRequest request, List<string> configInitialTargets, List<string> configDefaultTargets, bool skippedResultsDoNotCauseCacheMiss)
         {
             ErrorUtilities.VerifyThrowArgument(request.IsConfigurationResolved, "UnresolvedConfigurationInRequest");
             ResultsCacheResponse response = new ResultsCacheResponse(ResultsCacheResponseType.NotSatisfied);
@@ -207,7 +205,7 @@ public ResultsCacheResponse SatisfyRequest(BuildRequest request, List<string> co
                                 targetsToAddResultsFor.AddRange(configDefaultTargets);
                             }
 
-                            response.Results = new BuildResult(request, allResults, targetsToAddResultsFor.ToArray(), additionalTargetsToCheckForOverallResult, null);
+                            response.Results = new BuildResult(request, allResults, targetsToAddResultsFor.ToArray(), null);
                         }
                     }
                     else
diff --git a/src/Build/BackEnd/Components/Caching/ResultsCacheWithOverride.cs b/src/Build/BackEnd/Components/Caching/ResultsCacheWithOverride.cs
index 10873f841e0..66b1e17ccca 100644
--- a/src/Build/BackEnd/Components/Caching/ResultsCacheWithOverride.cs
+++ b/src/Build/BackEnd/Components/Caching/ResultsCacheWithOverride.cs
@@ -77,14 +77,12 @@ public ResultsCacheResponse SatisfyRequest(
             BuildRequest request,
             List<string> configInitialTargets,
             List<string> configDefaultTargets,
-            List<string> additionalTargetsToCheckForOverallResult,
             bool skippedResultsDoNotCauseCacheMiss)
         {
             var overrideRequest = _override.SatisfyRequest(
                 request,
                 configInitialTargets,
                 configDefaultTargets,
-                additionalTargetsToCheckForOverallResult,
                 skippedResultsDoNotCauseCacheMiss);
 
             if (overrideRequest.Type == ResultsCacheResponseType.Satisfied)
@@ -95,7 +93,6 @@ public ResultsCacheResponse SatisfyRequest(
                         request,
                         configInitialTargets,
                         configDefaultTargets,
-                        additionalTargetsToCheckForOverallResult,
                         skippedResultsDoNotCauseCacheMiss)
                         .Type == ResultsCacheResponseType.NotSatisfied,
                     "caches should not overlap");
@@ -107,7 +104,6 @@ public ResultsCacheResponse SatisfyRequest(
                 request,
                 configInitialTargets,
                 configDefaultTargets,
-                additionalTargetsToCheckForOverallResult,
                 skippedResultsDoNotCauseCacheMiss);
         }
 
diff --git a/src/Build/BackEnd/Components/Communications/NodeEndpointOutOfProc.cs b/src/Build/BackEnd/Components/Communications/NodeEndpointOutOfProc.cs
index 5ef38bead3d..20660afd183 100644
--- a/src/Build/BackEnd/Components/Communications/NodeEndpointOutOfProc.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeEndpointOutOfProc.cs
@@ -36,6 +36,8 @@ internal class NodeEndpointOutOfProc : NodeEndpointOutOfProcBase
 
         private readonly bool _enableReuse;
 
+        private readonly bool _lowPriority;
+
         #endregion
 
         #region Constructors and Factories
@@ -49,11 +51,13 @@ internal class NodeEndpointOutOfProc : NodeEndpointOutOfProcBase
         internal NodeEndpointOutOfProc(
             string pipeName, 
             IBuildComponentHost host,
-            bool enableReuse)
+            bool enableReuse,
+            bool lowPriority)
         {
             ErrorUtilities.VerifyThrowArgumentNull(host, "host");
             _componentHost = host;
             _enableReuse = enableReuse;
+            _lowPriority = lowPriority;
 
             InternalConstruct(pipeName);
         }
@@ -65,7 +69,7 @@ internal NodeEndpointOutOfProc(
         /// </summary>
         protected override long GetHostHandshake()
         {
-            return NodeProviderOutOfProc.GetHostHandshake(_enableReuse);
+            return NodeProviderOutOfProc.GetHostHandshake(_enableReuse, _lowPriority);
         }
 
         /// <summary>
diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProc.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProc.cs
index 5ba5226af19..e7048a57870 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProc.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProc.cs
@@ -72,10 +72,13 @@ public int AvailableNodes
         /// Derived from the binary timestamp to avoid mixing binary versions,
         /// Is64BitProcess to avoid mixing bitness, and enableNodeReuse to
         /// ensure that a /nr:false build doesn't reuse clients left over from
-        /// a prior /nr:true build.
+        /// a prior /nr:true build. The enableLowPriority flag is to ensure that
+        /// a build with /low:false doesn't reuse clients left over for a prior
+        /// /low:true build.
         /// </summary>
         /// <param name="enableNodeReuse">Is reuse of build nodes allowed?</param>
-        internal static long GetHostHandshake(bool enableNodeReuse)
+        /// <param name="enableLowPriority">Is the build running at low priority?</param>
+        internal static long GetHostHandshake(bool enableNodeReuse, bool enableLowPriority)
         {
             long baseHandshake = Constants.AssemblyTimestamp;
 
@@ -83,6 +86,8 @@ internal static long GetHostHandshake(bool enableNodeReuse)
 
             baseHandshake = baseHandshake*17 + enableNodeReuse.GetHashCode();
 
+            baseHandshake = baseHandshake*17 + enableLowPriority.GetHashCode();
+
             return CommunicationsUtilities.GenerateHostHandshakeFromBase(baseHandshake, GetClientHandshake());
         }
 
@@ -111,17 +116,17 @@ public bool CreateNode(int nodeId, INodePacketFactory factory, NodeConfiguration
                 return false;
             }
 
-            // Start the new process.  We pass in a node mode with a node number of 1, to indicate that we 
+            // Start the new process.  We pass in a node mode with a node number of 1, to indicate that we
             // want to start up just a standard MSBuild out-of-proc node.
             // Note: We need to always pass /nodeReuse to ensure the value for /nodeReuse from msbuild.rsp
             // (next to msbuild.exe) is ignored.
-            string commandLineArgs = ComponentHost.BuildParameters.EnableNodeReuse ? 
-                "/nologo /nodemode:1 /nodeReuse:true" : 
-                "/nologo /nodemode:1 /nodeReuse:false";
+            string commandLineArgs = $"/nologo /nodemode:1 /nodeReuse:{ComponentHost.BuildParameters.EnableNodeReuse.ToString().ToLower()} /low:{ComponentHost.BuildParameters.LowPriority.ToString().ToLower()}";
 
             // Make it here.
             CommunicationsUtilities.Trace("Starting to acquire a new or existing node to establish node ID {0}...", nodeId);
-            NodeContext context = GetNode(null, commandLineArgs, nodeId, factory, NodeProviderOutOfProc.GetHostHandshake(ComponentHost.BuildParameters.EnableNodeReuse), NodeProviderOutOfProc.GetClientHandshake(), NodeContextTerminated);
+
+            long hostHandShake = NodeProviderOutOfProc.GetHostHandshake(ComponentHost.BuildParameters.EnableNodeReuse, ComponentHost.BuildParameters.LowPriority);
+            NodeContext context = GetNode(null, commandLineArgs, nodeId, factory, hostHandShake, NodeProviderOutOfProc.GetClientHandshake(), NodeContextTerminated);
 
             if (null != context)
             {
@@ -173,13 +178,21 @@ public void ShutdownConnectedNodes(bool enableReuse)
         /// </summary>
         public void ShutdownAllNodes()
         {
-            // if no BuildParameters were specified for this build,
+            // If no BuildParameters were specified for this build,
             // we must be trying to shut down idle nodes from some
             // other, completed build. If they're still around,
             // they must have been started with node reuse.
             bool nodeReuse = ComponentHost.BuildParameters?.EnableNodeReuse ?? true;
 
-            ShutdownAllNodes(NodeProviderOutOfProc.GetHostHandshake(nodeReuse), NodeProviderOutOfProc.GetClientHandshake(), NodeContextTerminated);
+            // To avoid issues with mismatched priorities not shutting
+            // down all the nodes on exit, we will attempt to shutdown
+            // all matching nodes with and without the priority bit set.
+            // This means we need both versions of the handshake.
+            ShutdownAllNodes(
+                NodeProviderOutOfProc.GetHostHandshake(nodeReuse, enableLowPriority: false),
+                NodeProviderOutOfProc.GetHostHandshake(nodeReuse, enableLowPriority: true),
+                NodeProviderOutOfProc.GetClientHandshake(),
+                NodeContextTerminated);
         }
 
         #endregion
diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
index 64ec2fb321c..898c3f432fe 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
@@ -103,9 +103,10 @@ protected void ShutdownConnectedNodes(List<NodeContext> contextsToShutDown, bool
         /// Shuts down all of the managed nodes permanently.
         /// </summary>
         /// <param name="hostHandshake">host handshake key</param>
+        /// <param name="hostHandshakeWithLowPriority">host handshake key with low priority added</param>
         /// <param name="clientHandshake">client handshake key</param>
         /// <param name="terminateNode">Delegate used to tell the node provider that a context has terminated</param>
-        protected void ShutdownAllNodes(long hostHandshake, long clientHandshake, NodeContextTerminateDelegate terminateNode)
+        protected void ShutdownAllNodes(long hostHandshake, long hostHandshakeWithLowPriority, long clientHandshake, NodeContextTerminateDelegate terminateNode)
         {
             // INodePacketFactory
             INodePacketFactory factory = new NodePacketFactory();
@@ -121,7 +122,17 @@ protected void ShutdownAllNodes(long hostHandshake, long clientHandshake, NodeCo
             // For all processes in the list, send signal to terminate if able to connect
             foreach (Process nodeProcess in nodeProcesses)
             {
-                Stream nodeStream = TryConnectToProcess(nodeProcess.Id, 30/*verified to miss nodes if smaller*/, hostHandshake, clientHandshake);
+                // A 2013 comment suggested some nodes take this long to respond, so a smaller timeout would miss nodes.
+                int timeout = 30;
+
+                // Attempt to connect to the process with the handshake without low priority.
+                Stream nodeStream = TryConnectToProcess(nodeProcess.Id, timeout, hostHandshake, clientHandshake);
+
+                if (null == nodeStream)
+                {
+                    // If we couldn't connect attempt to connect to the process with the handshake including low priority.
+                    nodeStream = TryConnectToProcess(nodeProcess.Id, timeout, hostHandshakeWithLowPriority, clientHandshake);
+                }
 
                 if (null != nodeStream)
                 {
@@ -361,13 +372,8 @@ private Stream TryConnectToProcess(int nodeProcessId, int timeout, long hostHand
                 CommunicationsUtilities.Trace("Successfully connected to pipe {0}...!", pipeName);
                 return nodeStream;
             }
-            catch (Exception e)
+            catch (Exception e) when (!ExceptionHandling.IsCriticalException(e))
             {
-                if (ExceptionHandling.IsCriticalException(e))
-                {
-                    throw;
-                }
-
                 // Can be:
                 // UnauthorizedAccessException -- Couldn't connect, might not be a node.
                 // IOException -- Couldn't connect, already in use.
@@ -833,13 +839,8 @@ private bool ProcessHeaderBytesRead(int bytesRead)
                             CommunicationsUtilities.Trace(_nodeId, "   Child Process {0} is still running.", _processId);
                         }
                     }
-                    catch (Exception e)
+                    catch (Exception e) when (!ExceptionHandling.IsCriticalException(e))
                     {
-                        if (ExceptionHandling.IsCriticalException(e))
-                        {
-                            throw;
-                        }
-
                         CommunicationsUtilities.Trace(_nodeId, "Unable to retrieve remote process information. {0}", e);
                     }
 
diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs
index 4d2c18a022d..2ec94b46b8a 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs
@@ -36,39 +36,39 @@ namespace Microsoft.Build.BackEnd
     internal class NodeProviderOutOfProcTaskHost : NodeProviderOutOfProcBase, INodeProvider, INodePacketFactory, INodePacketHandler
     {
         /// <summary>
-        /// The maximum number of nodes that this provider supports. Should 
-        /// always be equivalent to the number of different TaskHostContexts 
-        /// that exist. 
+        /// The maximum number of nodes that this provider supports. Should
+        /// always be equivalent to the number of different TaskHostContexts
+        /// that exist.
         /// </summary>
         private const int MaxNodeCount = 4;
 
         /// <summary>
-        /// Store the path for MSBuild / MSBuildTaskHost so that we don't have to keep recalculating it. 
+        /// Store the path for MSBuild / MSBuildTaskHost so that we don't have to keep recalculating it.
         /// </summary>
         private static string s_baseTaskHostPath;
 
         /// <summary>
-        /// Store the 64-bit path for MSBuild / MSBuildTaskHost so that we don't have to keep recalculating it. 
+        /// Store the 64-bit path for MSBuild / MSBuildTaskHost so that we don't have to keep recalculating it.
         /// </summary>
         private static string s_baseTaskHostPath64;
 
         /// <summary>
-        /// Store the path for the 32-bit MSBuildTaskHost so that we don't have to keep re-calculating it. 
+        /// Store the path for the 32-bit MSBuildTaskHost so that we don't have to keep re-calculating it.
         /// </summary>
         private static string s_pathToX32Clr2;
 
         /// <summary>
-        /// Store the path for the 64-bit MSBuildTaskHost so that we don't have to keep re-calculating it. 
+        /// Store the path for the 64-bit MSBuildTaskHost so that we don't have to keep re-calculating it.
         /// </summary>
         private static string s_pathToX64Clr2;
 
         /// <summary>
-        /// Store the path for the 32-bit MSBuild so that we don't have to keep re-calculating it. 
+        /// Store the path for the 32-bit MSBuild so that we don't have to keep re-calculating it.
         /// </summary>
         private static string s_pathToX32Clr4;
 
         /// <summary>
-        /// Store the path for the 64-bit MSBuild so that we don't have to keep re-calculating it. 
+        /// Store the path for the 64-bit MSBuild so that we don't have to keep re-calculating it.
         /// </summary>
         private static string s_pathToX64Clr4;
 
@@ -83,7 +83,7 @@ internal class NodeProviderOutOfProcTaskHost : NodeProviderOutOfProcBase, INodeP
         private static string s_msbuildTaskHostName;
 
         /// <summary>
-        /// Are there any active nodes? 
+        /// Are there any active nodes?
         /// </summary>
         private ManualResetEvent _noNodesActiveEvent;
 
@@ -93,12 +93,12 @@ internal class NodeProviderOutOfProcTaskHost : NodeProviderOutOfProcBase, INodeP
         private Dictionary<TaskHostContext, NodeContext> _nodeContexts;
 
         /// <summary>
-        /// A mapping of all of the INodePacketFactories wrapped by this provider. 
+        /// A mapping of all of the INodePacketFactories wrapped by this provider.
         /// </summary>
         private IDictionary<int, INodePacketFactory> _nodeIdToPacketFactory;
 
         /// <summary>
-        /// A mapping of all of the INodePacketHandlers wrapped by this provider. 
+        /// A mapping of all of the INodePacketHandlers wrapped by this provider.
         /// </summary>
         private IDictionary<int, INodePacketHandler> _nodeIdToPacketHandler;
 
@@ -108,7 +108,7 @@ internal class NodeProviderOutOfProcTaskHost : NodeProviderOutOfProcBase, INodeP
         private HashSet<int> _activeNodes;
 
         /// <summary>
-        /// Packet factory we use if there's not already one associated with a particular context. 
+        /// Packet factory we use if there's not already one associated with a particular context.
         /// </summary>
         private NodePacketFactory _localPacketFactory;
 
@@ -217,9 +217,21 @@ public void ShutdownConnectedNodes(bool enableReuse)
         /// </summary>
         public void ShutdownAllNodes()
         {
-            ShutdownAllNodes(NodeProviderOutOfProc.GetHostHandshake(ComponentHost.BuildParameters.EnableNodeReuse), NodeProviderOutOfProc.GetClientHandshake(), NodeContextTerminated);
+            bool nodeReuse = ComponentHost.BuildParameters.EnableNodeReuse;
+
+            // To avoid issues with mismatched priorities not shutting
+            // down all the nodes on exit, we will attempt to shutdown
+            // all matching notes with and without the priroity bit set.
+            // So precompute both versions of the handshake now.
+            long hostHandshake = NodeProviderOutOfProc.GetHostHandshake(nodeReuse, enableLowPriority: false);
+            long hostHandshakeWithLow = NodeProviderOutOfProc.GetHostHandshake(nodeReuse, enableLowPriority: true);
+
+            ShutdownAllNodes(
+                hostHandshake,
+                hostHandshakeWithLow,
+                NodeProviderOutOfProc.GetClientHandshake(),
+                NodeContextTerminated);
         }
-
         #endregion
 
         #region IBuildComponent Members
@@ -358,7 +370,7 @@ static internal IBuildComponent CreateComponent(BuildComponentType componentType
         }
 
         /// <summary>
-        /// Clears out our cached values for the various task host names and paths. 
+        /// Clears out our cached values for the various task host names and paths.
         /// FOR UNIT TESTING ONLY
         /// </summary>
         internal static void ClearCachedTaskHostPaths()
@@ -374,7 +386,7 @@ internal static void ClearCachedTaskHostPaths()
         }
 
         /// <summary>
-        /// Given a TaskHostContext, returns the name of the executable we should be searching for. 
+        /// Given a TaskHostContext, returns the name of the executable we should be searching for.
         /// </summary>
         internal static string GetTaskHostNameFromHostContext(TaskHostContext hostContext)
         {
@@ -404,9 +416,9 @@ internal static string GetTaskHostNameFromHostContext(TaskHostContext hostContex
         }
 
         /// <summary>
-        /// Given a TaskHostContext, return the appropriate location of the 
+        /// Given a TaskHostContext, return the appropriate location of the
         /// executable (MSBuild or MSBuildTaskHost) that we wish to use, or null
-        /// if that location cannot be resolved.  
+        /// if that location cannot be resolved.
         /// </summary>
         internal static string GetMSBuildLocationFromHostContext(TaskHostContext hostContext)
         {
@@ -473,7 +485,7 @@ internal static string GetMSBuildLocationFromHostContext(TaskHostContext hostCon
         }
 
         /// <summary>
-        /// Make sure a node in the requested context exists.  
+        /// Make sure a node in the requested context exists.
         /// </summary>
         internal bool AcquireAndSetUpHost(TaskHostContext hostContext, INodePacketFactory factory, INodePacketHandler handler, TaskHostConfiguration configuration)
         {
@@ -505,7 +517,7 @@ internal bool AcquireAndSetUpHost(TaskHostContext hostContext, INodePacketFactor
         }
 
         /// <summary>
-        /// Expected to be called when TaskHostTask is done with host of the given context.  
+        /// Expected to be called when TaskHostTask is done with host of the given context.
         /// </summary>
         internal void DisconnectFromHost(TaskHostContext hostContext)
         {
@@ -529,13 +541,13 @@ internal bool CreateNode(TaskHostContext hostContext, INodePacketFactory factory
                 return false;
             }
 
-            // Start the new process.  We pass in a node mode with a node number of 2, to indicate that we 
-            // want to start up an MSBuild task host node. 
+            // Start the new process.  We pass in a node mode with a node number of 2, to indicate that we
+            // want to start up an MSBuild task host node.
             string commandLineArgs = $" /nologo /nodemode:2 /nodereuse:{ComponentHost.BuildParameters.EnableNodeReuse} ";
 
             string msbuildLocation = GetMSBuildLocationFromHostContext(hostContext);
 
-            // we couldn't even figure out the location we're trying to launch ... just go ahead and fail.  
+            // we couldn't even figure out the location we're trying to launch ... just go ahead and fail.
             if (msbuildLocation == null)
             {
                 return false;
diff --git a/src/Build/BackEnd/Components/Logging/BuildLoggingContext.cs b/src/Build/BackEnd/Components/Logging/BuildLoggingContext.cs
index 888ba5a557c..49f31354b1c 100644
--- a/src/Build/BackEnd/Components/Logging/BuildLoggingContext.cs
+++ b/src/Build/BackEnd/Components/Logging/BuildLoggingContext.cs
@@ -65,7 +65,6 @@ internal void LogFatalTaskError(Exception exception, BuildEventFileInfo file, st
         {
             ErrorUtilities.VerifyThrow(IsValid, "must be valid");
             LoggingService.LogFatalTaskError(BuildEventContext, exception, file, taskName);
-            _hasLoggedErrors = true;
         }
     }
 }
diff --git a/src/Build/BackEnd/Components/Logging/LoggingContext.cs b/src/Build/BackEnd/Components/Logging/LoggingContext.cs
index 2ba4ef2be8c..51edfe927d6 100644
--- a/src/Build/BackEnd/Components/Logging/LoggingContext.cs
+++ b/src/Build/BackEnd/Components/Logging/LoggingContext.cs
@@ -28,8 +28,6 @@ internal class LoggingContext
         /// </summary>
         private bool _isValid;
 
-        protected bool _hasLoggedErrors;
-
         /// <summary>
         /// Constructs the logging context from a logging service and an event context.
         /// </summary>
@@ -43,7 +41,6 @@ public LoggingContext(ILoggingService loggingService, BuildEventContext eventCon
             _loggingService = loggingService;
             _eventContext = eventContext;
             _isValid = false;
-            _hasLoggedErrors = false;
         }
 
         /// <summary>
@@ -109,8 +106,6 @@ protected set
             }
         }
 
-        internal bool HasLoggedErrors { get { return _hasLoggedErrors; } set { _hasLoggedErrors = value; } }
-
         /// <summary>
         ///  Helper method to create a message build event from a string resource and some parameters
         /// </summary>
@@ -144,7 +139,6 @@ internal void LogError(BuildEventFileInfo file, string messageResourceName, para
         {
             ErrorUtilities.VerifyThrow(_isValid, "must be valid");
             _loggingService.LogError(_eventContext, file, messageResourceName, messageArgs);
-            _hasLoggedErrors = true;
         }
 
         /// <summary>
@@ -158,7 +152,6 @@ internal void LogErrorWithSubcategory(string subcategoryResourceName, BuildEvent
         {
             ErrorUtilities.VerifyThrow(_isValid, "must be valid");
             _loggingService.LogError(_eventContext, subcategoryResourceName, file, messageResourceName, messageArgs);
-            _hasLoggedErrors = true;
         }
 
         /// <summary>
@@ -173,7 +166,6 @@ internal void LogErrorFromText(string subcategoryResourceName, string errorCode,
         {
             ErrorUtilities.VerifyThrow(_isValid, "must be valid");
             _loggingService.LogErrorFromText(_eventContext, subcategoryResourceName, errorCode, helpKeyword, file, message);
-            _hasLoggedErrors = true;
         }
 
         /// <summary>
@@ -184,7 +176,6 @@ internal void LogInvalidProjectFileError(InvalidProjectFileException invalidProj
         {
             ErrorUtilities.VerifyThrow(_isValid, "must be valid");
             _loggingService.LogInvalidProjectFileError(_eventContext, invalidProjectFileException);
-            _hasLoggedErrors = true;
         }
 
         /// <summary>
@@ -198,7 +189,6 @@ internal void LogFatalError(Exception exception, BuildEventFileInfo file, string
         {
             ErrorUtilities.VerifyThrow(_isValid, "must be valid");
             _loggingService.LogFatalError(_eventContext, exception, file, messageResourceName, messageArgs);
-            _hasLoggedErrors = true;
         }
 
         /// <summary>
@@ -247,7 +237,6 @@ internal void LogFatalBuildError(Exception exception, BuildEventFileInfo file)
         {
             ErrorUtilities.VerifyThrow(IsValid, "must be valid");
             LoggingService.LogFatalBuildError(BuildEventContext, exception, file);
-            _hasLoggedErrors = true;
         }
     }
 }
diff --git a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
index 410903977ee..35d669162f1 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
@@ -7,6 +7,7 @@
 using System.Collections.Immutable;
 using System.Text;
 using System.Linq;
+using System.Runtime.InteropServices;
 using Microsoft.Build.Collections;
 using ElementLocation = Microsoft.Build.Construction.ElementLocation;
 using Microsoft.Build.Execution;
@@ -82,6 +83,9 @@ internal override void ExecuteTask(Lookup lookup)
                         {
                             HashSet<string> keepMetadata = null;
                             HashSet<string> removeMetadata = null;
+                            HashSet<string> matchOnMetadata = null;
+                            MatchOnMetadataOptions matchOnMetadataOptions = MatchOnMetadataConstants.MatchOnMetadataOptionsDefaultValue;
+
                             if (!String.IsNullOrEmpty(child.KeepMetadata))
                             {
                                 var keepMetadataEvaluated = bucket.Expander.ExpandIntoStringListLeaveEscaped(child.KeepMetadata, ExpanderOptions.ExpandAll, child.KeepMetadataLocation).ToList();
@@ -100,6 +104,17 @@ internal override void ExecuteTask(Lookup lookup)
                                 }
                             }
 
+                            if (!String.IsNullOrEmpty(child.MatchOnMetadata))
+                            {
+                                var matchOnMetadataEvaluated = bucket.Expander.ExpandIntoStringListLeaveEscaped(child.MatchOnMetadata, ExpanderOptions.ExpandAll, child.MatchOnMetadataLocation).ToList();
+                                if (matchOnMetadataEvaluated.Count > 0)
+                                {
+                                    matchOnMetadata = new HashSet<string>(matchOnMetadataEvaluated);
+                                }
+
+                                Enum.TryParse(child.MatchOnMetadataOptions, out matchOnMetadataOptions);
+                            }
+
                             if ((child.Include.Length != 0) ||
                                 (child.Exclude.Length != 0))
                             {
@@ -109,7 +124,7 @@ internal override void ExecuteTask(Lookup lookup)
                             else if (child.Remove.Length != 0)
                             {
                                 // It's a remove -- we're "removing" items from the world
-                                ExecuteRemove(child, bucket);
+                                ExecuteRemove(child, bucket, matchOnMetadata, matchOnMetadataOptions);
                             }
                             else
                             {
@@ -154,7 +169,7 @@ private void ExecuteAdd(ProjectItemGroupTaskItemInstance child, ItemBucket bucke
             bucket.Expander.Metadata = metadataTable;
 
             // Second, expand the item include and exclude, and filter existing metadata as appropriate.
-            IList<ProjectItemInstance> itemsToAdd = ExpandItemIntoItems(child, bucket.Expander, keepMetadata, removeMetadata);
+            List<ProjectItemInstance> itemsToAdd = ExpandItemIntoItems(child, bucket.Expander, keepMetadata, removeMetadata);
 
             // Third, expand the metadata.           
             foreach (ProjectItemGroupTaskMetadataInstance metadataInstance in child.Metadata)
@@ -202,7 +217,10 @@ private void ExecuteAdd(ProjectItemGroupTaskItemInstance child, ItemBucket bucke
 
             if (LogTaskInputs && !LoggingContext.LoggingService.OnlyLogCriticalEvents && itemsToAdd != null && itemsToAdd.Count > 0)
             {
-                var itemGroupText = ItemGroupLoggingHelper.GetParameterText(ResourceUtilities.GetResourceString("ItemGroupIncludeLogMessagePrefix"), child.ItemType, itemsToAdd.ToArray());
+                var itemGroupText = ItemGroupLoggingHelper.GetParameterText(
+                    ItemGroupLoggingHelper.ItemGroupIncludeLogMessagePrefix,
+                    child.ItemType,
+                    itemsToAdd);
                 LoggingContext.LogCommentFromText(MessageImportance.Low, itemGroupText);
             }
 
@@ -216,7 +234,7 @@ private void ExecuteAdd(ProjectItemGroupTaskItemInstance child, ItemBucket bucke
         /// </summary>
         /// <param name="child">The item specification to evaluate and remove.</param>
         /// <param name="bucket">The batching bucket.</param>
-        private void ExecuteRemove(ProjectItemGroupTaskItemInstance child, ItemBucket bucket)
+        private void ExecuteRemove(ProjectItemGroupTaskItemInstance child, ItemBucket bucket, HashSet<string> matchOnMetadata, MatchOnMetadataOptions matchingOptions)
         {
             ICollection<ProjectItemInstance> group = bucket.Lookup.GetItems(child.ItemType);
             if (group == null)
@@ -225,13 +243,25 @@ private void ExecuteRemove(ProjectItemGroupTaskItemInstance child, ItemBucket bu
                 return;
             }
 
-            List<ProjectItemInstance> itemsToRemove = FindItemsMatchingSpecification(group, child.Remove, child.RemoveLocation, bucket.Expander);
+            List<ProjectItemInstance> itemsToRemove = null;
+
+            if (matchOnMetadata == null)
+            {
+                itemsToRemove = FindItemsMatchingSpecification(group, child.Remove, child.RemoveLocation, bucket.Expander);
+            }
+            else
+            {
+                itemsToRemove = FindItemsUsingMatchOnMetadata(group, child, bucket, matchOnMetadata, matchingOptions);
+            }
 
             if (itemsToRemove != null)
             {
                 if (LogTaskInputs && !LoggingContext.LoggingService.OnlyLogCriticalEvents && itemsToRemove.Count > 0)
                 {
-                    var itemGroupText = ItemGroupLoggingHelper.GetParameterText(ResourceUtilities.GetResourceString("ItemGroupRemoveLogMessage"), child.ItemType, itemsToRemove.ToArray());
+                    var itemGroupText = ItemGroupLoggingHelper.GetParameterText(
+                        ItemGroupLoggingHelper.ItemGroupRemoveLogMessage,
+                        child.ItemType,
+                        itemsToRemove);
                     LoggingContext.LogCommentFromText(MessageImportance.Low, itemGroupText);
                 }
 
@@ -239,6 +269,29 @@ private void ExecuteRemove(ProjectItemGroupTaskItemInstance child, ItemBucket bu
             }
         }
 
+        private List<ProjectItemInstance> FindItemsUsingMatchOnMetadata(
+            ICollection<ProjectItemInstance> items,
+            ProjectItemGroupTaskItemInstance child,
+            ItemBucket bucket,
+            HashSet<string> matchOnMetadata,
+            MatchOnMetadataOptions options)
+        {
+            ErrorUtilities.VerifyThrowArgumentNull(matchOnMetadata, nameof(matchOnMetadata));
+
+            var itemSpec = new ItemSpec<ProjectPropertyInstance, ProjectItemInstance>(child.Remove, bucket.Expander, child.RemoveLocation, Project.Directory, true);
+
+            ProjectFileErrorUtilities.VerifyThrowInvalidProjectFile(
+                itemSpec.Fragments.Count == 1
+                && itemSpec.Fragments.First() is ItemSpec<ProjectPropertyInstance, ProjectItemInstance>.ItemExpressionFragment
+                && matchOnMetadata.Count == 1,
+                new BuildEventFileInfo(string.Empty),
+                "OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem",
+                child.RemoveLocation,
+                child.Remove);
+
+            return items.Where(item => itemSpec.MatchesItemOnMetadata(item, matchOnMetadata, options)).ToList();
+        }
+
         /// <summary>
         /// Modifies items in the world - specifically, changes their metadata. Changes to items that are part of the project manifest are backed up, so 
         /// they can be reverted when the project is reset after the end of the build.
@@ -333,7 +386,7 @@ private void GetBatchableValuesFromBuildItemGroupChild(List<string> parameterVal
         /// been refactored.
         /// </remarks>
         /// <returns>A list of items.</returns>
-        private IList<ProjectItemInstance> ExpandItemIntoItems
+        private List<ProjectItemInstance> ExpandItemIntoItems
         (
             ProjectItemGroupTaskItemInstance originalItem,
             Expander<ProjectPropertyInstance, ProjectItemInstance> expander,
@@ -344,7 +397,7 @@ ISet<string> removeMetadata
             //todo this is duplicated logic with the item computation logic from evaluation (in LazyIncludeOperation.SelectItems)
 
             ProjectErrorUtilities.VerifyThrowInvalidProject(!(keepMetadata != null && removeMetadata != null), originalItem.KeepMetadataLocation, "KeepAndRemoveMetadataMutuallyExclusive");
-            IList<ProjectItemInstance> items = new List<ProjectItemInstance>();
+            List<ProjectItemInstance> items = new List<ProjectItemInstance>();
 
             // Expand properties and metadata in Include
             string evaluatedInclude = expander.ExpandIntoStringLeaveEscaped(originalItem.Include, ExpanderOptions.ExpandPropertiesAndMetadata, originalItem.IncludeLocation);
diff --git a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupLoggingHelper.cs b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupLoggingHelper.cs
index 01af3dbef86..848c183ebb4 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupLoggingHelper.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupLoggingHelper.cs
@@ -7,6 +7,7 @@
 using System.Globalization;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
+using Microsoft.Build.Utilities;
 using System.Reflection;
 
 namespace Microsoft.Build.BackEnd
@@ -16,6 +17,16 @@ namespace Microsoft.Build.BackEnd
     /// </summary>
     internal static class ItemGroupLoggingHelper
     {
+        /// <summary>
+        /// The default character limit for logging parameters. 10k is somewhat arbitrary, see https://github.com/microsoft/msbuild/issues/4907.
+        /// </summary>
+        internal static int parameterCharacterLimit = 40_000;
+
+        /// <summary>
+        /// The default parameter limit for logging. 200 is somewhat arbitrary, see https://github.com/microsoft/msbuild/pull/5210.
+        /// </summary>
+        internal static int parameterLimit = 200;
+
         /// <summary>
         /// Gets a text serialized value of a parameter for logging.
         /// </summary>
@@ -24,6 +35,11 @@ internal static string GetParameterText(string prefix, string parameterName, par
             return GetParameterText(prefix, parameterName, (IList)parameterValues);
         }
 
+        internal static string ItemGroupIncludeLogMessagePrefix = ResourceUtilities.GetResourceString("ItemGroupIncludeLogMessagePrefix");
+        internal static string ItemGroupRemoveLogMessage = ResourceUtilities.GetResourceString("ItemGroupRemoveLogMessage");
+        internal static string OutputItemParameterMessagePrefix = ResourceUtilities.GetResourceString("OutputItemParameterMessagePrefix");
+        internal static string TaskParameterPrefix = ResourceUtilities.GetResourceString("TaskParameterPrefix");
+
         /// <summary>
         /// Gets a text serialized value of a parameter for logging.
         /// </summary>
@@ -56,13 +72,16 @@ internal static string GetParameterText(string prefix, string parameterName, ILi
                     sb.Append("\n    ");
                 }
 
-                sb.Append(parameterName + "=");
+                sb.Append(parameterName);
+                sb.Append('=');
 
                 if (!specialTreatmentForSingle)
                 {
                     sb.Append("\n");
                 }
 
+                bool truncateTaskInputs = Traits.Instance.EscapeHatches.TruncateTaskInputs;
+
                 for (int i = 0; i < parameterValue.Count; i++)
                 {
                     if (parameterValue[i] == null)
@@ -75,12 +94,18 @@ internal static string GetParameterText(string prefix, string parameterName, ILi
                         sb.Append("        ");
                     }
 
-                    sb.Append(GetStringFromParameterValue(parameterValue[i]));
+                    AppendStringFromParameterValue(sb, parameterValue[i]);
 
                     if (!specialTreatmentForSingle && i < parameterValue.Count - 1)
                     {
                         sb.Append("\n");
                     }
+
+                    if (truncateTaskInputs && (sb.Length >= parameterCharacterLimit || i > parameterLimit))
+                    {
+                        sb.Append(ResourceUtilities.GetResourceString("LogTaskInputs.Truncated"));
+                        break;
+                    }
                 }
 
                 return sb.ToString();
@@ -95,53 +120,92 @@ internal static string GetParameterText(string prefix, string parameterName, ILi
         /// </summary>
         internal static string GetStringFromParameterValue(object parameterValue)
         {
-            var type = parameterValue.GetType();
-
-            ErrorUtilities.VerifyThrow(!type.IsArray, "scalars only");
+            // fast path for the common case
+            if (parameterValue is string valueText)
+            {
+                return valueText;
+            }
 
-            if (type == typeof(string))
+            using (var sb = new ReuseableStringBuilder())
             {
-                return (string)parameterValue;
+                AppendStringFromParameterValue(sb, parameterValue);
+                return sb.ToString();
             }
-            else if (type.GetTypeInfo().IsValueType)
+        }
+
+        // Avoid allocating a temporary list to hold metadata for sorting every time.
+        // Each thread gets its own copy.
+        [ThreadStatic]
+        private static List<KeyValuePair<string, string>> keyValuePairList;
+
+        private static void AppendStringFromParameterValue(ReuseableStringBuilder sb, object parameterValue)
+        {
+            if (parameterValue is string text)
             {
-                return (string)Convert.ChangeType(parameterValue, typeof(string), CultureInfo.CurrentCulture);
+                sb.Append(text);
             }
-            else if (typeof(ITaskItem).GetTypeInfo().IsAssignableFrom(type.GetTypeInfo()))
+            else if (parameterValue is ITaskItem item)
             {
-                var item = ((ITaskItem)parameterValue);
-                string result = item.ItemSpec;
+                sb.Append(item.ItemSpec);
 
                 var customMetadata = item.CloneCustomMetadata();
+                int count = customMetadata.Count;
 
-                if (customMetadata.Count > 0)
+                if (count > 0)
                 {
-                    result += "\n";
-                    var names = new List<string>();
+                    sb.Append('\n');
 
-                    foreach (string name in customMetadata.Keys)
+                    // need to initialize the thread static on each new thread
+                    if (keyValuePairList == null)
                     {
-                        names.Add(name);
+                        keyValuePairList = new List<KeyValuePair<string, string>>(count);
                     }
 
-                    names.Sort();
+                    if (customMetadata is IDictionary<string, string> customMetadataDictionary)
+                    {
+                        foreach (KeyValuePair<string, string> kvp in customMetadataDictionary)
+                        {
+                            keyValuePairList.Add(kvp);
+                        }
+                    }
+                    else
+                    {
+                        foreach (DictionaryEntry kvp in customMetadata)
+                        {
+                            keyValuePairList.Add(new KeyValuePair<string, string>((string)kvp.Key, (string)kvp.Value));
+                        }
+                    }
 
-                    for (int i = 0; i < names.Count; i++)
+                    if (count > 1)
                     {
-                        result += "                " + names[i] + "=" + customMetadata[names[i]];
+                        keyValuePairList.Sort((l, r) => StringComparer.OrdinalIgnoreCase.Compare(l.Key, r.Key));
+                    }
 
-                        if (i < names.Count - 1)
+                    for (int i = 0; i < count; i++)
+                    {
+                        var kvp = keyValuePairList[i];
+                        sb.Append("                ");
+                        sb.Append(kvp.Key);
+                        sb.Append('=');
+                        sb.Append(kvp.Value);
+
+                        if (i < count - 1)
                         {
-                            result += "\n";
+                            sb.Append('\n');
                         }
                     }
-                }
 
-                return result;
+                    keyValuePairList.Clear();
+                }
+            }
+            else if (parameterValue.GetType().IsValueType)
+            {
+                sb.Append((string)Convert.ChangeType(parameterValue, typeof(string), CultureInfo.CurrentCulture));
+            }
+            else
+            {
+                ErrorUtilities.ThrowInternalErrorUnreachable();
             }
-
-            ErrorUtilities.ThrowInternalErrorUnreachable();
-            return null;
         }
     }
 }
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs
index e3d12518e76..fef4a4d0676 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs
@@ -181,6 +181,7 @@ public async Task<BuildResult> BuildTargets(ProjectLoggingContext loggingContext
             }
 
             // Gather up outputs for the requested targets and return those.  All of our information should be in the base lookup now.
+            ComputeAfterTargetFailures(targetNames);
             BuildResult resultsToReport = new BuildResult(_buildResult, targetNames);
 
             // Return after-build project state if requested.
@@ -766,5 +767,39 @@ private async Task<bool> CompleteOutstandingActiveRequests(string targetName)
 
             return false;
         }
+
+        private void ComputeAfterTargetFailures(string[] targetNames)
+        {
+            foreach (string targetName in targetNames)
+            {
+                if (_buildResult.ResultsByTarget.ContainsKey(targetName))
+                {
+                    // Queue of targets waiting to be processed, seeded with the specific target for which we're computing AfterTargetsHaveFailed.
+                    var targetsToCheckForAfterTargets = new Queue<string>();
+                    targetsToCheckForAfterTargets.Enqueue(targetName);
+
+                    while (targetsToCheckForAfterTargets?.Count > 0)
+                    {
+                        string targetToCheck = targetsToCheckForAfterTargets.Dequeue();
+                        IList<TargetSpecification> targetsWhichRunAfter = _requestEntry.RequestConfiguration.Project.GetTargetsWhichRunAfter(targetToCheck);
+
+                        foreach (TargetSpecification afterTarget in targetsWhichRunAfter)
+                        {
+                            _buildResult.ResultsByTarget.TryGetValue(afterTarget.TargetName, out TargetResult result);
+                            if (result?.ResultCode == TargetResultCode.Failure && !result.TargetFailureDoesntCauseBuildFailure)
+                            {
+                                // Mark the target as having an after target failed, and break the loop to move to the next target.
+                                _buildResult.ResultsByTarget[targetName].AfterTargetsHaveFailed = true;
+                                targetsToCheckForAfterTargets = null;
+                                break;
+                            }
+
+                            // We haven't seen this target yet, add it to the list to check.
+                            targetsToCheckForAfterTargets.Enqueue(afterTarget.TargetName);
+                        }
+                    }
+                }
+            }
+        }
     }
 }
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs
index 0ce84cfc277..bd9849a4217 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs
@@ -242,7 +242,7 @@ private List<string> CreateListOfParameterValues()
 
             List<string> taskParameters = new List<string>(_taskNode.ParametersForBuild.Count + _taskNode.Outputs.Count);
 
-            foreach (KeyValuePair<string, Tuple<string, ElementLocation>> taskParameter in _taskNode.ParametersForBuild)
+            foreach (KeyValuePair<string, (string, ElementLocation)> taskParameter in _taskNode.ParametersForBuild)
             {
                 taskParameters.Add(taskParameter.Value.Item1);
             }
@@ -740,7 +740,6 @@ private async Task<WorkUnitResult> ExecuteInstantiatedTask(ITaskExecutionHost ta
             UpdateContinueOnError(bucket, taskHost);
 
             bool taskResult = false;
-            bool isMSBuildTask = false;
 
             WorkUnitResultCode resultCode = WorkUnitResultCode.Success;
             WorkUnitActionCode actionCode = WorkUnitActionCode.Continue;
@@ -764,11 +763,9 @@ private async Task<WorkUnitResult> ExecuteInstantiatedTask(ITaskExecutionHost ta
                     if (taskType == typeof(MSBuild))
                     {
                         MSBuild msbuildTask = host.TaskInstance as MSBuild;
-
                         ErrorUtilities.VerifyThrow(msbuildTask != null, "Unexpected MSBuild internal task.");
 
                         var undeclaredProjects = GetUndeclaredProjects(msbuildTask);
-                        isMSBuildTask = true;
 
                         if (undeclaredProjects != null && undeclaredProjects.Count != 0)
                         {
@@ -819,13 +816,8 @@ private async Task<WorkUnitResult> ExecuteInstantiatedTask(ITaskExecutionHost ta
                         }
                     }
                 }
-                catch (Exception ex)
+                catch (Exception ex) when (!ExceptionHandling.IsCriticalException(ex) && Environment.GetEnvironmentVariable("MSBUILDDONOTCATCHTASKEXCEPTIONS") != "1")
                 {
-                    if (ExceptionHandling.IsCriticalException(ex) || (Environment.GetEnvironmentVariable("MSBUILDDONOTCATCHTASKEXCEPTIONS") == "1"))
-                    {
-                        throw;
-                    }
-
                     taskException = ex;
                 }
 
@@ -948,28 +940,6 @@ private async Task<WorkUnitResult> ExecuteInstantiatedTask(ITaskExecutionHost ta
                     }
                 }
 
-                // When a task fails it must log an error. If a task fails to do so,
-                // that is logged as an error. MSBuild tasks are an exception because
-                // errors are not logged directly from them, but the tasks spawned by them.
-                if (!isMSBuildTask && taskReturned && !taskResult && !taskLoggingContext.HasLoggedErrors)
-                {
-                    if (_continueOnError == ContinueOnError.WarnAndContinue)
-                    {
-                        taskLoggingContext.LogWarning(null,
-                            new BuildEventFileInfo(_targetChildInstance.Location),
-                            "TaskReturnedFalseButDidNotLogError",
-                            _taskNode.Name);
-
-                        taskLoggingContext.LogComment(MessageImportance.Normal, "ErrorConvertedIntoWarning");
-                    }
-                    else
-                    {
-                        taskLoggingContext.LogError(new BuildEventFileInfo(_targetChildInstance.Location),
-                            "TaskReturnedFalseButDidNotLogError",
-                            _taskNode.Name);
-                    }
-                }
-
                 // If the task returned attempt to gather its outputs.  If gathering outputs fails set the taskResults
                 // to false
                 if (taskReturned)
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
index b7d32396d35..850a818a9ba 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
@@ -242,6 +242,8 @@ internal bool IsOutOfProc
             }
         }
 
+        public bool BuildRequestsSucceeded { get; private set; } = true;
+
         #region IBuildEngine2 Members
 
         /// <summary>
@@ -309,6 +311,8 @@ public bool BuildProjectFilesInParallel(string[] projectFileNames, string[] targ
                 }
             }
 
+            BuildRequestsSucceeded = result.Result;
+
             return result.Result;
         }
 
@@ -442,7 +446,6 @@ public void LogErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs e)
                 {
                     e.BuildEventContext = _taskLoggingContext.BuildEventContext;
                     _taskLoggingContext.LoggingService.LogBuildEvent(e);
-                    _taskLoggingContext.HasLoggedErrors = true;
                 }
             }
         }
@@ -746,6 +749,7 @@ public async Task<BuildEngineResult> InternalBuildProjects(string[] projectFileN
                 }
 
                 result = new BuildEngineResult(overallSuccess, targetOutputsPerProject);
+                BuildRequestsSucceeded = overallSuccess;
             }
             else
             {
@@ -1012,6 +1016,8 @@ private async Task<BuildEngineResult> BuildProjectFilesInParallelAsync(string[]
                     ErrorUtilities.VerifyThrow(results.Length == projectFileNames.Length || overallSuccess == false, "The number of results returned {0} cannot be less than the number of project files {1} unless one of the results indicated failure.", results.Length, projectFileNames.Length);
                 }
 
+                BuildRequestsSucceeded = overallSuccess;
+
                 return new BuildEngineResult(overallSuccess, targetOutputsPerProject);
             }
         }
diff --git a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
index a5837079443..d34a2df0426 100644
--- a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
+++ b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
@@ -1778,7 +1778,7 @@ private void ResumeRequiredWork(List<ScheduleResponse> responses)
         private ScheduleResponse TrySatisfyRequestFromCache(int nodeForResults, BuildRequest request, bool skippedResultsDoNotCauseCacheMiss)
         {
             BuildRequestConfiguration config = _configCache[request.ConfigurationId];
-            ResultsCacheResponse resultsResponse = _resultsCache.SatisfyRequest(request, config.ProjectInitialTargets, config.ProjectDefaultTargets, config.GetAfterTargetsForDefaultTargets(request), skippedResultsDoNotCauseCacheMiss);
+            ResultsCacheResponse resultsResponse = _resultsCache.SatisfyRequest(request, config.ProjectInitialTargets, config.ProjectDefaultTargets, skippedResultsDoNotCauseCacheMiss);
 
             if (resultsResponse.Type == ResultsCacheResponseType.Satisfied)
             {
diff --git a/src/Build/BackEnd/Node/OutOfProcNode.cs b/src/Build/BackEnd/Node/OutOfProcNode.cs
index be436db5431..f53958658e0 100644
--- a/src/Build/BackEnd/Node/OutOfProcNode.cs
+++ b/src/Build/BackEnd/Node/OutOfProcNode.cs
@@ -217,27 +217,40 @@ public OutOfProcNode()
         /// <summary>
         /// Starts up the node and processes messages until the node is requested to shut down.
         /// Assumes no node reuse.
+        /// Assumes low priority is disabled.
         /// </summary>
         /// <param name="shutdownException">The exception which caused shutdown, if any.</param>
         /// <returns>The reason for shutting down.</returns>
         public NodeEngineShutdownReason Run(out Exception shutdownException)
         {
-            return Run(false, out shutdownException);
+            return Run(false, false, out shutdownException);
         }
 
-
         /// <summary>
         /// Starts up the node and processes messages until the node is requested to shut down.
+        /// Assumes low priority is disabled.
         /// </summary>
         /// <param name="enableReuse">Whether this node is eligible for reuse later.</param>
         /// <param name="shutdownException">The exception which caused shutdown, if any.</param>
         /// <returns>The reason for shutting down.</returns>
         public NodeEngineShutdownReason Run(bool enableReuse, out Exception shutdownException)
+        {
+            return Run(enableReuse, false, out shutdownException);
+        }
+
+        /// <summary>
+        /// Starts up the node and processes messages until the node is requested to shut down.
+        /// </summary>
+        /// <param name="enableReuse">Whether this node is eligible for reuse later.</param>
+        /// <param name="lowPriority">Whether this node should be running with low priority.</param>
+        /// <param name="shutdownException">The exception which caused shutdown, if any.</param>
+        /// <returns>The reason for shutting down.</returns>
+        public NodeEngineShutdownReason Run(bool enableReuse, bool lowPriority, out Exception shutdownException)
         {
             // Console.WriteLine("Run called at {0}", DateTime.Now);
             string pipeName = NamedPipeUtil.GetPipeNameOrPath("MSBuild" + Process.GetCurrentProcess().Id);
 
-            _nodeEndpoint = new NodeEndpointOutOfProc(pipeName, this, enableReuse);
+            _nodeEndpoint = new NodeEndpointOutOfProc(pipeName, this, enableReuse, lowPriority);
             _nodeEndpoint.OnLinkStatusChanged += OnLinkStatusChanged;
             _nodeEndpoint.Listen(this);
 
diff --git a/src/Build/BackEnd/Shared/BuildRequestConfiguration.cs b/src/Build/BackEnd/Shared/BuildRequestConfiguration.cs
index b7219edaddc..301a9246a07 100644
--- a/src/Build/BackEnd/Shared/BuildRequestConfiguration.cs
+++ b/src/Build/BackEnd/Shared/BuildRequestConfiguration.cs
@@ -677,43 +677,6 @@ public List<string> GetTargetsUsedToBuildRequest(BuildRequest request)
             return allTargets;
         }
 
-        /// <summary>
-        /// Returns the list of targets that are AfterTargets (or AfterTargets of the AfterTargets) 
-        /// of the entrypoint targets.  
-        /// </summary>
-        public List<string> GetAfterTargetsForDefaultTargets(BuildRequest request)
-        {
-            // We may not have a project available.  In which case, return nothing -- we simply don't have 
-            // enough information to figure out what the correct answer is.
-            if (!IsCached && Project != null)
-            {
-                var afterTargetsFound = new HashSet<string>();
-
-                var targetsToCheckForAfterTargets = new Queue<string>((request.Targets.Count == 0) ? ProjectDefaultTargets : request.Targets);
-
-                while (targetsToCheckForAfterTargets.Count > 0)
-                {
-                    string targetToCheck = targetsToCheckForAfterTargets.Dequeue();
-
-                    IList<TargetSpecification> targetsWhichRunAfter = Project.GetTargetsWhichRunAfter(targetToCheck);
-
-                    foreach (TargetSpecification targetWhichRunsAfter in targetsWhichRunAfter)
-                    {
-                        if (afterTargetsFound.Add(targetWhichRunsAfter.TargetName))
-                        {
-                            // If it's already in there, we've already looked into it so no need to do so again.  Otherwise, add it 
-                            // to the list to check.
-                            targetsToCheckForAfterTargets.Enqueue(targetWhichRunsAfter.TargetName);
-                        }
-                    }
-                }
-
-                return new List<string>(afterTargetsFound);
-            }
-
-            return null;
-        }
-
         private Func<string, bool> shouldSkipStaticGraphIsolationOnReference;
 
         public bool ShouldSkipIsolationConstraintsForReference(string referenceFullPath)
diff --git a/src/Build/BackEnd/Shared/BuildResult.cs b/src/Build/BackEnd/Shared/BuildResult.cs
index 8eb05af2ec0..0c74fad44a3 100644
--- a/src/Build/BackEnd/Shared/BuildResult.cs
+++ b/src/Build/BackEnd/Shared/BuildResult.cs
@@ -179,7 +179,7 @@ internal BuildResult(BuildResult existingResults, string[] targetNames)
         /// <param name="existingResults">The existing results, if any.</param>
         /// <param name="exception">The exception, if any</param>
         internal BuildResult(BuildRequest request, BuildResult existingResults, Exception exception)
-            : this(request, existingResults, null, null, exception)
+            : this(request, existingResults, null, exception)
         {
         }
 
@@ -189,9 +189,8 @@ internal BuildResult(BuildRequest request, BuildResult existingResults, Exceptio
         /// <param name="request">The build request with which these results should be associated.</param>
         /// <param name="existingResults">The existing results, if any.</param>
         /// <param name="targetNames">The list of target names that are the subset of results that should be returned.</param>
-        /// <param name="additionalTargetsToCheck">The additional targets that need to be taken into account when computing the overall result, if any.</param>
         /// <param name="exception">The exception, if any</param>
-        internal BuildResult(BuildRequest request, BuildResult existingResults, string[] targetNames, List<string> additionalTargetsToCheck, Exception exception)
+        internal BuildResult(BuildRequest request, BuildResult existingResults, string[] targetNames, Exception exception)
         {
             ErrorUtilities.VerifyThrow(request != null, "Must specify a request.");
             _submissionId = request.SubmissionId;
@@ -200,57 +199,17 @@ internal BuildResult(BuildRequest request, BuildResult existingResults, string[]
             _parentGlobalRequestId = request.ParentGlobalRequestId;
             _nodeRequestId = request.NodeRequestId;
             _circularDependency = false;
+            _baseOverallResult = true;
 
             if (existingResults == null)
             {
                 _requestException = exception;
                 _resultsByTarget = CreateTargetResultDictionary(0);
-                _baseOverallResult = true;
             }
             else
             {
                 _requestException = exception ?? existingResults._requestException;
-
                 _resultsByTarget = targetNames == null ? existingResults._resultsByTarget : CreateTargetResultDictionaryWithContents(existingResults, targetNames);
-
-                if (existingResults.OverallResult == BuildResultCode.Success || (additionalTargetsToCheck == null || additionalTargetsToCheck.Count == 0))
-                {
-                    // If we know for a fact that all of the existing results succeeded, then by definition we'll have 
-                    // succeeded too.  Alternately, if we don't have any additional targets to check, then we want the 
-                    // overall result to reflect only the targets included in this result, which the OverallResult 
-                    // property already does -- so just default to true in that case as well. 
-                    _baseOverallResult = true;
-                }
-                else
-                {
-                    // If the existing result is a failure, then we need to determine whether the targets we are 
-                    // specifically interested in contributed to that failure or not.  If they did not, then this 
-                    // result should be sucessful even though the result it is based on failed. 
-                    // 
-                    // For the most part, this is taken care of for us because any dependent targets that fail also 
-                    // mark their parent targets (up to and including the entrypoint target) as failed.  However, 
-                    // there is one case in which this is not true: if the entrypoint target has AfterTargets that 
-                    // fail, then as far as the entrypoint target knows when it is executing, it has succeeded.  The 
-                    // failure doesn't come until after.  On the other hand, we don't want to actually include the 
-                    // AfterTarget results in the build result itself if the user hasn't asked for them.  
-                    // 
-                    // So in the case where there are AfterTargets, we will check them for failure so that we can  
-                    // make sure the overall success/failure result is correct, but not actually add their contents 
-                    // to the new result. 
-                    _baseOverallResult = true;
-
-                    foreach (string additionalTarget in additionalTargetsToCheck)
-                    {
-                        if (existingResults.ResultsByTarget.TryGetValue(additionalTarget, out TargetResult targetResult))
-                        {
-                            if (targetResult.ResultCode == TargetResultCode.Failure && !targetResult.TargetFailureDoesntCauseBuildFailure)
-                            {
-                                _baseOverallResult = false;
-                                break;
-                            }
-                        }
-                    }
-                }
             }
         }
 
@@ -383,7 +342,8 @@ public BuildResultCode OverallResult
 
                 foreach (KeyValuePair<string, TargetResult> result in _resultsByTarget)
                 {
-                    if (result.Value.ResultCode == TargetResultCode.Failure && !result.Value.TargetFailureDoesntCauseBuildFailure)
+                    if ((result.Value.ResultCode == TargetResultCode.Failure && !result.Value.TargetFailureDoesntCauseBuildFailure)
+                        || result.Value.AfterTargetsHaveFailed)
                     {
                         return BuildResultCode.Failure;
                     }
diff --git a/src/Build/BackEnd/Shared/TargetResult.cs b/src/Build/BackEnd/Shared/TargetResult.cs
index 64dcaf10167..a22c5e63346 100644
--- a/src/Build/BackEnd/Shared/TargetResult.cs
+++ b/src/Build/BackEnd/Shared/TargetResult.cs
@@ -31,6 +31,11 @@ public class TargetResult : ITargetResult, ITranslatable
         /// </summary>
         private bool _targetFailureDoesntCauseBuildFailure;
 
+        /// <summary>
+        /// Flag indicating whether at least one target which has run after us (transitively via AfterTargets) failed.
+        /// </summary>
+        private bool _afterTargetsHaveFailed;
+
         /// <summary>
         /// The store of items in this result.
         /// </summary>
@@ -141,6 +146,18 @@ internal bool TargetFailureDoesntCauseBuildFailure
             set => _targetFailureDoesntCauseBuildFailure = value;
         }
 
+        /// <summary>
+        /// Sets or gets a flag indicating whether at least one target which has run after us (transitively via AfterTargets) failed.
+        /// </summary>
+        internal bool AfterTargetsHaveFailed
+        {
+            [DebuggerStepThrough]
+            get => _afterTargetsHaveFailed;
+
+            [DebuggerStepThrough]
+            set => _afterTargetsHaveFailed = value;
+        }
+
         #region INodePacketTranslatable Members
 
         /// <summary>
@@ -239,6 +256,7 @@ private void InternalTranslate(ITranslator translator)
         {
             translator.Translate(ref _result, WorkUnitResult.FactoryForDeserialization);
             translator.Translate(ref _targetFailureDoesntCauseBuildFailure);
+            translator.Translate(ref _afterTargetsHaveFailed);
             translator.Translate(ref _itemsStore, ItemsStore.FactoryForDeserialization);
         }
 
diff --git a/src/Build/BackEnd/TaskExecutionHost/AddInParts/ITaskExecutionHost.cs b/src/Build/BackEnd/TaskExecutionHost/AddInParts/ITaskExecutionHost.cs
index cc9ce710536..b591daf469c 100644
--- a/src/Build/BackEnd/TaskExecutionHost/AddInParts/ITaskExecutionHost.cs
+++ b/src/Build/BackEnd/TaskExecutionHost/AddInParts/ITaskExecutionHost.cs
@@ -81,7 +81,7 @@ void InitializeForTask(IBuildEngine2 buildEngine, TargetLoggingContext loggingCo
         /// <summary>
         /// Sets a task parameter using an unevaluated value, which will be expanded by the batch bucket.
         /// </summary>
-        bool SetTaskParameters(IDictionary<string, Tuple<string, ElementLocation>> parameters);
+        bool SetTaskParameters(IDictionary<string, (string, ElementLocation)> parameters);
 
         /// <summary>
         /// Gets all of the outputs and stores them in the batch bucket.
diff --git a/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs b/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs
index e8c02f80020..4fd9e940ac1 100644
--- a/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs
+++ b/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs
@@ -321,7 +321,7 @@ bool ITaskExecutionHost.InitializeForBatch(TaskLoggingContext loggingContext, It
         /// </summary>
         /// <param name="parameters">The name/value pairs for the parameters.</param>
         /// <returns>True if the parameters were set correctly, false otherwise.</returns>
-        bool ITaskExecutionHost.SetTaskParameters(IDictionary<string, Tuple<string, ElementLocation>> parameters)
+        bool ITaskExecutionHost.SetTaskParameters(IDictionary<string, (string, ElementLocation)> parameters)
         {
             ErrorUtilities.VerifyThrowArgumentNull(parameters, nameof(parameters));
 
@@ -333,7 +333,7 @@ bool ITaskExecutionHost.SetTaskParameters(IDictionary<string, Tuple<string, Elem
             IDictionary<string, string> requiredParameters = GetNamesOfPropertiesWithRequiredAttribute();
 
             // look through all the attributes of the task element
-            foreach (KeyValuePair<string, Tuple<string, ElementLocation>> parameter in parameters)
+            foreach (KeyValuePair<string, (string, ElementLocation)> parameter in parameters)
             {
                 bool taskParameterSet = false;  // Did we actually call the setter on this task parameter?
                 bool success;
@@ -1285,8 +1285,10 @@ private bool InternalSetTaskParameter(TaskPropertyInfo parameter, IList paramete
         {
             if (LogTaskInputs && !_taskLoggingContext.LoggingService.OnlyLogCriticalEvents && parameterValue.Count > 0)
             {
-                string parameterText = ResourceUtilities.GetResourceString("TaskParameterPrefix");
-                parameterText = ItemGroupLoggingHelper.GetParameterText(parameterText, parameter.Name, parameterValue);
+                string parameterText = ItemGroupLoggingHelper.GetParameterText(
+                    ItemGroupLoggingHelper.TaskParameterPrefix,
+                    parameter.Name,
+                    parameterValue);
                 _taskLoggingContext.LogCommentFromText(MessageImportance.Low, parameterText);
             }
 
@@ -1312,7 +1314,7 @@ object parameterValue
                 {
                     _taskLoggingContext.LogCommentFromText(
                         MessageImportance.Low,
-                        ResourceUtilities.GetResourceString("TaskParameterPrefix") + parameter.Name + "=" + ItemGroupLoggingHelper.GetStringFromParameterValue(parameterValue));
+                        ItemGroupLoggingHelper.TaskParameterPrefix + parameter.Name + "=" + ItemGroupLoggingHelper.GetStringFromParameterValue(parameterValue));
                 }
             }
 
@@ -1426,7 +1428,7 @@ private void GatherTaskItemOutputs(bool outputTargetIsItem, string outputTargetN
                     if (LogTaskInputs && !_taskLoggingContext.LoggingService.OnlyLogCriticalEvents && outputs.Length > 0)
                     {
                         string parameterText = ItemGroupLoggingHelper.GetParameterText(
-                            ResourceUtilities.GetResourceString("OutputItemParameterMessagePrefix"),
+                            ItemGroupLoggingHelper.OutputItemParameterMessagePrefix,
                             outputTargetName,
                             outputs);
 
@@ -1501,7 +1503,10 @@ private void GatherArrayStringAndValueOutputs(bool outputTargetIsItem, string ou
 
                     if (LogTaskInputs && !_taskLoggingContext.LoggingService.OnlyLogCriticalEvents && outputs.Length > 0)
                     {
-                        string parameterText = ItemGroupLoggingHelper.GetParameterText(ResourceUtilities.GetResourceString("OutputItemParameterMessagePrefix"), outputTargetName, outputs);
+                        string parameterText = ItemGroupLoggingHelper.GetParameterText(
+                            ItemGroupLoggingHelper.OutputItemParameterMessagePrefix,
+                            outputTargetName,
+                            outputs);
                         _taskLoggingContext.LogCommentFromText(MessageImportance.Low, parameterText);
                     }
                 }
diff --git a/src/Build/Construction/ProjectItemElement.cs b/src/Build/Construction/ProjectItemElement.cs
index ca90f027e4c..c0aa80082bd 100644
--- a/src/Build/Construction/ProjectItemElement.cs
+++ b/src/Build/Construction/ProjectItemElement.cs
@@ -45,6 +45,11 @@ internal ProjectItemElement(ProjectItemElementLink link)
         /// </summary>
         private string _remove;
 
+        /// <summary>
+        /// MatchOnMetadata value cached for performance
+        /// </summary>
+        private string _matchOnMetadata;
+
         /// <summary>
         /// Update value cached for performance
         /// </summary>
@@ -167,6 +172,49 @@ public string Update
             }
         }
 
+        /// <summary>
+        /// Gets of sets the MatchOnMetadata value.
+        /// Returns empty string if it is not present.
+        /// Removes the attribute if the value to set is empty or null.
+        /// </summary>
+        public string MatchOnMetadata
+        {
+            [DebuggerStepThrough]
+            get
+            {
+                return GetAttributeValue(XMakeAttributes.matchOnMetadata, ref _matchOnMetadata);
+            }
+
+            set
+            {
+                // MatchOnMetadata must be inside of a target
+                ErrorUtilities.VerifyThrowInvalidOperation(Parent == null || Parent.Parent is ProjectTargetElement || Parent.Parent is ProjectRootElement, "OM_NoMatchOnMetadataOutsideTargets");
+                // MatchOnMetadata must be inside of a remove item
+                ErrorUtilities.VerifyThrowInvalidOperation(String.IsNullOrEmpty(value) || RemoveMetadata.Length != 0, "OM_MatchOnMetadataOnlyApplicableToRemoveItems", ElementName, XMakeAttributes.matchOnMetadata);
+                SetOrRemoveAttribute(XMakeAttributes.matchOnMetadata, value, ref _matchOnMetadata, "Set item MatchOnMetadata {0}", value);
+            }
+        }
+
+        /// <summary>
+        /// Gets of sets the MatchOnMetadataOptions value.
+        /// Returns empty string if it is not present.
+        /// Removes the attribute if the value to set is empty or null.
+        /// </summary>
+        public string MatchOnMetadataOptions
+        {
+            [DebuggerStepThrough]
+            get
+            {
+                return GetAttributeValue(XMakeAttributes.matchOnMetadataOptions);
+            }
+
+            set
+            {
+                ErrorUtilities.VerifyThrowInvalidOperation(String.IsNullOrEmpty(value) || MatchOnMetadata.Length != 0, "OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata", ElementName, XMakeAttributes.matchOnMetadataOptions);
+                SetOrRemoveAttribute(XMakeAttributes.matchOnMetadataOptions, value, "Set item MatchOnMetadataOptions {0}", value);
+            }
+        }
+
         /// <summary>
         /// Gets or sets the KeepMetadata value.
         /// Returns empty string if it is not present.
@@ -259,6 +307,16 @@ public string KeepDuplicates
         /// </summary>
         public ElementLocation UpdateLocation => GetAttributeLocation(XMakeAttributes.update);
 
+        /// <summary>
+        /// Location of the MatchOnMetadata attribute
+        /// </summary>
+        public ElementLocation MatchOnMetadataLocation => GetAttributeLocation(XMakeAttributes.matchOnMetadata);
+
+        /// <summary>
+        /// Location of the MatchOnMetadataOptions attribute
+        /// </summary>
+        public ElementLocation MatchOnMetadataOptionsLocation => GetAttributeLocation(XMakeAttributes.matchOnMetadataOptions);
+
         /// <summary>
         /// Location of the keepMetadata attribute
         /// </summary>
@@ -405,6 +463,7 @@ internal override void ClearAttributeCache()
             _include = null;
             _exclude = null;
             _remove = null;
+            _matchOnMetadata = null;
             _update = null;
             _includeHasWildcards = null;
         }
diff --git a/src/Build/Construction/ProjectTaskElement.cs b/src/Build/Construction/ProjectTaskElement.cs
index 8410f818294..f09324cbbc0 100644
--- a/src/Build/Construction/ProjectTaskElement.cs
+++ b/src/Build/Construction/ProjectTaskElement.cs
@@ -35,7 +35,7 @@ internal ProjectTaskElement(ProjectTaskElementLink link)
         /// <summary>
         /// The parameters (excepting condition and continue-on-error)
         /// </summary>
-        private CopyOnWriteDictionary<string, Tuple<string, ElementLocation>> _parameters;
+        private CopyOnWriteDictionary<string, (string, ElementLocation)> _parameters;
 
         /// <summary>
         /// Protection for the parameters cache
@@ -150,7 +150,7 @@ public IDictionary<string, string> Parameters
 
                     var parametersClone = new Dictionary<string, string>(_parameters.Count, StringComparer.OrdinalIgnoreCase);
 
-                    foreach (KeyValuePair<string, Tuple<string, ElementLocation>> entry in _parameters)
+                    foreach (KeyValuePair<string, (string, ElementLocation)> entry in _parameters)
                     {
                         parametersClone[entry.Key] = entry.Value.Item1;
                     }
@@ -179,7 +179,7 @@ public IEnumerable<KeyValuePair<string, ElementLocation>> ParameterLocations
                     EnsureParametersInitialized();
                     var parameterLocations = new List<KeyValuePair<string, ElementLocation>>();
 
-                    foreach (KeyValuePair<string, Tuple<string, ElementLocation>> entry in _parameters)
+                    foreach (KeyValuePair<string, (string, ElementLocation)> entry in _parameters)
                     {
                         parameterLocations.Add(new KeyValuePair<string, ElementLocation>(entry.Key, entry.Value.Item2));
                     }
@@ -210,7 +210,7 @@ public IEnumerable<KeyValuePair<string, ElementLocation>> ParameterLocations
         /// <summary>
         /// Retrieves a copy of the parameters as used during evaluation.
         /// </summary>
-        internal CopyOnWriteDictionary<string, Tuple<string, ElementLocation>> ParametersForEvaluation
+        internal CopyOnWriteDictionary<string, (string, ElementLocation)> ParametersForEvaluation
         {
             get
             {
@@ -302,7 +302,7 @@ public string GetParameter(string name)
 
                 EnsureParametersInitialized();
 
-                if (_parameters.TryGetValue(name, out Tuple<string, ElementLocation> parameter))
+                if (_parameters.TryGetValue(name, out (string, ElementLocation) parameter))
                 {
                     return parameter.Item1;
                 }
@@ -443,7 +443,7 @@ private void EnsureParametersInitialized()
         {
             if (_parameters == null)
             {
-                _parameters = new CopyOnWriteDictionary<string, Tuple<string, ElementLocation>>(XmlElement.Attributes.Count, StringComparer.OrdinalIgnoreCase);
+                _parameters = new CopyOnWriteDictionary<string, (string, ElementLocation)>(XmlElement.Attributes.Count, StringComparer.OrdinalIgnoreCase);
 
                 foreach (XmlAttributeWithLocation attribute in XmlElement.Attributes)
                 {
@@ -453,7 +453,7 @@ private void EnsureParametersInitialized()
                         // That means that if the name of the file is changed after first load (possibly from null) it will
                         // remain the old value here. Correctly, this should cache the attribute not the location. Fixing 
                         // that will need profiling, though, as this cache was added for performance.
-                        _parameters[attribute.Name] = new Tuple<string, ElementLocation>(attribute.Value, attribute.Location);
+                        _parameters[attribute.Name] = (attribute.Value, attribute.Location);
                     }
                 }
             }
diff --git a/src/Build/Construction/Solution/SolutionConfigurationInSolution.cs b/src/Build/Construction/Solution/SolutionConfigurationInSolution.cs
index 87498a7c39e..6d2e01071f5 100644
--- a/src/Build/Construction/Solution/SolutionConfigurationInSolution.cs
+++ b/src/Build/Construction/Solution/SolutionConfigurationInSolution.cs
@@ -16,7 +16,7 @@ public sealed class SolutionConfigurationInSolution
         /// </summary>
         internal const char ConfigurationPlatformSeparator = '|';
 
-        internal static readonly char[] ConfigurationPlatformSeparatorArray = MSBuildConstants.PipeChar;
+        internal static readonly char[] ConfigurationPlatformSeparatorArray = new char[] { '|' };
 
         /// <summary>
         /// Constructor
diff --git a/src/Build/Construction/Solution/SolutionFile.cs b/src/Build/Construction/Solution/SolutionFile.cs
index 065eb68560f..840be8683f2 100644
--- a/src/Build/Construction/Solution/SolutionFile.cs
+++ b/src/Build/Construction/Solution/SolutionFile.cs
@@ -17,7 +17,6 @@
 using ResourceUtilities = Microsoft.Build.Shared.ResourceUtilities;
 using ExceptionUtilities = Microsoft.Build.Shared.ExceptionHandling;
 using System.Collections.ObjectModel;
-using Microsoft.Build.Shared;
 
 namespace Microsoft.Build.Construction
 {
@@ -1035,7 +1034,7 @@ string propertyValue
                 // ProjectReferences = "{FD705688-88D1-4C22-9BFF-86235D89C2FC}|CSClassLibrary1.dll;{F0726D09-042B-4A7A-8A01-6BED2422BD5D}|VCClassLibrary1.dll;" 
                 if (string.Compare(propertyName, "ProjectReferences", StringComparison.OrdinalIgnoreCase) == 0)
                 {
-                    string[] projectReferenceEntries = propertyValue.Split(MSBuildConstants.SemicolonChar, StringSplitOptions.RemoveEmptyEntries);
+                    string[] projectReferenceEntries = propertyValue.Split(new char[] { ';' }, StringSplitOptions.RemoveEmptyEntries);
 
                     foreach (string projectReferenceEntry in projectReferenceEntries)
                     {
@@ -1228,7 +1227,7 @@ internal void ParseNestedProjects()
         /// </remarks>
         internal void ParseSolutionConfigurations()
         {
-            var nameValueSeparators = MSBuildConstants.EqualsChar;
+            var nameValueSeparators = '=';
             var configPlatformSeparators = new[] { SolutionConfigurationInSolution.ConfigurationPlatformSeparator };
 
             do
@@ -1310,7 +1309,7 @@ internal Dictionary<string, string> ParseProjectConfigurations()
                     continue;
                 }
 
-                string[] nameValue = str.Split(MSBuildConstants.EqualsChar);
+                string[] nameValue = str.Split('=');
 
                 // There should be exactly one '=' character, separating the name and value. 
                 ProjectFileErrorUtilities.VerifyThrowInvalidProjectFile(nameValue.Length == 2, "SubCategoryForSolutionParsingErrors",
diff --git a/src/Build/Construction/Solution/SolutionProjectGenerator.cs b/src/Build/Construction/Solution/SolutionProjectGenerator.cs
index 1084744c3ba..5edc192921f 100644
--- a/src/Build/Construction/Solution/SolutionProjectGenerator.cs
+++ b/src/Build/Construction/Solution/SolutionProjectGenerator.cs
@@ -163,7 +163,7 @@ private SolutionProjectGenerator(
 
             if (targetNames != null)
             {
-                _targetNames = targetNames.Select(i => i.Split(MSBuildConstants.ColonChar, 2, StringSplitOptions.RemoveEmptyEntries).Last()).ToList();
+                _targetNames = targetNames.Select(i => i.Split(new char[] { ':' }, 2, StringSplitOptions.RemoveEmptyEntries).Last()).ToList();
             }
         }
 
@@ -1347,7 +1347,7 @@ private void AddMetaprojectBuildTask(ProjectInSolution project, ProjectTargetIns
             }
 
             task.SetParameter("BuildInParallel", "True");
-            task.SetParameter("ToolsVersion", MSBuildConstants.CurrentToolsVersion);
+            task.SetParameter("ToolsVersion", "Current");
             task.SetParameter("Properties", SolutionProperties);
             task.SetParameter("SkipNonexistentProjects", "%(ProjectReference.SkipNonexistentProjects)");
 
diff --git a/src/Build/Definition/Project.cs b/src/Build/Definition/Project.cs
index fa1758c2ab5..5c1f51e9b9e 100644
--- a/src/Build/Definition/Project.cs
+++ b/src/Build/Definition/Project.cs
@@ -2686,37 +2686,37 @@ ProvenanceResult SingleItemSpecProvenance(string itemSpec, IElementLocation elem
                     }
 
                     var matchOccurrences = ItemMatchesInItemSpecString(itemToMatch, itemSpec, elementLocation, itemElement.ContainingProject.DirectoryPath, _data.Expander, out Provenance provenance);
-                    Tuple<Provenance, int> result = matchOccurrences > 0 ? Tuple.Create(provenance, matchOccurrences) : null;
+                    if (matchOccurrences > 0)
+                    {
+                        return new ProvenanceResult(itemElement, operation, provenance, matchOccurrences);
+                    }
 
-                    return result?.Item2 > 0
-                        ? new ProvenanceResult(itemElement, operation, result.Item1, result.Item2)
-                        : null;
+                    return null;
                 }
 
-                Func<ProvenanceResult>[] provenanceProviders =
-                {
-                // provenance provider for include item elements
-                () =>
+                var includeResult = SingleItemSpecProvenance(itemElement.Include, itemElement.IncludeLocation, Operation.Include);
+                if (includeResult != null)
                 {
-                    var includeResult = SingleItemSpecProvenance(itemElement.Include, itemElement.IncludeLocation, Operation.Include);
-                    if (includeResult == null)
+                    var excludeResult = SingleItemSpecProvenance(itemElement.Exclude, itemElement.ExcludeLocation, Operation.Exclude);
+                    if (excludeResult != null)
                     {
-                        return null;
+                        return excludeResult;
                     }
 
-                    var excludeResult = SingleItemSpecProvenance(itemElement.Exclude, itemElement.ExcludeLocation, Operation.Exclude);
-
-                    return excludeResult ?? includeResult;
-                },
+                    if (includeResult != null)
+                    {
+                        return includeResult;
+                    }
+                }
 
-                // provenance provider for update item elements
-                () => SingleItemSpecProvenance(itemElement.Update, itemElement.UpdateLocation, Operation.Update),
-                
-                // provenance provider for remove item elements
-                () => SingleItemSpecProvenance(itemElement.Remove, itemElement.RemoveLocation, Operation.Remove)
-            };
+                var result = SingleItemSpecProvenance(itemElement.Update, itemElement.UpdateLocation, Operation.Update);
+                if (result != null)
+                {
+                    return result;
+                }
 
-                return provenanceProviders.Select(provider => provider()).FirstOrDefault(provenanceResult => provenanceResult != null);
+                result = SingleItemSpecProvenance(itemElement.Remove, itemElement.RemoveLocation, Operation.Remove);
+                return result;
             }
 
             /// <summary>
diff --git a/src/Build/Definition/ProjectCollection.cs b/src/Build/Definition/ProjectCollection.cs
index aad33d91d9c..909a5e5fa0f 100644
--- a/src/Build/Definition/ProjectCollection.cs
+++ b/src/Build/Definition/ProjectCollection.cs
@@ -480,7 +480,11 @@ public static string DisplayVersion
                     var fullInformationalVersion = typeof(Constants).GetTypeInfo().Assembly.GetCustomAttribute<AssemblyInformationalVersionAttribute>().InformationalVersion;
 
                     // use a truncated version with only 9 digits of SHA
-                    s_assemblyDisplayVersion = fullInformationalVersion.Substring(startIndex: 0, length: fullInformationalVersion.IndexOf('+') + 10);
+                    var plusIndex = fullInformationalVersion.IndexOf('+');
+                    s_assemblyDisplayVersion = plusIndex < 0
+                                                    ? fullInformationalVersion
+                                                    : fullInformationalVersion.Substring(startIndex: 0, length: plusIndex + 10);
+
                 }
 
                 return s_assemblyDisplayVersion;
diff --git a/src/Build/Evaluation/Evaluator.cs b/src/Build/Evaluation/Evaluator.cs
index 252498dfc67..8e90acfa61d 100644
--- a/src/Build/Evaluation/Evaluator.cs
+++ b/src/Build/Evaluation/Evaluator.cs
@@ -479,6 +479,8 @@ private static ProjectItemGroupTaskInstance ReadItemGroupUnderTargetElement(Proj
                     itemElement.Include,
                     itemElement.Exclude,
                     itemElement.Remove,
+                    itemElement.MatchOnMetadata,
+                    itemElement.MatchOnMetadataOptions,
                     itemElement.KeepMetadata,
                     itemElement.RemoveMetadata,
                     itemElement.KeepDuplicates,
@@ -487,6 +489,8 @@ private static ProjectItemGroupTaskInstance ReadItemGroupUnderTargetElement(Proj
                     itemElement.IncludeLocation,
                     itemElement.ExcludeLocation,
                     itemElement.RemoveLocation,
+                    itemElement.MatchOnMetadataLocation,
+                    itemElement.MatchOnMetadataOptionsLocation,
                     itemElement.KeepMetadataLocation,
                     itemElement.RemoveMetadataLocation,
                     itemElement.KeepDuplicatesLocation,
@@ -2074,7 +2078,7 @@ private LoadImportsResult ExpandAndLoadImportsFromUnescapedImportExpression(stri
                             }
 
                             ProjectErrorUtilities.ThrowInvalidProject(importLocationInProject, "ImportedProjectNotFound",
-								      importFileUnescaped, importExpressionEscaped);
+                                                                      importFileUnescaped, importExpressionEscaped);
                         }
                         else
                         {
diff --git a/src/Build/Evaluation/Expander.cs b/src/Build/Evaluation/Expander.cs
index f242a066e03..c066300ffe8 100644
--- a/src/Build/Evaluation/Expander.cs
+++ b/src/Build/Evaluation/Expander.cs
@@ -4251,6 +4251,11 @@ private static bool TryGetArgs(object[] args, out int arg0, out string arg1)
                 }
 
                 arg1 = args[1] as string;
+                if (arg1 == null && args[1] is char ch)
+                {
+                    arg1 = ch.ToString();
+                }
+
                 if (TryConvertToInt(args[0], out arg0) &&
                     arg1 != null)
                 {
diff --git a/src/Build/Evaluation/ItemSpec.cs b/src/Build/Evaluation/ItemSpec.cs
index 460dcf6abbf..1027af72a64 100644
--- a/src/Build/Evaluation/ItemSpec.cs
+++ b/src/Build/Evaluation/ItemSpec.cs
@@ -1,8 +1,10 @@
 ﻿// Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
+using System;
 using System.Collections.Generic;
 using System.Linq;
+using System.Runtime.InteropServices.WindowsRuntime;
 using Microsoft.Build.Globbing;
 using Microsoft.Build.Internal;
 using Microsoft.Build.Shared;
@@ -85,6 +87,24 @@ public override bool IsMatch(string itemToMatch)
                 return ReferencedItems.Any(v => v.ItemAsValueFragment.IsMatch(itemToMatch));
             }
 
+            public override bool IsMatchOnMetadata(IItem item, IEnumerable<string> metadata, MatchOnMetadataOptions options)
+            {
+                return ReferencedItems.Any(referencedItem =>
+                        metadata.All(m => !item.GetMetadataValue(m).Equals(string.Empty) && MetadataComparer(options, item.GetMetadataValue(m), referencedItem.Item.GetMetadataValue(m))));
+            }
+
+            private bool MetadataComparer(MatchOnMetadataOptions options, string itemMetadata, string referencedItemMetadata)
+            {
+                if (options.Equals(MatchOnMetadataOptions.PathLike))
+                {
+                    return FileUtilities.ComparePathsNoThrow(itemMetadata, referencedItemMetadata, ProjectDirectory);
+                }
+                else 
+                {
+                    return String.Equals(itemMetadata, referencedItemMetadata, options.Equals(MatchOnMetadataOptions.CaseInsensitive) ? StringComparison.OrdinalIgnoreCase : StringComparison.Ordinal);
+                }
+            }
+
             public override IMSBuildGlob ToMSBuildGlob()
             {
                 return MsBuildGlob;
@@ -292,6 +312,25 @@ public bool MatchesItem(I item)
             return false;
         }
 
+        /// <summary>
+        ///     Return true if any of the given <paramref name="metadata" /> matches the metadata on <paramref name="item" />
+        /// </summary>
+        /// <param name="item">The item to attempt to find a match for based on matching metadata</param>
+        /// <param name="metadata">Names of metadata to look for matches for</param>
+        /// <returns></returns>
+        public bool MatchesItemOnMetadata(IItem item, IEnumerable<string> metadata, MatchOnMetadataOptions options)
+        {
+            foreach (var fragment in Fragments)
+            {
+                if (fragment.IsMatchOnMetadata(item, metadata, options))
+                {
+                    return true;
+                }
+            }
+
+            return false;
+        }
+
         /// <summary>
         ///     Return the fragments that match against the given <paramref name="itemToMatch" />
         /// </summary>
@@ -420,6 +459,14 @@ public virtual bool IsMatch(string itemToMatch)
             return FileMatcher.IsMatch(itemToMatch);
         }
 
+        /// <summary>
+        /// Returns true if <paramref name="itemToMatch" /> matches any ReferencedItems based on <paramref name="metadata" /> and <paramref name="options" />.
+        /// </summary>
+        public virtual bool IsMatchOnMetadata(IItem itemToMatch, IEnumerable<string> metadata, MatchOnMetadataOptions options)
+        {
+            return false;
+        }
+
         public virtual IMSBuildGlob ToMSBuildGlob()
         {
             return MsBuildGlob;
diff --git a/src/Build/Evaluation/LazyItemEvaluator.RemoveOperation.cs b/src/Build/Evaluation/LazyItemEvaluator.RemoveOperation.cs
index d4223130213..fdd5b3e312d 100644
--- a/src/Build/Evaluation/LazyItemEvaluator.RemoveOperation.cs
+++ b/src/Build/Evaluation/LazyItemEvaluator.RemoveOperation.cs
@@ -1,6 +1,9 @@
 ﻿// Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
+using Microsoft.Build.Construction;
+using Microsoft.Build.Execution;
+using Microsoft.Build.Shared;
 using System.Collections.Immutable;
 using System.Linq;
 
@@ -10,19 +13,31 @@ internal partial class LazyItemEvaluator<P, I, M, D>
     {
         class RemoveOperation : LazyItemOperation
         {
-            public RemoveOperation(OperationBuilder builder, LazyItemEvaluator<P, I, M, D> lazyEvaluator)
+            readonly ImmutableList<string> _matchOnMetadata;
+            readonly MatchOnMetadataOptions _matchOnMetadataOptions;
+
+            public RemoveOperation(RemoveOperationBuilder builder, LazyItemEvaluator<P, I, M, D> lazyEvaluator)
                 : base(builder, lazyEvaluator)
             {
+                _matchOnMetadata = builder.MatchOnMetadata.ToImmutable();
+                _matchOnMetadataOptions = builder.MatchOnMetadataOptions;
             }
 
             // todo port the self referencing matching optimization (e.g. <I Remove="@(I)">) from Update to Remove as well. Ideally make one mechanism for both. https://github.com/Microsoft/msbuild/issues/2314
             // todo Perf: do not match against the globs: https://github.com/Microsoft/msbuild/issues/2329
             protected override ImmutableList<I> SelectItems(ImmutableList<ItemData>.Builder listBuilder, ImmutableHashSet<string> globsToIgnore)
             {
+                var matchOnMetadataValid = !_matchOnMetadata.IsEmpty && _itemSpec.Fragments.Count == 1
+                    && _itemSpec.Fragments.First() is ItemSpec<ProjectProperty, ProjectItem>.ItemExpressionFragment;
+                ProjectFileErrorUtilities.VerifyThrowInvalidProjectFile(
+                    _matchOnMetadata.IsEmpty || matchOnMetadataValid && _matchOnMetadata.Count == 1,
+                    new BuildEventFileInfo(string.Empty),
+                    "OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem");
+
                 var items = ImmutableHashSet.CreateBuilder<I>();
                 foreach (ItemData item in listBuilder)
                 {
-                    if (_itemSpec.MatchesItem(item.Item))
+                    if (_matchOnMetadata.IsEmpty ? _itemSpec.MatchesItem(item.Item) : _itemSpec.MatchesItemOnMetadata(item.Item, _matchOnMetadata, _matchOnMetadataOptions))
                         items.Add(item.Item);
                 }
 
@@ -55,5 +70,27 @@ public ImmutableHashSet<string>.Builder GetRemovedGlobs()
                 return builder;
             }
         }
+
+        class RemoveOperationBuilder : OperationBuilder
+        {
+            public ImmutableList<string>.Builder MatchOnMetadata { get; } = ImmutableList.CreateBuilder<string>();
+
+            public MatchOnMetadataOptions MatchOnMetadataOptions { get; set; }
+
+            public RemoveOperationBuilder(ProjectItemElement itemElement, bool conditionResult) : base(itemElement, conditionResult)
+            {
+            }
+        }
+    }
+
+    public enum MatchOnMetadataOptions
+    {
+        CaseSensitive,
+        CaseInsensitive,
+        PathLike
+    }
+
+    public static class MatchOnMetadataConstants {
+        public const MatchOnMetadataOptions MatchOnMetadataOptionsDefaultValue = MatchOnMetadataOptions.CaseSensitive;
     }
 }
diff --git a/src/Build/Evaluation/LazyItemEvaluator.cs b/src/Build/Evaluation/LazyItemEvaluator.cs
index c0fa8277eb3..ce9f84cd29d 100644
--- a/src/Build/Evaluation/LazyItemEvaluator.cs
+++ b/src/Build/Evaluation/LazyItemEvaluator.cs
@@ -516,10 +516,35 @@ private IncludeOperation BuildIncludeOperation(string rootDirectory, ProjectItem
 
         private RemoveOperation BuildRemoveOperation(string rootDirectory, ProjectItemElement itemElement, bool conditionResult)
         {
-            OperationBuilder operationBuilder = new OperationBuilder(itemElement, conditionResult);
+            RemoveOperationBuilder operationBuilder = new RemoveOperationBuilder(itemElement, conditionResult);
 
             ProcessItemSpec(rootDirectory, itemElement.Remove, itemElement.RemoveLocation, operationBuilder);
 
+            // Process MatchOnMetadata
+            if (itemElement.MatchOnMetadata.Length > 0)
+            {
+                string evaluatedmatchOnMetadata = _expander.ExpandIntoStringLeaveEscaped(itemElement.MatchOnMetadata, ExpanderOptions.ExpandProperties, itemElement.MatchOnMetadataLocation);
+
+                if (evaluatedmatchOnMetadata.Length > 0)
+                {
+                    var matchOnMetadataSplits = ExpressionShredder.SplitSemiColonSeparatedList(evaluatedmatchOnMetadata);
+
+                    foreach (var matchOnMetadataSplit in matchOnMetadataSplits)
+                    {
+                        AddItemReferences(matchOnMetadataSplit, operationBuilder, itemElement.MatchOnMetadataLocation);
+                        string metadataExpanded = _expander.ExpandIntoStringLeaveEscaped(matchOnMetadataSplit, ExpanderOptions.ExpandPropertiesAndItems, itemElement.MatchOnMetadataLocation);
+                        var metadataSplits = ExpressionShredder.SplitSemiColonSeparatedList(metadataExpanded);
+                        operationBuilder.MatchOnMetadata.AddRange(metadataSplits);
+                    }
+                }
+            }
+
+            operationBuilder.MatchOnMetadataOptions = MatchOnMetadataOptions.CaseSensitive;
+            if (Enum.TryParse(itemElement.MatchOnMetadataOptions, out MatchOnMetadataOptions options))
+            {
+                operationBuilder.MatchOnMetadataOptions = options;
+            }
+
             return new RemoveOperation(operationBuilder, this);
         }
 
@@ -578,7 +603,7 @@ private void ProcessMetadataElements(ProjectItemElement itemElement, OperationBu
             }
         }
 
-        private void AddItemReferences(string expression, IncludeOperationBuilder operationBuilder, IElementLocation elementLocation)
+        private void AddItemReferences(string expression, OperationBuilder operationBuilder, IElementLocation elementLocation)
         {
             if (expression.Length == 0)
             {
diff --git a/src/Build/Evaluation/ProjectParser.cs b/src/Build/Evaluation/ProjectParser.cs
index 15ea7908948..cbdb79a738e 100644
--- a/src/Build/Evaluation/ProjectParser.cs
+++ b/src/Build/Evaluation/ProjectParser.cs
@@ -31,7 +31,7 @@ internal class ProjectParser
         /// <summary>
         /// Valid attribute list for item
         /// </summary>
-        private static readonly HashSet<string> KnownAttributesOnItem = new HashSet<string> { XMakeAttributes.condition, XMakeAttributes.label, XMakeAttributes.include, XMakeAttributes.exclude, XMakeAttributes.remove, XMakeAttributes.keepMetadata, XMakeAttributes.removeMetadata, XMakeAttributes.keepDuplicates, XMakeAttributes.update };
+        private static readonly HashSet<string> KnownAttributesOnItem = new HashSet<string> { XMakeAttributes.condition, XMakeAttributes.label, XMakeAttributes.include, XMakeAttributes.exclude, XMakeAttributes.remove, XMakeAttributes.keepMetadata, XMakeAttributes.removeMetadata, XMakeAttributes.keepDuplicates, XMakeAttributes.update, XMakeAttributes.matchOnMetadata, XMakeAttributes.matchOnMetadataOptions };
 
         /// <summary>
         /// Valid attributes list for item which is case-insensitive.
diff --git a/src/Build/Evaluation/SemiColonTokenizer.cs b/src/Build/Evaluation/SemiColonTokenizer.cs
index c2cd771bd2a..ceac85a143e 100644
--- a/src/Build/Evaluation/SemiColonTokenizer.cs
+++ b/src/Build/Evaluation/SemiColonTokenizer.cs
@@ -75,8 +75,8 @@ public bool MoveNext()
                             if (!insideItemList)
                             {
                                 // End of segment, so add it to the list
-                                segment = _expression.Substring(segmentStart, _index - segmentStart).Trim();
-                                if (segment.Length > 0)
+                                segment = GetExpressionSubstring(segmentStart, _index - segmentStart);
+                                if (segment != null)
                                 {
                                     _current = segment;
                                     return true;
@@ -116,15 +116,8 @@ public bool MoveNext()
                 }
 
                 // Reached the end of the string: what's left is another segment
-                segment = _expression.Substring(segmentStart, _expression.Length - segmentStart).Trim();
-                if (segment.Length > 0)
-                {
-                    _current = segment;
-                    return true;
-                }
-
-                _current = null;
-                return false;
+                _current = GetExpressionSubstring(segmentStart, _expression.Length - segmentStart);
+                return _current != null;
             }
 
             public void Reset()
@@ -132,6 +125,31 @@ public void Reset()
                 _current = default(string);
                 _index = 0;
             }
+
+            /// <summary>
+            /// Returns a whitespace-trimmed and possibly interned substring of the expression.
+            /// </summary>
+            /// <param name="startIndex">Start index of the substring.</param>
+            /// <param name="length">Length of the substring.</param>
+            /// <returns>Equivalent to _expression.Substring(startIndex, length).Trim() or null if the trimmed substring is empty.</returns>
+            private string GetExpressionSubstring(int startIndex, int length)
+            {
+                int endIndex = startIndex + length;
+                while (startIndex < endIndex && char.IsWhiteSpace(_expression[startIndex]))
+                {
+                    startIndex++;
+                }
+                while (startIndex < endIndex && char.IsWhiteSpace(_expression[endIndex - 1]))
+                {
+                    endIndex--;
+                }
+                if (startIndex < endIndex)
+                {
+                    var target = new OpportunisticIntern.SubstringInternTarget(_expression, startIndex, endIndex - startIndex);
+                    return OpportunisticIntern.InternableToString(target);
+                }
+                return null;
+            }
         }
     }
 }
diff --git a/src/Build/Globbing/MSBuildGlob.cs b/src/Build/Globbing/MSBuildGlob.cs
index 77df39837f6..bab387bc147 100644
--- a/src/Build/Globbing/MSBuildGlob.cs
+++ b/src/Build/Globbing/MSBuildGlob.cs
@@ -195,7 +195,7 @@ public static MSBuildGlob Parse(string globRoot, string fileSpec)
                     {
                         var normalizedFixedPart = NormalizeTheFixedDirectoryPartAgainstTheGlobRoot(fixedDirPart, globRoot);
 
-                        return Tuple.Create(normalizedFixedPart, wildcardDirPart, filePart);
+                        return (normalizedFixedPart, wildcardDirPart, filePart);
                     });
 
                 // compile the regex since it's expected to be used multiple times
diff --git a/src/Build/Instance/HostServices.cs b/src/Build/Instance/HostServices.cs
index 80bfeada239..8c820643d32 100644
--- a/src/Build/Instance/HostServices.cs
+++ b/src/Build/Instance/HostServices.cs
@@ -90,11 +90,6 @@ public ITaskHost GetHostObject(string projectFile, string targetName, string tas
                 {
 #if FEATURE_COM_INTEROP
 
-                    if (Environment.Is64BitProcess)
-                    {
-                        throw new PlatformNotSupportedException("GetHostObject with monikerName is only supported in 32 bit");
-                    }
-
                     try
                     {
                         object objectFromRunningObjectTable =
@@ -161,11 +156,6 @@ public void RegisterHostObject(string projectFile, string targetName, string tas
             ErrorUtilities.VerifyThrowArgumentNull(taskName, "taskName");
             ErrorUtilities.VerifyThrowArgumentNull(monikerName, "monikerName");
 
-            if (Environment.Is64BitProcess)
-            {
-                throw new PlatformNotSupportedException("RegisterHostObject with monikerName is only supported in 32 bit");
-            }
-
             _hostObjectMap = _hostObjectMap ?? new Dictionary<string, HostObjects>(StringComparer.OrdinalIgnoreCase);
 
             HostObjects hostObjects = GetHostObjectsFromMapByKeyOrCreateNew(projectFile);
diff --git a/src/Build/Instance/ProjectItemGroupTaskItemInstance.cs b/src/Build/Instance/ProjectItemGroupTaskItemInstance.cs
index b55bc84a6d4..f33856ecb9e 100644
--- a/src/Build/Instance/ProjectItemGroupTaskItemInstance.cs
+++ b/src/Build/Instance/ProjectItemGroupTaskItemInstance.cs
@@ -41,6 +41,15 @@ public class ProjectItemGroupTaskItemInstance: ITranslatable
         private string _remove;
 
         /// <summary>
+        /// The list of metadata Remove should match on.
+        /// </summary>
+        private string _matchOnMetadata;
+
+        /// <summary>
+        /// The options for MatchOnMetadata.
+        /// </summary>
+        private string _matchOnMetadataOptions;
+
         /// The list of metadata to keep.
         /// </summary>
         private string _keepMetadata;
@@ -80,6 +89,16 @@ public class ProjectItemGroupTaskItemInstance: ITranslatable
         /// </summary>
         private ElementLocation _removeLocation;
 
+        /// <summary>
+        /// Location of matchOnMetadata, if any
+        /// </summary>
+        private ElementLocation _matchOnMetadataLocation;
+
+        /// <summary>
+        /// Location of metadataMatchingSchema, if any
+        /// </summary>
+        private ElementLocation _matchOnMetadataOptionsLocation;
+
         /// <summary>
         /// Location of keepMetadata, if any
         /// </summary>
@@ -123,6 +142,8 @@ internal ProjectItemGroupTaskItemInstance
             string include,
             string exclude,
             string remove,
+            string matchOnMetadata,
+            string matchOnMetadataOptions,
             string keepMetadata,
             string removeMetadata,
             string keepDuplicates,
@@ -131,6 +152,8 @@ internal ProjectItemGroupTaskItemInstance
             ElementLocation includeLocation,
             ElementLocation excludeLocation,
             ElementLocation removeLocation,
+            ElementLocation matchOnMetadataLocation,
+            ElementLocation matchOnMetadataOptionsLocation,
             ElementLocation keepMetadataLocation,
             ElementLocation removeMetadataLocation,
             ElementLocation keepDuplicatesLocation,
@@ -152,6 +175,8 @@ List<ProjectItemGroupTaskMetadataInstance> metadata
             _include = include;
             _exclude = exclude;
             _remove = remove;
+            _matchOnMetadata = matchOnMetadata;
+            _matchOnMetadataOptions = matchOnMetadataOptions;
             _keepMetadata = keepMetadata;
             _removeMetadata = removeMetadata;
             _keepDuplicates = keepDuplicates;
@@ -160,6 +185,8 @@ List<ProjectItemGroupTaskMetadataInstance> metadata
             _includeLocation = includeLocation;
             _excludeLocation = excludeLocation;
             _removeLocation = removeLocation;
+            _matchOnMetadataLocation = matchOnMetadataLocation;
+            _matchOnMetadataOptionsLocation = matchOnMetadataOptionsLocation;
             _keepMetadataLocation = keepMetadataLocation;
             _removeMetadataLocation = removeMetadataLocation;
             _keepDuplicatesLocation = keepDuplicatesLocation;
@@ -182,6 +209,8 @@ private ProjectItemGroupTaskItemInstance(ProjectItemGroupTaskItemInstance that)
             _include = that._include;
             _exclude = that._exclude;
             _remove = that._remove;
+            _matchOnMetadata = that._matchOnMetadata;
+            _matchOnMetadataOptions = that._matchOnMetadataOptions;
             _keepMetadata = that._keepMetadata;
             _removeMetadata = that._removeMetadata;
             _keepDuplicates = that._keepDuplicates;
@@ -229,6 +258,26 @@ public string Remove
             { return _remove; }
         }
 
+        /// <summary>
+        /// Unevaluated MatchOnMetadata value
+        /// </summary>
+        public string MatchOnMetadata
+        {
+            [DebuggerStepThrough]
+            get
+            { return _matchOnMetadata; }
+        }
+
+        /// <summary>
+        /// Unevaluated MatchOnMetadataOptions value
+        /// </summary>
+        public string MatchOnMetadataOptions
+        {
+            [DebuggerStepThrough]
+            get
+            { return _matchOnMetadataOptions; }
+        }
+
         /// <summary>
         /// Unevaluated keepMetadata value
         /// </summary>
@@ -324,6 +373,26 @@ public ElementLocation RemoveLocation
             { return _removeLocation; }
         }
 
+        /// <summary>
+        /// Location of the matchOnMetadata attribute, if any
+        /// </summary>
+        public ElementLocation MatchOnMetadataLocation
+        {
+            [DebuggerStepThrough]
+            get
+            { return _matchOnMetadataLocation; }
+        }
+
+        /// <summary>
+        /// Location of the matchOnMetadataOptions attribute, if any
+        /// </summary>
+        public ElementLocation MatchOnMetadataOptionsLocation
+        {
+            [DebuggerStepThrough]
+            get
+            { return _matchOnMetadataOptionsLocation; }
+        }
+
         /// <summary>
         /// Location of the keepMetadata attribute, if any
         /// </summary>
@@ -378,6 +447,8 @@ void ITranslatable.Translate(ITranslator translator)
             translator.Translate(ref _include);
             translator.Translate(ref _exclude);
             translator.Translate(ref _remove);
+            translator.Translate(ref _matchOnMetadata);
+            translator.Translate(ref _matchOnMetadataOptions);
             translator.Translate(ref _keepMetadata);
             translator.Translate(ref _removeMetadata);
             translator.Translate(ref _keepDuplicates);
diff --git a/src/Build/Instance/ProjectItemInstance.cs b/src/Build/Instance/ProjectItemInstance.cs
index af30f1c20c5..972ba876609 100644
--- a/src/Build/Instance/ProjectItemInstance.cs
+++ b/src/Build/Instance/ProjectItemInstance.cs
@@ -1078,7 +1078,14 @@ internal CopyOnWritePropertyDictionary<ProjectMetadataInstance> MetadataCollecti
                     {
                         foreach (ProjectMetadataInstance metadatum in _itemDefinitions[i].Metadata)
                         {
-                            allMetadata.Set(metadatum);
+                            if (metadatum != null)
+                            {
+                                allMetadata.Set(metadatum);
+                            }
+                            else
+                            {
+                                Debug.Fail($"metadatum from {_itemDefinitions[i]} is null, see https://github.com/microsoft/msbuild/issues/5267");
+                            }
                         }
                     }
 
@@ -1087,7 +1094,14 @@ internal CopyOnWritePropertyDictionary<ProjectMetadataInstance> MetadataCollecti
                     {
                         foreach (ProjectMetadataInstance metadatum in _directMetadata)
                         {
-                            allMetadata.Set(metadatum);
+                            if (metadatum != null)
+                            {
+                                allMetadata.Set(metadatum);
+                            }
+                            else
+                            {
+                                Debug.Fail("metadatum in _directMetadata is null, see https://github.com/microsoft/msbuild/issues/5267");
+                            }
                         }
                     }
 
@@ -1386,9 +1400,10 @@ public void CopyMetadataTo(ITaskItem destinationItem, bool addOriginalItemSpec)
             /// <returns>The cloned metadata.</returns>
             public IDictionary CloneCustomMetadata()
             {
-                Dictionary<string, string> clonedMetadata = new Dictionary<string, string>(MSBuildNameIgnoreCaseComparer.Default);
+                var metadata = MetadataCollection;
+                Dictionary<string, string> clonedMetadata = new Dictionary<string, string>(metadata.Count, MSBuildNameIgnoreCaseComparer.Default);
 
-                foreach (ProjectMetadataInstance metadatum in MetadataCollection)
+                foreach (ProjectMetadataInstance metadatum in metadata)
                 {
                     clonedMetadata[metadatum.Name] = metadatum.EvaluatedValue;
                 }
@@ -1617,7 +1632,7 @@ internal void TranslateWithInterning(ITranslator translator, LookasideStringInte
                         {
                             int key = translator.Reader.ReadInt32();
                             int value = translator.Reader.ReadInt32();
-                            _directMetadata.Set(new ProjectMetadataInstance(interner.GetString(key), interner.GetString(value)));
+                            _directMetadata.Set(new ProjectMetadataInstance(interner.GetString(key), interner.GetString(value), allowItemSpecModifiers: true));
                         }
                     }
                 }
diff --git a/src/Build/Instance/ProjectTaskInstance.cs b/src/Build/Instance/ProjectTaskInstance.cs
index 33b484e9dc8..3c5a256de29 100644
--- a/src/Build/Instance/ProjectTaskInstance.cs
+++ b/src/Build/Instance/ProjectTaskInstance.cs
@@ -53,7 +53,7 @@ public sealed class ProjectTaskInstance : ProjectTargetInstanceChild, ITranslata
         /// Unordered set of task parameter names and unevaluated values.
         /// This is a dead, read-only collection.
         /// </summary>
-        private CopyOnWriteDictionary<string, Tuple<string, ElementLocation>> _parameters;
+        private CopyOnWriteDictionary<string, (string, ElementLocation)> _parameters;
 
         /// <summary>
         /// Output properties and items below this task. This is an ordered collection
@@ -138,7 +138,7 @@ string msbuildArchitecture
             continueOnError,
             msbuildRuntime,
             msbuildArchitecture,
-            new CopyOnWriteDictionary<string, Tuple<string, ElementLocation>>(8, StringComparer.OrdinalIgnoreCase),
+            new CopyOnWriteDictionary<string, (string, ElementLocation)>(8, StringComparer.OrdinalIgnoreCase),
             new List<ProjectTaskInstanceChild>(),
             location,
             condition == string.Empty ? null : ElementLocation.EmptyLocation,
@@ -155,7 +155,7 @@ internal ProjectTaskInstance
             string continueOnError,
             string msbuildRuntime,
             string msbuildArchitecture,
-            CopyOnWriteDictionary<string, Tuple<string, ElementLocation>> parameters,
+            CopyOnWriteDictionary<string, (string, ElementLocation)> parameters,
             List<ProjectTaskInstanceChild> outputs,
             ElementLocation location,
             ElementLocation conditionLocation,
@@ -238,7 +238,7 @@ public IDictionary<string, string> Parameters
             get
             {
                 Dictionary<string, string> filteredParameters = new Dictionary<string, string>(_parameters.Count, StringComparer.OrdinalIgnoreCase);
-                foreach (KeyValuePair<string, Tuple<string, ElementLocation>> parameter in _parameters)
+                foreach (KeyValuePair<string, (string, ElementLocation)> parameter in _parameters)
                 {
                     filteredParameters[parameter.Key] = parameter.Value.Item1;
                 }
@@ -247,7 +247,7 @@ public IDictionary<string, string> Parameters
             }
         }
 
-        internal IDictionary<string, Tuple<string, ElementLocation>> TestGetParameters => _parameters;
+        internal IDictionary<string, (string, ElementLocation)> TestGetParameters => _parameters;
 
         /// <summary>
         /// Ordered set of output property and item objects.
@@ -301,7 +301,7 @@ public override ElementLocation ConditionLocation
         /// <summary>
         /// Retrieves the parameters dictionary as used during the build.
         /// </summary>
-        internal IDictionary<string, Tuple<string, ElementLocation>> ParametersForBuild
+        internal IDictionary<string, (string, ElementLocation)> ParametersForBuild
         {
             get { return _parameters; }
         }
@@ -313,8 +313,7 @@ internal IDictionary<string, Tuple<string, ElementLocation>> ParametersForBuild
         /// <returns>The parameter value, or null if it does not exist.</returns>
         internal string GetParameter(string parameterName)
         {
-            Tuple<string, ElementLocation> parameterValue = null;
-            if (_parameters.TryGetValue(parameterName, out parameterValue))
+            if (_parameters.TryGetValue(parameterName, out var parameterValue))
             {
                 return parameterValue.Item1;
             }
@@ -329,7 +328,7 @@ internal string GetParameter(string parameterName)
         /// <param name="unevaluatedValue">The unevaluated value for the parameter.</param>
         internal void SetParameter(string parameterName, string unevaluatedValue)
         {
-            _parameters[parameterName] = new Tuple<string, ElementLocation>(unevaluatedValue, ElementLocation.EmptyLocation);
+            _parameters[parameterName] = (unevaluatedValue, ElementLocation.EmptyLocation);
         }
 
         /// <summary>
@@ -378,16 +377,16 @@ void ITranslatable.Translate(ITranslator translator)
             translator.Translate(ref _msbuildRuntimeLocation, ElementLocation.FactoryForDeserialization);
             translator.Translate(ref _msbuildArchitectureLocation, ElementLocation.FactoryForDeserialization);
 
-            IDictionary<string, Tuple<string, ElementLocation>> localParameters = _parameters;
+            IDictionary<string, (string, ElementLocation)> localParameters = _parameters;
             translator.TranslateDictionary(
                 ref localParameters,
                 ParametersKeyTranslator,
                 ParametersValueTranslator,
-                count => new CopyOnWriteDictionary<string, Tuple<string, ElementLocation>>(count));
+                count => new CopyOnWriteDictionary<string, (string, ElementLocation)>(count));
 
             if (translator.Mode == TranslationDirection.ReadFromStream && localParameters != null)
             {
-                _parameters = (CopyOnWriteDictionary<string, Tuple<string, ElementLocation>>) localParameters;
+                _parameters = (CopyOnWriteDictionary<string, (string, ElementLocation)>) localParameters;
             }
         }
 
@@ -396,7 +395,7 @@ private static void ParametersKeyTranslator(ref string key, ITranslator translat
             translator.Translate(ref key);
         }
 
-        private static void ParametersValueTranslator(ref Tuple<string, ElementLocation> value, ITranslator translator)
+        private static void ParametersValueTranslator(ref (string, ElementLocation) value, ITranslator translator)
         {
             if (translator.Mode == TranslationDirection.WriteToStream)
             {
@@ -414,7 +413,7 @@ private static void ParametersValueTranslator(ref Tuple<string, ElementLocation>
                 translator.Translate(ref item1);
                 translator.Translate(ref item2, ElementLocation.FactoryForDeserialization);
 
-                value = Tuple.Create(item1, item2);
+                value = (item1, item2);
             }
         }
 
diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index 5329a7386e3..4b5a55262d5 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -1,4 +1,4 @@
-﻿<Project Sdk="Microsoft.NET.Sdk">
+<Project Sdk="Microsoft.NET.Sdk">
 
   <Import Project="..\Shared\FileSystemSources.proj" />
   <Import Project="..\Shared\DebuggingSources.proj" />
@@ -45,11 +45,8 @@
   </ItemGroup>
 
   <ItemGroup Condition="'$(TargetFrameworkIdentifier)' != '.NETFramework'">
-    <PackageReference Include="System.Diagnostics.TraceSource" />
     <PackageReference Include="System.Reflection.Metadata" />
-    <PackageReference Include="System.Reflection.TypeExtensions" />
-    <PackageReference Include="System.Runtime.Loader" />
-    <PackageReference Include="System.Security.Principal.Windows" Condition="'$(TargetFramework)' == 'netcoreapp2.1'" />
+    <PackageReference Include="System.Security.Principal.Windows" />
     <PackageReference Include="System.Text.Encoding.CodePages" />
     <!-- Need Win32 API on .NET Core to ping registry to determine long path support -->
     <PackageReference Include="Microsoft.Win32.Registry" />
diff --git a/src/Build/Resources/Strings.resx b/src/Build/Resources/Strings.resx
index d609f327a2f..4b0fe42ac90 100644
--- a/src/Build/Resources/Strings.resx
+++ b/src/Build/Resources/Strings.resx
@@ -1,6 +1,66 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
   <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
     <xsd:element name="root" msdata:IsDataSet="true">
       <xsd:complexType>
         <xsd:choice maxOccurs="unbounded">
@@ -9,9 +69,16 @@
               <xsd:sequence>
                 <xsd:element name="value" type="xsd:string" minOccurs="0" />
               </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" />
+              <xsd:attribute name="name" use="required" type="xsd:string" />
               <xsd:attribute name="type" type="xsd:string" />
               <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
             </xsd:complexType>
           </xsd:element>
           <xsd:element name="data">
@@ -20,11 +87,10 @@
                 <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                 <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
               </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
-              <xsd:attribute name="UESanitized" type="xsd:boolean" msdata:Ordinal="3" />
-              <xsd:attribute name="Visibility" type="Visibility_Type" msdata:Ordinal="4" />
-              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="5" />
-              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="6" />
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
             </xsd:complexType>
           </xsd:element>
           <xsd:element name="resheader">
@@ -38,13 +104,6 @@
         </xsd:choice>
       </xsd:complexType>
     </xsd:element>
-    <xsd:simpleType name="Visibility_Type">
-      <xsd:restriction base="xsd:string">
-        <xsd:enumeration value="Public" />
-        <xsd:enumeration value="Obsolete" />
-        <xsd:enumeration value="Private_OM" />
-      </xsd:restriction>
-    </xsd:simpleType>
   </xsd:schema>
   <resheader name="resmimetype">
     <value>text/microsoft-resx</value>
@@ -53,214 +112,214 @@
     <value>2.0</value>
   </resheader>
   <resheader name="reader">
-    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <resheader name="writer">
-    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
-  <data name="AmbiguousTaskParameterError" UESanitized="false" Visibility="Public">
+  <data name="AmbiguousTaskParameterError" xml:space="preserve">
     <value>MSB4001: The "{0}" task has more than one parameter called "{1}".</value>
     <comment>{StrBegin="MSB4001: "}UE: This message is shown when a task has more than one .NET property with the same name -- it's unclear which of
     those properties the task wants to use as a parameter in project files.</comment>
   </data>
-  <data name="AttributeTypeLoadError" UESanitized="false" Visibility="Public">
+  <data name="AttributeTypeLoadError" xml:space="preserve">
     <value>MSB4002: There was a failure retrieving the attributes for parameters in the "{0}" task. {1}</value>
     <comment>{StrBegin="MSB4002: "}UE: This message is shown when the .NET attributes that a task's .NET properties are decorated with, cannot be
     retrieved -- this is typically because the .NET classes that define the .NET attributes cannot be loaded because the assembly
     they are defined in cannot be found, or the classes themselves cannot be found.</comment>
   </data>
-  <data name="BadlyCasedSpecialTaskAttribute" UESanitized="false" Visibility="Public">
+  <data name="BadlyCasedSpecialTaskAttribute" xml:space="preserve">
     <value>MSB4003: "{0}" is a reserved attribute of the &lt;{1}&gt; element, and must be spelled with the correct casing. This attribute cannot be used as a parameter to the "{2}" task.</value>
     <comment>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</comment>
   </data>
-  <data name="BuildInProgress" UESanitized="false" Visibility="Public">
+  <data name="BuildInProgress" xml:space="preserve">
     <value>The operation cannot be completed because a build is already in progress.</value>
   </data>
-  <data name="NoBuildInProgress" UESanitized="false" Visibility="Public">
+  <data name="NoBuildInProgress" xml:space="preserve">
     <value>The operation cannot be completed because BeginBuild has not yet been called.</value>
   </data>
-  <data name="WaitingForEndOfBuild" UESanitized="false" Visibility="Public">
+  <data name="WaitingForEndOfBuild" xml:space="preserve">
     <value>The operation cannot be completed because EndBuild has already been called but existing submissions have not yet completed.</value>
   </data>
-  <data name="SubmissionAlreadyComplete" UESanitized="false" Visibility="Public">
+  <data name="SubmissionAlreadyComplete" xml:space="preserve">
     <value>The operation cannot be completed because the submission has already been executed.</value>
   </data>
-  <data name="ShouldNotDisposeWhenBuildManagerActive" UESanitized="false" Visibility="Public">
+  <data name="ShouldNotDisposeWhenBuildManagerActive" xml:space="preserve">
     <value>Cannot dispose the build manager because it is not idle.</value>
   </data>
-  <data name="BuildAbortedWithMessage" UESanitized="false" Visibility="Public">
+  <data name="BuildAbortedWithMessage" xml:space="preserve">
     <value>MSB4197: Build was canceled. {0}</value>
     <comment>{StrBegin="MSB4197: "} Error when the build stops suddenly for some reason. For example, because a child node died.</comment>
   </data>
-  <data name="BuildFinishedFailure" UESanitized="false" Visibility="Public">
+  <data name="BuildFinishedFailure" xml:space="preserve">
     <value>Build FAILED.</value>
   </data>
-  <data name="BuildFinishedSuccess" UESanitized="false" Visibility="Public">
+  <data name="BuildFinishedSuccess" xml:space="preserve">
     <value>Build succeeded.</value>
   </data>
-  <data name="BuildStartedWithTime" UESanitized="false" Visibility="Public">
+  <data name="BuildStartedWithTime" xml:space="preserve">
     <value>Build started {0}.</value>
   </data>
-  <data name="BuildTargetCompletely">
+  <data name="BuildTargetCompletely" xml:space="preserve">
     <value>Building target "{0}" completely.</value>
     <comment>{0} is the name of the target.</comment>
   </data>
-  <data name="BuildTargetCompletelyNoInputsSpecified">
+  <data name="BuildTargetCompletelyNoInputsSpecified" xml:space="preserve">
     <value>No input files were specified.</value>
   </data>
-  <data name="BuildTargetCompletelyInputNewer">
+  <data name="BuildTargetCompletelyInputNewer" xml:space="preserve">
     <value>Input file "{0}" is newer than output file "{1}".</value>
     <comment>{0} and {1} are filenames on disk.</comment>
   </data>
-  <data name="BuildTargetCompletelyOutputDoesntExist">
+  <data name="BuildTargetCompletelyOutputDoesntExist" xml:space="preserve">
     <value>Output file "{0}" does not exist.</value>
     <comment>{0} is a filename on disk.</comment>
   </data>
-  <data name="BuildTargetCompletelyInputDoesntExist">
+  <data name="BuildTargetCompletelyInputDoesntExist" xml:space="preserve">
     <value>Input file "{0}" does not exist.</value>
     <comment>{0} is a filename on disk.</comment>
   </data>
-  <data name="BuildTargetPartially">
+  <data name="BuildTargetPartially" xml:space="preserve">
     <value>Building target "{0}" partially, because some output files are out of date with respect to their input files.</value>
     <comment>{0} is the name of the target.</comment>
   </data>
-  <data name="BuildTargetPartiallyInputNewer">
+  <data name="BuildTargetPartiallyInputNewer" xml:space="preserve">
     <value>[{0}: Input={1}, Output={2}] Input file is newer than output file.</value>
     <comment>{0} is the name of an MSBuild item.  {1} and {2} are filenames on disk.</comment>
   </data>
-  <data name="BuildTargetPartiallyOutputDoesntExist">
+  <data name="BuildTargetPartiallyOutputDoesntExist" xml:space="preserve">
     <value>[{0}: Input={1}, Output={2}] Output file does not exist.</value>
     <comment>{0} is the name of an MSBuild item.  {1} and {2} are filenames on disk.</comment>
   </data>
-  <data name="BuildTargetPartiallyInputDoesntExist">
+  <data name="BuildTargetPartiallyInputDoesntExist" xml:space="preserve">
     <value>[{0}: Input={1}, Output={2}] Input file does not exist.</value>
     <comment>{0} is the name of an MSBuild item.  {1} and {2} are filenames on disk.</comment>
   </data>
-  <data name="CannotAccessKnownAttributes" UESanitized="false" Visibility="Private_OM">
+  <data name="CannotAccessKnownAttributes" xml:space="preserve">
     <value>The attribute "{0}" is a known MSBuild attribute, and cannot be accessed using this method.</value>
   </data>
-  <data name="CannotEvaluateItemMetadata" UESanitized="false" Visibility="Public">
+  <data name="CannotEvaluateItemMetadata" xml:space="preserve">
     <value>MSB4023: Cannot evaluate the item metadata "%({0})". {1}</value>
     <comment>{StrBegin="MSB4023: "}UE: This message is shown when the value of an item metadata cannot be computed for some reason e.g. trying to apply
     %(RootDir) to an item-spec that's not a valid path, would result in this error.
     LOCALIZATION: "{1}" is a localized message explaining the problem.</comment>
   </data>
-  <data name="CannotExpandItemMetadata" UESanitized="false" Visibility="Public">
+  <data name="CannotExpandItemMetadata" xml:space="preserve">
     <value>MSB4248: Cannot expand metadata in expression "{0}". {1}</value>
     <comment>{StrBegin="MSB4248: "}UE: This message is shown when metadata cannot be expanded in an expression for some reason e.g. trying to apply
     %(RootDir) to an item-spec that's not a valid path would result in this error.
     LOCALIZATION: "{1}" is a localized message explaining the problem.</comment>
   </data>
-  <data name="CouldNotFindMSBuildExe">
+  <data name="CouldNotFindMSBuildExe" xml:space="preserve">
     <value>MSB4193: MSBuild.exe could not be launched as a child node as it could not be found at the location "{0}". If necessary, specify the correct location in the BuildParameters, or with the MSBUILD_EXE_PATH environment variable.</value>
     <comment>{StrBegin="MSB4193: "}</comment>
   </data>
-  <data name="CouldNotConnectToMSBuildExe">
+  <data name="CouldNotConnectToMSBuildExe" xml:space="preserve">
     <value>MSB4218: Failed to successfully launch or connect to a child MSBuild.exe process. Verify that the MSBuild.exe "{0}" launches successfully, and that it is loading the same microsoft.build.dll that the launching process loaded. If the location seems incorrect, try specifying the correct location in the BuildParameters object, or with the MSBUILD_EXE_PATH environment variable.</value>
     <comment>{StrBegin="MSB4218: "}</comment>
   </data>
-  <data name="CannotModifyReservedItem" UESanitized="false" Visibility="Public">
+  <data name="CannotModifyReservedItem" xml:space="preserve">
     <value>MSB4117: The "{0}" item name is reserved, and cannot be used.</value>
     <comment>{StrBegin="MSB4117: "}UE: This message is shown when the user tries to redefine one of the reserved MSBuild items e.g. @(Choose)</comment>
   </data>
-  <data name="CannotModifyReservedItemMetadata" UESanitized="false" Visibility="Public">
+  <data name="CannotModifyReservedItemMetadata" xml:space="preserve">
     <value>MSB4118: The "{0}" item metadata name is reserved, and cannot be used.</value>
     <comment>{StrBegin="MSB4118: "}UE: This message is shown when the user tries to redefine one of the reserved MSBuild item metadata names e.g. %(FullPath). Only MSBuild can set those.</comment>
   </data>
-  <data name="CannotModifyReservedProperty" UESanitized="false" Visibility="Public">
+  <data name="CannotModifyReservedProperty" xml:space="preserve">
     <value>MSB4004: The "{0}" property is reserved, and cannot be modified.</value>
     <comment>{StrBegin="MSB4004: "}UE: This message is shown when the user tries to redefine one of the reserved MSBuild properties e.g. $(MSBuildProjectFile)</comment>
   </data>
-  <data name="CannotPassMultipleItemsIntoScalarParameter" UESanitized="false" Visibility="Public">
+  <data name="CannotPassMultipleItemsIntoScalarParameter" xml:space="preserve">
     <value>MSB4094: "{0}" is an invalid value for the "{1}" parameter of the "{3}" task. Multiple items cannot be passed into a parameter of type "{2}".</value>
     <comment>{StrBegin="MSB4094: "}
             UE: This error is shown when a project tries to pass multiple items into a task parameter of type ITaskItem (singular).
     </comment>
   </data>
-  <data name="CannotPassMultipleItemsIntoScalarFunction" UESanitized="false" Visibility="Public">
+  <data name="CannotPassMultipleItemsIntoScalarFunction" xml:space="preserve">
     <value>MSB4115: The "{0}" function only accepts a scalar value, but its argument "{1}" evaluates to "{2}" which is not a scalar value.</value>
     <comment>{StrBegin="MSB4115: "}
         UE: This error is shown when a project tries to pass multiple items into a function in a conditional expression, that can only accept a scalar value (such as the "exists()" function).
     </comment>
   </data>
-  <data name="CannotReferenceItemMetadataWithoutItemName" UESanitized="false" Visibility="Public">
+  <data name="CannotReferenceItemMetadataWithoutItemName" xml:space="preserve">
     <value>MSB4095: The item metadata %({0}) is being referenced without an item name.  Specify the item name by using %(itemname.{0}).</value>
     <comment>{StrBegin="MSB4095: "}</comment>
   </data>
-  <data name="ChildElementsBelowRemoveNotAllowed" UESanitized="false" Visibility="Public">
+  <data name="ChildElementsBelowRemoveNotAllowed" xml:space="preserve">
     <value>MSB4162: &lt;{0}&gt; is not valid. Child elements are not allowed below a item remove element.</value>
     <comment>{StrBegin="MSB4162: "}</comment>
   </data>
-  <data name="ChildExitedPrematurely" UESanitized="false" Visibility="Public">
+  <data name="ChildExitedPrematurely" xml:space="preserve">
     <value>MSB4166: Child node "{0}" exited prematurely. Shutting down. Diagnostic information may be found in files in "{1}" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.{2}</value>
     <comment>{StrBegin="MSB4166: "} {2} is exception text if any</comment>
   </data>
-  <data name="ChooseMustContainWhen" UESanitized="false" Visibility="Public">
+  <data name="ChooseMustContainWhen" xml:space="preserve">
     <value>MSB4085: A &lt;Choose&gt; must contain at least one &lt;When&gt;.</value>
     <comment>{StrBegin="MSB4085: "}</comment>
   </data>
-  <data name="ChooseOverflow" UESanitized="false" Visibility="Public">
+  <data name="ChooseOverflow" xml:space="preserve">
     <value>MSB4114: &lt;Choose&gt; elements cannot be nested more than {0} levels deep.</value>
     <comment>{StrBegin="MSB4114: "}UE: This message appears if the project file contains unreasonably nested Choose elements.
     LOCALIZATION: Do not localize "Choose" as it is an XML element name.</comment>
   </data>
-  <data name="CircularDependency" UESanitized="false" Visibility="Public">
+  <data name="CircularDependency" xml:space="preserve">
     <value>MSB4006: There is a circular dependency in the target dependency graph involving target "{0}".</value>
     <comment>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</comment>
   </data>
-  <data name="ComparisonOnNonNumericExpression" UESanitized="false" Visibility="Public">
+  <data name="ComparisonOnNonNumericExpression" xml:space="preserve">
     <value>MSB4086: A numeric comparison was attempted on "{1}" that evaluates to "{2}" instead of a number, in condition "{0}".</value>
     <comment>{StrBegin="MSB4086: "}</comment>
   </data>
-  <data name="ConditionMaybeEvaluatedIncorrectly" UESanitized="false" Visibility="Public">
+  <data name="ConditionMaybeEvaluatedIncorrectly" xml:space="preserve">
     <value>MSB4130: The condition "{0}" may have been evaluated incorrectly in an earlier version of MSBuild. Please verify that the order of the AND and OR clauses is written as intended. To avoid this warning, add parentheses to make the evaluation order explicit.</value>
     <comment>{StrBegin="MSB4130: "}</comment>
   </data>
-  <data name="ConditionNotBoolean" UESanitized="false" Visibility="Public">
+  <data name="ConditionNotBoolean" xml:space="preserve">
     <value>MSB4087: Specified condition "{0}" does not evaluate to a boolean.</value>
     <comment>{StrBegin="MSB4087: "}</comment>
   </data>
-  <data name="ConditionNotBooleanDetail" UESanitized="false" Visibility="Public">
+  <data name="ConditionNotBooleanDetail" xml:space="preserve">
     <value>MSB4113: Specified condition "{0}" evaluates to "{1}" instead of a boolean.</value>
     <comment>{StrBegin="MSB4113: "}</comment>
   </data>
-  <data name="ConfigFileReadError" UESanitized="false" Visibility="Public">
+  <data name="ConfigFileReadError" xml:space="preserve">
     <value>MSB4136: Error reading the toolset information from the configuration file "{0}". {1}</value>
     <comment>{StrBegin="MSB4136: "}</comment>
   </data>
-  <data name="ConflictingValuesOfMSBuildToolsPath" UESanitized="false" Visibility="Public">
+  <data name="ConflictingValuesOfMSBuildToolsPath" xml:space="preserve">
     <value>MSB4142: MSBuildToolsPath is not the same as MSBuildBinPath for the ToolsVersion "{0}" defined at "{1}". If both are present they must have the same value.</value>
     <comment>{StrBegin="MSB4142: "}</comment>
   </data>
-  <data name="DefaultTasksFileFailure" UESanitized="false" Visibility="Public">
+  <data name="DefaultTasksFileFailure" xml:space="preserve">
     <value>MSB4009: The default tasks file could not be successfully loaded. {0}</value>
     <comment>{StrBegin="MSB4009: "}UE: This message is shown when one of the default tasks file (*.tasks) located alongside the MSBuild binaries cannot
     be opened/parsed. "{0}" contains a message explaining why. The filename itself is not part of the message but is provided
     separately to loggers.
     LOCALIZATION: "{0}" is a message from some FX method and is already localized.</comment>
   </data>
-  <data name="DefaultTasksFileLoadFailureWarning" UESanitized="false" Visibility="Public">
+  <data name="DefaultTasksFileLoadFailureWarning" xml:space="preserve">
     <value>MSB4010: The "{0}" files could not be successfully loaded from their expected location "{1}". Default tasks will not be available. {2}</value>
     <comment>{StrBegin="MSB4010: "}UE: This message is shown when the default tasks files that are located alongside the MSBuild binaries cannot be
     found, either because they don't exist, or because of lack of permissions. "{2}" contains a message explaining why.
     LOCALIZATION: "{2}" is a message from some FX method and is already localized.</comment>
   </data>
-  <data name="ImportIntroducesCircularity">
+  <data name="ImportIntroducesCircularity" xml:space="preserve">
     <value>Importing the file "{0}" into the file "{1}" results in a circular dependency.</value>
     <comment>
        {0} is a file imported into the file "{1}" such that it results in a circular dependency. For e.g. if t1.targets imports
        t2.targets and t2.targets tries to import t1.targets, then it results in a circular dependency.
     </comment>
   </data>
-  <data name="SearchPathsForMSBuildExtensionsPath">
-      <value>Search paths being used for {0} are {1}</value>
+  <data name="SearchPathsForMSBuildExtensionsPath" xml:space="preserve">
+    <value>Search paths being used for {0} are {1}</value>
   </data>
-  <data name="TryingExtensionsPath">
-      <value>Trying to import {0} using extensions path {1}</value>
+  <data name="TryingExtensionsPath" xml:space="preserve">
+    <value>Trying to import {0} using extensions path {1}</value>
   </data>
-  <data name="OverrideTasksFileFailure" UESanitized="false" Visibility="Public">
+  <data name="OverrideTasksFileFailure" xml:space="preserve">
     <value>MSB4194: The override tasks file could not be successfully loaded. {0}</value>
     <comment>
       {StrBegin="MSB4194: "}UE: This message is shown when one of the override tasks file (*.overridetasks) located alongside the MSBuild binaries cannot
@@ -269,19 +328,19 @@
       LOCALIZATION: "{0}" is a message from some FX method and is already localized.
     </comment>
   </data>
-  <data name="OverrideTaskNotRootedPath" UESanitized="false" Visibility="Public">
+  <data name="OverrideTaskNotRootedPath" xml:space="preserve">
     <value>The override tasks path "{0}" must not be a relative path and must exist on disk. Default tasks will not be overridden.</value>
     <comment>
         UE: This message is shown when the override tasks path in the registry or passed to the toolset is not a full path.
     </comment>
   </data>
-  <data name="OverrideTaskProblemWithPath" UESanitized="false" Visibility="Public">
+  <data name="OverrideTaskProblemWithPath" xml:space="preserve">
     <value>A problem occurred loading the override tasks path "{0}". {1}</value>
     <comment>
         UE: This message is shown when the override tasks path in the registry or passed to the toolset is not a full path.
     </comment>
   </data>
- <data name="OverrideTasksFileLoadFailureWarning" UESanitized="false" Visibility="Public">
+  <data name="OverrideTasksFileLoadFailureWarning" xml:space="preserve">
     <value>MSB4196: The "{0}" files could not be successfully loaded from their expected location "{1}". Default tasks will not be overridden. {2}</value>
     <comment>
       {StrBegin="MSB4196: "}UE: This message is shown when the override tasks files that are located alongside the MSBuild binaries cannot be
@@ -289,228 +348,228 @@
       LOCALIZATION: "{2}" is a message from some FX method and is already localized.
     </comment>
   </data>
-  <data name="TasksPropertyBagError" UESanitized="false" Visibility="Public">
+  <data name="TasksPropertyBagError" xml:space="preserve">
     <value>MSB4195: There was an error gathering properties for tasks file evaluation. {0}</value>
     <comment>
       {StrBegin="MSB4195: "}UE: This message is shown when the gathering of properties for the evaluation of override and defaults tasks has an exception. "{0"} will be the exception message</comment>
   </data>
-  <data name="DefaultToolsVersionNotFound" UESanitized="false" Visibility="Public">
+  <data name="DefaultToolsVersionNotFound" xml:space="preserve">
     <value>MSB4133: A default tools version "{0}" was specified, but its definition could not be found.</value>
     <comment>{StrBegin="MSB4133: "}</comment>
   </data>
-  <data name="DuplicateImport" UESanitized="false" Visibility="Public">
+  <data name="DuplicateImport" xml:space="preserve">
     <value>MSB4011: "{0}" cannot be imported again. It was already imported at "{1}". This is most likely a build authoring error. This subsequent import will be ignored. {2}</value>
     <comment>{StrBegin="MSB4011: "}</comment>
   </data>
-  <data name="UsedUninitializedProperty" Visibility="Public">
+  <data name="UsedUninitializedProperty" xml:space="preserve">
     <value>MSB4211: The property "{0}" is being set to a value for the first time, but it was already consumed at "{1}".</value>
     <comment>{StrBegin="MSB4211: "}</comment>
   </data>
-  <data name="SelfImport" Visibility="Public">
+  <data name="SelfImport" xml:space="preserve">
     <value>MSB4210: "{0}" is attempting to import itself, directly or indirectly. This is most likely a build authoring error. The import will be ignored.</value>
     <comment>{StrBegin="MSB4210: "}</comment>
   </data>
-  <data name="DuplicateProjectExtensions" UESanitized="false" Visibility="Public">
+  <data name="DuplicateProjectExtensions" xml:space="preserve">
     <value>MSB4079: The &lt;ProjectExtensions&gt; element occurs more than once.</value>
     <comment>{StrBegin="MSB4079: "}</comment>
   </data>
-  <data name="EmbeddedItemVectorCannotBeItemized" UESanitized="false" Visibility="Public">
+  <data name="EmbeddedItemVectorCannotBeItemized" xml:space="preserve">
     <value>MSB4012: The expression "{0}" cannot be used in this context. Item lists cannot be concatenated with other strings where an item list is expected. Use a semicolon to separate multiple item lists.</value>
     <comment>{StrBegin="MSB4012: "}UE: This message is shown when the user does not properly specify an item list when an item list is expected
     e.g. "badprefix@(foo)badsuffix" instead of "prefix; @(foo); suffix"</comment>
   </data>
-  <data name="EndOfInputTokenName" UESanitized="false" Visibility="Public">
+  <data name="EndOfInputTokenName" xml:space="preserve">
     <value>end of input</value>
     <comment>This is the name of the "EndOfInput" token. It is displayed in quotes as the
     unexpected char or token when the end of a conditional was unexpectedly reached.</comment>
   </data>
-  <data name="ErrorConvertedIntoWarning" UESanitized="false" Visibility="Public">
+  <data name="ErrorConvertedIntoWarning" xml:space="preserve">
     <value>The previous error was converted to a warning because the task was called with ContinueOnError=true.</value>
   </data>
-  <data name="ErrorCount" UESanitized="false" Visibility="Public">
+  <data name="ErrorCount" xml:space="preserve">
     <value>{0} Error(s)</value>
   </data>
-  <data name="ErrorCreatingToolset" UESanitized="false" Visibility="Public">
+  <data name="ErrorCreatingToolset" xml:space="preserve">
     <value>MSB4159: Error creating the toolset "{0}". {1}</value>
     <comment>{StrBegin="MSB4159: "}</comment>
   </data>
-  <data name="ErrorEvaluatingToolsetPropertyExpression" UESanitized="false" Visibility="Public">
+  <data name="ErrorEvaluatingToolsetPropertyExpression" xml:space="preserve">
     <value>MSB4146: Cannot evaluate the property expression "{0}" found at "{1}". {2}</value>
     <comment>{StrBegin="MSB4146: "}</comment>
   </data>
-  <data name="ErrorWarningMessageNotSupported" UESanitized="false" Visibility="Public">
+  <data name="ErrorWarningMessageNotSupported" xml:space="preserve">
     <value>The &lt;{0}&gt; tag is no longer supported as a child of the &lt;Project&gt; element. Place this tag within a target, and add the name of the target to the "InitialTargets" attribute of the &lt;Project&gt; element.</value>
   </data>
-  <data name="EvaluationStarted" UESanitized="false" Visibility="Public">
+  <data name="EvaluationStarted" xml:space="preserve">
     <value>Evaluation started ("{0}")</value>
   </data>
-  <data name="EvaluationFinished" UESanitized="false" Visibility="Public">
+  <data name="EvaluationFinished" xml:space="preserve">
     <value>Evaluation finished ("{0}")</value>
   </data>
-  <data name="ExecutingTaskInTaskHost">
+  <data name="ExecutingTaskInTaskHost" xml:space="preserve">
     <value>Launching task "{0}" from assembly "{1}" in an external task host with a runtime of "{2}" and a process architecture of "{3}".</value>
   </data>
-  <data name="ExpressionDoesNotEvaluateToBoolean" UESanitized="false" Visibility="Public">
+  <data name="ExpressionDoesNotEvaluateToBoolean" xml:space="preserve">
     <value>MSB4100: Expected "{0}" to evaluate to a boolean instead of "{1}", in condition "{2}".</value>
     <comment>{StrBegin="MSB4100: "}</comment>
   </data>
-  <data name="FailedToRetrieveTaskOutputs" UESanitized="false" Visibility="Public">
+  <data name="FailedToRetrieveTaskOutputs" xml:space="preserve">
     <value>MSB4028: The "{0}" task's outputs could not be retrieved from the "{1}" parameter. {2}</value>
     <comment>{StrBegin="MSB4028: "}</comment>
   </data>
-  <data name="FatalBuildError" UESanitized="false" Visibility="Public">
+  <data name="FatalBuildError" xml:space="preserve">
     <value>MSB4014: The build stopped unexpectedly because of an internal failure.</value>
     <comment>{StrBegin="MSB4014: "}UE: This message is shown when an unhandled exception terminates the build. The cause is most likely a programming
     error in the build engine.</comment>
   </data>
-  <data name="FatalErrorDuringLoggerShutdown" UESanitized="false" Visibility="Public">
+  <data name="FatalErrorDuringLoggerShutdown" xml:space="preserve">
     <value>MSB4015: The build stopped unexpectedly because the "{0}" logger failed unexpectedly during shutdown.</value>
     <comment>{StrBegin="MSB4015: "}UE: This message is used for a special exception that is thrown when a logger fails while shutting down (most likely
     because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a special
     exception to abort the build.</comment>
   </data>
-  <data name="FatalErrorWhileInitializingLogger" UESanitized="false" Visibility="Public">
+  <data name="FatalErrorWhileInitializingLogger" xml:space="preserve">
     <value>MSB4016: The build stopped unexpectedly because the "{0}" logger failed unexpectedly during initialization.</value>
     <comment>{StrBegin="MSB4016: "}UE: This message is used for a special exception that is thrown when a logger fails while initializing itself (most
     likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
     special exception to abort the build.</comment>
   </data>
-  <data name="FatalErrorWhileLogging" UESanitized="false" Visibility="Public">
+  <data name="FatalErrorWhileLogging" xml:space="preserve">
     <value>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.</value>
     <comment>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
     likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
     special exception to abort the build.</comment>
   </data>
-  <data name="FatalTaskError" UESanitized="false" Visibility="Public">
+  <data name="FatalTaskError" xml:space="preserve">
     <value>MSB4018: The "{0}" task failed unexpectedly.</value>
     <comment>{StrBegin="MSB4018: "}UE: This message is shown when a task terminates because of an unhandled exception. The cause is most likely a
     programming error in the task; however, it is also possible that the unhandled exception originated in the engine, and was
     surfaced through the task when the task called into the engine.</comment>
   </data>
-  <data name="FailedToReceiveTaskThreadStatus" UESanitized="false" Visibility="Public">
+  <data name="FailedToReceiveTaskThreadStatus" xml:space="preserve">
     <value>MSB4187: Failed to receive a response from the task thread in the timeout period "{0}" ms. Shutting down.</value>
     <comment>{StrBegin="MSB4187: "}</comment>
   </data>
-  <data name="IllFormedCondition" UESanitized="false" Visibility="Public">
+  <data name="IllFormedCondition" xml:space="preserve">
     <value>MSB4088: Condition "{0}" is improperly constructed.</value>
     <comment>{StrBegin="MSB4088: "}</comment>
   </data>
-  <data name="IllFormedEqualsInCondition" UESanitized="false" Visibility="Public">
+  <data name="IllFormedEqualsInCondition" xml:space="preserve">
     <value>MSB4105: Found an unexpected character '{2}' at position {1} in condition "{0}". Did you intend to use "=="?</value>
     <comment>{StrBegin="MSB4105: "}</comment>
   </data>
-  <data name="IllFormedItemListCloseParenthesisInCondition" UESanitized="false" Visibility="Public">
+  <data name="IllFormedItemListCloseParenthesisInCondition" xml:space="preserve">
     <value>MSB4106: Expected an item list at position {1} in condition "{0}". Did you forget the closing parenthesis?</value>
     <comment>{StrBegin="MSB4106: "}</comment>
   </data>
-  <data name="IllFormedItemListOpenParenthesisInCondition" UESanitized="false" Visibility="Public">
+  <data name="IllFormedItemListOpenParenthesisInCondition" xml:space="preserve">
     <value>MSB4107: Expected an item list at position {1} in condition "{0}". Did you forget the opening parenthesis after the '@'? To use a literal '@', use '%40' instead.</value>
     <comment>{StrBegin="MSB4107: "}</comment>
   </data>
-  <data name="IllFormedItemListQuoteInCondition" UESanitized="false" Visibility="Public">
+  <data name="IllFormedItemListQuoteInCondition" xml:space="preserve">
     <value>MSB4108: Expected an item list at position {1} in condition "{0}". Did you forget to close a quote inside the item list expression?</value>
     <comment>{StrBegin="MSB4108: "}</comment>
   </data>
-  <data name="IllFormedPropertyCloseParenthesisInCondition" UESanitized="false" Visibility="Public">
+  <data name="IllFormedPropertyCloseParenthesisInCondition" xml:space="preserve">
     <value>MSB4109: Expected a property at position {1} in condition "{0}". Did you forget the closing parenthesis?</value>
     <comment>{StrBegin="MSB4109: "}</comment>
   </data>
-  <data name="IllFormedPropertyOpenParenthesisInCondition" UESanitized="false" Visibility="Public">
+  <data name="IllFormedPropertyOpenParenthesisInCondition" xml:space="preserve">
     <value>MSB4110: Expected a property at position {1} in condition "{0}". Did you forget the opening parenthesis after the '$'? To use a literal '$', use '%24' instead.</value>
     <comment>{StrBegin="MSB4110: "}</comment>
   </data>
-  <data name="IllFormedQuotedStringInCondition" UESanitized="false" Visibility="Public">
+  <data name="IllFormedQuotedStringInCondition" xml:space="preserve">
     <value>MSB4101: Expected a closing quote after position {1} in condition "{0}".</value>
     <comment>{StrBegin="MSB4101: "}</comment>
   </data>
-  <data name="ImportedProjectNotFound" UESanitized="false" Visibility="Public">
+  <data name="ImportedProjectNotFound" xml:space="preserve">
     <value>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</value>
     <comment>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</comment>
   </data>
-  <data name="ImportedProjectFromExtensionsPathNotFoundFromAppConfig" UESanitized="false" Visibility="Public">
+  <data name="ImportedProjectFromExtensionsPathNotFoundFromAppConfig" xml:space="preserve">
     <value>MSB4226: The imported project "{0}" was not found. Also, tried to find "{1}" in the fallback search path(s) for {2} - {3} . These search paths are defined in "{4}". Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk in one of the search paths.</value>
     <comment>{StrBegin="MSB4226: "}LOCALIZATION: &lt;Import&gt; should not be localized.</comment>
   </data>
-  <data name="ImportedProjectFromExtensionsPathNotFound" UESanitized="false" Visibility="Public">
+  <data name="ImportedProjectFromExtensionsPathNotFound" xml:space="preserve">
     <value>MSB4226: The imported project "{0}" was not found. Also, tried to find "{1}" in the fallback search path(s) for {2} - {3} . Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk in one of the search paths.</value>
     <comment>{StrBegin="MSB4226: "}LOCALIZATION: &lt;Import&gt; should not be localized.</comment>
   </data>
-  <data name="IncorrectNumberOfFunctionArguments" UESanitized="false" Visibility="Public">
+  <data name="IncorrectNumberOfFunctionArguments" xml:space="preserve">
     <value>MSB4089: Incorrect number of arguments to function in condition "{0}". Found {1} argument(s) when expecting {2}.</value>
     <comment>{StrBegin="MSB4089: "}</comment>
   </data>
-  <data name="InvalidAttributeValue" UESanitized="false" Visibility="Public">
+  <data name="InvalidAttributeValue" xml:space="preserve">
     <value>MSB4020: The value "{0}" of the "{1}" attribute in element &lt;{2}&gt; is invalid.</value>
     <comment>{StrBegin="MSB4020: "}UE: This is a generic message that is displayed when we find a project element with an incorrect value for one of its
     attributes e.g. &lt;Import Project=""&gt; -- the value of Project should not be an empty string.</comment>
   </data>
-  <data name="InvalidAttributeExclusive" UESanitized="false" Visibility="Public">
+  <data name="InvalidAttributeExclusive" xml:space="preserve">
     <value>MSB4111: At most one of the include, remove, and update attributes may be specified for an item element.</value>
   </data>
-  <data name="InvalidAttributeValueWithException" UESanitized="false" Visibility="Public">
+  <data name="InvalidAttributeValueWithException" xml:space="preserve">
     <value>MSB4102: The value "{0}" of the "{1}" attribute in element &lt;{2}&gt; is invalid. {3}</value>
     <comment>{StrBegin="MSB4102: "}UE: This is a generic message that is displayed when we find a project element with an incorrect value for one of its
         attributes. At the end of the message we show the exception text we got trying to use the value.</comment>
   </data>
-  <data name="InvalidBinaryLoggerParameters" UESanitized="false" Visibility="Public">
+  <data name="InvalidBinaryLoggerParameters" xml:space="preserve">
     <value>MSB4234: Invalid binary logger parameter(s): "{0}". Expected: ProjectImports={{None,Embed,ZipFile}} and/or [LogFile=]filePath.binlog (the log file name or path, must have the ".binlog" extension).</value>
   </data>
-  <data name="InvalidContinueOnErrorAttribute" UESanitized="false" Visibility="Public">
+  <data name="InvalidContinueOnErrorAttribute" xml:space="preserve">
     <value>MSB4021: The "ContinueOnError" attribute of the "{0}" task is not valid. {1}</value>
     <comment>{StrBegin="MSB4021: "}LOCALIZATION: "ContinueOnError" should not be localized. "{1}" is a message from another exception explaining the problem.</comment>
   </data>
-  <data name="InvalidEvaluatedAttributeValue" UESanitized="false" Visibility="Public">
+  <data name="InvalidEvaluatedAttributeValue" xml:space="preserve">
     <value>MSB4022: The result "{0}" of evaluating the value "{1}" of the "{2}" attribute in element &lt;{3}&gt; is not valid.</value>
     <comment>{StrBegin="MSB4022: "}UE: This message is shown when the engine is checking the correctness of the value (after evaluating embedded
     properties/items) assigned to an XML attribute of an XML element in the project file.</comment>
   </data>
-  <data name="InvalidFileLoggerFile" UESanitized="false" Visibility="Private_OM">
+  <data name="InvalidFileLoggerFile" xml:space="preserve">
     <value>MSB4104: Failed to write to log file "{0}". {1}</value>
     <comment>{StrBegin="MSB4104: "}UE: This is shown when the File Logger can't create or write to the file it was instructed to log to.</comment>
   </data>
-  <data name="InvalidImportedProjectFile" UESanitized="false" Visibility="Public">
+  <data name="InvalidImportedProjectFile" xml:space="preserve">
     <value>MSB4024: The imported project file "{0}" could not be loaded. {1}</value>
     <comment>{StrBegin="MSB4024: "}UE: This message is shown when an imported project file cannot be loaded because of incorrect XML. The project
     filename is not part of the message because it is provided separately to loggers.
     LOCALIZATION: {0} is a localized message from the CLR/FX explaining why the project is invalid.</comment>
   </data>
-  <data name="InvalidPropertyNameInToolset" UESanitized="false" Visibility="Private_OM">
+  <data name="InvalidPropertyNameInToolset" xml:space="preserve">
     <value>MSB4147: The property "{0}" at "{1}" is invalid. {2}</value>
     <comment>{StrBegin="MSB4147: "}</comment>
   </data>
-  <data name="InvalidProperty" UESanitized="false" Visibility="Private_OM">
+  <data name="InvalidProperty" xml:space="preserve">
     <value>MSB4177: Invalid property. {0}</value>
     <comment>{StrBegin="MSB4177: "}
       UE: {0} is a localized message indicating what the problem was.</comment>
   </data>
-  <data name="InvalidRegistryPropertyExpression" UESanitized="false" Visibility="Public">
+  <data name="InvalidRegistryPropertyExpression" xml:space="preserve">
     <value>MSB4143: The registry expression "{0}" cannot be evaluated. {1}</value>
     <comment>{StrBegin="MSB4143: "}
       UE: This message is shown when the user attempts to provide an expression like "$(Registry:HKEY_LOCAL_MACHINE\Software\Vendor\Tools@TaskLocation)"
       LOCALIZATION: "{0}" is the expression that was bad. "{1}" is a message from an FX exception that describes why the expression is bad.
     </comment>
   </data>
-  <data name="InvalidFunctionPropertyExpression" UESanitized="false" Visibility="Public">
+  <data name="InvalidFunctionPropertyExpression" xml:space="preserve">
     <value>MSB4184: The expression "{0}" cannot be evaluated. {1}</value>
     <comment>{StrBegin="MSB4184: "}
       Double quotes as the expression will typically have single quotes in it.
-      UE: This message is shown when the user attempts to provide an expression like "$(SomeProperty.ToLower())" or "@(Foo->Bar())"
+      UE: This message is shown when the user attempts to provide an expression like "$(SomeProperty.ToLower())" or "@(Foo-&gt;Bar())"
       LOCALIZATION: "{0}" is the expression that was bad. "{1}" is a message from an FX exception that describes why the expression is bad.
     </comment>
   </data>
-  <data name="InvalidFunctionPropertyExpressionDetailMismatchedQuote">
+  <data name="InvalidFunctionPropertyExpressionDetailMismatchedQuote" xml:space="preserve">
     <value>The quotes were mismatched.</value>
     <comment>This is a potential suffix to "InvalidFunctionPropertyExpression" so it has no error code.</comment>
   </data>
-  <data name="InvalidFunctionPropertyExpressionDetailMismatchedParenthesis">
+  <data name="InvalidFunctionPropertyExpressionDetailMismatchedParenthesis" xml:space="preserve">
     <value>The parentheses were mismatched.</value>
     <comment>This is a potential suffix to "InvalidFunctionPropertyExpression" so it has no error code.</comment>
   </data>
-  <data name="InvalidFunctionPropertyExpressionDetailMismatchedSquareBrackets">
+  <data name="InvalidFunctionPropertyExpressionDetailMismatchedSquareBrackets" xml:space="preserve">
     <value>The square brackets were mismatched.</value>
     <comment>This is a potential suffix to "InvalidFunctionPropertyExpression" so it has no error code.</comment>
   </data>
-  <data name="InvalidFunctionMethodUnavailable" UESanitized="false" Visibility="Public">
+  <data name="InvalidFunctionMethodUnavailable" xml:space="preserve">
     <value>MSB4185: The function "{0}" on type "{1}" is not available for execution as an MSBuild property function.</value>
     <comment>
       {StrBegin="MSB4185: "}
@@ -518,7 +577,7 @@
       LOCALIZATION: "{0}" is the static function name, "{1}" is the .NET Framework type name
     </comment>
   </data>
-  <data name="InvalidFunctionTypeUnavailable" UESanitized="false" Visibility="Public">
+  <data name="InvalidFunctionTypeUnavailable" xml:space="preserve">
     <value>MSB4212: Invalid static method invocation syntax: "{0}". The type "{1}" is either not available for execution in an MSBuild property function or could not be found.</value>
     <comment>
       {StrBegin="MSB4212: "}
@@ -526,23 +585,23 @@
       LOCALIZATION: "{0}" is the function expression which is in error. "{1}" is the .NET Framework type name
     </comment>
   </data>
-  <data name="InvalidFunctionStaticMethodSyntax" UESanitized="false" Visibility="Public">
+  <data name="InvalidFunctionStaticMethodSyntax" xml:space="preserve">
     <value>MSB4186: Invalid static method invocation syntax: "{0}". {1} Static method invocation should be of the form: $([FullTypeName]::Method()), e.g. $([System.IO.Path]::Combine(`a`, `b`)). Check that all parameters are defined, are of the correct type, and are specified in the right order.</value>
     <comment>{StrBegin="MSB4186: "}
       UE: This message is shown when the user attempts to call a static method on a type, but has used the incorrect syntax
       LOCALIZATION: "{0}" is the function expression which is in error. "{1}" is a message from an FX exception that describes why the expression is bad.
     </comment>
   </data>
-  <data name="InvalidItemFunctionExpression" UESanitized="false" Visibility="Public">
+  <data name="InvalidItemFunctionExpression" xml:space="preserve">
     <value>MSB4198: The expression "{0}" cannot be evaluated on item "{1}". {2}</value>
     <comment>
       {StrBegin="MSB4198: "}
       Double quotes as the expression will typically have single quotes in it.
-      UE: This message is shown when the user attempts to provide an expression like "@(SomeItem->DirectoryName())"
+      UE: This message is shown when the user attempts to provide an expression like "@(SomeItem-&gt;DirectoryName())"
       LOCALIZATION: "{0}" is the expression that was bad, "{1}" is the item or file that was being worked on. "{2}" is a message from an FX exception that describes why the expression is bad.
     </comment>
   </data>
-  <data name="InvalidItemFunctionSyntax" UESanitized="false" Visibility="Public">
+  <data name="InvalidItemFunctionSyntax" xml:space="preserve">
     <value>MSB4199: Invalid transformation syntax "{0}". An item function was not found with that name and {1} parameters.</value>
     <comment>
       {StrBegin="MSB4199: "}
@@ -550,531 +609,510 @@
       LOCALIZATION: "{0}" is the function which is in error
     </comment>
   </data>
-  <data name="UnknownItemFunction" UESanitized="false" Visibility="Public">
+  <data name="UnknownItemFunction" xml:space="preserve">
     <value>MSB4200: Unknown item transformation function "{0}".</value>
     <comment>
       {StrBegin="MSB4200: "}
-      UE: This message is shown when the user attempts to provide an expression like @(Item->SomeTransform()), but SomeTransform is unknown
+      UE: This message is shown when the user attempts to provide an expression like @(Item-&gt;SomeTransform()), but SomeTransform is unknown
       LOCALIZATION: "{0}" is the function name
     </comment>
   </data>
-  <data name="InvalidTaskAttributeError" UESanitized="false" Visibility="Public">
+  <data name="InvalidTaskAttributeError" xml:space="preserve">
     <value>MSB4026: The "{0}={1}" parameter for the "{2}" task is invalid.</value>
     <comment>{StrBegin="MSB4026: "}UE: This message is displayed when a task has an invalid parameter that cannot be initialized.</comment>
   </data>
-  <data name="InvalidTaskItemsInTaskOutputs" UESanitized="false" Visibility="Public">
+  <data name="InvalidTaskItemsInTaskOutputs" xml:space="preserve">
     <value>MSB4027: The "{0}" task generated invalid items from the "{1}" output parameter. {2}</value>
     <comment>{StrBegin="MSB4027: "}</comment>
   </data>
-  <data name="InvalidTaskOutputSpecification" UESanitized="false" Visibility="Public">
+  <data name="InvalidTaskOutputSpecification" xml:space="preserve">
     <value>MSB4029: The "{0}" task has an invalid output specification. The "TaskParameter" attribute is required, and either the "ItemName" or "PropertyName" attribute must be specified (but not both).</value>
     <comment>{StrBegin="MSB4029: "}LOCALIZATION: "TaskParameter", "ItemName" and "PropertyName" should not be localized.</comment>
   </data>
-  <data name="InvalidTaskParameterValueError" UESanitized="false" Visibility="Public">
+  <data name="InvalidTaskParameterValueError" xml:space="preserve">
     <value>MSB4030: "{0}" is an invalid value for the "{1}" parameter of the "{3}" task. The "{1}" parameter is of type "{2}".</value>
     <comment>{StrBegin="MSB4030: "}UE: This error is shown when a type mis-match occurs between the value assigned to task parameter in the project file
     and the type of the .NET property that corresponds to the task parameter. For example, if an int task parameter called "Count"
     is assigned the value "x", this error would be displayed: &lt;MyTask Count="x" /&gt;</comment>
   </data>
-  <data name="InvalidToolsetValueInConfigFileValue" UESanitized="false" Visibility="Public">
+  <data name="InvalidToolsetValueInConfigFileValue" xml:space="preserve">
     <value>MSB4137: Invalid value specified in the configuration file at "{0}". Property name or tools version name is an empty string.</value>
     <comment>{StrBegin="MSB4137: "}</comment>
   </data>
-  <data name="ItemDefinitionGroupNotLegalInsideTarget" UESanitized="false" Visibility="Public">
+  <data name="ItemDefinitionGroupNotLegalInsideTarget" xml:space="preserve">
     <value>MSB4163: &lt;ItemDefinitionGroup&gt; is not allowed inside a target.</value>
     <comment>{StrBegin="MSB4163: "}</comment>
   </data>
-  <data name="ItemDoesNotContainValueForUnqualifiedMetadata" UESanitized="false" Visibility="Public">
+  <data name="ItemDoesNotContainValueForUnqualifiedMetadata" xml:space="preserve">
     <value>MSB4096: The item "{0}" in item list "{1}" does not define a value for metadata "{2}".  In order to use this metadata, either qualify it by specifying %({1}.{2}), or ensure that all items in this list define a value for this metadata.</value>
     <comment>{StrBegin="MSB4096: "}</comment>
   </data>
-  <data name="ItemListNotAllowedInThisConditional" UESanitized="false" Visibility="Public">
+  <data name="ItemListNotAllowedInThisConditional" xml:space="preserve">
     <value>MSB4099: A reference to an item list at position {1} is not allowed in this condition "{0}".</value>
     <comment>{StrBegin="MSB4099: "}</comment>
   </data>
-  <data name="CustomMetadataNotAllowedInThisConditional" UESanitized="false" Visibility="Public">
+  <data name="CustomMetadataNotAllowedInThisConditional" xml:space="preserve">
     <value>MSB4191: The reference to custom metadata "{2}" at position {1} is not allowed in this condition "{0}".</value>
     <comment>{StrBegin="MSB4191: "}</comment>
   </data>
-  <data name="BuiltInMetadataNotAllowedInThisConditional" UESanitized="false" Visibility="Public">
+  <data name="BuiltInMetadataNotAllowedInThisConditional" xml:space="preserve">
     <value>MSB4190: The reference to the built-in metadata "{2}" at position {1} is not allowed in this condition "{0}".</value>
     <comment>{StrBegin="MSB4190: "}</comment>
   </data>
-  <data name="ItemSpecModifierCannotBeCustomMetadata" UESanitized="false" Visibility="Public">
+  <data name="ItemSpecModifierCannotBeCustomMetadata" xml:space="preserve">
     <value>MSB4033: "{0}" is a reserved item metadata, and cannot be redefined as a custom metadata on the item.</value>
     <comment>{StrBegin="MSB4033: "}</comment>
   </data>
-  <data name="InternalLoggerExceptionOnlyThrownByEngine" UESanitized="false" Visibility="Private_OM">
+  <data name="InternalLoggerExceptionOnlyThrownByEngine" xml:space="preserve">
     <value>An InternalLoggerException can only be thrown by the MSBuild engine. The public constructors of this class cannot be used to create an instance of the exception.</value>
     <comment>UE: This message is shown when a user tries to instantiate a special exception called InternalLoggerException through the OM --
     only the engine is allowed to create and throw this exception.
     LOCALIZATION: "InternalLoggerException" and "MSBuild" should not be localized.</comment>
   </data>
-  <data name="ItemListHeader" UESanitized="false" Visibility="Public">
+  <data name="ItemListHeader" xml:space="preserve">
     <value>Initial Items:</value>
   </data>
-  <data name="EnvironmentHeader" UESanitized="false" Visibility="Public">
+  <data name="EnvironmentHeader" xml:space="preserve">
     <value>Environment at start of build:</value>
   </data>
-  <data name="MetadataDefinitionCannotContainItemVectorExpression" UESanitized="false" Visibility="Public">
+  <data name="MetadataDefinitionCannotContainItemVectorExpression" xml:space="preserve">
     <value>MSB4164: The value "{0}" of metadata "{1}" contains an item list expression. Item list expressions are not allowed on default metadata values.</value>
     <comment>{StrBegin="MSB4164: "}</comment>
   </data>
-  <data name="MissingRequiredAttribute" UESanitized="false" Visibility="Public">
+  <data name="MissingRequiredAttribute" xml:space="preserve">
     <value>MSB4035: The required attribute "{0}" is empty or missing from the element &lt;{1}&gt;.</value>
     <comment>{StrBegin="MSB4035: "}UE: This message is shown when a user leaves off a required attribute from a project element
     e.g. &lt;UsingTask AssemblyName="foo"&gt; -- this is missing the "TaskName" attribute.</comment>
   </data>
-  <data name="IncludeRemoveOrUpdate" UESanitized="false" Visibility="Public">
+  <data name="IncludeRemoveOrUpdate" xml:space="preserve">
     <value>MSB4232: Items that are outside Target elements must have one of the following operations: Include, Update, or Remove.</value>
     <comment>{StrBegin="MSB4232: "} Target, Include, Update, and Remove should not be localized and their casing should not be changed</comment>
   </data>
-  <data name="MissingTaskError" UESanitized="false" Visibility="Public">
+  <data name="MissingTaskError" xml:space="preserve">
     <value>MSB4036: The "{0}" task was not found. Check the following: 1.) The name of the task in the project file is the same as the name of the task class. 2.) The task class is "public" and implements the Microsoft.Build.Framework.ITask interface. 3.) The task is correctly declared with &lt;UsingTask&gt; in the project file, or in the *.tasks files located in the "{1}" directory.</value>
     <comment>{StrBegin="MSB4036: "}LOCALIZATION: &lt;UsingTask&gt; and "*.tasks" should not be localized.</comment>
   </data>
-  <data name="MSBuildToolsPathIsNotSpecified" UESanitized="false" Visibility="Public">
+  <data name="MSBuildToolsPathIsNotSpecified" xml:space="preserve">
     <value>MSB4141: MSBuildToolsPath is not specified for the ToolsVersion "{0}" defined at "{1}", or the value specified evaluates to the empty string.</value>
     <comment>{StrBegin="MSB4141: "}</comment>
   </data>
-  <data name="MSBuildToolsPathNotSupportedInSubToolsets" UESanitized ="false" Visibility="Public">
+  <data name="MSBuildToolsPathNotSupportedInSubToolsets" xml:space="preserve">
     <value>MSB4222: ToolsVersion "{0}", defined at "{1}", contains sub-toolset "{2}" which sets MSBuildBinPath or MSBuildToolsPath. This is not supported in sub-toolsets.</value>
   </data>
-  <data name="MultipleDefinitionsForSameToolset" UESanitized="false" Visibility="Public">
+  <data name="MultipleDefinitionsForSameToolset" xml:space="preserve">
     <value>MSB4144: Multiple definitions were found for the toolset "{0}". </value>
     <comment>{StrBegin="MSB4144: "}</comment>
   </data>
-  <data name="MultipleDefinitionsForSameExtensionsPathOS" UESanitized="false" Visibility="Public">
-      <value>MSB4225: Toolset contains multiple definitions of searchPaths for the OS "{0}" at "{1}".</value>
+  <data name="MultipleDefinitionsForSameExtensionsPathOS" xml:space="preserve">
+    <value>MSB4225: Toolset contains multiple definitions of searchPaths for the OS "{0}" at "{1}".</value>
     <comment>{StrBegin="MSB4225: "}</comment>
   </data>
-  <data name="MultipleDefinitionsForSameProperty" UESanitized="false" Visibility="Public">
+  <data name="MultipleDefinitionsForSameProperty" xml:space="preserve">
     <value>MSB4145: Multiple definitions were found for the property "{0}".</value>
     <comment>{StrBegin="MSB4145: "}</comment>
   </data>
-  <data name="MultipleOtherwise" UESanitized="false" Visibility="Public">
+  <data name="MultipleOtherwise" xml:space="preserve">
     <value>MSB4082: Choose has more than one &lt;Otherwise&gt; element.</value>
     <comment>{StrBegin="MSB4082: "}</comment>
   </data>
-  <data name="NodeMustBeLastUnderElement" UESanitized="false" Visibility="Public">
+  <data name="NodeMustBeLastUnderElement" xml:space="preserve">
     <value>MSB4038: The element &lt;{0}&gt; must be last under element &lt;{1}&gt;. Found element &lt;{2}&gt; instead.</value>
     <comment>{StrBegin="MSB4038: "}</comment>
   </data>
-  <data name="NonStringDataInRegistry" UESanitized="false" Visibility="Public">
+  <data name="NonStringDataInRegistry" xml:space="preserve">
     <value>MSB4138: Non-string data was specified at the registry location "{0}".</value>
     <comment>{StrBegin="MSB4138: "}</comment>
   </data>
-  <data name="NoRootProjectElement" UESanitized="false" Visibility="Public">
+  <data name="NoRootProjectElement" xml:space="preserve">
     <value>MSB4039: No "{0}" element was found in the project file.</value>
     <comment>{StrBegin="MSB4039: "}</comment>
   </data>
-  <data name="NoTargetSpecified" UESanitized="false" Visibility="Public">
+  <data name="NoTargetSpecified" xml:space="preserve">
     <value>MSB4040: There is no target in the project.</value>
     <comment>{StrBegin="MSB4040: "}</comment>
   </data>
-  <data name="NullLoggerNotAllowed" UESanitized="false" Visibility="Private_OM">
+  <data name="NullLoggerNotAllowed" xml:space="preserve">
     <value>A null entry was found in the collection of loggers.</value>
   </data>
-  <data name="InvalidMaxNodeCount" UESanitized="false" Visibility="Private_OM">
+  <data name="InvalidMaxNodeCount" xml:space="preserve">
     <value>MaxNodeCount may only be assigned a value greater than zero.</value>
   </data>
-  <data name="OverridingTarget" UESanitized="false" Visibility="Public">
+  <data name="OverridingTarget" xml:space="preserve">
     <value>Overriding target "{0}" in project "{1}" with target "{2}" from project "{3}".</value>
   </data>
-  <data name="PerformanceLine" UESanitized="false" Visibility="Public">
+  <data name="PerformanceLine" xml:space="preserve">
     <value>{0} ms  {1} {2} calls</value>
   </data>
-  <data name="PerformanceReentrancyNote" UESanitized="false" Visibility="Public">
+  <data name="PerformanceReentrancyNote" xml:space="preserve">
     <value>(* = timing was not recorded because of reentrancy)</value>
   </data>
-  <data name="ProjectFileNotFound" UESanitized="false" Visibility="Private_OM">
+  <data name="ProjectFileNotFound" xml:space="preserve">
     <value>The project file "{0}" was not found.</value>
     <comment>UE: This message is shown when the user calls into the OM to build a project that doesn't exist on disk.</comment>
   </data>
-  <data name="ProjectFinishedFailure" UESanitized="false" Visibility="Public">
+  <data name="ProjectFinishedFailure" xml:space="preserve">
     <value>Done building project "{0}" -- FAILED.</value>
   </data>
-  <data name="ProjectFinishedSuccess" UESanitized="false" Visibility="Public">
+  <data name="ProjectFinishedSuccess" xml:space="preserve">
     <value>Done building project "{0}".</value>
   </data>
-  <data name="ProjectFinishedPrefixWithTargetNamesMultiProc" UESanitized="false" Visibility="Public">
+  <data name="ProjectFinishedPrefixWithTargetNamesMultiProc" xml:space="preserve">
     <value>Done Building Project "{0}" ({1} target(s)).</value>
   </data>
-  <data name="ProjectFinishedPrefixWithDefaultTargetsMultiProc" UESanitized="false" Visibility="Public">
+  <data name="ProjectFinishedPrefixWithDefaultTargetsMultiProc" xml:space="preserve">
     <value>Done Building Project "{0}" (default targets).</value>
   </data>
-  <data name="ProjectFinishedPrefixWithTargetNamesMultiProcFailed" UESanitized="false" Visibility="Public">
+  <data name="ProjectFinishedPrefixWithTargetNamesMultiProcFailed" xml:space="preserve">
     <value>Done Building Project "{0}" ({1} target(s)) -- FAILED.</value>
   </data>
-  <data name="ProjectFinishedPrefixWithDefaultTargetsMultiProcFailed" UESanitized="false" Visibility="Public">
+  <data name="ProjectFinishedPrefixWithDefaultTargetsMultiProcFailed" xml:space="preserve">
     <value>Done Building Project "{0}" (default targets) -- FAILED.</value>
   </data>
-  <data name="ProjectMustBeInMSBuildXmlNamespace" UESanitized="false" Visibility="Public">
+  <data name="ProjectMustBeInMSBuildXmlNamespace" xml:space="preserve">
     <value>MSB4041: The default XML namespace of the project must be the MSBuild XML namespace or no namespace. If the project is authored in the MSBuild 2003 format, please add xmlns="{0}" to the &lt;Project&gt; element. If the project has been authored in the old 1.0 or 1.2 format, please convert it to MSBuild 2003 format.</value>
     <comment>{StrBegin="MSB4041: "}UE: This is a Beta 1 message only.
       LOCALIZATION: &lt;Project&gt;, "MSBuild" and "xmlns" should not be localized.</comment>
   </data>
-  <data name="ProjectPerformanceSummary" UESanitized="false" Visibility="Public">
+  <data name="ProjectPerformanceSummary" xml:space="preserve">
     <value>Project Performance Summary:</value>
   </data>
-  <data name="ProjectStartedPrefixForNestedProjectWithTargetNames" UESanitized="false" Visibility="Public">
+  <data name="ProjectStartedPrefixForNestedProjectWithTargetNames" xml:space="preserve">
     <value>Project "{0}" is building "{1}" ({2} target(s)):</value>
   </data>
-  <data name="ProjectStartedPrefixForNestedProjectWithDefaultTargets" UESanitized="false" Visibility="Public">
+  <data name="ProjectStartedPrefixForNestedProjectWithDefaultTargets" xml:space="preserve">
     <value>Project "{0}" is building "{1}" (default targets):</value>
   </data>
-  <data name="ProjectStartedPrefixForTopLevelProjectWithTargetNames" UESanitized="false" Visibility="Public">
+  <data name="ProjectStartedPrefixForTopLevelProjectWithTargetNames" xml:space="preserve">
     <value>Project "{0}" ({1} target(s)):</value>
   </data>
-  <data name="ProjectStartedPrefixForTopLevelProjectWithDefaultTargets" UESanitized="false" Visibility="Public">
+  <data name="ProjectStartedPrefixForTopLevelProjectWithDefaultTargets" xml:space="preserve">
     <value>Project "{0}" (default targets):</value>
   </data>
-  <data name="ProjectTaskNameEmpty" UESanitized="false" Visibility="Public">
+  <data name="ProjectTaskNameEmpty" xml:space="preserve">
     <value>Task name cannot be empty.</value>
   </data>
-  <data name="ProjectUpgradeNeeded">
+  <data name="ProjectUpgradeNeeded" xml:space="preserve">
     <value>MSB4075: The project file "{0}" must be opened in the Visual Studio IDE and converted to the latest version before it can be built by MSBuild.</value>
     <comment>{StrBegin="MSB4075: "}</comment>
   </data>
-  <data name="ProjectUpgradeNeededToVcxProj">
+  <data name="ProjectUpgradeNeededToVcxProj" xml:space="preserve">
     <value>MSB4192: The project file "{0}" is in the ".vcproj" file format, which MSBuild no longer supports. Please convert the project by opening it in the Visual Studio IDE or running the conversion tool, or use MSBuild 3.5 or earlier to build it.</value>
     <comment>{StrBegin="MSB4192: "} LOC: ".vcproj" should not be localized</comment>
   </data>
-  <data name="PropertyListHeader" UESanitized="false" Visibility="Public">
+  <data name="PropertyListHeader" xml:space="preserve">
     <value>Initial Properties:</value>
   </data>
-  <data name="PropertyNameInRegistryHasZeroLength" UESanitized="false" Visibility="Public">
+  <data name="PropertyNameInRegistryHasZeroLength" xml:space="preserve">
     <value>MSB4148: The name of a property stored under the registry key "{0}" has zero length.</value>
     <comment>{StrBegin="MSB4148: "}</comment>
   </data>
-  <data name="PropertyReassignment" UESanitized="false" Visibility="Public">
+  <data name="PropertyReassignment" xml:space="preserve">
     <value>Property reassignment: $({0})="{1}" (previous value: "{2}") at {3}</value>
   </data>
-  <data name="QualifiedMetadataInTransformNotAllowed" UESanitized="false" Visibility="Public">
+  <data name="QualifiedMetadataInTransformNotAllowed" xml:space="preserve">
     <value>MSB4043: The item metadata reference "{0}" is invalid because it is qualified with an item name. Item metadata referenced in transforms do not need to be qualified, because the item name is automatically deduced from the items being transformed. Change "{0}" to "%({1})".</value>
-    <comment>{StrBegin="MSB4043: "}UE: This message is shown when the user does something like this: @(foo->'%(foo.metadata)'). There is no need to specify
+    <comment>{StrBegin="MSB4043: "}UE: This message is shown when the user does something like this: @(foo-&gt;'%(foo.metadata)'). There is no need to specify
     "foo.metadata", because "foo" is automatically deduced. In corollary, "bar.metadata" is not allowed either, where "bar" is a different
     item list type.</comment>
   </data>
-  <data name="RegistryReadError" UESanitized="false" Visibility="Public">
+  <data name="RegistryReadError" xml:space="preserve">
     <value>MSB4135: Error reading the toolset information from the registry location "{0}". {1}</value>
     <comment>{StrBegin="MSB4135: "}</comment>
   </data>
-  <data name="RequiredPropertyNotSetError" UESanitized="false" Visibility="Public">
+  <data name="RequiredPropertyNotSetError" xml:space="preserve">
     <value>MSB4044: The "{0}" task was not given a value for the required parameter "{1}".</value>
     <comment>{StrBegin="MSB4044: "}UE: This message is shown when a task parameter designated as "required" is not set in the project file.</comment>
   </data>
-  <data name="SecurityProjectBuildDisabled" UESanitized="false" Visibility="Public">
+  <data name="SecurityProjectBuildDisabled" xml:space="preserve">
     <value>MSB4112: The targets in this project have been disabled by the host and therefore cannot be built at this time. This may have been done for security reasons. To enable the targets, the host must set Project.BuildEnabled to "true".</value>
     <comment>{StrBegin="MSB4112: "}</comment>
   </data>
-  <data name="SetAccessorNotAvailableOnTaskParameter" UESanitized="false" Visibility="Public">
+  <data name="SetAccessorNotAvailableOnTaskParameter" xml:space="preserve">
     <value>MSB4093: The "{0}" parameter of the "{1}" task cannot be written to because it does not have a "set" accessor.</value>
     <comment>{StrBegin="MSB4093: "}UE: This error is shown when a project tries to assign a value to a task parameter that does not have a "set"
     accessor on the corresponding .NET property on the task class.</comment>
   </data>
-  <data name="SkipTargetBecauseNoInputs" UESanitized="false" Visibility="Public">
+  <data name="SkipTargetBecauseNoInputs" xml:space="preserve">
     <value>Skipping target "{0}" because it has no inputs.</value>
   </data>
-  <data name="SkipTargetBecauseNoInputsDetail" UESanitized="false" Visibility="Public">
+  <data name="SkipTargetBecauseNoInputsDetail" xml:space="preserve">
     <value>Though the target has declared its inputs, the input specification only references empty properties and/or empty item lists.</value>
   </data>
-  <data name="SkipTargetBecauseNoOutputs" UESanitized="false" Visibility="Public">
+  <data name="SkipTargetBecauseNoOutputs" xml:space="preserve">
     <value>Skipping target "{0}" because it has no outputs.</value>
   </data>
-  <data name="SkipTargetBecauseNoOutputsDetail" UESanitized="false" Visibility="Public">
+  <data name="SkipTargetBecauseNoOutputsDetail" xml:space="preserve">
     <value>Though the target has declared its outputs, the output specification only references empty properties and/or empty item lists.</value>
   </data>
-  <data name="SkipTargetBecauseOutputsUpToDate" UESanitized="false" Visibility="Public">
+  <data name="SkipTargetBecauseOutputsUpToDate" xml:space="preserve">
     <value>Skipping target "{0}" because all output files are up-to-date with respect to the input files.</value>
   </data>
-  <data name="SkipTargetUpToDateInputs" UESanitized="false" Visibility="Public">
+  <data name="SkipTargetUpToDateInputs" xml:space="preserve">
     <value>Input files: {0}</value>
     <comment>{0} is a semicolon-separated list of filenames.</comment>
   </data>
-  <data name="SkipTargetUpToDateOutputs" UESanitized="false" Visibility="Public">
+  <data name="SkipTargetUpToDateOutputs" xml:space="preserve">
     <value>Output files: {0}</value>
     <comment>{0} is a semicolon-separated list of filenames.</comment>
   </data>
-  <data name="AspNetCompiler.TargetingHigherFrameworksDefaultsTo40">
+  <data name="AspNetCompiler.TargetingHigherFrameworksDefaultsTo40" xml:space="preserve">
     <value>{0}: Defaulting .NET Framework v{1} to the .NET Framework v4.0 version of aspnet_compiler.exe. To change the version of the tool used, please set the "ToolPath" parameter with the correct path to the tool.</value>
   </data>
-  <data name="AspNetCompiler.InvalidTargetFrameworkMonikerNotDotNET">
+  <data name="AspNetCompiler.InvalidTargetFrameworkMonikerNotDotNET" xml:space="preserve">
     <value>MSB4203: {0}: Invalid TargetFrameworkMoniker {1}. The AspNetCompiler task only supports targeting the .NET Framework.</value>
     <comment>{StrBegin="MSB4203: "}</comment>
   </data>
-  <data name="AspNetCompiler.20NotInstalled">
+  <data name="AspNetCompiler.20NotInstalled" xml:space="preserve">
     <value>MSB4205: The website project in this solution is targeting the v2.0 runtime, but it is not installed.</value>
     <comment>{StrBegin="MSB4205: "}</comment>
   </data>
-  <data name="AspNetCompiler.UnsupportedMSBuildVersion">
+  <data name="AspNetCompiler.UnsupportedMSBuildVersion" xml:space="preserve">
     <value>MSB4249: Unable to build website project "{0}". The ASP.NET compiler is only available on the .NET Framework version of MSBuild.</value>
     <comment>{StrBegin="MSB4249: "}</comment>
   </data>
-  <data name="AspNetCompiler.InvalidTargetFrameworkMonikerFromException">
+  <data name="AspNetCompiler.InvalidTargetFrameworkMonikerFromException" xml:space="preserve">
     <value>MSB4204: {0}: Invalid TargetFrameworkMoniker {1}. {2}.</value>
     <comment>{StrBegin="MSB4204: "}</comment>
   </data>
-  <data name="OldWrapperGeneratedExplicitToolsVersion">
+  <data name="OldWrapperGeneratedExplicitToolsVersion" xml:space="preserve">
     <value>Using the MSBuild v3.5 solution wrapper generator because the tools version was set to {0}.</value>
   </data>
-  <data name="OldWrapperGeneratedOldSolutionVersion">
+  <data name="OldWrapperGeneratedOldSolutionVersion" xml:space="preserve">
     <value>Using the MSBuild v3.5 solution wrapper generator with a tools version of {0} because the solution file format was version {1} and no tools version was supplied.</value>
   </data>
-  <data name="SolutionBuildingSolutionConfiguration" UESanitized="false" Visibility="Public">
+  <data name="SolutionBuildingSolutionConfiguration" xml:space="preserve">
     <value>Building solution configuration "{0}".</value>
     <comment>UE: This is not an error, so doesn't need an error code.</comment>
   </data>
-  <data name="SolutionCircularDependencyError" UESanitized="false" Visibility="Public">
+  <data name="SolutionCircularDependencyError" xml:space="preserve">
     <value>MSB4160: A circular dependency involving project "{0}" has been detected.</value>
     <comment>{StrBegin="MSB4160: "}</comment>
   </data>
-  <data name="SolutionInvalidSolutionConfiguration" UESanitized="false" Visibility="Public">
+  <data name="SolutionInvalidSolutionConfiguration" xml:space="preserve">
     <value>MSB4126: The specified solution configuration "{0}" is invalid. Please specify a valid solution configuration using the Configuration and Platform properties (e.g. MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform="Any CPU") or leave those properties blank to use the default solution configuration.</value>
     <comment>{StrBegin="MSB4126: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseErrorReadingProject" UESanitized="false" Visibility="Public">
+  <data name="SolutionParseErrorReadingProject" xml:space="preserve">
     <value>MSB4046: Error reading project file "{0}": {1}</value>
     <comment>{StrBegin="MSB4046: "}</comment>
   </data>
-  <data name="SolutionParseInvalidProjectFileName" UESanitized="false" Visibility="Public">
+  <data name="SolutionParseInvalidProjectFileName" xml:space="preserve">
     <value>MSB4125: The project file name "{0}" is invalid. {1}</value>
     <comment>{StrBegin="MSB4125: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseProjectDepNotFoundError" UESanitized="false" Visibility="Public">
+  <data name="SolutionParseProjectDepNotFoundError" xml:space="preserve">
     <value>MSB4051: Project {0} is referencing a project with GUID {1}, but a project with this GUID was not found in the .SLN file.</value>
     <comment>{StrBegin="MSB4051: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseUnknownProjectType" UESanitized="false" Visibility="Public">
+  <data name="SolutionParseUnknownProjectType" xml:space="preserve">
     <value>MSB4078: The project file "{0}" is not supported by MSBuild and cannot be built.</value>
     <comment>{StrBegin="MSB4078: "}</comment>
   </data>
-  <data name="SolutionParseUpgradeNeeded" UESanitized="false" Visibility="Public">
+  <data name="SolutionParseUpgradeNeeded" xml:space="preserve">
     <value>MSB4054: The solution file must be opened in the Visual Studio IDE and converted to the latest version before it can be built by MSBuild.</value>
     <comment>{StrBegin="MSB4054: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionProjectConfigurationMissing" UESanitized="false" Visibility="Public">
+  <data name="SolutionProjectConfigurationMissing" xml:space="preserve">
     <value>MSB4121: The project configuration for project "{0}" was not specified in the solution file for the solution configuration "{1}".</value>
     <comment>{StrBegin="MSB4121: "}</comment>
   </data>
-  <data name="SolutionProjectSkippedForBuilding" UESanitized="false" Visibility="Public">
+  <data name="SolutionProjectSkippedForBuilding" xml:space="preserve">
     <value>The project "{0}" is not selected for building in solution configuration "{1}".</value>
     <comment>
       UE: This is not an error, so doesn't need an error code.
     </comment>
   </data>
-  <data name="SolutionScanProjectDependenciesFailed" UESanitized="false" Visibility="Public">
+  <data name="SolutionScanProjectDependenciesFailed" xml:space="preserve">
     <value>MSB4122: Scanning project dependencies for project "{0}" failed. {1}</value>
     <comment>{StrBegin="MSB4122: "}</comment>
   </data>
-  <data name="SolutionToolsVersionDoesNotSupportProjectToolsVersion" UESanitized="false" Visibility="Public">
+  <data name="SolutionToolsVersionDoesNotSupportProjectToolsVersion" xml:space="preserve">
     <value>MSB4149: The tools version "{0}" of the solution does not support building projects with a different tools version.</value>
     <comment>{StrBegin="MSB4149: "}</comment>
   </data>
-  <data name="SolutionVenusProjectNoClean" UESanitized="false" Visibility="Public">
+  <data name="SolutionVenusProjectNoClean" xml:space="preserve">
     <value>Web projects do not support the "Clean" target.  Continuing with remaining projects ...</value>
     <comment>UE: This is not an error, so doesn't need an error code.
     LOCALIZATION: Do not localize "Clean".</comment>
   </data>
-  <data name="SolutionVenusProjectNoPublish" UESanitized="false" Visibility="Public">
+  <data name="SolutionVenusProjectNoPublish" xml:space="preserve">
     <value>Web projects do not support the "Publish" target.  Continuing with remaining projects ...</value>
     <comment>UE: This is not an error, so doesn't need an error code.
     LOCALIZATION: Do not localize "Publish".</comment>
   </data>
-  <data name="SolutionVenusProjectSkipped" UESanitized="false" Visibility="Public">
+  <data name="SolutionVenusProjectSkipped" xml:space="preserve">
     <value>Skipping because the "$(AspNetConfiguration)" configuration is not supported for this web project.  You can use the AspNetConfiguration property to override the configuration used for building web projects, by adding /p:AspNetConfiguration=&lt;value&gt; to the command line. Currently web projects only support Debug and Release configurations.</value>
     <comment>
     UE: This is not an error, so doesn't need an error code.
     LOCALIZATION: Do NOT localize "AspNetConfiguration", "Debug", "Release".
     </comment>
   </data>
-  <data name="TargetAlreadyCompleteFailure" UESanitized="false" Visibility="Public">
+  <data name="TargetAlreadyCompleteFailure" xml:space="preserve">
     <value>Target "{0}" skipped. Previously built unsuccessfully.</value>
   </data>
-  <data name="TargetAlreadyCompleteSuccess" UESanitized="false" Visibility="Public">
+  <data name="TargetAlreadyCompleteSuccess" xml:space="preserve">
     <value>Target "{0}" skipped. Previously built successfully.</value>
   </data>
-  <data name="TargetConditionHasInvalidMetadataReference" UESanitized="false" Visibility="Public">
+  <data name="TargetConditionHasInvalidMetadataReference" xml:space="preserve">
     <value>MSB4116: The condition "{1}" on the "{0}" target has a reference to item metadata. References to item metadata are not allowed in target conditions unless they are part of an item transform.</value>
     <comment>{StrBegin="MSB4116: "}</comment>
   </data>
-  <data name="TargetDoesNotExist" UESanitized="false" Visibility="Public">
+  <data name="TargetDoesNotExist" xml:space="preserve">
     <value>MSB4057: The target "{0}" does not exist in the project.</value>
     <comment>{StrBegin="MSB4057: "}</comment>
   </data>
-  <data name="TargetDoesNotExistBeforeTargetMessage" UESanitized="false" Visibility="Public">
+  <data name="TargetDoesNotExistBeforeTargetMessage" xml:space="preserve">
     <value>The target "{0}" listed in a BeforeTargets attribute at "{1}" does not exist in the project, and will be ignored.</value>
   </data>
-  <data name="TargetDoesNotExistAfterTargetMessage" UESanitized="false" Visibility="Public">
+  <data name="TargetDoesNotExistAfterTargetMessage" xml:space="preserve">
     <value>The target "{0}" listed in an AfterTargets attribute at "{1}" does not exist in the project, and will be ignored.</value>
   </data>
-  <data name="TargetFinishedFailure" UESanitized="false" Visibility="Public">
+  <data name="TargetFinishedFailure" xml:space="preserve">
     <value>Done building target "{0}" in project "{1}" -- FAILED.</value>
   </data>
-  <data name="TargetFinishedSuccess" UESanitized="false" Visibility="Public">
+  <data name="TargetFinishedSuccess" xml:space="preserve">
     <value>Done building target "{0}" in project "{1}".</value>
   </data>
-  <data name="TargetMessageWithId" UESanitized="false" Visibility="Public">
+  <data name="TargetMessageWithId" xml:space="preserve">
     <value>{0}: (TargetId:{1})</value>
   </data>
-  <data name="TargetOutputItemsHeader" UESanitized="false" Visibility="Public">
+  <data name="TargetOutputItemsHeader" xml:space="preserve">
     <value>Target output items:</value>
   </data>
-  <data name="TargetOutputItem" UESanitized="false" Visibility="Public">
+  <data name="TargetOutputItem" xml:space="preserve">
     <value>    {0}</value>
   </data>
-  <data name="TargetInputsSpecifiedWithoutOutputs" UESanitized="false" Visibility="Public">
+  <data name="TargetInputsSpecifiedWithoutOutputs" xml:space="preserve">
     <value>MSB4058: The "{0}" target is missing its output specification. If a target declares inputs, it must also declare outputs.</value>
     <comment>{StrBegin="MSB4058: "}</comment>
   </data>
-  <data name="TargetPerformanceSummary" UESanitized="false" Visibility="Public">
+  <data name="TargetPerformanceSummary" xml:space="preserve">
     <value>Target Performance Summary:</value>
   </data>
-  <data name="TargetSkippedFalseCondition" UESanitized="false" Visibility="Public">
+  <data name="TargetSkippedFalseCondition" xml:space="preserve">
     <value>Target "{0}" skipped, due to false condition; ({1}) was evaluated as ({2}).</value>
   </data>
-  <data name="TargetSkippedWhenSkipNonexistentTargets" UESanitized="false" Visibility="Public">
+  <data name="TargetSkippedWhenSkipNonexistentTargets" xml:space="preserve">
     <value>Target "{0}" skipped. The target does not exist in the project and SkipNonexistentTargets is set to true.</value>
     <comment>LOCALIZATION: Do NOT localize "SkipNonexistentTargets" or "true".</comment>
   </data>
-
-  <!-- ====================================================================== -->
-
-  <!-- TargetStartedEventArgs: Project and File paths are different -->
-  <data name="TargetStartedFileProject" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedFileProject" xml:space="preserve">
     <value>Target "{0}" in file "{1}" from project "{2}":</value>
   </data>
-  <data name="TargetStartedFileProjectEntry" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedFileProjectEntry" xml:space="preserve">
     <value>Target "{0}" in file "{1}" from project "{2}" (entry point):</value>
   </data>
-  <data name="TargetStartedFileProjectDepends" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedFileProjectDepends" xml:space="preserve">
     <value>Target "{0}" in file "{1}" from project "{2}" (target "{3}" depends on it):</value>
   </data>
-  <data name="TargetStartedFileProjectBefore" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedFileProjectBefore" xml:space="preserve">
     <value>Target "{0}" in file "{1}" from project "{2}" (designated to run before target "{3}"):</value>
   </data>
-  <data name="TargetStartedFileProjectAfter" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedFileProjectAfter" xml:space="preserve">
     <value>Target "{0}" in file "{1}" from project "{2}" (designated to run after target "{3}"):</value>
   </data>
-
-  <!-- TargetStartedEventArgs: Project and File paths are the same -->
-  <data name="TargetStarted" UESanitized="false" Visibility="Public">
+  <data name="TargetStarted" xml:space="preserve">
     <value>Target "{0}" in project "{1}":</value>
   </data>
-  <data name="TargetStartedProjectEntry" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedProjectEntry" xml:space="preserve">
     <value>Target "{0}" in project "{1}" (entry point):</value>
   </data>
-  <data name="TargetStartedProjectDepends" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedProjectDepends" xml:space="preserve">
     <value>Target "{0}" in project "{1}" (target "{2}" depends on it):</value>
   </data>
-  <data name="TargetStartedProjectBefore" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedProjectBefore" xml:space="preserve">
     <value>Target "{0}" in project "{1}" (designated to run before target "{2}"):</value>
   </data>
-  <data name="TargetStartedProjectAfter" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedProjectAfter" xml:space="preserve">
     <value>Target "{0}" in project "{1}" (designated to run after target "{2}"):</value>
   </data>
-
-  <!-- Serial logger low verbosity -->
-  <data name="TargetStartedPrefix" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedPrefix" xml:space="preserve">
     <value>Target {0}:</value>
   </data>
-
-  <!-- Serial logger high verbosity -->
-  <data name="TargetStartedFromFile" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedFromFile" xml:space="preserve">
     <value>Target "{0}" in file "{1}":</value>
   </data>
-
-  <!-- Parallel logger low verbosity -->
-  <data name="TargetStartedPrefixInProject" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedPrefixInProject" xml:space="preserve">
     <value>Target {0} from project "{1}":</value>
   </data>
-
-  <!-- Parallel logger high verbosity -->
-  <data name="TargetStartedFromFileInProject" UESanitized="false" Visibility="Public">
+  <data name="TargetStartedFromFileInProject" xml:space="preserve">
     <value>Target "{0}" in file "{1}" from project "{2}":</value>
   </data>
-
-  <!-- Log messages for item/property group -->
-  <data name="ItemGroupIncludeLogMessagePrefix" UESanitized="false" Visibility="Public">
+  <data name="ItemGroupIncludeLogMessagePrefix" xml:space="preserve">
     <value>Added Item(s): </value>
   </data>
-  <data name="ItemGroupRemoveLogMessage" UESanitized="false" Visibility="Public">
+  <data name="ItemGroupRemoveLogMessage" xml:space="preserve">
     <value>Removed Item(s): </value>
   </data>
-  <data name="PropertyGroupLogMessage" UESanitized="false" Visibility="Public">
+  <data name="PropertyGroupLogMessage" xml:space="preserve">
     <value>Set Property: {0}={1}</value>
   </data>
-
-  <!-- Log messages for target outputs -->
-  <data name="OutputItemParameterMessagePrefix" UESanitized="false" Visibility="Public">
+  <data name="OutputItemParameterMessagePrefix" xml:space="preserve">
     <value>Output Item(s): </value>
   </data>
-  <data name="OutputPropertyLogMessage" UESanitized="false" Visibility="Public">
+  <data name="OutputPropertyLogMessage" xml:space="preserve">
     <value>Output Property: {0}={1}</value>
   </data>
-
-  <!-- ====================================================================== -->
-
-  <data name="TaskContinuedDueToContinueOnError" UESanitized="false" Visibility="Public">
-      <value>Build continuing because "{0}" on the task "{1}" is set to "{2}".</value>
+  <data name="TaskContinuedDueToContinueOnError" xml:space="preserve">
+    <value>Build continuing because "{0}" on the task "{1}" is set to "{2}".</value>
   </data>
-  <data name="TaskDeclarationOrUsageError" UESanitized="false" Visibility="Public">
+  <data name="TaskDeclarationOrUsageError" xml:space="preserve">
     <value>MSB4060: The "{0}" task has been declared or used incorrectly, or failed during construction. Check the spelling of the task name and the assembly name.</value>
     <comment>{StrBegin="MSB4060: "}</comment>
   </data>
-  <data name="TaskExistsButHasMismatchedIdentityError">
+  <data name="TaskExistsButHasMismatchedIdentityError" xml:space="preserve">
     <value>MSB4214: The "{0}" task has been defined, but cannot be used due to the fact that the identity defined in the UsingTask declaration (Runtime="{1}", Architecture="{2}") does not match the identity specified by the task invocation (MSBuildRuntime="{3}", MSBuildArchitecture="{4}").</value>
     <comment>{StrBegin="MSB4214: "}LOCALIZATION: Runtime, Architecture, MSBuildRuntime, and MSBuildArchitecture should not be localized.</comment>
   </data>
-  <data name="TaskFinishedFailure" UESanitized="false" Visibility="Public">
+  <data name="TaskFinishedFailure" xml:space="preserve">
     <value>Done executing task "{0}" -- FAILED.</value>
   </data>
-  <data name="TaskFinishedSuccess" UESanitized="false" Visibility="Public">
+  <data name="TaskFinishedSuccess" xml:space="preserve">
     <value>Done executing task "{0}".</value>
   </data>
-  <data name="TaskMessageWithId" UESanitized="false" Visibility="Public">
+  <data name="TaskMessageWithId" xml:space="preserve">
     <value>{0} (TaskId:{1})</value>
   </data>
-  <data name="TaskFound" UESanitized="false" Visibility="Public">
+  <data name="TaskFound" xml:space="preserve">
     <value>Using "{0}" task from assembly "{1}".</value>
     <comment>UE: This informational message helps users determine which assemblies their tasks were loaded from.</comment>
   </data>
-  <data name="TaskFoundFromFactory" UESanitized="false" Visibility="Public">
+  <data name="TaskFoundFromFactory" xml:space="preserve">
     <value>Using "{0}" task from the task factory "{1}".</value>
     <comment>UE: This informational message helps users determine which assemblies their tasks were loaded from.</comment>
   </data>
-  <data name="TaskNeedsSTA" UESanitized="false" Visibility="Public">
+  <data name="TaskNeedsSTA" xml:space="preserve">
     <value>Task "{0}" will be run in a single-threaded apartment thread.</value>
     <comment>UE: This informational message helps users determine if their tasks are run in the STA or MTA.</comment>
   </data>
-  <data name="TaskInstantiationFailureError" UESanitized="false" Visibility="Public">
+  <data name="TaskInstantiationFailureError" xml:space="preserve">
     <value>MSB4061: The "{0}" task could not be instantiated from "{1}". {2}</value>
     <comment>{StrBegin="MSB4061: "}LOCALIZATION: "{2}" is a localized message from a CLR/FX exception.</comment>
   </data>
-  <data name="TaskInstantiationFailureErrorInvalidCast" UESanitized="false" Visibility="Public">
+  <data name="TaskInstantiationFailureErrorInvalidCast" xml:space="preserve">
     <value>MSB4127: The "{0}" task could not be instantiated from the assembly "{1}". Please verify the task assembly has been built using the same version of the Microsoft.Build.Framework assembly as the one installed on your computer and that your host application is not missing a binding redirect for Microsoft.Build.Framework. {2}</value>
     <comment>{StrBegin="MSB4127: "}UE: This message is a specialized version of the TaskInstantiationFailureError message and can probably reuse some of its docs.
       LOCALIZATION: "{2}" is a localized message from a CLR/FX exception. Also, Microsoft.Build.Framework should not be localized</comment>
   </data>
-  <data name="LoggerInstantiationFailureErrorInvalidCast" UESanitized="false" Visibility="Public">
+  <data name="LoggerInstantiationFailureErrorInvalidCast" xml:space="preserve">
     <value>MSB4180: The "{0}" logger could not be instantiated from the assembly "{1}". Please verify the logger assembly has been built using the same version of the Microsoft.Build.Framework assembly as the one installed on your computer and that your host application is not missing a binding redirect for Microsoft.Build.Framework. {2}</value>
     <comment>
       {StrBegin="MSB4180: "}
       LOCALIZATION: "{2}" is a localized message from a CLR/FX exception. Also, Microsoft.Build.Framework should not be localized
     </comment>
   </data>
-  <data name="TaskReturnedFalseButDidNotLogError">
+  <data name="TaskReturnedFalseButDidNotLogError" xml:space="preserve">
     <value>MSB4132: The "{0}" task returned false but did not log an error.</value>
     <comment>{StrBegin="MSB4132: "}</comment>
   </data>
-  <data name="LoggerCreationError" UESanitized="true" Visibility="Public">
+  <data name="LoggerCreationError" xml:space="preserve">
     <value>MSB1021: Cannot create an instance of the logger. {0}</value>
     <comment>{StrBegin="MSB1021: "}
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
       LOCALIZATION: The prefix "MSBxxxx: " should not be localized. {0} contains a message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.</comment>
   </data>
-  <data name="LoggerNotFoundError" UESanitized="false" Visibility="Public">
+  <data name="LoggerNotFoundError" xml:space="preserve">
     <value>MSB1020: The logger was not found. Check the following: 1.) The logger name specified is the same as the name of the logger class. 2.) The logger class is "public" and implements the Microsoft.Build.Framework.ILogger interface. 3.) The path to the logger assembly is correct, or the logger can be loaded using only the assembly name provided.</value>
     <comment>
       {StrBegin="MSB1020: "}UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
@@ -1083,602 +1121,566 @@
       LOCALIZATION: The prefix "MSBxxxx: " should not be localized.
     </comment>
   </data>
-  <data name="TaskFactoryInstanceCreationError" UESanitized="false" Visibility="Public">
+  <data name="TaskFactoryInstanceCreationError" xml:space="preserve">
     <value>MSB4179: The task factory instance for the "{0}" task could not be instantiated from the task factory "{1}". {2}</value>
     <comment>{StrBegin="MSB4179: "}
       LOCALIZATION: "{2}" is a localized message from a CLR/FX exception.</comment>
   </data>
-  <data name="TaskFactoryInstantiationFailureErrorInvalidCast" UESanitized="false" Visibility="Public">
+  <data name="TaskFactoryInstantiationFailureErrorInvalidCast" xml:space="preserve">
     <value>MSB4176: The "{0}" task factory could not be instantiated from the assembly "{1}". Please verify the task assembly has been built using the same version of the Microsoft.Build.Framework assembly as the one installed on your computer and that your host application is not missing a binding redirect for Microsoft.Build.Framework. {2}</value>
     <comment>{StrBegin="MSB4176: "}UE: This message is a specialized version of the TaskFactoryInstantiationFailureError message and can probably reuse some of its docs.
       LOCALIZATION: "{2}" is a localized message from a CLR/FX exception. Also, Microsoft.Build.Framework should not be localized</comment>
   </data>
-  <data name="TaskFactoryWillIgnoreTaskFactoryParameters" UESanitized="false" Visibility="Public">
+  <data name="TaskFactoryWillIgnoreTaskFactoryParameters" xml:space="preserve">
     <value>MSB4219: The TaskFactory "{0}" does not implement ITaskFactory2. The attributes "{1}" and/or "{2}" on the UsingTask declaration for task "{3}" will be be ignored.</value>
     <comment>{StrBegin="MSB4219: "}
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="TaskFactoryTaskTypeIsNotSet" UESanitized="false" Visibility="Public">
+  <data name="TaskFactoryTaskTypeIsNotSet" xml:space="preserve">
     <value>The task factory must return a value for the "TaskType" property.</value>
   </data>
-  <data name="TaskLoadFailure" UESanitized="false" Visibility="Public">
+  <data name="TaskLoadFailure" xml:space="preserve">
     <value>MSB4062: The "{0}" task could not be loaded from the assembly {1}. {2} Confirm that the &lt;UsingTask&gt; declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.</value>
     <comment>{StrBegin="MSB4062: "}UE: This message is shown when a task cannot be loaded from its assembly for various reasons e.g. corrupt assembly,
     invalid task declaration, disk error, etc. "{2}" contains a message explaining what happened.
     LOCALIZATION: "{2}" is a message from the CLR loader and is already localized. Also, &lt;UsingTask&gt; should not be localized.</comment>
   </data>
-  <data name="TaskLoadFailureInvalidTaskHostFactoryParameter">
+  <data name="TaskLoadFailureInvalidTaskHostFactoryParameter" xml:space="preserve">
     <value>MSB4215: The "{0}" task could not be loaded. "{1}" is an invalid value for the task host parameter "{2}". Valid values are:  "{3}", "{4}", "{5}", and "{6}"; not specifying a value is also valid.</value>
     <comment>{StrBegin="MSB4215: "}</comment>
   </data>
-  <data name="InvalidTaskHostFactoryParameter">
+  <data name="InvalidTaskHostFactoryParameter" xml:space="preserve">
     <value>"{0}" is an invalid value for the task host parameter "{1}". Valid values are: "{2}", "{3}", "{4}", and "{5}"; not specifying a value is also valid.</value>
   </data>
-  <data name="TaskHostAcquireFailed">
+  <data name="TaskHostAcquireFailed" xml:space="preserve">
     <value>MSB4216: Could not run the "{0}" task because MSBuild could not create or connect to a task host with runtime "{1}" and architecture "{2}".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable "{3}" exists and can be run.</value>
     <comment>{StrBegin="MSB4216: "}</comment>
   </data>
-  <data name="TaskHostNodeFailedToLaunch">
+  <data name="TaskHostNodeFailedToLaunch" xml:space="preserve">
     <value>MSB4221: Could not run the "{0}" task because MSBuild could not create or connect to a task host with runtime "{1}" and architecture "{2}".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable "{3}" exists and can be run. Error {4} {5}.</value>
     <comment>{StrBegin="MSB4221: "}</comment>
   </data>
-  <data name="TaskHostNodeFailedToLaunchErrorCodeNet35NotInstalled" UESanitized="false" Visibility="Public">
+  <data name="TaskHostNodeFailedToLaunchErrorCodeNet35NotInstalled" xml:space="preserve">
     <value>A task requested launch of the .NET 3.5 version of the MSBuild task host, but .NET 3.5 is not installed on this machine so the task host could not be launched.  To fix this error, please either install .NET 3.5 or retarget your project.</value>
   </data>
-  <data name="TaskHostExitedPrematurely" UESanitized="false" Visibility="Public">
+  <data name="TaskHostExitedPrematurely" xml:space="preserve">
     <value>MSB4217: Task host node exited prematurely. Diagnostic information may be found in files in the temporary files directory named MSBuild_*.failure.txt. {0}</value>
     <comment>{StrBegin="MSB4217: "}</comment>
   </data>
-  <data name="TaskParametersError" UESanitized="false" Visibility="Public">
+  <data name="TaskParametersError" xml:space="preserve">
     <value>MSB4063: The "{0}" task could not be initialized with its input parameters. {1}</value>
     <comment>{StrBegin="MSB4063: "}</comment>
   </data>
-  <data name="TaskParameterPrefix" UESanitized="false" Visibility="Public">
+  <data name="TaskParameterPrefix" xml:space="preserve">
     <value>Task Parameter:</value>
   </data>
-  <data name="TaskPerformanceSummary" UESanitized="false" Visibility="Public">
+  <data name="TaskPerformanceSummary" xml:space="preserve">
     <value>Task Performance Summary:</value>
   </data>
-  <data name="ProjectEvaluationPerformanceSummary" UESanitized="false" Visibility="Public">
+  <data name="ProjectEvaluationPerformanceSummary" xml:space="preserve">
     <value>Project Evaluation Performance Summary:</value>
   </data>
-  <data name="TaskSkippedFalseCondition" UESanitized="false" Visibility="Public">
+  <data name="TaskSkippedFalseCondition" xml:space="preserve">
     <value>Task "{0}" skipped, due to false condition; ({1}) was evaluated as ({2}).</value>
   </data>
-  <data name="TaskStarted" UESanitized="false" Visibility="Public">
+  <data name="TaskStarted" xml:space="preserve">
     <value>Task "{0}"</value>
   </data>
-  <data name="TimeElapsed" UESanitized="false" Visibility="Public">
+  <data name="TimeElapsed" xml:space="preserve">
     <value>Time Elapsed {0}</value>
   </data>
-  <data name="ToolsVersionInEffectForBuild" UESanitized="false" Visibility="Public">
+  <data name="ToolsVersionInEffectForBuild" xml:space="preserve">
     <value>Building with tools version "{0}".</value>
   </data>
-  <data name="UsingDifferentToolsVersionFromProjectFile" UESanitized="false" Visibility="Public">
+  <data name="UsingDifferentToolsVersionFromProjectFile" xml:space="preserve">
     <value>Project file contains ToolsVersion="{0}". This toolset may be unknown or missing, in which case you may be able to resolve this by installing the appropriate version of MSBuild, or the build may have been forced to a particular ToolsVersion for policy reasons. Treating the project as if it had ToolsVersion="{1}". For more information, please see http://go.microsoft.com/fwlink/?LinkId=293424.</value>
   </data>
-  <data name="DeferredMessages" UESanitized="false" Visibility="Public">
+  <data name="DeferredMessages" xml:space="preserve">
     <value>Deferred Messages</value>
   </data>
-  <data name="UnexpectedCharacterInCondition" UESanitized="false" Visibility="Public">
+  <data name="UnexpectedCharacterInCondition" xml:space="preserve">
     <value>MSB4090: Found an unexpected character '{2}' at position {1} in condition "{0}".</value>
     <comment>{StrBegin="MSB4090: "}</comment>
   </data>
-  <data name="UndefinedFunctionCall" UESanitized="false" Visibility="Public">
+  <data name="UndefinedFunctionCall" xml:space="preserve">
     <value>MSB4091: Found a call to an undefined function "{1}" in condition "{0}".</value>
     <comment>{StrBegin="MSB4091: "}</comment>
   </data>
-  <data name="UnexpectedTaskAttribute" UESanitized="false" Visibility="Public">
+  <data name="UnexpectedTaskAttribute" xml:space="preserve">
     <value>MSB4064: The "{0}" parameter is not supported by the "{1}" task. Verify the parameter exists on the task, and it is a settable public instance property.</value>
     <comment>{StrBegin="MSB4064: "}</comment>
   </data>
-  <data name="UnexpectedTaskOutputAttribute" UESanitized="false" Visibility="Public">
+  <data name="UnexpectedTaskOutputAttribute" xml:space="preserve">
     <value>MSB4131: The "{0}" parameter is not supported by the "{1}" task. Verify the parameter exists on the task, and it is a gettable public instance property.</value>
     <comment>{StrBegin="MSB4131: "}</comment>
   </data>
-  <data name="UnexpectedTokenInCondition" UESanitized="false" Visibility="Public">
+  <data name="UnexpectedTokenInCondition" xml:space="preserve">
     <value>MSB4092: An unexpected token "{1}" was found at character position {2} in condition "{0}".</value>
     <comment>{StrBegin="MSB4092: "}</comment>
   </data>
-  <data name="UnmarkedOutputTaskParameter" UESanitized="false" Visibility="Public">
+  <data name="UnmarkedOutputTaskParameter" xml:space="preserve">
     <value>MSB4065: The "{0}" parameter is not marked for output by the "{1}" task.</value>
     <comment>{StrBegin="MSB4065: "}</comment>
   </data>
-  <data name="UnrecognizedAttribute" UESanitized="false" Visibility="Public">
+  <data name="UnrecognizedAttribute" xml:space="preserve">
     <value>MSB4066: The attribute "{0}" in element &lt;{1}&gt; is unrecognized.</value>
     <comment>{StrBegin="MSB4066: "}</comment>
   </data>
-  <data name="UnrecognizedChildElement" UESanitized="false" Visibility="Public">
+  <data name="UnrecognizedChildElement" xml:space="preserve">
     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>
     <comment>{StrBegin="MSB4067: "}</comment>
   </data>
-  <data name="InvalidChildElementDueToDuplication" UESanitized="false" Visibility="Public">
+  <data name="InvalidChildElementDueToDuplication" xml:space="preserve">
     <value>MSB4173: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is invalid because a child element with that name already exists</value>
     <comment>{StrBegin="MSB4173: "}</comment>
   </data>
-  <data name="InvalidAttributeDueToDuplication" UESanitized="false" Visibility="Public">
+  <data name="InvalidAttributeDueToDuplication" xml:space="preserve">
     <value>MSB4227: The attribute "{0}" on element &lt;{1}&gt; is invalid because an attribute with that name already exists</value>
     <comment>{StrBegin="MSB4227: "}</comment>
   </data>
-  <data name="InvalidMetadataAsAttribute" UESanitized="false" Visibility="Public">
+  <data name="InvalidMetadataAsAttribute" xml:space="preserve">
     <value>MSB4228: The name "{0}" is not valid for metadata expressed as an attribute (on element &lt;{1}&gt;)</value>
     <comment>{StrBegin="MSB4228: "}</comment>
   </data>
-  <data name="InvalidSdkFormat" UESanitized="false" Visibility="Public">
+  <data name="InvalidSdkFormat" xml:space="preserve">
     <value>MSB4229: The value "{0}" is not valid for an Sdk specification. The attribute should be a semicolon-delimited list of Sdk-name/minimum-version pairs, separated by a forward slash.</value>
     <comment>{StrBegin="MSB4229: "}</comment>
   </data>
-  <data name="CouldNotResolveSdk" UESanitized="false" Visibility="Public">
+  <data name="CouldNotResolveSdk" xml:space="preserve">
     <value>MSB4236: The SDK '{0}' specified could not be found.</value>
     <comment>{StrBegin="MSB4236: "}</comment>
   </data>
-  <data name="CouldNotLoadSdkResolver" UESanitized="false" Visibility="Public">
+  <data name="CouldNotLoadSdkResolver" xml:space="preserve">
     <value>MSB4237: The SDK resolver type "{0}" failed to load. {1}</value>
     <comment>{StrBegin="MSB4237: "}</comment>
   </data>
-  <data name="CouldNotLoadSdkResolverAssembly" UESanitized="false" Visibility="Public">
+  <data name="CouldNotLoadSdkResolverAssembly" xml:space="preserve">
     <value>MSB4244: The SDK resolver assembly "{0}" could not be loaded. {1}</value>
     <comment>{StrBegin="MSB4244: "}</comment>
   </data>
-  <data name="CouldNotRunSdkResolver" UESanitized="false" Visibility="Public">
+  <data name="CouldNotRunSdkResolver" xml:space="preserve">
     <value>MSB4242: The SDK resolver "{0}" failed to run. {1}</value>
     <comment>{StrBegin="MSB4242: "}</comment>
   </data>
-  <data name="CouldNotRunNuGetSdkResolver" UESanitized="false" Visibility="Public">
+  <data name="CouldNotRunNuGetSdkResolver" xml:space="preserve">
     <value>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</value>
     <comment>{StrBegin="MSB4243: "}</comment>
   </data>
-  <data name="SdkResolverManifestInvalid" UESanitized="false" Visibility="Public">
+  <data name="SdkResolverManifestInvalid" xml:space="preserve">
     <value>MSB4245: SDK Resolver manifest file is invalid. This may indicate a corrupt or invalid installation of MSBuild. Manifest file path '{0}'. Message: {1}</value>
     <comment>{StrBegin="MSB4245: "}</comment>
   </data>
-  <data name="SdkResolverNoDllOrManifest" UESanitized="false" Visibility="Public">
+  <data name="SdkResolverNoDllOrManifest" xml:space="preserve">
     <value>MSB4246: SDK Resolver folder exists but without an SDK Resolver DLL or manifest file. This may indicate a corrupt or invalid installation of MSBuild. SDK resolver path: {0}</value>
     <comment>{StrBegin="MSB4246: "}</comment>
   </data>
-  <data name="SdkResolverDllInManifestMissing" UESanitized="false" Visibility="Public">
+  <data name="SdkResolverDllInManifestMissing" xml:space="preserve">
     <value>MSB4247: Could not load SDK Resolver. A manifest file exists, but the path to the SDK Resolver DLL file could not be found. Manifest file path '{0}'. SDK resolver path: {1}</value>
     <comment>{StrBegin="MSB4247: "}</comment>
   </data>
-  <data name="InvalidSdkElementName" UESanitized="false" Visibility="Public">
+  <data name="InvalidSdkElementName" xml:space="preserve">
     <value>MSB4238: The name "{0}" is not a valid SDK name.</value>
     <comment>{StrBegin="MSB4238: "}</comment>
   </data>
-  <data name="UnrecognizedParentElement" UESanitized="true" Visibility="Public">
+  <data name="UnrecognizedParentElement" xml:space="preserve">
     <value>MSB4189: &lt;{1}&gt; is not a valid child of the &lt;{0}&gt; element.</value>
     <comment>{StrBegin="MSB4189: "}</comment>
   </data>
-  <data name="UnrecognizedElement" UESanitized="false" Visibility="Public">
+  <data name="UnrecognizedElement" xml:space="preserve">
     <value>MSB4068: The element &lt;{0}&gt; is unrecognized, or not supported in this context.</value>
     <comment>{StrBegin="MSB4068: "}</comment>
   </data>
-  <data name="UnsupportedLogFileFormat" UESanitized="false" Visibility="Public">
+  <data name="UnsupportedLogFileFormat" xml:space="preserve">
     <value>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</value>
     <comment>{StrBegin="MSB4235: "}</comment>
   </data>
-  <data name="UnsupportedTaskParameterTypeError" UESanitized="false" Visibility="Public">
+  <data name="UnsupportedTaskParameterTypeError" xml:space="preserve">
     <value>MSB4069: The "{0}" type of the "{1}" parameter of the "{2}" task is not supported by MSBuild.</value>
     <comment>{StrBegin="MSB4069: "}LOCALIZATION: "MSBuild" should not be localized.</comment>
   </data>
-  <data name="UsingTaskAssemblySpecification" UESanitized="false" Visibility="Public">
+  <data name="UsingTaskAssemblySpecification" xml:space="preserve">
     <value>MSB4072: A &lt;{0}&gt; element must contain either the "{1}" attribute or the "{2}" attribute (but not both).</value>
     <comment>{StrBegin="MSB4072: "}</comment>
   </data>
-  <data name="WarningCount" UESanitized="false" Visibility="Public">
+  <data name="WarningCount" xml:space="preserve">
     <value>{0} Warning(s)</value>
   </data>
-  <data name="WhenNotAllowedAfterOtherwise" UESanitized="false" Visibility="Public">
+  <data name="WhenNotAllowedAfterOtherwise" xml:space="preserve">
     <value>MSB4084: A &lt;When&gt; element may not follow an &lt;Otherwise&gt; element in a &lt;Choose&gt;.</value>
     <comment>{StrBegin="MSB4084: "}</comment>
   </data>
-  <data name="MustCallInitializeBeforeApplyParameter" UESanitized="false" Visibility="Public">
+  <data name="MustCallInitializeBeforeApplyParameter" xml:space="preserve">
     <value>MSB4150: Must initialize the console logger using the initialize method before using ApplyParameter</value>
     <comment>{StrBegin="MSB4150: "}</comment>
   </data>
-  <data name="InvalidHostObjectOnOutOfProcProject" UESanitized="false" Visibility="Public">
+  <data name="InvalidHostObjectOnOutOfProcProject" xml:space="preserve">
     <value>MSB4206: A non-null host object cannot be specified for a project which has an affinity set to out-of-process.</value>
     <comment>{StrBegin="MSB4206: "}</comment>
   </data>
-  <data name="InvalidAffinityForProjectWithHostObject" UESanitized="false" Visibility="Public">
+  <data name="InvalidAffinityForProjectWithHostObject" xml:space="preserve">
     <value>MSB4207: Only an in-process affinity may be specified for projects which have registered host objects.</value>
     <comment>{StrBegin="MSB4207: "}</comment>
   </data>
-  <data name="ProjectInstanceConflictsWithAffinity" UESanitized="false" Visibility="Public">
+  <data name="ProjectInstanceConflictsWithAffinity" xml:space="preserve">
     <value>MSB4209: The specified project instance conflicts with the affinity specified in the HostServices.</value>
     <comment>{StrBegin="MSB4209: "}</comment>
   </data>
-  <data name="AffinityConflict" UESanitized="false" Visibility="Public">
+  <data name="AffinityConflict" xml:space="preserve">
     <value>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for this project.</value>
     <comment>{StrBegin="MSB4213: "}</comment>
   </data>
-  <data name="UnableToCreateNode" UESanitized="false" Visibility="Public">
+  <data name="UnableToCreateNode" xml:space="preserve">
     <value>MSB4223: A node of the required type {0} could not be created.</value>
     <comment>{StrBegin="MSB4223: "}</comment>
   </data>
-  <data name="KeepAndRemoveMetadataMutuallyExclusive" UESanitized="false" Visibility="Public">
+  <data name="KeepAndRemoveMetadataMutuallyExclusive" xml:space="preserve">
     <value>MSB4224: KeepMetadata and RemoveMetadata are mutually exclusive.</value>
     <comment>{StrBegin="MSB4224: "}</comment>
   </data>
-  <data name="ProjectStackWithTargetNames" UESanitized="false" Visibility="Public">
-    <value>"{0}" ({1} target) ({2}) -></value>
+  <data name="ProjectStackWithTargetNames" xml:space="preserve">
+    <value>"{0}" ({1} target) ({2}) -&gt;</value>
   </data>
-  <data name="ProjectStackWithDefaultTargets" UESanitized="false" Visibility="Public">
-    <value>"{0}" (default target) ({1}) -></value>
+  <data name="ProjectStackWithDefaultTargets" xml:space="preserve">
+    <value>"{0}" (default target) ({1}) -&gt;</value>
   </data>
-  <data name="BuildEventContext" UESanitized="false" Visibility="Public">
+  <data name="BuildEventContext" xml:space="preserve">
     <value>{0} {1,5}</value>
   </data>
-  <data name="ProjectStartedTopLevelProjectWithTargetNames" UESanitized="false" Visibility="Public">
+  <data name="ProjectStartedTopLevelProjectWithTargetNames" xml:space="preserve">
     <value>Project "{0}" on node {1} ({2} target(s)).</value>
   </data>
-  <data name="ProjectStartedTopLevelProjectWithDefaultTargets" UESanitized="false" Visibility="Public">
+  <data name="ProjectStartedTopLevelProjectWithDefaultTargets" xml:space="preserve">
     <value>Project "{0}" on node {1} (default targets).</value>
   </data>
-  <data name="ProjectStartedWithTargetsMultiProc" UESanitized="false" Visibility="Public">
+  <data name="ProjectStartedWithTargetsMultiProc" xml:space="preserve">
     <value>Project "{0}" ({1}) is building "{2}" ({3}) on node {4} ({5} target(s)).</value>
   </data>
-  <data name="ProjectStartedWithDefaultTargetsMultiProc" UESanitized="false" Visibility="Public">
+  <data name="ProjectStartedWithDefaultTargetsMultiProc" xml:space="preserve">
     <value>Project "{0}" ({1}) is building "{2}" ({3}) on node {4} (default targets).</value>
   </data>
-  <data name="ErrorWarningInTarget" UESanitized="false" Visibility="Public">
-    <value>({0} target) -> </value>
+  <data name="ErrorWarningInTarget" xml:space="preserve">
+    <value>({0} target) -&gt; </value>
   </data>
-  <data name="PropertyOutputOverridden" UESanitized="false" Visibility="Public">
+  <data name="PropertyOutputOverridden" xml:space="preserve">
     <value>The property "{0}" with value "{1}" is being overridden by another batch. The property is now: "{2}"</value>
   </data>
-  <data name="logfilePathNullOrEmpty" UESanitized="false" Visibility="Public">
+  <data name="logfilePathNullOrEmpty" xml:space="preserve">
     <value>The log file path cannot be null or empty.</value>
   </data>
-  <data name="DefaultTargets" UESanitized="false" Visibility="Public">
+  <data name="DefaultTargets" xml:space="preserve">
     <value>[default]</value>
   </data>
-  <data name="CouldNotFindFactory">
+  <data name="CouldNotFindFactory" xml:space="preserve">
     <value>MSB4174: The task factory "{0}" could not be found in the assembly "{1}".</value>
     <comment>{StrBegin="MSB4174: "}</comment>
   </data>
-  <data name="TaskFactoryLoadFailure">
+  <data name="TaskFactoryLoadFailure" xml:space="preserve">
     <value>MSB4175: The task factory "{0}" could not be loaded from the assembly "{1}". {2}</value>
     <comment>{StrBegin="MSB4175: "}</comment>
   </data>
-  <data name="UnableToCancel">
+  <data name="UnableToCancel" xml:space="preserve">
     <value>MSB4201: The cancel operation was unable to complete because the currently executing task is not responding.</value>
     <comment>{StrBegin="MSB4201: "}</comment>
   </data>
-  <data name="UnableToCancelTask">
+  <data name="UnableToCancelTask" xml:space="preserve">
     <value>MSB4220: Waiting for the currently executing task "{0}" to cancel.</value>
     <comment>{StrBegin="MSB4220: "}</comment>
   </data>
-  <data name="MainThreadInUse">
+  <data name="MainThreadInUse" xml:space="preserve">
     <value>MSB4202: The request to build submission {0} cannot proceed because submission {1} is already using the main thread.</value>
     <comment>{StrBegin="MSB4202: "}</comment>
   </data>
-  <data name="ProjectAlreadyBuilding">
+  <data name="ProjectAlreadyBuilding" xml:space="preserve">
     <value>The request to build this submission cannot proceed because a project with the same configuration is already building.</value>
   </data>
-  <data name="InitializingTaskFactory">
+  <data name="InitializingTaskFactory" xml:space="preserve">
     <value>Initializing task factory "{0}" from assembly "{1}".</value>
   </data>
-  <data name="InitializingTaskHostFactory">
+  <data name="InitializingTaskHostFactory" xml:space="preserve">
     <value>Initializing task host factory for task "{0}" from assembly "{1}"</value>
   </data>
-  <data name="CantWriteBuildPlan">
+  <data name="CantWriteBuildPlan" xml:space="preserve">
     <value>The build plan could not be written.  Check that the build process has permissions to write to {0}.</value>
   </data>
-  <data name="CacheFileInaccessible">
+  <data name="CacheFileInaccessible" xml:space="preserve">
     <value>The MSBuild cache file "{0}" is inaccessible.  Ensure you have access to the directory and that this file is not deleted during the build.  {1}</value>
     <comment>
       LOCALIZATION: "{1}" is a localized message from a CLR/FX exception.
     </comment>
   </data>
-  <data name="CantReadBuildPlan">
+  <data name="CantReadBuildPlan" xml:space="preserve">
     <value>The build plan could not be read.  Check that the build process has permissions to read {0}.</value>
   </data>
-  <data name="BuildPlanCorrupt">
+  <data name="BuildPlanCorrupt" xml:space="preserve">
     <value>The build plan at {0} appears to be corrupt and cannot be used.</value>
   </data>
-  <data name="DetailedSummaryHeader">
+  <data name="DetailedSummaryHeader" xml:space="preserve">
     <value>
 Detailed Build Summary
 ======================
     </value>
   </data>
-  <data name="BuildHierarchyHeader">
+  <data name="BuildHierarchyHeader" xml:space="preserve">
     <value>
 ============================== Build Hierarchy (IDs represent configurations) =====================================================
 Id                  : Exclusive Time   Total Time   Path (Targets)
 -----------------------------------------------------------------------------------------------------------------------------------</value>
   </data>
-  <data name="BuildHierarchyEntry">
+  <data name="BuildHierarchyEntry" xml:space="preserve">
     <value>{0}{1,-3}{2}: {3:0.000}s           {4:0.000}s       {5} ({6}) </value>
     <comment>Fields 3 and 4 represent seconds, and the 's' following them should reflect the localized abbreviation for seconds.</comment>
   </data>
-  <data name="NodeUtilizationHeader">
+  <data name="NodeUtilizationHeader" xml:space="preserve">
     <value>
 ============================== Node Utilization (IDs represent configurations) ====================================================
 Timestamp:            {0} Duration   Cumulative
 -----------------------------------------------------------------------------------------------------------------------------------</value>
     <comment>Spacing is important.  Preserve the number of characters between the start of each word.</comment>
   </data>
-  <data name="NodeUtilizationEntry">
+  <data name="NodeUtilizationEntry" xml:space="preserve">
     <value>{0} {1:0.000}s     {2:0.000}s {3}</value>
     <comment>Fields 1 and 2 represents seconds, and the 's' following it should reflect the localized abbreviation for seconds.</comment>
   </data>
-  <data name="NodeUtilizationSummary">
+  <data name="NodeUtilizationSummary" xml:space="preserve">
     <value>-----------------------------------------------------------------------------------------------------------------------------------
 Utilization:          {0} Average Utilization: {1:###.0}</value>
     <comment>Spacing is important.  Preserve the number of characters between the start of each word.</comment>
   </data>
-  <!-- #################################################################################################-->
-  <!-- ############################## Collection-related strings #######################################-->
-  <!-- #################################################################################################-->
-  <!-- The OM_ prefix indicates at the point of use that there is no error code in the message;
-       these should not be used in an InvalidProjectFileException -->
-  <data name="OM_NotSupportedConvertingCollectionValueToBacking">
+  <data name="OM_NotSupportedConvertingCollectionValueToBacking" xml:space="preserve">
     <value>This collection cannot convert from the specified value to the backing value.</value>
   </data>
-  <data name="OM_CannotCreateReservedProperty" UESanitized="false" Visibility="Public">
+  <data name="OM_CannotCreateReservedProperty" xml:space="preserve">
     <value>The "{0}" property name is reserved.</value>
     <comment>UE: This message is shown when the user tries to redefine one of the reserved MSBuild properties e.g. $(MSBuildProjectFile) through the object model</comment>
   </data>
-  <!-- #################################################################################################-->
-  <!-- ############################## Construction-model-related strings ###############################-->
-  <!-- #################################################################################################-->
-  <!-- The OM_ prefix indicates at the point of use that there is no error code in the message;
-       these should not be used in an InvalidProjectFileException -->
-  <data name="OM_EitherAttributeButNotBoth">
+  <data name="OM_EitherAttributeButNotBoth" xml:space="preserve">
     <value>The &lt;{0}&gt; element must have either the "{1}" attribute or the "{2}" attribute but not both.</value>
   </data>
-  <data name="OM_OneOfAttributeButNotMore">
+  <data name="OM_OneOfAttributeButNotMore" xml:space="preserve">
     <value>The &lt;{0}&gt; element must have either the "{1}" attribute, the "{2}" attribute, or the "{3}" attribute, but not more than one.</value>
   </data>
-  <data name="OM_NoRemoveOutsideTargets">
+  <data name="OM_NoRemoveOutsideTargets" xml:space="preserve">
     <value>The "Remove" attribute is not permitted on an item outside of a &lt;Target&gt;.</value>
   </data>
-  <data name="OM_NoKeepMetadataOutsideTargets">
+  <data name="OM_NoKeepMetadataOutsideTargets" xml:space="preserve">
     <value>The "KeepMetadata" attribute is not permitted on an item outside of a &lt;Target&gt;.</value>
   </data>
-  <data name="OM_NoRemoveMetadataOutsideTargets">
+  <data name="OM_NoRemoveMetadataOutsideTargets" xml:space="preserve">
     <value>The "RemoveMetadata" attribute is not permitted on an item outside of a &lt;Target&gt;.</value>
   </data>
-  <data name="OM_NoKeepDuplicatesOutsideTargets">
+  <data name="OM_NoKeepDuplicatesOutsideTargets" xml:space="preserve">
     <value>The "KeepDuplicates" attribute is not permitted on an item outside of a &lt;Target&gt;.</value>
   </data>
-  <data name="OM_CannotGetSetCondition">
+  <data name="OM_CannotGetSetCondition" xml:space="preserve">
     <value>Elements of this type do not have a condition.</value>
     <comment>For example, it is not legal for a &lt;ProjectExtensions&gt; element to have a condition attribute.</comment>
   </data>
-  <data name="OM_NodeAlreadyParented">
+  <data name="OM_NodeAlreadyParented" xml:space="preserve">
     <value>The node already has a parent. Remove it from its parent before moving it.</value>
   </data>
-  <data name="OM_NodeNotAlreadyParentedByThis">
+  <data name="OM_NodeNotAlreadyParentedByThis" xml:space="preserve">
     <value>The node is not parented by this object so it cannot be removed from it.</value>
   </data>
-  <data name="OM_ReferenceDoesNotHaveThisParent">
+  <data name="OM_ReferenceDoesNotHaveThisParent" xml:space="preserve">
     <value>The reference node is not a child of this node.</value>
   </data>
-  <data name="OM_SelfAncestor">
+  <data name="OM_SelfAncestor" xml:space="preserve">
     <value>Cannot make a node or an ancestor of that node a child of itself.</value>
   </data>
-  <data name="OM_MustBeSameProject">
+  <data name="OM_MustBeSameProject" xml:space="preserve">
     <value>Cannot create a relationship between nodes that were created from different projects.</value>
   </data>
-  <data name="OM_ParentNotParented">
+  <data name="OM_ParentNotParented" xml:space="preserve">
     <value>The parent node is not itself parented.</value>
   </data>
-  <data name="OM_CannotAcceptParent">
+  <data name="OM_CannotAcceptParent" xml:space="preserve">
     <value>This parent is not a valid parent for the item.</value>
   </data>
-  <data name="OM_ItemsOutsideTargetMustHaveIncludeOrUpdateOrRemove">
+  <data name="OM_ItemsOutsideTargetMustHaveIncludeOrUpdateOrRemove" xml:space="preserve">
     <value>An item not parented under a Target must have a value for Include or Update or Remove.</value>
     <comment>LOCALIZATION: Please do not localize "Target", "Include", "Update", and "Remove".</comment>
   </data>
-  <data name="OM_NameInvalid">
+  <data name="OM_NameInvalid" xml:space="preserve">
     <value>The name "{0}" contains an invalid character "{1}".</value>
   </data>
-  <data name="OM_TargetNameNullOrEmpty">
+  <data name="OM_TargetNameNullOrEmpty" xml:space="preserve">
     <value>Method {0} cannot be called with a collection containing null or empty target names.</value>
   </data>
-  <data name="OM_NoOtherwiseBeforeWhenOrOtherwise">
+  <data name="OM_NoOtherwiseBeforeWhenOrOtherwise" xml:space="preserve">
     <value>An &lt;Otherwise&gt; element cannot be located before a &lt;When&gt; or &lt;Otherwise&gt; element.</value>
   </data>
-  <data name="OM_MustSetFileNameBeforeSave">
+  <data name="OM_MustSetFileNameBeforeSave" xml:space="preserve">
     <value>Project has not been given a path to save to.</value>
   </data>
-  <data name="OM_MustSetRecordDuplicateInputs">
+  <data name="OM_MustSetRecordDuplicateInputs" xml:space="preserve">
     <value>Project was not loaded with the ProjectLoadSettings.RecordDuplicateImports flag.</value>
   </data>
-  <data name="OM_CannotSaveFileLoadedAsReadOnly">
+  <data name="OM_CannotSaveFileLoadedAsReadOnly" xml:space="preserve">
     <value>Project or targets file "{0}" was loaded in read-only mode, and cannot be saved.</value>
   </data>
-  <!-- #################################################################################################-->
-  <!-- ############################## Evaluation-model-related strings #################################-->
-  <!-- #################################################################################################-->
-  <!-- The OM_ prefix indicates at the point of use that there is no error code in the message;
-       these should not be used in an InvalidProjectFileException -->
-  <data name="OM_IncorrectObjectAssociation">
+  <data name="OM_IncorrectObjectAssociation" xml:space="preserve">
     <value>The "{0}" object specified does not belong to the correct "{1}" object.</value>
   </data>
-  <data name="OM_ReservedName">
+  <data name="OM_ReservedName" xml:space="preserve">
     <value>The "{0}" name is reserved, and cannot be used.</value>
   </data>
-  <data name="OM_GlobalProperty">
+  <data name="OM_GlobalProperty" xml:space="preserve">
     <value>The "{0}" property is a global property, and cannot be modified.</value>
   </data>
-  <data name="OM_MatchingProjectAlreadyInCollection">
+  <data name="OM_MatchingProjectAlreadyInCollection" xml:space="preserve">
     <value>An equivalent project (a project with the same global properties and tools version) is already present in the project collection, with the path "{0}". To load an equivalent into this project collection, unload this project first.</value>
   </data>
-  <data name="OM_ProjectWasNotLoaded">
+  <data name="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem" xml:space="preserve">
+    <value>Only one item type may be referenced when removing with MatchOnMetadata.</value>
+  </data>
+  <data name="OM_ProjectWasNotLoaded" xml:space="preserve">
     <value>The project provided was not loaded in the collection.</value>
   </data>
-  <data name="OM_CannotModifyEvaluatedObjectInImportedFile">
+  <data name="OM_CannotModifyEvaluatedObjectInImportedFile" xml:space="preserve">
     <value>Cannot modify an evaluated object originating in an imported file "{0}".</value>
   </data>
-  <data name="OM_CannotRemoveMetadataOriginatingFromItemDefinition">
+  <data name="OM_CannotRemoveMetadataOriginatingFromItemDefinition" xml:space="preserve">
     <value>Cannot remove the metadata named "{0}" as it originates from an item definition, rather than being directly defined on this item.</value>
   </data>
-  <data name="OM_CannotSplitItemElementWhenSplittingIsDisabled">
+  <data name="OM_CannotSplitItemElementWhenSplittingIsDisabled" xml:space="preserve">
     <value>The requested operation needs to split the item element at location {0} into individual elements but item element splitting is disabled with {1}.</value>
   </data>
-  <data name="OM_ProjectIsNoLongerActive">
+  <data name="OM_ProjectIsNoLongerActive" xml:space="preserve">
     <value>The project cannot be used as it is no longer loaded into a project collection.</value>
   </data>
-  <data name="OM_ObjectIsNoLongerActive">
+  <data name="OM_ObjectIsNoLongerActive" xml:space="preserve">
     <value>The operation is not allowed because currently this object is not parented.</value>
   </data>
-  <data name="OM_ProjectXmlCannotBeUnloadedDueToLoadedProjects">
+  <data name="OM_ProjectXmlCannotBeUnloadedDueToLoadedProjects" xml:space="preserve">
     <value>The project XML file "{0}" cannot be unloaded because at least one project "{1}" is still loaded which references that project XML.</value>
   </data>
-  <data name="OM_ProjectInstanceImmutable">
+  <data name="OM_ProjectInstanceImmutable" xml:space="preserve">
     <value>Instance object was created as immutable.</value>
   </data>
-  <data name="OM_NotEvaluatedBecauseShouldEvaluateForDesignTimeIsFalse">
+  <data name="OM_NotEvaluatedBecauseShouldEvaluateForDesignTimeIsFalse" xml:space="preserve">
     <value>The specified API "{0}" is not available because ProjectLoadSettings.DoNotEvaluateElementsWithFalseCondition was set when loading this project.</value>
   </data>
-  <!-- #################################################################################################-->
-  <!-- ############################## Execution-model-related strings #################################-->
-  <!-- #################################################################################################-->
-  <!-- The OM_ prefix indicates at the point of use that there is no error code in the message;
-       these should not be used in an InvalidProjectFileException -->
-  <data name="OM_BuildSubmissionsMultipleProjectCollections">
+  <data name="OM_NoMatchOnMetadataOutsideTargets" xml:space="preserve">
+    <value>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</value>
+  </data>
+  <data name="OM_MatchOnMetadataOnlyApplicableToRemoveItems" xml:space="preserve">
+    <value>MatchOnMetadata only applies to Remove operations on items.</value>
+  </data>
+  <data name="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata" xml:space="preserve">
+    <value>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</value>
+  </data>
+  <data name="OM_BuildSubmissionsMultipleProjectCollections" xml:space="preserve">
     <value>All build submissions in a build must use project instances originating from the same project collection.</value>
     <comment>This occurs if a client tries to add two BuildSubmissions to a build, each involving a ProjectInstance originating in different ProjectCollection. This is not allowed.</comment>
   </data>
-  <!-- #################################################################################################-->
-  <!-- ######################################## Shared strings #########################################-->
-  <!-- ###### These belong in Strings.shared.resx, but have been copied here for performance ###########-->
-  <!-- ##### If you change the string here, please also change it in Shared\Resources\Strings.shared.resx ########-->
-  <!-- ############################ and in XMakeCommandLine\Strings.resx ###############################-->
-  <!-- ############## Remove this block once ResourceManager bug 627270 has been fixed. ################-->
-  <!-- #################################################################################################-->
-  <data name="BuildStarted" UESanitized="false" Visibility="Public">
+  <data name="BuildStarted" xml:space="preserve">
     <value>Build started.</value>
   </data>
-  <data name="FileLocation" UESanitized="false" Visibility="Public">
+  <data name="FileLocation" xml:space="preserve">
     <value>{0} ({1},{2})</value>
     <comment>A file location to be embedded in a string.</comment>
   </data>
-
-  <!-- The MSBuild Intrinsic Task bucket is 3201 - 3210 -->
-  <!-- This supercedes the MSBuild resources in Tasks, but must be kept up to date until VS12 -->
-  <data name="MSBuild.CannotRebaseOutputItemPath" UESanitized="false" Visibility="Public">
+  <data name="MSBuild.CannotRebaseOutputItemPath" xml:space="preserve">
     <value>MSB3203: The output path "{0}" cannot be rebased. {1}</value>
     <comment>{StrBegin="MSB3203: "}UE: This message is shown when the user asks the "MSBuild" task to rebase the paths of its output items relative to the project from where the "MSBuild" task is called (as opposed to the project(s) on which the "MSBuild" task is called), and one of the output item paths is invalid. LOCALIZATION: "{1}" is a localized message from a CLR/FX exception explaining the problem.</comment>
   </data>
-  <data name="MSBuild.ProjectFileNotFound" UESanitized="false" Visibility="Public">
+  <data name="MSBuild.ProjectFileNotFound" xml:space="preserve">
     <value>MSB3202: The project file "{0}" was not found.</value>
     <comment>
       {StrBegin="MSB3202: "}UE: This message is shown when the user passes a non-existent project file to the MSBuild task, in the "Projects" parameter.
       and they have not specified the SkipNonexistentProjects parameter, or it is set to false.
     </comment>
   </data>
-  <data name="MSBuild.ProjectFileNotFoundMessage" UESanitized="false" Visibility="Public">
+  <data name="MSBuild.ProjectFileNotFoundMessage" xml:space="preserve">
     <value>Skipping project "{0}" because it was not found.</value>
     <comment>UE: This message is shown when the user passes a non-existent project file to the MSBuild task, in the "Projects" parameter, and they have specified the SkipNonexistentProjects parameter.</comment>
   </data>
-  <data name="MSBuild.ProjectUpgradeNeededToVcxProj">
+  <data name="MSBuild.ProjectUpgradeNeededToVcxProj" xml:space="preserve">
     <value>MSB3204: The project file "{0}" is in the ".vcproj" file format, which MSBuild no longer supports. Please convert the project by opening it in the Visual Studio IDE or running the conversion tool, or use MSBuild 3.5 or earlier to build it.</value>
     <comment>{StrBegin="MSB3204: "} LOC: ".vcproj" should not be localized</comment>
   </data>
-  <data name="MSBuild.InvalidSkipNonexistentProjectValue">
+  <data name="MSBuild.InvalidSkipNonexistentProjectValue" xml:space="preserve">
     <value>MSB3205: SkipNonexistentProject can only accept values of "True", "False" and "Build".</value>
     <comment>{StrBegin="MSB3205: "} LOC: "SkipNonexistentProject", "True", "False" and "Build" should not be localized</comment>
   </data>
-  <data name="MSBuild.SkippingRemainingProjects">
+  <data name="MSBuild.SkippingRemainingProjects" xml:space="preserve">
     <value>The MSBuild task is skipping the remaining projects because the StopOnFirstFailure parameter was set to true.</value>
     <comment>LOCALIZATION:  Do not localize the words "MSBuild" or "StopOnFirstFailure".</comment>
   </data>
-  <data name="MSBuild.SkippingRemainingTargets">
+  <data name="MSBuild.SkippingRemainingTargets" xml:space="preserve">
     <value>The MSBuild task is skipping the remaining targets because the StopOnFirstFailure parameter was set to true.</value>
     <comment>LOCALIZATION:  Do not localize the words "MSBuild" or "StopOnFirstFailure".</comment>
   </data>
-  <data name="MSBuild.NotBuildingInParallel">
+  <data name="MSBuild.NotBuildingInParallel" xml:space="preserve">
     <value>Overriding the BuildingInParallel property by setting it to false. This is due to the system being run in single process mode with StopOnFirstFailure set to true.</value>
     <comment>LOCALIZATION:  Do not localize the words "MSBuild", "BuildingInParallel", or "StopOnFirstFailure".</comment>
   </data>
-  <data name="MSBuild.NoStopOnFirstFailure">
+  <data name="MSBuild.NoStopOnFirstFailure" xml:space="preserve">
     <value>StopOnFirstFailure will have no effect when the following conditions are all present: 1) The system is running in multiple process mode 2) The BuildInParallel property is true. 3) The RunEachTargetSeparately property is false.</value>
     <comment>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</comment>
   </data>
-
-  <!--
-  Some General properties replicated from tasks for MSBuild task
-  TODO: Are these ever used anywhere else?
-  -->
-  <data name="General.InvalidPropertyError" UESanitized="false" Visibility="Public">
+  <data name="General.InvalidPropertyError" xml:space="preserve">
     <value>MSB3100: Syntax for "{0}" parameter is not valid ({1}). Correct syntax is {0}="&lt;name&gt;=&lt;value&gt;".</value>
     <comment>{StrBegin="MSB3100: "}This error is shown if the user does any of the following:
     Properties="foo"              (missing property value)
     Properties="=4"               (missing property name)
     The user must pass in an actual property name and value, as in Properties="Configuration=Debug".</comment>
   </data>
-  <data name="General.GlobalProperties">
+  <data name="General.GlobalProperties" xml:space="preserve">
     <value>Global Properties:</value>
   </data>
-  <data name="General.UndefineProperties">
+  <data name="General.UndefineProperties" xml:space="preserve">
     <value>Removing Properties:</value>
   </data>
-  <data name="General.OverridingProperties">
+  <data name="General.OverridingProperties" xml:space="preserve">
     <value>Overriding Global Properties for project "{0}" with:</value>
   </data>
-  <data name="General.AdditionalProperties">
+  <data name="General.AdditionalProperties" xml:space="preserve">
     <value>Additional Properties for project "{0}":</value>
   </data>
-  <data name="General.ProjectUndefineProperties">
+  <data name="General.ProjectUndefineProperties" xml:space="preserve">
     <value>Removing Properties for project "{0}":</value>
   </data>
-
-  <!-- Engine errors for features not supported on .NET Core have the arbitrarily-chosen 48 prefix -->
   <data name="TaskInstantiationFailureNotSupported" xml:space="preserve">
     <value>MSB4802: The "{0}" task could not be instantiated from "{1}". This version of MSBuild does not support {2}.</value>
     <comment>{StrBegin="MSB4802: "}</comment>
   </data>
-
-  <data name="InvalidGetPathOfFileAboveParameter">
+  <data name="InvalidGetPathOfFileAboveParameter" xml:space="preserve">
     <value>The parameter '{0}' can only be a file name and cannot include a directory.</value>
   </data>
-
-  <data name="FileToReloadFromDoesNotExist">
+  <data name="FileToReloadFromDoesNotExist" xml:space="preserve">
     <value>MSB4229: File to reload from does not exist: {0}</value>
     <comment>{StrBegin="MSB4229: "}</comment>
   </data>
-
-  <data name="ValueNotSet">
+  <data name="ValueNotSet" xml:space="preserve">
     <value>MSB4230: Value not set: {0}</value>
     <comment>{StrBegin="MSB4230: "}</comment>
   </data>
-
-  <data name="NoReloadOnUnsavedChanges">
+  <data name="NoReloadOnUnsavedChanges" xml:space="preserve">
     <value>MSB4231: ProjectRootElement can't reload if it contains unsaved changes.</value>
     <comment>{StrBegin="MSB4231: "}</comment>
   </data>
-
-  <data name="MetaprojectGenerated">
-    <value>Metaproject &quot;{0}&quot; generated.</value>
+  <data name="MetaprojectGenerated" xml:space="preserve">
+    <value>Metaproject "{0}" generated.</value>
   </data>
-
-  <data name="ProjectImportSkippedFalseCondition">
-    <value>Project &quot;{0}&quot; was not imported by &quot;{1}&quot; at ({2},{3}), due to false condition; ({4}) was evaluated as ({5}).</value>
+  <data name="ProjectImportSkippedFalseCondition" xml:space="preserve">
+    <value>Project "{0}" was not imported by "{1}" at ({2},{3}), due to false condition; ({4}) was evaluated as ({5}).</value>
   </data>
-
-  <data name="ProjectImportSkippedNoMatches">
-    <value>Project &quot;{0}&quot; was not imported by &quot;{1}&quot; at ({2},{3}), due to no matching files.</value>
+  <data name="ProjectImportSkippedNoMatches" xml:space="preserve">
+    <value>Project "{0}" was not imported by "{1}" at ({2},{3}), due to no matching files.</value>
   </data>
-
-  <data name="ProjectImportSkippedEmptyFile">
-    <value>Project &quot;{0}&quot; was not imported by &quot;{1}&quot; at ({2},{3}), due to the file being empty.</value>
+  <data name="ProjectImportSkippedEmptyFile" xml:space="preserve">
+    <value>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being empty.</value>
   </data>
-
-  <data name="ProjectImportSkippedInvalidFile">
-    <value>Project &quot;{0}&quot; was not imported by &quot;{1}&quot; at ({2},{3}), due to the file being invalid.</value>
+  <data name="ProjectImportSkippedInvalidFile" xml:space="preserve">
+    <value>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</value>
   </data>
-
-  <data name="ProjectImportSkippedMissingFile">
-    <value>Project &quot;{0}&quot; was not imported by &quot;{1}&quot; at ({2},{3}), due to the file not existing.</value>
+  <data name="ProjectImportSkippedMissingFile" xml:space="preserve">
+    <value>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file not existing.</value>
   </data>
-
-  <data name="ProjectImported">
-    <value>Importing project &quot;{0}&quot; into project &quot;{1}&quot; at ({2},{3}).</value>
+  <data name="ProjectImported" xml:space="preserve">
+    <value>Importing project "{0}" into project "{1}" at ({2},{3}).</value>
   </data>
   <data name="ErrorWritingProfilerReport" xml:space="preserve">
     <value>MSBUILD : error MSB4239: Error writing profiling report. {0}</value>
@@ -1689,39 +1691,39 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
   <data name="WritingProfilerReportDone" xml:space="preserve">
     <value>Done writing report.</value>
   </data>
-  <data name="ReferencingMultipleVersionsOfTheSameSdk" UESanitized="false" Visibility="Public">
+  <data name="ReferencingMultipleVersionsOfTheSameSdk" xml:space="preserve">
     <value>MSB4240: Multiple versions of the same SDK "{0}" cannot be specified. The previously resolved SDK version "{1}" from location "{2}" will be used and the version "{3}" will be ignored.</value>
     <comment>{StrBegin="MSB4240: "}
       LOCALIZATION:  Do not localize the word SDK.
     </comment>
   </data>
-  <data name="SdkResultVersionDifferentThanReference" UESanitized="false" Visibility="Public">
+  <data name="SdkResultVersionDifferentThanReference" xml:space="preserve">
     <value>MSB4241: The SDK reference "{0}" version "{1}" was resolved to version "{2}" instead.  You could be using a different version than expected if you do not update the referenced version to match.</value>
     <comment>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
     </comment>
   </data>
-  <data name="SdkResolving" UESanitized="false" Visibility="Public">
+  <data name="SdkResolving" xml:space="preserve">
     <value>Resolving SDK '{0}'...</value>
     <comment>
       LOCALIZATION:  Do not localize the word SDK.
     </comment>
   </data>
-  <data name="ProjectGraphDoesNotSupportProjectReferenceWithToolset" UESanitized="false" Visibility="Public">
+  <data name="ProjectGraphDoesNotSupportProjectReferenceWithToolset" xml:space="preserve">
     <value>MSB4250: ProjectGraph does not support ProjectReference items with the ToolsVersion metadata set. Found ProjectReference "{0}" with ToolsVersion in file "{1}"</value>
     <comment>
       {StrBegin="MSB4250: "}
       LOCALIZATION:  Do not localize the following words: ProjectGraph, ProjectReference, ToolsVersion.
     </comment>
   </data>
-  <data name="CircularDependencyInProjectGraph" UESanitized="false" Visibility="Public">
+  <data name="CircularDependencyInProjectGraph" xml:space="preserve">
     <value>MSB4251: There is a circular dependency involving the following projects: {0}</value>
     <comment>
       {StrBegin="MSB4251:"} This message is shown when a graph build detects a target referenced in a circular manner -- a project cannot
       request a target to build itself (perhaps via a chain of other targets)
     </comment>
   </data>
-  <data name="CacheMissesNotAllowedInIsolatedGraphBuilds" UESanitized="false" Visibility="Public">
+  <data name="CacheMissesNotAllowedInIsolatedGraphBuilds" xml:space="preserve">
     <value>MSB4252: Project "{0}" with global properties
     ({1})
     is building project "{2}" with global properties
@@ -1736,58 +1738,57 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
       LOCALIZATION: Do not localize the following words: ProjectReference, ProjectReferenceTargets
     </comment>
   </data>
-  <data name="NullReferenceFromProjectInstanceFactory" UESanitized="false" Visibility="Public">
+  <data name="NullReferenceFromProjectInstanceFactory" xml:space="preserve">
     <value>MSB4253: A null reference was returned from a user-provided ProjectInstanceFactoryFunc callback. This is not allowed.</value>
     <comment>
       {StrBegin="MSB4253: "}
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </comment>
   </data>
-  <data name="UndeclaredMSBuildTasksNotAllowedInIsolatedGraphBuilds" UESanitized="false" Visibility="Public">
+  <data name="UndeclaredMSBuildTasksNotAllowedInIsolatedGraphBuilds" xml:space="preserve">
     <value>MSB4254: The MSBuild task is building project(s) "{0}" which are not specified in the ProjectReference item. In isolated builds this probably means that the references are not explicitly specified as a ProjectReference item in "{1}"</value>
     <comment>
       {StrBegin="MSB4254:"}
       LOCALIZATION: Do not localize the following words: ProjectReference, MSBuild, task.
     </comment>
   </data>
-  <data name="ErrorReadingCacheFile" UESanitized="false" Visibility="Public">
+  <data name="ErrorReadingCacheFile" xml:space="preserve">
     <value>MSB4256: Reading input result cache files from path "{0}" encountered an error: {1}</value>
   </data>
-  <data name="InputCacheFilesDoNotExist" UESanitized="false" Visibility="Public">
+  <data name="InputCacheFilesDoNotExist" xml:space="preserve">
     <value>MSB4255: The following input result cache files do not exist: "{0}"</value>
   </data>
-  <data name="EmptyOutputCacheFile" UESanitized="false" Visibility="Public">
+  <data name="EmptyOutputCacheFile" xml:space="preserve">
     <value>MSB4257: The specified output result cache file is empty.</value>
   </data>
-  <data name="ErrorWritingCacheFile" UESanitized="false" Visibility="Public">
+  <data name="ErrorWritingCacheFile" xml:space="preserve">
     <value>MSB4258: Writing output result cache file in path "{0}" encountered an error: {1}</value>
   </data>
-  <data name="UsingInputCaches" UESanitized="false" Visibility="Public">
+  <data name="UsingInputCaches" xml:space="preserve">
     <value>Using input build results caches: {0}</value>
     <comment>
       LOCALIZATION: {0} is a list of semicolon separated file paths
     </comment>
   </data>
-  <data name="WritingToOutputCache" UESanitized="false" Visibility="Public">
+  <data name="WritingToOutputCache" xml:space="preserve">
     <value>Writing build results caches to: {0}</value>
     <comment>
       LOCALIZATION: {0} is a file path
     </comment>
   </data>
-  <data name="SkippedConstraintsOnRequest" UESanitized="false" Visibility="Public">
+  <data name="SkippedConstraintsOnRequest" xml:space="preserve">
     <value>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</value>
     <comment>
       LOCALIZATION: {0} and {1} are file paths
     </comment>
   </data>
-  <data name="StaticGraphAcceptsSingleSolutionEntryPoint" UESanitized="false" Visibility="Public">
-    <value>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</value>
+  <data name="StaticGraphAcceptsSingleSolutionEntryPoint" xml:space="preserve">
     <value>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</value>
     <comment>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </comment>
   </data>
-  <data name="StaticGraphSolutionLoaderEncounteredSolutionWarningsAndErrors" UESanitized="false" Visibility="Public">
+  <data name="StaticGraphSolutionLoaderEncounteredSolutionWarningsAndErrors" xml:space="preserve">
     <value>MSB4262: Solution file "{0}" contains the following warnings and errors:
            Warnings: {1}
            Errors: {2}
@@ -1796,7 +1797,7 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </comment>
   </data>
-  <data name="StaticGraphDoesNotSupportSlnReferences" UESanitized="false" Visibility="Public">
+  <data name="StaticGraphDoesNotSupportSlnReferences" xml:space="preserve">
     <value>MSB4263: Project "{0}" has a reference to solution file "{1}". Referencing solutions is not supported in static graph.
     </value>
     <comment>
@@ -1812,65 +1813,13 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
   <data name="InvalidVersionFormat" xml:space="preserve">
     <value>Version string was not in a correct format.</value>
   </data>
-  <data name="UninitializedPropertyRead" UESanitized="false" Visibility="Public">
+  <data name="UninitializedPropertyRead" xml:space="preserve">
     <value>Read uninitialized property "{0}"</value>
-    <comment>
-    </comment>
   </data>
-  <data name="EnvironmentVariableRead" UESanitized="false" Visibility="Public">
+  <data name="EnvironmentVariableRead" xml:space="preserve">
     <value>Read environment variable "{0}"</value>
-    <comment>
-    </comment>
   </data>
-  <data name="PropertyAssignment" UESanitized="false" Visibility="Public">
+  <data name="PropertyAssignment" xml:space="preserve">
     <value>Property initial value: $({0})="{1}" Source: {2}</value>
-    <comment>
-    </comment>
   </data>
-  <!--
-        The engine message bucket is: MSB4001 - MSB4999
-
-        MSB4128 is being used in FileLogger.cs (can't be added here yet as strings are currently frozen)
-        MSB4129 is used by Shared\XmlUtilities.cs (can't be added here yet as strings are currently frozen)
-
-        Next message code should be MSB4264.
-
-        Some unused codes which can also be reused (because their messages were deleted, and UE hasn't indexed the codes yet):
-            <none>
-
-Retired codes, which have already shipped, but are no longer needed and should not be re-used:
-MSB4056
-MSB4005
-MSB4007
-MSB4140
-MSB4165
-MSB4139
-MSB4071
-MSB4083
-MSB4031
-MSB4167
-MSB4178
-MSB4076
-MSB4097
-MSB4098
-MSB4168
-MSB4151
-MSB4152
-MSB4153
-MSB4154
-MSB4155
-MSB4156
-MSB4157
-MSB4158
-MSB4161
-MSB4169
-MSB4170
-MSB4171
-MSB4172
-
-
-        Don't forget to update this comment after using a new code.
-
-        Exceptions thrown out of the object model never have error codes.
-  -->
-</root>
+</root>
\ No newline at end of file
diff --git a/src/Build/Resources/xlf/Strings.cs.xlf b/src/Build/Resources/xlf/Strings.cs.xlf
index 33b6e3392ab..262a0f64993 100644
--- a/src/Build/Resources/xlf/Strings.cs.xlf
+++ b/src/Build/Resources/xlf/Strings.cs.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: Projekt {0} s globálními vlastnostmi
     ({1})
-    is building project "{2}" with global properties
+    sestavuje projekt {2} s globálními vlastnostmi
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    s cílem nebo cíli ({4}), ale výsledek sestavení pro sestavený projekt není v mezipaměti modulu. V izolovaných sestaveních to může znamenat jednu z těchto věcí:
+    – Odkaz byl volán s cílem, který není zadaný v položce ProjectReferenceTargets v projektu {0}.
+    – Odkaz byl volán s globálními vlastnostmi, které neodpovídají odvozeným uzlům statického grafu.
+    – Odkaz nebyl explicitně zadán jako položka ProjectReference v projektu {0}.
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">Číst proměnnou prostředí {0}</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">Metoda {0} se nedá zavolat s kolekcí, která obsahuje prázdné cílové názvy nebo názvy null.</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">Počáteční hodnota vlastnosti: $({0})={1} Zdroj: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: Statický graf přijímá pouze řešení jako jediný vstupní bod. Zjištěno více vstupních bodů: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: Statický graf přijímá pouze řešení jako jediný vstupní bod. Zjištěno více vstupních bodů: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">Číst neinicializovanou vlastnost {0}</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index 251cf3c1df8..64073a3496c 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: Das Projekt "{0}" mit globalen Eigenschaften
     ({1})
-    is building project "{2}" with global properties
+    erstellt das Projekt "{2}" mit globalen Eigenschaften
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    mit den ({4}) Zielen, aber das Buildergebnis für das erstellte Projekt befindet sich nicht im Engine-Cache. In isolierten Builds kann dies Folgendes bedeuten:
+    – Der Verweis wurde mit einem Ziel aufgerufen, das im ProjectReferenceTargets-Element im Projekt "{0}" nicht angegeben ist.
+    – Der Verweis wurde mit globalen Eigenschaften aufgerufen, die nicht mit den abgeleiteten Knoten des statischen Graphen übereinstimmen.
+    – Der Verweis wurde nicht explizit als ProjectReference-Element im Projekt "{0}" angegeben.
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">Umgebungsvariable "{0}" lesen</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">Die Methode "{0}" kann nicht mit einer Sammlung aufgerufen werden, die NULL oder leere Zielnamen enthält.</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">Anfangswert der Eigenschaft: $({0})="{1}", Quelle: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: Ein statischer Graph akzeptiert nur eine Projektmappe als einzigen Einstiegspunkt. Es wurden mehrere Einstiegspunkte erkannt: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: Ein statischer Graph akzeptiert nur eine Projektmappe als einzigen Einstiegspunkt. Es wurden mehrere Einstiegspunkte erkannt: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">Nicht initialisierte Eigenschaft "{0}" lesen</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.en.xlf b/src/Build/Resources/xlf/Strings.en.xlf
index 4cbe8cb8cbb..1891ae50769 100644
--- a/src/Build/Resources/xlf/Strings.en.xlf
+++ b/src/Build/Resources/xlf/Strings.en.xlf
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="new">Method {0} cannot be called with a collection containing null or empty target names.</target>
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="new">MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="new">MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index 685fbadd8ea..6211b592508 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: el proyecto "{0}" con las propiedades globales
     ({1})
-    is building project "{2}" with global properties
+    está compilando el proyecto "{2}" con las propiedades globales
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    con los destinos de ({4}), pero el resultado de la compilación del proyecto compilado no está en la caché del motor. En compilaciones aisladas, esto podría significar algo de lo siguiente:
+    - se llamó a la referencia con un destino que no se especifica en el elemento ProjectReferenceTargets del proyecto "{0}"
+    - se llamó a la referencia con propiedades globales que no coinciden con los nodos inferidos del grafo estático
+    - no se especificó explícitamente la referencia como elemento de ProjectReference en el proyecto "{0}"
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">Leer la variable de entorno "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">No se puede llamar al método {0} con una colección que contiene nombres de destino nulos o vacíos.</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">Valor inicial de la propiedad: $({0})="{1}" Origen: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: Un grafo estático solo acepta una solución como único punto de entrada. Se han detectado varios puntos de entrada: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: Un grafo estático solo acepta una solución como único punto de entrada. Se han detectado varios puntos de entrada: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">Leer la propiedad no inicializada "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index db343510d59..10c3dc7f551 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: le projet "{0}" avec des propriétés globales
     ({1})
-    is building project "{2}" with global properties
+    génère le projet "{2}" avec des propriétés globales
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    avec la ou les cibles ({4}) mais le résultat de build du projet généré ne se trouve pas dans le cache du moteur. Dans les builds isolées, cela peut avoir l'une des significations suivantes :
+    - la référence a été appelée avec une cible qui n'est pas spécifiée dans l'élément ProjectReferenceTargets dans le projet "{0}"
+    - la référence a été appelée avec des propriétés globales qui ne correspondent pas aux nœuds inférés du graphe statique
+    - la référence n'a pas été explicitement spécifiée en tant qu'élément ProjectReference dans le projet "{0}"
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">Lire la variable d'environnement "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">Impossible d'appeler la méthode {0} avec une collection contenant des noms de cibles qui ont une valeur null ou qui sont vides.</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">Valeur initiale de la propriété : $({0})="{1}" Source : {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: le graphe statique n'accepte qu'une solution comme seul point d'entrée. Plusieurs points d'entrée ont été détectés : {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: le graphe statique n'accepte qu'une solution comme seul point d'entrée. Plusieurs points d'entrée ont été détectés : {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">Lire la propriété non initialisée "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index 2606ef8f03b..30f528b6661 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: il progetto "{0}" con proprietà globali
     ({1})
-    is building project "{2}" with global properties
+    sta compilando il progetto "{2}" con proprietà globali
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    e con le destinazioni ({4}), ma il risultato della compilazione per il progetto compilato non si trova nella cache del motore. Nelle compilazioni isolate questa condizione può indicare che:
+    - il riferimento è stato chiamato con una destinazione che non è stata specificata nell'elemento ProjectReferenceTargets nel progetto "{0}"
+    - il riferimento è stato chiamato con proprietà globali che non corrispondono ai nodi derivati dal grafo statico
+    - il riferimento non è stato specificato in modo esplicito come elemento ProjectReference nel progetto "{0}"
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">Legge la variabile di ambiente "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">Non è possibile chiamare il metodo {0} con una raccolta contenente nomi di destinazione Null o vuoti.</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">Valore iniziale della proprietà: $({0})="{1}". Origine: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: l'unico punto di ingresso accettato dal grafo statico è una soluzione. Sono stati rilevati più punti di ingresso: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: l'unico punto di ingresso accettato dal grafo statico è una soluzione. Sono stati rilevati più punti di ingresso: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">Legge la proprietà non inizializzata "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index e8eb191a8e1..50fc9bd8263 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: グローバル プロパティを含むプロジェクト "{0}"
     ({1})
-    is building project "{2}" with global properties
+    グローバル プロパティを含むプロジェクト "{2}" をビルドしています
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    ({4}) ターゲットがありますが、ビルド プロジェクトのビルド結果がエンジン キャッシュ内にありません。分離されたビルドの場合、これは以下のいずれかを意味する可能性があります。
+    - 参照の呼び出しで指定されたターゲットが、プロジェクト "{0}" 内の ProjectReferenceTargets 項目で指定されていなかった
+    - 参照の呼び出しで指定されたグローバル プロパティが、静的グラフの推定されたノードと一致しない
+    - 参照がプロジェクト "{0}" 内で ProjectReference 項目として明示的に指定されていなかった
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">環境変数 "{0}" の読み取り</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">Null または空のターゲット名を含むコレクションを指定してメソッド {0} を呼び出すことはできません。</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">プロパティの初期値: $({0})="{1}" ソース: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: 静的グラフでは、ソリューションを唯一のエントリ ポイントとして受け入れるのみです。複数のエントリ ポイントが検出されました: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: 静的グラフでは、ソリューションを唯一のエントリ ポイントとして受け入れるのみです。複数のエントリ ポイントが検出されました: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">初期化されていないプロパティ "{0}" の読み取り</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.ko.xlf b/src/Build/Resources/xlf/Strings.ko.xlf
index 352879280c8..f3d92995264 100644
--- a/src/Build/Resources/xlf/Strings.ko.xlf
+++ b/src/Build/Resources/xlf/Strings.ko.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
-    ({1})
-    is building project "{2}" with global properties
-    ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+        <target state="translated">MSB4252: 전역 속성({1})이 있는 "{0}" 프로젝트가
+    대상이
+    ({4})인 전역 속성({3})으로 "{2}" 프로젝트를
+    빌드하고
+    있지만, 빌드된 프로젝트의 빌드 결과가 엔진 캐시에 없습니다. 격리된 빌드에서 이는 다음 중 하나를 의미할 수 있습니다.
+    - 참조가 "{0}" 프로젝트의 ProjectReferenceTargets 항목에 지정되지 않은 대상으로 호출되었습니다.
+    - 참조가 정적 그래프 유추된 노드와 일치하지 않는 전역 속성으로 호출되었습니다.
+    - 참조가 "{0}" 프로젝트에서 ProjectReference 항목으로 명시적으로 지정되지 않았습니다.
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">환경 변수 "{0}" 읽기</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">null 또는 빈 대상 이름을 포함하는 컬렉션을 사용하여 {0} 메서드를 호출할 수 없습니다.</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">속성 초기 값: $({0})="{1}" 소스: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: 정적 그래프는 유일한 진입점으로 솔루션만 허용합니다. 여러 진입점이 발견되었습니다. {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: 정적 그래프는 유일한 진입점으로 솔루션만 허용합니다. 여러 진입점이 발견되었습니다. {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">초기화되지 않은 속성 "{0}" 읽기</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index 2018cdcb104..b9c95988257 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: Projekt „{0}” z właściwościami globalnymi
     ({1})
-    is building project "{2}" with global properties
+    kompiluje projekt „{2}” z właściwościami globalnymi
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    i obiektami docelowymi ({4}), ale wynik kompilacji dla skompilowanego projektu nie znajduje się w pamięci podręcznej aparatu. W przypadku izolowanych kompilacji może to oznaczać, że:
+    - odwołanie zostało wywołane z elementem docelowym, który nie został określony w elemencie ProjectReferenceTargets w projekcie „{0}”;
+    - odwołanie zostało wywołane z właściwościami globalnymi, które nie pasują do węzłów wywnioskowanych z grafu statycznego;
+    - odwołanie nie zostało jawnie określone jako element ProjectReference w projekcie „{0}”.
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">Odczytaj zmienną środowiskową „{0}”</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">Metody {0} nie można wywołać przy użyciu kolekcji zawierającej nazwy docelowe o wartości null lub puste.</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">Wartość początkowa właściwości: $({0})=„{1}” Źródło: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: wykres statyczny akceptuje tylko rozwiązanie jako jedyny punkt wejścia. Wykryto wiele punktów wejścia: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: wykres statyczny akceptuje tylko rozwiązanie jako jedyny punkt wejścia. Wykryto wiele punktów wejścia: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">Odczytaj niezainicjowaną właściwość „{0}”</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index ef4fc0fc9b3..f857a832d90 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: o projeto "{0}" com propriedades globais
     ({1})
-    is building project "{2}" with global properties
+    está criando o projeto "{2}" com propriedades globais
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    com ({4}) destino(s), mas o resultado do build para o projeto criado não está no cache do mecanismo. Em builds isolados, isso pode significar um dos seguintes:
+    – a referência foi chamada com um destino que não está especificado no item de ProjectReferenceTargets no projeto "{0}"
+    – a referência foi chamada com propriedades globais que não correspondem aos nós inferidos do gráfico estático
+    – a referência não foi especificada explicitamente como um item de ProjectReference no projeto "{0}"
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">Ler a variável de ambiente "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">O método {0} não pode ser chamado com uma coleção que contém nomes de destino nulos ou vazios.</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">Valor inicial da propriedade: $({0})="{1}" Origem: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: o grafo estático aceita apenas uma solução como o único ponto de entrada. Vários pontos de entrada detectados: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: o grafo estático aceita apenas uma solução como o único ponto de entrada. Vários pontos de entrada detectados: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">Ler a propriedade não inicializada "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.ru.xlf b/src/Build/Resources/xlf/Strings.ru.xlf
index 94f60764ee7..2ae481c61d9 100644
--- a/src/Build/Resources/xlf/Strings.ru.xlf
+++ b/src/Build/Resources/xlf/Strings.ru.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: проект "{0}" с глобальными свойствами
     ({1})
-    is building project "{2}" with global properties
+    создает проект "{2}" с глобальными свойствами
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    для целевых объектов ({4}), но результат сборки для полученного проекта отсутствует в кэше подсистемы. В изолированных сборках это может означать один из следующих вариантов:
+    – ссылка была вызвана с целью, которая не указана в элементе ProjectReferenceTargets в проекте "{0}"
+    – ссылка была вызвана с глобальными свойствами, которые не совпадают со статическими узлами, полученными от графа
+    – ссылка не была явно указана в качестве элемента ProjectReference в проекте "{0}"
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">Чтение переменной среды "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">Метод {0} не может быть вызван с коллекцией, содержащей целевые имена, которые пусты или равны NULL.</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">Начальное значение свойства: $({0})="{1}" Источник: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: статический граф принимает решение только в качестве единственной точки входа. Обнаружено несколько точек входа: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: статический граф принимает решение только в качестве единственной точки входа. Обнаружено несколько точек входа: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">Чтение неинициализированного свойства "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.tr.xlf b/src/Build/Resources/xlf/Strings.tr.xlf
index 6e286b658ee..248b8565c6f 100644
--- a/src/Build/Resources/xlf/Strings.tr.xlf
+++ b/src/Build/Resources/xlf/Strings.tr.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: Genel özelliklerle sahip "{0}" projesi
     ({1})
-    is building project "{2}" with global properties
+    ({4}) hedefle 
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    genel özelliklere sahip "{2}" projesini oluşturuyor ancak oluşturulan projeye yönelik derleme sonucu, altyapı önbelleğinde değil. Bu, yalıtılmış derlemelerde aşağıdakilerden biri anlamına gelebilir:
+    - Başvuru, "{0}" projesindeki ProjectReferenceTargets öğesinde belirtilmeyen bir hedefle çağrıldı
+    - Başvuru, çıkartılan statik grafik düğümü ile eşleşmeyen genel özelliklerle çağrıldı
+    - Başvuru, "{0}" projesinde ProjectReference öğesi olarak açıkça belirtilmedi
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">"{0}" ortam değişkenini oku</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">{0} metosu null veya boş hedef adları içeren bir koleksiyonla çağrılamaz.</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">Özellik başlangıç değeri: $({0})="{1}" Kaynak: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: Statik graf tek giriş noktası olarak yalnızca bir çözümü kabul eder. Birden çok giriş noktası algılandı: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: Statik graf tek giriş noktası olarak yalnızca bir çözümü kabul eder. Birden çok giriş noktası algılandı: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">"{0}" başlatılmamış özelliğini oku</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index de877a23fb9..fd1afbf8728 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
-    ({1})
-    is building project "{2}" with global properties
+        <target state="translated">MSB4252: 具有全局属性({1})的项目 "{0}"
+    正在
+    生成项目 "{2}"，其中包括全局属性
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    和({4})个目标，但生成项目的生成结果不在引擎缓存中。在独立的生成中，这可能表示以下各项之一:
+    - 调用该引用所使用的目标未在项目 "{0}" 中的 ProjectReferenceTargets 项中指定
+    - 调用引用的全局属性与静态图形推断节点不匹配
+    - 未在项目 "{0}" 中显式将引用指定为 ProjectReference 项
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">读取环境变量“{0}”</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">无法使用包含 null 或空目标名称的集合调用方法 {0}。</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">属性初始值: $({0})=“{1}”，源: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: 静态图仅接受解决方案作为唯一入口点。检测到多个入口点: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: 静态图仅接受解决方案作为唯一入口点。检测到多个入口点: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">读取未初始化的属性“{0}”</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Build/Resources/xlf/Strings.zh-Hant.xlf b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
index 61558f48a1c..6c6f3879ab2 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
@@ -41,14 +41,14 @@
     - the reference was called with global properties that do not match the static graph inferred nodes
     - the reference was not explicitly specified as a ProjectReference item in project "{0}"
     </source>
-        <target state="new">MSB4252: Project "{0}" with global properties
+        <target state="translated">MSB4252: 具有全域屬性的專案 "{0}"
     ({1})
-    is building project "{2}" with global properties
+    正在建置具有全域屬性的專案 "{2}"
     ({3})
-    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
-    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
-    - the reference was called with global properties that do not match the static graph inferred nodes
-    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    具有 ({4}) 個目標，但是已建置專案的組建結果不在引擎快取中。在隔離式組建中，這可能代表下列其中一項情況:
+    - 使用在專案 "{0}" 中 ProjectReferenceTargets 項目內未指定的目標呼叫了參考
+    - 使用與靜態圖表推斷節點不相符的全域屬性呼叫了參考
+    - 未明確指定參考作為專案 "{0}" 中的 ProjectReference 項目
     </target>
         <note>
       {StrBegin="MSB4252:"}
@@ -77,7 +77,7 @@
       </trans-unit>
       <trans-unit id="EnvironmentVariableRead">
         <source>Read environment variable "{0}"</source>
-        <target state="new">Read environment variable "{0}"</target>
+        <target state="translated">讀取環境變數 "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ErrorReadingCacheFile">
@@ -125,6 +125,26 @@
       LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
     </note>
       </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToOnlyOneReferencedItem">
+        <source>Only one item type may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only one item type may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="OM_TargetNameNullOrEmpty">
         <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
         <target state="translated">無法使用內含 null 或空白目標名稱的集合呼叫方法 {0}。</target>
@@ -140,7 +160,7 @@
       </trans-unit>
       <trans-unit id="PropertyAssignment">
         <source>Property initial value: $({0})="{1}" Source: {2}</source>
-        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <target state="translated">屬性初始值: $({0})="{1}" 來源: {2}</target>
         <note />
       </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
@@ -151,8 +171,8 @@
     </note>
       </trans-unit>
       <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
-        <source>MSB4261: Static graph only accepts a solution as the only entry point. Multiple entry points detected: {0}</source>
-        <target state="translated">MSB4261: 靜態圖表只接受解決方案作為唯一的進入點。偵測到多個進入點: {0}</target>
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="needs-review-translation">MSB4261: 靜態圖表只接受解決方案作為唯一的進入點。偵測到多個進入點: {0}</target>
         <note>
       LOCALIZATION: {0} is a semicolon delimited list of files
     </note>
@@ -194,7 +214,7 @@
       </trans-unit>
       <trans-unit id="UninitializedPropertyRead">
         <source>Read uninitialized property "{0}"</source>
-        <target state="new">Read uninitialized property "{0}"</target>
+        <target state="translated">讀取未初始化的屬性 "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="UsingInputCaches">
diff --git a/src/Directory.Build.targets b/src/Directory.Build.targets
index fef2a910123..1953f6976a4 100644
--- a/src/Directory.Build.targets
+++ b/src/Directory.Build.targets
@@ -128,6 +128,7 @@
            Text="TlbExp was not found. Ensure that you have installed everything from .vsconfig. If you have, please report a bug to MSBuild." />
 
     <Exec Command="&quot;$(TlbExpPath)&quot; $(TlbExpVerbosity) /NOLOGO @(TlbExpAssemblyPaths->'/asmpath:&quot;%(Identity)&quot;', ' ') &quot;$(TargetPath)&quot; /out:&quot;$(TargetDir)$(TargetName).tlb&quot;" />
+    <Exec Command="&quot;$(TlbExpPath)&quot; $(TlbExpVerbosity) /NOLOGO @(TlbExpAssemblyPaths->'/asmpath:&quot;%(Identity)&quot;', ' ') &quot;$(TargetPath)&quot; /out:&quot;$(TargetDir)x64\$(TargetName).tlb&quot; /win64" />
   </Target>
 
   <Import Project="$(BUILD_STAGINGDIRECTORY)\MicroBuild\Plugins\MicroBuild.Plugins.IBCMerge.*\**\build\MicroBuild.Plugins.*.targets" Condition="'$(BUILD_STAGINGDIRECTORY)' != '' and $(TargetFramework.StartsWith('net4')) and '$(MicroBuild_EnablePGO)' != 'false'" />
diff --git a/src/Framework/Microsoft.Build.Framework.csproj b/src/Framework/Microsoft.Build.Framework.csproj
index 4481e255400..5983457827a 100644
--- a/src/Framework/Microsoft.Build.Framework.csproj
+++ b/src/Framework/Microsoft.Build.Framework.csproj
@@ -13,9 +13,7 @@
   </ItemGroup>
 
   <ItemGroup>
-    <PackageReference Include="System.Runtime.Serialization.Primitives" Condition="'$(TargetFrameworkIdentifier)' != '.NETFramework'" />
     <PackageReference Include="System.Security.Permissions" Condition="'$(TargetFrameworkIdentifier)' != '.NETFramework'" />
-    <PackageReference Include="System.Threading.Thread" Condition="'$(TargetFrameworkIdentifier)' != '.NETFramework'" />
     <Reference Include="System.Xaml" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'" />
   </ItemGroup>
 
diff --git a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
index de11124f2d9..04697b84240 100644
--- a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
+++ b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
@@ -509,6 +509,29 @@ public void GraphBuildSwitchIdentificationTests(string graph)
             emptyParametersAllowed.ShouldBeFalse();
         }
 
+        [Theory]
+        [InlineData("low")]
+        [InlineData("LOW")]
+        [InlineData("lowpriority")]
+        [InlineData("lowPriority")]
+        public void LowPrioritySwitchIdentificationTests(string lowpriority)
+        {
+            CommandLineSwitches.IsParameterizedSwitch(lowpriority,
+                out CommandLineSwitches.ParameterizedSwitch parameterizedSwitch,
+                out string duplicateSwitchErrorMessage,
+                out bool multipleParametersAllowed,
+                out string missingParametersErrorMessage,
+                out bool unquoteParameters,
+                out bool emptyParametersAllowed).ShouldBeTrue();
+            parameterizedSwitch.ShouldBe(CommandLineSwitches.ParameterizedSwitch.LowPriority);
+            duplicateSwitchErrorMessage.ShouldBeNull();
+            multipleParametersAllowed.ShouldBeFalse();
+            missingParametersErrorMessage.ShouldBeNull();
+            unquoteParameters.ShouldBeTrue();
+            emptyParametersAllowed.ShouldBeFalse();
+        }
+
+
         [Fact]
         public void InputResultsCachesSupportsMultipleOccurrence()
         {
@@ -945,6 +968,7 @@ public void InvalidToolsVersionErrors()
                                         interactive: false,
                                         isolateProjects: false,
                                         graphBuild: false,
+                                        lowPriority: false,
                                         inputResultsCaches: null,
                                         outputResultsCache: null
                         );
diff --git a/src/MSBuild.UnitTests/XMake_Tests.cs b/src/MSBuild.UnitTests/XMake_Tests.cs
index a2aa2c10440..b2acd9e5646 100644
--- a/src/MSBuild.UnitTests/XMake_Tests.cs
+++ b/src/MSBuild.UnitTests/XMake_Tests.cs
@@ -4,6 +4,7 @@
 using System;
 using System.Collections;
 using System.Collections.Generic;
+using System.Diagnostics;
 using System.Globalization;
 using System.IO;
 using System.Linq;
@@ -13,7 +14,6 @@
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 using Microsoft.Build.UnitTests.Shared;
-using Microsoft.Build.UnitTests;
 using Xunit;
 using Xunit.Abstractions;
 using Shouldly;
@@ -1212,6 +1212,54 @@ public void ResponseFileSupportsThisFileDirectory()
             }
         }
 
+        /// <summary>
+        /// Test that low priority builds actually execute with low priority.
+        /// </summary>
+        [Fact]
+        public void LowPriorityBuild()
+        {
+            RunPriorityBuildTest(expectedPrority: ProcessPriorityClass.BelowNormal, arguments: "/low");
+        }
+
+        /// <summary>
+        /// Test that normal builds execute with normal priority.
+        /// </summary>
+        [Fact]
+        public void NormalPriorityBuild()
+        {
+            // In case we are already running at a  different priority, validate
+            // the build runs as the current priority, and not some hard coded priority.
+            ProcessPriorityClass currentPriority = Process.GetCurrentProcess().PriorityClass;
+            RunPriorityBuildTest(expectedPrority: currentPriority);
+        }
+
+        private void RunPriorityBuildTest(ProcessPriorityClass expectedPrority, params string[] arguments)
+        {
+            string[] aggregateArguments = arguments.Union(new string[] { " /nr:false /v:diag "}).ToArray();
+
+            string contents = ObjectModelHelpers.CleanupFileContents(@"
+<Project DefaultTargets=""Build"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">
+ <Target Name=""Build"">
+    <Message Text=""Task priority is '$([System.Diagnostics.Process]::GetCurrentProcess().PriorityClass)'""/>
+ </Target>
+</Project>
+");
+            // Set our test environment variables:
+            //  - Disable in proc build to make sure priority is inherited by subprocesses.
+            //  - Enable property functions so we can easily read our priority class.
+            IDictionary<string, string> environmentVars = new Dictionary<string, string>
+            {
+                { "MSBUILDNOINPROCNODE", "1"},
+                { "DISABLECONSOLECOLOR", "1"},
+                { "MSBUILDENABLEALLPROPERTYFUNCTIONS", "1" },
+            };
+
+            string logContents = ExecuteMSBuildExeExpectSuccess(contents, envsToCreate: environmentVars, arguments: aggregateArguments);
+
+            string expected = string.Format(@"Task priority is '{0}'", expectedPrority);
+            logContents.ShouldContain(expected, () => logContents);
+        }
+
 #region IgnoreProjectExtensionTests
 
         /// <summary>
@@ -1973,7 +2021,7 @@ public void RestoreFirstClearsProjectRootElementCache()
                 }
             };
 
-            string logContents = ExecuteMSBuildExeExpectSuccess(projectContents, preExistingProps, "/restore");
+            string logContents = ExecuteMSBuildExeExpectSuccess(projectContents, filesToCreate: preExistingProps, arguments: "/restore");
 
             logContents.ShouldContain(guid1);
             logContents.ShouldContain(guid2);
@@ -2020,7 +2068,7 @@ public void RestoreIgnoresMissingImports()
                 }
             };
 
-            string logContents = ExecuteMSBuildExeExpectSuccess(projectContents, preExistingProps, "/restore");
+            string logContents = ExecuteMSBuildExeExpectSuccess(projectContents, filesToCreate: preExistingProps, arguments: "/restore");
 
             logContents.ShouldContain(guid1);
             logContents.ShouldContain(guid2);
@@ -2207,7 +2255,7 @@ private string CopyMSBuild()
             }
         }
 
-        private string ExecuteMSBuildExeExpectSuccess(string projectContents, IDictionary<string, string> filesToCreate = null, params string[] arguments)
+        private string ExecuteMSBuildExeExpectSuccess(string projectContents, IDictionary<string, string> filesToCreate = null,  IDictionary<string, string> envsToCreate = null, params string[] arguments)
         {
             using (TestEnvironment testEnvironment = UnitTests.TestEnvironment.Create())
             {
@@ -2221,6 +2269,14 @@ private string ExecuteMSBuildExeExpectSuccess(string projectContents, IDictionar
                     }
                 }
 
+                if (envsToCreate != null)
+                {
+                    foreach (var env in envsToCreate)
+                    {
+                        testEnvironment.SetEnvironmentVariable(env.Key, env.Value);
+                    }
+                }
+
                 bool success;
 
                 string output = RunnerUtilities.ExecMSBuild($"\"{testProject.ProjectFile}\" {String.Join(" ", arguments)}", out success, _output);
diff --git a/src/MSBuild/CommandLineSwitches.cs b/src/MSBuild/CommandLineSwitches.cs
index e986b475459..9f2af74b651 100644
--- a/src/MSBuild/CommandLineSwitches.cs
+++ b/src/MSBuild/CommandLineSwitches.cs
@@ -105,6 +105,7 @@ internal enum ParameterizedSwitch
             GraphBuild,
             InputResultsCaches,
             OutputResultsCache,
+            LowPriority,
             NumberOfParameterizedSwitches,
         }
 
@@ -274,6 +275,7 @@ bool emptyParametersAllowed
             new ParameterizedSwitchInfo(  new string[] { "graphbuild", "graph" },               ParameterizedSwitch.GraphBuild,                 null,                           false,          null,                                  true,   false  ),
             new ParameterizedSwitchInfo(  new string[] { "inputResultsCaches", "irc" },         ParameterizedSwitch.InputResultsCaches,         null,                           true,           null,                                  true,   true   ),
             new ParameterizedSwitchInfo(  new string[] { "outputResultsCache", "orc" },         ParameterizedSwitch.OutputResultsCache,         "DuplicateOutputResultsCache",  false,          null,                                  true,   true   ),
+            new ParameterizedSwitchInfo(  new string[] { "lowpriority", "low" },                ParameterizedSwitch.LowPriority,                null,                           false,          null,                                  true,   false  ),
         };
 
         /// <summary>
diff --git a/src/MSBuild/MSBuild.csproj b/src/MSBuild/MSBuild.csproj
index f86c9b04817..75f5ca314aa 100644
--- a/src/MSBuild/MSBuild.csproj
+++ b/src/MSBuild/MSBuild.csproj
@@ -266,12 +266,8 @@
           BeforeTargets="AssignTargetPaths"
           Condition="'$(MonoBuild)' != 'true'">
     <ItemGroup>
-      <Content Include="$(NuGetPackageRoot)\netstandard.library\2.0.3\build\netstandard2.0\ref\netstandard.dll"
-               Link="ref\netstandard.dll"
-               CopyToOutputDirectory="PreserveNewest" />
-      <Content Include="$(NuGetPackageRoot)\netstandard.library\2.0.3\build\netstandard2.0\ref\mscorlib.dll"
-               Link="ref\mscorlib.dll"
-               CopyToOutputDirectory="PreserveNewest" />
+      <Content Include="$(NuGetPackageRoot)\netstandard.library\2.0.3\build\netstandard2.0\ref\netstandard.dll" Link="ref\netstandard.dll" CopyToOutputDirectory="PreserveNewest" />
+      <Content Include="$(NuGetPackageRoot)\netstandard.library\2.0.3\build\netstandard2.0\ref\mscorlib.dll" Link="ref\mscorlib.dll" CopyToOutputDirectory="PreserveNewest" />
     </ItemGroup>
   </Target>
 
diff --git a/src/MSBuild/OutOfProcTaskHostNode.cs b/src/MSBuild/OutOfProcTaskHostNode.cs
index 875b3749c4a..f29eff427fb 100644
--- a/src/MSBuild/OutOfProcTaskHostNode.cs
+++ b/src/MSBuild/OutOfProcTaskHostNode.cs
@@ -19,6 +19,7 @@
 using Microsoft.Build.Framework;
 using Microsoft.Build.Internal;
 using Microsoft.Build.Shared;
+using Microsoft.Build.Utilities;
 #if FEATURE_APPDOMAIN
 using System.Runtime.Remoting;
 #endif
@@ -697,7 +698,8 @@ private void HandleNodeBuildComplete(NodeBuildComplete buildComplete)
         {
             ErrorUtilities.VerifyThrow(!_isTaskExecuting, "We should never have a task in the process of executing when we receive NodeBuildComplete.");
 
-            _shutdownReason = buildComplete.PrepareForReuse ? NodeEngineShutdownReason.BuildCompleteReuse : NodeEngineShutdownReason.BuildComplete;
+            // TaskHostNodes lock assemblies with custom tasks produced by build scripts if NodeReuse is on. This causes failures if the user builds twice.
+            _shutdownReason = buildComplete.PrepareForReuse && Traits.Instance.EscapeHatches.ReuseTaskHostNodes ? NodeEngineShutdownReason.BuildCompleteReuse : NodeEngineShutdownReason.BuildComplete;
             _shutdownEvent.Set();
         }
 
diff --git a/src/MSBuild/Resources/Strings.resx b/src/MSBuild/Resources/Strings.resx
index 2911461fffc..3484f2cacaa 100644
--- a/src/MSBuild/Resources/Strings.resx
+++ b/src/MSBuild/Resources/Strings.resx
@@ -806,6 +806,20 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
+  <data name="HelpMessage_39_LowPrioritySwitch" Visibility="Public">
+    <value>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </value>
+    <comment>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </comment>
+  </data>
   <data name="InvalidConfigurationFile" Visibility="Public">
     <value>MSBUILD : Configuration error MSB1043: The application could not start. {0}</value>
     <comment>
diff --git a/src/MSBuild/Resources/xlf/Strings.cs.xlf b/src/MSBuild/Resources/xlf/Strings.cs.xlf
index fa4e9982267..d3242d73401 100644
--- a/src/MSBuild/Resources/xlf/Strings.cs.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.cs.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">Argumenty příkazového řádku = {0}</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. Všechna práva vyhrazena.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">Aktuální adresář = {0}</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -185,7 +185,7 @@ Copyright (C) Microsoft Corporation. Všechna práva vyhrazena.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">Podrobnější informace najdete tady: https://aka.ms/msbuild/docs</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -198,19 +198,40 @@ Copyright (C) Microsoft Corporation. Všechna práva vyhrazena.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets[:file]
+                     Vypíše seznam dostupných cílů, aniž by se spustil
+                     samotný proces sestavování. Standardně se výstup zapisuje
+                     do okna konzoly. Pokud se zadá cesta k výstupnímu souboru,
+                     použije se ta.
+                     (Krátký formát: -ts)
+                     Příklad:
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     Nastaví, aby se nástroj MSBuild spustil s nízkou prioritou procesu.
+
+                     Když se zadá -lowPriority, je to totéž jako zadání
+                     -lowPriority:True.
+                     (Krátký tvar: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1099,12 +1120,12 @@ Copyright (C) Microsoft Corporation. Všechna práva vyhrazena.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">Cesta ke spustitelnému souboru MSBuild = {0}</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">Verze MSBuild = {0}</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1207,7 +1228,7 @@ Copyright (C) Microsoft Corporation. Všechna práva vyhrazena.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">Proces = {0}</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1279,7 +1300,7 @@ Copyright (C) Microsoft Corporation. Všechna práva vyhrazena.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: Cíle se nepovedlo vypsat. {0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.de.xlf b/src/MSBuild/Resources/xlf/Strings.de.xlf
index 99c818a7b3e..b12875ea503 100644
--- a/src/MSBuild/Resources/xlf/Strings.de.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.de.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">Befehlszeilenargumente = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. Alle Rechte vorbehalten.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">Aktuelles Verzeichnis = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -185,7 +185,7 @@ Copyright (C) Microsoft Corporation. Alle Rechte vorbehalten.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">Ausführlichere Informationen finden Sie unter https://aka.ms/msbuild/docs.</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -198,19 +198,40 @@ Copyright (C) Microsoft Corporation. Alle Rechte vorbehalten.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets[:file]
+                     Gibt eine Liste der verfügbaren Ziele aus, ohne den
+                     eigentlichen Buildprozess auszuführen. Standardmäßig erfolgt die Ausgabelt im
+                     Konsolenfenster. Bei Angabe eines Pfads zu einer Ausgabedatei
+                     erfolgt die Ausgabe stattdessen in die Ausgabedatei.
+                     (Kurzform: -ts)
+                     Beispiel:
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     Führt dazu, dass MSBuild mit niedriger Prozesspriorität ausgeführt wird.
+
+                     Die Angabe von -lowPriority entspricht der Angabe von
+                     -lowPriority:True.
+                     (Kurzform: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1091,12 +1112,12 @@ Copyright (C) Microsoft Corporation. Alle Rechte vorbehalten.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">Pfad zur ausführbaren MSBuild-Datei = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">MSBuild-Version = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1199,7 +1220,7 @@ Copyright (C) Microsoft Corporation. Alle Rechte vorbehalten.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">Prozess = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1271,7 +1292,7 @@ Copyright (C) Microsoft Corporation. Alle Rechte vorbehalten.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: Ziele konnten nicht ausgegeben werden. {0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.en.xlf b/src/MSBuild/Resources/xlf/Strings.en.xlf
index 340b05667a9..a866ad64681 100644
--- a/src/MSBuild/Resources/xlf/Strings.en.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.en.xlf
@@ -221,6 +221,27 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="new">  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
diff --git a/src/MSBuild/Resources/xlf/Strings.es.xlf b/src/MSBuild/Resources/xlf/Strings.es.xlf
index 60af3a30c9a..84dfcc76473 100644
--- a/src/MSBuild/Resources/xlf/Strings.es.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.es.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">Argumentos de la línea de comandos: "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. Todos los derechos reservados.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">Directorio actual: "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -185,7 +185,7 @@ Copyright (C) Microsoft Corporation. Todos los derechos reservados.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">Para obtener información más detallada, vea https://aka.ms/msbuild/docs</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -198,19 +198,40 @@ Copyright (C) Microsoft Corporation. Todos los derechos reservados.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets[:archivo]
+                     Imprime una lista de los destinos disponibles sin ejecutar el
+                     proceso de compilación en sí. De forma predeterminada, la salida se escribe en
+                     la ventana de la consola. Si se proporciona la ruta de acceso a un
+                     archivo de salida, se usará este en su lugar.
+                     (Forma corta: -ts)
+                     Ejemplo:
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     Hace que MSBuild se ejecute con prioridad de proceso baja.
+
+                     Especificar -lowPriority es igual que especificar
+                     -lowPriority:True.
+                     (Forma corta: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1100,12 +1121,12 @@ Copyright (C) Microsoft Corporation. Todos los derechos reservados.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">Ruta de acceso al ejecutable de MSBuild: "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">Versión de MSBuild: "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1208,7 +1229,7 @@ Copyright (C) Microsoft Corporation. Todos los derechos reservados.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">Proceso: "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1280,7 +1301,7 @@ Copyright (C) Microsoft Corporation. Todos los derechos reservados.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: No se pudieron imprimir los destinos. {0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.fr.xlf b/src/MSBuild/Resources/xlf/Strings.fr.xlf
index 2998a87346d..bc5d0cab144 100644
--- a/src/MSBuild/Resources/xlf/Strings.fr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.fr.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">Arguments de ligne de commande = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. Tous droits réservés.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">Répertoire actif = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -185,7 +185,7 @@ Copyright (C) Microsoft Corporation. Tous droits réservés.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">Pour obtenir des informations plus détaillées, accédez à https://aka.ms/msbuild/docs</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -198,19 +198,40 @@ Copyright (C) Microsoft Corporation. Tous droits réservés.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets[:fichier]
+                     Liste les cibles disponibles sans exécuter le
+                     processus de génération réel. Par défaut, la sortie est écrite dans
+                     la fenêtre de console. Si le chemin d'un fichier de sortie
+                     est fourni, il est utilisé à la place.
+                     (Forme abrégée : -ts)
+                     Exemple :
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     Entraîne l'exécution de MSBuild avec une faible priorité de processus.
+
+                     Spécifier -lowPriority revient à spécifier
+                     -lowPriority:True.
+                     (Forme abrégée : -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1092,12 +1113,12 @@ Copyright (C) Microsoft Corporation. Tous droits réservés.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">Chemin de l'exécutable MSBuild = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">Version de MSBuild = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1200,7 +1221,7 @@ Copyright (C) Microsoft Corporation. Tous droits réservés.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">Processus = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1272,7 +1293,7 @@ Copyright (C) Microsoft Corporation. Tous droits réservés.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: les cibles n'ont pas pu être imprimées. {0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.it.xlf b/src/MSBuild/Resources/xlf/Strings.it.xlf
index 20b4fb9a3e8..792c30f845e 100644
--- a/src/MSBuild/Resources/xlf/Strings.it.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.it.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">Argomenti della riga di comando = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. Tutti i diritti sono riservati.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">Directory corrente = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -192,7 +192,7 @@ Copyright (C) Microsoft Corporation. Tutti i diritti sono riservati.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">Per altre informazioni dettagliate, vedere https://aka.ms/msbuild/docs</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -205,19 +205,40 @@ Copyright (C) Microsoft Corporation. Tutti i diritti sono riservati.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets[:file]
+                     Stampa un elenco di destinazioni disponibili senza eseguire
+                     il processo di compilazione effettivo. Per impostazione predefinita l'output viene scritto nella
+                     finestra della console. Se specificato, verrà v usato
+                     il percorso di un file di output.
+                     Forma breve: -ts
+                     Esempio:
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     Fa in modo che MSBuild venga eseguito con una priorità processi bassa.
+
+                     Specificare -lowPriority equivale a specificare
+                     -lowPriority:True.
+                     Forma breve: -low
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1112,12 +1133,12 @@ Copyright (C) Microsoft Corporation. Tutti i diritti sono riservati.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">Percorso dell'eseguibile di MSBuild = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">Versione di MSBuild = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1220,7 +1241,7 @@ Copyright (C) Microsoft Corporation. Tutti i diritti sono riservati.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">Processo = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1292,7 +1313,7 @@ Copyright (C) Microsoft Corporation. Tutti i diritti sono riservati.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: non è stato possibile stampare le destinazioni. {0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.ja.xlf b/src/MSBuild/Resources/xlf/Strings.ja.xlf
index 50dcccbd76a..c4340920b51 100644
--- a/src/MSBuild/Resources/xlf/Strings.ja.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ja.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">コマンド ライン引数 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation.All rights reserved.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">現在のディレクトリ = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -185,7 +185,7 @@ Copyright (C) Microsoft Corporation.All rights reserved.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">詳細については、https://aka.ms/msbuild/docs をご覧ください</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -198,19 +198,40 @@ Copyright (C) Microsoft Corporation.All rights reserved.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets[:file]
+                     使用可能なターゲットの一覧を、実際のビルド処理を
+                     実行せずに出力します。既定では、出力はコンソール 
+                     ウィンドウに書き込まれます。出力ファイルへのパスを
+                     指定した場合は、代わりにそのファイルが使用されます。
+                     (短い形式:-ts)
+                     例:
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     MSBuild を低プロセス優先度で実行します。
+
+                     -lowPriority を指定することは、
+                     -lowPriority:True を指定するのと同じです。
+                     (短縮形: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1091,12 +1112,12 @@ Copyright (C) Microsoft Corporation.All rights reserved.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">MSBuild 実行可能ファイルのパス = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">MSBuild バージョン = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1199,7 +1220,7 @@ Copyright (C) Microsoft Corporation.All rights reserved.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">プロセス = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1271,7 +1292,7 @@ Copyright (C) Microsoft Corporation.All rights reserved.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: ターゲットを出力できませんでした。{0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.ko.xlf b/src/MSBuild/Resources/xlf/Strings.ko.xlf
index 0aa6ba4fe5e..54603d31f2f 100644
--- a/src/MSBuild/Resources/xlf/Strings.ko.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ko.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">명령줄 인수 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">현재 디렉터리 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -185,7 +185,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">자세한 내용은 https://aka.ms/msbuild/docs를 참조하세요.</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -198,19 +198,40 @@ Copyright (C) Microsoft Corporation. All rights reserved.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
-                       -ts:out.txt
+        <target state="translated">  -targets [: file]
+                     실제 빌드 프로세스를 실행하지 않고
+                     사용 가능한 대상 목록을 출력합니다. 출력은 기본적으로
+                     콘솔 창에 기록됩니다. 출력 파일의 경로를 제공하면
+                     해당 경로가 대신 사용됩니다.
+                     (약식: -ts)
+                     예
+                       -ts: out .txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     MSBuild가 낮은 프로세스 우선 순위로 실행됩니다.
+
+                     -lowPriority를 지정하는 것은 
+                     -lowPriority:True를 지정하는 것과 같습니다.
+                     (약식: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1091,12 +1112,12 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">MSBuild 실행 파일 경로 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">MSBuild 버전 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1199,7 +1220,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">프로세스 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1271,7 +1292,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: 대상을 출력할 수 없습니다. {0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.pl.xlf b/src/MSBuild/Resources/xlf/Strings.pl.xlf
index f99ca5a358a..aff42990b9e 100644
--- a/src/MSBuild/Resources/xlf/Strings.pl.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pl.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">Argumenty wiersza polecenia = „{0}”</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. Wszelkie prawa zastrzeżone.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">Bieżący katalog = „{0}”</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -192,7 +192,7 @@ Copyright (C) Microsoft Corporation. Wszelkie prawa zastrzeżone.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated"> Aby uzyskać więcej szczegółowych informacji, zobacz https://aka.ms/msbuild/docs</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -205,19 +205,40 @@ Copyright (C) Microsoft Corporation. Wszelkie prawa zastrzeżone.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets[:plik]
+                     Drukuje listę dostępnych elementów docelowych bez wykonywania
+                     rzeczywistego procesu kompilacji. Domyślnie dane wyjściowe są zapisywanie w
+                     oknie konsoli. Jeśli zostanie określona ścieżka
+                     do pliku wyjściowego, to zostanie on użyty zamiast okna konsoli.
+                     (Krótka wersja: -ts)
+                     Przykład:
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     Powoduje, że program MSBuild działa jako proces z niskim priorytetem.
+
+                     Określenie opcji -lowPriority oznacza to samo co określenie opcji
+                     -lowPriority:True.
+                     (Krótka forma: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1104,12 +1125,12 @@ Copyright (C) Microsoft Corporation. Wszelkie prawa zastrzeżone.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">Ścieżka do pliku wykonywalnego programu MSBuild = „{0}”</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">Wersja programu MSBuild = „{0}”</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1212,7 +1233,7 @@ Copyright (C) Microsoft Corporation. Wszelkie prawa zastrzeżone.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">Proces = „{0}”</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1284,7 +1305,7 @@ Copyright (C) Microsoft Corporation. Wszelkie prawa zastrzeżone.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: Nie można wydrukować elementów docelowych. {0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
index 7b88570d489..e406782e4b3 100644
--- a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">Argumentos de linha de comando = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. Todos os direitos reservados.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">Diretório atual = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -186,7 +186,7 @@ isoladamente.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">Para obter informações detalhadas, consulte https://aka.ms/msbuild/docs</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -199,19 +199,40 @@ isoladamente.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets [:arquivo]
+                     Imprime uma lista de destinos disponíveis sem executar o
+                     processo de compilação real. Por padrão, a saída é gravada na
+                     janela do console. Se o caminho para um arquivo de saída
+                     for fornecido, isso será usado.
+                     (Forma abreviada:-ts)
+                     Exemplo:
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     Faz com que o MSBuild seja executado a uma prioridade baixa de processo.
+
+                     A especificação de -lowPriority é igual à especificação de
+                     -lowPriority:True.
+                     (Forma abreviada: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1092,12 +1113,12 @@ isoladamente.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">Caminho executável do MSBuild = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">Versão do MSBuild = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1200,7 +1221,7 @@ isoladamente.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">Processo = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1272,7 +1293,7 @@ isoladamente.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: não foi possível imprimir destinos. {0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.ru.xlf b/src/MSBuild/Resources/xlf/Strings.ru.xlf
index 4d3fa935718..f735d35d2be 100644
--- a/src/MSBuild/Resources/xlf/Strings.ru.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ru.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">Аргументы командной строки = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">Текущий каталог = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -184,7 +184,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">Дополнительные сведения см. по адресу https://aka.ms/msbuild/docs</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -197,19 +197,40 @@ Copyright (C) Microsoft Corporation. All rights reserved.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets[:file]
+                     Выводит список доступных целевых объектов без выполнения
+                     фактического процесса сборки. ПО умолчанию выходные данные записываются в
+                     окно консоли. Если указан пусть к выходному
+                     файлу, будет использоваться он.
+                     (Краткая форма: -ts)
+                     Пример:
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     Запускает MSBuild с низким приоритетом процесса.
+
+                     Указание -lowPriority аналогично указанию
+                     -lowPriority:True.
+                     (Краткая форма: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1091,12 +1112,12 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">Путь к исполняемому файлу MSBuild = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">Версия MSBuild = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1199,7 +1220,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">Процесс = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1271,7 +1292,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: не удалось вывести целевые объекты. {0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.tr.xlf b/src/MSBuild/Resources/xlf/Strings.tr.xlf
index 9b66eec9a29..aac67729919 100644
--- a/src/MSBuild/Resources/xlf/Strings.tr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.tr.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">Komut satırı bağımsız değişkenleri = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Telif Hakkı (C) Microsoft Corporation. Tüm hakları saklıdır.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">Geçerli dizin = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -185,7 +185,7 @@ Telif Hakkı (C) Microsoft Corporation. Tüm hakları saklıdır.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">Ayrıntılı bilgi için bkz. https://aka.ms/msbuild/docs</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -198,19 +198,40 @@ Telif Hakkı (C) Microsoft Corporation. Tüm hakları saklıdır.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
-                       -ts:out.txt
+        <target state="translated">  -targets[:dosya]
+                     Gerçek derleme işlemini yürütmeden
+                     kullanılabilir hedeflerin bir listesini yazdırır. Varsayılan olarak çıkış, konsol penceresine
+                     yazdırılır. Çıkış dosyasının yolu sağlanmışsa
+                     konsol penceresi yerine bu dosya kullanılır.
+                     (Kısa biçim:-ts)
+                     Örnek:
+                       -ts:çıkış.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     MSBuild'ın düşük işlem önceliğinde çalışmasına neden olur.
+
+                     -lowPriority belirtilmesi -lowPriority:True belirtilmesiyle
+                     aynıdır.
+                     (Kısa biçim: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1095,12 +1116,12 @@ Telif Hakkı (C) Microsoft Corporation. Tüm hakları saklıdır.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">MSBuild yürütülebilir yolu = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">MSBuild sürümü = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1203,7 +1224,7 @@ Telif Hakkı (C) Microsoft Corporation. Tüm hakları saklıdır.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">İşlem = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1275,7 +1296,7 @@ Telif Hakkı (C) Microsoft Corporation. Tüm hakları saklıdır.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: Hedefler yazdırılamadı. {0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
index 9cda849791a..e44b94a0e59 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">命令行参数 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">当前目录 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -185,7 +185,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">有关更详细信息，请参阅 https://aka.ms/msbuild/docs</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -198,19 +198,40 @@ Copyright (C) Microsoft Corporation. All rights reserved.
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets[:file]
+                     打印可用目标的列表，但不执行
+                     实际生成过程。默认情况下，输出写入到
+                     控制台窗口。如果输出文件的路径
+                     已提供，则改用该路径。
+                     (简写形式: -ts)
+                     示例:
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     导致 MSBuild 在低进程优先级的情况下运行。
+
+                     指定 -lowPriority 与指定
+                     -lowPriority:True 相同。
+                     (缩写: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1091,12 +1112,12 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">MSBuild 可执行文件路径 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">MSBuild 版本 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1199,7 +1220,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">进程 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1271,7 +1292,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: 无法打印目标。{0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
index dd7e4a7a4a3..0d183976b13 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
@@ -12,7 +12,7 @@
       </trans-unit>
       <trans-unit id="CommandLine">
         <source>Command line arguments = "{0}"</source>
-        <target state="new">Command line arguments = "{0}"</target>
+        <target state="translated">命令列引數 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ConfigurationFailurePrefixNoErrorCode">
@@ -39,7 +39,7 @@ Copyright (C) Microsoft Corporation. 著作權所有，並保留一切權利。
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
-        <target state="new">Current directory = "{0}"</target>
+        <target state="translated">目前目錄 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="DuplicateOutputResultsCache">
@@ -185,7 +185,7 @@ Copyright (C) Microsoft Corporation. 著作權所有，並保留一切權利。
       </trans-unit>
       <trans-unit id="HelpMessage_37_DocsLink">
         <source>For more detailed information, see https://aka.ms/msbuild/docs</source>
-        <target state="new">For more detailed information, see https://aka.ms/msbuild/docs</target>
+        <target state="translated">如需詳細資訊，請參閱 https://aka.ms/msbuild/docs</target>
         <note />
       </trans-unit>
       <trans-unit id="HelpMessage_38_TargetsSwitch">
@@ -198,19 +198,40 @@ Copyright (C) Microsoft Corporation. 著作權所有，並保留一切權利。
                      Example:
                        -ts:out.txt
     </source>
-        <target state="new">  -targets[:file]
-                     Prints a list of available targets without executing the
-                     actual build process. By default the output is written to
-                     the console window. If the path to an output file
-                     is provided that will be used instead.
-                     (Short form: -ts)
-                     Example:
+        <target state="translated">  -targets[:file]
+                     列印可用目標的清單，但不執行
+                     實際建置流程。根據預設，會將輸出寫入
+                     主控台視窗。若有提供輸出檔案的路徑
+                     則會改用該路徑。
+                     (簡短形式: -ts)
+                     例如
                        -ts:out.txt
     </target>
         <note>
       LOCALIZATION: "MSBuild" should not be localized.
       LOCALIZATION: "-targets" and "-ts" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_39_LowPrioritySwitch">
+        <source>  -lowPriority[:True|False]
+                     Causes MSBuild to run at low process priority.
+
+                     Specifying -lowPriority is the same as specifying
+                     -lowPriority:True.
+                     (Short form: -low)
+    </source>
+        <target state="translated">  -lowPriority[:True|False]
+                     讓 MSBuild 以低處理序優先順序執行。
+
+                     指定 -lowPriority 與指定
+                     -lowPriority:True 相同。
+                     (簡短形式: -low)
+    </target>
+        <note>
+      LOCALIZATION: "MSBuild" should not be localized.
+      LOCALIZATION: "-lowPriority" and "-low" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="HelpMessage_3_SwitchesHeader">
@@ -1091,12 +1112,12 @@ Copyright (C) Microsoft Corporation. 著作權所有，並保留一切權利。
       </trans-unit>
       <trans-unit id="MSBExePath">
         <source>MSBuild executable path = "{0}"</source>
-        <target state="new">MSBuild executable path = "{0}"</target>
+        <target state="translated">MSBuild 可執行檔路徑 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MSBVersion">
         <source>MSBuild version = "{0}"</source>
-        <target state="new">MSBuild version = "{0}"</target>
+        <target state="translated">MSBuild 版本 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="MissingLoggerError">
@@ -1199,7 +1220,7 @@ Copyright (C) Microsoft Corporation. 著作權所有，並保留一切權利。
       </trans-unit>
       <trans-unit id="Process">
         <source>Process = "{0}"</source>
-        <target state="new">Process = "{0}"</target>
+        <target state="translated">流程 = "{0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectNotFoundError">
@@ -1271,7 +1292,7 @@ Copyright (C) Microsoft Corporation. 著作權所有，並保留一切權利。
       </trans-unit>
       <trans-unit id="TargetsCouldNotBePrinted">
         <source>MSBUILD : error MSB1059: Targets could not be printed. {0}</source>
-        <target state="new">MSBUILD : error MSB1059: Targets could not be printed. {0}</target>
+        <target state="translated">MSBUILD : error MSB1059: 無法列印目標。{0}</target>
         <note>{StrBegin="MSBUILD : error MSB1059: "}</note>
       </trans-unit>
       <trans-unit id="UnexpectedParametersError">
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 7b96f13f170..f4a29c07fab 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -567,6 +567,7 @@ string [] commandLine
                 bool interactive = false;
                 bool isolateProjects = false;
                 bool graphBuild = false;
+                bool lowPriority = false;
                 string[] inputResultsCaches = null;
                 string outputResultsCache = null;
 
@@ -604,6 +605,7 @@ string [] commandLine
                         ref graphBuild,
                         ref inputResultsCaches,
                         ref outputResultsCache,
+                        ref lowPriority,
                         recursing: false
                         ))
                 {
@@ -624,6 +626,11 @@ string [] commandLine
                         Environment.SetEnvironmentVariable("MSBUILDLOADALLFILESASWRITEABLE", "1");
                     }
 
+                    // Honor the low priority flag, we place our selves below normal
+                    // priority and let sub processes inherit that priority.
+                    ProcessPriorityClass priority = lowPriority ? ProcessPriorityClass.BelowNormal : ProcessPriorityClass.Normal;
+                    Process.GetCurrentProcess().PriorityClass = priority;
+
                     DateTime t1 = DateTime.Now;
 
                     // If the primary file passed to MSBuild is a .binlog file, play it back into passed loggers
@@ -665,6 +672,7 @@ string [] commandLine
                                     interactive,
                                     isolateProjects,
                                     graphBuild,
+                                    lowPriority,
                                     inputResultsCaches,
                                     outputResultsCache))
                             {
@@ -974,6 +982,7 @@ internal static bool BuildProject
             bool interactive,
             bool isolateProjects,
             bool graphBuild,
+            bool lowPriority,
             string[] inputResultsCaches,
             string outputResultsCache
         )
@@ -1127,6 +1136,7 @@ string outputResultsCache
                     }
 
                     parameters.EnableNodeReuse = enableNodeReuse;
+                    parameters.LowPriority = lowPriority;
 #if FEATURE_ASSEMBLY_LOCATION
                     parameters.NodeExeLocation = Assembly.GetExecutingAssembly().Location;
 #else
@@ -2099,6 +2109,7 @@ private static bool ProcessCommandLineSwitches
             ref bool graphBuild,
             ref string[] inputResultsCaches,
             ref string outputResultsCache,
+            ref bool lowPriority,
             bool recursing
         )
         {
@@ -2215,6 +2226,7 @@ bool recursing
                                                                ref graphBuild,
                                                                ref inputResultsCaches,
                                                                ref outputResultsCache,
+                                                               ref lowPriority,
                                                                recursing: true
                                                              );
                         }
@@ -2279,6 +2291,11 @@ bool recursing
                         graphBuild = ProcessBooleanSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GraphBuild], defaultValue: true, resourceName: "InvalidGraphBuildValue");
                     }
 
+                    if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.LowPriority))
+                    {
+                        lowPriority = ProcessBooleanSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.LowPriority], defaultValue: true, resourceName: "InvalidLowPriorityValue");
+                    }
+
                     inputResultsCaches = ProcessInputResultsCaches(commandLineSwitches);
 
                     outputResultsCache = ProcessOutputResultsCache(commandLineSwitches);
@@ -2607,8 +2624,9 @@ private static void StartLocalNode(CommandLineSwitches commandLineSwitches)
 
                         // If FEATURE_NODE_REUSE is OFF, just validates that the switch is OK, and always returns False
                         bool nodeReuse = ProcessNodeReuseSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.NodeReuse]);
+                        bool lowpriority = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.LowPriority][0].Equals("true");
 
-                        shutdownReason = node.Run(nodeReuse, out nodeException);
+                        shutdownReason = node.Run(nodeReuse, lowpriority, out nodeException);
 
                         FileUtilities.ClearCacheDirectory();
                     }
@@ -3777,6 +3795,7 @@ private static void ShowHelpMessage()
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_InputCachesFiles"));
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_OutputCacheFile"));
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_36_GraphBuildSwitch"));
+            Console.WriteLine(AssemblyResources.GetString("HelpMessage_39_LowPrioritySwitch"));
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_7_ResponseFile"));
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_8_NoAutoResponseSwitch"));
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_5_NoLogoSwitch"));
diff --git a/src/MSBuild/app.amd64.config b/src/MSBuild/app.amd64.config
index d175b224579..f37149aca5d 100644
--- a/src/MSBuild/app.amd64.config
+++ b/src/MSBuild/app.amd64.config
@@ -48,8 +48,8 @@
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="Microsoft.Build.CPPTasks.Common" culture="neutral" publicKeyToken="b03f5f7f11d50a3a" />
-          <bindingRedirect oldVersion="16.0.0.0-16.6.0.0" newVersion="16.6.0.0" />
-          <codeBase version="16.6.0.0" href="..\..\..\Microsoft\VC\v160\Microsoft.Build.CPPTasks.Common.dll" />
+          <bindingRedirect oldVersion="16.0.0.0-16.7.0.0" newVersion="16.7.0.0" />
+          <codeBase version="16.7.0.0" href="..\..\..\Microsoft\VC\v160\Microsoft.Build.CPPTasks.Common.dll" />
         </dependentAssembly>
 
         <!-- Redirects for components dropped by Visual Studio -->
diff --git a/src/MSBuild/app.config b/src/MSBuild/app.config
index 15228cfffa0..7e595eacfc0 100644
--- a/src/MSBuild/app.config
+++ b/src/MSBuild/app.config
@@ -54,8 +54,8 @@
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="Microsoft.Build.CPPTasks.Common" culture="neutral" publicKeyToken="b03f5f7f11d50a3a" />
-          <bindingRedirect oldVersion="16.0.0.0-16.6.0.0" newVersion="16.6.0.0" />
-          <codeBase version="16.6.0.0" href="..\..\Microsoft\VC\v160\Microsoft.Build.CPPTasks.Common.dll" />
+          <bindingRedirect oldVersion="16.0.0.0-16.7.0.0" newVersion="16.7.0.0" />
+          <codeBase version="16.7.0.0" href="..\..\Microsoft\VC\v160\Microsoft.Build.CPPTasks.Common.dll" />
         </dependentAssembly>
 
         <!-- Workaround for crash in C++ CodeAnalysis scenarios due to https://github.com/Microsoft/msbuild/issues/1675 -->
diff --git a/src/Package/GetBinPaths.targets b/src/Package/GetBinPaths.targets
index 66a92b8eee5..f3b734eceb9 100644
--- a/src/Package/GetBinPaths.targets
+++ b/src/Package/GetBinPaths.targets
@@ -9,6 +9,11 @@
                       OutputItemType="MSBuildResolvedProjectReferencePath"
                       SetTargetFramework="TargetFramework=$(TargetFramework)"/>
 
+    <ProjectReference Include="$(MSBuildThisFileDirectory)\..\Framework\Microsoft.Build.Framework.csproj"
+                      Private="false"
+                      ReferenceOutputAssembly="false"
+                      OutputItemType="FrameworkResolvedProjectReferencePath" />
+
     <ProjectReference Include="$(MSBuildThisFileDirectory)\..\MSBuildTaskHost\MSBuildTaskHost.csproj"
                       Private="false"
                       ReferenceOutputAssembly="false"
@@ -47,6 +52,7 @@
     <PropertyGroup>
       <X86BinPath>@(MSBuildResolvedProjectReferencePath->'%(RootDir)%(Directory)')</X86BinPath>
       <X64BinPath>@(MSBuildX64ResolvedProjectReferencePath->'%(RootDir)%(Directory)')</X64BinPath>
+      <FrameworkBinPath>@(FrameworkResolvedProjectReferencePath->'%(RootDir)%(Directory)')</FrameworkBinPath>
       <MSBuildTaskHostBinPath>@(MSBuildTaskHostResolvedProjectReferencePath->'%(RootDir)%(Directory)')</MSBuildTaskHostBinPath>
       <MSBuildTaskHostX64BinPath>@(MSBuildTaskHostX64ResolvedProjectReferencePath->'%(RootDir)%(Directory)')</MSBuildTaskHostX64BinPath>
       <MSBuildConversionBinPath>@(MSBuildConversionResolvedProjectReferencePath->'%(RootDir)%(Directory)')</MSBuildConversionBinPath>
diff --git a/src/Package/MSBuild.VSSetup/MSBuild.VSSetup.csproj b/src/Package/MSBuild.VSSetup/MSBuild.VSSetup.csproj
index dcf2efd11e7..ed375f4b0e7 100644
--- a/src/Package/MSBuild.VSSetup/MSBuild.VSSetup.csproj
+++ b/src/Package/MSBuild.VSSetup/MSBuild.VSSetup.csproj
@@ -34,6 +34,7 @@
       <SwrProperty Include="Version=$(VsixVersion)" />
       <SwrProperty Include="X86BinPath=$(X86BinPath)" />
       <SwrProperty Include="X64BinPath=$(X64BinPath)" />
+      <SwrProperty Include="FrameworkBinPath=$(FrameworkBinPath)" />
       <SwrProperty Include="TaskHostBinPath=$(MSBuildTaskHostBinPath)" />
       <SwrProperty Include="TaskHostX64BinPath=$(MSBuildTaskHostX64BinPath)" />
       <SwrProperty Include="MSBuildConversionBinPath=$(MSBuildConversionBinPath)" />
diff --git a/src/Package/MSBuild.VSSetup/files.swr b/src/Package/MSBuild.VSSetup/files.swr
index 3a0d9203509..bdff4bb1c63 100644
--- a/src/Package/MSBuild.VSSetup/files.swr
+++ b/src/Package/MSBuild.VSSetup/files.swr
@@ -177,6 +177,7 @@ folder InstallDir:\MSBuild\Current\Bin\amd64
   file source=$(X86BinPath)Microsoft.Build.dll vs.file.ngenArchitecture=all
   file source=$(MSBuildConversionBinPath)Microsoft.Build.Engine.dll vs.file.ngenArchitecture=all
   file source=$(X86BinPath)Microsoft.Build.Framework.dll vs.file.ngenArchitecture=all
+  file source=$(FrameworkBinPath)x64\Microsoft.Build.Framework.tlb
   file source=$(X86BinPath)Microsoft.Build.Tasks.Core.dll vs.file.ngenArchitecture=all
   file source=$(X86BinPath)Microsoft.Build.Utilities.Core.dll vs.file.ngenArchitecture=all
   file source=$(X86BinPath)System.Buffers.dll vs.file.ngenArchitecture=all
diff --git a/src/Samples/Directory.Build.targets b/src/Samples/Directory.Build.targets
index 9bc968b044b..78b52aab854 100644
--- a/src/Samples/Directory.Build.targets
+++ b/src/Samples/Directory.Build.targets
@@ -1,7 +1,7 @@
 ﻿<Project>
 
   <ItemGroup>
-    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0-alpha-004" PrivateAssets="all"/>
+    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0" PrivateAssets="all"/>
     <PackageReference Include="Microsoft.VisualStudio.SDK.EmbedInteropTypes" Version="15.0.15" PrivateAssets="All" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'" />
   </ItemGroup>
 
diff --git a/src/Shared/AssemblyNameExtension.cs b/src/Shared/AssemblyNameExtension.cs
index 78b09cdefbf..758e90ee4e6 100644
--- a/src/Shared/AssemblyNameExtension.cs
+++ b/src/Shared/AssemblyNameExtension.cs
@@ -188,15 +188,15 @@ internal static AssemblyNameExtension GetAssemblyNameEx(string path)
             {
                 assemblyName = AssemblyName.GetAssemblyName(path);
             }
-            catch (System.IO.FileLoadException)
+            catch (FileLoadException)
             {
                 // Its pretty hard to get here, you need an assembly that contains a valid reference
                 // to a dependent assembly that, in turn, throws a FileLoadException during GetAssemblyName.
                 // Still it happened once, with an older version of the CLR. 
 
-                // ...falling through and relying on the targetAssemblyName==null behavior below...
+                // ...falling through and relying on the assemblyName == null behavior below...
             }
-            catch (System.IO.FileNotFoundException)
+            catch (FileNotFoundException)
             {
                 // Its pretty hard to get here, also since we do a file existence check right before calling this method so it can only happen if the file got deleted between that check and this call.
             }
diff --git a/src/Shared/CopyOnWriteDictionary.cs b/src/Shared/CopyOnWriteDictionary.cs
index fca69470e93..b884ff4389c 100644
--- a/src/Shared/CopyOnWriteDictionary.cs
+++ b/src/Shared/CopyOnWriteDictionary.cs
@@ -34,7 +34,7 @@ namespace Microsoft.Build.Collections
     /// be run in a separate appdomain.
     /// </comment>
     [Serializable]
-    internal class CopyOnWriteDictionary<K, V> : IDictionary<K, V>, IDictionary where V : class
+    internal class CopyOnWriteDictionary<K, V> : IDictionary<K, V>, IDictionary
     {
 #if DEBUG
         /// <summary>
@@ -488,7 +488,7 @@ internal bool HasSameBacking(CopyOnWriteDictionary<K, V> other)
         /// <typeparam name="K1">The key type.</typeparam>
         /// <typeparam name="V1">The value type.</typeparam>
         [Serializable]
-        private class CopyOnWriteBackingDictionary<K1, V1> : Dictionary<K1, V1> where V1 : class
+        private class CopyOnWriteBackingDictionary<K1, V1> : Dictionary<K1, V1>
         {
             /// <summary>
             /// An empty dictionary 
diff --git a/src/Shared/FileMatcher.cs b/src/Shared/FileMatcher.cs
index 09950a60c49..967e012016b 100644
--- a/src/Shared/FileMatcher.cs
+++ b/src/Shared/FileMatcher.cs
@@ -1465,7 +1465,7 @@ internal void GetFileSpecInfoWithRegexObject(
                 : null;
         }
 
-        internal delegate Tuple<string, string, string> FixupParts(
+        internal delegate (string fixedDirectoryPart, string recursiveDirectoryPart, string fileNamePart) FixupParts(
             string fixedDirectoryPart,
             string recursiveDirectoryPart,
             string filenamePart);
@@ -1491,7 +1491,6 @@ internal void GetFileSpecInfo(
             out bool isLegalFileSpec,
             FixupParts fixupParts = null)
         {
-            isLegalFileSpec = true;
             needsRecursion = false;
             fixedDirectoryPart = String.Empty;
             wildcardDirectoryPart = String.Empty;
@@ -1513,10 +1512,9 @@ internal void GetFileSpecInfo(
             {
                 var newParts = fixupParts(fixedDirectoryPart, wildcardDirectoryPart, filenamePart);
 
-                // todo use named tuples when they'll be available
-                fixedDirectoryPart = newParts.Item1;
-                wildcardDirectoryPart = newParts.Item2;
-                filenamePart = newParts.Item3;
+                fixedDirectoryPart = newParts.fixedDirectoryPart;
+                wildcardDirectoryPart = newParts.recursiveDirectoryPart;
+                filenamePart = newParts.fileNamePart;
             }
 
             /*
diff --git a/src/Shared/FileUtilities.cs b/src/Shared/FileUtilities.cs
index 92c330b45e3..be4f2f5cd6e 100644
--- a/src/Shared/FileUtilities.cs
+++ b/src/Shared/FileUtilities.cs
@@ -53,8 +53,31 @@ internal static void ClearCacheDirectoryPath()
             cacheDirectory = null;
         }
 
-        // TODO: assumption on file system case sensitivity: https://github.com/Microsoft/msbuild/issues/781
-        internal static readonly StringComparison PathComparison = StringComparison.OrdinalIgnoreCase;
+        internal static readonly StringComparison PathComparison = GetIsFileSystemCaseSensitive() ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase;
+
+        /// <summary>
+        /// Determines whether the file system is case sensitive.
+        /// Copied from https://github.com/dotnet/runtime/blob/73ba11f3015216b39cb866d9fb7d3d25e93489f2/src/libraries/Common/src/System/IO/PathInternal.CaseSensitivity.cs#L41-L59
+        /// </summary>
+        public static bool GetIsFileSystemCaseSensitive()
+        {
+            try
+            {
+                string pathWithUpperCase = Path.Combine(Path.GetTempPath(), "CASESENSITIVETEST" + Guid.NewGuid().ToString("N"));
+                using (new FileStream(pathWithUpperCase, FileMode.CreateNew, FileAccess.ReadWrite, FileShare.None, 0x1000, FileOptions.DeleteOnClose))
+                {
+                    string lowerCased = pathWithUpperCase.ToLowerInvariant();
+                    return !File.Exists(lowerCased);
+                }
+            }
+            catch (Exception exc)
+            {
+                // In case something goes terribly wrong, we don't want to fail just because
+                // of a casing test, so we assume case-insensitive-but-preserving.
+                Debug.Fail("Casing test failed: " + exc);
+                return false;
+            }
+        }
 
         /// <summary>
         /// Copied from https://github.com/dotnet/corefx/blob/056715ff70e14712419d82d51c8c50c54b9ea795/src/Common/src/System/IO/PathInternal.Windows.cs#L61
diff --git a/src/Shared/FrameworkLocationHelper.cs b/src/Shared/FrameworkLocationHelper.cs
index d2e6cb2eaf1..7b86e274cdf 100644
--- a/src/Shared/FrameworkLocationHelper.cs
+++ b/src/Shared/FrameworkLocationHelper.cs
@@ -308,28 +308,28 @@ internal static class FrameworkLocationHelper
         /// The rules are maintained in a 2-dimensions array. Each row defines a rule. The first column
         /// defines the trigger condition. The second column defines the fallback .net and VS versions.
         /// </remarks>
-        private static readonly Tuple<Version, Version>[,] s_explicitFallbackRulesForPathToDotNetFrameworkSdkTools =
+        private static readonly (Version, Version)[,] s_explicitFallbackRulesForPathToDotNetFrameworkSdkTools =
         {
             // VS12
-            { Tuple.Create(dotNetFrameworkVersion451, visualStudioVersion120), Tuple.Create(dotNetFrameworkVersion45, visualStudioVersion120) },
-            { Tuple.Create(dotNetFrameworkVersion452, visualStudioVersion120), Tuple.Create(dotNetFrameworkVersion451, visualStudioVersion120) },
+            { (dotNetFrameworkVersion451, visualStudioVersion120), (dotNetFrameworkVersion45, visualStudioVersion120) },
+            { (dotNetFrameworkVersion452, visualStudioVersion120), (dotNetFrameworkVersion451, visualStudioVersion120) },
 
             // VS14
-            { Tuple.Create(dotNetFrameworkVersion451, visualStudioVersion140), Tuple.Create(dotNetFrameworkVersion45, visualStudioVersion140) },
-            { Tuple.Create(dotNetFrameworkVersion452, visualStudioVersion140), Tuple.Create(dotNetFrameworkVersion451, visualStudioVersion140) },
-            { Tuple.Create(dotNetFrameworkVersion46, visualStudioVersion140), Tuple.Create(dotNetFrameworkVersion451, visualStudioVersion140) },
-            { Tuple.Create(dotNetFrameworkVersion461, visualStudioVersion140), Tuple.Create(dotNetFrameworkVersion46, visualStudioVersion140) },
+            { (dotNetFrameworkVersion451, visualStudioVersion140), (dotNetFrameworkVersion45, visualStudioVersion140) },
+            { (dotNetFrameworkVersion452, visualStudioVersion140), (dotNetFrameworkVersion451, visualStudioVersion140) },
+            { (dotNetFrameworkVersion46, visualStudioVersion140), (dotNetFrameworkVersion451, visualStudioVersion140) },
+            { (dotNetFrameworkVersion461, visualStudioVersion140), (dotNetFrameworkVersion46, visualStudioVersion140) },
 
             // VS15
-            { Tuple.Create(dotNetFrameworkVersion451, visualStudioVersion150), Tuple.Create(dotNetFrameworkVersion45, visualStudioVersion150) },
-            { Tuple.Create(dotNetFrameworkVersion452, visualStudioVersion150), Tuple.Create(dotNetFrameworkVersion451, visualStudioVersion150) },
-            { Tuple.Create(dotNetFrameworkVersion46, visualStudioVersion150), Tuple.Create(dotNetFrameworkVersion451, visualStudioVersion150) },
-            { Tuple.Create(dotNetFrameworkVersion461, visualStudioVersion150), Tuple.Create(dotNetFrameworkVersion46, visualStudioVersion150) },
-            { Tuple.Create(dotNetFrameworkVersion462, visualStudioVersion150), Tuple.Create(dotNetFrameworkVersion461, visualStudioVersion150) },
-            { Tuple.Create(dotNetFrameworkVersion47, visualStudioVersion150), Tuple.Create(dotNetFrameworkVersion462, visualStudioVersion150) },
-            { Tuple.Create(dotNetFrameworkVersion471, visualStudioVersion150), Tuple.Create(dotNetFrameworkVersion47, visualStudioVersion150) },
-            { Tuple.Create(dotNetFrameworkVersion472, visualStudioVersion150), Tuple.Create(dotNetFrameworkVersion471, visualStudioVersion150) },
-            { Tuple.Create(dotNetFrameworkVersion48, visualStudioVersion150), Tuple.Create(dotNetFrameworkVersion472, visualStudioVersion150) },
+            { (dotNetFrameworkVersion451, visualStudioVersion150), (dotNetFrameworkVersion45, visualStudioVersion150) },
+            { (dotNetFrameworkVersion452, visualStudioVersion150), (dotNetFrameworkVersion451, visualStudioVersion150) },
+            { (dotNetFrameworkVersion46, visualStudioVersion150), (dotNetFrameworkVersion451, visualStudioVersion150) },
+            { (dotNetFrameworkVersion461, visualStudioVersion150), (dotNetFrameworkVersion46, visualStudioVersion150) },
+            { (dotNetFrameworkVersion462, visualStudioVersion150), (dotNetFrameworkVersion461, visualStudioVersion150) },
+            { (dotNetFrameworkVersion47, visualStudioVersion150), (dotNetFrameworkVersion462, visualStudioVersion150) },
+            { (dotNetFrameworkVersion471, visualStudioVersion150), (dotNetFrameworkVersion47, visualStudioVersion150) },
+            { (dotNetFrameworkVersion472, visualStudioVersion150), (dotNetFrameworkVersion471, visualStudioVersion150) },
+            { (dotNetFrameworkVersion48, visualStudioVersion150), (dotNetFrameworkVersion472, visualStudioVersion150) },
        };
 #endif // FEATURE_WIN32_REGISTRY
 
diff --git a/src/Shared/OpportunisticIntern.cs b/src/Shared/OpportunisticIntern.cs
index ea9cdf72ad2..7761a103d8d 100644
--- a/src/Shared/OpportunisticIntern.cs
+++ b/src/Shared/OpportunisticIntern.cs
@@ -116,9 +116,9 @@ internal interface IInternable
             string ExpensiveConvertToString();
 
             /// <summary>
-            /// Compare target to string. Assumes lengths are equal.
+            /// Compare target to string. Assumes string is of equal or smaller length than target.
             /// </summary>
-            bool IsOrdinalEqualToStringOfSameLength(string other);
+            bool StartsWithStringByOrdinalComparison(string other);
 
             /// <summary>
             /// Reference compare target to string. If target is non-string this should return false.
@@ -160,7 +160,7 @@ internal static void EnableStatisticsGathering()
         /// <summary>
         /// Intern the given internable.
         /// </summary>
-        internal static string InternableToString(IInternable candidate)
+        internal static string InternableToString<T>(T candidate) where T : IInternable
         {
             if (s_whatIfInfinite != null)
             {
@@ -275,14 +275,14 @@ public string ExpensiveConvertToString()
             }
 
             /// <summary>
-            /// Compare target to string. Assumes lengths are equal.
+            /// Compare target to string. Assumes string is of equal or smaller length than target.
             /// </summary>
-            public bool IsOrdinalEqualToStringOfSameLength(string other)
+            public bool StartsWithStringByOrdinalComparison(string other)
             {
 #if DEBUG
-                ErrorUtilities.VerifyThrow(other.Length == _target.Length, "should be same length");
+                ErrorUtilities.VerifyThrow(other.Length <= _target.Length, "should be at most as long as target");
 #endif
-                int length = _target.Length;
+                int length = other.Length;
 
                 // Backwards because the end of the string is (by observation of Australian Government build) more likely to be different earlier in the loop.
                 // For example, C:\project1, C:\project2
@@ -383,16 +383,16 @@ public string ExpensiveConvertToString()
             }
 
             /// <summary>
-            /// Compare target to string. Assumes lengths are equal.
+            /// Compare target to string. Assumes string is of equal or smaller length than target.
             /// </summary>
-            public bool IsOrdinalEqualToStringOfSameLength(string other)
+            public bool StartsWithStringByOrdinalComparison(string other)
             {
 #if DEBUG
-                ErrorUtilities.VerifyThrow(other.Length == Length, "should be same length");
+                ErrorUtilities.VerifyThrow(other.Length <= Length, "should be at most as long as target");
 #endif
                 // Backwards because the end of the string is (by observation of Australian Government build) more likely to be different earlier in the loop.
                 // For example, C:\project1, C:\project2
-                for (int i = Length - 1; i >= 0; --i)
+                for (int i = other.Length - 1; i >= 0; --i)
                 {
                     if (_target[i + _startIndex] != other[i])
                     {
@@ -451,11 +451,11 @@ internal StringInternTarget(string target)
             public string ExpensiveConvertToString() => _target;
 
             /// <summary>
-            /// Compare if the target string is equal to the given string.
+            /// Compare target to string. Assumes string is of equal or smaller length than target.
             /// </summary>
             /// <param name="other">The string to compare with the target.</param>
-            /// <returns>True if the strings are equal, false otherwise.</returns>
-            public bool IsOrdinalEqualToStringOfSameLength(string other) => _target.Equals(other, StringComparison.Ordinal);
+            /// <returns>True if target starts with <paramref name="other"/>, false otherwise.</returns>
+            public bool StartsWithStringByOrdinalComparison(string other) => _target.StartsWith(other, StringComparison.Ordinal);
 
             /// <summary>
             /// Verifies if the reference of the target string is the same of the given string.
@@ -465,6 +465,71 @@ internal StringInternTarget(string target)
             public bool ReferenceEquals(string other) => ReferenceEquals(_target, other);
         }
 
+        /// <summary>
+        /// Wrapper over a substring of a string.
+        /// </summary>
+        internal struct SubstringInternTarget : IInternable
+        {
+            /// <summary>
+            /// Stores the wrapped string.
+            /// </summary>
+            private readonly string _target;
+
+            /// <summary>
+            /// Start index of the substring within the wrapped string.
+            /// </summary>
+            private readonly int _startIndex;
+
+            /// <summary>
+            /// Constructor of the class
+            /// </summary>
+            /// <param name="target">The string to wrap.</param>
+            /// <param name="startIndex">Start index of the substring within <paramref name="target"/>.</param>
+            /// <param name="length">Length of the substring.</param>
+            internal SubstringInternTarget(string target, int startIndex, int length)
+            {
+#if DEBUG
+                if (startIndex + length > target.Length)
+                {
+                    ErrorUtilities.ThrowInternalError("wrong length");
+                }
+#endif
+                _target = target;
+                _startIndex = startIndex;
+                Length = length;
+            }
+
+            /// <summary>
+            /// Gets the length of the target substring.
+            /// </summary>
+            public int Length { get; }
+
+            /// <summary>
+            /// Gets the n character in the target substring.
+            /// </summary>
+            /// <param name="index">Index of the character to gather.</param>
+            /// <returns>The character in the position marked by index.</returns>
+            public char this[int index] => _target[index + _startIndex];
+
+            /// <summary>
+            /// Returns the target substring as a string.
+            /// </summary>
+            /// <returns>The substring.</returns>
+            public string ExpensiveConvertToString() => _target.Substring(_startIndex, Length);
+
+            /// <summary>
+            /// Compare target substring to a string. Assumes string is of equal or smaller length than the target substring.
+            /// </summary>
+            /// <param name="other">The string to compare with the target substring.</param>
+            /// <returns>True if target substring starts with <paramref name="other"/>, false otherwise.</returns>
+            public bool StartsWithStringByOrdinalComparison(string other) => (String.CompareOrdinal(_target, _startIndex, other, 0, other.Length) == 0);
+
+            /// <summary>
+            /// Never reference equals to string.
+            /// </summary>
+            public bool ReferenceEquals(string other) => false;
+        }
+
         #endregion
 
         /// <summary>
@@ -634,7 +699,7 @@ internal BucketedPrioritizedStringList(bool gatherStatistics, int smallMruSize,
             /// <summary>
             /// Intern the given internable.
             /// </summary>
-            internal string InterningToString(IInternable candidate)
+            internal string InterningToString<T>(T candidate) where T : IInternable
             {
                 if (candidate.Length == 0)
                 {
@@ -713,15 +778,28 @@ internal void ReportStatistics(string heading)
                 Console.WriteLine("##########Top Rejected Strings: \n{0} ", string.Join("\n==============\n", topRejectedString.ToArray()));
             }
 
+            private bool TryInternHardcodedString<T>(T candidate, string str, ref string interned) where T : IInternable
+            {
+                Debug.Assert(candidate.Length == str.Length);
+
+                if (candidate.StartsWithStringByOrdinalComparison(str))
+                {
+                    interned = str;
+                    return true;
+                }
+                return false;
+            }
+
             /// <summary>
             /// Try to intern the string.
             /// Return true if an interned value could be returned.
             /// Return false if it was added to the intern list, but wasn't there already.
             /// Return null if it didn't meet the length criteria for any of the buckets. Interning was rejected
             /// </summary>
-            private bool? TryIntern(IInternable candidate, out string interned)
+            private bool? TryIntern<T>(T candidate, out string interned) where T : IInternable
             {
                 int length = candidate.Length;
+                interned = null;
 
                 // First, try the hard coded intern strings.
                 // Each of the hard-coded small strings below showed up in a profile run with considerable duplication in memory.
@@ -752,130 +830,46 @@ internal void ReportStatistics(string heading)
                     }
                     else if (length == 4)
                     {
-                        if (candidate[0] == 'T')
-                        {
-                            if (candidate[1] == 'R' && candidate[2] == 'U' && candidate[3] == 'E')
-                            {
-                                interned = "TRUE";
-                                return true;
-                            }
-
-                            if (candidate[1] == 'r' && candidate[2] == 'u' && candidate[3] == 'e')
-                            {
-                                interned = "True";
-                                return true;
-                            }
-                        }
-
-                        if (candidate[0] == 'C' && candidate[1] == 'o' && candidate[2] == 'p' && candidate[3] == 'y')
-                        {
-                            interned = "Copy";
-                            return true;
-                        }
-
-                        if (candidate[0] == 't' && candidate[1] == 'r' && candidate[2] == 'u' && candidate[3] == 'e')
-                        {
-                            interned = "true";
-                            return true;
-                        }
-
-                        if (candidate[0] == 'v' && candidate[1] == '4' && candidate[2] == '.' && candidate[3] == '0')
+                        if (TryInternHardcodedString(candidate, "TRUE", ref interned) ||
+                            TryInternHardcodedString(candidate, "True", ref interned) ||
+                            TryInternHardcodedString(candidate, "Copy", ref interned) ||
+                            TryInternHardcodedString(candidate, "true", ref interned) ||
+                            TryInternHardcodedString(candidate, "v4.0", ref interned))
                         {
-                            interned = "v4.0";
                             return true;
                         }
                     }
                     else if (length == 5)
                     {
-                        if (candidate[0] == 'F' && candidate[1] == 'A' && candidate[2] == 'L' && candidate[3] == 'S' && candidate[4] == 'E')
-                        {
-                            interned = "FALSE";
-                            return true;
-                        }
-
-                        if (candidate[0] == 'f' && candidate[1] == 'a' && candidate[2] == 'l' && candidate[3] == 's' && candidate[4] == 'e')
+                        if (TryInternHardcodedString(candidate, "FALSE", ref interned) ||
+                            TryInternHardcodedString(candidate, "false", ref interned) ||
+                            TryInternHardcodedString(candidate, "Debug", ref interned) ||
+                            TryInternHardcodedString(candidate, "Build", ref interned) ||
+                            TryInternHardcodedString(candidate, "Win32", ref interned))
                         {
-                            interned = "false";
-                            return true;
-                        }
-
-                        if (candidate[0] == 'D' && candidate[1] == 'e' && candidate[2] == 'b' && candidate[3] == 'u' && candidate[4] == 'g')
-                        {
-                            interned = "Debug";
-                            return true;
-                        }
-
-                        if (candidate[0] == 'B' && candidate[1] == 'u' && candidate[2] == 'i' && candidate[3] == 'l' && candidate[4] == 'd')
-                        {
-                            interned = "Build";
-                            return true;
-                        }
-
-                        if (candidate[0] == 'W' && candidate[1] == 'i' && candidate[2] == 'n' && candidate[3] == '3' && candidate[4] == '2')
-                        {
-                            interned = "Win32";
                             return true;
                         }
                     }
                     else if (length == 6)
                     {
-                        if (candidate[0] == '\'' && candidate[1] == '\'' && candidate[2] == '!' && candidate[3] == '=' && candidate[4] == '\'' && candidate[5] == '\'')
+                        if (TryInternHardcodedString(candidate, "''!=''", ref interned) ||
+                            TryInternHardcodedString(candidate, "AnyCPU", ref interned))
                         {
-                            interned = "''!=''";
-                            return true;
-                        }
-
-                        if (candidate[0] == 'A' && candidate[1] == 'n' && candidate[2] == 'y' && candidate[3] == 'C' && candidate[4] == 'P' && candidate[5] == 'U')
-                        {
-                            interned = "AnyCPU";
                             return true;
                         }
                     }
                     else if (length == 7)
                     {
-                        if (candidate[0] == 'L' && candidate[1] == 'i' && candidate[2] == 'b' && candidate[3] == 'r' && candidate[4] == 'a' && candidate[5] == 'r' && candidate[6] == 'y')
+                        if (TryInternHardcodedString(candidate, "Library", ref interned) ||
+                            TryInternHardcodedString(candidate, "MSBuild", ref interned) ||
+                            TryInternHardcodedString(candidate, "Release", ref interned))
                         {
-                            interned = "Library";
-                            return true;
-                        }
-
-                        if (candidate[0] == 'M' && candidate[1] == 'S' && candidate[2] == 'B' && candidate[3] == 'u' && candidate[4] == 'i' && candidate[5] == 'l' && candidate[6] == 'd')
-                        {
-                            interned = "MSBuild";
-                            return true;
-                        }
-
-                        if (candidate[0] == 'R' && candidate[1] == 'e' && candidate[2] == 'l' && candidate[3] == 'e' && candidate[4] == 'a' && candidate[5] == 's' && candidate[6] == 'e')
-                        {
-                            interned = "Release";
                             return true;
                         }
                     }
                     // see Microsoft.Build.BackEnd.BuildRequestConfiguration.CreateUniqueGlobalProperty
                     else if (length > MSBuildConstants.MSBuildDummyGlobalPropertyHeader.Length &&
-                             candidate[0] == 'M' &&
-                             candidate[1] == 'S' &&
-                             candidate[2] == 'B' &&
-                             candidate[3] == 'u' &&
-                             candidate[4] == 'i' &&
-                             candidate[5] == 'l' &&
-                             candidate[6] == 'd' &&
-                             candidate[7] == 'P' &&
-                             candidate[8] == 'r' &&
-                             candidate[9] == 'o' &&
-                             candidate[10] == 'j' &&
-                             candidate[11] == 'e' &&
-                             candidate[12] == 'c' &&
-                             candidate[13] == 't' &&
-                             candidate[14] == 'I' &&
-                             candidate[15] == 'n' &&
-                             candidate[16] == 's' &&
-                             candidate[17] == 't' &&
-                             candidate[18] == 'a' &&
-                             candidate[19] == 'n' &&
-                             candidate[20] == 'c' &&
-                             candidate[21] == 'e'
-                    )
+                            candidate.StartsWithStringByOrdinalComparison(MSBuildConstants.MSBuildDummyGlobalPropertyHeader))
                     {
                         // don't want to leak unique strings into the cache
                         interned = candidate.ExpensiveConvertToString();
@@ -883,16 +877,9 @@ internal void ReportStatistics(string heading)
                     }
                     else if (length == 24)
                     {
-                        if (candidate[0] == 'R' && candidate[1] == 'e' && candidate[2] == 's' && candidate[3] == 'o' && candidate[4] == 'l' && candidate[5] == 'v' && candidate[6] == 'e')
+                        if (TryInternHardcodedString(candidate, "ResolveAssemblyReference", ref interned))
                         {
-                            if (candidate[7] == 'A' && candidate[8] == 's' && candidate[9] == 's' && candidate[10] == 'e' && candidate[11] == 'm' && candidate[12] == 'b' && candidate[13] == 'l' && candidate[14] == 'y')
-                            {
-                                if (candidate[15] == 'R' && candidate[16] == 'e' && candidate[17] == 'f' && candidate[18] == 'e' && candidate[19] == 'r' && candidate[20] == 'e' && candidate[21] == 'n' && candidate[22] == 'c' && candidate[23] == 'e')
-                                {
-                                    interned = "ResolveAssemblyReference";
-                                    return true;
-                                }
-                            }
+                            return true;
                         }
                     }
                     else if (length > _ginormousThreshold)
@@ -903,7 +890,7 @@ internal void ReportStatistics(string heading)
 
                             while (current != null)
                             {
-                                if (current.Value.Target is string last && last.Length == candidate.Length && candidate.IsOrdinalEqualToStringOfSameLength(last))
+                                if (current.Value.Target is string last && last.Length == candidate.Length && candidate.StartsWithStringByOrdinalComparison(last))
                                 {
                                     interned = last;
                                     _ginormousHits++;
@@ -967,42 +954,45 @@ internal void ReportStatistics(string heading)
             /// <summary>
             /// Version of Intern that gathers statistics
             /// </summary>
-            private string InternWithStatistics(IInternable candidate)
+            private string InternWithStatistics<T>(T candidate) where T : IInternable
             {
-                _stopwatch.Start();
-                bool? interned = TryIntern(candidate, out string result);
-                _stopwatch.Stop();
-
-                if (interned.HasValue && !interned.Value)
+                lock (_missedStrings)
                 {
-                    // Could not intern.
-                    _internMisses++;
+                    _stopwatch.Start();
+                    bool? interned = TryIntern(candidate, out string result);
+                    _stopwatch.Stop();
+
+                    if (interned.HasValue && !interned.Value)
+                    {
+                        // Could not intern.
+                        _internMisses++;
 
-                    _missedStrings.TryGetValue(result, out int priorCount);
-                    _missedStrings[result] = priorCount + 1;
+                        _missedStrings.TryGetValue(result, out int priorCount);
+                        _missedStrings[result] = priorCount + 1;
 
-                    return result;
-                }
-                else if (interned == null)
-                {
-                    // Decided not to attempt interning
-                    _internRejects++;
+                        return result;
+                    }
+                    else if (interned == null)
+                    {
+                        // Decided not to attempt interning
+                        _internRejects++;
 
-                    _rejectedStrings.TryGetValue(result, out int priorCount);
-                    _rejectedStrings[result] = priorCount + 1;
+                        _rejectedStrings.TryGetValue(result, out int priorCount);
+                        _rejectedStrings[result] = priorCount + 1;
 
-                    return result;
-                }
+                        return result;
+                    }
 
-                _internHits++;
-                if (!candidate.ReferenceEquals(result))
-                {
-                    // Reference changed so 'candidate' is now released and should save memory.
-                    _internEliminatedStrings++;
-                    _internEliminatedChars += candidate.Length;
-                }
+                    _internHits++;
+                    if (!candidate.ReferenceEquals(result))
+                    {
+                        // Reference changed so 'candidate' is now released and should save memory.
+                        _internEliminatedStrings++;
+                        _internEliminatedChars += candidate.Length;
+                    }
 
-                return result;
+                    return result;
+                }
             }
 
             /// <summary>
@@ -1033,7 +1023,7 @@ internal PrioritizedStringList(int size)
                 /// Try to get one element from the list. Upon leaving the function 'candidate' will be at the head of the Mru list.
                 /// This function is not thread-safe.
                 /// </summary>
-                internal bool TryGet(IInternable candidate, out string interned)
+                internal bool TryGet<T>(T candidate, out string interned) where T : IInternable
                 {
                     if (_size == 0)
                     {
@@ -1052,7 +1042,7 @@ internal bool TryGet(IInternable candidate, out string interned)
                     {
                         if (head.Value.Length == length)
                         {
-                            if (candidate.IsOrdinalEqualToStringOfSameLength(head.Value))
+                            if (candidate.StartsWithStringByOrdinalComparison(head.Value))
                             {
                                 found = true;
                             }
diff --git a/src/Shared/ReuseableStringBuilder.cs b/src/Shared/ReuseableStringBuilder.cs
index 163dc91b41d..655a43c9ddb 100644
--- a/src/Shared/ReuseableStringBuilder.cs
+++ b/src/Shared/ReuseableStringBuilder.cs
@@ -96,18 +96,18 @@ string OpportunisticIntern.IInternable.ExpensiveConvertToString()
         /// <summary>
         /// Compare target to string. 
         /// </summary>
-        bool OpportunisticIntern.IInternable.IsOrdinalEqualToStringOfSameLength(string other)
+        bool OpportunisticIntern.IInternable.StartsWithStringByOrdinalComparison(string other)
         {
 #if DEBUG
-            ErrorUtilities.VerifyThrow(other.Length == _borrowedBuilder.Length, "should be same length");
+            ErrorUtilities.VerifyThrow(other.Length <= _borrowedBuilder.Length, "should be at most as long as target");
 #endif
             if (other.Length > MaxByCharCompareLength)
             {
-                return String.Equals( ((OpportunisticIntern.IInternable) this).ExpensiveConvertToString(), other, StringComparison.Ordinal);
+                return ((OpportunisticIntern.IInternable) this).ExpensiveConvertToString().StartsWith(other, StringComparison.Ordinal);
             }
             // Backwards because the end of the string is (by observation of Australian Government build) more likely to be different earlier in the loop.
             // For example, C:\project1, C:\project2
-            for (int i = _borrowedBuilder.Length - 1; i >= 0; --i)
+            for (int i = other.Length - 1; i >= 0; --i)
             {
                 if (_borrowedBuilder[i] != other[i])
                 {
diff --git a/src/Shared/Traits.cs b/src/Shared/Traits.cs
index 9a38caea385..2b816c7eaee 100644
--- a/src/Shared/Traits.cs
+++ b/src/Shared/Traits.cs
@@ -115,6 +115,12 @@ internal class EscapeHatches
         /// </summary>
         public readonly bool AlwaysUseContentTimestamp = Environment.GetEnvironmentVariable("MSBUILDALWAYSCHECKCONTENTTIMESTAMP") == "1";
 
+        /// <summary>
+        /// Truncate task inputs when logging them. This can reduce memory pressure
+        /// at the expense of log usefulness.
+        /// </summary>
+        public readonly bool TruncateTaskInputs = Environment.GetEnvironmentVariable("MSBUILDTRUNCATETASKINPUTS") == "1";
+
         /// <summary>
         /// Emit events for project imports.
         /// </summary>
@@ -169,6 +175,11 @@ public bool LogTaskInputs
         /// </summary>
         public readonly bool UseSymlinkTimeInsteadOfTargetTime = Environment.GetEnvironmentVariable("MSBUILDUSESYMLINKTIMESTAMP") == "1";
 
+        /// <summary>
+        /// Allow node reuse of TaskHost nodes. This results in task assemblies locked past the build lifetime, preventing them from being rebuilt if custom tasks change, but may improve performance.
+        /// </summary>
+        public readonly bool ReuseTaskHostNodes = Environment.GetEnvironmentVariable("MSBUILDREUSETASKHOSTNODES") == "1";
+
         /// <summary>
         /// Whether or not to ignore imports that are considered empty.  See ProjectRootElement.IsEmptyXmlFile() for more info.
         /// </summary>
diff --git a/src/Shared/UnitTests/FileUtilities_Tests.cs b/src/Shared/UnitTests/FileUtilities_Tests.cs
index f3eae7c592f..b9b730401aa 100644
--- a/src/Shared/UnitTests/FileUtilities_Tests.cs
+++ b/src/Shared/UnitTests/FileUtilities_Tests.cs
@@ -8,6 +8,7 @@
 using System.Reflection;
 using System.Text;
 using System.Threading;
+using System.Linq;
 using Microsoft.Build.Evaluation;
 using Microsoft.Build.Shared;
 using Shouldly;
@@ -243,7 +244,10 @@ public void HasExtension_WhenFileNameHasExtension_ReturnsTrue(string fileName, s
         {
             var result = FileUtilities.HasExtension(fileName, allowedExtensions);
 
-            Assert.True(result);
+            if (!FileUtilities.GetIsFileSystemCaseSensitive() || allowedExtensions.Any(extension => fileName.Contains(extension)))
+            {
+                result.ShouldBeTrue();
+            }
         }
 
         [Theory]
@@ -283,7 +287,7 @@ public void HasExtension_UsesOrdinalIgnoreCase()
 
                 var result = FileUtilities.HasExtension("foo.ini", new string[] { ".INI" });
 
-                Assert.True(result);
+                result.ShouldBe(!FileUtilities.GetIsFileSystemCaseSensitive());
             }
             finally
             {
diff --git a/src/Shared/XMakeAttributes.cs b/src/Shared/XMakeAttributes.cs
index 4f2160b0ea0..461bc2ef740 100644
--- a/src/Shared/XMakeAttributes.cs
+++ b/src/Shared/XMakeAttributes.cs
@@ -26,6 +26,8 @@ internal static class XMakeAttributes
         internal const string exclude = "Exclude";
         internal const string remove = "Remove";
         internal const string update = "Update";
+        internal const string matchOnMetadata = "MatchOnMetadata";
+        internal const string matchOnMetadataOptions = "MatchOnMetadataOptions";
         internal const string keepMetadata = "KeepMetadata";
         internal const string removeMetadata = "RemoveMetadata";
         internal const string keepDuplicates = "KeepDuplicates";
diff --git a/src/Tasks.UnitTests/CallTarget_Tests.cs b/src/Tasks.UnitTests/CallTarget_Tests.cs
index 37efb084403..32350f613cb 100644
--- a/src/Tasks.UnitTests/CallTarget_Tests.cs
+++ b/src/Tasks.UnitTests/CallTarget_Tests.cs
@@ -12,6 +12,7 @@
 using Microsoft.Build.Tasks;
 using Microsoft.Build.Utilities;
 using System.Text.RegularExpressions;
+using Shouldly;
 using Xunit;
 
 namespace Microsoft.Build.UnitTests
@@ -111,6 +112,22 @@ public void FailedTargetsRunSeparately()
             logger.AssertLogContains("Inside C");
         }
 
+        [Fact]
+        public void FailsWithOnlyTargetErrors()
+        {
+            MockLogger logger = ObjectModelHelpers.BuildProjectExpectFailure(@"
+                <Project>
+                  <Target Name='Init'>
+                    <CallTarget Targets='Inside' />
+                  </Target>
+                  <Target Name='Inside'>
+                    <Error />
+                  </Target>
+                </Project>");
+
+            logger.ErrorCount.ShouldBe (1);
+        }
+
         /// <summary>
         /// Test the CallTarget task, where we don't pass in any targets.  This is expected
         /// to succeed, so that callers of the task don't have to add a Condition to ensure
diff --git a/src/Tasks.UnitTests/CreateItem_Tests.cs b/src/Tasks.UnitTests/CreateItem_Tests.cs
index ccf8f4d7cd1..2bc06e46f48 100644
--- a/src/Tasks.UnitTests/CreateItem_Tests.cs
+++ b/src/Tasks.UnitTests/CreateItem_Tests.cs
@@ -1,12 +1,16 @@
 // Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
+using System;
 using System.IO;
+using System.Collections.Generic;
+using Microsoft.Build.Execution;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Tasks;
 using Microsoft.Build.Utilities;
 using Xunit;
 using Xunit.Abstractions;
+using Shouldly;
 
 namespace Microsoft.Build.UnitTests
 {
@@ -156,6 +160,43 @@ public void WildcardsWithRecursiveDir()
             ObjectModelHelpers.AssertFileExistsInTempProjectDirectory(Path.Combine("Destination", "Subdir", "Bar.txt"));
         }
 
+        /// <summary>
+        /// Using the CreateItem task to expand wildcards and verifying that the RecursiveDir metadatum is successfully
+        /// serialized/deserialized cross process.
+        /// </summary>
+        [Fact]
+        public void RecursiveDirOutOfProc()
+        {
+            using var env = TestEnvironment.Create(_testOutput);
+
+            ObjectModelHelpers.DeleteTempProjectDirectory();
+
+            string projectFileFullPath = ObjectModelHelpers.CreateFileInTempProjectDirectory("Myapp.proj", @"
+                <Project ToolsVersion=`msbuilddefaulttoolsversion` xmlns=`msbuildnamespace`>
+                  <Target Name =`Repro` Returns=`@(Text)`>
+                    <CreateItem Include=`**\*.txt`>
+                      <Output TaskParameter=`Include` ItemName=`Text`/>
+                    </CreateItem>
+                  </Target>
+                </Project>
+                ");
+
+            ObjectModelHelpers.CreateFileInTempProjectDirectory(Path.Combine("Subdir", "Bar.txt"), "bar");
+
+            env.SetEnvironmentVariable("MSBUILDTARGETRESULTCOMPRESSIONTHRESHOLD", "0");
+
+            BuildRequestData data = new BuildRequestData(projectFileFullPath, new Dictionary<string, string>(), null, new string[] { "Repro" }, null);
+            BuildParameters parameters = new BuildParameters
+            {
+                DisableInProcNode = true,
+                EnableNodeReuse = false,
+                Loggers = new ILogger[] { new MockLogger(_testOutput) },
+            };
+            BuildResult result = BuildManager.DefaultBuildManager.Build(parameters, data);
+            result.OverallResult.ShouldBe(BuildResultCode.Success);
+            result.ResultsByTarget["Repro"].Items[0].GetMetadata("RecursiveDir").ShouldBe("Subdir" + Path.DirectorySeparatorChar);
+        }
+
         /// <summary>
         /// CreateItem should add additional metadata when instructed
         /// </summary>
diff --git a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
index a19d99dc303..99a093212d9 100644
--- a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
+++ b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
@@ -80,6 +80,7 @@
 
   <ItemGroup Condition="'$(MonoBuild)' == 'true'">
     <Compile Remove="LC_Tests.cs" />
+    <Compile Remove="SGen_Tests.cs" />
   </ItemGroup>
 
   <ItemGroup Condition="$(TargetFrameworkIdentifier) != '.NETFramework'">
@@ -126,7 +127,6 @@
     <Compile Remove="ResolveComReference_Tests.cs" />
     <Compile Remove="ResolveSDKReference_Tests.cs" />
     <Compile Remove="SdkToolsPathUtility_Tests.cs" />
-    <Compile Remove="SGen_Tests.cs" />
     <Compile Remove="TlbImp_Tests.cs" />
     <Compile Remove="VisualBasicParserUtilitites_Tests.cs" />
     <Compile Remove="VisualBasicTokenizer_Tests.cs" />
diff --git a/src/Tasks.UnitTests/SGen_Tests.cs b/src/Tasks.UnitTests/SGen_Tests.cs
index 21936e6ec89..79400d3d7bb 100644
--- a/src/Tasks.UnitTests/SGen_Tests.cs
+++ b/src/Tasks.UnitTests/SGen_Tests.cs
@@ -7,12 +7,46 @@
 using Microsoft.Build.Utilities;
 using Microsoft.Build.Shared;
 using System.IO;
+using System.Linq;
 using Xunit;
+using Xunit.Abstractions;
+using Shouldly;
 
 namespace Microsoft.Build.UnitTests
 {
     public class SGen_Tests
     {
+#if RUNTIME_TYPE_NETCORE
+        [Fact]
+        public void TaskFailsOnCore()
+        {
+            using (TestEnvironment testenv = TestEnvironment.Create())
+            {
+                MockLogger logger = ObjectModelHelpers.BuildProjectExpectFailure(@$"
+<Project>
+    <Target Name=""MyTarget"">
+        <SGen
+            BuildAssemblyName=""Foo""
+            BuildAssemblyPath=""Foo""
+            ShouldGenerateSerializer=""true""
+            UseProxyTypes=""true""
+            UseKeep=""true""
+            References=""Foo""
+            KeyContainer=""Foo""
+            KeyFile=""Foo""
+            DelaySign=""true""
+            SerializationAssembly=""Foo""
+            SdkToolsPath=""Foo""
+            Platform=""Foo""
+            Types=""Foo""
+        />
+    </Target>
+</Project>");
+                logger.ErrorCount.ShouldBe(1);
+                logger.Errors.First().Code.ShouldBe("MSB3474");
+            }
+        }
+#else
         internal class SGenExtension : SGen
         {
             internal string CommandLine()
@@ -56,6 +90,7 @@ public void TestKeepFlagTrue()
 
             Assert.True(commandLine.IndexOf("/keep", StringComparison.OrdinalIgnoreCase) >= 0);
         }
+
         [Fact]
         public void TestKeepFlagFalse()
         {
@@ -242,5 +277,6 @@ public void TestReferencesCommandLine()
             
             Assert.Equal(targetCommandLine, commandLine);
         }
+#endif
     }
 }
diff --git a/src/Tasks/Microsoft.Build.Tasks.csproj b/src/Tasks/Microsoft.Build.Tasks.csproj
index 1877f25594e..9f65aed2c43 100644
--- a/src/Tasks/Microsoft.Build.Tasks.csproj
+++ b/src/Tasks/Microsoft.Build.Tasks.csproj
@@ -485,6 +485,9 @@
     <Compile Include="RoslynCodeTaskFactory\RoslynCodeTaskFactoryCompilers.cs" />
     <Compile Include="RoslynCodeTaskFactory\RoslynCodeTaskFactoryTaskInfo.cs" />
     <Compile Include="SemaphoreCPUTask.cs" />
+    <Compile Include="SGen.cs" Condition="'$(MonoBuild)' != 'true'">
+      <ExcludeFromStyleCop>true</ExcludeFromStyleCop>
+    </Compile>
     <Compile Include="System.Design.cs" />
     <Compile Include="system.design\stronglytypedresourcebuilder.cs" />
     <Compile Include="TaskExtension.cs">
@@ -628,9 +631,6 @@
     <Compile Include="RequiresFramework35SP1Assembly.cs" Condition="'$(MonoBuild)' != 'true'">
       <ExcludeFromStyleCop>true</ExcludeFromStyleCop>
     </Compile>
-    <Compile Include="SGen.cs">
-      <ExcludeFromStyleCop>true</ExcludeFromStyleCop>
-    </Compile>
     <Compile Include="SignFile.cs" Condition="'$(MonoBuild)' != 'true'">
       <ExcludeFromStyleCop>true</ExcludeFromStyleCop>
     </Compile>
@@ -988,11 +988,8 @@
 
   <ItemGroup Condition="'$(TargetFrameworkIdentifier)' != '.NETFramework'">
     <PackageReference Include="System.CodeDom" />
-    <PackageReference Include="System.Linq.Parallel" />
-    <PackageReference Include="System.Net.Http" />
     <PackageReference Include="System.Reflection.Metadata" />
     <PackageReference Include="System.Reflection.TypeExtensions" />
-    <PackageReference Include="System.Resources.Writer" />
     <PackageReference Include="System.Security.Permissions" />
     <PackageReference Include="System.Threading.Tasks.Dataflow" />
 
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index 748ced91249..794392b6202 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -2056,6 +2056,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       <ResolveAssemblyReferencesSilent Condition="'$(ResolveAssemblyReferencesSilent)' == '' and '$(TraceDesignTime)' != 'true' and '$(BuildingProject)' == 'false'">true</ResolveAssemblyReferencesSilent>
       <ResolveAssemblyReferencesSilent Condition="'$(ResolveAssemblyReferencesSilent)' == ''">false</ResolveAssemblyReferencesSilent>
       <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch Condition="'$(ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch)' == ''">Warning</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
+      <ResolveAssemblyReferencesFindRelatedSatellites Condition="'$(ResolveAssemblyReferencesFindRelatedSatellites)' == ''">$(BuildingProject)</ResolveAssemblyReferencesFindRelatedSatellites>
+      <ResolveAssemblyReferencesFindSerializationAssemblies Condition="'$(ResolveAssemblyReferencesFindSerializationAssemblies)' == ''">$(BuildingProject)</ResolveAssemblyReferencesFindSerializationAssemblies>
+      <ResolveAssemblyReferencesFindRelatedFiles Condition="'$(ResolveAssemblyReferencesFindRelatedFiles)' == ''">$(BuildingProject)</ResolveAssemblyReferencesFindRelatedFiles>
     </PropertyGroup>
 
     <ItemGroup>
@@ -2095,9 +2098,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.
         SupportsBindingRedirectGeneration="$(GenerateBindingRedirectsOutputType)"
         IgnoreVersionForFrameworkReferences="$(IgnoreVersionForFrameworkReferences)"
         FindDependencies="$(_FindDependencies)"
-        FindSatellites="$(BuildingProject)"
-        FindSerializationAssemblies="$(BuildingProject)"
-        FindRelatedFiles="$(BuildingProject)"
+        FindSatellites="$(ResolveAssemblyReferencesFindRelatedSatellites)"
+        FindSerializationAssemblies="$(ResolveAssemblyReferencesFindSerializationAssemblies)"
+        FindRelatedFiles="$(ResolveAssemblyReferencesFindRelatedFiles)"
         Silent="$(ResolveAssemblyReferencesSilent)"
         TargetFrameworkVersion="$(TargetFrameworkVersion)"
         TargetFrameworkMoniker="$(TargetFrameworkMoniker)"
diff --git a/src/Tasks/Microsoft.WinFx.targets b/src/Tasks/Microsoft.WinFx.targets
index 61c702736bb..d42da660988 100644
--- a/src/Tasks/Microsoft.WinFx.targets
+++ b/src/Tasks/Microsoft.WinFx.targets
@@ -9,6 +9,6 @@
         the shim will internally simply redirect to the real copy of the targets file in the .NET Framework. 
    -->
 
-   <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.WinFx.targets" Condition="Exists('$(MSBuildFrameworkToolsPath)\Microsoft.WinFx.targets')" />
+   <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.WinFx.targets" Condition="'$(ImportFrameworkWinFXTargets)' != 'false' and Exists('$(MSBuildFrameworkToolsPath)\Microsoft.WinFx.targets')" />
 
 </Project>
diff --git a/src/Tasks/Resources/Strings.resx b/src/Tasks/Resources/Strings.resx
index 8c2de89cb07..cc1e2699443 100644
--- a/src/Tasks/Resources/Strings.resx
+++ b/src/Tasks/Resources/Strings.resx
@@ -1967,6 +1967,10 @@
     <value>MSB3473: Path for "{0}" is invalid. {1}</value>
     <comment>{StrBegin="MSB3473: "}</comment>
   </data>
+  <data name="SGen.TaskNotSupported">
+    <value>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</value>
+    <comment>{StrBegin="MSB3474: "}</comment>
+  </data>
   <!--
         The SignFile message bucket is: MSB3481 - MSB3490
 
diff --git a/src/Tasks/Resources/xlf/Strings.cs.xlf b/src/Tasks/Resources/xlf/Strings.cs.xlf
index d578c960eea..7519a6f4fc3 100644
--- a/src/Tasks/Resources/xlf/Strings.cs.xlf
+++ b/src/Tasks/Resources/xlf/Strings.cs.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: Cesta k objektu {0} je neplatná. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: Nebyl nalezen podpisový certifikát. Zkontrolujte, zda je uložen v osobním úložišti aktuálního uživatele.</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: Nepovedlo se vytvořit úlohu XAML. Duplicitní název vlastnosti {0}</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.de.xlf b/src/Tasks/Resources/xlf/Strings.de.xlf
index c5811f33b5d..f7321dd89e8 100644
--- a/src/Tasks/Resources/xlf/Strings.de.xlf
+++ b/src/Tasks/Resources/xlf/Strings.de.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: Der Pfad für "{0}" ist ungültig. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: Das Signaturzertifikat wurde nicht gefunden. Stellen Sie sicher, dass es sich im persönlichen Speicher des aktuellen Benutzers befindet.</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: Die XAML-Aufgabe kann nicht erstellt werden. Doppelter Eigenschaftenname "{0}".</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.en.xlf b/src/Tasks/Resources/xlf/Strings.en.xlf
index 67150d286da..c9d6885f10c 100644
--- a/src/Tasks/Resources/xlf/Strings.en.xlf
+++ b/src/Tasks/Resources/xlf/Strings.en.xlf
@@ -2343,6 +2343,11 @@
         <target state="new">MSB3473: Path for "{0}" is invalid. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="new">MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.es.xlf b/src/Tasks/Resources/xlf/Strings.es.xlf
index a0fea02869d..21f8661c841 100644
--- a/src/Tasks/Resources/xlf/Strings.es.xlf
+++ b/src/Tasks/Resources/xlf/Strings.es.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: La ruta de acceso de "{0}" no es válida. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: No se encuentra el certificado de firma. Asegúrese de que se encuentra en el almacén personal del usuario actual.</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: No se puede crear la tarea XAML. El nombre de propiedad "{0}" está duplicado.</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.fr.xlf b/src/Tasks/Resources/xlf/Strings.fr.xlf
index b408f848bc6..38b460aadf1 100644
--- a/src/Tasks/Resources/xlf/Strings.fr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.fr.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: Le chemin d'accès de "{0}" n'est pas valide. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: Impossible de trouver le certificat de signature. Vérifiez qu'il se trouve dans le magasin personnel de l'utilisateur actuel.</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: impossible de créer la tâche XAML. Nom de propriété dupliqué : '{0}'.</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.it.xlf b/src/Tasks/Resources/xlf/Strings.it.xlf
index e8f69ec7e35..ec92efbf907 100644
--- a/src/Tasks/Resources/xlf/Strings.it.xlf
+++ b/src/Tasks/Resources/xlf/Strings.it.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: il percorso di "{0}" non è valido. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: non è stato possibile trovare il certificato di firma. Verificare che si trovi nell'archivio personale dell'utente corrente.</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: non è possibile creare l'attività XAML. Il nome di proprietà '{0}' è duplicato.</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.ja.xlf b/src/Tasks/Resources/xlf/Strings.ja.xlf
index 6380f1c0d89..5b9101c3bbe 100644
--- a/src/Tasks/Resources/xlf/Strings.ja.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ja.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: "{0}" のパスが無効です。{1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: 署名する証明書が見つかりませんでした。現在のユーザーの個人用ストアであることを確認してください。</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: XAML タスクを作成できません。プロパティ名 '{0}' が重複しています。</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.ko.xlf b/src/Tasks/Resources/xlf/Strings.ko.xlf
index 68de168586e..07683139d84 100644
--- a/src/Tasks/Resources/xlf/Strings.ko.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ko.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: "{0}"의 경로가 잘못되었습니다. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: 서명 인증서를 찾을 수 없습니다. 인증서가 현재 사용자의 개인 저장소에 있는지 확인하세요.</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: XAML 작업을 만들 수 없습니다. 속성 이름 '{0}'이(가) 중복되었습니다.</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.pl.xlf b/src/Tasks/Resources/xlf/Strings.pl.xlf
index d09ef52f3bf..9216490676c 100644
--- a/src/Tasks/Resources/xlf/Strings.pl.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pl.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: Ścieżka elementu „{0}” jest nieprawidłowa. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: Nie można zlokalizować certyfikatu podpisującego. Upewnij się, że znajduje się on w magazynie osobistym bieżącego użytkownika.</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: Nie można utworzyć zadania XAML. Zduplikowana nazwa właściwości „{0}”.</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
index 7a6c3bd9b73..b9ce1ded3e1 100644
--- a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: O caminho para "{0}" não é válido. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: O certificado de autenticação não foi localizado. Verifique se ele está no repositório pessoal do usuário atual.</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: não é possível criar a tarefa XAML. Nome da propriedade '{0}' duplicado.</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.ru.xlf b/src/Tasks/Resources/xlf/Strings.ru.xlf
index 768b481ce13..e114c230d35 100644
--- a/src/Tasks/Resources/xlf/Strings.ru.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ru.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: Путь для "{0}" является недопустимым. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: не удалось обнаружить сертификат для подписи. Убедитесь, что объект находится в личном хранилище текущего пользователя.</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: не удалось создать задачу XAML. Повторяющееся имя свойства "{0}".</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.tr.xlf b/src/Tasks/Resources/xlf/Strings.tr.xlf
index 22a445e7a04..071ee4d4150 100644
--- a/src/Tasks/Resources/xlf/Strings.tr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.tr.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: "{0}" yolu geçersiz. {1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: İmza sertifikası bulunamadı. Sertifikanın geçerli kullanıcının kişisel deposunda olduğunu doğrulayın.</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: XAML görevi oluşturulamıyor. Yinelenen özellik adı: '{0}'.</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
index d94d66a8a52..6741ccbae04 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: “{0}”的路径无效。{1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: 未能找到签名证书。请确保它在当前用户的个人存储中。</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: 无法创建 Xaml 任务。属性名 "{0}" 重复。</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
index c247276b0a0..631aefccbe8 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
@@ -2293,6 +2293,11 @@
         <target state="translated">MSB3473: "{0}" 的路徑無效。{1}</target>
         <note>{StrBegin="MSB3473: "}</note>
       </trans-unit>
+      <trans-unit id="SGen.TaskNotSupported">
+        <source>MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</source>
+        <target state="new">MSB3474: The task "{0}" is not supported on the .NET Core version of MSBuild. Use the Microsoft XML Serializer Generator package instead. See https://go.microsoft.com/fwlink/?linkid=858594 for more information.</target>
+        <note>{StrBegin="MSB3474: "}</note>
+      </trans-unit>
       <trans-unit id="SignFile.CertNotInStore">
         <source>MSB3481: The signing certificate could not be located. Ensure that it is in the current user's personal store.</source>
         <target state="translated">MSB3481: 找不到簽署憑證。請確認該憑證位於目前使用者的個人存放區中。</target>
@@ -2530,7 +2535,7 @@
       </trans-unit>
       <trans-unit id="Xaml.DuplicatePropertyName">
         <source>MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</source>
-        <target state="new">MSB3724: Unable to create Xaml task.  Duplicate property name '{0}'.</target>
+        <target state="translated">MSB3724: 無法建立 Xaml 工作。重複的屬性名稱 '{0}'。</target>
         <note>{StrBegin="MSB3724: "}</note>
       </trans-unit>
       <trans-unit id="Xaml.TaskCreationFailed">
diff --git a/src/Tasks/SGen.cs b/src/Tasks/SGen.cs
index 7443426468a..facee3ddc15 100644
--- a/src/Tasks/SGen.cs
+++ b/src/Tasks/SGen.cs
@@ -11,10 +11,126 @@
 
 namespace Microsoft.Build.Tasks
 {
+    /// <summary>
+    /// An interface containing public SGen task properties to make sure that all versions of the task have the same public surface.
+    /// </summary>
+    internal interface ISGenTaskContract
+    {
+    #region Properties
+
+        // Input files
+        [Required]
+        string BuildAssemblyName { get; set; }
+
+        [Required]
+        string BuildAssemblyPath { get; set; }
+
+        [Required]
+        bool ShouldGenerateSerializer { get; set; }
+
+        [Required]
+        bool UseProxyTypes { get; set; }
+
+        bool UseKeep { get; set; }
+
+        string[] References { get; set; }
+
+        string KeyContainer { get; set; }
+
+        string KeyFile { get; set; }
+
+        bool DelaySign { get; set; }
+
+        [Output]
+        ITaskItem[] SerializationAssembly { get; set; }
+
+        string SerializationAssemblyName { get; }
+
+        string SdkToolsPath { get; set; }
+
+        /// <summary>
+        /// Gets or Sets the Compiler Platform used by SGen to generate the output assembly.
+        /// </summary>
+        string Platform { get; set; }
+
+        /// <summary>
+        /// Gets or Sets a list of specific Types to generate serialization code for, SGen will generate serialization code only for those types.
+        /// </summary>
+        string[] Types { get; set; }
+
+    #endregion
+    }
+
+#if RUNTIME_TYPE_NETCORE
+    public class SGen : ToolTaskExtension, ISGenTaskContract
+    {
+    #region Properties
+
+        [Required]
+        public string BuildAssemblyName { get; set; }
+
+        [Required]
+        public string BuildAssemblyPath { get; set; }
+
+        [Required]
+        public bool ShouldGenerateSerializer { get; set; }
+
+        [Required]
+        public bool UseProxyTypes { get; set; }
+
+        public bool UseKeep { get; set; }
+
+        public string[] References { get; set; }
+
+        public string KeyContainer { get; set; }
+
+        public string KeyFile { get; set; }
+
+        public bool DelaySign { get; set; }
+
+        [Output]
+        public ITaskItem[] SerializationAssembly { get; set; }
+
+        public string SerializationAssemblyName { get; }
+
+        public string SdkToolsPath { get; set; }
+
+        public string Platform { get; set; }
+
+        public string[] Types { get; set; }
+
+    #endregion
+
+    #region Tool Members
+
+        protected override string ToolName
+        {
+            get
+            {
+                ErrorUtilities.ThrowInternalErrorUnreachable();
+                return null;
+            }
+        }
+
+        protected override string GenerateFullPathToTool()
+        {
+            ErrorUtilities.ThrowInternalErrorUnreachable();
+            return null;
+        }
+
+        public override bool Execute()
+        {
+            Log.LogErrorWithCodeFromResources("SGen.TaskNotSupported", nameof(SGen));
+            return false;
+        }
+
+    #endregion
+    }
+#else
     /// <summary>
     /// Genererates a serialization assembly containing XML serializers for the input assembly.
     /// </summary>
-    public class SGen : ToolTaskExtension
+    public class SGen : ToolTaskExtension, ISGenTaskContract
     {
         private string _buildAssemblyPath;
         #region Properties
@@ -332,4 +448,5 @@ protected override string GenerateCommandLineCommands()
 
         #endregion
     }
+#endif
 }
