diff --git a/src/Shared/INodePacket.cs b/src/Shared/INodePacket.cs
index a5eb06348bc..6cc3a790010 100644
--- a/src/Shared/INodePacket.cs
+++ b/src/Shared/INodePacket.cs
@@ -203,29 +203,36 @@ internal enum NodePacketType : byte
         /// </summary>
         ProcessReport,
 
+        // Server command packets with hardcoded values that don't have the 6th bit set.
+        // It is reserved for ExtendedHeaderFlag (0x40 = 0100 0000).
+        // Do not set it for any other packet types to avoid conflicts.
+        #region ServerNode enums 
+
         /// <summary>
         /// Command in form of MSBuild command line for server node - MSBuild Server.
-        /// Keep this enum value constant intact as this is part of contract with dotnet CLI
+        /// Keep this enum value constant intact as this is part of contract with dotnet CLI.
         /// </summary>
-        ServerNodeBuildCommand = 0xF0,
+        ServerNodeBuildCommand = 0x90, // Binary: 10010000
 
         /// <summary>
         /// Response from server node command
         /// Keep this enum value constant intact as this is part of contract with dotnet CLI
         /// </summary>
-        ServerNodeBuildResult = 0xF1,
+        ServerNodeBuildResult = 0x91, // Binary: 10010001
 
         /// <summary>
         /// Info about server console activity.
         /// Keep this enum value constant intact as this is part of contract with dotnet CLI
         /// </summary>
-        ServerNodeConsoleWrite = 0xF2,
+        ServerNodeConsoleWrite = 0x92, // Binary: 10010010
 
         /// <summary>
         /// Command to cancel ongoing build.
         /// Keep this enum value constant intact as this is part of contract with dotnet CLI
         /// </summary>
-        ServerNodeBuildCancel = 0xF3,
+        ServerNodeBuildCancel = 0x93, // Binary: 10010011
+
+        #endregion
     }
     #endregion
 
@@ -255,12 +262,11 @@ internal static class PacketTypeExtensions
 
         /// <summary>
         /// Determines if a packet has an extended header by checking if the extended header flag is set.
-        /// The secondary check with (byte)NodePacketType.ServerNodeBuildCommand ensures special server command packets (0xF0-0xFF) 
         /// are never interpreted as having extended headers, even if they happen to have the flag bit set.
         /// </summary>
         /// <param name="rawType">The raw packet type byte.</param>
         /// <returns>True if the packet has an extended header, false otherwise</returns>
-        public static bool HasExtendedHeader(byte rawType) => (rawType & ExtendedHeaderFlag) != 0 && (rawType < (byte)NodePacketType.ServerNodeBuildCommand);
+        public static bool HasExtendedHeader(byte rawType) => (rawType & ExtendedHeaderFlag) != 0;
 
         // Get base type, stripping the extended header flag
         public static NodePacketType GetNodePacketType(byte rawType) => (NodePacketType)(rawType & ~ExtendedHeaderFlag);
