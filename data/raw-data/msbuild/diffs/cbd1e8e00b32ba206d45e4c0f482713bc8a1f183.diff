diff --git a/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs b/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs
index 8ffa9d5a15d..5c27cd0beb6 100644
--- a/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs
+++ b/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs
@@ -24,7 +24,7 @@ public void ResolvesViaPlatformLookupTable()
         {
             // PlatformLookupTable always takes priority. It is typically user-defined.
             TaskItem projectReference = new TaskItem("foo.bar");
-            projectReference.SetMetadata("PlatformOptions", "x64;x86;AnyCPU");
+            projectReference.SetMetadata("Platforms", "x64;x86;AnyCPU");
 
             GetCompatiblePlatform task = new GetCompatiblePlatform()
             {
@@ -45,7 +45,7 @@ public void ResolvesViaChildsPlatformLookupTable()
             // A child's PlatformLookupTable takes priority over the current project's table.
             // This allows overrides on a per-ProjectItem basis.
             TaskItem projectReference = new TaskItem("foo.bar");
-            projectReference.SetMetadata("PlatformOptions", "x64;x86;AnyCPU");
+            projectReference.SetMetadata("Platforms", "x64;x86;AnyCPU");
 
             // childproj will be assigned x86 because its table takes priority
             projectReference.SetMetadata("PlatformLookupTable", "win32=x86");
@@ -70,7 +70,7 @@ public void ResolvesViaAnyCPUDefault()
             // it is inherently compatible with any platform.
 
             TaskItem projectReference = new TaskItem("foo.bar");
-            projectReference.SetMetadata("PlatformOptions", "x86;AnyCPU");
+            projectReference.SetMetadata("Platforms", "x86;AnyCPU");
 
             GetCompatiblePlatform task = new GetCompatiblePlatform()
             {
@@ -91,7 +91,7 @@ public void ResolvesViaSamePlatform()
             // No valid mapping via the lookup table, child project can't default to AnyCPU,
             // child project can match with parent project so match them.
             TaskItem projectReference = new TaskItem("foo.bar");
-            projectReference.SetMetadata("PlatformOptions", "x86;x64");
+            projectReference.SetMetadata("Platforms", "x86;x64");
 
             GetCompatiblePlatform task = new GetCompatiblePlatform()
             {
@@ -112,7 +112,7 @@ public void FailsToResolve()
             // No valid mapping via the lookup table, child project can't default to AnyCPU,
             // child can't match with parent, log a warning.
             TaskItem projectReference = new TaskItem("foo.bar");
-            projectReference.SetMetadata("PlatformOptions", "x64");
+            projectReference.SetMetadata("Platforms", "x64");
 
             GetCompatiblePlatform task = new GetCompatiblePlatform()
             {
@@ -134,7 +134,7 @@ public void FailsWhenProjectReferenceHasNoPlatformOptions()
             // Task should log a warning when a ProjectReference has no options to build as.
             // It will continue and have no NearestPlatform metadata.
             TaskItem projectReference = new TaskItem("foo.bar");
-            projectReference.SetMetadata("PlatformOptions", "");
+            projectReference.SetMetadata("Platforms", "");
 
             GetCompatiblePlatform task = new GetCompatiblePlatform()
             {
@@ -157,7 +157,7 @@ public void FailsWhenProjectReferenceHasNoPlatformOptions()
         public void FailsOnInvalidFormatLookupTable()
         {
             TaskItem projectReference = new TaskItem("foo.bar");
-            projectReference.SetMetadata("PlatformOptions", "x64");
+            projectReference.SetMetadata("Platforms", "x64");
 
             GetCompatiblePlatform task = new GetCompatiblePlatform()
             {
@@ -182,8 +182,8 @@ public void FailsOnInvalidFormatLookupTable()
         public void FailsOnInvalidFormatProjectReferenceLookupTable()
         {
             TaskItem projectReference = new TaskItem("foo.bar");
-            projectReference.SetMetadata("PlatformOptions", "x64;x86");
-            projectReference.SetMetadata("PlatformLookupTable", "x86=x;b=d");
+            projectReference.SetMetadata("Platforms", "x64;x86");
+            projectReference.SetMetadata("PlatformLookupTable", "x86=;b=d");
 
             GetCompatiblePlatform task = new GetCompatiblePlatform()
             {
@@ -192,7 +192,7 @@ public void FailsOnInvalidFormatProjectReferenceLookupTable()
                 PlatformLookupTable = "AnyCPU=x86;A=B", // invalid format
                 AnnotatedProjects = new TaskItem[] { projectReference },
             };
-            
+
             task.Execute();
 
             // A ProjectReference PlatformLookupTable should take priority, but is thrown away when
diff --git a/src/Tasks/GetCompatiblePlatform.cs b/src/Tasks/GetCompatiblePlatform.cs
index 44fb5a516df..a26cebef5e1 100644
--- a/src/Tasks/GetCompatiblePlatform.cs
+++ b/src/Tasks/GetCompatiblePlatform.cs
@@ -56,7 +56,7 @@ public override bool Execute()
             {
                 AssignedProjectsWithPlatform[i] = new TaskItem(AnnotatedProjects[i]);
 
-                string childPlatformOptions = AssignedProjectsWithPlatform[i].GetMetadata("PlatformOptions");
+                string childPlatformOptions = AssignedProjectsWithPlatform[i].GetMetadata("Platforms");
 
                 if (string.IsNullOrEmpty(childPlatformOptions))
                 {
diff --git a/src/Tasks/Microsoft.Common.CrossTargeting.targets b/src/Tasks/Microsoft.Common.CrossTargeting.targets
index 43adfa1c630..d34e3f2b1bb 100644
--- a/src/Tasks/Microsoft.Common.CrossTargeting.targets
+++ b/src/Tasks/Microsoft.Common.CrossTargeting.targets
@@ -49,7 +49,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
         <!-- Extract necessary information for SetPlatform negotiation -->
         <!-- This target does not run for cpp projects. -->
         <IsVcxOrNativeProj>false</IsVcxOrNativeProj>
-        <PlatformOptions>$(Platforms)</PlatformOptions>
+        <Platforms>$(Platforms)</Platforms>
       </_ThisProjectBuildMetadata>
     </ItemGroup>
 
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index 80972edc2bf..c94bb6ce2ce 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -1878,7 +1878,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
         <IsRidAgnostic Condition=" '$(RuntimeIdentifier)' == '' and '$(RuntimeIdentifiers)' == '' ">true</IsRidAgnostic>
         <!-- Extract necessary information for SetPlatform negotiation -->
         <IsVcxOrNativeProj Condition="'$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj'">true</IsVcxOrNativeProj>
-        <PlatformOptions>$(Platforms)</PlatformOptions>
+        <Platforms>$(Platforms)</Platforms>
       </_ThisProjectBuildMetadata>
     </ItemGroup>
 
