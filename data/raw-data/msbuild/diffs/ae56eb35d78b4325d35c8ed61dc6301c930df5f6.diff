diff --git a/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
index a95db23db31..1370efcf225 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
@@ -1144,8 +1144,8 @@ private async Task<BuildResult> BuildProject()
             //
             ConfigureWarningsAsErrorsAndMessages();
 
-            // Make sure nuget folders are known in order to be able to skip up to date check in them
-            ConfigureKnownNuGetFolders();
+            // Make sure to extract known immutable folders from properties and register them for fast up-to-date check
+            ConfigureKnownImmutableFolders();
 
             // See comment on Microsoft.Build.Internal.Utilities.GenerateToolsVersionToUse
             _requestEntry.RequestConfiguration.RetrieveFromCache();
@@ -1358,13 +1358,21 @@ private void ConfigureWarningsAsErrorsAndMessages()
             }
         }
 
-        private void ConfigureKnownNuGetFolders()
+        private void ConfigureKnownImmutableFolders()
         {
             ProjectInstance project = _requestEntry?.RequestConfiguration?.Project;
             if (project != null)
             {
-                string nuGetFolders = project.GetPropertyValue("NuGetPackageFolders")?.Trim();
-                FileClassifier.Shared.RegisterNuGetPackageFolders(nuGetFolders);
+                //example: C:\Users\USER_NAME\.nuget\;C:\Program Files\dotnet\sdk\NuGetFallbackFolder
+                FileClassifier.Shared.RegisterImmutableDirectories(project.GetPropertyValue("NuGetPackageFolders")?.Trim());
+                // example: C:\Windows\Microsoft.NET\Framework\v4.0.30319\
+                FileClassifier.Shared.RegisterImmutableDirectories(project.GetPropertyValue("MSBuildFrameworkToolsPath32")?.Trim());
+                // example:  C:\Windows\Microsoft.NET\Framework64\v4.0.30319\
+                FileClassifier.Shared.RegisterImmutableDirectories(project.GetPropertyValue("MSBuildFrameworkToolsPath64")?.Trim());
+                // example: C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.7.2
+                FileClassifier.Shared.RegisterImmutableDirectories(project.GetPropertyValue("FrameworkPathOverride")?.Trim());
+                // example: C:\Program Files\dotnet\
+                FileClassifier.Shared.RegisterImmutableDirectories(project.GetPropertyValue("NetCoreRoot")?.Trim());
             }
         }
 
diff --git a/src/Framework.UnitTests/FileClassifier_Tests.cs b/src/Framework.UnitTests/FileClassifier_Tests.cs
index 12796307674..04ca226c603 100644
--- a/src/Framework.UnitTests/FileClassifier_Tests.cs
+++ b/src/Framework.UnitTests/FileClassifier_Tests.cs
@@ -22,7 +22,7 @@ public void IsNonModifiable_EvaluatesModifiability()
             FileClassifier classifier = new();
 
             var volume = NativeMethodsShared.IsWindows ? @"X:\" : "/home/usr";
-            classifier.RegisterNuGetPackageFolders($"{Path.Combine(volume,"Test1")};{Path.Combine(volume, "Test2")}");
+            classifier.RegisterImmutableDirectories($"{Path.Combine(volume,"Test1")};{Path.Combine(volume, "Test2")}");
 
             classifier.IsNonModifiable(Path.Combine(volume, "Test1", "File.ext")).ShouldBeTrue();
             classifier.IsNonModifiable(Path.Combine(volume, "Test2", "File.ext")).ShouldBeTrue();
@@ -38,7 +38,7 @@ public void IsNonModifiable_DuplicateNugetRegistry_EvaluatesModifiability()
 
             for (int i = 0; i < 3; ++i)
             {
-                classifier.RegisterNuGetPackageFolders($"{Path.Combine(volume, "Test1")};{Path.Combine(volume, "Test2")}");
+                classifier.RegisterImmutableDirectories($"{Path.Combine(volume, "Test1")};{Path.Combine(volume, "Test2")}");
             }
 
             classifier.IsNonModifiable(Path.Combine(volume, "Test1", "File.ext")).ShouldBeTrue();
@@ -52,7 +52,7 @@ public void IsNonModifiable_RespectsOSCaseSensitivity()
             FileClassifier classifier = new();
 
             var volume = NativeMethodsShared.IsWindows ? @"X:\" : "/home/usr";
-            classifier.RegisterNuGetPackageFolders($"{Path.Combine(volume, "Test1")}");
+            classifier.RegisterImmutableDirectories($"{Path.Combine(volume, "Test1")}");
 
             if (NativeMethodsShared.IsLinux)
             {
diff --git a/src/Framework/FileClassifier.cs b/src/Framework/FileClassifier.cs
index 11138dc9cc5..7edc48b32de 100644
--- a/src/Framework/FileClassifier.cs
+++ b/src/Framework/FileClassifier.cs
@@ -76,12 +76,23 @@ internal class FileClassifier
         /// </summary>
         /// <remarks>
         ///     Individual projects NuGet folders are added during project build by calling
-        ///     <see cref="RegisterNuGetPackageFolders" />
+        ///     <see cref="RegisterImmutableDirectories" />
         /// </remarks>
         public FileClassifier()
         {
-            RegisterImmutableDirectory(Environment.GetEnvironmentVariable("ProgramW6432"));
-            RegisterImmutableDirectory(Environment.GetEnvironmentVariable("ProgramFiles(x86)"));
+            string? programFiles32 = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
+            string? programFiles64 = Environment.GetEnvironmentVariable("ProgramW6432");
+
+            if (!string.IsNullOrEmpty(programFiles32))
+            {
+                RegisterImmutableDirectory(Path.Combine(programFiles32, "Reference Assemblies", "Microsoft"));
+                RegisterImmutableDirectory(Path.Combine(programFiles32, "dotnet"));
+            }
+            if (!string.IsNullOrEmpty(programFiles64))
+            {
+                RegisterImmutableDirectory(Path.Combine(programFiles64, "Reference Assemblies", "Microsoft"));
+                RegisterImmutableDirectory(Path.Combine(programFiles64, "dotnet"));
+            }
             RegisterImmutableDirectory(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile), ".nuget", "packages"));
             RegisterImmutableDirectory(GetVSInstallationDirectory());
 
@@ -113,8 +124,7 @@ public FileClassifier()
         public static FileClassifier Shared => s_sharedInstance.Value;
 
         /// <summary>
-        ///     Try add paths found in the <c>NuGetPackageFolders</c> property value for a project into set of known immutable
-        ///     paths.
+        ///     Try add paths found into set of known immutable paths.
         ///     Project files under any of these folders are considered non-modifiable.
         /// </summary>
         /// <remarks>
@@ -124,9 +134,9 @@ public FileClassifier()
         /// <remarks>
         ///     Example value: <c>"C:\Users\myusername\.nuget\;D:\LocalNuGetCache\"</c>
         /// </remarks>
-        public void RegisterNuGetPackageFolders(string nuGetPackageFolders)
+        public void RegisterImmutableDirectories(string? nuGetPackageFolders)
         {
-            if (!string.IsNullOrEmpty(nuGetPackageFolders))
+            if (nuGetPackageFolders?.Length > 0)
             {
                 string[] folders = nuGetPackageFolders.Split(s_semicolonDelimiter, StringSplitOptions.RemoveEmptyEntries);
                 foreach (string folder in folders)
