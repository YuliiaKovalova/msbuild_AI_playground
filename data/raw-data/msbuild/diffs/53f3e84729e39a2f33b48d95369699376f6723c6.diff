diff --git a/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs b/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs
index ea525f0ea8b..8515e211ad5 100644
--- a/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs
@@ -787,8 +787,8 @@ public void ItemsRecursionOutsideTarget()
                     <Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
                      <ItemGroup>
                         <iout1 Include='a/b.foo' TargetPath='%(Filename)%(Extension)' />
-                        <iout1 Include='c\d.foo' TargetPath='%(Filename)%(Extension)' />
-                        <iout1 Include='g\h.foo' TargetPath='%(Filename)%(Extension)' />
+                        <iout1 Include='c/d.foo' TargetPath='%(Filename)%(Extension)' />
+                        <iout1 Include='g/h.foo' TargetPath='%(Filename)%(Extension)' />
                       </ItemGroup>
                       <Target Name='a'>
                         <Message Text="iout1=[@(iout1)]" Importance='High' />
@@ -802,7 +802,7 @@ public void ItemsRecursionOutsideTarget()
 
                 Console.WriteLine(logger.FullLog);
 
-                logger.AssertLogContains("iout1=[a/b.foo;c\\d.foo;g\\h.foo]");
+                logger.AssertLogContains("iout1=[a/b.foo;c/d.foo;g/h.foo]");
                 logger.AssertLogContains("iout1-target-paths=[b.foo;d.foo;h.foo]");
             }
             finally
@@ -827,8 +827,8 @@ public void ItemsRecursionWithinTarget()
                       <Target Name='a'>
                         <ItemGroup>
                           <iin1 Include='a/b.foo' TargetPath='%(Filename)%(Extension)' />
-                          <iin1 Include='c\d.foo' TargetPath='%(Filename)%(Extension)' />
-                          <iin1 Include='g\h.foo' TargetPath='%(Filename)%(Extension)' />
+                          <iin1 Include='c/d.foo' TargetPath='%(Filename)%(Extension)' />
+                          <iin1 Include='g/h.foo' TargetPath='%(Filename)%(Extension)' />
                         </ItemGroup>
                         <Message Text="iin1=[@(iin1)]" Importance='High' />
                         <Message Text="iin1-target-paths=[@(iin1->'%(TargetPath)')]" Importance='High' />
@@ -841,9 +841,9 @@ public void ItemsRecursionWithinTarget()
 
                 Console.WriteLine(logger.FullLog);
 
-                logger.AssertLogDoesntContain("iin1=[a/b.foo;c\\d.foo;g\\h.foo]");
+                logger.AssertLogDoesntContain("iin1=[a/b.foo;c/d.foo;g/h.foo]");
                 logger.AssertLogDoesntContain("iin1-target-paths=[b.foo;d.foo;h.foo]");
-                logger.AssertLogContains("iin1=[a/b.foo;c\\d.foo;g\\h.foo;g\\h.foo]");
+                logger.AssertLogContains("iin1=[a/b.foo;c/d.foo;g/h.foo;g/h.foo]");
                 logger.AssertLogContains("iin1-target-paths=[;b.foo;b.foo;d.foo]");
 
                 logger.AssertLogContains("MSB4120: Item 'iin1' definition within target is referencing self via metadata 'Extension' (qualified or unqualified). This can lead to unintended expansion and cross-applying of pre-existing items");
@@ -871,8 +871,8 @@ public void UnrelatedItemsRecursionWithinTarget()
                     <Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>
                       <ItemGroup>
                         <iout1 Include='a/b.foo'/>
-                        <iout1 Include='c\d.foo'/>
-                        <iout1 Include='g\h.foo'/>
+                        <iout1 Include='c/d.foo'/>
+                        <iout1 Include='g/h.foo'/>
                       </ItemGroup>
 
                       <Target Name='a'>
@@ -890,7 +890,7 @@ public void UnrelatedItemsRecursionWithinTarget()
 
                 Console.WriteLine(logger.FullLog);
 
-                logger.AssertLogContains("iin1=[a/b.foo;c\\d.foo;g\\h.foo]");
+                logger.AssertLogContains("iin1=[a/b.foo;c/d.foo;g/h.foo]");
                 logger.AssertLogContains("iin1-target-paths=[b.foo;d.foo;h.foo]");
 
                 logger.AssertLogDoesntContain("MSB4120");
