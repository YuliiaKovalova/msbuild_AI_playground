diff --git a/src/Framework/Traits.cs b/src/Framework/Traits.cs
index 299d6520608..e9f5083db68 100644
--- a/src/Framework/Traits.cs
+++ b/src/Framework/Traits.cs
@@ -35,11 +35,6 @@ public Traits()
 
         public EscapeHatches EscapeHatches { get; }
 
-        /// <summary>
-        /// https://github.com/dotnet/msbuild/issues/3897
-        /// </summary>
-        public readonly bool EnableHardcodedCultureNames = Environment.GetEnvironmentVariable("MSBUILDENABLEHARDCODEDCULTURENAMES") == "1";
-
         internal readonly string MSBuildDisableFeaturesFromVersion = Environment.GetEnvironmentVariable("MSBUILDDISABLEFEATURESFROMVERSION");
 
         /// <summary>
diff --git a/src/Tasks/CultureInfoCache.cs b/src/Tasks/CultureInfoCache.cs
index 291e68dab52..285794b3f96 100644
--- a/src/Tasks/CultureInfoCache.cs
+++ b/src/Tasks/CultureInfoCache.cs
@@ -4,7 +4,6 @@
 using System;
 using System.Collections.Generic;
 using System.Globalization;
-using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 
 #nullable disable
@@ -25,8 +24,6 @@ internal static class CultureInfoCache
         static HashSet<string> InitializeValidCultureNames()
         {
 #if !FEATURE_CULTUREINFO_GETCULTURES
-            // If we get here, we're in a pre-netstandard2.0 scenario.
-            // https://github.com/dotnet/msbuild/issues/2349#issuecomment-318161879
             if (!AssemblyUtilities.CultureInfoHasGetCultures())
             {
                 return HardcodedCultureNames;
@@ -38,13 +35,6 @@ static HashSet<string> InitializeValidCultureNames()
                 validCultureNames.Add(cultureName.Name);
             }
 
-#if !FEATURE_CULTUREINFO_GETCULTURES
-            if (Traits.Instance.EnableHardcodedCultureNames)
-            {
-                validCultureNames.UnionWith(HardcodedCultureNames);
-            }
-#endif
-
             // https://docs.microsoft.com/en-gb/windows/desktop/Intl/using-pseudo-locales-for-localization-testing
             // These pseudo-locales are available in versions of Windows from Vista and later.
             // However, from Windows 10, version 1803, they are not returned when enumerating the
