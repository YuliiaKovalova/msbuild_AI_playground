diff --git a/src/Utilities.UnitTests/ToolLocationHelper_Tests.cs b/src/Utilities.UnitTests/ToolLocationHelper_Tests.cs
index 845959692ef..30282dab454 100644
--- a/src/Utilities.UnitTests/ToolLocationHelper_Tests.cs
+++ b/src/Utilities.UnitTests/ToolLocationHelper_Tests.cs
@@ -1039,7 +1039,7 @@ public void GetPathToWindowsSdk()
 #pragma warning restore 618
 
 #if FEATURE_CODETASKFACTORY
-        private static readonly string s_verifyToolsetAndToolLocationHelperProjectCommonContent = @"
+        private const string VerifyToolsetAndToolLocationHelperProjectCommonContent = @"
                                     string currentInstallFolderLocation = null;
 
                                     using (RegistryKey baseKey = Registry.LocalMachine.OpenSubKey(""SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows""))
@@ -1121,7 +1121,7 @@ public void VerifyToolsetAndToolLocationHelperAgree()
                                     }
 
                                     string pathTo81WinSDK = ToolLocationHelper.GetPathToWindowsSdk(TargetDotNetFrameworkVersion.VersionLatest, VisualStudioVersion.VersionLatest);" +
-                                    s_verifyToolsetAndToolLocationHelperProjectCommonContent +
+                                    VerifyToolsetAndToolLocationHelperProjectCommonContent +
                                   @"if (!String.Equals(WindowsSDK80Path, pathTo81WinSDK, StringComparison.OrdinalIgnoreCase))
                                     {
                                         Log.LogError(""WindowsSDK80Path is incorrect! Registry: {0}  ToolLocationHelper: {1}"", WindowsSDK80Path, pathTo81WinSDK);
@@ -1167,7 +1167,7 @@ public void VerifyToolsetAndToolLocationHelperAgreeWhenVisualStudioVersionIsEmpt
 
                                     pathTo35Sdk = pathTo35Sdk == null ? pathTo35Sdk : Path.Combine(pathTo35Sdk, ""bin\\"");
                                     pathTo40Sdk = pathTo40Sdk == null ? pathTo40Sdk : Path.Combine(pathTo40Sdk, ""bin\\NetFX 4.0 Tools\\"");" +
-                                    s_verifyToolsetAndToolLocationHelperProjectCommonContent +
+                                    VerifyToolsetAndToolLocationHelperProjectCommonContent +
                                   @"return !Log.HasLoggedErrors;
                                 ]]>
                               </Code>
@@ -1209,7 +1209,7 @@ public void VerifyToolsetAndToolLocationHelperAgreeWhenVisualStudioVersionIs10()
 
                                     pathTo35Sdk = pathTo35Sdk == null ? pathTo35Sdk : Path.Combine(pathTo35Sdk, ""bin\\"");
                                     pathTo40Sdk = pathTo40Sdk == null ? pathTo40Sdk : Path.Combine(pathTo40Sdk, ""bin\\NetFX 4.0 Tools\\"");" +
-                                    s_verifyToolsetAndToolLocationHelperProjectCommonContent +
+                                    VerifyToolsetAndToolLocationHelperProjectCommonContent +
                                   @"return !Log.HasLoggedErrors;
                                 ]]>
                               </Code>
@@ -1254,7 +1254,7 @@ public void VerifyToolsetAndToolLocationHelperAgreeWhenVisualStudioVersionIs11()
 
                                     pathTo35Sdk = pathTo35Sdk == null ? pathTo35Sdk : Path.Combine(pathTo35Sdk, ""bin\\"");
                                     pathTo40Sdk = pathTo40Sdk == null ? pathTo40Sdk : Path.Combine(pathTo40Sdk, ""bin\\NetFX 4.0 Tools\\"");" +
-                                    s_verifyToolsetAndToolLocationHelperProjectCommonContent +
+                                    VerifyToolsetAndToolLocationHelperProjectCommonContent +
                                    @"if (String.IsNullOrEmpty(WindowsSDK80Path))
                                     {
                                         Log.LogWarning(""WindowsSDK80Path is empty, which is technically not correct, but we're letting it slide for now because the OTG build won't have the updated registry for a while.  Make sure we don't see this warning on PURITs runs, though!"");
diff --git a/src/Utilities/CommandLineBuilder.cs b/src/Utilities/CommandLineBuilder.cs
index 52f30d7510c..4fbb21b508c 100644
--- a/src/Utilities/CommandLineBuilder.cs
+++ b/src/Utilities/CommandLineBuilder.cs
@@ -112,19 +112,19 @@ public CommandLineBuilder(bool quoteHyphensOnCommandLine, bool useNewLineSeparat
         public override string ToString() => CommandLine.ToString();
 
         // Use if escaping of hyphens is supposed to take place
-        private static readonly string s_allowedUnquotedRegexNoHyphen =
+        private const string s_allowedUnquotedRegexNoHyphen =
                          "^"                             // Beginning of line
                        + @"[a-z\\/:0-9\._+=]*"
                        + "$";
 
-        private static readonly string s_definitelyNeedQuotesRegexWithHyphen = @"[|><\s,;\-""]+";
+        private const string s_definitelyNeedQuotesRegexWithHyphen = @"[|><\s,;\-""]+";
 
         // Use if escaping of hyphens is not to take place
-        private static readonly string s_allowedUnquotedRegexWithHyphen =
+        private const string s_allowedUnquotedRegexWithHyphen =
                         "^"                             // Beginning of line
                        + @"[a-z\\/:0-9\._\-+=]*"       //  Allow hyphen to be unquoted
                        + "$";
-        private static readonly string s_definitelyNeedQuotesRegexNoHyphen = @"[|><\s,;""]+";
+        private const string s_definitelyNeedQuotesRegexNoHyphen = @"[|><\s,;""]+";
 
         /// <summary>
         ///  Should hyphens be quoted or not
diff --git a/src/Utilities/TrackedDependencies/FileTracker.cs b/src/Utilities/TrackedDependencies/FileTracker.cs
index 6e59887bd4b..e81f203b2cf 100644
--- a/src/Utilities/TrackedDependencies/FileTracker.cs
+++ b/src/Utilities/TrackedDependencies/FileTracker.cs
@@ -88,11 +88,11 @@ public static class FileTracker
         private static readonly List<string> s_commonApplicationDataPaths;
 
         // The name of the standalone tracker tool.
-        private static readonly string s_TrackerFilename = "Tracker.exe";
+        private const string s_TrackerFilename = "Tracker.exe";
 
         // The name of the assembly that is injected into the executing process.
         // Detours handles picking between FileTracker{32,64}.dll so only mention one.
-        private static readonly string s_FileTrackerFilename = "FileTracker32.dll";
+        private const string s_FileTrackerFilename = "FileTracker32.dll";
 
         // The name of the PATH environment variable.
         private const string pathEnvironmentVariableName = "PATH";
