diff --git a/src/Deprecated/Engine/Engine/BuildTask.cs b/src/Deprecated/Engine/Engine/BuildTask.cs
index 6fc77b50924..4d7552ed0fa 100644
--- a/src/Deprecated/Engine/Engine/BuildTask.cs
+++ b/src/Deprecated/Engine/Engine/BuildTask.cs
@@ -310,7 +310,7 @@ public string[] GetParameterNames()
         {
             if (this.taskElement == null)
             {
-                return Array.Empty<string>();
+                return new string[0];
             }
 
             ArrayList list = new ArrayList();
diff --git a/src/Deprecated/Engine/Engine/Expander.cs b/src/Deprecated/Engine/Engine/Expander.cs
index 480dfee46e1..2cd7ba7bcd4 100644
--- a/src/Deprecated/Engine/Engine/Expander.cs
+++ b/src/Deprecated/Engine/Engine/Expander.cs
@@ -1517,7 +1517,7 @@ private static Function ConstructFunction(string expressionFunction, string expr
                     // It may be that there are '()' but no actual arguments content
                     if (argumentStartIndex == expressionFunction.Length - 1)
                     {
-                        functionArguments = Array.Empty<string>();
+                        functionArguments = new string[0];
                     }
                     else
                     {
@@ -1527,7 +1527,7 @@ private static Function ConstructFunction(string expressionFunction, string expr
                         // If there are no arguments, then just create an empty array
                         if (String.IsNullOrEmpty(argumentsContent))
                         {
-                            functionArguments = Array.Empty<string>();
+                            functionArguments = new string[0];
                         }
                         else
                         {
@@ -1543,7 +1543,7 @@ private static Function ConstructFunction(string expressionFunction, string expr
                     int nextMethodIndex = expressionFunction.IndexOf('.', methodStartIndex);
                     int methodLength = expressionFunction.Length - methodStartIndex;
 
-                    functionArguments = Array.Empty<string>();
+                    functionArguments = new string[0];
 
                     if (nextMethodIndex > 0)
                     {
diff --git a/src/Deprecated/Engine/Engine/Project.cs b/src/Deprecated/Engine/Engine/Project.cs
index 4c0ddb0e1c8..fa38a06859d 100644
--- a/src/Deprecated/Engine/Engine/Project.cs
+++ b/src/Deprecated/Engine/Engine/Project.cs
@@ -408,7 +408,7 @@ string toolsVersion
                 this.targets = new TargetCollection(this);
 
                 // Initialize the default targets, initial targets, and project file name.
-                this.defaultTargetNames = Array.Empty<string>();
+                this.defaultTargetNames = new string[0];
                 this.initialTargetNamesInMainProject = new ArrayList();
                 this.initialTargetNamesInImportedProjects = new ArrayList();
                 this.FullFileName = String.Empty;
@@ -1549,7 +1549,7 @@ string propertyName
 
             if (propertyValues == null)
             {
-                return Array.Empty<string>();
+                return new string[0];
             }
             else
             {
@@ -3743,7 +3743,7 @@ private void ProcessMainProjectElement
             this.evaluatedItemsIgnoringCondition.Clear();
             this.targets.Clear();
             this.nameOfFirstTarget = null;
-            this.defaultTargetNames = Array.Empty<string>();
+            this.defaultTargetNames = new string[0];
             this.initialTargetNamesInImportedProjects.Clear();
             this.initialTargetNamesInMainProject.Clear();
 
diff --git a/src/Deprecated/Engine/Engine/RegistryKeyWrapper.cs b/src/Deprecated/Engine/Engine/RegistryKeyWrapper.cs
index 188bbb81ad1..b0a635794c7 100644
--- a/src/Deprecated/Engine/Engine/RegistryKeyWrapper.cs
+++ b/src/Deprecated/Engine/Engine/RegistryKeyWrapper.cs
@@ -110,7 +110,7 @@ public virtual string[] GetValueNames()
         {
             try
             {
-                return Exists() ? WrappedKey.GetValueNames() : Array.Empty<string>();
+                return Exists() ? WrappedKey.GetValueNames() : new string[] { };
             }
             catch (Exception ex)
             {
@@ -129,7 +129,7 @@ public virtual string[] GetSubKeyNames()
         {
             try
             {
-                return Exists() ? WrappedKey.GetSubKeyNames() : Array.Empty<string>();
+                return Exists() ? WrappedKey.GetSubKeyNames() : new string[] { };
             }
             catch (Exception ex)
             {
diff --git a/src/Deprecated/Engine/Engine/ToolsetRegistryReader.cs b/src/Deprecated/Engine/Engine/ToolsetRegistryReader.cs
index 8fce018f88f..4935eaea24e 100644
--- a/src/Deprecated/Engine/Engine/ToolsetRegistryReader.cs
+++ b/src/Deprecated/Engine/Engine/ToolsetRegistryReader.cs
@@ -57,7 +57,7 @@ protected override IEnumerable<PropertyDefinition> ToolsVersions
         {
             get
             {
-                string[] toolsVersionNames = System.Array.Empty<string>();
+                string[] toolsVersionNames = new string[] { };
                 try
                 {
                     toolsVersionNames = msbuildRegistryWrapper.OpenSubKey("ToolsVersions").GetSubKeyNames();
diff --git a/src/Deprecated/Engine/Logging/ParallelLogger/ParallelLoggerHelpers.cs b/src/Deprecated/Engine/Logging/ParallelLogger/ParallelLoggerHelpers.cs
index 3bde1782032..8470aca7630 100644
--- a/src/Deprecated/Engine/Logging/ParallelLogger/ParallelLoggerHelpers.cs
+++ b/src/Deprecated/Engine/Logging/ParallelLogger/ParallelLoggerHelpers.cs
@@ -149,7 +149,7 @@ internal string[] ProjectCallStackFromProject(BuildEventContext e)
             // or the event is raised before the project started event
             if (startedEvent == null)
             {
-                return Array.Empty<string>();
+                return new string[0];
             }
 
             List<ProjectStartedEventMinimumFields> projectStackTrace = GetProjectCallStack(e);
diff --git a/src/Deprecated/Engine/Shared/FileMatcher.cs b/src/Deprecated/Engine/Shared/FileMatcher.cs
index c18f30d1fca..3292f664426 100644
--- a/src/Deprecated/Engine/Shared/FileMatcher.cs
+++ b/src/Deprecated/Engine/Shared/FileMatcher.cs
@@ -121,7 +121,7 @@ private static string[] GetAccessibleFilesAndDirectories(string path, string pat
 
             if (entries == null)
             {
-                entries = Array.Empty<string>();
+                entries = new string[0];
             }
 
             return entries;
@@ -177,12 +177,12 @@ bool   stripProjectDirectory
             catch (System.Security.SecurityException)
             {
                 // For code access security.
-                return Array.Empty<string>();
+                return new string[0];
             }
             catch (System.UnauthorizedAccessException)
             {
                 // For OS security.
-                return Array.Empty<string>();
+                return new string[0];
             }
         }
 
@@ -229,12 +229,12 @@ string pattern
             catch (System.Security.SecurityException)
             {
                 // For code access security.
-                return Array.Empty<string>();
+                return new string[0];
             }
             catch (System.UnauthorizedAccessException)
             {
                 // For OS security.
-                return Array.Empty<string>();
+                return new string[0];
             }
         }
 
@@ -1198,7 +1198,7 @@ DirectoryExists directoryExists
                     }
                     catch (ArgumentException)
                     {
-                        return Array.Empty<string>();
+                        return new string[0];
                     }
 
                     stripProjectDirectory = !String.Equals(fixedDirectoryPart, oldFixedDirectoryPart, StringComparison.OrdinalIgnoreCase);
@@ -1216,7 +1216,7 @@ DirectoryExists directoryExists
              */
             if (fixedDirectoryPart.Length > 0 && !directoryExists(fixedDirectoryPart))
             {
-                return Array.Empty<string>();
+                return new string[0];
             }
 
             // determine if we need to use the regular expression to match the files
