diff --git a/src/Build/BuildCheck/Checks/NoEnvironmentVariablePropertyCheck.cs b/src/Build/BuildCheck/Checks/NoEnvironmentVariablePropertyCheck.cs
index a9251e8d07d..3f0052b8d85 100644
--- a/src/Build/BuildCheck/Checks/NoEnvironmentVariablePropertyCheck.cs
+++ b/src/Build/BuildCheck/Checks/NoEnvironmentVariablePropertyCheck.cs
@@ -27,7 +27,7 @@ internal sealed class NoEnvironmentVariablePropertyCheck : Check
     private readonly HashSet<EnvironmentVariableIdentityKey> _environmentVariablesReported = new HashSet<EnvironmentVariableIdentityKey>();
 
     private bool _isVerboseEnvVarOutput;
-    private EvaluationAnalysisScope _scope;
+    private EvaluationCheckScope _scope;
 
     public override string FriendlyName => "MSBuild.NoEnvironmentVariablePropertyCheck";
 
@@ -35,7 +35,7 @@ internal sealed class NoEnvironmentVariablePropertyCheck : Check
 
     public override void Initialize(ConfigurationContext configurationContext)
     {
-        _scope = configurationContext.BuildAnalyzerConfig[0].EvaluationAnalysisScope;
+        _scope = configurationContext.CheckConfig[0].EvaluationCheckScope;
         foreach (CustomConfigurationData customConfigurationData in configurationContext.CustomConfigurationData)
         {
             bool? isVerboseEnvVarOutput = GetVerboseEnvVarOutputConfig(customConfigurationData, RuleId);
@@ -51,7 +51,7 @@ private void ProcessEnvironmentVariableReadAction(BuildCheckDataContext<Evaluate
         {
             foreach (var envVariableData in context.Data.EvaluatedEnvironmentVariables)
             {
-                if (!AnalysisScopeClassifier.IsActionInObservedScope(_scope, envVariableData.Value.File,
+                if (!CheckScopeClassifier.IsActionInObservedScope(_scope, envVariableData.Value.File,
                         context.Data.ProjectFilePath))
                 {
                     continue;
diff --git a/src/Build/BuildCheck/Infrastructure/CheckScopeClassifier.cs b/src/Build/BuildCheck/Infrastructure/CheckScopeClassifier.cs
index c5194d49a49..fdd3e04ebcc 100644
--- a/src/Build/BuildCheck/Infrastructure/CheckScopeClassifier.cs
+++ b/src/Build/BuildCheck/Infrastructure/CheckScopeClassifier.cs
@@ -32,7 +32,7 @@ internal static bool IsActionInObservedScope(
     /// <returns></returns>
     /// <exception cref="ArgumentOutOfRangeException"></exception>
     internal static bool IsActionInObservedScope(
-        EvaluationAnalysisScope scope,
+        EvaluationCheckScope scope,
         string? filePathOfEvent,
         string projectFileFullPath)
     {
