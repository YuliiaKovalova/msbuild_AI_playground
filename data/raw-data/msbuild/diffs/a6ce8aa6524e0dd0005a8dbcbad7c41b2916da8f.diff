diff --git a/src/Shared/FileUtilities.cs b/src/Shared/FileUtilities.cs
index f3a467cd5d4..9597627c0ca 100644
--- a/src/Shared/FileUtilities.cs
+++ b/src/Shared/FileUtilities.cs
@@ -248,9 +248,9 @@ internal static string EnsureNoTrailingSlash(string path)
         /// </summary>
         /// <param name="path"></param>
         /// <returns></returns>
-        internal static string EnsureSingleQuoted(string path)
+        internal static string EnsureSingleQuotes(string path)
         {
-            return EnsureQuoted(path);
+            return EnsureQuotes(path);
         }
 
         /// <summary>
@@ -258,18 +258,18 @@ internal static string EnsureSingleQuoted(string path)
         /// </summary>
         /// <param name="path"></param>
         /// <returns></returns>
-        internal static string EnsureDoubleQuoted(string path)
+        internal static string EnsureDoubleQuotes(string path)
         {
-            return EnsureQuoted(path, isSingleQuote: false);
+            return EnsureQuotes(path, isSingleQuote: false);
         }
 
         /// <summary>
         /// Ensures the path is enclosed within quotes.
         /// </summary>
         /// <param name="path"></param>
-        /// <param name="isSingleQuote">indicates if single or double quotes shoud be used</param>
+        /// <param name="isSingleQuote">indicates if single or double quotes should be used</param>
         /// <returns></returns>
-        internal static string EnsureQuoted(string path, bool isSingleQuote = true)
+        internal static string EnsureQuotes(string path, bool isSingleQuote = true)
         {
             path = FixFilePath(path);
 
diff --git a/src/Shared/UnitTests/FileUtilities_Tests.cs b/src/Shared/UnitTests/FileUtilities_Tests.cs
index 5a624c93fa5..3f9c53f3a68 100644
--- a/src/Shared/UnitTests/FileUtilities_Tests.cs
+++ b/src/Shared/UnitTests/FileUtilities_Tests.cs
@@ -1091,7 +1091,7 @@ public static void TestTruncatePathToTrailingSegments(string path, int trailingS
         }
 
         /// <summary>
-        /// Exercises FileUtilities.EnsureSingleQuoted
+        /// Exercises FileUtilities.EnsureSingleQuotes
         /// </summary>
         [Theory]
         [InlineData(null, null)] // Null test
@@ -1105,13 +1105,13 @@ public static void TestTruncatePathToTrailingSegments(string path, int trailingS
         [InlineData(@"'example""", @"''example""'")] // Mixed Quotes - Leading Single
         [InlineData(@"""example'", @"'""example''")] // Mixed Quotes - Leading Double
         [InlineData(@"ex""am'ple", @"'ex""am'ple'")] // Interior Quotes
-        public void EnsureSingleQuotedTest(string path, string expectedResult)
+        public void EnsureSingleQuotesTest(string path, string expectedResult)
         {
-            FileUtilities.EnsureSingleQuoted(path).ShouldBe(expectedResult);
+            FileUtilities.EnsureSingleQuotes(path).ShouldBe(expectedResult);
         }
 
         /// <summary>
-        /// Exercises FileUtilities.EnsureDoubleQuoted
+        /// Exercises FileUtilities.EnsureDoubleQuotes
         /// </summary>
         [Theory]
         [InlineData(null, null)] // Null test
@@ -1125,9 +1125,9 @@ public void EnsureSingleQuotedTest(string path, string expectedResult)
         [InlineData(@"'example""", @"""'example""""")] // Mixed Quotes - Leading Single
         [InlineData(@"""example'", @"""""example'""")] // Mixed Quotes - Leading Double
         [InlineData(@"ex""am'ple", @"""ex""am'ple""")] // Interior Quotes
-        public void EnsureDoubleQuotedTest(string path, string expectedResult)
+        public void EnsureDoubleQuotesTest(string path, string expectedResult)
         {
-            FileUtilities.EnsureDoubleQuoted(path).ShouldBe(expectedResult);
+            FileUtilities.EnsureDoubleQuotes(path).ShouldBe(expectedResult);
         }
     }
 }
