diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
index e71a3a163d7..c7b61885bf3 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
@@ -2,13 +2,10 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
-using System.Buffers;
 using System.Collections;
 using System.Collections.Generic;
-using System.Diagnostics;
 using System.IO;
 using System.IO.Compression;
-using System.Linq;
 using System.Reflection;
 using System.Runtime.CompilerServices;
 using System.Text;
@@ -1094,7 +1091,6 @@ private BuildEventArgs ReadCriticalBuildMessageEventArgs()
 
         private BuildEventArgs ReadEnvironmentVariableReadEventArgs()
         {
-            Debugger.Launch();
             var fields = ReadBuildEventArgsFields(readImportance: true);
             var environmentVariableName = ReadDeduplicatedString();
 
diff --git a/src/Shared/LogMessagePacketBase.cs b/src/Shared/LogMessagePacketBase.cs
index 3770b80c09d..f35acc7fbeb 100644
--- a/src/Shared/LogMessagePacketBase.cs
+++ b/src/Shared/LogMessagePacketBase.cs
@@ -240,6 +240,11 @@ internal enum LoggingEventType : int
         /// Event is <see cref="BuildCheckAcquisitionEventArgs"/>
         /// </summary>
         BuildCheckAcquisitionEvent = 39,
+
+        /// <summary>
+        /// Event is <see cref="ExtendedEnvironmentVariableReadEventArgs"/>.
+        /// </summary>
+        ExtendedEnvironmentVariableReadEventArgs = 40
     }
     #endregion
 
@@ -641,6 +646,7 @@ private BuildEventArgs GetBuildEventArgFromId()
                 LoggingEventType.ExtendedCriticalBuildMessageEvent => new ExtendedCriticalBuildMessageEventArgs(),
                 LoggingEventType.ExternalProjectStartedEvent => new ExternalProjectStartedEventArgs(null, null, null, null, null),
                 LoggingEventType.ExternalProjectFinishedEvent => new ExternalProjectFinishedEventArgs(null, null, null, null, false),
+                LoggingEventType.ExtendedEnvironmentVariableReadEventArgs => new ExtendedEnvironmentVariableReadEventArgs(),
                 LoggingEventType.CriticalBuildMessage => new CriticalBuildMessageEventArgs(null, null, null, -1, -1, -1, -1, null, null, null),
                 LoggingEventType.MetaprojectGenerated => new MetaprojectGeneratedEventArgs(null, null, null),
                 LoggingEventType.PropertyInitialValueSet => new PropertyInitialValueSetEventArgs(),
