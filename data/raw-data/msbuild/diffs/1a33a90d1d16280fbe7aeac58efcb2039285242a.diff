diff --git a/eng/CodeAnalysis.ruleset b/eng/CodeAnalysis.ruleset
index 2078c42fe6c..fec1f95ebf2 100644
--- a/eng/CodeAnalysis.ruleset
+++ b/eng/CodeAnalysis.ruleset
@@ -66,7 +66,7 @@
     <Rule Id="CA1502" Action="None" />             <!-- Avoid excessive complexity --> 
     <Rule Id="CA1505" Action="None" />             <!-- Avoid unmaintainable code --> 
     <Rule Id="CA1506" Action="None" />             <!-- Avoid excessive class coupling --> 
-    <Rule Id="CA1507" Action="Info" />             <!-- Use nameof to express symbol names --> 
+    <Rule Id="CA1507" Action="Warning" />          <!-- Use nameof to express symbol names --> 
     <Rule Id="CA1508" Action="None" />             <!-- Avoid dead conditional code --> 
     <Rule Id="CA1509" Action="None" />             <!-- Invalid entry in code metrics rule specification file --> 
     <Rule Id="CA1700" Action="None" />             <!-- Do not name enum values 'Reserved' --> 
diff --git a/src/Shared/ToolsetElement.cs b/src/Shared/ToolsetElement.cs
index f3f240f8537..de6e82da1c4 100644
--- a/src/Shared/ToolsetElement.cs
+++ b/src/Shared/ToolsetElement.cs
@@ -132,7 +132,7 @@ public string toolsVersion
         {
             get
             {
-                return (string)base["toolsVersion"];
+                return (string)base[nameof(toolsVersion)];
             }
 
             set
@@ -738,7 +738,7 @@ public string DefaultOverrideToolsVersion
                 // whenever the base class gives us an empty string.
                 // Note this means we can't distinguish between the attribute being present but containing
                 // an empty string for its value and the attribute not being present at all.
-                string defaultValue = (string)base["DefaultOverrideToolsVersion"];
+                string defaultValue = (string)base[nameof(DefaultOverrideToolsVersion)];
                 return String.IsNullOrEmpty(defaultValue) ? null : defaultValue;
             }
 
