diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
index 3d413b9925e..fd048a8c16a 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
@@ -697,15 +697,6 @@ public int RequestCores(int requestedCores)
             return coresAcquired;
         }
 
-        public void RequireCores(int requestedCores)
-        {
-            var rms = _host.GetComponent(BuildComponentType.TaskResourceManager) as ResourceManagerService;
-
-            rms.RequireCores(requestedCores);
-
-            runningTotal += requestedCores; // default reservation
-        }
-
         public void ReleaseCores(int coresToRelease)
         {
             var rms = _host.GetComponent(BuildComponentType.TaskResourceManager) as ResourceManagerService;
diff --git a/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs b/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
index 72ba752baed..8d2d718b84f 100644
--- a/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
+++ b/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
@@ -102,25 +102,6 @@ public void ReleaseCores(int coresToRelease)
 
 #if DEBUG
             TotalNumberHeld -= coresToRelease;
-#endif
-        }
-
-        internal void RequireCores(int requestedCores)
-        {
-            if (s is null)
-            {
-                // TODO: ErrorUtilities should be annotated so this can just be `ErrorUtilities.VerifyThrow`
-                // https://github.com/microsoft/msbuild/issues/5163
-                throw new InternalErrorException($"{nameof(ResourceManagerService)} was called while uninitialized");
-            }
-
-            if (!s.WaitOne())
-            {
-                ErrorUtilities.ThrowInternalError("Couldn't get a core to run a task even with infinite timeout");
-            }
-
-#if DEBUG
-            TotalNumberHeld++;
 #endif
         }
     }
