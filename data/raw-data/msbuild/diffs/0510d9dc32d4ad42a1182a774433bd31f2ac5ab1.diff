diff --git a/src/Framework/TaskExecutionContext.cs b/src/Framework/TaskExecutionContext.cs
index 4ded27e166c..e4530eb994f 100644
--- a/src/Framework/TaskExecutionContext.cs
+++ b/src/Framework/TaskExecutionContext.cs
@@ -45,8 +45,11 @@ public string GetFullPath(string path)
 
             try
             {
-                // TODO: Does GetFullPath access the file system? If so, find a way to remove internal ../ and ./ without it.
-                // Use URI, perhaps?
+                // Path.GetFullPath is using in order to eliminate possible "./" and "../" in the resulted path.
+                // TODO: Check what version of Path.GetFullPath we are using. Does it use IO operations in file system? If yes, consider other options for dealing with "./" and "../".
+                // However, if the combined path consists of different path separators (both windows and unix style),
+                // then the behavior of Path.GetFullPath differs in windows and unix systems. Windows' function eleminates the internal "./" and "../"
+                // and Unix's function does not. We are using FixFilePath to remove windows-style separators when on unix machine.
                 return Path.GetFullPath(Path.Combine(StartupDirectory, FixFilePath(path)));
             }
             catch { }
@@ -54,7 +57,13 @@ public string GetFullPath(string path)
             return path;
         }
 
-        // TODO: consider to use the function from FileUtilities
+        // This function is a duplicate of FileUtilities.FixFilePath.
+        // The reason for code duplication is that we do not want to bring new dependencies to Microsoft.Build.Framework.
+        /// <summary>
+        /// Replaces Windows-style path separators with Unix-style path separators, when performed on unix.
+        /// </summary>
+        /// <param name="path"></param>
+        /// <returns></returns>
         private static string FixFilePath(string path)
         {
             return string.IsNullOrEmpty(path) || Path.DirectorySeparatorChar == '\\' ? path : path.Replace('\\', '/');//.Replace("//", "/");
diff --git a/src/Shared/FileUtilities.cs b/src/Shared/FileUtilities.cs
index cf40546ec51..3793d85a877 100644
--- a/src/Shared/FileUtilities.cs
+++ b/src/Shared/FileUtilities.cs
@@ -176,6 +176,8 @@ internal static void ClearCacheDirectory()
             }
         }
 
+        // There is a duplicate for this function in TaskExecutionContext.cs
+        // The reason for code duplication is that we do not want to bring new dependencies to Microsoft.Build.Framework.
         /// <summary>
         /// If the given path doesn't have a trailing slash then add one.
         /// If the path is an empty string, does not modify it.
