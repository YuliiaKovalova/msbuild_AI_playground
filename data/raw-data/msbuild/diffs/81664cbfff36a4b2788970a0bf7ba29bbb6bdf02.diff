diff --git a/src/Build.UnitTests/BackEnd/OpenTelemetryManager_Tests.cs b/src/Build.UnitTests/BackEnd/OpenTelemetryManager_Tests.cs
index 82cbf15b2f6..f4e231a77c0 100644
--- a/src/Build.UnitTests/BackEnd/OpenTelemetryManager_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/OpenTelemetryManager_Tests.cs
@@ -22,14 +22,32 @@ public class OpenTelemetryManagerTests : IDisposable
         private const string DotnetOptOut = "DOTNET_CLI_TELEMETRY_OPTOUT";
         private const string TelemetrySampleRateOverrideEnvVarName = "MSBUILD_TELEMETRY_SAMPLE_RATE";
 
+        private string? preTestFxOptout;
+        private string? preTestDotnetOptout;
+        private string? preTestSampleRate;
+
         public OpenTelemetryManagerTests()
         {
-
-            // Reset the manager state at the start of each test.
+            // control environment state before each test
+            SaveEnvVars();
             ResetManagerState();
             ResetEnvVars();
         }
 
+        private void SaveEnvVars()
+        {
+            preTestFxOptout = Environment.GetEnvironmentVariable(TelemetryFxOptoutEnvVarName);
+            preTestDotnetOptout = Environment.GetEnvironmentVariable(DotnetOptOut);
+            preTestSampleRate = Environment.GetEnvironmentVariable(TelemetrySampleRateOverrideEnvVarName);
+        }
+
+        private void RestoreEnvVars()
+        {
+            Environment.SetEnvironmentVariable(TelemetryFxOptoutEnvVarName, preTestFxOptout);
+            Environment.SetEnvironmentVariable(DotnetOptOut, preTestDotnetOptout);
+            Environment.SetEnvironmentVariable(TelemetrySampleRateOverrideEnvVarName, preTestSampleRate);
+        }
+
         private void ResetEnvVars()
         {
             Environment.SetEnvironmentVariable(DotnetOptOut, null);
@@ -39,10 +57,7 @@ private void ResetEnvVars()
 
         public void Dispose()
         {
-            ResetEnvVars();
-
-            // Reset again in case the test created new references or manipulated the singleton after environment cleanup.
-            ResetManagerState();
+            RestoreEnvVars();
         }
 
         [Theory]
