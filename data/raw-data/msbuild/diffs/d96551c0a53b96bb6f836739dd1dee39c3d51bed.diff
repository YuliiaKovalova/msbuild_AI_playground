diff --git a/src/MSBuild.UnitTests/XMake_Tests.cs b/src/MSBuild.UnitTests/XMake_Tests.cs
index 34a6f26386d..b6c0dffe140 100644
--- a/src/MSBuild.UnitTests/XMake_Tests.cs
+++ b/src/MSBuild.UnitTests/XMake_Tests.cs
@@ -664,7 +664,7 @@ public void ConsoleUIRespectsSDKLanguage()
 
                 MSBuildApp.SetConsoleUI();
 
-                Assert.Equal(thisThread.CurrentUICulture, new CultureInfo("ja"));
+                Assert.Equal(new CultureInfo("ja"), thisThread.CurrentUICulture);
                 Assert.Equal(65001, Console.OutputEncoding.CodePage); // utf 8 enabled for correct rendering.
             }
             finally
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 6a01bf028e0..4eb29d53fef 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1638,19 +1638,19 @@ internal static void SetConsoleUI()
             Thread thisThread = Thread.CurrentThread;
 
             // Eliminate the complex script cultures from the language selection.
-            thisThread.CurrentUICulture = GetExternalOverridenUILanguageIfSupportableWithEncoding() ?? CultureInfo.CurrentUICulture.GetConsoleFallbackUICulture();
+            var desiredCulture = GetExternalOverridenUILanguageIfSupportableWithEncoding() ?? CultureInfo.CurrentUICulture.GetConsoleFallbackUICulture();
+            thisThread.CurrentUICulture = desiredCulture;
             // For full framework, both the above and below must be set. This is not true in core, but it is a no op in core.
-            // // https://learn.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo.defaultthreadcurrentculture?redirectedfrom=MSDN&view=net-7.0#remarks
-            CultureInfo.CurrentCulture = thisThread.CurrentUICulture;
-            CultureInfo.CurrentUICulture = thisThread.CurrentUICulture;
-            CultureInfo.DefaultThreadCurrentUICulture = thisThread.CurrentUICulture;
+            // https://learn.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo.defaultthreadcurrentculture?redirectedfrom=MSDN&view=net-7.0#remarks
+            CultureInfo.CurrentUICulture = desiredCulture;
+            CultureInfo.DefaultThreadCurrentUICulture = desiredCulture;
 
             // Determine if the language can be displayed in the current console codepage, otherwise set to US English
             int codepage;
 
             try
             {
-                codepage = System.Console.OutputEncoding.CodePage;
+                codepage = Console.OutputEncoding.CodePage;
             }
             catch (NotSupportedException)
             {
