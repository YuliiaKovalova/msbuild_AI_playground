diff --git a/src/Build/BackEnd/Client/MSBuildClient.cs b/src/Build/BackEnd/Client/MSBuildClient.cs
index 6cdc1116905..76f47cb11a4 100644
--- a/src/Build/BackEnd/Client/MSBuildClient.cs
+++ b/src/Build/BackEnd/Client/MSBuildClient.cs
@@ -158,6 +158,9 @@ public MSBuildClientExitResult Execute(string commandLine, CancellationToken can
                 return _exitResult;
             }
 
+            int numConsoleWritePackets = 0;
+            long sizeOfConsoleWritePackets = 0;
+
             try
             {
                 // Start packet pump
@@ -194,7 +197,12 @@ public MSBuildClientExitResult Execute(string commandLine, CancellationToken can
                             {
                                 if (packet != null)
                                 {
-                                    HandlePacket(packet);
+                                    int size = HandlePacket(packet);
+                                    if (size > -1)
+                                    {
+                                        numConsoleWritePackets++;
+                                        sizeOfConsoleWritePackets += size;
+                                    }
                                 }
                             }
 
@@ -208,7 +216,7 @@ public MSBuildClientExitResult Execute(string commandLine, CancellationToken can
                 _exitResult.MSBuildClientExitType = MSBuildClientExitType.Unexpected;
             }
 
-            MSBuildEventSource.Log.MSBuildServerBuildStop(commandLine);
+            MSBuildEventSource.Log.MSBuildServerBuildStop(commandLine, numConsoleWritePackets, sizeOfConsoleWritePackets, _exitResult.MSBuildClientExitType.ToString(), _exitResult.MSBuildAppExitTypeString);
             CommunicationsUtilities.Trace("Build finished.");
             return _exitResult;
         }
@@ -351,16 +359,17 @@ private void HandlePacketPumpError(MSBuildClientPacketPump packetPump)
         /// <summary>
         /// Dispatches the packet to the correct handler.
         /// </summary>
-        private void HandlePacket(INodePacket packet)
+        private int HandlePacket(INodePacket packet)
         {
             switch (packet.Type)
             {
                 case NodePacketType.ServerNodeConsoleWrite:
-                    HandleServerNodeConsoleWrite((ServerNodeConsoleWrite)packet);
-                    break;
+                    ServerNodeConsoleWrite writePacket = (packet as ServerNodeConsoleWrite)!;
+                    HandleServerNodeConsoleWrite(writePacket);
+                    return writePacket.Text.Length;
                 case NodePacketType.ServerNodeBuildResult:
                     HandleServerNodeBuildResult((ServerNodeBuildResult)packet);
-                    break;
+                    return -1;
                 default: throw new InvalidOperationException($"Unexpected packet type {packet.GetType().Name}");
             }
         }
diff --git a/src/Framework/MSBuildEventSource.cs b/src/Framework/MSBuildEventSource.cs
index e7bc6e2f433..708f5f6a31b 100644
--- a/src/Framework/MSBuildEventSource.cs
+++ b/src/Framework/MSBuildEventSource.cs
@@ -606,9 +606,9 @@ public void MSBuildServerBuildStart(string commandLine)
         }
 
         [Event(82, Keywords = Keywords.All)]
-        public void MSBuildServerBuildStop(string commandLine)
+        public void MSBuildServerBuildStop(string commandLine, int countOfConsoleMessages, long sumSizeOfConsoleMessages, string clientExitType, string serverExitType)
         {
-            WriteEvent(82, commandLine);
+            WriteEvent(82, commandLine, countOfConsoleMessages, sumSizeOfConsoleMessages, clientExitType, serverExitType);
         }
 
         #endregion
