diff --git a/src/Build/BackEnd/Components/Caching/ConfigCacheWithOverride.cs b/src/Build/BackEnd/Components/Caching/ConfigCacheWithOverride.cs
index 4660a22db52..7c71d934b79 100644
--- a/src/Build/BackEnd/Components/Caching/ConfigCacheWithOverride.cs
+++ b/src/Build/BackEnd/Components/Caching/ConfigCacheWithOverride.cs
@@ -50,7 +50,7 @@ public BuildRequestConfiguration this[int configId]
         {
             get
             {
-                if (_override.HasConfiguration(configId))
+                if (HasConfigurationInOverrideCache(configId))
                 {
 #if DEBUG
                     ErrorUtilities.VerifyThrow(!CurrentCache.HasConfiguration(configId), "caches should not overlap");
@@ -115,7 +115,7 @@ public BuildRequestConfiguration GetMatchingConfiguration(ConfigurationMetadata
 
         public bool HasConfiguration(int configId)
         {
-            var overrideHasConfiguration = _override.HasConfiguration(configId);
+            bool overrideHasConfiguration = HasConfigurationInOverrideCache(configId);
 
             if (overrideHasConfiguration)
             {
@@ -125,7 +125,12 @@ public bool HasConfiguration(int configId)
                 return overrideHasConfiguration;
             }
 
-            return _override.HasConfiguration(configId) || CurrentCache.HasConfiguration(configId);
+            return overrideHasConfiguration || CurrentCache.HasConfiguration(configId);
+        }
+
+        public bool HasConfigurationInOverrideCache(int configId)
+        {
+            return _override.HasConfiguration(configId);
         }
 
         public void ClearConfigurations()
diff --git a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
index 69009eda3a1..bac3fd5bac3 100644
--- a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
+++ b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
@@ -365,8 +365,14 @@ public IEnumerable<ScheduleResponse> ReportResult(int nodeId, BuildResult result
             List<ScheduleResponse> responses = new List<ScheduleResponse>();
             TraceScheduler("Reporting result from node {0} for request {1}, parent {2}.", nodeId, result.GlobalRequestId, result.ParentGlobalRequestId);
 
-            // Record these results to the cache.
-            _resultsCache.AddResult(result);
+            // Record these results to the cache only if they are not present in the
+            // override cache, which can happen if we are building in isolation mode
+            // (IsolateProjects.Message), and the received result was built by a
+            // dependency, isolation-violating project.
+            if (_configCache is not ConfigCacheWithOverride || !((ConfigCacheWithOverride)_configCache).HasConfigurationInOverrideCache(result.ConfigurationId))
+            {
+                _resultsCache.AddResult(result);
+            }
 
             if (result.NodeRequestId == BuildRequest.ResultsTransferNodeRequestId)
             {
@@ -1969,7 +1975,6 @@ private bool CheckIfCacheMissOnReferencedProjectIsAllowedAndErrorIfNot(int nodeF
             // do not check root requests as nothing depends on them
             if (isolateProjects == IsolateProjects.False || request.IsRootRequest || request.SkipStaticGraphIsolationConstraints)
             {
-                // N.B.: isolateProjects == IsolateProjects.Message iff request.SkipStaticGraphIsolationConstraints
                 bool logComment = ((isolateProjects == IsolateProjects.True || isolateProjects == IsolateProjects.Message) && request.SkipStaticGraphIsolationConstraints);
                 if (logComment)
                 {
