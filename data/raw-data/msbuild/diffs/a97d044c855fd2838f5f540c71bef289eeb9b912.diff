diff --git a/src/Build.UnitTests/BackEnd/CacheSerialization_Tests.cs b/src/Build.UnitTests/BackEnd/CacheSerialization_Tests.cs
index 351680eb68e..3fe17d7c9a2 100644
--- a/src/Build.UnitTests/BackEnd/CacheSerialization_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/CacheSerialization_Tests.cs
@@ -24,7 +24,7 @@ public static IEnumerable<object[]> CacheData
                 var configCache = new ConfigCache();
                 var brq1 = new BuildRequestConfiguration(
                     1,
-                    new BuildRequestData("path1", new Dictionary<string, string> { ["a1"] = "b1" }, Constants.defaultToolsVersion, new[] { "target1", "target2", "target3" }, null),
+                    new BuildRequestData("path1", new Dictionary<string, string> { ["a1"] = "b1" }, Constants.defaultToolsVersion, new[] { "target1", "target2" }, null),
                     Constants.defaultToolsVersion);
 
                 var brq2 = new BuildRequestConfiguration(
@@ -49,8 +49,6 @@ public static IEnumerable<object[]> CacheData
                 var buildResult2 = new BuildResult(request2);
                 var buildResult3 = new BuildResult(request3);
 
-                buildResult1.DefaultTargets = new List<string> { "target1" };
-
                 buildResult1.AddResultsForTarget(
                     "target1",
                     new TargetResult(
@@ -102,8 +100,7 @@ public void OnlySerializeCacheEntryWithSmallestConfigId(object configCache, obje
                     (ConfigCache)configCache,
                     (ResultsCache)resultsCache,
                     cacheFile,
-                    ProjectIsolationMode.True,
-                    new HashSet<string>() { "target1" }));
+                    ProjectIsolationMode.True));
 
                 var result = CacheSerialization.DeserializeCaches(cacheFile);
                 Assert.True(result.ConfigCache.HasConfiguration(1));
@@ -128,8 +125,7 @@ public void OnlySerializeResultsForSpecifiedTargets(object configCache, object r
                     (ConfigCache)configCache,
                     (ResultsCache)resultsCache,
                     cacheFile,
-                    ProjectIsolationMode.MessageUponIsolationViolation,
-                    new HashSet<string>() { "target1", "target2" }));
+                    ProjectIsolationMode.MessageUponIsolationViolation));
 
                 var result = CacheSerialization.DeserializeCaches(cacheFile);
                 Assert.True(result.ConfigCache.HasConfiguration(1));
@@ -143,33 +139,5 @@ public void OnlySerializeResultsForSpecifiedTargets(object configCache, object r
                 File.Delete(cacheFile);
             }
         }
-
-        [Theory]
-        [MemberData(nameof(CacheData))]
-        public void OnlySerializeResultsForDefaultTargets(object configCache, object resultsCache)
-        {
-            string cacheFile = null;
-            try
-            {
-                cacheFile = FileUtilities.GetTemporaryFile("MSBuildResultsCache");
-                Assert.Null(CacheSerialization.SerializeCaches(
-                    (ConfigCache)configCache,
-                    (ResultsCache)resultsCache,
-                    cacheFile,
-                    ProjectIsolationMode.MessageUponIsolationViolation,
-                    new HashSet<string>() { }));
-
-                var result = CacheSerialization.DeserializeCaches(cacheFile);
-                Assert.True(result.ConfigCache.HasConfiguration(1));
-                BuildResult buildResult = result.ResultsCache.GetResultsForConfiguration(1);
-                Assert.True(buildResult.HasResultsForTarget("target1"));
-                Assert.False(buildResult.HasResultsForTarget("target2"));
-                Assert.False(buildResult.HasResultsForTarget("target3"));
-            }
-            finally
-            {
-                File.Delete(cacheFile);
-            }
-        }
     }
 }
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 53a4fa87f10..8e1287dd563 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1057,8 +1057,7 @@ void SerializeCaches()
                     _configCache,
                     _resultsCache,
                     _buildParameters.OutputResultsCacheFile,
-                    _buildParameters.ProjectIsolationMode,
-                    _buildParameters.Targets);
+                    _buildParameters.ProjectIsolationMode);
                 if (!string.IsNullOrEmpty(errorMessage))
                 {
                     LogErrorAndShutdown(errorMessage);
diff --git a/src/Build/BackEnd/BuildManager/BuildParameters.cs b/src/Build/BackEnd/BuildManager/BuildParameters.cs
index 262602adbee..c2daead1e69 100644
--- a/src/Build/BackEnd/BuildManager/BuildParameters.cs
+++ b/src/Build/BackEnd/BuildManager/BuildParameters.cs
@@ -218,8 +218,6 @@ public class BuildParameters : ITranslatable
 
         private string _outputResultsCacheFile;
 
-        private HashSet<string> _targets;
-
         /// <summary>
         /// Constructor for those who intend to set all properties themselves.
         /// </summary>
@@ -303,7 +301,6 @@ internal BuildParameters(BuildParameters other, bool resetEnvironment = false)
             _projectIsolationMode = other.ProjectIsolationMode;
             _inputResultsCacheFiles = other._inputResultsCacheFiles;
             _outputResultsCacheFile = other._outputResultsCacheFile;
-            _targets = other.Targets;
             DiscardBuildResults = other.DiscardBuildResults;
             LowPriority = other.LowPriority;
             ProjectCacheDescriptor = other.ProjectCacheDescriptor;
@@ -801,15 +798,6 @@ public string OutputResultsCacheFile
             set => _outputResultsCacheFile = value;
         }
 
-        /// <summary>
-        /// The set of specified targets to build.
-        /// </summary>
-        public HashSet<string> Targets
-        {
-            get => _targets;
-            set => _targets = value;
-        }
-
         /// <summary>
         /// Determines whether MSBuild will save the results of builds after EndBuild to speed up future builds.
         /// </summary>
@@ -884,7 +872,6 @@ void ITranslatable.Translate(ITranslator translator)
             translator.TranslateEnum(ref _projectLoadSettings, (int) _projectLoadSettings);
             translator.Translate(ref _interactive);
             translator.TranslateEnum(ref _projectIsolationMode, (int)_projectIsolationMode);
-            translator.Translate(ref _targets);
 
             // ProjectRootElementCache is not transmitted.
             // ResetCaches is not transmitted.
diff --git a/src/Build/BackEnd/BuildManager/CacheSerialization.cs b/src/Build/BackEnd/BuildManager/CacheSerialization.cs
index b5b166af49a..b3255a16cc5 100644
--- a/src/Build/BackEnd/BuildManager/CacheSerialization.cs
+++ b/src/Build/BackEnd/BuildManager/CacheSerialization.cs
@@ -2,7 +2,6 @@
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
 using System;
-using System.Collections.Generic;
 using System.IO;
 using System.Linq;
 using Microsoft.Build.BackEnd;
@@ -18,8 +17,7 @@ public static string SerializeCaches(
             IConfigCache configCache,
             IResultsCache resultsCache,
             string outputCacheFile,
-            ProjectIsolationMode projectIsolationMode,
-            HashSet<string> targets)
+            ProjectIsolationMode projectIsolationMode)
         {
             ErrorUtilities.VerifyThrowInternalNull(outputCacheFile, nameof(outputCacheFile));
 
@@ -91,13 +89,15 @@ public static string SerializeCaches(
 
                     if (projectIsolationMode == ProjectIsolationMode.MessageUponIsolationViolation)
                     {
+                        int smallestConfigId = configCacheToSerialize.GetSmallestConfigId();
+
                         // In MessageUponIsolationViolation mode, only keep the TargetResults for
-                        // targets in the targets set, which should usually just contain the
-                        // top-level targets. This is to mitigate the chances of an isolation-
+                        // top-level targets to mitigate the chances of an isolation-
                         // violating target on a dependency project using incorrect state
                         // due to its dependency on a cached target whose side effects would
                         // not be taken into account. (E.g., the definition of a property.)
-                        resultsCacheToSerialize.GetResultsForConfiguration(configCacheToSerialize.GetSmallestConfigId()).KeepResultsForSpecificTargets(targets);
+                        resultsCacheToSerialize.GetResultsForConfiguration(smallestConfigId)
+                            .KeepSpecificTargetResults(configCacheToSerialize[smallestConfigId].TargetNames);
                     }
 
                     translator.Translate(ref configCacheToSerialize);
diff --git a/src/Build/BackEnd/BuildManager/ProjectIsolationMode.cs b/src/Build/BackEnd/BuildManager/ProjectIsolationMode.cs
index 58809402346..3a509d1ebca 100644
--- a/src/Build/BackEnd/BuildManager/ProjectIsolationMode.cs
+++ b/src/Build/BackEnd/BuildManager/ProjectIsolationMode.cs
@@ -17,11 +17,11 @@ public enum ProjectIsolationMode
         /// Enable isolation and log isolation violations as messages.
         /// </summary>
         /// <remarks>
-        /// Under this mode, only the results from specific (usually
-        /// top-level) targets are serialized if the -orc switch is
-        /// supplied. This is to mitigate the chances of an isolation-
-        /// violating target on a dependency project using incorrect state
-        /// due to its dependency on a cached target whose side effects would
+        /// Under this mode, only the results from top-level targets
+        /// are serialized if the -orc switch is supplied to mitigate
+        /// the chances of an isolation-violating target on a
+        /// dependency project using incorrect state due to its
+        /// dependency on a cached target whose side effects would
         /// not be taken into account. (E.g., the definition of a property.)
         /// </remarks>
         MessageUponIsolationViolation,
diff --git a/src/Build/BackEnd/Shared/BuildResult.cs b/src/Build/BackEnd/Shared/BuildResult.cs
index dcabf73b758..c6a353de5ec 100644
--- a/src/Build/BackEnd/Shared/BuildResult.cs
+++ b/src/Build/BackEnd/Shared/BuildResult.cs
@@ -5,6 +5,7 @@
 using System.Collections.Concurrent;
 using System.Collections.Generic;
 using System.Diagnostics;
+using System.Linq;
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.FileSystem;
@@ -481,21 +482,18 @@ public void AddResultsForTarget(string target, TargetResult result)
         }
 
         /// <summary>
-        /// Keep the results only for <paramref name="targets"/>.
-        /// If <paramref name="targets"/> is empty, keep the results only for
-        /// <see cref="DefaultTargets"/>.
+        /// Keep the results only for targets in <paramref name="targetsToKeep"/>.
         /// </summary>
-        /// <param name="targets">The targets whose results should be kept.</param>
-        internal void KeepResultsForSpecificTargets(ICollection<string> targets)
+        /// <param name="targetsToKeep">The targets whose results to keep.</param>
+        internal void KeepSpecificTargetResults(IReadOnlyCollection<string> targetsToKeep)
         {
-            if (targets.Count == 0)
-            {
-                targets = _defaultTargets;
-            }
+            ErrorUtilities.VerifyThrow(
+                targetsToKeep.Count > 0,
+                $"{nameof(targetsToKeep)} should contain at least one target.");
 
             foreach (string target in _resultsByTarget.Keys)
             {
-                if (!targets.Contains(target))
+                if (!targetsToKeep.Contains(target))
                 {
                     _ = _resultsByTarget.TryRemove(target, out _);
                 }
diff --git a/src/MSBuild/Resources/Strings.resx b/src/MSBuild/Resources/Strings.resx
index 350dae9df94..34e012c59bf 100644
--- a/src/MSBuild/Resources/Strings.resx
+++ b/src/MSBuild/Resources/Strings.resx
@@ -758,15 +758,14 @@
     <value>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1197,7 +1196,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
diff --git a/src/MSBuild/Resources/xlf/Strings.cs.xlf b/src/MSBuild/Resources/xlf/Strings.cs.xlf
index 0259c4bd1cb..90db97c024f 100644
--- a/src/MSBuild/Resources/xlf/Strings.cs.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.cs.xlf
@@ -133,15 +133,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1046,7 +1045,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.de.xlf b/src/MSBuild/Resources/xlf/Strings.de.xlf
index ff81d782185..8bd2ec56f5a 100644
--- a/src/MSBuild/Resources/xlf/Strings.de.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.de.xlf
@@ -133,15 +133,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1038,7 +1037,7 @@ Beispiel:
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.es.xlf b/src/MSBuild/Resources/xlf/Strings.es.xlf
index a4d04d0f3e6..86c88478951 100644
--- a/src/MSBuild/Resources/xlf/Strings.es.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.es.xlf
@@ -133,15 +133,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1047,7 +1046,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.fr.xlf b/src/MSBuild/Resources/xlf/Strings.fr.xlf
index 5eddee0a960..7fbb02b1e5c 100644
--- a/src/MSBuild/Resources/xlf/Strings.fr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.fr.xlf
@@ -133,15 +133,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1038,7 +1037,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.it.xlf b/src/MSBuild/Resources/xlf/Strings.it.xlf
index 51cb4ead178..9ea5b1f527d 100644
--- a/src/MSBuild/Resources/xlf/Strings.it.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.it.xlf
@@ -134,15 +134,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1052,7 +1051,7 @@ Esempio:
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.ja.xlf b/src/MSBuild/Resources/xlf/Strings.ja.xlf
index cabc3356e7e..b9a95fa9725 100644
--- a/src/MSBuild/Resources/xlf/Strings.ja.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ja.xlf
@@ -133,15 +133,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1038,7 +1037,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.ko.xlf b/src/MSBuild/Resources/xlf/Strings.ko.xlf
index 4e03acf6d69..b1a00b89a99 100644
--- a/src/MSBuild/Resources/xlf/Strings.ko.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ko.xlf
@@ -133,15 +133,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1038,7 +1037,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.pl.xlf b/src/MSBuild/Resources/xlf/Strings.pl.xlf
index aab8a8737e4..b9e85361e59 100644
--- a/src/MSBuild/Resources/xlf/Strings.pl.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pl.xlf
@@ -134,15 +134,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1050,7 +1049,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
index 07d3479533f..b3bc821e28c 100644
--- a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
@@ -134,15 +134,14 @@ arquivo de resposta.
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1039,7 +1038,7 @@ isoladamente.
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.ru.xlf b/src/MSBuild/Resources/xlf/Strings.ru.xlf
index 8efd8eff3e0..b0ae10d9935 100644
--- a/src/MSBuild/Resources/xlf/Strings.ru.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ru.xlf
@@ -132,15 +132,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1037,7 +1036,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.tr.xlf b/src/MSBuild/Resources/xlf/Strings.tr.xlf
index b3b6fb69dfe..e9c8f5041ef 100644
--- a/src/MSBuild/Resources/xlf/Strings.tr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.tr.xlf
@@ -133,15 +133,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1042,7 +1041,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
index 863725ace9c..3b6836e498d 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
@@ -133,15 +133,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1038,7 +1037,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
index e97e36c8af4..b92e7f48f2c 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
@@ -133,15 +133,14 @@
         <source>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
-                     When set to MessageUponIsolationViolation
-                     (or its short form Message), all isolation violations are
-                     logged as messages and, if -orc is supplied,
-                     only the results from specific (usually top-level)
-                     targets are serialized. This is to mitigate
-                     the chances of an isolation-violating target on
-                     a dependency project using incorrect state due
-                     to its dependency on a cached target whose
-                     side effects would not be taken into account.
+                     When set to MessageUponIsolationViolation (or its short
+                     form Message), only the results from top-level targets
+                     are serialized if the -orc switch is supplied to mitigate
+                     the chances of an isolation-violating target on a
+                     dependency project using incorrect state due to its
+                     dependency on a cached target whose side effects would not
+                     be taken into account. (E.g., the definition of a
+                     property.)
 
                      This is a more restrictive mode of MSBuild as it requires
                      that the project graph be statically discoverable at
@@ -1038,7 +1037,7 @@
       {StrBegin="MSBUILD : error MSB1056: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a value for the -isolateProjects parameter that is not equivalent
-      to Boolean.TrueString, ProjectIsolationMode.MessageUponIsolationViolation.toString(), or Boolean.FalseString.
+      to Boolean.TrueString, nameof(ProjectIsolationMode.MessageUponIsolationViolation), or Boolean.FalseString.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index b4e41107efd..61220b98369 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1299,7 +1299,6 @@ string[] commandLine
                     parameters.ProjectIsolationMode = isolateProjects;
                     parameters.InputResultsCacheFiles = inputResultsCaches;
                     parameters.OutputResultsCacheFile = outputResultsCache;
-                    parameters.Targets = new HashSet<string>(targets);
 
                     // Propagate the profiler flag into the project load settings so the evaluator
                     // can pick it up
@@ -2564,12 +2563,9 @@ internal static ProjectIsolationMode ProcessIsolateProjectsSwitch(string[] param
                     continue;
                 }
 
-                var messageUponIsolationViolationParams = new HashSet<string>(StringComparer.OrdinalIgnoreCase)
-                {
-                    ProjectIsolationMode.MessageUponIsolationViolation.ToString(),
-                    "Message",
-                };
-                if (messageUponIsolationViolationParams.Contains(parameter.Trim()))
+                string trimmedParameter = parameter.Trim();
+                if (trimmedParameter.Equals(nameof(ProjectIsolationMode.MessageUponIsolationViolation), StringComparison.OrdinalIgnoreCase)
+                    || trimmedParameter.Equals("Message", StringComparison.OrdinalIgnoreCase))
                 {
                     isolateProjects = ProjectIsolationMode.MessageUponIsolationViolation;
                 }
