diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
index 2ca1879e50c..c3413027f36 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
@@ -115,16 +115,24 @@ private void EventSource_BuildFinished(object sender, BuildFinishedEventArgs e)
     // TODO: tracing: https://github.com/dotnet/msbuild/issues/9629
     private void LogAnalyzerStats(LoggingContext loggingContext)
     {
-        string openingLine = "BuildCop infra stats";
-        loggingContext.LogCommentFromText(MessageImportance.High, openingLine);
+        loggingContext.LogCommentFromText(MessageImportance.High, $"BuildCop run times{Environment.NewLine}");
+        string infraData = buildStatsTable("Infrastructure run times", _statsInfra);
+        loggingContext.LogCommentFromText(MessageImportance.High, infraData);
 
-        string msg = string.Join(Environment.NewLine, _statsInfra.Select(a => $"{a.Key}: {a.Value}"));
-        loggingContext.LogCommentFromText(MessageImportance.High, msg);
+        string analyzerData = buildStatsTable("Analyzer run times", _statsAnalyzers);
+        loggingContext.LogCommentFromText(MessageImportance.High, analyzerData);
+    }
+
+    private string buildStatsTable(string title, Dictionary<string, TimeSpan> rowData)
+    {
+        string headerSeparator = $"=============";
+        string rowSeparator = $"{Environment.NewLine}----------{Environment.NewLine}";
+
+        string header = $"{headerSeparator}{Environment.NewLine}{title}{Environment.NewLine}{headerSeparator}{Environment.NewLine}";
 
-        loggingContext.LogCommentFromText(MessageImportance.High, "Build Cop Analyzer stats");
+        string rows = string.Join(rowSeparator, rowData.Select(a => $"{a.Key} | {a.Value}"));
 
-        string msg2 = string.Join(Environment.NewLine, _statsAnalyzers.Select(a => $"{a.Key}: {a.Value}"));
-        loggingContext.LogCommentFromText(MessageImportance.High, msg2);
+        return $"{header}{rows}{Environment.NewLine}";
     }
 
     public void Shutdown()
