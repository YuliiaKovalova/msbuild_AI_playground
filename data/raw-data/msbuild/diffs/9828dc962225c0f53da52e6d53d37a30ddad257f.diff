diff --git a/src/Build.UnitTests/Evaluation/Expander_Tests.cs b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
index 8501b7297f9..f91bef42f61 100644
--- a/src/Build.UnitTests/Evaluation/Expander_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
@@ -32,6 +32,7 @@
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.Shared.FileSystem;
 using Shouldly;
+using System.Collections.Concurrent;
 
 #nullable disable
 
@@ -2850,6 +2851,18 @@ public void PropertyFunctionRuntimeInformation(string propertyFunction, string e
             Assert.Equal(expectedExpansion, result);
         }
 
+        [Fact]
+        public void TestFeatureOSAPIs()
+        {
+            var availableStaticMethods = new ConcurrentDictionary<string, Tuple<string, Type>>(StringComparer.OrdinalIgnoreCase);
+
+            var operatingSystemType = new Tuple<string, Type>(null, typeof(OperatingSystem));
+            availableStaticMethods.TryAdd("System.OperatingSystem", operatingSystemType);
+            Assert.Equal(availableStaticMethods.Count, 1);
+            Assert.NotNull(operatingSystemType);
+        }
+
+
         [Theory]
         [InlineData("AString", "x12x456789x11", "$(AString.IndexOf('x', 1))", "3")]
         [InlineData("AString", "x12x456789x11", "$(AString.IndexOf('x45', 1))", "3")]
diff --git a/src/Build/Resources/Constants.cs b/src/Build/Resources/Constants.cs
index 26db3f303bd..e9e8a9904e5 100644
--- a/src/Build/Resources/Constants.cs
+++ b/src/Build/Resources/Constants.cs
@@ -295,7 +295,7 @@ private static void InitializeAvailableMethods()
                         var osPlatformType = new Tuple<string, Type>(null, typeof(OSPlatform));
 
                         #if FEATURE_OS_APIS
-+                           var operatingSystemType = new Tuple<string, Type>(null, typeof(OperatingSystem));
+                           var operatingSystemType = new Tuple<string, Type>(null, typeof(OperatingSystem));
                         #endif
 
                         // Make specific static methods available (Assembly qualified type names are *NOT* supported, only null which means mscorlib):
@@ -371,7 +371,7 @@ private static void InitializeAvailableMethods()
                         availableStaticMethods.TryAdd("System.Runtime.InteropServices.OSPlatform", osPlatformType);
 
                         #if FEATURE_OS_APIS
-+                           availableStaticMethods.TryAdd("System.OperatingSystem", operatingSystemType);
+                            availableStaticMethods.TryAdd("System.OperatingSystem", operatingSystemType);
                         #endif
 
                         s_availableStaticMethods = availableStaticMethods;
