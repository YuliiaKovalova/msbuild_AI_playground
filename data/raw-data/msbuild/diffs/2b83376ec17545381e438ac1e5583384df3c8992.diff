diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFile.cs b/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFile.cs
index 6c6a9daf26c..5e06a41362a 100644
--- a/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFile.cs
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFile.cs
@@ -27,7 +27,7 @@ public ArchiveFile(string fullPath, string content, Encoding? contentEncoding =
             _stringEncoding = contentEncoding ?? Encoding.UTF8;
         }
 
-        public static ArchiveFile From(ZipArchiveEntry entry)
+        internal static ArchiveFile From(ZipArchiveEntry entry)
         {
             return new ArchiveFile(entry.FullName, entry.Open());
         }
@@ -39,6 +39,12 @@ public static ArchiveFile From(ZipArchiveEntry entry)
         public bool CanUseReader => !_stringAcquired;
         public bool CanUseString => !_streamAcquired;
 
+        /// <summary>
+        /// Fetches the file content as a stream reader (forward only).
+        /// This prevents the content to be read as string.
+        /// </summary>
+        /// <returns></returns>
+        /// <exception cref="InvalidOperationException"></exception>
         public StreamReader GetContentReader()
         {
             if (_stringAcquired)
@@ -50,6 +56,12 @@ public StreamReader GetContentReader()
             return _contentReader;
         }
 
+        /// <summary>
+        /// Fetches the file content as a string.
+        /// This prevents the content to be fetched via StreamReader.
+        /// </summary>
+        /// <returns></returns>
+        /// <exception cref="InvalidOperationException"></exception>
         public string GetContent()
         {
             if (_streamAcquired)
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFileEventArgs.cs b/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFileEventArgs.cs
index 45bc252a066..120362bcf55 100644
--- a/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFileEventArgs.cs
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFileEventArgs.cs
@@ -15,6 +15,13 @@ public sealed class ArchiveFileEventArgs : EventArgs
     public ArchiveFileEventArgs(ArchiveFile archiveFile) =>
         (_archiveFile, _resultSet, _disposeAction) = (archiveFile, true, archiveFile.Dispose);
 
+    /// <summary>
+    /// Acquires the <see cref="ArchiveFile"/> instance. This method can only be called once and
+    /// <see cref="SetResult(string,Stream)"/> or <see cref="SetResult(string,string)"/> must be called afterwards
+    /// (this is because the embedded files are stored as forward only stream - reading them prevents re-reads).
+    /// </summary>
+    /// <returns></returns>
+    /// <exception cref="InvalidOperationException"></exception>
     public ArchiveFile ObtainArchiveFile()
     {
         if (!_resultSet)
