diff --git a/src/Build/BackEnd/Components/Logging/LoggingService.cs b/src/Build/BackEnd/Components/Logging/LoggingService.cs
index b3aec4f8fc1..ee46ae98c12 100644
--- a/src/Build/BackEnd/Components/Logging/LoggingService.cs
+++ b/src/Build/BackEnd/Components/Logging/LoggingService.cs
@@ -1402,42 +1402,40 @@ void LoggingEventProc()
                 var completeAdding = _loggingEventProcessingCancellation.Token;
                 WaitHandle[] waitHandlesForNextEvent = [completeAdding.WaitHandle, _enqueueEvent];
 
-                // Store field references locally to prevent race with cleanup
-                var eventQueue = _eventQueue;
-                var dequeueEvent = _dequeueEvent;
-                var emptyQueueEvent = _emptyQueueEvent;
-                var enqueueEvent = _enqueueEvent;
-
-                do
+                try
                 {
-                    if (eventQueue.TryDequeue(out object ev))
-                    {
-                        LoggingEventProcessor(ev);
-                        dequeueEvent?.Set();
-                    }
-                    else
-                    {
-                        emptyQueueEvent?.Set();
-
-                        // Wait for next event, or finish.
-                        if (!completeAdding.IsCancellationRequested && eventQueue.IsEmpty)
-                        {
-                            WaitHandle.WaitAny(waitHandlesForNextEvent);
-                        }
+                    // Store field references locally to prevent race with cleanup
+                    var eventQueue = _eventQueue;
+                    var dequeueEvent = _dequeueEvent;
+                    var emptyQueueEvent = _emptyQueueEvent;
+                    var enqueueEvent = _enqueueEvent;
 
-                        try
+                    do
+                    {
+                        if (eventQueue.TryDequeue(out object ev))
                         {
-                            emptyQueueEvent?.Reset();
+                            LoggingEventProcessor(ev);
+                            dequeueEvent?.Set();
                         }
-                        catch (ObjectDisposedException)
+                        else
                         {
-                            // Events were disposed during shutdown, exit processing
-                            return;
+                            emptyQueueEvent?.Set();
+
+                            // Wait for next event, or finish.
+                            if (!completeAdding.IsCancellationRequested && eventQueue.IsEmpty)
+                            {
+                                WaitHandle.WaitAny(waitHandlesForNextEvent);
+                            }
                         }
-                    }
-                } while (!eventQueue.IsEmpty || !completeAdding.IsCancellationRequested);
+                    } while (!eventQueue.IsEmpty || !completeAdding.IsCancellationRequested);
 
-                emptyQueueEvent.Set();
+                    emptyQueueEvent.Set();
+                }
+                catch (ObjectDisposedException)
+                {
+                    // Events/queue were disposed during shutdown, exit processing
+                    return;
+                }
             }
         }
 
