diff --git a/src/Build.UnitTests/BinaryLogger_Tests.cs b/src/Build.UnitTests/BinaryLogger_Tests.cs
index 0ec915e2710..71983787418 100644
--- a/src/Build.UnitTests/BinaryLogger_Tests.cs
+++ b/src/Build.UnitTests/BinaryLogger_Tests.cs
@@ -125,10 +125,6 @@ public void TestBinaryLoggerRoundtrip(string projectText)
             var serialActual = serialFromPlaybackText.ToString();
             var parallelExpected = parallelFromBuildText.ToString();
             var parallelActual = parallelFromPlaybackText.ToString();
-            serialExpected = serialExpected.Substring(serialExpected.IndexOf("Project"));
-            serialActual = serialActual.Substring(serialActual.IndexOf("Project"));
-            parallelExpected = parallelExpected.Substring(parallelExpected.IndexOf("Project"));
-            parallelActual = parallelActual.Substring(parallelActual.IndexOf("Project"));
 
             serialActual.ShouldContainWithoutWhitespace(serialExpected);
             parallelActual.ShouldContainWithoutWhitespace(parallelExpected);
diff --git a/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs b/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs
index 2e36789b6dd..cd869baccc2 100644
--- a/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs
@@ -4518,7 +4518,7 @@ public void VerifyMSBuildLogsAMessageWhenLocalPropertyCannotOverrideValueOfGloba
         [Fact]
         public void VerifyPropertyTrackingLoggingDefault()
         {
-            // Having nothing defined should default to nothing being logged.
+            // Having just environment variables defined should default to nothing being logged except one environment variable read.
             this.VerifyPropertyTrackingLoggingScenario(
                 null,
                 logger =>
diff --git a/src/Framework/Traits.cs b/src/Framework/Traits.cs
index 11e24117e6b..e9f5083db68 100644
--- a/src/Framework/Traits.cs
+++ b/src/Framework/Traits.cs
@@ -2,7 +2,6 @@
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
 using System;
-using Microsoft.Build.Framework;
 
 #nullable disable
 
@@ -95,7 +94,11 @@ public Traits()
         /// <summary>
         /// Log all environment variables whether or not they are used in a build in the binary log.
         /// </summary>
-        public readonly bool LogAllEnvironmentVariables = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("MSBUILDLOGALLENVIRONMENTVARIABLES"));
+        public readonly bool LogAllEnvironmentVariables = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("MSBUILDLOGALLENVIRONMENTVARIABLES"))
+#if !TASKHOST
+            && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_4)
+#endif
+            ;
 
         /// <summary>
         /// Log property tracking information.
diff --git a/src/MSBuildTaskHost/MSBuildTaskHost.csproj b/src/MSBuildTaskHost/MSBuildTaskHost.csproj
index 228ba8acafe..ec7f04055ae 100644
--- a/src/MSBuildTaskHost/MSBuildTaskHost.csproj
+++ b/src/MSBuildTaskHost/MSBuildTaskHost.csproj
@@ -39,6 +39,7 @@
     <Compile Include="..\Shared\BuildEnvironmentHelper.cs">
       <Link>BuildEnvironmentHelper.cs</Link>
     </Compile>
+    <!-- EnvironmentVariableReadEventArgs shouldn't be used in TaskHosts, but it means we need fewer ifdefs. -->
     <Compile Include="..\Framework\EnvironmentVariableReadEventArgs.cs">
       <Link>EnvironmentVariableReadEventArgs.cs</Link>
     </Compile>
diff --git a/src/Shared/UnitTests/EngineTestEnvironment.cs b/src/Shared/UnitTests/EngineTestEnvironment.cs
index 5f895e75fd4..649d0ff35db 100644
--- a/src/Shared/UnitTests/EngineTestEnvironment.cs
+++ b/src/Shared/UnitTests/EngineTestEnvironment.cs
@@ -235,9 +235,7 @@ private bool BuildProject(
                     foreach (var pair in pairs)
                     {
                         var expectedText = pair.expected.textGetter();
-                        expectedText = expectedText.Substring(expectedText.IndexOf("Project"));
                         var actualText = pair.actual.textGetter();
-                        actualText = actualText.Substring(actualText.IndexOf("Project"));
                         actualText.ShouldContainWithoutWhitespace(expectedText);
                     }
                 }
