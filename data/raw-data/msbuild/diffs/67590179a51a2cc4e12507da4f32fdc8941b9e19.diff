diff --git a/src/Build.UnitTests/BackEnd/CacheSerialization_Tests.cs b/src/Build.UnitTests/BackEnd/CacheSerialization_Tests.cs
index ba4539b6d77..d21eee6867e 100644
--- a/src/Build.UnitTests/BackEnd/CacheSerialization_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/CacheSerialization_Tests.cs
@@ -63,7 +63,7 @@ public void OnlySerializeCacheEntryWithSmallestConfigId(object configCache, obje
             try
             {
                 cacheFile = FileUtilities.GetTemporaryFile("MSBuildResultsCache");
-                Assert.Null(CacheSerialization.SerializeCaches((ConfigCache)configCache, (ResultsCache)resultsCache, cacheFile));
+                Assert.Null(CacheSerialization.SerializeCaches((ConfigCache)configCache, (ResultsCache)resultsCache, cacheFile, IsolateProjects.Message));
 
                 var result = CacheSerialization.DeserializeCaches(cacheFile);
                 Assert.True(result.ConfigCache.HasConfiguration(1));
diff --git a/src/Build.UnitTests/BackEnd/ConfigCache_Tests.cs b/src/Build.UnitTests/BackEnd/ConfigCache_Tests.cs
index 83af9375bc7..d80e9c430cd 100644
--- a/src/Build.UnitTests/BackEnd/ConfigCache_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/ConfigCache_Tests.cs
@@ -132,20 +132,5 @@ public void HappyGetSmallestConfigId(object obj)
         {
             Assert.Equal(1, ((ConfigCache)obj).GetSmallestConfigId());
         }
-
-        [Theory]
-        [MemberData(nameof(CacheSerializationTestData))]
-        public void KeepCacheEntryWithLowestConfigId(object obj)
-        {
-            var initial = (ConfigCache)obj;
-            string cacheFile = Path.Combine(Directory.GetCurrentDirectory(), "Output.MSBuildResultsCache");
-            Assert.Null(CacheSerialization.SerializeCaches(initial, new ResultsCache(), cacheFile, IsolateProjects.Message));
-
-            var result = CacheSerialization.DeserializeCaches(cacheFile);
-            Assert.True(result.ConfigCache.HasConfiguration(1));
-            Assert.False(result.ConfigCache.HasConfiguration(2));
-            Assert.False(result.ConfigCache.HasConfiguration(3));
-            File.Delete(cacheFile);
-        }
     }
 }
