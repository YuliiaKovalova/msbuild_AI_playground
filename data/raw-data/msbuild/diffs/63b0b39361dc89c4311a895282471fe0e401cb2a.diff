diff --git a/src/Framework/NativeMethods.cs b/src/Framework/NativeMethods.cs
index 5d91bb1bb40..608005241d2 100644
--- a/src/Framework/NativeMethods.cs
+++ b/src/Framework/NativeMethods.cs
@@ -24,6 +24,24 @@
 #nullable disable
 
 namespace Microsoft.Build.Framework;
+
+#if NETFRAMEWORK || NETSTANDARD2_0
+[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property)]
+internal class SupportedOSPlatformGuard : Attribute
+{
+    internal SupportedOSPlatformGuard(string platformName)
+    {
+    }
+}
+[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Class)]
+internal class SupportedOSPlatform : Attribute
+{
+    internal SupportedOSPlatform(string platformName)
+    {
+    }
+}
+#endif
+
 internal static class NativeMethods
 {
 #region Constants
@@ -74,7 +92,7 @@ internal static class NativeMethods
     internal const uint WAIT_OBJECT_0 = 0x00000000;
     internal const uint WAIT_TIMEOUT = 0x00000102;
 
-    #endregion
+#endregion
 
 #region Enums
 
@@ -712,13 +730,10 @@ internal static bool IsMono
 #if !CLR2COMPATIBILITY
     private static bool? _isWindows;
 #endif
-
     /// <summary>
     /// Gets a flag indicating if we are running under some version of Windows
     /// </summary>
-#if RUNTIME_TYPE_NETCORE && NET5_0_OR_GREATER
     [SupportedOSPlatformGuard("windows")]
-#endif
     internal static bool IsWindows
     {
 #if CLR2COMPATIBILITY
diff --git a/src/StringTools/StringTools.csproj b/src/StringTools/StringTools.csproj
index 67211078842..faddef78f18 100644
--- a/src/StringTools/StringTools.csproj
+++ b/src/StringTools/StringTools.csproj
@@ -22,7 +22,8 @@
     <AssemblyName>Microsoft.NET.StringTools.net35</AssemblyName>
   </PropertyGroup>
 
-  <!-- pdb publishing fails builds in the ns2.0 flavor -->
+  <!-- pdb publishing fails builds for reference-only assemblies. -->
+  <!-- https://github.com/dotnet/msbuild/pull/6148. -->
   <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
     <PublishWindowsPdb>false</PublishWindowsPdb>
   </PropertyGroup>
diff --git a/src/Tasks/BootstrapperUtil/BootstrapperBuilder.cs b/src/Tasks/BootstrapperUtil/BootstrapperBuilder.cs
index 631db0a0bd9..a4ad3eb94c2 100644
--- a/src/Tasks/BootstrapperUtil/BootstrapperBuilder.cs
+++ b/src/Tasks/BootstrapperUtil/BootstrapperBuilder.cs
@@ -17,6 +17,11 @@
 using System.Xml.XPath;
 using System.Xml.Xsl;
 using Microsoft.Build.Shared.FileSystem;
+#if RUNTIME_TYPE_NETCORE
+using System.Runtime.Versioning;
+#else
+using Microsoft.Build.Framework;
+#endif
 
 #nullable disable
 
@@ -28,6 +33,7 @@ namespace Microsoft.Build.Tasks.Deployment.Bootstrapper
     [ComVisible(true)]
     [Guid("1D9FE38A-0226-4b95-9C6B-6DFFA2236270")]
     [ClassInterface(ClassInterfaceType.None)]
+    [SupportedOSPlatform("windows")]
     public class BootstrapperBuilder : IBootstrapperBuilder
     {
         private static readonly bool s_logging = !String.IsNullOrEmpty(Environment.GetEnvironmentVariable("VSPLOG"));
@@ -76,7 +82,7 @@ public class BootstrapperBuilder : IBootstrapperBuilder
         /// </summary>
         public BootstrapperBuilder()
         {
-            _path = NativeMethodsShared.IsWindows ? Util.DefaultPath : string.Empty;
+            _path = Util.DefaultPath;
         }
 
         /// <summary>
@@ -85,7 +91,7 @@ public BootstrapperBuilder()
         /// <param name="visualStudioVersion">The version of Visual Studio that is used to build this bootstrapper.</param>
         public BootstrapperBuilder(string visualStudioVersion)
         {
-            _path = NativeMethodsShared.IsWindows ? Util.GetDefaultPath(visualStudioVersion) : string.Empty;
+            _path = Util.GetDefaultPath(visualStudioVersion);
         }
 
         #region IBootstrapperBuilder Members
@@ -447,10 +453,7 @@ public string[] GetOutputFolders(string[] productCodes, string culture, string f
             BuildPackages(settings, null, null, files, null);
 
             List<string> packagePaths = new List<string>() { invariantPath };
-            if (NativeMethodsShared.IsWindows)
-            {
-                packagePaths.AddRange(Util.AdditionalPackagePaths.Select(p => Util.AddTrailingChar(p.ToLowerInvariant(), System.IO.Path.DirectorySeparatorChar)));
-            }
+            packagePaths.AddRange(Util.AdditionalPackagePaths.Select(p => Util.AddTrailingChar(p.ToLowerInvariant(), System.IO.Path.DirectorySeparatorChar)));
 
             foreach (string file in files)
             {
@@ -594,10 +597,7 @@ private void RefreshProducts()
             XmlElement rootElement = _document.CreateElement("Products", BOOTSTRAPPER_NAMESPACE);
 
             List<string> packagePaths = new List<string>() { PackagePath };
-            if (NativeMethodsShared.IsWindows)
-            {
-                packagePaths.AddRange(Util.AdditionalPackagePaths);
-            }
+            packagePaths.AddRange(Util.AdditionalPackagePaths);
 
             foreach (string packagePath in packagePaths)
             {
diff --git a/src/Tasks/BootstrapperUtil/Util.cs b/src/Tasks/BootstrapperUtil/Util.cs
index 819f4f53edf..bd46c5ce5cc 100644
--- a/src/Tasks/BootstrapperUtil/Util.cs
+++ b/src/Tasks/BootstrapperUtil/Util.cs
@@ -10,6 +10,9 @@
 #endif
 using Microsoft.Build.Shared;
 using Microsoft.Win32;
+#if NETFRAMEWORK
+using Microsoft.Build.Framework;
+#endif
 
 #nullable disable
 
@@ -78,9 +81,7 @@ public static CultureInfo GetCultureInfoFromString(string cultureName)
 
         public static CultureInfo DefaultCultureInfo => System.Threading.Thread.CurrentThread.CurrentUICulture;
 
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         // This is the 4.0 property and will always point to the Dev10 registry key so that we don't break backwards compatibility.
         // Applications relying on 4.5 will need to use the new method that is introduced in 4.5.
         public static string DefaultPath
@@ -108,9 +109,7 @@ public static string DefaultPath
             }
         }
 
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         // A new method in 4.5 to get the default path for bootstrapper packages.
         // This method is not going to cache the path as it could be different depending on the Visual Studio version.
         public static string GetDefaultPath(string visualStudioVersion)
@@ -162,9 +161,7 @@ public static string GetDefaultPath(string visualStudioVersion)
             return Directory.GetCurrentDirectory();
         }
 
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         // Gets the list of additional paths to inspect for packages as defined in the registry
         public static List<string> AdditionalPackagePaths
         {
@@ -214,9 +211,7 @@ public static List<string> AdditionalPackagePaths
             }
         }
 
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         private static string ReadRegistryString(RegistryKey key, string path, string registryValue)
         {
             RegistryKey subKey = key.OpenSubKey(path, false);
diff --git a/src/Tasks/DownloadFile.cs b/src/Tasks/DownloadFile.cs
index 01c304b5ca2..6aa90907dcd 100644
--- a/src/Tasks/DownloadFile.cs
+++ b/src/Tasks/DownloadFile.cs
@@ -148,9 +148,9 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)
                     }
                     catch (HttpRequestException e)
                     {
-                        // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine
-                        // if a retry is possible based on the status code
 #if RUNTIME_TYPE_NETCORE
+                        // MSBuild History: CustomHttpRequestException was created as a wrapper over HttpRequestException
+                        // so it could include the StatusCode. As of net5.0, the statuscode is now in HttpRequestException.
                         throw new HttpRequestException(e.Message, e.InnerException, response.StatusCode);
 #else
                         throw new CustomHttpRequestException(e.Message, e.InnerException, response.StatusCode);
diff --git a/src/Tasks/ManifestUtil/ComImporter.cs b/src/Tasks/ManifestUtil/ComImporter.cs
index 99ddb9dfe04..be9ab0c1b42 100644
--- a/src/Tasks/ManifestUtil/ComImporter.cs
+++ b/src/Tasks/ManifestUtil/ComImporter.cs
@@ -12,13 +12,15 @@
 using System.Runtime.Versioning;
 #endif
 
+#if NETFRAMEWORK
+using Microsoft.Build.Framework;
+#endif
+
 #nullable disable
 
 namespace Microsoft.Build.Tasks.Deployment.ManifestUtilities
 {
-#if RUNTIME_TYPE_NETCORE
     [SupportedOSPlatform("windows")]
-#endif
     internal class ComImporter
     {
         private readonly OutputMessageCollection _outputMessages;
diff --git a/src/Tasks/ManifestUtil/FileReference.cs b/src/Tasks/ManifestUtil/FileReference.cs
index 3f62edaecc5..dcd3e09f74e 100644
--- a/src/Tasks/ManifestUtil/FileReference.cs
+++ b/src/Tasks/ManifestUtil/FileReference.cs
@@ -11,6 +11,10 @@
 using System.Text;
 using System.Xml.Serialization;
 
+#if NETFRAMEWORK
+using Microsoft.Build.Framework;
+#endif
+
 #nullable disable
 
 namespace Microsoft.Build.Tasks.Deployment.ManifestUtilities
@@ -47,9 +51,7 @@ public FileReference(string path) : base(path)
         [XmlIgnore]
         public ComClass[] ComClasses => _comClasses;
 
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         internal bool ImportComComponent(string path, OutputMessageCollection outputMessages, string outputDisplayName)
         {
             var importer = new ComImporter(path, outputMessages, outputDisplayName);
diff --git a/src/Tasks/ManifestUtil/SecurityUtil.cs b/src/Tasks/ManifestUtil/SecurityUtil.cs
index 1f9f5c18a8e..3bcadaa14fd 100644
--- a/src/Tasks/ManifestUtil/SecurityUtil.cs
+++ b/src/Tasks/ManifestUtil/SecurityUtil.cs
@@ -493,9 +493,7 @@ public static PermissionSet XmlToPermissionSet(XmlElement element)
         /// <param name="certThumbprint">Hexadecimal string that contains the SHA-1 hash of the certificate.</param>
         /// <param name="timestampUrl">URL that specifies an address of a time stamping server.</param>
         /// <param name="path">Path of the file to sign with the certificate.</param>
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         public static void SignFile(string certThumbprint, Uri timestampUrl, string path)
         {
             SignFile(certThumbprint, timestampUrl, path, null, null);
@@ -508,9 +506,7 @@ public static void SignFile(string certThumbprint, Uri timestampUrl, string path
         /// <param name="timestampUrl">URL that specifies an address of a time stamping server.</param>
         /// <param name="path">Path of the file to sign with the certificate.</param>
         /// <param name="targetFrameworkVersion">Version of the .NET Framework for the target.</param>
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         public static void SignFile(string certThumbprint,
                                     Uri timestampUrl,
                                     string path,
@@ -527,9 +523,7 @@ public static void SignFile(string certThumbprint,
         /// <param name="path">Path of the file to sign with the certificate.</param>
         /// <param name="targetFrameworkVersion">Version of the .NET Framework for the target.</param>
         /// <param name="targetFrameworkIdentifier">.NET Framework identifier for the target.</param>
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         public static void SignFile(string certThumbprint,
                                     Uri timestampUrl,
                                     string path,
@@ -548,9 +542,7 @@ public static void SignFile(string certThumbprint,
         /// <param name="targetFrameworkVersion">Version of the .NET Framework for the target.</param>
         /// <param name="targetFrameworkIdentifier">.NET Framework identifier for the target.</param>
         /// <param name="disallowMansignTimestampFallback">Disallow fallback to legacy timestamping when RFC3161 timestamping fails during manifest signing</param>
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         public static void SignFile(string certThumbprint,
                                     Uri timestampUrl,
                                     string path,
@@ -609,9 +601,7 @@ public static void SignFile(string certThumbprint,
         /// <param name="timestampUrl">URL that specifies an address of a time stamping server.</param>
         /// <param name="path">Path of the file to sign with the certificate.</param>
         /// <remarks>This function is only for signing a manifest, not a PE file.</remarks>
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         public static void SignFile(string certPath, SecureString certPassword, Uri timestampUrl, string path)
         {
             X509Certificate2 cert = new X509Certificate2(certPath, certPassword, X509KeyStorageFlags.PersistKeySet);
@@ -636,9 +626,7 @@ private static bool UseSha256Algorithm(X509Certificate2 cert)
         /// <param name="path">Path of the file to sign with the certificate.</param>
         /// <remarks>This function can only sign a PE file if the X509Certificate2 parameter represents a certificate in the
         /// current user's personal certificate store.</remarks>
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         public static void SignFile(X509Certificate2 cert, Uri timestampUrl, string path)
         {
             // setup resources
@@ -646,9 +634,7 @@ public static void SignFile(X509Certificate2 cert, Uri timestampUrl, string path
             SignFileInternal(cert, timestampUrl, path, true, resources);
         }
 
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         private static void SignFileInternal(X509Certificate2 cert,
                                             Uri timestampUrl,
                                             string path,
@@ -912,9 +898,7 @@ private static bool IsCertInStore(X509Certificate2 cert)
             return false;
         }
 
-#if RUNTIME_TYPE_NETCORE
-        [SupportedOSPlatformAttribute("windows")]
-#endif
+        [SupportedOSPlatform("windows")]
         private static string GetVersionIndependentToolPath(string toolName)
         {
             const string versionIndependentToolKeyName = @"Software\Microsoft\ClickOnce\SignTool";
diff --git a/src/Tasks/ManifestUtil/Util.cs b/src/Tasks/ManifestUtil/Util.cs
index 20018c9c9f7..ed7a00c9229 100644
--- a/src/Tasks/ManifestUtil/Util.cs
+++ b/src/Tasks/ManifestUtil/Util.cs
@@ -253,9 +253,7 @@ private static string GetLogPath()
             return logPath;
         }
 
-#if RUNTIME_TYPE_NETCORE
         [SupportedOSPlatform("windows")]
-#endif
         public static string GetRegisteredOrganization()
         {
             RegistryKey key = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion", false);
diff --git a/src/Tasks/ManifestUtil/mansign2.cs b/src/Tasks/ManifestUtil/mansign2.cs
index 998f93517a1..43d4683aee9 100644
--- a/src/Tasks/ManifestUtil/mansign2.cs
+++ b/src/Tasks/ManifestUtil/mansign2.cs
@@ -15,6 +15,8 @@
 
 #if RUNTIME_TYPE_NETCORE
 using System.Runtime.Versioning;
+#else
+using Microsoft.Build.Framework;
 #endif
 
 using _FILETIME = System.Runtime.InteropServices.ComTypes.FILETIME;
@@ -298,6 +300,7 @@ public override XmlElement GetIdElement(XmlDocument document, string idValue)
         }
     }
 
+    [SupportedOSPlatform("windows")]
     internal class SignedCmiManifest2
     {
         private XmlDocument _manifestDom = null;
@@ -317,17 +320,12 @@ internal SignedCmiManifest2(XmlDocument manifestDom, bool useSha256)
             _manifestDom = manifestDom ?? throw new ArgumentNullException(nameof(manifestDom));
             _useSha256 = useSha256;
         }
-#if RUNTIME_TYPE_NETCORE
-        [SupportedOSPlatform("windows")]
-#endif
+
         internal void Sign(CmiManifestSigner2 signer)
         {
             Sign(signer, null);
         }
 
-#if RUNTIME_TYPE_NETCORE
-        [SupportedOSPlatform("windows")]
-#endif
         internal void Sign(CmiManifestSigner2 signer, string timeStampUrl, bool disallowMansignTimestampFallback = false)
         {
             // Reset signer infos.
@@ -460,9 +458,6 @@ private static void RemoveExistingSignature(XmlDocument manifestDom)
         /// <param name="useSha256">Whether to use sha256</param>
         /// <returns></returns>
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Cryptographic.Standard", "CA5358:RSAProviderNeeds2048bitKey", Justification = "SHA1 is retained for compatibility reasons as an option in VisualStudio signing page and consequently in the trust manager, default is SHA2.")]
-#if RUNTIME_TYPE_NETCORE
-        [SupportedOSPlatform("windows")]
-#endif
         internal static RSACryptoServiceProvider GetFixedRSACryptoServiceProvider(RSACryptoServiceProvider oldCsp, bool useSha256)
         {
             if (!useSha256)
@@ -491,9 +486,6 @@ internal static RSACryptoServiceProvider GetFixedRSACryptoServiceProvider(RSACry
             return fixedRsa;
         }
 
-#if RUNTIME_TYPE_NETCORE
-        [SupportedOSPlatform("windows")]
-#endif
         private static void ReplacePublicKeyToken(XmlDocument manifestDom, AsymmetricAlgorithm snKey, bool useSha256)
         {
             // Make sure we can find the publicKeyToken attribute.
@@ -691,9 +683,6 @@ private static XmlDocument CreateLicenseDom(CmiManifestSigner2 signer, XmlElemen
             return licenseDom;
         }
 
-#if RUNTIME_TYPE_NETCORE
-        [SupportedOSPlatform("windows")]
-#endif
         private static void AuthenticodeSignLicenseDom(XmlDocument licenseDom, CmiManifestSigner2 signer, string timeStampUrl, bool useSha256, bool disallowMansignTimestampFallback)
         {
             // Make sure it is RSA, as this is the only one Fusion will support.
@@ -912,9 +901,6 @@ private static void TimestampSignedLicenseDom(XmlDocument licenseDom, string tim
             signatureNode.AppendChild(dsObject);
         }
 
-#if RUNTIME_TYPE_NETCORE
-        [SupportedOSPlatform("windows")]
-#endif
         private static void StrongNameSignManifestDom(XmlDocument manifestDom, XmlDocument licenseDom, CmiManifestSigner2 signer, bool useSha256)
         {
             RSA snKey = signer.StrongNameKey as RSA;
@@ -1227,6 +1213,7 @@ internal AsymmetricAlgorithm PublicKey
         }
     }
 
+    [SupportedOSPlatform("windows")]
     internal class CmiAuthenticodeSignerInfo
     {
         private int _error = 0;
@@ -1244,9 +1231,6 @@ internal CmiAuthenticodeSignerInfo(int errorCode)
             _error = errorCode;
         }
 
-#if RUNTIME_TYPE_NETCORE
-        [SupportedOSPlatform("windows")]
-#endif
         internal CmiAuthenticodeSignerInfo(Win32.AXL_SIGNER_INFO signerInfo,
                                             Win32.AXL_TIMESTAMPER_INFO timestamperInfo)
         {
@@ -1356,6 +1340,7 @@ internal X509Chain SignerChain
         }
     }
 
+    [SupportedOSPlatform("windows")]
     internal class CmiAuthenticodeTimestamperInfo
     {
         private int _error = 0;
@@ -1365,9 +1350,6 @@ internal class CmiAuthenticodeTimestamperInfo
 
         private CmiAuthenticodeTimestamperInfo() { }
 
-#if RUNTIME_TYPE_NETCORE
-        [SupportedOSPlatform("windows")]
-#endif
         internal CmiAuthenticodeTimestamperInfo(Win32.AXL_TIMESTAMPER_INFO timestamperInfo)
         {
             _error = (int)timestamperInfo.dwError;
diff --git a/src/Tasks/Resources/Strings.resx b/src/Tasks/Resources/Strings.resx
index 1f49848a025..d0dd9311e15 100644
--- a/src/Tasks/Resources/Strings.resx
+++ b/src/Tasks/Resources/Strings.resx
@@ -572,7 +572,7 @@
     <comment>{StrBegin="MSB3094: "}</comment>
   </data>
   <data name="General.TaskRequiresWindows">
-    <value>MSB3096: Task "{0}" is only supported on Windows devices.</value>
+    <value>MSB3096: Task "{0}" is only supported when building on Windows.</value>
     <comment>{StrBegin="MSB3096: "}</comment>
   </data>
   <!--
diff --git a/src/Tasks/Resources/xlf/Strings.cs.xlf b/src/Tasks/Resources/xlf/Strings.cs.xlf
index a1a3cb63e52..632d5d42323 100644
--- a/src/Tasks/Resources/xlf/Strings.cs.xlf
+++ b/src/Tasks/Resources/xlf/Strings.cs.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.de.xlf b/src/Tasks/Resources/xlf/Strings.de.xlf
index 0e587c17434..81c057f5e8e 100644
--- a/src/Tasks/Resources/xlf/Strings.de.xlf
+++ b/src/Tasks/Resources/xlf/Strings.de.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.es.xlf b/src/Tasks/Resources/xlf/Strings.es.xlf
index 072c01c02fd..e270e6039eb 100644
--- a/src/Tasks/Resources/xlf/Strings.es.xlf
+++ b/src/Tasks/Resources/xlf/Strings.es.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.fr.xlf b/src/Tasks/Resources/xlf/Strings.fr.xlf
index 41a0349735c..401d40dffdb 100644
--- a/src/Tasks/Resources/xlf/Strings.fr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.fr.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.it.xlf b/src/Tasks/Resources/xlf/Strings.it.xlf
index 431a0c0814c..40a44c86be9 100644
--- a/src/Tasks/Resources/xlf/Strings.it.xlf
+++ b/src/Tasks/Resources/xlf/Strings.it.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.ja.xlf b/src/Tasks/Resources/xlf/Strings.ja.xlf
index c901d17c90e..2fa257164bb 100644
--- a/src/Tasks/Resources/xlf/Strings.ja.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ja.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.ko.xlf b/src/Tasks/Resources/xlf/Strings.ko.xlf
index 7f43eab9148..ee1ea74d0d1 100644
--- a/src/Tasks/Resources/xlf/Strings.ko.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ko.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.pl.xlf b/src/Tasks/Resources/xlf/Strings.pl.xlf
index 24c60d16d8a..bb801b70a60 100644
--- a/src/Tasks/Resources/xlf/Strings.pl.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pl.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
index 627dbf21ab5..47364541ad1 100644
--- a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.ru.xlf b/src/Tasks/Resources/xlf/Strings.ru.xlf
index b5ad37813ac..74137408038 100644
--- a/src/Tasks/Resources/xlf/Strings.ru.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ru.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.tr.xlf b/src/Tasks/Resources/xlf/Strings.tr.xlf
index f27aac674ff..0ed6814b589 100644
--- a/src/Tasks/Resources/xlf/Strings.tr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.tr.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
index 4f22490f28e..ac772ecf0bf 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
index db2c90c7e44..3ba672a7452 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
@@ -515,8 +515,8 @@
         <note>{StrBegin="MSB3667: "}</note>
       </trans-unit>
       <trans-unit id="General.TaskRequiresWindows">
-        <source>MSB3096: Task "{0}" is only supported on Windows devices.</source>
-        <target state="new">MSB3096: Task "{0}" is only supported on Windows devices.</target>
+        <source>MSB3096: Task "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB3096: Task "{0}" is only supported when building on Windows.</target>
         <note>{StrBegin="MSB3096: "}</note>
       </trans-unit>
       <trans-unit id="General.UndefineProperties">
