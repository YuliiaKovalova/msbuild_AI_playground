diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
index 8c1ba1abaed..e35e6043b0f 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
@@ -200,13 +200,37 @@ public void WriteBlob(BinaryLogRecordKind kind, byte[] bytes)
         {
             // write the blob directly to the underlying writer,
             // bypassing the memory stream
-            binaryWriter = originalBinaryWriter;
+            using var redirection = RedirectWritesToOriginalWriter();
 
             Write(kind);
             Write(bytes.Length);
             Write(bytes);
+        }
+
+        /// <summary>
+        /// Switches the binaryWriter used by the Write* methods to the direct underlying stream writer
+        /// until the disposable is disposed. Useful to bypass the currentRecordWriter to write a string,
+        /// blob or NameValueRecord that should precede the record being currently written.
+        /// </summary>
+        private IDisposable RedirectWritesToOriginalWriter()
+        {
+            binaryWriter = originalBinaryWriter;
+            return new RedirectionScope(this);
+        }
+
+        private struct RedirectionScope : IDisposable
+        {
+            private readonly BuildEventArgsWriter _writer;
 
-            binaryWriter = currentRecordWriter;
+            public RedirectionScope(BuildEventArgsWriter buildEventArgsWriter)
+            {
+                _writer = buildEventArgsWriter;
+            }
+
+            public void Dispose()
+            {
+                _writer.binaryWriter = _writer.currentRecordWriter;
+            }
         }
 
         private void Write(BuildStartedEventArgs e)
@@ -833,7 +857,7 @@ private void WriteNameValueListRecord()
             // Switch the binaryWriter used by the Write* methods to the direct underlying stream writer.
             // We want this record to precede the record we're currently writing to currentRecordWriter
             // which is backed by a MemoryStream buffer
-            binaryWriter = this.originalBinaryWriter;
+            using var redirectionScope = RedirectWritesToOriginalWriter();
 
             Write(BinaryLogRecordKind.NameValueList);
             Write(nameValueIndexListBuffer.Count);
@@ -843,9 +867,6 @@ private void WriteNameValueListRecord()
                 Write(kvp.Key);
                 Write(kvp.Value);
             }
-
-            // switch back to continue writing the current record to the memory stream
-            binaryWriter = this.currentRecordWriter;
         }
 
         /// <summary>
@@ -954,16 +975,10 @@ private void WriteDeduplicatedString(string text)
 
         private void WriteStringRecord(string text)
         {
-            // Switch the binaryWriter used by the Write* methods to the direct underlying stream writer.
-            // We want this record to precede the record we're currently writing to currentRecordWriter
-            // which is backed by a MemoryStream buffer
-            binaryWriter = this.originalBinaryWriter;
+            using var redirectionScope = RedirectWritesToOriginalWriter();
 
             Write(BinaryLogRecordKind.String);
             binaryWriter.Write(text);
-
-            // switch back to continue writing the current record to the memory stream
-            binaryWriter = this.currentRecordWriter;
         }
 
         private void Write(DateTime timestamp)
