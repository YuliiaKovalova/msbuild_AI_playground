diff --git a/src/Build/Construction/ProjectMetadataElement.cs b/src/Build/Construction/ProjectMetadataElement.cs
index 1537c253f83..b026711dcf9 100644
--- a/src/Build/Construction/ProjectMetadataElement.cs
+++ b/src/Build/Construction/ProjectMetadataElement.cs
@@ -107,7 +107,10 @@ internal static ProjectMetadataElement CreateDisconnected(string name, ProjectRo
             ErrorUtilities.VerifyThrowInvalidOperation(!XMakeElements.ReservedItemNames.Contains(name), "CannotModifyReservedItemMetadata", name);
 
             XmlElementWithLocation element = containingProject.CreateElement(name);
-            element.Location = location;
+            if (location != null)
+            {
+                element.Location = location;
+            }
 
             return new ProjectMetadataElement(element, containingProject);
         }
diff --git a/src/Build/ObjectModelRemoting/ConstructionObjectLinks/ProjectRootElementLink.cs b/src/Build/ObjectModelRemoting/ConstructionObjectLinks/ProjectRootElementLink.cs
index d45cc3f213d..b485722d3e3 100644
--- a/src/Build/ObjectModelRemoting/ConstructionObjectLinks/ProjectRootElementLink.cs
+++ b/src/Build/ObjectModelRemoting/ConstructionObjectLinks/ProjectRootElementLink.cs
@@ -113,7 +113,7 @@ public abstract class ProjectRootElementLink : ProjectElementContainerLink
         public abstract ProjectMetadataElement CreateMetadataElement(string name);
 
         /// <summary>
-        /// Facilitate remoting the <see cref="ProjectRootElement.CreateMetadataElement(string, string)"/>.
+        /// Facilitate remoting the <see cref="ProjectRootElement.CreateMetadataElement(string, string, ElementLocation)"/>.
         /// </summary>
         public abstract ProjectMetadataElement CreateMetadataElement(string name, string unevaluatedValue);
 
diff --git a/src/Shared/XmlUtilities.cs b/src/Shared/XmlUtilities.cs
index ef1747a6429..4230c4c57c8 100644
--- a/src/Shared/XmlUtilities.cs
+++ b/src/Shared/XmlUtilities.cs
@@ -36,7 +36,10 @@ internal static XmlElementWithLocation RenameXmlElement(XmlElementWithLocation o
                 ? (XmlElementWithLocation)oldElement.OwnerDocument.CreateElement(newElementName)
                 : (XmlElementWithLocation)oldElement.OwnerDocument.CreateElement(newElementName, xmlNamespace);
 
-            newElement.Location = oldElement.Location;
+            if (oldElement.Location != null)
+            {
+                newElement.Location = oldElement.Location;
+            }
 
             // Copy over all the attributes.
             foreach (XmlAttribute oldAttribute in oldElement.Attributes)
