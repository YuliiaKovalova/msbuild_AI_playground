diff --git a/src/Analyzers.UnitTests/EndToEndTests.cs b/src/Analyzers.UnitTests/EndToEndTests.cs
index 6a90e2734bb..8457ff1d90c 100644
--- a/src/Analyzers.UnitTests/EndToEndTests.cs
+++ b/src/Analyzers.UnitTests/EndToEndTests.cs
@@ -30,9 +30,10 @@ public EndToEndTests(ITestOutputHelper output)
         public void Dispose() => _env.Dispose();
 
         [Theory]
-        [InlineData(true)]
-        [InlineData(false)]
-        public void SampleAnalyzerIntegrationTest(bool buildInOutOfProcessNode)
+        [InlineData(true, true)]
+        [InlineData(false, true)]
+        [InlineData(false, false)]
+        public void SampleAnalyzerIntegrationTest(bool buildInOutOfProcessNode, bool analysisRequested)
         {
             string contents = $"""
                 <Project Sdk="Microsoft.NET.Sdk" DefaultTargets="Hello">
@@ -118,11 +119,20 @@ public void SampleAnalyzerIntegrationTest(bool buildInOutOfProcessNode)
 
             _env.SetEnvironmentVariable("MSBUILDNOINPROCNODE", buildInOutOfProcessNode ? "1" : "0");
             _env.SetEnvironmentVariable("MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION", "1");
-            string output = RunnerUtilities.ExecBootstrapedMSBuild($"{Path.GetFileName(projectFile.Path)} /m:1 -nr:False -restore -analyze", out bool success);
+            string output = RunnerUtilities.ExecBootstrapedMSBuild(
+                $"{Path.GetFileName(projectFile.Path)} /m:1 -nr:False -restore" +
+                (analysisRequested ? " -analyze" : string.Empty), out bool success);
             _env.Output.WriteLine(output);
             success.ShouldBeTrue();
-            // The conflicting outputs warning appears
-            output.ShouldContain("BC0101");
+            // The conflicting outputs warning appears - but only if analysis was requested
+            if (analysisRequested)
+            {
+                output.ShouldContain("BC0101");
+            }
+            else
+            {
+                output.ShouldNotContain("BC0101");
+            }
         }
     }
 }
diff --git a/src/Build/BuildCheck/Utilities/EnumerableExtensions.cs b/src/Build/BuildCheck/Utilities/EnumerableExtensions.cs
index 7ca6aeb69f9..96efc8ff2fd 100644
--- a/src/Build/BuildCheck/Utilities/EnumerableExtensions.cs
+++ b/src/Build/BuildCheck/Utilities/EnumerableExtensions.cs
@@ -38,7 +38,7 @@ public static void Merge<TKey, TValue>(
     {
         foreach (var pair in another)
         {
-            if (!dict.TryGetValue(pair.Key, out TValue value))
+            if (!dict.TryGetValue(pair.Key, out TValue? value))
             {
                 dict[pair.Key] = pair.Value;
             }
