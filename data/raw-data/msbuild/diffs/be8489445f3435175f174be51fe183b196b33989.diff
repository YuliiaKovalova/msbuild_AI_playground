diff --git a/src/Build/BackEnd/Components/Communications/NodeFailedToLaunchException.cs b/src/Build/BackEnd/Components/Communications/NodeFailedToLaunchException.cs
index aa7efb8cd72..2bc967775f9 100644
--- a/src/Build/BackEnd/Components/Communications/NodeFailedToLaunchException.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeFailedToLaunchException.cs
@@ -51,6 +51,9 @@ internal NodeFailedToLaunchException(string errorCode, string message)
         /// <summary>
         /// Constructor for deserialization.
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         protected NodeFailedToLaunchException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
@@ -82,6 +85,9 @@ public string ErrorDescription
         /// </summary>
 #if FEATURE_SECURITY_PERMISSIONS
         [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
+#endif
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
 #endif
         public override void GetObjectData(SerializationInfo info, StreamingContext context)
         {
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
index 3e0ea3b7abf..c9eadb2d824 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
@@ -1079,7 +1079,9 @@ internal void MarkAsInactive()
         /// </summary>
         internal bool IsEventSerializable(BuildEventArgs e)
         {
+#pragma warning disable SYSLIB0050
             if (!e.GetType().GetTypeInfo().IsSerializable)
+#pragma warning restore SYSLIB0050
             {
                 _taskLoggingContext.LogWarning(null, new BuildEventFileInfo(string.Empty), "ExpectedEventToBeSerializable", e.GetType().Name);
                 return false;
diff --git a/src/Build/BackEnd/Shared/BuildAbortedException.cs b/src/Build/BackEnd/Shared/BuildAbortedException.cs
index 09f107a93f8..d62a1504c70 100644
--- a/src/Build/BackEnd/Shared/BuildAbortedException.cs
+++ b/src/Build/BackEnd/Shared/BuildAbortedException.cs
@@ -91,6 +91,9 @@ protected override void InitializeCustomState(IDictionary<string, string> state)
         /// Protected constructor used for (de)serialization. 
         /// If we ever add new members to this class, we'll need to update this.
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         protected BuildAbortedException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
@@ -109,6 +112,9 @@ protected BuildAbortedException(SerializationInfo info, StreamingContext context
         /// </summary>
 #if FEATURE_SECURITY_PERMISSIONS
         [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
+#endif
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
 #endif
         public override void GetObjectData(SerializationInfo info, StreamingContext context)
         {
diff --git a/src/Build/BackEnd/Shared/CircularDependencyException.cs b/src/Build/BackEnd/Shared/CircularDependencyException.cs
index 11ea521d9ed..fd51ccb5cc1 100644
--- a/src/Build/BackEnd/Shared/CircularDependencyException.cs
+++ b/src/Build/BackEnd/Shared/CircularDependencyException.cs
@@ -39,6 +39,9 @@ internal CircularDependencyException(string message, Exception inner)
         /// <summary>
         /// Constructor for deserialization.
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         protected CircularDependencyException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
diff --git a/src/Build/Errors/InternalLoggerException.cs b/src/Build/Errors/InternalLoggerException.cs
index 74fbd3dfb6f..1db485e55ea 100644
--- a/src/Build/Errors/InternalLoggerException.cs
+++ b/src/Build/Errors/InternalLoggerException.cs
@@ -108,6 +108,9 @@ internal InternalLoggerException(
         /// </summary>
         /// <param name="info"></param>
         /// <param name="context"></param>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private InternalLoggerException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
@@ -125,6 +128,9 @@ private InternalLoggerException(SerializationInfo info, StreamingContext context
         /// <param name="context"></param>
 #if FEATURE_SECURITY_PERMISSIONS
         [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
+#endif
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
 #endif
         public override void GetObjectData(SerializationInfo info, StreamingContext context)
         {
diff --git a/src/Build/Errors/InvalidProjectFileException.cs b/src/Build/Errors/InvalidProjectFileException.cs
index 8a15be32d42..7bc6e4a135d 100644
--- a/src/Build/Errors/InvalidProjectFileException.cs
+++ b/src/Build/Errors/InvalidProjectFileException.cs
@@ -85,6 +85,9 @@ internal InvalidProjectFileException(string message, InvalidProjectFileException
         /// </summary>
         /// <param name="info"></param>
         /// <param name="context"></param>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private InvalidProjectFileException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
@@ -107,6 +110,9 @@ private InvalidProjectFileException(SerializationInfo info, StreamingContext con
         /// <param name="context"></param>
 #if FEATURE_SECURITY_PERMISSIONS
         [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
+#endif
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
 #endif
         public override void GetObjectData(SerializationInfo info, StreamingContext context)
         {
diff --git a/src/Build/Errors/InvalidToolsetDefinitionException.cs b/src/Build/Errors/InvalidToolsetDefinitionException.cs
index 77996c97504..1ebc9c9d1b1 100644
--- a/src/Build/Errors/InvalidToolsetDefinitionException.cs
+++ b/src/Build/Errors/InvalidToolsetDefinitionException.cs
@@ -55,6 +55,9 @@ public InvalidToolsetDefinitionException(string message, Exception innerExceptio
         /// <summary>
         /// Basic constructor.
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         protected InvalidToolsetDefinitionException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
@@ -94,6 +97,9 @@ public InvalidToolsetDefinitionException(string message, string errorCode, Excep
         /// <param name="context"></param>
 #if FEATURE_SECURITY_PERMISSIONS
         [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
+#endif
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
 #endif
         public override void GetObjectData(SerializationInfo info, StreamingContext context)
         {
diff --git a/src/Build/Errors/RegistryException.cs b/src/Build/Errors/RegistryException.cs
index e3aee195277..11d37991996 100644
--- a/src/Build/Errors/RegistryException.cs
+++ b/src/Build/Errors/RegistryException.cs
@@ -57,6 +57,9 @@ public RegistryException(string message, string source)
         /// <summary>
         /// Since this class implements Iserializable this constructor is required to be implemented.
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         protected RegistryException(SerializationInfo info, StreamingContext context) : base(info, context)
         {
             // We don't have any reason at the moment to do any custom serizlization or deserialization, this methods was added
diff --git a/src/Build/Instance/TaskFactoryLoggingHost.cs b/src/Build/Instance/TaskFactoryLoggingHost.cs
index 379987804ae..6f36dd7da7e 100644
--- a/src/Build/Instance/TaskFactoryLoggingHost.cs
+++ b/src/Build/Instance/TaskFactoryLoggingHost.cs
@@ -337,7 +337,9 @@ internal void MarkAsInactive()
         /// </summary>
         internal bool IsEventSerializable(BuildEventArgs e)
         {
+#pragma warning disable SYSLIB0050
             if (!e.GetType().GetTypeInfo().IsSerializable)
+#pragma warning restore SYSLIB0050
             {
                 _loggingContext.LogWarning(null, new BuildEventFileInfo(string.Empty), "ExpectedEventToBeSerializable", e.GetType().Name);
                 return false;
diff --git a/src/Framework/BuildException/BuildExceptionBase.cs b/src/Framework/BuildException/BuildExceptionBase.cs
index acb93434e0e..07db4994b93 100644
--- a/src/Framework/BuildException/BuildExceptionBase.cs
+++ b/src/Framework/BuildException/BuildExceptionBase.cs
@@ -31,6 +31,9 @@ private protected BuildExceptionBase(
     { }
 
     // This is needed to allow opting back in to BinaryFormatter serialization
+#if NET8_0_OR_GREATER
+    [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
     private protected BuildExceptionBase(SerializationInfo info, StreamingContext context)
         : base(info, context)
     { }
diff --git a/src/Framework/InternalErrorException.cs b/src/Framework/InternalErrorException.cs
index 4aef7c049ea..e024e3f67a5 100644
--- a/src/Framework/InternalErrorException.cs
+++ b/src/Framework/InternalErrorException.cs
@@ -75,6 +75,9 @@ private InternalErrorException(string message, Exception innerException, bool ca
         /// Private constructor used for (de)serialization. The constructor is private as this class is sealed
         /// If we ever add new members to this class, we'll need to update this.
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private InternalErrorException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
diff --git a/src/Framework/LoggerException.cs b/src/Framework/LoggerException.cs
index a671142368a..05e457d90ee 100644
--- a/src/Framework/LoggerException.cs
+++ b/src/Framework/LoggerException.cs
@@ -82,6 +82,9 @@ public LoggerException(string message, Exception innerException, string errorCod
         /// </summary>
         /// <param name="info">Serialization info</param>
         /// <param name="context">Streaming context</param>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         protected LoggerException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
@@ -97,6 +100,9 @@ protected LoggerException(SerializationInfo info, StreamingContext context)
         /// <param name="context">Streaming context</param>
 #if FEATURE_SECURITY_PERMISSIONS
         [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
+#endif
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
 #endif
         public override void GetObjectData(SerializationInfo info, StreamingContext context)
         {
@@ -121,7 +127,7 @@ protected override void InitializeCustomState(IDictionary<string, string> state)
             helpKeyword = state[nameof(helpKeyword)];
         }
 
-        #endregion
+#endregion
 
         #region Properties
 
diff --git a/src/MSBuild/CommandLineSwitchException.cs b/src/MSBuild/CommandLineSwitchException.cs
index 50cca72257a..364fce6da5d 100644
--- a/src/MSBuild/CommandLineSwitchException.cs
+++ b/src/MSBuild/CommandLineSwitchException.cs
@@ -46,6 +46,9 @@ private CommandLineSwitchException(
         /// <summary>
         /// Serialization constructor
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private CommandLineSwitchException(
             SerializationInfo info,
             StreamingContext context) :
@@ -94,6 +97,9 @@ internal string CommandLineArg
         /// </summary>
 #if FEATURE_SECURITY_PERMISSIONS
         [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
+#endif
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
 #endif
         public override void GetObjectData(SerializationInfo info, StreamingContext context)
         {
diff --git a/src/MSBuild/InitializationException.cs b/src/MSBuild/InitializationException.cs
index ff5a5e21ade..fea748158ae 100644
--- a/src/MSBuild/InitializationException.cs
+++ b/src/MSBuild/InitializationException.cs
@@ -51,6 +51,9 @@ private InitializationException(
         /// <summary>
         /// Serialization constructor
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private InitializationException(
             SerializationInfo info,
             StreamingContext context) :
@@ -87,6 +90,9 @@ public override string Message
         /// </summary>
 #if FEATURE_SECURITY_PERMISSIONS
         [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
+#endif
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
 #endif
         public override void GetObjectData(SerializationInfo info, StreamingContext context)
         {
diff --git a/src/MSBuild/OutOfProcTaskHostNode.cs b/src/MSBuild/OutOfProcTaskHostNode.cs
index f1f7c3b7ffe..7afa80f780d 100644
--- a/src/MSBuild/OutOfProcTaskHostNode.cs
+++ b/src/MSBuild/OutOfProcTaskHostNode.cs
@@ -1146,7 +1146,9 @@ private void SendBuildEvent(BuildEventArgs e)
         {
             if (_nodeEndpoint?.LinkStatus == LinkStatus.Active)
             {
+#pragma warning disable SYSLIB0050
                 if (!e.GetType().GetTypeInfo().IsSerializable)
+#pragma warning disable SYSLIB0050
                 {
                     // log a warning and bail.  This will end up re-calling SendBuildEvent, but we know for a fact
                     // that the warning that we constructed is serializable, so everything should be good.
diff --git a/src/Tasks/AppConfig/AppConfigException.cs b/src/Tasks/AppConfig/AppConfigException.cs
index 82caefb8fc0..b059713b9da 100644
--- a/src/Tasks/AppConfig/AppConfigException.cs
+++ b/src/Tasks/AppConfig/AppConfigException.cs
@@ -66,6 +66,9 @@ public AppConfigException(string message, string fileName, int line, int column,
         /// <summary>
         /// Construct the exception.
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         protected AppConfigException(SerializationInfo info, StreamingContext context) : base(info, context)
         {
         }
diff --git a/src/Tasks/AssemblyDependency/BadImageReferenceException.cs b/src/Tasks/AssemblyDependency/BadImageReferenceException.cs
index 8a9cadcc29a..a6567717294 100644
--- a/src/Tasks/AssemblyDependency/BadImageReferenceException.cs
+++ b/src/Tasks/AssemblyDependency/BadImageReferenceException.cs
@@ -25,6 +25,9 @@ internal BadImageReferenceException(string message, Exception innerException)
         /// <summary>
         /// Construct
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private BadImageReferenceException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
diff --git a/src/Tasks/AssemblyDependency/DependencyResolutionException.cs b/src/Tasks/AssemblyDependency/DependencyResolutionException.cs
index 402e4999988..2e174dadc3b 100644
--- a/src/Tasks/AssemblyDependency/DependencyResolutionException.cs
+++ b/src/Tasks/AssemblyDependency/DependencyResolutionException.cs
@@ -25,6 +25,9 @@ internal DependencyResolutionException(string message, Exception innerException)
         /// <summary>
         /// Construct
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private DependencyResolutionException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
diff --git a/src/Tasks/AssemblyDependency/InvalidReferenceAssemblyNameException.cs b/src/Tasks/AssemblyDependency/InvalidReferenceAssemblyNameException.cs
index 42838f8dc21..55287a96840 100644
--- a/src/Tasks/AssemblyDependency/InvalidReferenceAssemblyNameException.cs
+++ b/src/Tasks/AssemblyDependency/InvalidReferenceAssemblyNameException.cs
@@ -26,6 +26,9 @@ internal InvalidReferenceAssemblyNameException(string sourceItemSpec)
         /// <summary>
         /// Construct
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private InvalidReferenceAssemblyNameException(SerializationInfo info, StreamingContext context) : base(info, context)
         {
         }
diff --git a/src/Tasks/AssemblyDependency/ReferenceResolutionException.cs b/src/Tasks/AssemblyDependency/ReferenceResolutionException.cs
index 621d8834891..c924e806f07 100644
--- a/src/Tasks/AssemblyDependency/ReferenceResolutionException.cs
+++ b/src/Tasks/AssemblyDependency/ReferenceResolutionException.cs
@@ -25,6 +25,9 @@ internal ReferenceResolutionException(string message, Exception innerException)
         /// <summary>
         /// Implement required constructors for serialization
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private ReferenceResolutionException(SerializationInfo info, StreamingContext context) : base(info, context)
         {
         }
diff --git a/src/Tasks/GenerateResource.cs b/src/Tasks/GenerateResource.cs
index 6ff6c0a5dff..535e0a3dd2d 100644
--- a/src/Tasks/GenerateResource.cs
+++ b/src/Tasks/GenerateResource.cs
@@ -3942,6 +3942,9 @@ internal sealed class TextFileException : Exception
             private int lineNumber;
             private int column;
 
+#if NET8_0_OR_GREATER
+            [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
             private TextFileException(SerializationInfo info, StreamingContext context)
                 : base(info, context)
             {
diff --git a/src/Tasks/InvalidParameterValueException.cs b/src/Tasks/InvalidParameterValueException.cs
index cfa9c9f52d6..ad9c727d1b8 100644
--- a/src/Tasks/InvalidParameterValueException.cs
+++ b/src/Tasks/InvalidParameterValueException.cs
@@ -38,6 +38,9 @@ internal InvalidParameterValueException(string paramName, string actualValue, st
         /// <summary>
         /// Constructor
         /// </summary>
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private InvalidParameterValueException(SerializationInfo info, StreamingContext context)
             : base(info, context)
         {
diff --git a/src/Tasks/ResourceHandling/InputFormatNotSupportedException.cs b/src/Tasks/ResourceHandling/InputFormatNotSupportedException.cs
index a6b797a7d94..f82fb7c7758 100644
--- a/src/Tasks/ResourceHandling/InputFormatNotSupportedException.cs
+++ b/src/Tasks/ResourceHandling/InputFormatNotSupportedException.cs
@@ -23,6 +23,9 @@ public InputFormatNotSupportedException(string message, Exception innerException
         {
         }
 
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         protected InputFormatNotSupportedException(SerializationInfo info, StreamingContext context) : base(info, context)
         {
         }
diff --git a/src/Tasks/ResourceHandling/MSBuildResXException.cs b/src/Tasks/ResourceHandling/MSBuildResXException.cs
index ce6d5b589c2..6ef3b33e88e 100644
--- a/src/Tasks/ResourceHandling/MSBuildResXException.cs
+++ b/src/Tasks/ResourceHandling/MSBuildResXException.cs
@@ -23,6 +23,9 @@ public MSBuildResXException(string message, Exception innerException) : base(mes
         {
         }
 
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         protected MSBuildResXException(SerializationInfo info, StreamingContext context) : base(info, context)
         {
         }
diff --git a/src/Tasks/ResourceHandling/PreserializedResourceWriterRequiredException.cs b/src/Tasks/ResourceHandling/PreserializedResourceWriterRequiredException.cs
index d72a71f17b0..5cfea71ab5c 100644
--- a/src/Tasks/ResourceHandling/PreserializedResourceWriterRequiredException.cs
+++ b/src/Tasks/ResourceHandling/PreserializedResourceWriterRequiredException.cs
@@ -13,6 +13,9 @@ internal sealed class PreserializedResourceWriterRequiredException : Exception
     {
         public PreserializedResourceWriterRequiredException() { }
 
+#if NET8_0_OR_GREATER
+        [Obsolete(DiagnosticId = "SYSLIB0051")]
+#endif
         private PreserializedResourceWriterRequiredException(SerializationInfo info, StreamingContext context)
             : base(info, context) { }
     }
