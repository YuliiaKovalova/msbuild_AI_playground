diff --git a/src/Shared/FileMatcher.cs b/src/Shared/FileMatcher.cs
index 33c376f21ca..d04447e3b9d 100644
--- a/src/Shared/FileMatcher.cs
+++ b/src/Shared/FileMatcher.cs
@@ -148,7 +148,13 @@ internal static void ClearFileEnumerationsCache()
         /// <returns></returns>
         internal static bool HasWildcards(string filespec)
         {
-            return -1 != filespec.IndexOfAny(s_wildcardCharacters);
+            // Perf Note: Doing a [Last]IndexOfAny(...) is much faster than compiling a
+            // regular expression that does the same thing, regardless of whether
+            // filespec contains one of the characters.
+            // Choose LastIndexOfAny instead of IndexOfAny because it seems more likely
+            // that wildcards will tend to be towards the right side.
+
+            return -1 != filespec.LastIndexOfAny(s_wildcardCharacters);
         }
 
         /// <summary>
@@ -1732,11 +1738,6 @@ internal string[] GetFiles
         )
         {
             // For performance. Short-circuit iff there is no wildcard.
-            // Perf Note: Doing a [Last]IndexOfAny(...) is much faster than compiling a
-            // regular expression that does the same thing, regardless of whether
-            // filespec contains one of the characters.
-            // Choose LastIndexOfAny instead of IndexOfAny because it seems more likely
-            // that wildcards will tend to be towards the right side.
             if (!HasWildcards(filespecUnescaped))
             {
                 return CreateArrayWithSingleItemIfNotExcluded(filespecUnescaped, excludeSpecsUnescaped);
