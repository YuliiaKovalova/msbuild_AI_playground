diff --git a/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd b/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
index 186e3c18a53..83b48d2558c 100644
--- a/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
+++ b/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
@@ -1869,6 +1869,7 @@ elementFormDefault="qualified">
     <xs:element name="LangVersion" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="VBRuntime" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="Prefer32Bit" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
+    <xs:element name="PreferNativeArm64" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="HighEntropyVA" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="LinkIncremental" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="ManifestCertificateThumbprint" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
diff --git a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
index 2c1fca47574..24866290ecc 100644
--- a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
+++ b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
@@ -152,6 +152,18 @@
     <None Update="TestResources\lorem.bin">
       <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
     </None>
+    <None Update="TestResources\Manifests\default.win32manifest_expected">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </None>
+    <None Update="TestResources\Manifests\testManifestWithApplicationDefined.manifest_expected">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </None>
+    <None Update="TestResources\Manifests\testManifestWithApplicationDefined.manifest">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </None>
+    <None Update="TestResources\Manifests\testManifestWithInvalidSupportedArchs.manifest">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </None>
     <None Update="TestResources\mycert.pfx">
       <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
     </None>
diff --git a/src/Tasks.UnitTests/PopulateSupportedArchitectures_Tests.cs b/src/Tasks.UnitTests/PopulateSupportedArchitectures_Tests.cs
new file mode 100644
index 00000000000..d3c5099ec1e
--- /dev/null
+++ b/src/Tasks.UnitTests/PopulateSupportedArchitectures_Tests.cs
@@ -0,0 +1,79 @@
+ï»¿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+#if NETFRAMEWORK
+
+using System;
+using System.Collections.Generic;
+using System.IO;
+using System.Linq;
+using System.Reflection;
+using System.Text;
+using System.Threading.Tasks;
+using System.Xml;
+using Microsoft.Build.UnitTests;
+using Microsoft.Build.UnitTests.Shared;
+using Shouldly;
+using Xunit;
+using Xunit.Abstractions;
+using Xunit.Sdk;
+
+namespace Microsoft.Build.Tasks.UnitTests
+{
+    public class PopulateSupportedArchitectures_Tests
+    {
+        private static string TestAssetsRootPath { get; } = Path.Combine(
+            Path.GetDirectoryName(typeof(PopulateSupportedArchitectures_Tests).Assembly.Location) ?? AppContext.BaseDirectory,
+            "TestResources",
+            "Manifests");
+
+        private readonly ITestOutputHelper _testOutput;
+
+        public PopulateSupportedArchitectures_Tests(ITestOutputHelper testOutput)
+        {
+            _testOutput = testOutput;
+        }
+
+        [Theory]
+        [InlineData("testManifestWithInvalidSupportedArchs.manifest", false)]
+        [InlineData("testManifestWithApplicationDefined.manifest", true)]
+        [InlineData(null, true)]
+        public void ManifestPopulationCheck(string manifestName, bool expectedResult)
+        {
+            PopulateSupportedArchitectures task = new PopulateSupportedArchitectures()
+            {
+                BuildEngine = new MockEngine(_testOutput)
+            };
+
+            using (TestEnvironment env = TestEnvironment.Create())
+            {
+                var tempOutput = env.CreateFolder().Path;
+                task.OutputPath = tempOutput;
+                if (!string.IsNullOrEmpty(manifestName))
+                {
+                    task.ApplicationManifestPath = Path.Combine(TestAssetsRootPath, manifestName);
+                }
+
+                var result = task.Execute();
+
+                result.ShouldBe(expectedResult);
+
+                if (result)
+                {
+                    var generatedManifest = task.ManifestPath;
+                    var expectedManifest = Path.Combine(TestAssetsRootPath, $"{manifestName ?? "default.win32manifest"}_expected");
+
+                    XmlDocument expectedDoc = new XmlDocument();
+                    XmlDocument actualDoc = new XmlDocument();
+
+                    expectedDoc.Load(generatedManifest);
+                    actualDoc.Load(expectedManifest);
+
+                    expectedDoc.OuterXml.ShouldBe(actualDoc.OuterXml);
+                    expectedDoc.InnerXml.ShouldBe(actualDoc.InnerXml);
+                }
+            }
+        }
+    }
+}
+#endif
diff --git a/src/Tasks.UnitTests/TestResources/Manifests/default.win32manifest_expected b/src/Tasks.UnitTests/TestResources/Manifests/default.win32manifest_expected
new file mode 100644
index 00000000000..d48062a4e72
--- /dev/null
+++ b/src/Tasks.UnitTests/TestResources/Manifests/default.win32manifest_expected
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8" standalone="yes"?>
+<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
+  <assemblyIdentity version="1.0.0.0" name="MyApplication.app"/>
+  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v2">
+    <security>
+      <requestedPrivileges xmlns="urn:schemas-microsoft-com:asm.v3">
+        <requestedExecutionLevel level="asInvoker" uiAccess="false"/>
+      </requestedPrivileges>
+    </security>
+  </trustInfo>
+  <asmv3:application xmlns:asmv3="urn:schemas-microsoft-com:asm.v3">
+    <asmv3:windowsSettings xmlns="http://schemas.microsoft.com/SMI/2024/WindowsSettings">
+      <supportedArchitectures>amd64 arm64</supportedArchitectures>
+    </asmv3:windowsSettings>
+  </asmv3:application>
+</assembly>
diff --git a/src/Tasks.UnitTests/TestResources/Manifests/testManifestWithApplicationDefined.manifest b/src/Tasks.UnitTests/TestResources/Manifests/testManifestWithApplicationDefined.manifest
new file mode 100644
index 00000000000..bc8eb93d98a
--- /dev/null
+++ b/src/Tasks.UnitTests/TestResources/Manifests/testManifestWithApplicationDefined.manifest
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8" standalone="yes"?>
+<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
+  <asmv3:application xmlns:asmv3="urn:schemas-microsoft-com:asm.v3">
+    <asmv3:windowsSettings xmlns="http://schemas.microsoft.com/SMI/2024/WindowsSettings">
+    </asmv3:windowsSettings>
+  </asmv3:application>
+</assembly>
diff --git a/src/Tasks.UnitTests/TestResources/Manifests/testManifestWithApplicationDefined.manifest_expected b/src/Tasks.UnitTests/TestResources/Manifests/testManifestWithApplicationDefined.manifest_expected
new file mode 100644
index 00000000000..7d2897b86ab
--- /dev/null
+++ b/src/Tasks.UnitTests/TestResources/Manifests/testManifestWithApplicationDefined.manifest_expected
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8" standalone="yes"?>
+<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
+  <asmv3:application xmlns:asmv3="urn:schemas-microsoft-com:asm.v3">
+    <asmv3:windowsSettings xmlns="http://schemas.microsoft.com/SMI/2024/WindowsSettings">
+       <supportedArchitectures>amd64 arm64</supportedArchitectures>
+    </asmv3:windowsSettings>
+  </asmv3:application>
+</assembly>
diff --git a/src/Tasks.UnitTests/TestResources/Manifests/testManifestWithInvalidSupportedArchs.manifest b/src/Tasks.UnitTests/TestResources/Manifests/testManifestWithInvalidSupportedArchs.manifest
new file mode 100644
index 00000000000..951ab4c1734
--- /dev/null
+++ b/src/Tasks.UnitTests/TestResources/Manifests/testManifestWithInvalidSupportedArchs.manifest
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8" standalone="yes"?>
+<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
+  <asmv3:application xmlns:asmv3="urn:schemas-microsoft-com:asm.v3">
+    <asmv3:windowsSettings xmlns="http://schemas.microsoft.com/SMI/2024/WindowsSettings">
+      <supportedArchitectures>dummy</supportedArchitectures>
+    </asmv3:windowsSettings>
+  </asmv3:application>
+</assembly>
diff --git a/src/Tasks/Al.cs b/src/Tasks/Al.cs
index 0b587df5b74..72982d5dafc 100644
--- a/src/Tasks/Al.cs
+++ b/src/Tasks/Al.cs
@@ -199,6 +199,12 @@ public bool Prefer32Bit
             get => GetBoolParameterWithDefault(nameof(Prefer32Bit), false);
         }
 
+        public bool PreferNativeArm64
+        {
+            set => Bag[nameof(PreferNativeArm64)] = value;
+            get => GetBoolParameterWithDefault(nameof(PreferNativeArm64), false);
+        }
+
         public string ProductName
         {
             set => Bag[nameof(ProductName)] = value;
@@ -446,6 +452,8 @@ public AL()
 
         public bool Prefer32Bit { get; set; }
 
+        public bool PreferNativeArm64 { get; set; }
+
         public string ProductName { get; set; }
 
         public string ProductVersion { get; set; }
@@ -501,6 +509,7 @@ internal interface IALTaskContract
         ITaskItem OutputAssembly { get; set; }
         string Platform { get; set; }
         bool Prefer32Bit { get; set; }
+        bool PreferNativeArm64 { get; set; }
         string ProductName { get; set; }
         string ProductVersion { get; set; }
         string[] ResponseFiles { get; set; }
diff --git a/src/Tasks/ManifestUtil/XmlNamespaces.cs b/src/Tasks/ManifestUtil/XmlNamespaces.cs
index 033c1f4006c..bccdf44abf6 100644
--- a/src/Tasks/ManifestUtil/XmlNamespaces.cs
+++ b/src/Tasks/ManifestUtil/XmlNamespaces.cs
@@ -25,6 +25,7 @@ public static XmlNamespaceManager GetNamespaceManager(XmlNameTable nameTable)
             nsmgr.AddNamespace("dsig", dsig);
             nsmgr.AddNamespace("xrml", xrml);
             nsmgr.AddNamespace("xsi", xsi);
+
             return nsmgr;
         }
     }
diff --git a/src/Tasks/Microsoft.Build.Tasks.csproj b/src/Tasks/Microsoft.Build.Tasks.csproj
index 3012b0ef44e..ea83af6fb56 100644
--- a/src/Tasks/Microsoft.Build.Tasks.csproj
+++ b/src/Tasks/Microsoft.Build.Tasks.csproj
@@ -196,6 +196,7 @@
     <Compile Include="CommandLineBuilderExtension.cs" />
     <Compile Include="ResourceHandling\*.cs" />
     <Compile Include="GetCompatiblePlatform.cs" />
+    <Compile Include="PopulateSupportedArchitectures.cs" />
     <Compile Include="SetRidAgnosticValueForProjects.cs" />
     <Compile Include="BuildCacheDisposeWrapper.cs" />
     <Compile Include="DownloadFile.cs" />
@@ -336,6 +337,7 @@
     <Compile Include="ManifestUtil\CngLightup.cs" />
     <Compile Include="RCWForCurrentContext.cs" />
     <Compile Include="PiaReference.cs" />
+    <Compile Include="PopulateSupportedArchitectures.cs" />
     <Compile Include="ResGen.cs" />
     <Compile Include="ResolveComReferenceCache.cs" />
     <Compile Include="StrongNameException.cs" />
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index 5e81c64c525..6a43a538eac 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -854,6 +854,20 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       <PlatformTargetAsMSBuildArchitecture>x86</PlatformTargetAsMSBuildArchitecture>
     </PropertyGroup>
 
+    <Error Condition=" '$(Prefer32Bit)' == 'true' and '$(PreferNativeArm64)' == 'true' "
+           Code="MSB9901"
+           Text="Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please disable one of those."
+            />
+
+    <Error Condition=" '$(NoWin32Manifest)' == 'true' and '$(PreferNativeArm64)' == 'true' "
+           Code="MSB9902"
+           Text="NoWin32Manifest and PreferNativeArm64 options are mutually exclusive. Please disable one of those."
+            />
+
+    <Warning Condition=" '$(PreferNativeArm64)' == 'true' and '$(PlatformName)' != 'AnyCPU' "
+             Code="MSB9903"
+             Text="When PreferNativeArm64 is enabled, ensure that the Target Platform is set to Any CPU."
+             />
     <!--
       Log an error if the user set MSBuildProjectExtensionsPath in the body of a project. In an SDK style project
       if you set a value in the body, the value is not used by the top implicit import but is used by the bottom.
@@ -4203,6 +4217,35 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       Condition="'$(GenerateClickOnceManifests)'=='true' or '@(NativeReference)'!='' or '@(ResolvedIsolatedComModules)'!='' or '$(GenerateAppxManifest)' == 'true'"
       DependsOnTargets="$(GenerateManifestsDependsOn)"/>
 
+<!--
+  ============================================================
+                                        _SetPreferNativeArm64Win32ManifestProperties
+  
+  The target sets property related to Native Arm64 architecture either in default Windows 32-bit manifest file or
+  in the existing Application Manifest.
+
+    [IN]
+    $(ApplicationManifest) - path to Application Manifest if exists.
+    $(IntermediateOutputPath) - Path to the intermediate output directory.
+
+    [OUT]
+    $(Win32Manifest) - path to manifest file with generated or updated content.
+-->
+
+  <Target
+    Name="_SetPreferNativeArm64Win32ManifestProperties"
+    Condition="''$(Platform)' == 'AnyCPU' and '@(PreferNativeArm64)'=='true' '@(Prefer32Bit)'!='true' @(NoWin32Manifest)'!='true' "
+    Outputs="@(Win32Manifest)">
+
+    <PopulateSupportedArchitectures
+        ApplicationManifestPath="@(ApplicationManifest)"
+        OutputPath="$(IntermediateOutputPath)">
+
+     <Output TaskParameter="ManifestPath" ItemName="Win32Manifest"/>
+    </PopulateSupportedArchitectures>
+  
+  </Target>
+
   <!--
     ============================================================
                                         GenerateApplicationManifest
@@ -4231,7 +4274,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.
             _DeploymentComputeClickOnceManifestInfo;
             ResolveComReferences;
             ResolveNativeReferences;
-            _GenerateResolvedDeploymentManifestEntryPoint"
+            _GenerateResolvedDeploymentManifestEntryPoint;
+            _SetPreferNativeArm64Win32ManifestProperties"
       Inputs="
             $(MSBuildAllProjects);
             @(AppConfigWithTargetPath);
diff --git a/src/Tasks/Microsoft.Common.tasks b/src/Tasks/Microsoft.Common.tasks
index cf67254502d..60e6be9300c 100644
--- a/src/Tasks/Microsoft.Common.tasks
+++ b/src/Tasks/Microsoft.Common.tasks
@@ -62,6 +62,7 @@
   <UsingTask TaskName="Microsoft.Build.Tasks.Message"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
   <UsingTask TaskName="Microsoft.Build.Tasks.Move"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
   <UsingTask TaskName="Microsoft.Build.Tasks.MSBuild"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.PopulateSupportedArchitectures"        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
   <UsingTask TaskName="Microsoft.Build.Tasks.ReadLinesFromFile"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
 
   <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildRuntimeType)' == 'Core' or '$(DisableOutOfProcTaskHost)' != ''" />
diff --git a/src/Tasks/Microsoft.NETFramework.CurrentVersion.props b/src/Tasks/Microsoft.NETFramework.CurrentVersion.props
index 0f03f04dfef..d7e293ba0d4 100644
--- a/src/Tasks/Microsoft.NETFramework.CurrentVersion.props
+++ b/src/Tasks/Microsoft.NETFramework.CurrentVersion.props
@@ -85,6 +85,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(TargetingClr2Framework)' != 'true' and '$(TargetFrameworkVersion)' != 'v4.0' and ('$(OutputType)' == 'exe' or '$(OutputType)' == 'winexe' or '$(OutputType)' == 'appcontainerexe' or '$(OutputType)' == '')">
     <Prefer32Bit Condition="'$(Prefer32Bit)' == ''">true</Prefer32Bit>
+    <PreferNativeArm64 Condition="'$(PreferNativeArm64)' == ''">false</PreferNativeArm64>
   </PropertyGroup>
 
   <PropertyGroup>
diff --git a/src/Tasks/PopulateSupportedArchitectures.cs b/src/Tasks/PopulateSupportedArchitectures.cs
new file mode 100644
index 00000000000..6ca282ed3ab
--- /dev/null
+++ b/src/Tasks/PopulateSupportedArchitectures.cs
@@ -0,0 +1,158 @@
+// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.IO;
+using System.Runtime.Versioning;
+using System.Text;
+using System.Xml;
+
+using Microsoft.Build.Framework;
+using Microsoft.Build.Shared;
+using Microsoft.Build.Tasks.Deployment.ManifestUtilities;
+using Microsoft.Build.Utilities;
+
+#nullable enable
+
+namespace Microsoft.Build.Tasks
+{
+    /// <summary>
+    /// Generates an application manifest or adds an entry to the existing one when PreferNativeArm64 property is true.
+    /// </summary>
+    [SupportedOSPlatform("windows")]
+    public sealed class PopulateSupportedArchitectures : TaskExtension
+    {
+        private const string supportedArchitectures = "supportedArchitectures";
+        private const string windowsSettings = "windowsSettings";
+        private const string SupportedArchitecturesValue = "amd64 arm64";
+        private const string asmv3Prefix = "asmv3";
+        private const string DefaultManifestName = "default.win32manifest";
+        private const string WindowsSettingsNamespace = "http://schemas.microsoft.com/SMI/2024/WindowsSettings";
+
+        private string _outputPath = string.Empty;
+        private string _generatedManifestFullPath = string.Empty;
+
+        public string? ApplicationManifestPath { get; set; }
+
+        [Required]
+        public string OutputPath
+        {
+            get => _outputPath;
+            set => _outputPath = value ?? throw new ArgumentNullException(nameof(OutputPath));
+        }
+
+        [Output]
+        public string ManifestPath
+        {
+            get => _generatedManifestFullPath;
+            private set => _generatedManifestFullPath = value;
+        }
+
+        public override bool Execute()
+        {
+            bool success = false;
+
+            if (!string.IsNullOrEmpty(PathToManifest))
+            {
+                XmlDocument document = LoadManifest(PathToManifest);
+                XmlNamespaceManager xmlNamespaceManager = XmlNamespaces.GetNamespaceManager(document.NameTable);
+
+                if (!string.IsNullOrEmpty(ApplicationManifestPath) && !IsExistingManifestValid(document, xmlNamespaceManager))
+                {
+                    return false;
+                }
+
+                PopulateSupportedArchitecturesElement(document, xmlNamespaceManager);
+
+                _generatedManifestFullPath = Path.Combine(OutputPath, Path.GetFileName(PathToManifest));
+                SaveManifest(document, _generatedManifestFullPath);
+
+                success = true;
+            }
+
+            return success;
+        }
+
+        private XmlDocument LoadManifest(string path)
+        {
+            XmlDocument document = new XmlDocument();
+            using (FileStream fs = File.OpenRead(path))
+            using (XmlReader xr = XmlReader.Create(fs, new XmlReaderSettings { DtdProcessing = DtdProcessing.Ignore, CloseInput = true }))
+            {
+                document.Load(xr);
+            }
+
+            return document;
+        }
+
+        private void SaveManifest(XmlDocument document, string outputFilePath)
+        {
+            using (XmlWriter xmlWriter = XmlWriter.Create(outputFilePath, new XmlWriterSettings { Indent = true, Encoding = Encoding.UTF8 }))
+            {
+                document.Save(xmlWriter);
+            }
+        }
+
+        private bool IsExistingManifestValid(XmlDocument document, XmlNamespaceManager xmlNamespaceManager)
+        {
+            bool isValid = false;
+
+            XmlNode? assemblyNode = document.SelectSingleNode(XPaths.assemblyElement, xmlNamespaceManager);
+            if (assemblyNode != null)
+            {
+                XmlNode? supportedArchitecturesNode = assemblyNode.SelectSingleNode($"//*[local-name()='{supportedArchitectures}']", xmlNamespaceManager);
+                if (supportedArchitecturesNode != null && !String.Equals(supportedArchitecturesNode.InnerText.Trim(), SupportedArchitecturesValue, StringComparison.OrdinalIgnoreCase))
+                {
+                    Log.LogErrorWithCodeFromResources("PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures", supportedArchitecturesNode.InnerText);
+
+                    return isValid;
+                }
+
+                isValid = true;
+            }
+
+            return isValid;
+        }
+
+        private string PathToManifest => string.IsNullOrEmpty(ApplicationManifestPath) || !File.Exists(ApplicationManifestPath)
+                ? ToolLocationHelper.GetPathToDotNetFrameworkFile(DefaultManifestName, TargetDotNetFrameworkVersion.Latest)
+                : ApplicationManifestPath ?? string.Empty;
+
+        private void PopulateSupportedArchitecturesElement(XmlDocument document, XmlNamespaceManager xmlNamespaceManager)
+        {
+            XmlNode? assemblyNode = document.SelectSingleNode(XPaths.assemblyElement, xmlNamespaceManager)
+                ?? throw new InvalidOperationException(ResourceUtilities.GetResourceString("PopulateSupportedArchitectures.AssemblyNodeIsMissed"));
+
+            XmlNode appNode = GetOrCreateXmlElement(document , xmlNamespaceManager, "application", asmv3Prefix, XmlNamespaces.asmv3);
+            XmlElement winSettingsNode = GetOrCreateXmlElement(document, xmlNamespaceManager, windowsSettings, asmv3Prefix, XmlNamespaces.asmv3);
+            if (string.IsNullOrEmpty(winSettingsNode.GetAttribute(XMakeAttributes.xmlns)))
+            {
+                winSettingsNode.SetAttribute(XMakeAttributes.xmlns, WindowsSettingsNamespace);
+            }
+
+            XmlNode supportedArchitecturesNode = GetOrCreateXmlElement(document, xmlNamespaceManager, supportedArchitectures, namespaceURI: WindowsSettingsNamespace);
+            supportedArchitecturesNode.InnerText = SupportedArchitecturesValue;
+            winSettingsNode.AppendChild(supportedArchitecturesNode);
+            appNode.AppendChild(winSettingsNode);
+            assemblyNode.AppendChild(appNode);
+        }
+
+        private XmlElement GetOrCreateXmlElement(XmlDocument document, XmlNamespaceManager xmlNamespaceManager, string localName, string prefix = "", string namespaceURI = "")
+        {
+            bool isPrefixed = !string.IsNullOrEmpty(prefix);
+
+            XmlNode? existingNode = isPrefixed
+                ? document.SelectSingleNode($"//{prefix}:{localName}", xmlNamespaceManager)
+                : document.SelectSingleNode($"//{localName}", xmlNamespaceManager);
+
+            if (existingNode is not null and XmlElement element)
+            {
+                return element;
+            }
+
+            return isPrefixed
+                ? document.CreateElement(prefix, localName, namespaceURI)
+                : document.CreateElement(localName, namespaceURI);
+        }
+    }
+}
diff --git a/src/Tasks/ResolveSDKReference.cs b/src/Tasks/ResolveSDKReference.cs
index 0e458a48807..9dbff7437cb 100644
--- a/src/Tasks/ResolveSDKReference.cs
+++ b/src/Tasks/ResolveSDKReference.cs
@@ -237,6 +237,11 @@ public string TargetPlatformVersion
         /// </summary>
         public bool Prefer32Bit { get; set; }
 
+        /// <summary>
+        /// The preferNativeArm64 flag used during the build
+        /// </summary>
+        public bool PreferNativeArm64 { get; set; }
+
         /// <summary>
         /// Resolved SDK References
         /// </summary>
diff --git a/src/Tasks/Resources/Strings.resx b/src/Tasks/Resources/Strings.resx
index a969d1dc8de..00e3a8f0af6 100644
--- a/src/Tasks/Resources/Strings.resx
+++ b/src/Tasks/Resources/Strings.resx
@@ -2621,7 +2621,7 @@
     <value>MSB3781: The SDK "{0}" depends on the following SDK(s) {1}, which have not been added to the project or were not found. Please ensure that you add these dependencies to your project or you may experience runtime issues. You can add dependencies to your project through the Reference Manager.</value>
     <comment>{StrBegin="MSB3781: "}</comment>
    </data>
-    <data name="ResolveSDKReference.Prefer32BitNotSupportedWithNeutralProject" xml:space="preserve">
+   <data name="ResolveSDKReference.Prefer32BitNotSupportedWithNeutralProject" xml:space="preserve">
     <value>MSB3782: The "{0}" SDK does not support targeting a neutral architecture with "Prefer 32-Bit" enabled for the project. Please go to the project properties (Build tab for C# and Compile tab for VB) and disable the "Prefer 32-bit" option, or change your project to target a non-neutral architecture.</value>
     <comment>{StrBegin="MSB3782: "} Also, please localize "Prefer 32-Bit" in the same way that it is localized in wizard\vbdesigner\designer\proppages\buildproppage.resx</comment>
    </data>
@@ -3013,6 +3013,17 @@
     <value>MSB3992: '{0}' is not set. When {1} is true, make sure to set a value for '{0}'.</value>
     <comment>{StrBegin="MSB3992: "}</comment>
   </data>
+
+  <!--
+        MSB9911 - MSB9920   Task: PopulateSupportedArchitectures
+  -->
+  <data name="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+    <value>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</value>
+    <comment>{StrBegin="MSB3991: "}</comment>
+  </data>
+  <data name="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+    <value>The assembly node is missing from the manifest. Check your ApplicationManifest file.</value>
+  </data>
   <!--
         The tasks message bucket is: MSB3001 - MSB3999
 
@@ -3100,9 +3111,12 @@
             MSB3971 - MSB3980   Task: GetReferenceAssemblyPaths overflow
             MSB3981 - MSB3990   Task: GetCompatiblePlatform
             MSB3991 - MSB3999   Task: CombineTargetFrameworkInfoProperties
+            MSB9911 - MSB9920   Task: PopulateSupportedArchitectures
 
             MSB4000 - MSB4200   Portable targets & tasks (vsproject\flavors\portable\msbuild)
             MSB9000 - MSB9900   MSBuild targets files (C++)
+            
+            MSB9901 - MSB9910   MSBuild internal targets
 
         The following codes are not longer used but have shipped so should not be reused:
             MSB3109
diff --git a/src/Tasks/Resources/xlf/Strings.cs.xlf b/src/Tasks/Resources/xlf/Strings.cs.xlf
index b4fc18d7e3f..d5ce963f170 100644
--- a/src/Tasks/Resources/xlf/Strings.cs.xlf
+++ b/src/Tasks/Resources/xlf/Strings.cs.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">Vlastnost StopOnFirstFailure nebude mÃ­t Å¾Ã¡dnÃ½ ÃºÄinek, jsou-li splnÄny vÅ¡echny nÃ¡sledujÃ­cÃ­ podmÃ­nky: 1) systÃ©m pracuje v reÅ¾imu vÃ­ce procesÅ¯, 2) vlastnost BuildInParallel mÃ¡ hodnotu True, 3) vlastnost RunEachTargetSeparately mÃ¡ hodnotu False.</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: Nelze ÄÃ­st ÅÃ¡dky ze souboru {0}. {1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.de.xlf b/src/Tasks/Resources/xlf/Strings.de.xlf
index a185f1c58dc..0cfcfba742f 100644
--- a/src/Tasks/Resources/xlf/Strings.de.xlf
+++ b/src/Tasks/Resources/xlf/Strings.de.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">StopOnFirstFailure hat keine Auswirkungen, wenn die folgenden Bedingungen alle gelten: 1) Das System wird im Mehrprozessmodus ausgefÃ¼hrt. 2) Die BuildInParallel-Eigenschaft ist TRUE. 3) Die RunEachTargetSeparately-Eigenschaft ist FALSE.</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: Die Zeilen aus der Datei "{0}" konnten nicht gelesen werden. {1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.es.xlf b/src/Tasks/Resources/xlf/Strings.es.xlf
index eef9d9a6a5e..7dea1de3bb0 100644
--- a/src/Tasks/Resources/xlf/Strings.es.xlf
+++ b/src/Tasks/Resources/xlf/Strings.es.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">StopOnFirstFailure no surtirÃ¡ efecto si se dan todas las condiciones siguientes: 1) El sistema se ejecuta en modo de proceso mÃºltiple. 2) La propiedad BuildInParallel es true. 3) La propiedad RunEachTargetSeparately es false.</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: No se pudieron leer las lÃ­neas del archivo "{0}". {1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.fr.xlf b/src/Tasks/Resources/xlf/Strings.fr.xlf
index 0a38e39c972..a8864d262c4 100644
--- a/src/Tasks/Resources/xlf/Strings.fr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.fr.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">StopOnFirstFailure reste sans effet dans les conditions suivantesÂ : 1) Le systÃ¨me s'exÃ©cute en mode multiprocessus. 2) La propriÃ©tÃ© BuildInParallel a la valeur true. 3) La propriÃ©tÃ© RunEachTargetSeparately a la valeur false.</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: Impossible de lire les lignes dans le fichier "{0}". {1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.it.xlf b/src/Tasks/Resources/xlf/Strings.it.xlf
index 27b03e70d2e..74438c55e2f 100644
--- a/src/Tasks/Resources/xlf/Strings.it.xlf
+++ b/src/Tasks/Resources/xlf/Strings.it.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">StopOnFirstFailure non avrÃ  alcun effetto in presenza di tutte le condizioni seguenti: 1) il sistema Ã¨ in esecuzione in modalitÃ  a piÃ¹ processi 2) la proprietÃ  BuildInParallel Ã¨ true. 3) la proprietÃ  RunEachTargetSeparately Ã¨ false.</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: non Ã¨ stato possibile leggere le righe dal file "{0}". {1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.ja.xlf b/src/Tasks/Resources/xlf/Strings.ja.xlf
index 855a8a09ef6..25b21675370 100644
--- a/src/Tasks/Resources/xlf/Strings.ja.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ja.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">StopOnFirstFailure ã¯ãæ¬¡ã®ãã¹ã¦ã®æ¡ä»¶ã«è©²å½ããå ´åã«ç¡å¹ã¨ãªãã¾ãã1) ã·ã¹ãã ããã«ããã­ã»ããµ ã¢ã¼ãã§å®è¡ããã¦ããã2) BuildInParallel ãã­ããã£ã true ã«è¨­å®ããã¦ããã3) RunEachTargetSeparately ãã­ããã£ã false ã«è¨­å®ããã¦ããã</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: ãã¡ã¤ã« "{0}" ããã®è¡ãèª­ã¿åãã¾ããã§ããã{1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.ko.xlf b/src/Tasks/Resources/xlf/Strings.ko.xlf
index 9e7d5d6eabc..c34c7f7f58d 100644
--- a/src/Tasks/Resources/xlf/Strings.ko.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ko.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">ë¤ì ì¡°ê±´ì´ ëª¨ë ì¶©ì¡±ëë©´ StopOnFirstFailureê° í¨ê³¼ê° ììµëë¤. 1) ìì¤íì´ ë¤ì¤ íë¡ì¸ì¤ ëª¨ëìì ì¤í ì¤ìëë¤. 2) BuildInParallel ìì±ì´ trueìëë¤. 3) RunEachTargetSeparately ìì±ì´ falseìëë¤.</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: "{0}" íì¼ìì ì¤ì ì½ì ì ììµëë¤. {1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.pl.xlf b/src/Tasks/Resources/xlf/Strings.pl.xlf
index 6f0ed65f8bc..14084119c72 100644
--- a/src/Tasks/Resources/xlf/Strings.pl.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pl.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">DziaÅanie funkcji StopOnFirstFailure nie przyniesie efektu, jeÅli bÄdÄ speÅnione wszystkie nastÄpujÄce warunki: 1) System dziaÅa w trybie wieloprocesowym. 2) WÅaÅciwoÅÄ BuildInParallel ma wartoÅÄ true. 3) WÅaÅciwoÅÄ RunEachTargetSeparately ma wartoÅÄ false.</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: Nie moÅ¼na odczytaÄ wierszy z pliku â{0}â. {1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
index d6bccad1740..5fb09819701 100644
--- a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">StopOnFirstFailure nÃ£o terÃ¡ efeito quando estas condiÃ§Ãµes existirem: 1) O sistema estiver sendo executado no modo de processamento mÃºltiplo 2) A propriedade BuildInParallel for true. 3) A propriedade RunEachTargetSeparately for false.</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: NÃ£o foi possÃ­vel ler linhas do arquivo "{0}". {1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.ru.xlf b/src/Tasks/Resources/xlf/Strings.ru.xlf
index 13636f628c9..ea7bbf0a0b8 100644
--- a/src/Tasks/Resources/xlf/Strings.ru.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ru.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">StopOnFirstFailure Ð±ÑÐ´ÐµÑ Ð¸Ð³Ð½Ð¾ÑÐ¸ÑÐ¾Ð²Ð°ÑÑÑÑ Ð¿ÑÐ¸ Ð¾Ð´Ð½Ð¾Ð²ÑÐµÐ¼ÐµÐ½Ð½Ð¾Ð¼ ÑÐ¾Ð±Ð»ÑÐ´ÐµÐ½Ð¸Ð¸ ÑÐ»ÐµÐ´ÑÑÑÐ¸Ñ ÑÑÐ»Ð¾Ð²Ð¸Ð¹: 1) ÑÐ¸ÑÑÐµÐ¼Ð° Ð²ÑÐ¿Ð¾Ð»Ð½ÑÐµÑÑÑ Ð² ÑÐµÐ¶Ð¸Ð¼Ðµ Ñ Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¸Ð¼Ð¸ Ð¿ÑÐ¾ÑÐµÑÑÐ°Ð¼Ð¸; 2) ÑÐ²Ð¾Ð¹ÑÑÐ²Ð¾ BuildInParallel Ð¸Ð¼ÐµÐµÑ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ true; 3) ÑÐ²Ð¾Ð¹ÑÑÐ²Ð¾ RunEachTargetSeparately Ð¸Ð¼ÐµÐµÑ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ false.</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: ÐÐµ ÑÐ´Ð°Ð»Ð¾ÑÑ Ð¿ÑÐ¾ÑÐµÑÑÑ ÑÑÑÐ¾ÐºÐ¸ Ð¸Ð· ÑÐ°Ð¹Ð»Ð° "{0}". {1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.tr.xlf b/src/Tasks/Resources/xlf/Strings.tr.xlf
index 80e916c9578..276fcc7cf60 100644
--- a/src/Tasks/Resources/xlf/Strings.tr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.tr.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">Åu koÅullarÄ±n tÃ¼mÃ¼ doÄru olduÄunda StopOnFirstFailure etkisiz olur: 1) Sistem Ã§oklu iÅlem modunda Ã§alÄ±ÅÄ±yorsa. 2) BuildInParallel Ã¶zelliÄi true ise. 3) RunEachTargetSeparately Ã¶zelliÄi false ise.</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: "{0}" dosyasÄ±ndaki satÄ±rlar okunamadÄ±. {1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
index fb45fb03527..e04936d2709 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">å¦ææ»¡è¶³ä»¥ä¸æææ¡ä»¶ï¼StopOnFirstFailure å°ä¸èµ·ä»»ä½ä½ç¨: 1) ç³»ç»å¨å¤è¿ç¨æ¨¡å¼ä¸è¿è¡ã2) BuildInParallel å±æ§ä¸º trueã3) RunEachTargetSeparately å±æ§ä¸º falseã</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: æªè½ä»æä»¶â{0}âè¯»åå½ä»¤è¡ã{1}</target>
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
index 1ce29e770f5..eb9b2ef2b2f 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
@@ -1564,6 +1564,16 @@
         <target state="translated">ç¶ä¸åæ¢ä»¶å¨é¨æç«æï¼StopOnFirstFailure å°æ²æä½ç¨: 1) ç³»çµ±æ­£å¨å¤èçç¨åºæ¨¡å¼ä¸­å·è¡ 2) BuildInParallel å±¬æ§çº trueã3) RunEachTargetSeparately å±¬æ§çº falseã</target>
         <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
       </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.AssemblyNodeIsMissed">
+        <source>The assembly node is missing from the manifest. Check your ApplicationManifest file.</source>
+        <target state="new">The assembly node is missing from the manifest. Check your ApplicationManifest file.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PopulateSupportedArchitectures.InvalidValueInSupportedArchitectures">
+        <source>MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</source>
+        <target state="new">MSB9911: The specified value: '{0}' for supportedArchitectures element is invalid. Either remove it from manifest or set as 'amd64 arm64'.</target>
+        <note>{StrBegin="MSB3991: "}</note>
+      </trans-unit>
       <trans-unit id="ReadLinesFromFile.ErrorOrWarning">
         <source>MSB3501: Could not read lines from file "{0}". {1}</source>
         <target state="translated">MSB3501: ç¡æ³å¾æªæ¡ "{0}" è®åè¡ã{1}</target>
