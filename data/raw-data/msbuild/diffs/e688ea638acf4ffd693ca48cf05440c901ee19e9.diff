diff --git a/src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs b/src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs
index 924c44fd32b..d093de66dd9 100644
--- a/src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs
+++ b/src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs
@@ -182,14 +182,14 @@ public void RunTargetExtError(string targetName, string expectedResourceName, bo
         /// BuildingInsideVisualStudio is true, the resourceName is CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio, otherwise is CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio
         /// </summary>
         /// <param name="expectedResourceName"></param>
-        /// <param name="SkipInvalidConfigurations"></param>
-        /// <param name="BuildingInsideVisualStudio"></param>
+        /// <param name="skipInvalidConfigurations"></param>
+        /// <param name="buildingInsideVisualStudio"></param>
         [Theory]
         [InlineData("CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio", false, true)]
         [InlineData("CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio", true, false)]
         [InlineData("CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio", false, false)]
         [InlineData("CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio", true, true)]
-        public void CheckForInvalidConfigurationAndPlatformTargetMessage(string expectedResourceName, bool SkipInvalidConfigurations, bool BuildingInsideVisualStudio)
+        public void CheckForInvalidConfigurationAndPlatformTargetMessage(string expectedResourceName, bool skipInvalidConfigurations, bool buildingInsideVisualStudio)
         {
             using (TestEnvironment env = TestEnvironment.Create())
             {
@@ -202,8 +202,8 @@ public void CheckForInvalidConfigurationAndPlatformTargetMessage(string expected
                     <Import Project="$(MSBuildBinPath)\Microsoft.Common.props" />
 
                     <PropertyGroup>
-                         <SkipInvalidConfigurations>{SkipInvalidConfigurations}</SkipInvalidConfigurations>
-                         <BuildingInsideVisualStudio>{BuildingInsideVisualStudio}</BuildingInsideVisualStudio>
+                         <SkipInvalidConfigurations>{skipInvalidConfigurations}</SkipInvalidConfigurations>
+                         <BuildingInsideVisualStudio>{buildingInsideVisualStudio}</BuildingInsideVisualStudio>
                          <BaseOutputPathWasSpecified>false</BaseOutputPathWasSpecified>
                          <_OutputPathWasMissing>true</_OutputPathWasMissing>
                          <Configuration>{configuration}</Configuration>
@@ -223,7 +223,7 @@ public void CheckForInvalidConfigurationAndPlatformTargetMessage(string expected
                 string expectedBuildMessage = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(expectedResourceName, fileName, configuration, platform);
 
                 project.Build(logger);
-                if (SkipInvalidConfigurations)
+                if (skipInvalidConfigurations)
                 {
                     logger.Warnings[0].RawMessage.ShouldBe(expectedBuildMessage);
                 }
