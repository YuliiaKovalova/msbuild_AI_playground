diff --git a/src/Shared/TaskParameter.cs b/src/Shared/TaskParameter.cs
index 4c7f2cc7b1c..b244f67a08d 100644
--- a/src/Shared/TaskParameter.cs
+++ b/src/Shared/TaskParameter.cs
@@ -566,6 +566,10 @@ private class TaskParameterTaskItem :
             /// </summary>
             private string _fullPath;
 
+            // Although we preserve escaped state for engine purposes, tasks most commonly request the unescaped ItemSpec value.
+            // Keep a cache which is lazily populated and invalidated any time the unescaped ItemSpec is requested.
+            private ItemSpecCache _itemSpecCache;
+
             /// <summary>
             /// Constructor for serialization
             /// </summary>
@@ -627,7 +631,20 @@ public string ItemSpec
             {
                 get
                 {
-                    return (_escapedItemSpec == null) ? String.Empty : EscapingUtilities.UnescapeAll(_escapedItemSpec);
+                    if (_escapedItemSpec == null)
+                    {
+                        return string.Empty;
+                    }
+
+                    // Only return if the unescaped ItemSpec still matches the object which produced the cached value.
+                    // We only check for reference equality since this value is rarely set outside of initialization.
+                    if (!string.IsNullOrEmpty(_itemSpecCache.UnescapedItemSpec) && ReferenceEquals(_escapedItemSpec, _itemSpecCache.LastEscapedItemSpec))
+                    {
+                        return _itemSpecCache.UnescapedItemSpec;
+                    }
+
+                    _itemSpecCache.LastEscapedItemSpec = _escapedItemSpec;
+                    return _itemSpecCache.UnescapedItemSpec = EscapingUtilities.UnescapeAll(_escapedItemSpec);
                 }
 
                 set
@@ -929,6 +946,13 @@ internal static TaskParameterTaskItem FactoryForDeserialization(ITranslator tran
                 taskItem.Translate(translator);
                 return taskItem;
             }
+
+            private struct ItemSpecCache
+            {
+                internal string LastEscapedItemSpec { get; set; }
+
+                internal string UnescapedItemSpec { get; set; }
+            }
         }
     }
 }
