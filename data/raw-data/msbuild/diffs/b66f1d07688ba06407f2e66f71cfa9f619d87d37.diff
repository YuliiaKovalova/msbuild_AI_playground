diff --git a/src/Build.UnitTests/BackEnd/ConfigCache_Tests.cs b/src/Build.UnitTests/BackEnd/ConfigCache_Tests.cs
index d80e9c430cd..1593604ae74 100644
--- a/src/Build.UnitTests/BackEnd/ConfigCache_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/ConfigCache_Tests.cs
@@ -2,7 +2,6 @@
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
 using System.Collections.Generic;
-using System.IO;
 using System.Linq;
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.Execution;
diff --git a/src/Build.UnitTests/BackEnd/MockHost.cs b/src/Build.UnitTests/BackEnd/MockHost.cs
index dc4aaff843e..1de3f968fc2 100644
--- a/src/Build.UnitTests/BackEnd/MockHost.cs
+++ b/src/Build.UnitTests/BackEnd/MockHost.cs
@@ -127,15 +127,11 @@ public string Name
         }
 
         /// <summary>
-        /// Retrieve the build parameters.
+        /// Gets or sets the build parameters.
         /// </summary>
-        /// <returns></returns>
         public BuildParameters BuildParameters
         {
-            get
-            {
-                return _buildParameters;
-            }
+            get => _buildParameters; set => throw new NotImplementedException();
         }
 
         /// <summary>
diff --git a/src/Build.UnitTests/BackEnd/NodeEndpointInProc_Tests.cs b/src/Build.UnitTests/BackEnd/NodeEndpointInProc_Tests.cs
index 7b6a17d9d9d..dc702d6849a 100644
--- a/src/Build.UnitTests/BackEnd/NodeEndpointInProc_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/NodeEndpointInProc_Tests.cs
@@ -8,7 +8,6 @@
 using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Execution;
 using Microsoft.Build.Framework;
-using Microsoft.Build.Shared;
 using LegacyThreadingData = Microsoft.Build.Execution.LegacyThreadingData;
 using Xunit;
 
@@ -66,12 +65,12 @@ public string Name
                 }
             }
 
+            /// <summary>
+            /// Gets or sets the build parameters.
+            /// </summary>
             public BuildParameters BuildParameters
             {
-                get
-                {
-                    return _buildParameters;
-                }
+                get => _buildParameters; set => throw new NotImplementedException();
             }
 
             #region IBuildComponentHost Members
diff --git a/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs b/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
index 64682d0e709..bb53b803357 100644
--- a/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
@@ -1762,14 +1762,11 @@ public string Name
             }
 
             /// <summary>
-            /// Returns the build parameters.
+            /// Gets or sets the build parameters.
             /// </summary>
             public BuildParameters BuildParameters
             {
-                get
-                {
-                    return _buildParameters;
-                }
+                get => _buildParameters; set => throw new NotImplementedException();
             }
 
             /// <summary>
diff --git a/src/Build.UnitTests/BackEnd/TargetEntry_Tests.cs b/src/Build.UnitTests/BackEnd/TargetEntry_Tests.cs
index 7a1c46263d2..8eac4112988 100644
--- a/src/Build.UnitTests/BackEnd/TargetEntry_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TargetEntry_Tests.cs
@@ -1300,14 +1300,11 @@ public string Name
             }
 
             /// <summary>
-            /// Gets the build parameters.
+            /// Gets or sets the build parameters.
             /// </summary>
             public BuildParameters BuildParameters
             {
-                get
-                {
-                    return _buildParameters;
-                }
+                get => _buildParameters; set => throw new NotImplementedException();
             }
 
             /// <summary>
diff --git a/src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs b/src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs
index c08997ed64c..8926efa182e 100644
--- a/src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs
@@ -1238,14 +1238,11 @@ public string Name
             }
 
             /// <summary>
-            /// Returns the build parameters.
+            /// Gets or sets the build parameters.
             /// </summary>
             public BuildParameters BuildParameters
             {
-                get
-                {
-                    return _buildParameters;
-                }
+                get => _buildParameters; set => throw new NotSupportedException();
             }
 
             /// <summary>
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 946650f6549..db7894f6888 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -378,10 +378,12 @@ public static BuildManager DefaultBuildManager
         string IBuildComponentHost.Name => _hostName;
 
         /// <summary>
-        /// Retrieves the build parameters associated with this build.
+        /// Gets or sets the build parameters associated with this build.
         /// </summary>
-        /// <returns>The build parameters.</returns>
-        BuildParameters IBuildComponentHost.BuildParameters => _buildParameters;
+        BuildParameters IBuildComponentHost.BuildParameters
+        {
+            get => _buildParameters; set => _buildParameters = value;
+        }
 
         /// <summary>
         /// Retrieves the LegacyThreadingData associated with a particular build manager
diff --git a/src/Build/BackEnd/Components/IBuildComponentHost.cs b/src/Build/BackEnd/Components/IBuildComponentHost.cs
index 100571a029f..6397bd064b3 100644
--- a/src/Build/BackEnd/Components/IBuildComponentHost.cs
+++ b/src/Build/BackEnd/Components/IBuildComponentHost.cs
@@ -145,9 +145,9 @@ internal interface IBuildComponentHost
         string Name { get; }
 
         /// <summary>
-        /// Retrieves the BuildParameters used during the build.
+        /// Gets or sets the BuildParameters used during the build.
         /// </summary>
-        BuildParameters BuildParameters { get; }
+        BuildParameters BuildParameters { get; set; }
 
         /// <summary>
         /// The data structure which holds the data for the use of legacy threading semantics
diff --git a/src/Build/BackEnd/Node/OutOfProcNode.cs b/src/Build/BackEnd/Node/OutOfProcNode.cs
index f45bb803573..5bce87e87aa 100644
--- a/src/Build/BackEnd/Node/OutOfProcNode.cs
+++ b/src/Build/BackEnd/Node/OutOfProcNode.cs
@@ -195,10 +195,12 @@ public OutOfProcNode()
         string IBuildComponentHost.Name => "OutOfProc";
 
         /// <summary>
-        /// Retrieves the build parameters for the current build.
+        /// Gets or sets the build parameters for the current build.
         /// </summary>
-        /// <returns>The build parameters.</returns>
-        BuildParameters IBuildComponentHost.BuildParameters => _buildParameters;
+        BuildParameters IBuildComponentHost.BuildParameters
+        {
+            get => _buildParameters; set => throw new NotImplementedException();
+        }
 
         /// <summary>
         /// Whether the current appdomain has an out of proc node.
diff --git a/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs b/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs
index e62864988d9..6c80df4f8b8 100644
--- a/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs
+++ b/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs
@@ -152,11 +152,14 @@ internal TaskExecutionHost(IBuildComponentHost host)
         }
 
         /// <summary>
-        /// Constructor, for unit testing only.  
+        /// Initializes a new instance of the <see cref="TaskExecutionHost"/> class
+        /// for unit testing only.
         /// </summary>
         internal TaskExecutionHost()
         {
-            // do nothing
+            // These initializations are necessary to test for missing required properties.
+            _buildComponentHost = new BuildManager();
+            _buildComponentHost.BuildParameters = new BuildParameters();
         }
 
         /// <summary>
@@ -373,6 +376,7 @@ bool ITaskExecutionHost.SetTaskParameters(IDictionary<string, (string, ElementLo
                 foreach (KeyValuePair<string, string> requiredParameter in requiredParameters)
                 {
                     IsolateProjects isolateProjects = _buildComponentHost.BuildParameters.IsolateProjects;
+
                     string resourceName = isolateProjects == IsolateProjects.Message ? "RequiredPropertyNotSetErrorMessagingIsolationMode" : "RequiredPropertyNotSetError";
                     ProjectErrorUtilities.VerifyThrowInvalidProject(
                         setParameters.ContainsKey(requiredParameter.Key),
