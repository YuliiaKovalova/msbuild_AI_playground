diff --git a/.github/ISSUE_TEMPLATE/01_bugreport.yml b/.github/ISSUE_TEMPLATE/01_bugreport.yml
index ac84e2563ad..35d55437a5a 100644
--- a/.github/ISSUE_TEMPLATE/01_bugreport.yml
+++ b/.github/ISSUE_TEMPLATE/01_bugreport.yml
@@ -1,7 +1,7 @@
 name: üêû Bug Report
 description: Report a bug to help us improve MSBuild.
 title: "[Bug]: "
-labels: ["bug", "needs-triage"]
+labels: ["bug"]
 body:
   - type: textarea
     attributes:
diff --git a/.github/ISSUE_TEMPLATE/02_performanceissue.yml b/.github/ISSUE_TEMPLATE/02_performanceissue.yml
index 846a9747b55..7cca706981f 100644
--- a/.github/ISSUE_TEMPLATE/02_performanceissue.yml
+++ b/.github/ISSUE_TEMPLATE/02_performanceissue.yml
@@ -1,7 +1,7 @@
 name: üìâ Performance Issue
 description: Report a performance issue or regression.
 title: "[Performance]: "
-labels: ["performance", "needs-triage"]
+labels: ["performance"]
 body:
   - type: textarea
     attributes:
diff --git a/.github/ISSUE_TEMPLATE/03_mybuildisbroken.yml b/.github/ISSUE_TEMPLATE/03_mybuildisbroken.yml
index a7e104afbe0..31869c5aedc 100644
--- a/.github/ISSUE_TEMPLATE/03_mybuildisbroken.yml
+++ b/.github/ISSUE_TEMPLATE/03_mybuildisbroken.yml
@@ -1,7 +1,6 @@
 name: üòµ My Build is Broken
 description: Use this template for helping figure out what's wrong with your build.
 title: "[Broken Build]: "
-labels: ["needs-triage"]
 body:
   - type: markdown
     attributes:
diff --git a/.github/ISSUE_TEMPLATE/05_unhandledexception.yml b/.github/ISSUE_TEMPLATE/05_unhandledexception.yml
index 34ff39f44b0..12388e79503 100644
--- a/.github/ISSUE_TEMPLATE/05_unhandledexception.yml
+++ b/.github/ISSUE_TEMPLATE/05_unhandledexception.yml
@@ -1,7 +1,7 @@
 name: üò± Unhandled Exception
 description: Reporting holes in our bug reporting system
 title: "[Unhandled Exception]: "
-labels: ["bug", "needs-triage"]
+labels: ["bug"]
 body:
   - type: textarea
     attributes:
diff --git a/.github/ISSUE_TEMPLATE/06_feature_request.yml b/.github/ISSUE_TEMPLATE/06_feature_request.yml
index c2108af202e..15a628ffe1b 100644
--- a/.github/ISSUE_TEMPLATE/06_feature_request.yml
+++ b/.github/ISSUE_TEMPLATE/06_feature_request.yml
@@ -1,7 +1,7 @@
 name: üí° Feature  Request
 description: Suggest an idea for this project.
 title: "[Feature Request]: "
-labels: ["Feature Request", "needs-triage"]
+labels: ["Feature Request"]
 body:
   - type: textarea
     attributes:
diff --git a/.github/fabricbot.json b/.github/fabricbot.json
deleted file mode 100644
index af4f1a94a7a..00000000000
--- a/.github/fabricbot.json
+++ /dev/null
@@ -1,572 +0,0 @@
-{
-  "version": "1.0",
-  "tasks": [
-    {
-      "taskType": "scheduled",
-      "capabilityId": "ScheduledSearch",
-      "subCapability": "ScheduledSearch",
-      "version": "1.1",
-      "config": {
-        "frequency": [
-          {
-            "weekDay": 0,
-            "hours": [
-              17
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 1,
-            "hours": [
-              17
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 2,
-            "hours": [
-              17
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 3,
-            "hours": [
-              17
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 4,
-            "hours": [
-              17
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 5,
-            "hours": [
-              17
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 6,
-            "hours": [
-              17
-            ],
-            "timezoneOffset": -7
-          }
-        ],
-        "searchTerms": [
-          {
-            "name": "isOpen",
-            "parameters": {}
-          },
-          {
-            "name": "hasLabel",
-            "parameters": {
-              "label": "needs-more-info"
-            }
-          },
-          {
-            "name": "notPartOfMilestone",
-            "parameters": {
-              "milestone": "Backlog"
-            }
-          },
-          {
-            "name": "notPartOfMilestone",
-            "parameters": {
-              "milestone": "Discussion"
-            }
-          },
-          {
-            "name": "noLabel",
-            "parameters": {
-              "label": "needs-triage"
-            }
-          },
-          {
-            "name": "isIssue",
-            "parameters": {}
-          },
-          {
-            "name": "noLabel",
-            "parameters": {
-              "label": "stale"
-            }
-          },
-          {
-            "name": "noActivitySince",
-            "parameters": {
-              "days": 30
-            }
-          },
-          {
-            "name": "noLabel",
-            "parameters": {
-              "label": "bot-exclude"
-            }
-          }
-        ],
-        "taskName": "Mark Stale Issues",
-        "actions": [
-          {
-            "name": "addLabel",
-            "parameters": {
-              "label": "stale"
-            }
-          },
-          {
-            "name": "addReply",
-            "parameters": {
-              "comment": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity."
-            }
-          }
-        ]
-      }
-    },
-    {
-      "taskType": "scheduled",
-      "capabilityId": "ScheduledSearch",
-      "subCapability": "ScheduledSearch",
-      "version": "1.1",
-      "config": {
-        "frequency": [
-          {
-            "weekDay": 0,
-            "hours": [
-              12
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 1,
-            "hours": [
-              12
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 2,
-            "hours": [
-              12
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 3,
-            "hours": [
-              12
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 4,
-            "hours": [
-              12
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 5,
-            "hours": [
-              12
-            ],
-            "timezoneOffset": -7
-          },
-          {
-            "weekDay": 6,
-            "hours": [
-              12
-            ],
-            "timezoneOffset": -7
-          }
-        ],
-        "searchTerms": [
-          {
-            "name": "isOpen",
-            "parameters": {}
-          },
-          {
-            "name": "hasLabel",
-            "parameters": {
-              "label": "stale"
-            }
-          },
-          {
-            "name": "noLabel",
-            "parameters": {
-              "label": "bot-exclude"
-            }
-          },
-          {
-            "name": "noActivitySince",
-            "parameters": {
-              "days": 14
-            }
-          },
-          {
-            "name": "notPartOfMilestone",
-            "parameters": {
-              "milestone": "Backlog"
-            }
-          },
-          {
-            "name": "notPartOfMilestone",
-            "parameters": {
-              "milestone": "Discussion"
-            }
-          },
-          {
-            "name": "noLabel",
-            "parameters": {
-              "label": "needs-triage"
-            }
-          }
-        ],
-        "taskName": "Close Stale Issues",
-        "actions": [
-          {
-            "name": "closeIssue",
-            "parameters": {}
-          },
-          {
-            "name": "addReply",
-            "parameters": {
-              "comment": "This issue was closed due to inactivity. If you can still reproduce this bug, please comment with the requested information, detailed steps to reproduce the problem, or any other notes that might help in the investigation."
-            }
-          },
-          {
-            "name": "addLabel",
-            "parameters": {
-              "label": "closed-by-bot"
-            }
-          }
-        ]
-      },
-      "disabled": false
-    },
-    {
-      "taskType": "trigger",
-      "capabilityId": "IssueResponder",
-      "subCapability": "IssueCommentResponder",
-      "version": "1.0",
-      "config": {
-        "conditions": {
-          "operator": "and",
-          "operands": [
-            {
-              "name": "isOpen",
-              "parameters": {}
-            },
-            {
-              "name": "hasLabel",
-              "parameters": {
-                "label": "stale"
-              }
-            },
-            {
-              "operator": "not",
-              "operands": [
-                {
-                  "name": "hasLabel",
-                  "parameters": {
-                    "label": "bot-exclude"
-                  }
-                }
-              ]
-            }
-          ]
-        },
-        "eventType": "issue",
-        "eventNames": [
-          "issue_comment"
-        ],
-        "taskName": "Unstale Open Issues that get comments",
-        "actions": [
-          {
-            "name": "removeLabel",
-            "parameters": {
-              "label": "stale"
-            }
-          },
-          {
-            "name": "addLabel",
-            "parameters": {
-              "label": "needs-triage"
-            }
-          }
-        ]
-      },
-      "disabled": false
-    },
-    {
-      "taskType": "trigger",
-      "capabilityId": "IssueResponder",
-      "subCapability": "IssueCommentResponder",
-      "version": "1.0",
-      "config": {
-        "conditions": {
-          "operator": "and",
-          "operands": [
-            {
-              "operator": "not",
-              "operands": [
-                {
-                  "name": "isOpen",
-                  "parameters": {}
-                }
-              ]
-            },
-            {
-              "name": "hasLabel",
-              "parameters": {
-                "label": "stale"
-              }
-            },
-            {
-              "operator": "not",
-              "operands": [
-                {
-                  "name": "hasLabel",
-                  "parameters": {
-                    "label": "bot-exclude"
-                  }
-                }
-              ]
-            }
-          ]
-        },
-        "eventType": "issue",
-        "eventNames": [
-          "issue_comment"
-        ],
-        "taskName": "Apply needs-triage to closed stale issues that get comments",
-        "actions": [
-          {
-            "name": "addLabel",
-            "parameters": {
-              "label": "needs-triage"
-            }
-          }
-        ]
-      }
-    },
-    {
-      "taskType": "trigger",
-      "capabilityId": "IssueResponder",
-      "subCapability": "IssuesOnlyResponder",
-      "version": "1.0",
-      "config": {
-        "conditions": {
-          "operator": "and",
-          "operands": [
-            {
-              "name": "labelAdded",
-              "parameters": {
-                "label": "needs-more-info"
-              }
-            },
-            {
-              "name": "hasLabel",
-              "parameters": {
-                "label": "needs-triage"
-              }
-            }
-          ]
-        },
-        "eventType": "issue",
-        "eventNames": [
-          "issues",
-          "project_card"
-        ],
-        "taskName": "remove needs-triage when needs-more-info is applied",
-        "actions": [
-          {
-            "name": "removeLabel",
-            "parameters": {
-              "label": "needs-triage"
-            }
-          }
-        ]
-      }
-    },
-    {
-      "taskType": "trigger",
-      "capabilityId": "IssueResponder",
-      "subCapability": "IssueCommentResponder",
-      "version": "1.0",
-      "config": {
-        "conditions": {
-          "operator": "and",
-          "operands": [
-            {
-              "name": "isActivitySender",
-              "parameters": {
-                "user": {
-                  "type": "author"
-                }
-              }
-            },
-            {
-              "name": "hasLabel",
-              "parameters": {
-                "label": "needs-more-info"
-              }
-            }
-          ]
-        },
-        "eventType": "issue",
-        "eventNames": [
-          "issue_comment"
-        ],
-        "taskName": "author responds to `needs-more-info` gets `author-responded`",
-        "actions": [
-          {
-            "name": "addLabel",
-            "parameters": {
-              "label": "needs-triage"
-            }
-          },
-          {
-            "name": "addLabel",
-            "parameters": {
-              "label": "author-responded"
-            }
-          },
-          {
-            "name": "removeLabel",
-            "parameters": {
-              "label": "needs-more-info"
-            }
-          }
-        ]
-      }
-    },
-    {
-      "taskType": "trigger",
-      "capabilityId": "IssueResponder",
-      "subCapability": "PullRequestResponder",
-      "version": "1.0",
-      "config": {
-        "conditions": {
-          "operator": "and",
-          "operands": [
-            {
-              "operator": "or",
-              "operands": [
-                {
-                  "name": "isAction",
-                  "parameters": {
-                    "action": "opened"
-                  }
-                },
-                {
-                  "name": "isAction",
-                  "parameters": {
-                    "action": "reopened"
-                  }
-                },
-                {
-                  "name": "labelAdded",
-                  "parameters": {
-                    "label": "Servicing-consider"
-                  }
-                }
-              ]
-            },
-            {
-              "operator": "or",
-              "operands": [
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs17.0"
-                  }
-                },
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs17.2"
-                  }
-                },
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs17.4"
-                  }
-                },
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs17.5"
-                  }
-                },
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs17.6"
-                  }
-                },
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs17.7"
-                  }
-                },
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs17.8"
-                  }
-                },
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs17.9"
-                  }
-                },
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs17.10"
-                  }
-                },
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs16.11"
-                  }
-                },
-                {
-                  "name": "prTargetsBranch",
-                  "parameters": {
-                    "branchName": "vs15.9"
-                  }
-                }
-              ]
-            }
-          ]
-        },
-        "eventType": "pull_request",
-        "eventNames": [
-          "pull_request",
-          "issues",
-          "project_card"
-        ],
-        "taskName": "Comment on vs* branches",
-        "actions": [
-          {
-            "name": "addReply",
-            "parameters": {
-              "comment": "Hello! I noticed that you're targeting one of our servicing branches. Please consider updating the version."
-            }
-          }
-        ]
-      }
-    }
-  ],
-  "userGroups": []
-}
\ No newline at end of file
diff --git a/.github/policies/resourceManagement.yml b/.github/policies/resourceManagement.yml
new file mode 100644
index 00000000000..5b8c19d80a5
--- /dev/null
+++ b/.github/policies/resourceManagement.yml
@@ -0,0 +1,156 @@
+id: 
+name: GitOps.PullRequestIssueManagement
+description: GitOps.PullRequestIssueManagement primitive
+owner: 
+resource: repository
+disabled: false
+where: 
+configuration:
+  resourceManagementConfiguration:
+    scheduledSearches:
+    - description: Mark Stale Issues
+      frequencies:
+      - daily:
+          time: 17:0
+      filters:
+      - isOpen
+      - hasLabel:
+          label: needs-more-info
+      - isNotPartOfMilestone:
+          milestone: Backlog
+      - isNotPartOfMilestone:
+          milestone: Discussion
+      - hasLabel:
+          label: triaged
+      - isIssue
+      - isNotLabeledWith:
+          label: stale
+      - noActivitySince:
+          days: 30
+      - isNotLabeledWith:
+          label: bot-exclude
+      actions:
+      - addLabel:
+          label: stale
+      - addReply:
+          reply: This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.
+    - description: Close Stale Issues
+      frequencies:
+      - daily:
+          time: 12:0
+      filters:
+      - isOpen
+      - hasLabel:
+          label: stale
+      - isNotLabeledWith:
+          label: bot-exclude
+      - noActivitySince:
+          days: 14
+      - isNotPartOfMilestone:
+          milestone: Backlog
+      - isNotPartOfMilestone:
+          milestone: Discussion
+      - hasLabel:
+          label: triaged
+      actions:
+      - closeIssue
+      - addReply:
+          reply: This issue was closed due to inactivity. If you can still reproduce this bug, please comment with the requested information, detailed steps to reproduce the problem, or any other notes that might help in the investigation.
+      - addLabel:
+          label: closed-by-bot
+    eventResponderTasks:
+    - if:
+      - payloadType: Issue_Comment
+      - isOpen
+      - hasLabel:
+          label: stale
+      - hasLabel:
+          label: triaged
+      - not:
+          hasLabel:
+            label: bot-exclude
+      then:
+      - removeLabel:
+          label: stale
+      - removeLabel:
+          label: triaged
+      description: Unstale Open Issues that get comments
+    - if:
+      - payloadType: Issue_Comment
+      - not: isOpen
+      - hasLabel:
+          label: stale
+      - hasLabel:
+          label: triaged
+      - not:
+          hasLabel:
+            label: bot-exclude
+      then:
+      - removeLabel:
+          label: triaged
+      description: Remove label triaged from closed stale issues that get comments
+    - if:
+      - payloadType: Issues
+      - labelAdded:
+          label: needs-more-info
+      - not:
+          hasLabel:
+            label: triaged
+      then:
+      - addLabel:
+          label: triaged
+      description: Add label triaged to issue when needs-more-info is applied
+    - if:
+      - payloadType: Issue_Comment
+      - isActivitySender:
+          issueAuthor: True
+      - hasLabel:
+          label: needs-more-info
+      - hasLabel:
+          label: triaged
+      then:
+      - removeLabel:
+          label: triaged
+      - addLabel:
+          label: author-responded
+      - removeLabel:
+          label: needs-more-info
+      description: author responds to `needs-more-info` gets `author-responded`
+    - if:
+      - payloadType: Pull_Request
+      - or:
+        - isAction:
+            action: Opened
+        - isAction:
+            action: Reopened
+        - labelAdded:
+            label: Servicing-consider
+      - or:
+        - targetsBranch:
+            branch: vs17.0
+        - targetsBranch:
+            branch: vs17.2
+        - targetsBranch:
+            branch: vs17.4
+        - targetsBranch:
+            branch: vs17.5
+        - targetsBranch:
+            branch: vs17.6
+        - targetsBranch:
+            branch: vs17.7
+        - targetsBranch:
+            branch: vs17.8
+        - targetsBranch:
+            branch: vs17.9
+        - targetsBranch:
+            branch: vs17.10
+        - targetsBranch:
+            branch: vs16.11
+        - targetsBranch:
+            branch: vs15.9
+      then:
+      - addReply:
+          reply: Hello! I noticed that you're targeting one of our servicing branches. Please consider updating the version.
+      description: Comment on vs* branches
+onFailure: 
+onSuccess: 
diff --git a/.opt-prof.yml b/.opt-prof.yml
index 47c168210ca..d569cf29f20 100644
--- a/.opt-prof.yml
+++ b/.opt-prof.yml
@@ -21,18 +21,22 @@ resources:
     project: DevDiv
     source: DartLab
     branch: main
+    tags:
+    - production
   - pipeline: DartLab.OptProf
     source: DartLab.OptProf
     branch: main
+    tags:
+    - production
   repositories:
   - repository: DartLabTemplates
     type: git
     name: DartLab.Templates
-    ref: refs/heads/main
+    ref: refs/tags/Production
   - repository: DartLabOptProfTemplates
     type: git
     name: DartLab.OptProf
-    ref: refs/heads/main
+    ref: refs/tags/Production
 
 parameters:
   # Whether or not to delete the test machines after the run completes
diff --git a/.vsts-dotnet-ci.yml b/.vsts-dotnet-ci.yml
index 922df9717a7..12768a44440 100644
--- a/.vsts-dotnet-ci.yml
+++ b/.vsts-dotnet-ci.yml
@@ -4,7 +4,28 @@ trigger:
 - vs*
 
 jobs:
+- job: IfOnlyDocumentionChanged
+  displayName: "Check whether Test Results need to be executed"
+  steps:
+  - powershell: |
+      $changedFiles = git diff --name-only HEAD HEAD~1
+      $changedFiles
+      $onlyDocChanged = 1
+      foreach ($file in $changedFiles) {
+        $isUnderDocumentation = $file -match "^documentation/"
+        if(!$isUnderDocumentation)
+        {
+          $onlyDocChanged = 0
+          break;
+        }
+      }
+      Write-Host "##vso[task.setvariable variable=onlyDocChanged;isoutput=true]$onlyDocChanged"
+    name: SetIfOnlyDocumentionChangedVaribale
+    displayName: Check whether only documentation has been updated
 - job: BootstrapMSBuildOnFullFrameworkWindows
+  dependsOn: IfOnlyDocumentionChanged
+  variables:
+    onlyDocChanged: $[ dependencies.IfOnlyDocumentionChanged.outputs['SetIfOnlyDocumentionChangedVaribale.onlyDocChanged'] ]
   displayName: "Windows Full"
   pool:
     vmImage: 'windows-2022'
@@ -13,6 +34,7 @@ jobs:
     displayName: cibuild_bootstrapped_msbuild.cmd
     inputs:
       filename: 'eng/cibuild_bootstrapped_msbuild.cmd'
+      arguments: -onlyDocChanged $(onlyDocChanged)
   - task: PublishTestResults@2
     displayName: Publish .NET Framework Test Results
     inputs:
@@ -22,7 +44,7 @@ jobs:
       publishRunAttachments: true
       mergeTestResults: true
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: PublishTestResults@2
     displayName: Publish .NET Test Results
     inputs:
@@ -34,7 +56,7 @@ jobs:
       publishRunAttachments: true
       mergeTestResults: true
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: CmdLine@2
     displayName: 'Set flag to publish Verify *.received.* files when test step fails'
     condition: failed()
@@ -53,7 +75,7 @@ jobs:
       PathtoPublish: 'artifacts/TestResults'
       ArtifactName: 'FullOnWindows test logs'
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: CopyFiles@2
     condition: eq(variables['publishverify'], 'Yes')
     displayName: 'Copy Verify *.received.* files to Artifact Staging'
@@ -73,6 +95,9 @@ jobs:
 
 - job: BootstrapMSBuildOnCoreWindows
   displayName: "Windows Core"
+  dependsOn: IfOnlyDocumentionChanged
+  variables:
+    onlyDocChanged: $[ dependencies.IfOnlyDocumentionChanged.outputs['SetIfOnlyDocumentionChangedVaribale.onlyDocChanged'] ]
   pool:
     vmImage: 'windows-2022'
   steps:
@@ -80,7 +105,7 @@ jobs:
     displayName: cibuild_bootstrapped_msbuild.cmd
     inputs:
       filename: 'eng/cibuild_bootstrapped_msbuild.cmd'
-      arguments: '-msbuildEngine dotnet'
+      arguments: '-msbuildEngine dotnet -onlyDocChanged $(onlyDocChanged)'
   - task: PublishTestResults@2
     displayName: Publish .NET Framework Test Results
     inputs:
@@ -90,7 +115,7 @@ jobs:
       publishRunAttachments: true
       mergeTestResults: true
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: PublishTestResults@2
     displayName: Publish .NET Test Results
     inputs:
@@ -102,7 +127,7 @@ jobs:
       publishRunAttachments: true
       mergeTestResults: true
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: PublishBuildArtifacts@1
     displayName: 'Publish Artifact: logs'
     inputs:
@@ -116,10 +141,13 @@ jobs:
       PathtoPublish: 'artifacts/TestResults'
       ArtifactName: 'CoreOnWindows test logs'
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
 
 - job: FullReleaseOnWindows
   displayName: "Windows Full Release (no bootstrap)"
+  dependsOn: IfOnlyDocumentionChanged
+  variables:
+    onlyDocChanged: $[ dependencies.IfOnlyDocumentionChanged.outputs['SetIfOnlyDocumentionChangedVaribale.onlyDocChanged'] ]
   pool:
     ${{ if eq(variables['System.TeamProject'], 'public') }}:
       name: NetCore-Public
@@ -133,6 +161,13 @@ jobs:
     inputs:
       filename: 'eng/cibuild.cmd'
       arguments: '-configuration Release -test'
+    condition: eq(variables.onlyDocChanged, 0)
+  - task: BatchScript@1
+    displayName: cibuild.cmd without test
+    inputs:
+      filename: 'eng/cibuild.cmd'
+      arguments: '-configuration Release'
+    condition: eq(variables.onlyDocChanged, 1)
   - task: PublishTestResults@2
     displayName: Publish .NET Framework Test Results
     inputs:
@@ -142,7 +177,7 @@ jobs:
       publishRunAttachments: true
       mergeTestResults: true
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: PublishTestResults@2
     displayName: Publish .NET Test Results
     inputs:
@@ -154,7 +189,7 @@ jobs:
       publishRunAttachments: true
       mergeTestResults: true
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: PublishBuildArtifacts@1
     displayName: 'Publish Artifact: logs'
     inputs:
@@ -168,7 +203,7 @@ jobs:
       PathtoPublish: 'artifacts/TestResults'
       ArtifactName: 'FullOnWindows Release test logs'
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
 
 # Unavailable in dnceng-public as of 9/1/2022; should be restored soon.
 # - job: RichCodeNavIndex
@@ -189,10 +224,13 @@ jobs:
 
 - job: CoreBootstrappedOnLinux
   displayName: "Linux Core"
+  dependsOn: IfOnlyDocumentionChanged
+  variables:
+    onlyDocChanged: $[ dependencies.IfOnlyDocumentionChanged.outputs['SetIfOnlyDocumentionChangedVaribale.onlyDocChanged'] ]
   pool:
     vmImage: 'ubuntu-latest'
   steps:
-  - bash: . 'eng/cibuild_bootstrapped_msbuild.sh'
+  - bash: . 'eng/cibuild_bootstrapped_msbuild.sh' --onlyDocChanged $(onlyDocChanged)
     displayName: CI Build
   - task: PublishTestResults@2
     displayName: Publish .NET Test Results
@@ -205,7 +243,7 @@ jobs:
       publishRunAttachments: true
       mergeTestResults: true
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: CmdLine@2
     displayName: 'Set flag to publish Verify *.received.* files when test step fails'
     condition: failed()
@@ -224,7 +262,7 @@ jobs:
       PathtoPublish: 'artifacts/TestResults'
       ArtifactName: 'CoreOnLinux test logs'
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: CopyFiles@2
     condition: eq(variables['publishverify'], 'Yes')
     displayName: 'Copy Verify *.received.* files to Artifact Staging'
@@ -243,10 +281,13 @@ jobs:
 
 - job: CoreOnMac
   displayName: "macOS Core"
+  dependsOn: IfOnlyDocumentionChanged
+  variables:
+    onlyDocChanged: $[ dependencies.IfOnlyDocumentionChanged.outputs['SetIfOnlyDocumentionChangedVaribale.onlyDocChanged'] ]
   pool:
     vmImage: 'macOS-latest'
   steps:
-  - bash: . 'eng/cibuild_bootstrapped_msbuild.sh'
+  - bash: . 'eng/cibuild_bootstrapped_msbuild.sh' --onlyDocChanged $(onlyDocChanged)
     displayName: CI Build
   - task: PublishTestResults@2
     displayName: Publish .NET Test Results
@@ -259,7 +300,7 @@ jobs:
       publishRunAttachments: true
       mergeTestResults: true
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: CmdLine@2
     displayName: 'Set flag to publish Verify *.received.* files when test step fails'
     condition: failed()
@@ -278,7 +319,7 @@ jobs:
       PathtoPublish: 'artifacts/TestResults'
       ArtifactName: 'CoreOnMac test logs'
     continueOnError: true
-    condition: always()
+    condition: eq(variables.onlyDocChanged, 0)
   - task: CopyFiles@2
     condition: eq(variables['publishverify'], 'Yes')
     displayName: 'Copy Verify *.received.* files to Artifact Staging'
diff --git a/.vsts-dotnet.yml b/.vsts-dotnet.yml
index 1c28b3bf2ca..1afdfd0c7c7 100644
--- a/.vsts-dotnet.yml
+++ b/.vsts-dotnet.yml
@@ -33,10 +33,6 @@ variables:
       value: ${{parameters.OptProfDropName}}
     - name: SourceBranch
       value: ''
-  - name: _DotNetArtifactsCategory
-    value: .NETCore
-  - name: _DotNetValidationArtifactsCategory
-    value: .NETCoreValidation
   - name: EnableReleaseOneLocBuild
     value: true
   - name: Codeql.Enabled
@@ -83,8 +79,6 @@ stages:
     timeoutInMinutes: 180
 
     variables:
-    - group: DotNet-Blob-Feed
-    - group: DotNet-Symbol-Publish
     - group: Publish-Build-Assets
     - name: TeamName
       value: MSBuild
@@ -96,9 +90,8 @@ stages:
       value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)
 
     steps:
-    - task: NuGetToolInstaller@0
-      inputs:
-        versionSpec: '4.9.2'
+    - task: NuGetToolInstaller@1
+      displayName: 'Install NuGet.exe'
 
     - task: NuGetCommand@2
       displayName: Restore internal tools
@@ -137,12 +130,6 @@ stages:
                 /p:VisualStudioDropAccessToken=$(System.AccessToken)
                 /p:VisualStudioDropName=$(VisualStudio.DropName)
                 /p:DotNetSignType=$(SignType)
-                /p:DotNetPublishToBlobFeed=true
-                /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)
-                /p:DotNetPublishBlobFeedUrl=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json
-                /p:PublishToSymbolServer=true
-                /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
-                /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
                 /p:TeamName=MSBuild
                 /p:DotNetPublishUsingPipelines=true
                 /p:VisualStudioIbcDrop=$(OptProfDrop)
diff --git a/Directory.Build.props b/Directory.Build.props
index 6db67e877f6..a55e6b642b2 100644
--- a/Directory.Build.props
+++ b/Directory.Build.props
@@ -9,7 +9,7 @@
 
   <PropertyGroup>
     <Product>Microsoft¬Æ Build Tools¬Æ</Product>
-    <Configurations>Debug;Release;Debug-MONO;Release-MONO;MachineIndependent</Configurations>
+    <Configurations>Debug;Release;MachineIndependent</Configurations>
   </PropertyGroup>
 
   <PropertyGroup>
@@ -25,7 +25,10 @@
           src/Framework/README.md
           src/Utilities/README.md
      -->
-    <LatestDotNetCoreForMSBuild>$(NetCurrent)</LatestDotNetCoreForMSBuild>
+     <!-- When building in source-only modes, let the TFM float based on what arcade is in use.
+          When building in normal modes (independent build or a dotnet product build), set explicitly. -->
+    <LatestDotNetCoreForMSBuild>net8.0</LatestDotNetCoreForMSBuild>
+    <LatestDotNetCoreForMSBuild Condition="'$(DotNetBuildFromSource)' == 'true' or '$(DotNetBuildSourceOnly)' == 'true'">$(NetCurrent)</LatestDotNetCoreForMSBuild>
   </PropertyGroup>
 
   <PropertyGroup>
@@ -57,17 +60,6 @@
     <NoWarn>$(NoWarn);NU1507;NU1603;NU5105;1701;1702;SYSLIB0011;SYSLIB0037;SYSLIB0044;RS0016;RS0017;</NoWarn>
   </PropertyGroup>
 
-  <PropertyGroup Condition="'$(Configuration)' == 'Debug-MONO'">
-    <DebugSymbols Condition="'$(DebugSymbols)' == ''">true</DebugSymbols>
-    <Optimize Condition="'$(Optimize)' == ''">false</Optimize>
-    <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
-    <MonoBuild>true</MonoBuild>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)' == 'Release-MONO'">
-    <DebugSymbols Condition="'$(DebugSymbols)' == ''">true</DebugSymbols>
-    <Optimize Condition="'$(Optimize)' == ''">true</Optimize>
-    <MonoBuild>true</MonoBuild>
-  </PropertyGroup>
   <!-- Configuration MSBuild for portable (xcopy-install) toolsets: works on WinNT and linux/mac via Mono, isolates from machine environment:
     uses only tools installed with it, ignores Registry and GAC and Visual Studio installations to provide the same build experience on all machines -->
   <PropertyGroup Condition="'$(Configuration)' == 'MachineIndependent'">
diff --git a/Directory.Build.targets b/Directory.Build.targets
index 3c3e5820070..c75ce0fde19 100644
--- a/Directory.Build.targets
+++ b/Directory.Build.targets
@@ -39,8 +39,10 @@
   </Target>
 
   <!-- Make APICompat use roslyn from the toolset SDK instead of from the toolset package. This avoids unification issues on desktop msbuild.
-       TODO: Remove when a 8.0.200 or 9.0 SDK is consumed. -->
-  <Target Name="FixAPICompatWorkAroundRoslynMove" AfterTargets="CollectApiCompatInputs">
+       TODO: Remove when Visual Studio with an 8.0.200 or 9.0 SDK is consumed. -->
+  <Target Name="FixAPICompatWorkAroundRoslynMove"
+          AfterTargets="CollectApiCompatInputs"
+          Condition="'$(MSBuildRuntimeType)' != 'Core'">
     <PropertyGroup>
       <RoslynAssembliesPath>$(RoslynTargetsPath)</RoslynAssembliesPath>
     </PropertyGroup>
diff --git a/MSBuild.Dev.slnf b/MSBuild.Dev.slnf
index 4ae636a74a6..39e25ebb5a8 100644
--- a/MSBuild.Dev.slnf
+++ b/MSBuild.Dev.slnf
@@ -14,7 +14,8 @@
       "src\\Utilities.UnitTests\\Microsoft.Build.Utilities.UnitTests.csproj",
       "src\\Utilities\\Microsoft.Build.Utilities.csproj",
       "src\\Xunit.NetCore.Extensions\\Xunit.NetCore.Extensions.csproj",
-      "src\\StringTools\\StringTools.csproj"
+      "src\\StringTools\\StringTools.csproj",
+      "src\\UnitTests.Shared\\Microsoft.Build.UnitTests.Shared.csproj"
     ]
   }
 }
\ No newline at end of file
diff --git a/MSBuild.sln b/MSBuild.sln
index 01e91980f6a..5c8326406f6 100644
--- a/MSBuild.sln
+++ b/MSBuild.sln
@@ -78,16 +78,14 @@ Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "StringTools.Benchmark", "sr
 EndProject
 Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "MSBuild.VSSetup.Arm64", "src\Package\MSBuild.VSSetup.Arm64\MSBuild.VSSetup.Arm64.csproj", "{71E59632-D644-491B-AF93-22BC93167C56}"
 EndProject
+Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "Microsoft.Build.UnitTests.Shared", "src\UnitTests.Shared\Microsoft.Build.UnitTests.Shared.csproj", "{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}"
+EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution
 		Debug|Any CPU = Debug|Any CPU
 		Debug|ARM64 = Debug|ARM64
 		Debug|x64 = Debug|x64
 		Debug|x86 = Debug|x86
-		Debug-MONO|Any CPU = Debug-MONO|Any CPU
-		Debug-MONO|ARM64 = Debug-MONO|ARM64
-		Debug-MONO|x64 = Debug-MONO|x64
-		Debug-MONO|x86 = Debug-MONO|x86
 		MachineIndependent|Any CPU = MachineIndependent|Any CPU
 		MachineIndependent|ARM64 = MachineIndependent|ARM64
 		MachineIndependent|x64 = MachineIndependent|x64
@@ -96,10 +94,6 @@ Global
 		Release|ARM64 = Release|ARM64
 		Release|x64 = Release|x64
 		Release|x86 = Release|x86
-		Release-MONO|Any CPU = Release-MONO|Any CPU
-		Release-MONO|ARM64 = Release-MONO|ARM64
-		Release-MONO|x64 = Release-MONO|x64
-		Release-MONO|x86 = Release-MONO|x86
 	EndGlobalSection
 	GlobalSection(ProjectConfigurationPlatforms) = postSolution
 		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
@@ -110,14 +104,6 @@ Global
 		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug|x64.Build.0 = Debug|x64
 		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug|x86.Build.0 = Debug|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -134,14 +120,6 @@ Global
 		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release|x64.Build.0 = Release|x64
 		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release|x86.ActiveCfg = Release|Any CPU
 		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release|x86.Build.0 = Release|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{69BE05E2-CBDA-4D27-9733-44E12B0F5627}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -150,14 +128,6 @@ Global
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug|x64.Build.0 = Debug|x64
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug|x86.Build.0 = Debug|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -174,14 +144,6 @@ Global
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release|x64.Build.0 = Release|x64
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release|x86.ActiveCfg = Release|Any CPU
 		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release|x86.Build.0 = Release|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{5C53E4FD-0985-432D-B9E4-7BC354A057E5}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -190,14 +152,6 @@ Global
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug|x64.Build.0 = Debug|x64
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug|x86.Build.0 = Debug|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -214,14 +168,6 @@ Global
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release|x64.Build.0 = Release|x64
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release|x86.ActiveCfg = Release|Any CPU
 		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release|x86.Build.0 = Release|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{774DCE9B-F775-4B6D-943D-C841F755DBDE}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -230,14 +176,6 @@ Global
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug|x64.Build.0 = Debug|x64
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug|x86.Build.0 = Debug|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -254,14 +192,6 @@ Global
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release|x64.Build.0 = Release|x64
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release|x86.ActiveCfg = Release|Any CPU
 		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release|x86.Build.0 = Release|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{69C7E5AF-5D29-42B3-BA76-F7C4F0EDF251}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -270,14 +200,6 @@ Global
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug|x64.Build.0 = Debug|x64
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug|x86.Build.0 = Debug|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -294,14 +216,6 @@ Global
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release|x64.Build.0 = Release|x64
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release|x86.ActiveCfg = Release|Any CPU
 		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release|x86.Build.0 = Release|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{C400412A-E7BD-4B8D-B6F5-B2135C481A4E}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug|ARM64.ActiveCfg = Debug|ARM64
@@ -310,14 +224,6 @@ Global
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug|x64.Build.0 = Debug|x64
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug|x86.Build.0 = Debug|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -334,14 +240,6 @@ Global
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release|x64.Build.0 = Release|x64
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release|x86.ActiveCfg = Release|Any CPU
 		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release|x86.Build.0 = Release|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{6F92CA55-1D15-4F34-B1FE-56C0B7EB455E}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -350,14 +248,6 @@ Global
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug|x64.Build.0 = Debug|x64
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug|x86.Build.0 = Debug|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -374,14 +264,6 @@ Global
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release|x64.Build.0 = Release|x64
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release|x86.ActiveCfg = Release|Any CPU
 		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release|x86.Build.0 = Release|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{0ADDBC02-0076-4159-B351-2BF33FAA46B2}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -390,14 +272,6 @@ Global
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug|x64.Build.0 = Debug|x64
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug|x86.Build.0 = Debug|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -414,14 +288,6 @@ Global
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release|x64.Build.0 = Release|x64
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release|x86.ActiveCfg = Release|Any CPU
 		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release|x86.Build.0 = Release|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{2AB5D52E-3C4D-4572-B140-9EED600ECE59}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -430,14 +296,6 @@ Global
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug|x64.Build.0 = Debug|x64
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug|x86.Build.0 = Debug|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug-MONO|x64.Build.0 = Debug|x64
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -454,14 +312,6 @@ Global
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release|x64.Build.0 = Release|x64
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release|x86.ActiveCfg = Release|Any CPU
 		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release|x86.Build.0 = Release|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{CF999BDE-02B3-431B-95E6-E88D621D9CBF}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -470,14 +320,6 @@ Global
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug|x64.Build.0 = Debug|x64
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug|x86.Build.0 = Debug|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug-MONO|x64.Build.0 = Debug|x64
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -494,14 +336,6 @@ Global
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release|x64.Build.0 = Release|x64
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release|x86.ActiveCfg = Release|Any CPU
 		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release|x86.Build.0 = Release|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{C51C04F6-D35B-4211-B0F2-9D69F63AC0BC}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -510,14 +344,6 @@ Global
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug|x64.Build.0 = Debug|x64
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug|x86.Build.0 = Debug|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug-MONO|x64.Build.0 = Debug|x64
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -534,14 +360,6 @@ Global
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release|x64.Build.0 = Release|x64
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release|x86.ActiveCfg = Release|Any CPU
 		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release|x86.Build.0 = Release|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{EEFE7E34-B3C6-473E-9F4D-4D64DB63F0C4}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -550,14 +368,6 @@ Global
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug|x64.Build.0 = Debug|x64
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug|x86.Build.0 = Debug|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug-MONO|x64.Build.0 = Debug|x64
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -574,14 +384,6 @@ Global
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release|x64.Build.0 = Release|x64
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release|x86.ActiveCfg = Release|Any CPU
 		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release|x86.Build.0 = Release|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{66C6C1ED-30E7-45DD-9F73-2FBB7889CDBA}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -590,14 +392,6 @@ Global
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug|x64.Build.0 = Debug|x64
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug|x86.Build.0 = Debug|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug-MONO|x64.Build.0 = Debug|x64
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -614,14 +408,6 @@ Global
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release|x64.Build.0 = Release|x64
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release|x86.ActiveCfg = Release|Any CPU
 		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release|x86.Build.0 = Release|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{F1A7AA75-72EE-44FE-8493-7FD99F6F42B0}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -630,14 +416,6 @@ Global
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug|x64.Build.0 = Debug|x64
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug|x86.Build.0 = Debug|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug-MONO|x64.Build.0 = Debug|x64
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -654,14 +432,6 @@ Global
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release|x64.Build.0 = Release|x64
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release|x86.ActiveCfg = Release|Any CPU
 		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release|x86.Build.0 = Release|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{77849E6E-FE6B-43BA-A48D-EF75BD2279F8}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -670,14 +440,6 @@ Global
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug|x64.Build.0 = Debug|x64
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug|x86.Build.0 = Debug|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug-MONO|x64.Build.0 = Debug|x64
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -694,14 +456,6 @@ Global
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release|x64.Build.0 = Release|x64
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release|x86.ActiveCfg = Release|Any CPU
 		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release|x86.Build.0 = Release|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{2D515229-D44B-4625-A1B2-ED88153D0ECF}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{F45DBA88-C833-434A-8F68-087124540303}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{F45DBA88-C833-434A-8F68-087124540303}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{F45DBA88-C833-434A-8F68-087124540303}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -710,14 +464,6 @@ Global
 		{F45DBA88-C833-434A-8F68-087124540303}.Debug|x64.Build.0 = Debug|x64
 		{F45DBA88-C833-434A-8F68-087124540303}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{F45DBA88-C833-434A-8F68-087124540303}.Debug|x86.Build.0 = Debug|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{F45DBA88-C833-434A-8F68-087124540303}.Debug-MONO|x64.Build.0 = Debug|x64
-		{F45DBA88-C833-434A-8F68-087124540303}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{F45DBA88-C833-434A-8F68-087124540303}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{F45DBA88-C833-434A-8F68-087124540303}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{F45DBA88-C833-434A-8F68-087124540303}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -734,14 +480,6 @@ Global
 		{F45DBA88-C833-434A-8F68-087124540303}.Release|x64.Build.0 = Release|x64
 		{F45DBA88-C833-434A-8F68-087124540303}.Release|x86.ActiveCfg = Release|Any CPU
 		{F45DBA88-C833-434A-8F68-087124540303}.Release|x86.Build.0 = Release|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{F45DBA88-C833-434A-8F68-087124540303}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{F45DBA88-C833-434A-8F68-087124540303}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{F45DBA88-C833-434A-8F68-087124540303}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -750,14 +488,6 @@ Global
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug|x64.Build.0 = Debug|x64
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug|x86.Build.0 = Debug|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug-MONO|x64.Build.0 = Debug|x64
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -774,14 +504,6 @@ Global
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release|x64.Build.0 = Release|x64
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release|x86.ActiveCfg = Release|Any CPU
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release|x86.Build.0 = Release|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{523E1555-DB60-4FD4-8CDF-3C159710CAED}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -790,14 +512,6 @@ Global
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug|x64.Build.0 = Debug|x64
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug|x86.Build.0 = Debug|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug-MONO|x64.Build.0 = Debug|x64
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -814,14 +528,6 @@ Global
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release|x64.Build.0 = Release|x64
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release|x86.ActiveCfg = Release|Any CPU
 		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release|x86.Build.0 = Release|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{475DDCAC-12F6-4562-A74B-FB64F11100EE}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -830,14 +536,6 @@ Global
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug|x64.Build.0 = Debug|x64
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug|x86.Build.0 = Debug|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug-MONO|x64.Build.0 = Debug|x64
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -854,14 +552,6 @@ Global
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release|x64.Build.0 = Release|x64
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release|x86.ActiveCfg = Release|Any CPU
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release|x86.Build.0 = Release|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -870,14 +560,6 @@ Global
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug|x64.Build.0 = Debug|x64
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug|x86.Build.0 = Debug|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug-MONO|x64.Build.0 = Debug|x64
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -894,14 +576,6 @@ Global
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release|x64.Build.0 = Release|x64
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release|x86.ActiveCfg = Release|Any CPU
 		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release|x86.Build.0 = Release|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{586C55EE-4003-4A20-AAE2-76DBDA421BB3}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -910,14 +584,6 @@ Global
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|x64.Build.0 = Debug|x64
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|x86.Build.0 = Debug|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|x64.Build.0 = Debug|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -934,14 +600,6 @@ Global
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|x64.Build.0 = Release|x64
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|x86.ActiveCfg = Release|Any CPU
 		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|x86.Build.0 = Release|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -950,14 +608,6 @@ Global
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug|x64.Build.0 = Debug|x64
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug|x86.Build.0 = Debug|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug-MONO|x64.Build.0 = Debug|x64
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -974,14 +624,6 @@ Global
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release|x64.Build.0 = Release|x64
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release|x86.ActiveCfg = Release|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release|x86.Build.0 = Release|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{16DBDF17-3E0E-4140-989A-B42638126A40}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -990,14 +632,6 @@ Global
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug|x64.Build.0 = Debug|x64
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug|x86.Build.0 = Debug|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug-MONO|x64.Build.0 = Debug|x64
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Debug-MONO|x86.Build.0 = Debug|Any CPU
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -1014,14 +648,6 @@ Global
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release|x64.Build.0 = Release|x64
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release|x86.ActiveCfg = Release|Any CPU
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release|x86.Build.0 = Release|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -1030,14 +656,6 @@ Global
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug|x64.Build.0 = Debug|x64
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug|x86.Build.0 = Debug|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -1054,14 +672,6 @@ Global
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release|x64.Build.0 = Release|x64
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release|x86.ActiveCfg = Release|Any CPU
 		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release|x86.Build.0 = Release|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{CEAEE4FE-9298-443B-AFC5-0F72472484B6}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -1070,14 +680,6 @@ Global
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug|x64.Build.0 = Debug|x64
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug|x86.Build.0 = Debug|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -1094,14 +696,6 @@ Global
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release|x64.Build.0 = Release|x64
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release|x86.ActiveCfg = Release|Any CPU
 		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release|x86.Build.0 = Release|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{639C178E-368F-4384-869E-7C6D18B4CC1F}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -1110,14 +704,6 @@ Global
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug|x64.Build.0 = Debug|x64
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug|x86.Build.0 = Debug|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -1134,14 +720,6 @@ Global
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release|x64.Build.0 = Release|x64
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release|x86.ActiveCfg = Release|Any CPU
 		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release|x86.Build.0 = Release|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{A1FF7E97-F98F-4C5C-AD09-0E1CF4A7A4DB}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -1150,14 +728,6 @@ Global
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug|x64.Build.0 = Debug|x64
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug|x86.Build.0 = Debug|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -1174,14 +744,6 @@ Global
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release|x64.Build.0 = Release|x64
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release|x86.ActiveCfg = Release|Any CPU
 		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release|x86.Build.0 = Release|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{D05E5FAF-3E05-48D2-8DEF-FD1A18EB1349}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -1190,14 +752,6 @@ Global
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug|x64.Build.0 = Debug|x64
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug|x86.Build.0 = Debug|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -1214,14 +768,6 @@ Global
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release|x64.Build.0 = Release|x64
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release|x86.ActiveCfg = Release|Any CPU
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release|x86.Build.0 = Release|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -1230,14 +776,6 @@ Global
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug|x64.Build.0 = Debug|x64
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug|x86.Build.0 = Debug|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -1254,14 +792,6 @@ Global
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release|x64.Build.0 = Release|x64
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release|x86.ActiveCfg = Release|Any CPU
 		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release|x86.Build.0 = Release|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{F47E1A0A-7D81-40CF-B8B3-A0F4B5ADE943}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -1270,14 +800,6 @@ Global
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug|x64.Build.0 = Debug|x64
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug|x86.Build.0 = Debug|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
@@ -1294,14 +816,6 @@ Global
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release|x64.Build.0 = Release|x64
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release|x86.ActiveCfg = Release|Any CPU
 		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release|x86.Build.0 = Release|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{65749C80-47E7-42FE-B441-7A86289D46AA}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{71E59632-D644-491B-AF93-22BC93167C56}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{71E59632-D644-491B-AF93-22BC93167C56}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{71E59632-D644-491B-AF93-22BC93167C56}.Debug|ARM64.ActiveCfg = Debug|arm64
@@ -1310,14 +824,6 @@ Global
 		{71E59632-D644-491B-AF93-22BC93167C56}.Debug|x64.Build.0 = Debug|x64
 		{71E59632-D644-491B-AF93-22BC93167C56}.Debug|x86.ActiveCfg = Debug|Any CPU
 		{71E59632-D644-491B-AF93-22BC93167C56}.Debug|x86.Build.0 = Debug|Any CPU
-		{71E59632-D644-491B-AF93-22BC93167C56}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{71E59632-D644-491B-AF93-22BC93167C56}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{71E59632-D644-491B-AF93-22BC93167C56}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|arm64
-		{71E59632-D644-491B-AF93-22BC93167C56}.Debug-MONO|ARM64.Build.0 = Debug-MONO|arm64
-		{71E59632-D644-491B-AF93-22BC93167C56}.Debug-MONO|x64.ActiveCfg = Debug-MONO|x64
-		{71E59632-D644-491B-AF93-22BC93167C56}.Debug-MONO|x64.Build.0 = Debug-MONO|x64
-		{71E59632-D644-491B-AF93-22BC93167C56}.Debug-MONO|x86.ActiveCfg = Debug-MONO|Any CPU
-		{71E59632-D644-491B-AF93-22BC93167C56}.Debug-MONO|x86.Build.0 = Debug-MONO|Any CPU
 		{71E59632-D644-491B-AF93-22BC93167C56}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
 		{71E59632-D644-491B-AF93-22BC93167C56}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
 		{71E59632-D644-491B-AF93-22BC93167C56}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|arm64
@@ -1334,14 +840,30 @@ Global
 		{71E59632-D644-491B-AF93-22BC93167C56}.Release|x64.Build.0 = Release|x64
 		{71E59632-D644-491B-AF93-22BC93167C56}.Release|x86.ActiveCfg = Release|Any CPU
 		{71E59632-D644-491B-AF93-22BC93167C56}.Release|x86.Build.0 = Release|Any CPU
-		{71E59632-D644-491B-AF93-22BC93167C56}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{71E59632-D644-491B-AF93-22BC93167C56}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{71E59632-D644-491B-AF93-22BC93167C56}.Release-MONO|ARM64.ActiveCfg = Release-MONO|arm64
-		{71E59632-D644-491B-AF93-22BC93167C56}.Release-MONO|ARM64.Build.0 = Release-MONO|arm64
-		{71E59632-D644-491B-AF93-22BC93167C56}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{71E59632-D644-491B-AF93-22BC93167C56}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{71E59632-D644-491B-AF93-22BC93167C56}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{71E59632-D644-491B-AF93-22BC93167C56}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Debug|ARM64.ActiveCfg = Debug|arm64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Debug|ARM64.Build.0 = Debug|arm64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Debug|x64.ActiveCfg = Debug|x64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Debug|x64.Build.0 = Debug|x64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Debug|x86.Build.0 = Debug|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|arm64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.MachineIndependent|ARM64.Build.0 = MachineIndependent|arm64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.MachineIndependent|x64.ActiveCfg = MachineIndependent|x64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.MachineIndependent|x64.Build.0 = MachineIndependent|x64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.MachineIndependent|x86.ActiveCfg = MachineIndependent|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.MachineIndependent|x86.Build.0 = MachineIndependent|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Release|Any CPU.Build.0 = Release|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Release|ARM64.ActiveCfg = Release|arm64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Release|ARM64.Build.0 = Release|arm64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Release|x64.ActiveCfg = Release|x64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Release|x64.Build.0 = Release|x64
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Release|x86.ActiveCfg = Release|Any CPU
+		{52A0B9C1-23B7-4CCC-B3FC-BDBA1C619E2A}.Release|x86.Build.0 = Release|Any CPU
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE
diff --git a/README.md b/README.md
index 28ed1ca7fcf..bb357a2ad6d 100644
--- a/README.md
+++ b/README.md
@@ -41,7 +41,6 @@ Before you contribute, please read through the contributing and developer guides
 * **Developer Guide on:**
    - [.NET Core](documentation/wiki/Building-Testing-and-Debugging-on-.Net-Core-MSBuild.md)
    - [Full Framework](documentation/wiki/Building-Testing-and-Debugging-on-Full-Framework-MSBuild.md)
-   - [Mono](documentation/wiki/Building-Testing-and-Debugging-on-Mono-MSBuild.md)
 
 * See our [help wanted issues](https://github.com/dotnet/msbuild/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22) for a list of issues we think are great to onboard new developers.
    - **Note:** Please leave a comment asking to be assigned the issue if you want to work on it.
diff --git a/documentation/Built-in-Propeties.md b/documentation/Built-in-Properties.md
similarity index 100%
rename from documentation/Built-in-Propeties.md
rename to documentation/Built-in-Properties.md
diff --git a/documentation/NETFramework-NGEN.md b/documentation/NETFramework-NGEN.md
new file mode 100644
index 00000000000..b117cacd6c0
--- /dev/null
+++ b/documentation/NETFramework-NGEN.md
@@ -0,0 +1,121 @@
+# .NET Framework NGEN Considerations
+
+NGEN is the name of the legacy native AOT technology used in .NET Framework. Compared to its modern .NET counter-part,
+NGEN has the following key characteristics:
+- Native code is always stored in separate images located in a machine-wide cache.
+- Native images are generated on user machines, typically during app installation, by an elevated process.
+- Native images are specific for a given IL image (its identity, *not* its location) and its exact dependencies as they are bound to at run-time.
+
+Check the [Ngen.exe (Native Image Generator)](https://learn.microsoft.com/en-us/dotnet/framework/tools/ngen-exe-native-image-generator) Microsoft Learn article for an overview of how NGEN works.
+
+## NGEN in Visual Studio
+
+Visual Studio use NGEN for almost everything that ships in the box. The sheer amount of code which needs to be
+compiled makes it impractical for native image generation to occur synchronously during installation. Instead,
+VS installer queues up assemblies for deferred compilation by the NGEN service, which typically happens when the
+machine is idle. To force native images to be generated, one can execute the following command in an elevated
+terminal window:
+
+```
+C:\Windows\Microsoft.NET\Framework64\v4.0.30319\ngen eqi
+```
+
+The .NET Framework build of MSBuild is inserted into VS and it registers itself for NGEN by including `vs.file.ngenApplications`
+in the relevant [files.swr](https://github.com/dotnet/msbuild/blob/main/src/Package/MSBuild.VSSetup/files.swr) entries. MSBuild
+is hosted in several processes, most notably the stand-alone command line tool `MSBuild.exe` and the main IDE process `devenv.exe`.
+Because each process runs with slightly different dependencies - `MSBuild.exe` loads most of them from `[VS install dir]\MSBuild\Current\Bin`
+or `[VS install dir]\MSBuild\Current\Bin\[arch]` while `devenv.exe` has its own set loaded from other parts of the VS installation -
+we NGEN our code twice. This is encoded by multiple `vs.file.ngenApplications` entries for a single file in `files.swr`.
+The special `[installDir]\Common7\IDE\vsn.exe` entry represents devenv.
+
+The bad thing about this is that the system is fragile and adding a dependency often results in having to tweak `files.swr` or
+`devenv.exe.config`, the latter of which is generated from the file named `devenv.urt.config.tt` in the VS source tree. The good
+thing is that regressions, be it a failure to compile an NGEN image or a failure to use an NGEN image, are reliably detected
+by the VS PR gates so they are fixed before MSBuild is inserted into the product.
+
+## NGEN image loading rules
+
+The Common Language Runtime can be finicky about allowing a native image to load. We usually speak of "NGEN rejections" where a native
+image has successfully been created but it cannot be used at run-time. When it happens, the CLR falls back to loading the IL assembly
+and JITting code on demand, leading to sub-optimal performance.
+
+One major reason why a native image is rejected is loading into the LoadFrom context. The rules are excruciatingly complex, but suffice
+it to say that when an assembly is loaded by `Assembly.LoadFrom`, it is automatically disqualified from having its native image used.
+This is bad news for any app with an add-in system where extension assemblies are loaded by path.
+
+## SDK resolvers
+
+One class of assemblies loaded by MSBuild by path are SDK resolvers. MSBuild scans the `SdkResolvers` subdirectory to discover
+the set of resolvers to use when evaluating projects. Extensible in theory, though in reality only a couple of resolvers actually
+exist. Because resolvers ship as part of VS, it is not difficult to make sure their assemblies are properly NGENed. The hard part is
+loading them with the regular `Assembly.Load` so the native images can be used. MSBuild cannot simply extend its probing path to
+include the relevant subdirectories of `SdkResolvers` because 1) It is outside of the app directory cone for amd64 and arm64 versions
+of `MSBuild.exe` and 2) Not all resolvers actually live under this directory; the system allows them to be placed anywhere.
+It is unfortunately also not straightforward to add a binding redirect with a [`codeBase`](https://learn.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/runtime/codebase-element)
+entry pointing to the right assemblies, because this requires knowing the exact assembly versions. 
+
+### Microsoft.DotNet.MSBuildSdkResolver
+
+This is the most-commonly-used resolver, capable of resolving "in-box" SDKs that ship with the .NET SDK and .NET SDK workloads. Since the resolver assembly
+is located at a known path relative to MSBuild and has very few dependencies, none of which are used anywhere else, we have decided to
+freeze the version of the resolver plus dependencies, so that their full names can be specified in `MSBuild.exe.config`, e.g.
+
+```xml
+    <dependentAssembly>
+      <assemblyIdentity name="Microsoft.DotNet.MSBuildSdkResolver" culture="neutral" publicKeyToken="adb9793829ddae60" />
+      <codeBase version="8.0.100.0" href=".\SdkResolvers\Microsoft.DotNet.MSBuildSdkResolver\Microsoft.DotNet.MSBuildSdkResolver.dll" />
+    </dependentAssembly>
+```
+
+Additionally, `MSBuild.exe.config` has the following entry, which enables us to refer to the resolver by simple name.
+
+```xml
+<qualifyAssembly partialName="Microsoft.DotNet.MSBuildSdkResolver" fullName="Microsoft.DotNet.MSBuildSdkResolver, Version=8.0.100.0, Culture=neutral, PublicKeyToken=adb9793829ddae60" />
+```
+
+This has a small advantage compared to hardcoding `Microsoft.DotNet.MSBuildSdkResolver, Version=8.0.100.0, Culture=neutral, PublicKeyToken=adb9793829ddae60`
+directly in the code, as it can be modified to work in non-standard environments just by editing the app config appropriately.
+
+The resolver loading logic in MSBuild [has been updated](https://github.com/dotnet/msbuild/pull/9439) to call `Assembly.Load(AssemblyName)` where the `AssemblyName` specifies the
+simple name of the assembly, e.g. `Microsoft.DotNet.MSBuildSdkResolver`, as well as its `CodeBase` (file path). This way the CLR assembly
+loader will try to load the assembly into the default context first - a necessary condition for the native image to be used - and fall back
+to LoadFrom if the simple name wasn't resolved.
+
+### Microsoft.Build.NuGetSdkResolver
+
+The NuGet resolver has many dependencies and its version is frequently changing, so the technique used for `Microsoft.DotNet.MSBuildSdkResolver`
+does not apply in its current state. However, the NuGet team is [looking to address this](https://github.com/NuGet/Home/issues/11441) by:
+
+1) ILMerge'ing the resolver with its dependencies into a single assembly.
+2) Freezing the version of the assembly.
+
+When this happens, the cost of JITting `Microsoft.Build.NuGetSdkResolver` will be eliminated as well.
+
+## NuGet.Frameworks
+
+When evaluating certain property functions, MSBuild requires functionality from `NuGet.Frameworks.dll`, which is not part of MSBuild proper.
+The assembly is loaded lazily from a path calculated based on the environment where MSBuild is running and the functionality is invoked
+via reflection. Similar to the NuGet resolver, the version is changing and it is not easy to know it statically at MSBuild's build time.
+But, since there are only a handful of APIs used by MSBuild and they take simple types such as strings and versions, this has been
+addressed by loading the assembly into a separate AppDomain. The AppDomain's config file is created in memory on the fly to contain the
+right binding redirects, allowing MSBuild to use `Assembly.Load` and get the native image loaded if it exists.
+
+This approach has some small startup cost (building the config, creating AppDomain & a `MarshalByRefObject`) and a small run-time overhead
+of cross-domain calls. The former is orders of magnitude smaller that the startup hit of JITting and the latter is negligible as long as
+the types moved across the AppDomain boundary do not require expensive marshaling. Additionally, the requirement to execute code in multiple
+AppDomains necessitates the use of `LoaderOptimization.MultiDomain` for loading all assemblies domain-neutral. This may come with run-time
+cost for certain code patterns, although none has been measured in MSBuild scenarios.
+
+## Task assemblies
+
+This is the proverbial elephant in the room. MSBuild learns about tasks dynamically as it parses project files. The `UsingTask`
+element tends to specify the `AssemblyFile` attribute, pointing to the task assembly by path. Consequently MSBuild uses
+`Assembly.LoadFrom` and no native images are loaded. Even task assemblies located in the SDK are problematic because MSBuild is
+paired with an SDK on users machine at run-time. Unlike SDK resolvers and NuGet.Frameworks, which are part of the same installation
+unit, this is a true dynamic inter-product dependency. Additionally, the task API is complex and involves a lot of functionality
+provided to tasks via callbacks (e.g. logging) so the overhead of cross-domain calls may be significant. And that's assuming that
+suitable native images exist in the first place, something that both VS and SDK installers would need to handle (task assemblies
+in each installed SDK would need to be NGENed against each installed version of VS).
+
+Hosting task assemblies in separate AppDomains looks like a major piece of work with uncertain outcome. We haven't tried it yet
+and most task code is JITted.
diff --git a/documentation/specs/project-cache.md b/documentation/specs/project-cache.md
index 7c3a2fad63a..b0ce961313d 100644
--- a/documentation/specs/project-cache.md
+++ b/documentation/specs/project-cache.md
@@ -1,10 +1,10 @@
 # Summary
 
-Project cache is a new assembly-based plugin extension point in MSBuild which determines whether a build request (a project) can be skipped during build. The main expected benefit is reduced build times via [caching and/or distribution](https://github.com/dotnet/msbuild/blob/main/documentation/specs/static-graph.md#weakness-of-the-old-model-caching-and-distributability).
+Project cache is a new assembly-based plugin extension point in MSBuild which determines whether a build request (a project) can be skipped during build. The main expected benefit is reduced build times via [caching and/or distribution](static-graph.md#weakness-of-the-old-model-caching-and-distributability).
 
 # Motivation
 
-As the introduction to [static graph](https://github.com/dotnet/msbuild/blob/main/documentation/specs/static-graph.md#what-is-static-graph-for) suggests, large and complex repos expose the weaknesses in MSBuild's scheduling and incrementality models as build times elongate. This project cache plugin lets MSBuild natively communicate with existing tools that enable build caching and/or distribution, enabling true scalability.
+As the introduction to [static graph](static-graph.md#what-is-static-graph-for) suggests, large and complex repos expose the weaknesses in MSBuild's scheduling and incrementality models as build times elongate. This project cache plugin lets MSBuild natively communicate with existing tools that enable build caching and/or distribution, enabling true scalability.
 
 Visual Studio is one beneficiary. This plugin inverts dependencies among build systems: instead of higher level build engines ([Cloudbuild](https://www.microsoft.com/research/publication/cloudbuild-microsofts-distributed-and-caching-build-service/), [Anybuild](https://github.com/AnyBuild/AnyBuild), [BuildXL](https://github.com/microsoft/BuildXL), etc) calling into MSBuild, MSBuild calls into them, keeping MSBuild's external APIs and command line arguments largely unchanged and thus reusable by Visual Studio.
 
@@ -14,106 +14,185 @@ This change also simplifies and unifies user experiences. MSBuild works the same
 
 - The plugin should tell MSBuild whether a build request needs building. If a project is skipped, then the plugin needs to ensure that:
   - it makes the filesystem look as if the project built
-  - it returns sufficient information back to MSBuild such that MSBuild can construct a valid [BuildResult](https://github.com/dotnet/msbuild/blob/d39f2e4f5f3d461bc456f9abed9adec4a2f0f542/src/Build/BackEnd/Shared/BuildResult.cs#L30-L33) for its internal scheduling logic, such that future requests to build a skipped project are served directly from MSBuild's internal caches.
+  - it returns sufficient information back to MSBuild such that MSBuild can construct a valid [`BuildResult`](/src/Build/BackEnd/Shared/BuildResult.cs#L30-L33) for its internal scheduling logic, such that future requests to build a skipped project are served directly from MSBuild's internal caches.
 
 # High-level design
-- For each [BuildRequestData](https://github.com/dotnet/msbuild/blob/d39f2e4f5f3d461bc456f9abed9adec4a2f0f542/src/Build/BackEnd/BuildManager/BuildRequestData.cs#L83) ([ProjectInstance](https://github.com/dotnet/msbuild/blob/d39f2e4f5f3d461bc456f9abed9adec4a2f0f542/src/Build/Instance/ProjectInstance.cs#L71), Global Properties, Targets) submitted to the [BuildManager](https://github.com/dotnet/msbuild/blob/d39f2e4f5f3d461bc456f9abed9adec4a2f0f542/src/Build/BackEnd/BuildManager/BuildManager.cs#L38), MSBuild asks the plugin whether to build the request or not.
-  - If the BuildRequestData is based on a project path instead of a ProjectInstance, the project is evaluated by the BuildManager.
-- If the plugin decides to build, then MSBuild proceeds building the project as usual.
-- If the plugin decides to skip the build, it needs to return back to MSBuild the target results that the build request would have produced. It can either provide the results directly, or instruct MSBuild to run a set of less expensive targets on the projects with the same effect as the expensive targets.
-  - MSBuild injects the BuildResult into its Scheduler, so that future projects that need to call into the skipped project have the target results they need served directly from MSBuild's internal cache.
+
+Conceptually, there are two parts of caching: "cache get" and "cache add". "Cache get" is MSBuild asking the plugin if it wants to handle a build request, ie by fetching from some cache. "Cache add" is, upon cache miss, MSBuild providing enough information to the plugin during the build of the build request for the plugin to add the results to its cache and safely be able to retrieve it for some future build.
+
+The "cache get" functionality was introduced in 16.9, while "cache add" was added in 17.8.
+
+## Plugin discovery
+
 - Plugin dlls are discovered by MSBuild via a new special purpose `ProjectCachePlugin` [items](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-items).
   - These items can get injected into a project's import graph by package managers via the [PackageReference](https://docs.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files) item.
   - MSBuild will discover the plugin by searching project evaluations for `ProjectCachePlugin` items.
-- Plugin instances reside only in the BuildManager node. Having it otherwise (plugin instances residing in all nodes) means forcing the plugins to either deal with distributed state or implement a long lived service. We consider this high complexity cost to not be worth it. We also want to avoid serializing the ProjectInstance between nodes, which is expensive.
-- The plugin instance will get called in reverse topo sort order (from dependencies up towards dependents). Building in reverse topo sort order is common between Visual Studio solution builds and higher build engines.
-- Plugins can function with and without a static graph. When a static graph is not provided, hints about the graph entry points are provided (details in Defining the "graph" when static graph is not available).
-- A single plugin is supported (for now).
-
-# APIs and calling patterns
-- Plugin APIs are found [here](https://github.com/cdmihai/msbuild/tree/projectCache/src/Build/BackEnd/Components/ProjectCache).
-
-## From BuildManager API users who have a project dependency graph at hand and want to manually issue builds for each graph node in reverse topo sort order.
-- Users set [BuildParameters.ProjectCacheDescriptor](https://github.com/cdmihai/msbuild/blob/projectCache/src/Build/BackEnd/Components/ProjectCache/ProjectCacheDescriptor.cs) which triggers MSBuild to instantiate the plugin and call `ProjectCacheBase.BeginBuildAsync` on it in `BuildManager.BeginBuild`.
-  - `BuildManager.BeginBuild` does not wait for the plugin to initialize. The first query on the plugin will wait for plugin initialization.
-- All the build requests submitted in the current `BuildManager.BeginBuild/EndBuild` session will get checked against the plugin instance.
-- Only the user provided top level build requests are checked against the cache. The build requests issued recursively from the top level requests are not checked against the cache, since it is assumed that users issue build requests in reverse toposort order. Therefore when a project builds its references, those references should have already been built and present in MSBuild's internal cache, provided either by the project cache plugin or real builds.
-- `BuildManager.EndBuild` calls `ProjectCacheBase.EndBuildAsync`.
-- There is no static graph instantiated by MSBuild in this case and the user needs to set `ProjectCacheDescriptor.EntryPoints`.
-
-## From command line
-- Requires /graph. It is the easiest way to implement the plugin:
-  - The static graph has all the project instances in the same process, makes it easy to find and keep plugin instances in one process.
-  - Builds bottom up, so by the time a project is considered, all of its references and their build results are already present in the Scheduler.
-- User calls msbuild /graph.
-- MSBuild constructs the static graph.
-- The graph builder finds and loads the plugin into the `BuildManager`.
-  - Each graph node has a ProjectInstance, which is used to search for the plugin.
-  - If a project defines a plugin, then all projects in the graph must define that same plugin.
-  - The `ProjectGraph` is passed to the plugin upon initialization, so the plugin can avoid building its own static graph (in case it needs a graph).
-- From this point on the calling patterns are similar to the `BuildParameters.ProjectCacheDescriptor` flow described [above](#from-buildmanager-api-users-who-have-a-project-dependency-graph-at-hand-and-want-to-manually-issue-builds-for-each-graph-node-in-reverse-topo-sort-order). The only difference is that the plugin is not instantiated in `BuildManager.BeginBuild`, but between graph construction and graph build.
-  - However, if `BuildParameters.ProjectCacheDescriptor` was set and a plugin was instantiated, it will take precedence. In this case graph build will not even search the graph nodes for plugins.
-
-## From Visual Studio, a temporary workaround
-- Ideally, Visual Studio would use the [above APIs](#from-buildmanager-api-users-who-have-a-project-dependency-graph-at-hand-and-want-to-manually-issue-builds-for-each-graph-node-in-reverse-topo-sort-order) to set project cache plugins. Since VS evaluates all projects in a solution, it could search for `ProjectCachePlugin` items and provide them back to MSBuild during real builds via `BuildParameters.ProjectCacheDescriptor`. Until that happens, a workaround will be used:
-  - The workaround logic activates only when MSBuild detects that it's running under VS.
-  - Plugin discovery
-    - When VS evaluates projects via "new Project(..)" (it does this on all the solution projects on solution load), the evaluator will search for and store all detected plugins in a static field on the `BuildManager`.
-  - Plugin usage:
-    - The first build request will check the static state for the presence of plugins. If there's a plugin, it will instantiate it via plugin.BeginBuild.
-
-# Details
-- Plugin discovery
-  - Each project defines an item containing the path to the plugin DLL:
 ```xml
-<ProjectCachePlugin Include="..\..\QuickbuildProjectCachePlugin.dll">
+<ItemGroup>
+  <ProjectCachePlugin Include="$(SomePath)\MyAmazingCachePlugin.dll" />
+</ItemGroup>
 ```
-- Plugin acquisition
-  - Via the dependency manager of choice. PackageReference / Nuget for managed projects, pacman / vcpkg / nuget on packages.config for C++. The package contents injects the plugin item into the project import graph.
-- Defining the "graph" when static graph is not available
-  - Plugins need to know the top level entry point for various reasons, but without a static graph the entry points need to be explicitly declared or inferred.
-  - Entry points are set via `ProjectCacheDescriptor.EntryPoints`.
-    - The Visual Studio workaround will use the `SolutionPath` global property as the graph entry point.
-- Returning a valid BuildResult object on cache hits.
-  - On cache hits, MSBuild skips the project, but needs a BuildResult with target results to send back to the [Scheduler](https://github.com/dotnet/msbuild/blob/d39f2e4f5f3d461bc456f9abed9adec4a2f0f542/src/Build/BackEnd/Components/Scheduler/Scheduler.cs#L25).
+- Programmatic usage of `BuildManager` can also set `BuildParameters.ProjectCacheDescriptor` to apply a plugin to all requests.
+
+## Plugin lifetime
+
+- Plugin instances reside only in the `BuildManager` node. Having it otherwise (plugin instances residing in all nodes) means forcing the plugins to either deal with distributed state or implement a long lived service. We consider this high complexity cost to not be worth it. We also want to avoid serializing the `ProjectInstance` between nodes, which is expensive.
+- `BuildManager.BeginBuild` calls `ProjectCacheBase.BeginBuildAsync` on all discovered plugins. This allows plugins to start any required initialization work. It does not wait for the plugins to fully initialize, ie it is a "fire-and-forget" call at this point. The first query on the plugin will wait for plugin initialization.
+  - `BeginBuildAsync` may be called with or without a `ProjectGraph`, depending on MSBuild has one to provide. When it is not provided, hints about the graph entry points are provided with which the plugin may decide to construct the `ProjectGraph` itself, if desired.
+- `BuildManager.EndBuild` calls `ProjectCacheBase.EndBuildAsync` on all discovered plugins. This allows plugins to perform any required cleanup work. This is a blocking call which will be awaited before the build can complete.
+- The plugin instance will get called in reverse topological sort order (from referenced projects up towards referencing projects). This happens when performing a graph build (`/graph`), Visual Studio solution builds, and commonly in higher build engines.
+- Only the top-level build requests are checked against the cache. Build requests issued recursively from the top-level requests, for example a project building its dependencies, are not checked against the cache. However, because the build requests are assumed to be issued in reverse topological sort order, those requests should have already been built and present in MSBuild's internal result cache, provided either by the project cache plugin or real builds. A consequence of this is that projects which are not well-described in the graph (e.g. using `<MSBuild>` tasks directly) will not benefit from the cache.
+
+## Cache get scenario
+
+- For each [`BuildRequestData`](/src/Build/BackEnd/BuildManager/BuildRequestData.cs#L83) ([`ProjectInstance`](/src/Build/Instance/ProjectInstance.cs#L71), Global Properties, Targets) submitted to the [`BuildManager`](/src/Build/BackEnd/BuildManager/BuildManager.cs#L38), MSBuild asks the plugin whether to build the request or not.
+  
+  - If the `BuildRequestData` is based on a project path instead of a `ProjectInstance`, the project is evaluated by the `BuildManager`.
+- If the plugin decides to build, then MSBuild proceeds building the project as usual.
+- If the plugin decides to skip the build, it needs to return back to MSBuild the target results that the build request would have produced. It can either provide the results directly, or instruct MSBuild to run a set of less expensive targets on the projects with the same effect as the expensive targets ("proxy targets").
+  - MSBuild injects the `BuildResult` into its Scheduler, so that future projects that need to call into the skipped project have the target results they need served directly from MSBuild's internal cache.
   - Plugins have three options:
-    - Worst: plugins fake the build results for each target. We consider this brittle since the plugins will have to be updated whenever the build logic changes.
-    - Better: plugins tell MSBuild to run a proxy target as a replacement for the expensive target (e.g. it tells MSBuild to run `GetTargetPath` and use those results for the Build target). See the [ProjectReference protocol](https://github.com/dotnet/msbuild/blob/main/documentation/ProjectReference-Protocol.md) for more details.
+    - Worst: plugins fake the build results for each target based on assumptions about how the target executes. We consider this brittle since the plugins will have to be updated whenever the build logic changes.
+    - Better: plugins tell MSBuild to run a proxy target as a replacement for the expensive target (e.g. it tells MSBuild to run `GetTargetPath` and use those results for the `Build` target). See the [ProjectReference protocol](/documentation/ProjectReference-Protocol.md) for more details.
       - Proxy target assumptions:
         - They are very fast and only retrieve items and properties from the evaluated state (like `GetTargetPath`).
         - They do not mutate state (file system, environment variables, etc).
         - They do not MSBuild task call into other projects.
-      - The BuildManager schedules the proxy targets to build on the in proc node to avoid ProjectInstance serialization costs.
-    - Best: when the plugin's infrastructure (e.g. cloudbuild or anybuild builder nodes) runs and caches the build, it can tell MSBuild to serialize the BuildResult to a file via [BuildParameters.OutputResultsCacheFile](https://github.com/dotnet/msbuild/blob/d39f2e4f5f3d461bc456f9abed9adec4a2f0f542/src/Build/BackEnd/BuildManager/BuildParameters.cs#L767) or the `/outputResultsCache` command line argument. Then, on cache hits, the plugins deserialize the BuildResult and send it back to MSBuild. This is the most correct option, as it requires neither guessing nor proxy targets. Whatever the build did, that's what's returned.
-      - This is not yet possible. Outputting results cache files needs to first be decoupled from `/isolate`.
-      - Potential Issue: serialization format may change between runtime msbuild and the cache results file, especially if binary serialization is used.
-- Configuring plugins
-  - Plugin configuration options can be provided as metadata on the `ProjectCachePlugin` item.
+      - The BuildManager schedules the proxy targets to build on the in-proc node to avoid `ProjectInstance` serialization costs.
+    - Best: A real `BuildResult` from a previous build is provided. This can either be done by serializing the `HandleProjectFinishedAsync`, or when the plugin's infrastructure (e.g. CloudBuild or AnyBuild builder nodes) runs and caches the build, it can tell MSBuild to serialize the BuildResult to a file via [BuildParameters.OutputResultsCacheFile](/src/Build/BackEnd/BuildManager/BuildParameters.cs#L767) or the `/outputResultsCache` command line argument. Then, on cache hits, the plugins deserialize the `BuildResult` and send it back to MSBuild. This is the most correct option, as it requires neither guessing nor proxy targets. Whatever a previous build did, that's exactly what's returned.
+      - Potential Issue: serialization format may change between writing and reading the `BuildResult`, especially if binary serialization is used.
+
+## Cache add scenario
+
+- Upon a cache miss, MSBuild will generally handle a request as normal, ie by building it.
+- MSBuild uses [Detours](https://github.com/microsoft/Detours) to observe file accesses of the worker nodes. To facilitate the plugin being able to handle future builds, it forwards this information as well as the build result to the plugin for it to use as desired, for example to add to a cache.
+  - This functionality has some implementation restrictions so will require additional opt-in. Specifically, the `/ReportFileAccesses` command-line flag or by setting `BuildParameters.ReportFileAccesses` for programmatic use of `BuildManager`. If this is not set, no file accesses will be reported to the plugin, however the plugin will still be notified of the build result.
+  - The in-proc node is disabled since MSBuild is unable to use Detours on the currently running process. It also would not want to capture the file accesses of the plugins themselves.
+  - Detours adds some overhead to file accesses. Based on initial experimentation, it's around 10-15%. There's the overhead of the plugin adding to the cache. Caching becomes valuable if it can save more than the overhead on average.
+- Due to the experimental nature of the feature, `/ReportFileAccesses` is only available with MSBuild.exe (ie. the Visual Studio install; not `dotnet`), only for the x64 flavor (not x86 or arm64), and only from the command-line. The Visual Studio IDE does not set `BuildParameters.ReportFileAccesses`.
+- As described above, it is recommended to serialize the `BuildResult` from `HandleProjectFinishedAsync` for later replay.
+
+# APIs and calling patterns
+
+## Plugin API
+[ProjectCachePluginBase](/src/Build/BackEnd/Components/ProjectCache/ProjectCachePluginBase.cs) is an abstract class which plugin implementors will subclass.
+
+See the [Plugin implementation guidance and simple example design](#plugin-implementation-guidance-and-simple-example-design) section for guidance for plugin implementations.
+
+## Configuring plugins
+
+Plugins may need configuration options provided by the user. This can be done via metadata on the `ProjectCachePlugin` item:
+
 ```xml
-<ProjectCachePlugin Update="@(ProjectCachePlugin)" setting1="val1" setting2="val2" />
+<ItemGroup>
+  <ProjectCachePlugin Include="$(SomePath)\MyAmazingCachePlugin.dll">
+    <PluginSetting1>$(PluginSetting1)</PluginSetting1>
+    <PluginSetting2>$(PluginSetting2)</PluginSetting2>
+    <PluginSetting3>$(PluginSetting3)</PluginSetting3>
+  </ProjectCachePlugin>
+</ItemGroup>
 ```
-- Configuring MSBuild to query the caches but not do any builds (bin-place from the cache without building anything):
-  - From command line: `msbuild /graph:NoBuild`
-  - From APIs: `GraphBuildRequestData.GraphBuildRequestDataFlags.{NoBuild}`
-- Logging
-  - Log messages from `Plugin.{BeginBuild, EndBuild}` do not have a parent build event context and get displayed at the top level in the binlog.
-  - Log messages from querying a project get parented under that project's logging context.
-    - This is not yet implemented. For now, all plugin log messages do not have a parent event context.
+
+This can then be accessed by the plugin in `BeginBuildAsync` as a dictionary via `CacheContext.PluginSettings`.
+
+Note: As it is likely that plugins will be distributed through NuGet packages and those packages would define the `ProjectCachePlugin` item in a props or targets file in the package, it's recommended for plugin authors to have settings backed by MSBuild properties as in the example above. This allows the user to easily configure a plugin simply by setting the properties and including the `PackageReference`.
+
+## Enabling from command line
+
+- Requires `/graph` to light up cache get scenarios.
+- Requires `/reportfileaccesses` to light up cache add scenarios.
+- The static graph has all the project instances in the same process, making it easy to find and keep plugin instances in one process.
+- MSBuild constructs the static graph and build bottom up, so by the time a project is considered, all of its references and their build results are already present in the Scheduler.
+
+## Enabling from Visual Studio, a temporary workaround
+
+- Ideally, Visual Studio would provide a `ProjectGraph` instance. Until that happens, a workaround is needed.
+- The workaround logic activates only when MSBuild detects that it's running under VS.
+- When VS evaluates projects via `new Project(..)` (it does this on all the solution projects on solution load), the evaluator will search for and store all detected plugins in a static field on the `BuildManager`.
+- The first build request will check the static state for the presence of plugins. If there's a plugin, it will initialize it at that point.
+- Plugins will be given the graph entry points instead of the entire graph in this scenario.
+- There is currently no way to enable cache add scenarios in Visual Studio.
+
+# Detours (cache add scenario)
+
+In order for MSBuild to observe the file accesses as part of the build, it uses Detours on the worker nodes. In this way the Scheduler node will emit events for all file accesses done by the worker nodes. As the Scheduler knows what build request a worker node is working on at any given moment, it is able to properly associate the file access with a build request and dispatch these augmented events to plugins via the plugins' `HandleFileAccess` and `HandleProcess` implementations.
+
+Note that the Scheduler node cannot use Detours on itself, so the in-proc node is disabled when repoting file accesses. Additionally task yielding is disabled since it would leave to improperly associated file accesses.
+
+## Pipe synchronization
+
+Because the Detours implementation being used communicates over a pipe, and nodes communicate over a pipe as well, and pipes are async, there is some coordination required to ensure that file accesses are associated with the proper build request. For example, if a "project finished" signal comes through the node communication pipe, but the detours pipe still has a queue of file accesses which have not been processed yet, those file accesses might be processed after the worker node has moved onto some other project.
+
+To address this problem, when a worker node finishes a project it will emit a dummy file access with a specific format known to MSBuild. When the scheduler node receives as "project finished" event over the node communication pipe, it will wait to determine that the project is actually finished until it also receives the dummy file access. This ensures that the all file accesses associated with the project have fully flushed from the pipe before the scheduler determines the project is finished and schedules new work to the worker node (which would trigger new file accesses).
+
+# Plugin implementation guidance and simple example design
+
+The following will describe a very basic (and not very correct) plugin implementation.
+
+In practice, plugins will have to choose the specific level of correctness they're willing to trade off for the ability to get cache hits. Any machine state *could* impact build results, and the plugin implementation will need to determine what state matters and what doesn't. An obvious example to consider would be the content of the project file. An example which has trade-offs would be the processes' environment variables. Even the current time could possibly impact the build ("if Tuesday copy this file"), but if considered caching would be quite infeasible.
+
+## Fingerprinting
+
+A "fingerprint" describes each unique input which went into the building a build request. The more granular the fingerprint, the more "correct" the caching is, as described above.
+
+In this example, we will only consider the following as inputs, and thus part of the fingerprint:
+- The global properties of the build request (eg `Configuration=Debug`, `Platform=AnyCPU`)
+- The content hash of the project file
+- The content hash of files defined in specific items we know contribute to the build, like `<Compile>` and `<Content>`
+- The fingerprint of referenced projects
+
+Again, this is for illustrative purposes and a real implementation will want to use additional state for fingerprinting depending on the environment in which it runs and the correctness requirements.
+
+It can make sense for a fingerprint to be a hash of its inputs, so effectively is a byte array which can be represented by a string.
+
+At the beginning of the build, the plugin's `BeginBuildAsync` method will be called. As part of the `CacheContext`, the plugin is either given the graph or the entry points to the graph for which it can create a graph from. The plugin can use this graph to do some initial processing, like predicting various inputs which a project is likely to use. This information can then be stored to help construct a fingerprint for a build request later.
+
+## Cache storage
+
+Any storage mechanism can be used as a cache implementation, for example [Azure Blob Storage](https://azure.microsoft.com/products/storage/blobs/), or even just the local filesystem. At least in this example the only real requirement is that it can be used effectively as a key-value store. In many cases it can be useful for content to be keyed by its hash, and for the metadata file to be keyed by the fingerprint. In particular when content is keyed by hash, it is effectively deduplicated across multiple copies of the same file, which is common in builds.
+
+For illustration purposes, consider our cache implementation is based on a simple filesystem with a separate metadata and content directory inside it. Under the metadata dir, each file is a metadata file where the filename matches the fingerprint it's describing. Under the content dir, each file is a content file where the filename matches the hash of the content itself.
+
+## First build (cache population)
+
+In the very first build there will be no cache hits so the "cache add" scenario will be most relevant here.
+
+For a given project, `GetCacheResultAsync` will be invoked, but will end up returning a cache miss since the cache is empty.
+
+MSBuild will then build the project normally but under a detoured worker node. Because of this, the plugin will recieve `HandleFileAccess` and `HandleProcess` events. In this example implementation we will ignore `HandleProcess`. For `HandleFileAccess`, the plugin will simply store all `FileAccessData`s for a `FileAccessContext` to build up a list of all file accesses during the build. The plugin may decide to avoid storing the entire `FileAccessData` and instead just peel off the data it finds relevant (eg. paths, whether it was a read or write, etc).
+
+Once MSBuild is done building the project, it will call the plugin's `HandleProjectFinishedAsync`. Now the plugin knows the project is done and can process the results and add them to a cache. In general it's only useful to cache successful results, so the plugin should filter out non-success results. The `FileAccessContext` provided can then be used to retrieve the list of `FileAccessData` the plugin recieved. These `FileAccessData` can be processed to understand which files were read and written as part of the build.
+
+In our example, we can use the read files to construct a fingerprint for the build request. We can then add the files written during the build ("outputs") to some cache implementation.
+
+The plugin would then create some metadata describing the outputs (eg. the paths and hashes) and the serialized `BuildResult`, and associate it with the fingerprint and put that assocation in the cache.
+
+To illustrate this, consider a project with fingerprint `F` which wrote a single file `O` with hash `H` and had `BuildResult R`. The plugin could create a metadata file `M` which describes the outputs of the build (the path and hash of `O`) as well as the serialized `R`. Using the cache implementation described above, the plugin would write the following two files to the cache:
+ - `metadata/F -> M:"{outputs: [{path: 'path/to/O', hash: H}], result: R}"`
+ - `content/H -> O`
+
+This can then be used for future builds.
+
+ ## Second Build (cache hits)
+ 
+ In the second build we have a populated cache and so it could be possible to get cache hits.
+
+ For a given project, `GetCacheResultAsync` will be invoked. The plugin can fingerprint the request and use that fingerprint to look up in its cache. If the cache entry exists, it can declare a cache hit.
+
+In the example above, if all inputs are the same as in the first build, we should end up with a fingerprint `F`. We look up in the metadata part of the cache (file `metadata/F`) and find that it exists. This means we have a cache hit. We can fetch that metadata `M` from the cache and find that it describes the output with path `O` and hash `H`. The plugin would then copy `content/H` to `O` and return the deserialized `BuildResult R` contained in `M` to MSBuild.
+
+If the inputs were not the same as in the first build, for example if a `Compile` item (a .cs file) changed, the fingerprint would be something else besides `F` and so would not have corresponding cache entries for it, indicating a cache miss. This will then go through the "cache add" scenario described above to populate the cache with the new fingerprint.
 
 # Caveats
+- Without the "cache add" scenario enabled, the content which powers "cache get" must be populated by some external entity, for example some higher-order build engine.
 - Absolute paths circulating through the saved build results
   - Absolute paths will likely break the build, since they'd be captured on the machine that writes to the cache.
+  - Plugins can attempt to normalize well-known paths, like the repo root, but this can be brittle and there may be unknown path types.
 - Slow connections. In a coffee shop it might be faster to build everything instead of downloading from the cache. Consider racing plugin checks and building: if the bottom up build traversal reaches a node that's still querying the cache, cancel the cache query and build the node instead.
 - Inferring what targets to run on each node when using /graph
-  - Msbuild /graph requires that the [target inference protocol](https://github.com/dotnet/msbuild/blob/main/documentation/specs/static-graph.md#inferring-which-targets-to-run-for-a-project-within-the-graph) is good enough.
+  - Msbuild /graph requires that the [target inference protocol](static-graph.md#inferring-which-targets-to-run-for-a-project-within-the-graph) is good enough.
 - Small repos will probably be slower with plugin implementations that access the network. Remote distribution and caching will only be worth it for repos that are large enough.
 
-# Future work
-- On cache misses plugins can build the project with IO monitoring and write to the local cache. As far as we can tell there are two main possibilities:
-  - plugins build the projects themselves in isolation (without projects building their reference, probably by setting `BuildProjectReferences` to false) by calling msbuild.exe.
-  - plugins request msbuild to build the projects on special out of proc nodes whose IO system calls can be monitored.
-
-# Potential work of dubious value
-- Allow multiple plugin instances and query them based on some priority, similar to sdk resolvers.
+# Potential future work of dubious value
 - Enable plugins to work with the just-in-time top down msbuild traversal that msbuild natively does when it's not using `/graph`.
 - Extend the project cache API to allow skipping individual targets or tasks instead of entire projects. This would allow for smaller specialized plugins, like plugins that only know to distribute, cache, and skip CSC.exe calls.
diff --git a/documentation/wiki/Binary-Log.md b/documentation/wiki/Binary-Log.md
index 9edcddc6fd4..d9bb101159f 100644
--- a/documentation/wiki/Binary-Log.md
+++ b/documentation/wiki/Binary-Log.md
@@ -84,7 +84,7 @@ It is a `GZipStream`-compressed binary stream of serialized `BuildEventArgs` obj
 
 ## Incrementing the file format
 
-Every .binlog file has the first three bytes that indicate the file version. The current file format version is 9 (`00 00 09`).
+Every .binlog file has the first four bytes that indicate the file version. The current file format is indicated in [`BinaryLogger.cs`](/src/Build/Logging/BinaryLogger/BinaryLogger.cs).
 
 When incrementing the file format, keep this in mind:
  * Increment the version and add a summary of the changes: https://github.com/dotnet/msbuild/blob/main/src/Build/Logging/BinaryLogger/BinaryLogger.cs#L22
@@ -94,4 +94,98 @@ When incrementing the file format, keep this in mind:
 
 The format is backwards compatible, i.e. MSBuild will be able to play back .binlog files created with an older version of MSBuild. The Viewer will also be able to open files of any older version. Since the viewer updates automatically and I can push out updates easily, we can consider the Viewer is always able to read all .binlogs.
 
-However MSBuild of version 15.3 won't be able to read .binlogs created with MSBuild version 15.6. This means the format is unfortunately not forwards-compatible. It is not self-describing, i.e. it doesn't carry its schema around for performance and compactness reasons. This is not a problem with a Viewer because Viewer is always up-to-date (there isn't an "old version" of the Viewer unless people go to great lengths to prevent it from auto-updating).
+## Forward compatibility reading
+
+From version 18, the binlog contains as well the minimum version of reader that can interpret it (stored in bytes 4 to 8). Support for best effort forward compatibility is added by this version. It is ‚Äúbest effort‚Äù only because the binlog format is not self-describing, i.e. it doesn't carry its schema around for performance and compactness reasons.
+
+This is not of a high importance for users of the Viewer because Viewer is always up-to-date (there isn't an "old version" of the Viewer unless people go to great lengths to prevent it from auto-updating).
+
+## Reading API
+
+We recommend usage of `BinaryLogReplayEventSource`. It provides simplified helpers for creating and configuring `BuildEventArgsReader` and subscribing to the events.
+
+```csharp
+var logReader = new BinaryLogReplayEventSource()
+{
+    AllowForwardCompatibility = true
+};
+
+// Handling of the structured events contained within the log
+logReader.AnyEventRaised += (_, e) =>
+{
+    if (e is BuildErrorEventArgs error)
+    {
+        //...
+    }
+
+    // ...
+};
+
+// Starts the synchronous log reading loop.
+logReader.Replay(path_to_binlog_file);
+
+```
+
+### Handling the recoverable reading errors
+
+In compatibility mode (default for `BinaryLogReplayEventSource`. Only supported for binlogs of version 18 and higher) reader is capable of skipping unknown event types and unknown parts of known events (`BuildEventArgsReader` can configure the behavior via 2 separate properties - `SkipUnknownEvents` and `SkipUnknownEventParts`).
+
+The unknown events and event parts are regarded as recoverable errors, since the reader is able to continue reading subsequent records in the binlog. However the specific user logic should have the last call in deciding whether errors are really recoverable (e.g. is presence of unrecognized or unparseable event ok? It might be fine when searching only for specific events - e.g. errors but not acceptable when trying to provide definitive overview of the built).
+
+To allow the calling code to decide - based on the type of error, type of events getting the error, or the number of errors - the `RecoverableReadError` event is exposed (from both `BinaryLogReplayEventSource` and `BuildEventArgsReader`).
+
+```csharp
+/// <summary>
+/// An event args for <see cref="IBinaryLogReaderErrors.RecoverableReadError"/> event.
+/// </summary>
+public sealed class BinaryLogReaderErrorEventArgs : EventArgs
+{
+    /// <summary>
+    /// Type of the error that occurred during reading.
+    /// </summary>
+    public ReaderErrorType ErrorType { get; }
+
+    /// <summary>
+    /// Kind of the record that encountered the error.
+    /// </summary>
+    public BinaryLogRecordKind RecordKind { get; }
+
+    /// <summary>
+    /// Materializes the error message.
+    /// Until it's called the error message is not materialized and no string allocations are made.
+    /// </summary>
+    /// <returns>The error message.</returns>
+    public string GetFormattedMessage() => _formatErrorMessage();
+}
+
+/// <summary>
+/// Receives recoverable errors during reading.
+/// Communicates type of the error, kind of the record that encountered the error and the message detailing the error.
+/// In case of <see cref="ReaderErrorType.UnknownEventData"/> this is raised before returning the structured representation of a build event
+/// that has some extra unknown data in the binlog. In case of other error types this event is raised and the offending build event is skipped and not returned.
+/// </summary>
+event Action<BinaryLogReaderErrorEventArgs>? RecoverableReadError;
+```
+
+Our sample usage of the [Reading API](#reading-api) can be enhanced with recoverable errors handling e.g. as such:
+
+```csharp
+
+// Those can be raised only during forward compatibility reading mode.
+logReader.RecoverableReadError += errorEventArgs =>
+{
+    // ...
+
+    // e.g. we can decide to ignore the error and continue reading or break reading
+    //  based on the type of the error or/and type of the record or/and the frequency of the error
+
+    // Would we decide to completely ignore some errors - we can aid better performance by not materializing the actual error message.
+    // Otherwise the error message can be materialized via the provided method on the event argument:
+    Console.WriteLine($"Recoverable reader error: {errorEventArgs.GetFormattedMessage()}");
+};
+
+```
+
+When authoring changes to the specific BuildEventArg types - it is always strongly recommended to **prefer append-only changes**. 
+
+This prevents the possibility of collision where some fields are removed in one version and then different fields with same binary size are added in future version. Such a sequence of format changes might not be caught by the decoder and might lead to unnoticed corrupt interpretation of data. For this reason the author of specific OM changes should always check whether there is a possibility of unrecognizable format collision (same binary size, different representation) within binlog versions of a same [minimum reader version support](#forward-compatibility-reading). If this is possible, the [minimum reader version support](#forward-compatibility-reading) should be incremented.
\ No newline at end of file
diff --git a/documentation/wiki/ChangeWaves.md b/documentation/wiki/ChangeWaves.md
index 6282a09e7b1..b752e80ed3a 100644
--- a/documentation/wiki/ChangeWaves.md
+++ b/documentation/wiki/ChangeWaves.md
@@ -28,7 +28,12 @@ A wave of features is set to "rotate out" (i.e. become standard functionality) t
 - [Warning on serialization custom events by default in .NET framework](https://github.com/dotnet/msbuild/pull/9318)
 - [Cache SDK resolver data process-wide](https://github.com/dotnet/msbuild/pull/9335)
 - [Target parameters will be unquoted](https://github.com/dotnet/msbuild/pull/9452), meaning  the ';' symbol in the parameter target name will always be treated as separator
+- [Add Link metadata to Resources in AssignLinkMetadata target](https://github.com/dotnet/msbuild/pull/9464)
 - [Change Version switch output to finish with a newline](https://github.com/dotnet/msbuild/pull/9485)
+- [Load NuGet.Frameworks into secondary AppDomain (MSBuild.exe only)](https://github.com/dotnet/msbuild/pull/9446)
+- [Update Traits when environment has been changed](https://github.com/dotnet/msbuild/pull/9655)
+- [Exec task does not trim leading whitespaces for ConsoleOutput](https://github.com/dotnet/msbuild/pull/9722)
+
 
 ### 17.8
 - [[RAR] Don't do I/O on SDK-provided references](https://github.com/dotnet/msbuild/pull/8688)
diff --git a/documentation/wiki/Controlling-Dependencies-Behavior.md b/documentation/wiki/Controlling-Dependencies-Behavior.md
index ceafb75a2d1..0465364346a 100644
--- a/documentation/wiki/Controlling-Dependencies-Behavior.md
+++ b/documentation/wiki/Controlling-Dependencies-Behavior.md
@@ -2,6 +2,12 @@
 
 MSBuild recognizes a [few types of references](https://learn.microsoft.com/previous-versions/visualstudio/visual-studio-2015/msbuild/common-msbuild-project-items) (here we are mainly interested in `ProjectReference`, `PackageReference`, `Reference` aka assembly reference) and offers optional mechanisms to tailor some aspects of the references workings - transitive references resolution, multitargeted references resolution, copying references to output directory.
 
+## Access to transitive dependencies
+
+Following sections will describe details of transitive dependencies accessibility for `ProjectReference`, `PackageReference` and `Reference`. To summarize the content: Projects requiring access to particular dependency (project, package or assembly) should always explicitly declare the required dependency (via the appropriate item). 
+
+The possibility of the transitive access should however be acknowledged and wherever the strict separation of architectural layers is required - a dedicated metadata (`DisableTransitiveProjectReferences` or `PrivateAssets`) should be used.
+
 ## .NET SDK projects and access to transitive references
 
 [.NET SDK projects](https://learn.microsoft.com/dotnet/core/project-sdk/overview) by default make all transitive references accessible as if they were direct references.
@@ -101,6 +107,24 @@ public class PersonsAccessor
 **Notes:**
    `PrivateAssets` metadatum (and it's counterparts `IncludeAssets` and `ExcludeAssets`) is applicable to `PackageReference` and controls exposure of dependencies to the consuming projects, not the current project. It is currently not possible to prevent access to package references from within directly referencing project - this is purely decision of the package itself (as it can define it's dependencies as `PrivateAssets`).
 
+## Access to transitive assembly references
+
+`Reference` (AKA assembly reference) referenced by a project is not transitively accessible from projects referencing the said directly referencing project:
+
+```xml
+<ItemGroup>
+  <!-- This reference will only be accessible from the current project.
+       Projects referencing this project won't be able to access it. -->
+  <Reference Include="SomeAssemblyReference">
+    <HintPath>path\to\SomeAssemblyReference.dll</HintPath>
+  </Reference>
+</ItemGroup>
+```
+
+As described in [Access to transitive project references](#access-to-transitive-project-references) - access to transitive references can lead to breaking architectural layering and hence the lack of the transitive access is desired.
+
+All the projects requiring access to some particular assembly reference should explicitly declare such dependency via the `Reference` item.
+
 ## Not copying dependencies to output
 
 By default the above mentioned dependency types are copied to the build output directory during the build. There can be various scenarios where this behavior is not desired (examples: dependency is compile time only or contains a logic for build; component is plugin to a main app and there is a desire not to duplicate common dependencies in output).
diff --git a/documentation/wiki/Labels.md b/documentation/wiki/Labels.md
index 0ede6a53483..4571064a233 100644
--- a/documentation/wiki/Labels.md
+++ b/documentation/wiki/Labels.md
@@ -3,10 +3,10 @@ Here's a brief explanation on the labels most often used by the MSBuild team exc
 
 | Label             | Applied When | Notes |
 |-------------------|--------------|-------|
-| `needs-triage`    | Team has yet to determine what area/prioritization applies to the issue. | This is the primary label queried during a regular bug triage meeting. Automatically removed when `needs-more-info` is applied. |
+| `triaged`    | Team has determined what area/prioritization applies to the issue. | This is the primary label absence of which is queried during a regular bug triage meeting. Automatically added when `needs-more-info` is applied. |
 | `needs-attention` | An issue requires the team look at it during bug triage. | Automatically applied when a stale issue receives a comment. |
 | `needs-more-info` | Team asked for info needed to continue an investigation. | If no response is given within 7 days, the `stale` label is applied. |
-| `initial-investigation` | A member of the team does a "first pass" investigation. | `needs-triage` is applied and team member and unassigns themselves after the initial investigation is complete. |
+| `initial-investigation` | A member of the team does a "first pass" investigation. | `triaged` label is removed and team member unassigns themselves after the initial investigation is complete. |
 | `stale` | An issue marked with `needs-more-info` is inactive for 7 days. | The issue will be closed after 30 days of inactivity while the `stale` label is applied. |
 | `For consideration` | An issue should get higher prioritization when planning the next set of features. | |
 | `help wanted` | Anyone can take ownership over this issue. | If a contributor wants to take the issue on, they should ask that it be assigned to them BEFORE doing development work.  |
diff --git a/documentation/wiki/MSBuild-Environment-Variables.md b/documentation/wiki/MSBuild-Environment-Variables.md
new file mode 100644
index 00000000000..01c8b7fb66c
--- /dev/null
+++ b/documentation/wiki/MSBuild-Environment-Variables.md
@@ -0,0 +1,12 @@
+# MSBuild environment variables
+
+- [MsBuildSkipEagerWildCardEvaluationRegexes](#msbuildskipeagerwildcardevaluationregexes)
+
+
+### MsBuildSkipEagerWildCardEvaluationRegexes
+
+If specified, overrides the default behavior of glob expansion. 
+
+During glob expansion, if the path with wildcards that is being processed matches one of the regular expressions provided in the [environment variable](#msbuildskipeagerwildcardevaluationregexes), the path is not processed (expanded). 
+
+The value of the envvironment variable is a list of regular expressions, separated by semilcon (;).
\ No newline at end of file
diff --git a/eng/AfterSigning.targets b/eng/AfterSigning.targets
index 52f5eabf4c7..eb6c1a06ca5 100644
--- a/eng/AfterSigning.targets
+++ b/eng/AfterSigning.targets
@@ -1,12 +1,15 @@
 <Project>
-    <Target Name="CopyAMD64Symbols" Condition="'$(OfficialBuild)' == 'true' AND '$(ArcadeBuildFromSource)' != 'true'" BeforeTargets="Build">
+    <!-- Don't attempt to copy the PDBs at all when building on core on non-windows platforms. -->
+    <Target Name="CopyAMD64Symbols" Condition="'$(OfficialBuild)' == 'true' AND $([MSBuild]::IsOSPlatform('windows'))" BeforeTargets="Build">
         <Copy
             SourceFiles="$(ArtifactsBinDir)MSBuild\x64\Release\net472\MSBuild.pdb"
             DestinationFolder="$(ArtifactsSymStoreDirectory)\MSBuild\net472\amd64"
             />
+        <!-- Excluded when building using msbuild core because msbuild core doesn't support targeting 3.5
+             See src\MSBuildTaskHost\MSBuildTaskHost.csproj-->
         <Copy
             SourceFiles="$(ArtifactsBinDir)MSBuildTaskHost\x64\Release\net35\MSBuildTaskHost.pdb"
             DestinationFolder="$(ArtifactsSymStoreDirectory)\MSBuildTaskHost\net35\amd64"
-            />
+            Condition="'$(MSBuildRuntimeType)' != 'Core'"/>
     </Target>
 </Project>
diff --git a/eng/BootStrapMSBuild.targets b/eng/BootStrapMSBuild.targets
index e6fee0282f8..3aafd190c94 100644
--- a/eng/BootStrapMSBuild.targets
+++ b/eng/BootStrapMSBuild.targets
@@ -2,7 +2,7 @@
 
   <!--
   Copies the binaries of MSBuild to a bootstrap folder so we can rebuild msbuild with itself.
-  On netcore and mono it performs a directory copy.
+  On netcore it performs a directory copy.
   On full framework it performs a more involved deployment.
    -->
 
@@ -11,7 +11,6 @@
     <BootstrapDestination Condition="'$(Platform)' == 'x64' or '$(Platform)' == 'arm64'">$(BootstrapDestination)$(Platform)\</BootstrapDestination>
     <BootstrapDestination>$(BootstrapDestination)$(TargetFramework.ToLowerInvariant())\MSBuild\</BootstrapDestination>
 
-    <!-- TODO: Mono build should use BootstrapNetCore logic -->
     <BootstrapDependsOn Condition="$(TargetFramework.StartsWith('net4'))">BootstrapFull</BootstrapDependsOn>
     <BootstrapDependsOn Condition="!$(TargetFramework.StartsWith('net4'))">BootstrapNetCore</BootstrapDependsOn>
 
@@ -72,10 +71,8 @@
       <InstalledVersionedExtensions Include="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\**\Tracker*.exe" />
       <InstalledVersionedExtensions Include="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\**\FileTracker*.dll" />
       <SdkResolverFiles Include="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Bin\SdkResolvers\Microsoft.DotNet.MSBuildSdkResolver\**\*.*" />
-      <NuGetSdkResolverManifest Include= "$(RepoRoot)src\MSBuild\SdkResolvers\VS\Microsoft.Build.NuGetSdkResolver.xml" Condition="'$(MonoBuild)' != 'true'" />
-      <NuGetSdkResolverManifest Include= "$(RepoRoot)src\MSBuild\SdkResolvers\Standalone\Microsoft.Build.NuGetSdkResolver.xml" Condition="'$(MonoBuild)' == 'true'" />
+      <NuGetSdkResolverManifest Include="$(RepoRoot)src\MSBuild\SdkResolvers\VS\Microsoft.Build.NuGetSdkResolver.xml" />
       <InstalledSdks Include="$(DOTNET_INSTALL_DIR)\sdk\$(DotNetCliVersion)\Sdks\**\*.*" />
-      <InstalledSdks Include="$(MSBuildBinPath)\Sdks\**\*" Condition="'$(MonoBuild)' == 'true'" />
 
       <InstalledStaticAnalysisTools Include="$(VsInstallRoot)\Team Tools\Static Analysis Tools\**\*.*" />
 
@@ -140,11 +137,6 @@
 
     <Copy SourceFiles="@(InstalledSdks)"
           DestinationFiles="@(InstalledSdks -> '$(BootstrapDestination)Sdks\%(RecursiveDir)%(Filename)%(Extension)')"
-          Condition="'$(MonoBuild)' != 'true'"
-          SkipUnchangedFiles="true" />
-    <Copy SourceFiles="@(InstalledSdks)"
-          DestinationFiles="@(InstalledSdks -> '$(BootstrapDestination)$(TargetMSBuildToolsVersion)\Bin\Sdks\%(RecursiveDir)%(Filename)%(Extension)')"
-          Condition="'$(MonoBuild)' == 'true'"
           SkipUnchangedFiles="true" />
 
     <Copy SourceFiles="@(InstalledStaticAnalysisTools)"
@@ -155,14 +147,9 @@
           DestinationFiles="@(InstalledNuGetFiles->'$(BootstrapDestination)Microsoft\NuGet\%(Filename)%(Extension)')"
           SkipUnchangedFiles="true" />
 
-    <Copy Condition="'$(MonoBuild)' != 'true'"
-          SourceFiles="@(_NuGetRuntimeDependencies)"
+    <Copy SourceFiles="@(_NuGetRuntimeDependencies)"
           DestinationFolder="$(BootstrapDestination)..\Common7\IDE\CommonExtensions\Microsoft\NuGet\"
           SkipUnchangedFiles="true" />
-    <Copy Condition="'$(MonoBuild)' == 'true'"
-          SourceFiles="@(_NuGetRuntimeDependencies)"
-          DestinationFolder="$(BootstrapDestination)$(TargetMSBuildToolsVersion)\Bin"
-          SkipUnchangedFiles="true" />
 
     <Copy SourceFiles="@(NuGetSdkResolverManifest)"
           DestinationFolder="$(BootstrapDestination)$(TargetMSBuildToolsVersion)\Bin\SdkResolvers\Microsoft.Build.NuGetSdkResolver"
diff --git a/eng/Build.props b/eng/Build.props
index f2afe806410..18c7defa0ce 100644
--- a/eng/Build.props
+++ b/eng/Build.props
@@ -1,8 +1,7 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->
 <Project>
 
   <PropertyGroup>
+    <!-- Static graph restores projects from the parent sln file that are excluded by the slnf file: https://github.com/NuGet/Home/issues/13097. -->
     <RestoreUseStaticGraphEvaluation Condition="'$(DotNetBuildFromSource)' != 'true'">true</RestoreUseStaticGraphEvaluation>
   </PropertyGroup>
 
diff --git a/eng/Packages.props b/eng/Packages.props
index b84d22149d7..6f4d99b91a9 100644
--- a/eng/Packages.props
+++ b/eng/Packages.props
@@ -23,7 +23,7 @@
     <PackageVersion Include="System.Net.Http" Version="$(SystemNetHttpVersion)" />
     <PackageVersion Include="System.Reflection.Metadata" Version="$(SystemReflectionMetadataVersion)" />
     <PackageVersion Include="System.Reflection.MetadataLoadContext" Version="$(SystemReflectionMetadataLoadContextVersion)" />
-    <PackageVersion Include="System.Resources.Extensions" Version="$(SystemResourcesExtensionsPackageVersion)" />
+    <PackageVersion Include="System.Resources.Extensions" Version="$(SystemResourcesExtensionsVersion)" />
     <PackageVersion Include="System.Runtime.CompilerServices.Unsafe" Version="$(SystemRuntimeCompilerServicesUnsafeVersion)" />
     <PackageVersion Include="System.Security.Principal.Windows" Version="$(SystemSecurityPrincipalWindowsVersion)" />
     <PackageVersion Include="System.Text.Encoding.CodePages" Version="$(SystemTextEncodingCodePagesVersion)" />
diff --git a/eng/SourceBuild.props b/eng/SourceBuild.props
index a7925ca3dc3..6dde09dcde4 100644
--- a/eng/SourceBuild.props
+++ b/eng/SourceBuild.props
@@ -7,9 +7,12 @@
     <SourceBuildManagedOnly>true</SourceBuildManagedOnly>
   </PropertyGroup>
 
-  <Target Name="ConfigureInnerBuildArgs" BeforeTargets="GetSourceBuildCommandConfiguration">
+  <Target Name="ConfigureInnerBuildArgs" BeforeTargets="GetSourceBuildCommandConfiguration"
+          Condition="'$(ArcadeBuildFromSource)' == 'true' or '$(DotNetBuildSourceOnly)' == 'true'">
     <PropertyGroup>
-      <InnerBuildArgs>$(InnerBuildArgs) /p:Projects="$(InnerSourceBuildRepoRoot)\MSBuild.SourceBuild.slnf"</InnerBuildArgs>
+      <!-- Filter down projects aggressively in source-only modes. -->
+      <InnerBuildArgs>$(InnerBuildArgs) /p:Projects="$(InnerSourceBuildRepoRoot)MSBuild.SourceBuild.slnf"</InnerBuildArgs>
+
       <!-- Disable package validation as source build filters out target frameworks. -->
       <InnerBuildArgs>$(InnerBuildArgs) /p:EnablePackageValidation=false</InnerBuildArgs>
     </PropertyGroup>
diff --git a/eng/SourceBuildPrebuiltBaseline.xml b/eng/SourceBuildPrebuiltBaseline.xml
index de395d970df..64d04b3e036 100644
--- a/eng/SourceBuildPrebuiltBaseline.xml
+++ b/eng/SourceBuildPrebuiltBaseline.xml
@@ -3,17 +3,18 @@
 
 <UsageData>
   <IgnorePatterns>
-    <UsagePattern IdentityGlob="Microsoft.SourceBuild.Intermediate.*/*" />
-
-    <!-- Baseline 7.0 dependencies until msbuild targets net8 and uses a net8 arcade, SBRP, etc.
-         These cannot be added to 7.0 SBRP, because they would are produced in the 7.0 build. -->
+    <!-- 8.0 packages are not allowed in the 8.0 build, because they're not "current", so baseline them. -->
+    <UsagePattern IdentityGlob="System.CodeDom/*8.0.0*" />
     <UsagePattern IdentityGlob="System.Collections.Immutable/*8.0.0*" />
     <UsagePattern IdentityGlob="System.Configuration.ConfigurationManager/*8.0.0*" />
     <UsagePattern IdentityGlob="System.Diagnostics.EventLog/*8.0.0*" />
+    <UsagePattern IdentityGlob="System.Formats.Asn1/*8.0.0*" />
     <UsagePattern IdentityGlob="System.Reflection.Metadata/*8.0.0*" />
     <UsagePattern IdentityGlob="System.Reflection.MetadataLoadContext/*8.0.0*" />
     <UsagePattern IdentityGlob="System.Resources.Extensions/*8.0.0*" />
+    <UsagePattern IdentityGlob="System.Security.Cryptography.Pkcs/*8.0.0*" />
     <UsagePattern IdentityGlob="System.Security.Cryptography.ProtectedData/*8.0.0*" />
+    <UsagePattern IdentityGlob="System.Security.Cryptography.Xml/*8.0.0*" />
     <UsagePattern IdentityGlob="System.Text.Json/*8.0.0*" />
     <UsagePattern IdentityGlob="System.Threading.Tasks.Dataflow/*8.0.0*" />
   </IgnorePatterns>
diff --git a/eng/Version.Details.xml b/eng/Version.Details.xml
index e118b2a132f..4e98f280f2b 100644
--- a/eng/Version.Details.xml
+++ b/eng/Version.Details.xml
@@ -1,9 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Dependencies>
   <ProductDependencies>
-    <Dependency Name="Microsoft.SourceBuild.Intermediate.source-build-reference-packages" Version="8.0.0-alpha.1.23565.1">
+    <!-- Intermediate is necessary for source build. -->
+    <Dependency Name="Microsoft.SourceBuild.Intermediate.source-build-reference-packages" Version="8.0.0-alpha.1.24162.3">
       <Uri>https://github.com/dotnet/source-build-reference-packages</Uri>
-      <Sha>95f83e27806330fec09edd96e06bba3acabe3f35</Sha>
+      <Sha>c08ec59adcf8b56cd1b4de2090c320496566b5c6</Sha>
       <SourceBuild RepoName="source-build-reference-packages" ManagedOnly="true" />
     </Dependency>
     <!-- Necessary for source-build. This allows the live version of the package to be used by source-build. -->
@@ -66,28 +67,38 @@
     </Dependency>
   </ProductDependencies>
   <ToolsetDependencies>
-    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="8.0.0-beta.23620.2">
+    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="8.0.0-beta.24158.4">
       <Uri>https://github.com/dotnet/arcade</Uri>
-      <Sha>84129325171e65373edef24019e1171feeb19cbc</Sha>
+      <Sha>052a4b9e7a9bdb9744c86c05665f1b46e4d59b15</Sha>
+    </Dependency>
+    <!-- Intermediate is necessary for source build. -->
+    <Dependency Name="Microsoft.SourceBuild.Intermediate.arcade" Version="8.0.0-beta.24158.4">
+      <Uri>https://github.com/dotnet/arcade</Uri>
+      <Sha>052a4b9e7a9bdb9744c86c05665f1b46e4d59b15</Sha>
       <SourceBuild RepoName="arcade" ManagedOnly="true" />
     </Dependency>
     <Dependency Name="Microsoft.DotNet.XliffTasks" Version="1.0.0-beta.23475.1" CoherentParentDependency="Microsoft.DotNet.Arcade.Sdk">
       <Uri>https://github.com/dotnet/xliff-tasks</Uri>
       <Sha>73f0850939d96131c28cf6ea6ee5aacb4da0083a</Sha>
+    </Dependency>
+    <!-- Intermediate is necessary for source build. -->
+    <Dependency Name="Microsoft.SourceBuild.Intermediate.xliff-tasks" Version="1.0.0-beta.23475.1" CoherentParentDependency="Microsoft.DotNet.Arcade.Sdk">
+      <Uri>https://github.com/dotnet/xliff-tasks</Uri>
+      <Sha>73f0850939d96131c28cf6ea6ee5aacb4da0083a</Sha>
       <SourceBuild RepoName="xliff-tasks" ManagedOnly="true" />
     </Dependency>
-    <Dependency Name="NuGet.Build.Tasks" Version="6.9.0-rc.86">
+    <Dependency Name="NuGet.Build.Tasks" Version="6.10.0-preview.2.78">
       <Uri>https://github.com/nuget/nuget.client</Uri>
-      <Sha>d55931a69dcda3dcb87ba46a09fe268e0febc223</Sha>
+      <Sha>2fdd0d41e33c3354de2750fe154b56751a6682aa</Sha>
     </Dependency>
-    <Dependency Name="Microsoft.Net.Compilers.Toolset" Version="4.9.0-3.24081.11">
+    <Dependency Name="Microsoft.Net.Compilers.Toolset" Version="4.10.0-3.24161.2">
       <Uri>https://github.com/dotnet/roslyn</Uri>
-      <Sha>989117396f26e5453ff157df610d22ce45b6b0a9</Sha>
+      <Sha>01b7c233fdda946c1a5628d4692ed827a07e33dd</Sha>
       <SourceBuild RepoName="roslyn" ManagedOnly="true" />
     </Dependency>
-    <Dependency Name="Microsoft.DotNet.XUnitExtensions" Version="8.0.0-beta.23620.2">
+    <Dependency Name="Microsoft.DotNet.XUnitExtensions" Version="8.0.0-beta.24158.4">
       <Uri>https://github.com/dotnet/arcade</Uri>
-      <Sha>84129325171e65373edef24019e1171feeb19cbc</Sha>
+      <Sha>052a4b9e7a9bdb9744c86c05665f1b46e4d59b15</Sha>
     </Dependency>
   </ToolsetDependencies>
 </Dependencies>
diff --git a/eng/Versions.props b/eng/Versions.props
index d3dd54cf1d9..132e1e07e4e 100644
--- a/eng/Versions.props
+++ b/eng/Versions.props
@@ -2,7 +2,7 @@
 <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->
 <Project>
   <PropertyGroup>
-    <VersionPrefix>17.9.8</VersionPrefix><DotNetFinalVersionKind>release</DotNetFinalVersionKind>
+    <VersionPrefix>17.10.0</VersionPrefix>
     <PackageValidationBaselineVersion>17.8.3</PackageValidationBaselineVersion>
     <AssemblyVersion>15.1.0.0</AssemblyVersion>
     <PreReleaseVersionLabel>preview</PreReleaseVersionLabel>
@@ -10,14 +10,12 @@
     <!-- Workaround for https://github.com/dotnet/roslyn/issues/35793 -->
     <SemanticVersioningV1>true</SemanticVersioningV1>
     <MicroBuildPluginsSwixBuildVersion>1.1.87</MicroBuildPluginsSwixBuildVersion>
-    <MonoBuild Condition="'$(Configuration)' == 'Debug-MONO' or '$(Configuration)' == 'Release-MONO'">true</MonoBuild>
   </PropertyGroup>
   <!-- Repo Toolset Features -->
-  <PropertyGroup Condition="'$(MonoBuild)' != 'true'">
+  <PropertyGroup>
     <UsingToolIbcOptimization>true</UsingToolIbcOptimization>
-    <!-- Force a specific compiler version because record changes cause genapi output to flip-flop -->
-    <UsingToolMicrosoftNetCompilers>true</UsingToolMicrosoftNetCompilers>
     <UsingToolVisualStudioIbcTraining>true</UsingToolVisualStudioIbcTraining>
+    <UsingToolMicrosoftNetCompilers>true</UsingToolMicrosoftNetCompilers>
     <UsingToolSymbolUploader>true</UsingToolSymbolUploader>
     <UsingToolVSSDK>true</UsingToolVSSDK>
     <!-- Override Arcade's default VSSDK version with one that supports client enablement.
@@ -37,9 +35,10 @@
     <SystemNetHttpVersion>4.3.4</SystemNetHttpVersion>
     <SystemReflectionMetadataLoadContextVersion>8.0.0</SystemReflectionMetadataLoadContextVersion>
     <SystemReflectionMetadataVersion>8.0.0</SystemReflectionMetadataVersion>
-    <SystemResourcesExtensionsPackageVersion>8.0.0</SystemResourcesExtensionsPackageVersion>
+    <SystemResourcesExtensionsVersion>8.0.0</SystemResourcesExtensionsVersion>
     <SystemSecurityPrincipalWindowsVersion>5.0.0</SystemSecurityPrincipalWindowsVersion>
     <SystemTextEncodingCodePagesVersion>7.0.0</SystemTextEncodingCodePagesVersion>
+    <SystemTextJsonVersion>8.0.0</SystemTextJsonVersion>
     <SystemThreadingChannelsVersion>8.0.0</SystemThreadingChannelsVersion>
     <SystemThreadingTasksDataflowVersion>8.0.0</SystemThreadingTasksDataflowVersion>
   </PropertyGroup>
@@ -49,13 +48,12 @@
          Otherwise, this version of dotnet will not be installed and the build will error out. -->
     <DotNetCliVersion>$([System.Text.RegularExpressions.Regex]::Match($([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)..\global.json')), '"dotnet": "([^"]*)"').Groups.get_Item(1))</DotNetCliVersion>
     <MicrosoftCodeAnalysisCollectionsVersion>4.2.0-1.22102.8</MicrosoftCodeAnalysisCollectionsVersion>
-    <MicrosoftDotNetXUnitExtensionsVersion>8.0.0-beta.23620.2</MicrosoftDotNetXUnitExtensionsVersion>
+    <MicrosoftDotNetXUnitExtensionsVersion>8.0.0-beta.24158.4</MicrosoftDotNetXUnitExtensionsVersion>
     <MicrosoftExtensionsDependencyModelVersion>7.0.0</MicrosoftExtensionsDependencyModelVersion>
     <MicrosoftIORedistVersion>6.0.0</MicrosoftIORedistVersion>
-    <MicrosoftNetCompilersToolsetVersion>4.9.0-3.24081.11</MicrosoftNetCompilersToolsetVersion>
-    <NuGetBuildTasksVersion>6.9.0-rc.86</NuGetBuildTasksVersion>
+    <MicrosoftNetCompilersToolsetVersion>4.10.0-3.24161.2</MicrosoftNetCompilersToolsetVersion>
+    <NuGetBuildTasksVersion>6.10.0-preview.2.78</NuGetBuildTasksVersion>
     <SystemRuntimeCompilerServicesUnsafeVersion>6.0.0</SystemRuntimeCompilerServicesUnsafeVersion>
-    <SystemTextJsonVersion>8.0.0</SystemTextJsonVersion>
   </PropertyGroup>
   <Target Name="OverrideArcadeFileVersion" AfterTargets="_InitializeAssemblyVersion">
     <!-- See https://github.com/dotnet/arcade/issues/3386
diff --git a/eng/cibuild_bootstrapped_msbuild.ps1 b/eng/cibuild_bootstrapped_msbuild.ps1
index 46d471d042b..71cbf493110 100644
--- a/eng/cibuild_bootstrapped_msbuild.ps1
+++ b/eng/cibuild_bootstrapped_msbuild.ps1
@@ -4,6 +4,7 @@ Param(
   [string] $configuration = "Debug",
   [switch] $prepareMachine,
   [bool] $buildStage1 = $True,
+  [bool] $onlyDocChanged = 0,
   [Parameter(ValueFromRemainingArguments=$true)][String[]]$properties
 )
 
@@ -80,13 +81,6 @@ try {
     $buildToolPath = Join-Path $bootstrapRoot "net472\MSBuild\Current\Bin\MSBuild.exe"
     $buildToolCommand = "";
     $buildToolFramework = "net472"
-
-    if ($configuration -eq "Debug-MONO" -or $configuration -eq "Release-MONO")
-    {
-      # Copy MSBuild.dll to MSBuild.exe so we can run it without a host
-      $sourceDll = Join-Path $bootstrapRoot "net472\MSBuild\Current\Bin\MSBuild.dll"
-      Copy-Item -Path $sourceDll -Destination $msbuildToUse
-    }
   }
   else
   {
@@ -123,7 +117,12 @@ try {
   # - Turn off node reuse (so that bootstrapped MSBuild processes don't stay running and lock files)
   # - Do run tests
   # - Don't try to create a bootstrap deployment
-  & $PSScriptRoot\Common\Build.ps1 -restore -build -test -ci /p:CreateBootstrap=false /nr:false @properties
+  if ($onlyDocChanged) {
+    & $PSScriptRoot\Common\Build.ps1 -restore -build -ci /p:CreateBootstrap=false /nr:false @properties
+  }
+  else {
+    & $PSScriptRoot\Common\Build.ps1 -restore -build -test -ci /p:CreateBootstrap=false /nr:false @properties
+  }
 
   exit $lastExitCode
 }
diff --git a/eng/cibuild_bootstrapped_msbuild.sh b/eng/cibuild_bootstrapped_msbuild.sh
index ceb2b343329..06d4ba46e21 100755
--- a/eng/cibuild_bootstrapped_msbuild.sh
+++ b/eng/cibuild_bootstrapped_msbuild.sh
@@ -3,6 +3,7 @@
 configuration="Debug"
 host_type="core"
 build_stage1=true
+onlyDocChanged=0
 properties=
 extra_properties=
 
@@ -29,6 +30,10 @@ while [[ $# -gt 0 ]]; do
       host_type=$2
       shift 2
       ;;
+    --onlydocchanged)
+      onlyDocChanged=$2
+      shift 2
+      ;;
     *)
       properties="$properties $1"
       shift 1
@@ -44,15 +49,6 @@ PerfLogDir="$ArtifactsDir/log/$configuration/PerformanceLogs"
 . "$ScriptRoot/common/tools.sh"
 InitializeDotNetCli true
 
-if [ $host_type = "mono" ] ; then
-  export _InitializeBuildTool="msbuild"
-  export _InitializeBuildToolCommand=""
-  export _InitializeBuildToolFramework="net472"
-
-  configuration="$configuration-MONO"
-  extra_properties=" /p:DeterministicSourcePaths=false"
-fi
-
 if [[ $build_stage1 == true ]];
 then
 	/bin/bash "$ScriptRoot/common/build.sh" --restore --build --ci --configuration $configuration /p:CreateBootstrap=true $properties $extra_properties || exit $?
@@ -65,18 +61,6 @@ then
   _InitializeBuildTool="$_InitializeDotNetCli/dotnet"
   _InitializeBuildToolCommand="$bootstrapRoot/net8.0/MSBuild/MSBuild.dll"
   _InitializeBuildToolFramework="net8.0"
-elif [ $host_type = "mono" ]
-then
-  export _InitializeBuildTool="mono"
-  export _InitializeBuildToolCommand="$bootstrapRoot/net472/MSBuild/Current/Bin/MSBuild.dll"
-  export _InitializeBuildToolFramework="net472"
-
-  # FIXME: remove this once we move to a newer version of Arcade with a fix for $MonoTool
-  # https://github.com/dotnet/arcade/commit/f6f14c169ba19cd851120e0d572cd1c5619205b3
-  export MonoTool=`which mono`
-
-  extn_path="$bootstrapRoot/net472/MSBuild/Current/Bin/Extensions"
-  extra_properties=" /p:MSBuildExtensionsPath=$extn_path /p:MSBuildExtensionsPath32=$extn_path /p:MSBuildExtensionsPath64=$extn_path /p:DeterministicSourcePaths=false"
 else
   echo "Unsupported hostType ($host_type)"
   exit 1
@@ -98,4 +82,10 @@ export DOTNET_HOST_PATH="$_InitializeDotNetCli/dotnet"
 # - Turn off node reuse (so that bootstrapped MSBuild processes don't stay running and lock files)
 # - Do run tests
 # - Don't try to create a bootstrap deployment
-. "$ScriptRoot/common/build.sh" --restore --build --test --ci --nodereuse false --configuration $configuration /p:CreateBootstrap=false $properties $extra_properties
+if [ $onlyDocChanged = 0 ]
+then
+    . "$ScriptRoot/common/build.sh" --restore --build --test --ci --nodereuse false --configuration $configuration /p:CreateBootstrap=false $properties $extra_properties
+
+else
+    . "$ScriptRoot/common/build.sh" --restore --build --ci --nodereuse false --configuration $configuration /p:CreateBootstrap=false $properties $extra_properties
+fi
diff --git a/eng/common/SetupNugetSources.ps1 b/eng/common/SetupNugetSources.ps1
index 6c65e81925f..efa2fd72bfa 100644
--- a/eng/common/SetupNugetSources.ps1
+++ b/eng/common/SetupNugetSources.ps1
@@ -35,7 +35,7 @@ Set-StrictMode -Version 2.0
 . $PSScriptRoot\tools.ps1
 
 # Add source entry to PackageSources
-function AddPackageSource($sources, $SourceName, $SourceEndPoint, $creds, $Username, $Password) {
+function AddPackageSource($sources, $SourceName, $SourceEndPoint, $creds, $Username, $pwd) {
     $packageSource = $sources.SelectSingleNode("add[@key='$SourceName']")
     
     if ($packageSource -eq $null)
@@ -48,12 +48,11 @@ function AddPackageSource($sources, $SourceName, $SourceEndPoint, $creds, $Usern
     else {
         Write-Host "Package source $SourceName already present."
     }
-    
-    AddCredential -Creds $creds -Source $SourceName -Username $Username -Password $Password
+    AddCredential -Creds $creds -Source $SourceName -Username $Username -pwd $pwd
 }
 
 # Add a credential node for the specified source
-function AddCredential($creds, $source, $username, $password) {
+function AddCredential($creds, $source, $username, $pwd) {
     # Looks for credential configuration for the given SourceName. Create it if none is found.
     $sourceElement = $creds.SelectSingleNode($Source)
     if ($sourceElement -eq $null)
@@ -82,17 +81,18 @@ function AddCredential($creds, $source, $username, $password) {
         $passwordElement.SetAttribute("key", "ClearTextPassword")
         $sourceElement.AppendChild($passwordElement) | Out-Null
     }
-    $passwordElement.SetAttribute("value", $Password)
+    
+    $passwordElement.SetAttribute("value", $pwd)
 }
 
-function InsertMaestroPrivateFeedCredentials($Sources, $Creds, $Username, $Password) {
+function InsertMaestroPrivateFeedCredentials($Sources, $Creds, $Username, $pwd) {
     $maestroPrivateSources = $Sources.SelectNodes("add[contains(@key,'darc-int')]")
 
     Write-Host "Inserting credentials for $($maestroPrivateSources.Count) Maestro's private feeds."
     
     ForEach ($PackageSource in $maestroPrivateSources) {
         Write-Host "`tInserting credential for Maestro's feed:" $PackageSource.Key
-        AddCredential -Creds $creds -Source $PackageSource.Key -Username $Username -Password $Password
+        AddCredential -Creds $creds -Source $PackageSource.Key -Username $Username -pwd $pwd
     }
 }
 
@@ -144,13 +144,13 @@ if ($disabledSources -ne $null) {
 $userName = "dn-bot"
 
 # Insert credential nodes for Maestro's private feeds
-InsertMaestroPrivateFeedCredentials -Sources $sources -Creds $creds -Username $userName -Password $Password
+InsertMaestroPrivateFeedCredentials -Sources $sources -Creds $creds -Username $userName -pwd $Password
 
 # 3.1 uses a different feed url format so it's handled differently here
 $dotnet31Source = $sources.SelectSingleNode("add[@key='dotnet3.1']")
 if ($dotnet31Source -ne $null) {
-    AddPackageSource -Sources $sources -SourceName "dotnet3.1-internal" -SourceEndPoint "https://pkgs.dev.azure.com/dnceng/_packaging/dotnet3.1-internal/nuget/v2" -Creds $creds -Username $userName -Password $Password
-    AddPackageSource -Sources $sources -SourceName "dotnet3.1-internal-transport" -SourceEndPoint "https://pkgs.dev.azure.com/dnceng/_packaging/dotnet3.1-internal-transport/nuget/v2" -Creds $creds -Username $userName -Password $Password
+    AddPackageSource -Sources $sources -SourceName "dotnet3.1-internal" -SourceEndPoint "https://pkgs.dev.azure.com/dnceng/_packaging/dotnet3.1-internal/nuget/v2" -Creds $creds -Username $userName -pwd $Password
+    AddPackageSource -Sources $sources -SourceName "dotnet3.1-internal-transport" -SourceEndPoint "https://pkgs.dev.azure.com/dnceng/_packaging/dotnet3.1-internal-transport/nuget/v2" -Creds $creds -Username $userName -pwd $Password
 }
 
 $dotnetVersions = @('5','6','7','8')
@@ -159,9 +159,9 @@ foreach ($dotnetVersion in $dotnetVersions) {
     $feedPrefix = "dotnet" + $dotnetVersion;
     $dotnetSource = $sources.SelectSingleNode("add[@key='$feedPrefix']")
     if ($dotnetSource -ne $null) {
-        AddPackageSource -Sources $sources -SourceName "$feedPrefix-internal" -SourceEndPoint "https://pkgs.dev.azure.com/dnceng/internal/_packaging/$feedPrefix-internal/nuget/v2" -Creds $creds -Username $userName -Password $Password
-        AddPackageSource -Sources $sources -SourceName "$feedPrefix-internal-transport" -SourceEndPoint "https://pkgs.dev.azure.com/dnceng/internal/_packaging/$feedPrefix-internal-transport/nuget/v2" -Creds $creds -Username $userName -Password $Password
+        AddPackageSource -Sources $sources -SourceName "$feedPrefix-internal" -SourceEndPoint "https://pkgs.dev.azure.com/dnceng/internal/_packaging/$feedPrefix-internal/nuget/v2" -Creds $creds -Username $userName -pwd $Password
+        AddPackageSource -Sources $sources -SourceName "$feedPrefix-internal-transport" -SourceEndPoint "https://pkgs.dev.azure.com/dnceng/internal/_packaging/$feedPrefix-internal-transport/nuget/v2" -Creds $creds -Username $userName -pwd $Password
     }
 }
 
-$doc.Save($filename)
+$doc.Save($filename)
\ No newline at end of file
diff --git a/eng/common/post-build/publish-using-darc.ps1 b/eng/common/post-build/publish-using-darc.ps1
index 1e779fec4dd..5a3a32ea8d7 100644
--- a/eng/common/post-build/publish-using-darc.ps1
+++ b/eng/common/post-build/publish-using-darc.ps1
@@ -12,7 +12,7 @@ param(
 try {
   . $PSScriptRoot\post-build-utils.ps1
 
-  $darc = Get-Darc 
+  $darc = Get-Darc
 
   $optionalParams = [System.Collections.ArrayList]::new()
 
@@ -46,7 +46,7 @@ try {
   }
 
   Write-Host 'done.'
-} 
+}
 catch {
   Write-Host $_
   Write-PipelineTelemetryError -Category 'PromoteBuild' -Message "There was an error while trying to publish build '$BuildId' to default channels."
diff --git a/eng/common/templates-official/job/job.yml b/eng/common/templates-official/job/job.yml
new file mode 100644
index 00000000000..647e3f92e5f
--- /dev/null
+++ b/eng/common/templates-official/job/job.yml
@@ -0,0 +1,259 @@
+# Internal resources (telemetry, microbuild) can only be accessed from non-public projects,
+# and some (Microbuild) should only be applied to non-PR cases for internal builds.
+
+parameters:
+# Job schema parameters - https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema#job
+  cancelTimeoutInMinutes: ''
+  condition: ''
+  container: ''
+  continueOnError: false
+  dependsOn: ''
+  displayName: ''
+  pool: ''
+  steps: []
+  strategy: ''
+  timeoutInMinutes: ''
+  variables: []
+  workspace: ''
+  templateContext: ''
+
+# Job base template specific parameters
+  # See schema documentation - https://github.com/dotnet/arcade/blob/master/Documentation/AzureDevOps/TemplateSchema.md
+  artifacts: ''
+  enableMicrobuild: false
+  enablePublishBuildArtifacts: false
+  enablePublishBuildAssets: false
+  enablePublishTestResults: false
+  enablePublishUsingPipelines: false
+  enableBuildRetry: false
+  disableComponentGovernance: ''
+  componentGovernanceIgnoreDirectories: ''
+  mergeTestResults: false
+  testRunTitle: ''
+  testResultsFormat: ''
+  name: ''
+  preSteps: []
+  runAsPublic: false
+# Sbom related params
+  enableSbom: true
+  PackageVersion: 7.0.0
+  BuildDropPath: '$(Build.SourcesDirectory)/artifacts'
+
+jobs:
+- job: ${{ parameters.name }}
+
+  ${{ if ne(parameters.cancelTimeoutInMinutes, '') }}:
+    cancelTimeoutInMinutes: ${{ parameters.cancelTimeoutInMinutes }}
+
+  ${{ if ne(parameters.condition, '') }}:
+    condition: ${{ parameters.condition }}
+
+  ${{ if ne(parameters.container, '') }}:
+    container: ${{ parameters.container }}
+
+  ${{ if ne(parameters.continueOnError, '') }}:
+    continueOnError: ${{ parameters.continueOnError }}
+
+  ${{ if ne(parameters.dependsOn, '') }}:
+    dependsOn: ${{ parameters.dependsOn }}
+
+  ${{ if ne(parameters.displayName, '') }}:
+    displayName: ${{ parameters.displayName }}
+
+  ${{ if ne(parameters.pool, '') }}:
+    pool: ${{ parameters.pool }}
+
+  ${{ if ne(parameters.strategy, '') }}:
+    strategy: ${{ parameters.strategy }}
+
+  ${{ if ne(parameters.timeoutInMinutes, '') }}:
+    timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
+
+  ${{ if ne(parameters.templateContext, '') }}:
+    templateContext: ${{ parameters.templateContext }}
+
+  variables:
+  - ${{ if ne(parameters.enableTelemetry, 'false') }}:
+    - name: DOTNET_CLI_TELEMETRY_PROFILE
+      value: '$(Build.Repository.Uri)'
+  - ${{ if eq(parameters.enableRichCodeNavigation, 'true') }}:
+    - name: EnableRichCodeNavigation
+      value: 'true'
+  # Retry signature validation up to three times, waiting 2 seconds between attempts.
+  # See https://learn.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu3028#retry-untrusted-root-failures
+  - name: NUGET_EXPERIMENTAL_CHAIN_BUILD_RETRY_POLICY
+    value: 3,2000
+  - ${{ each variable in parameters.variables }}:
+    # handle name-value variable syntax
+    # example:
+    # - name: [key]
+    #   value: [value]
+    - ${{ if ne(variable.name, '') }}:
+      - name: ${{ variable.name }}
+        value: ${{ variable.value }}
+
+    # handle variable groups
+    - ${{ if ne(variable.group, '') }}:
+      - group: ${{ variable.group }}
+
+    # handle template variable syntax
+    # example:
+    # - template: path/to/template.yml
+    #   parameters:
+    #     [key]: [value]
+    - ${{ if ne(variable.template, '') }}:
+      - template: ${{ variable.template }}
+        ${{ if ne(variable.parameters, '') }}:
+          parameters: ${{ variable.parameters }}
+
+    # handle key-value variable syntax.
+    # example:
+    # - [key]: [value]
+    - ${{ if and(eq(variable.name, ''), eq(variable.group, ''), eq(variable.template, '')) }}:
+      - ${{ each pair in variable }}:
+        - name: ${{ pair.key }}
+          value: ${{ pair.value }}
+
+  # DotNet-HelixApi-Access provides 'HelixApiAccessToken' for internal builds
+  - ${{ if and(eq(parameters.enableTelemetry, 'true'), eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+    - group: DotNet-HelixApi-Access
+
+  ${{ if ne(parameters.workspace, '') }}:
+    workspace: ${{ parameters.workspace }}
+
+  steps:
+  - ${{ if ne(parameters.preSteps, '') }}:
+    - ${{ each preStep in parameters.preSteps }}:
+      - ${{ preStep }}
+
+  - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+    - ${{ if eq(parameters.enableMicrobuild, 'true') }}:
+      - task: MicroBuildSigningPlugin@3
+        displayName: Install MicroBuild plugin
+        inputs:
+          signType: $(_SignType)
+          zipSources: false
+          feedSource: https://dnceng.pkgs.visualstudio.com/_packaging/MicroBuildToolset/nuget/v3/index.json
+        env:
+          TeamName: $(_TeamName)
+        continueOnError: ${{ parameters.continueOnError }}
+        condition: and(succeeded(), in(variables['_SignType'], 'real', 'test'), eq(variables['Agent.Os'], 'Windows_NT'))
+
+  - ${{ if and(eq(parameters.runAsPublic, 'false'), eq(variables['System.TeamProject'], 'internal')) }}:
+    - task: NuGetAuthenticate@1
+
+  - ${{ if and(ne(parameters.artifacts.download, 'false'), ne(parameters.artifacts.download, '')) }}:
+    - task: DownloadPipelineArtifact@2
+      inputs:
+        buildType: current
+        artifactName: ${{ coalesce(parameters.artifacts.download.name, 'Artifacts_$(Agent.OS)_$(_BuildConfig)') }}
+        targetPath: ${{ coalesce(parameters.artifacts.download.path, 'artifacts') }}
+        itemPattern: ${{ coalesce(parameters.artifacts.download.pattern, '**') }}
+
+  - ${{ each step in parameters.steps }}:
+    - ${{ step }}
+
+  - ${{ if eq(parameters.enableRichCodeNavigation, true) }}:
+    - task: RichCodeNavIndexer@0
+      displayName: RichCodeNav Upload
+      inputs:
+        languages: ${{ coalesce(parameters.richCodeNavigationLanguage, 'csharp') }}
+        environment: ${{ coalesce(parameters.richCodeNavigationEnvironment, 'production') }}
+        richNavLogOutputDirectory: $(Build.SourcesDirectory)/artifacts/bin
+        uploadRichNavArtifacts: ${{ coalesce(parameters.richCodeNavigationUploadArtifacts, false) }}
+      continueOnError: true
+
+  - template: /eng/common/templates-official/steps/component-governance.yml
+    parameters:
+      ${{ if eq(parameters.disableComponentGovernance, '') }}:
+        ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest'), eq(parameters.runAsPublic, 'false'), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/dotnet/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/microsoft/'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))) }}:
+          disableComponentGovernance: false
+        ${{ else }}:
+          disableComponentGovernance: true
+      ${{ else }}:
+        disableComponentGovernance: ${{ parameters.disableComponentGovernance }}
+      componentGovernanceIgnoreDirectories: ${{ parameters.componentGovernanceIgnoreDirectories }}
+
+  - ${{ if eq(parameters.enableMicrobuild, 'true') }}:
+    - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+      - task: MicroBuildCleanup@1
+        displayName: Execute Microbuild cleanup tasks
+        condition: and(always(), in(variables['_SignType'], 'real', 'test'), eq(variables['Agent.Os'], 'Windows_NT'))
+        continueOnError: ${{ parameters.continueOnError }}
+        env:
+          TeamName: $(_TeamName)
+
+  - ${{ if ne(parameters.artifacts.publish, '') }}:
+    - ${{ if and(ne(parameters.artifacts.publish.artifacts, 'false'), ne(parameters.artifacts.publish.artifacts, '')) }}:
+      - task: CopyFiles@2
+        displayName: Gather binaries for publish to artifacts
+        inputs:
+          SourceFolder: 'artifacts/bin'
+          Contents: '**'
+          TargetFolder: '$(Build.ArtifactStagingDirectory)/artifacts/bin'
+      - task: CopyFiles@2
+        displayName: Gather packages for publish to artifacts
+        inputs:
+          SourceFolder: 'artifacts/packages'
+          Contents: '**'
+          TargetFolder: '$(Build.ArtifactStagingDirectory)/artifacts/packages'
+      - task: 1ES.PublishBuildArtifacts@1
+        displayName: Publish pipeline artifacts
+        inputs:
+          PathtoPublish: '$(Build.ArtifactStagingDirectory)/artifacts'
+          PublishLocation: Container
+          ArtifactName: ${{ coalesce(parameters.artifacts.publish.artifacts.name , 'Artifacts_$(Agent.Os)_$(_BuildConfig)') }}
+        continueOnError: true
+        condition: always()
+    - ${{ if and(ne(parameters.artifacts.publish.logs, 'false'), ne(parameters.artifacts.publish.logs, '')) }}:
+      - publish: artifacts/log
+        artifact: ${{ coalesce(parameters.artifacts.publish.logs.name, 'Logs_Build_$(Agent.Os)_$(_BuildConfig)') }}
+        displayName: Publish logs
+        continueOnError: true
+        condition: always()
+
+  - ${{ if ne(parameters.enablePublishBuildArtifacts, 'false') }}:
+    - task: 1ES.PublishBuildArtifacts@1
+      displayName: Publish Logs
+      inputs:
+        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
+        PublishLocation: Container
+        ArtifactName: ${{ coalesce(parameters.enablePublishBuildArtifacts.artifactName, '$(Agent.Os)_$(Agent.JobName)' ) }}
+      continueOnError: true
+      condition: always()
+
+  - ${{ if or(and(eq(parameters.enablePublishTestResults, 'true'), eq(parameters.testResultsFormat, '')), eq(parameters.testResultsFormat, 'xunit')) }}:
+    - task: PublishTestResults@2
+      displayName: Publish XUnit Test Results
+      inputs:
+        testResultsFormat: 'xUnit'
+        testResultsFiles: '*.xml'
+        searchFolder: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)'
+        testRunTitle: ${{ coalesce(parameters.testRunTitle, parameters.name, '$(System.JobName)') }}-xunit
+        mergeTestResults: ${{ parameters.mergeTestResults }}
+      continueOnError: true
+      condition: always()
+  - ${{ if or(and(eq(parameters.enablePublishTestResults, 'true'), eq(parameters.testResultsFormat, '')), eq(parameters.testResultsFormat, 'vstest')) }}:
+    - task: PublishTestResults@2
+      displayName: Publish TRX Test Results
+      inputs:
+        testResultsFormat: 'VSTest'
+        testResultsFiles: '*.trx'
+        searchFolder: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)'
+        testRunTitle: ${{ coalesce(parameters.testRunTitle, parameters.name, '$(System.JobName)') }}-trx
+        mergeTestResults: ${{ parameters.mergeTestResults }}
+      continueOnError: true
+      condition: always()
+
+  - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest'), eq(parameters.enableSbom, 'true')) }}:
+    - template: /eng/common/templates-official/steps/generate-sbom.yml
+      parameters:
+        PackageVersion: ${{ parameters.packageVersion}}
+        BuildDropPath: ${{ parameters.buildDropPath }}
+        IgnoreDirectories: ${{ parameters.componentGovernanceIgnoreDirectories }}
+
+  - ${{ if eq(parameters.enableBuildRetry, 'true') }}:
+    - publish: $(Build.SourcesDirectory)\eng\common\BuildConfiguration
+      artifact: BuildConfiguration
+      displayName: Publish build retry configuration
+      continueOnError: true
diff --git a/eng/common/templates-official/job/onelocbuild.yml b/eng/common/templates-official/job/onelocbuild.yml
new file mode 100644
index 00000000000..ba9ba493032
--- /dev/null
+++ b/eng/common/templates-official/job/onelocbuild.yml
@@ -0,0 +1,112 @@
+parameters:
+  # Optional: dependencies of the job
+  dependsOn: ''
+
+  # Optional: A defined YAML pool - https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema#pool
+  pool: ''
+    
+  CeapexPat: $(dn-bot-ceapex-package-r) # PAT for the loc AzDO instance https://dev.azure.com/ceapex
+  GithubPat: $(BotAccount-dotnet-bot-repo-PAT)
+
+  SourcesDirectory: $(Build.SourcesDirectory)
+  CreatePr: true
+  AutoCompletePr: false
+  ReusePr: true
+  UseLfLineEndings: true
+  UseCheckedInLocProjectJson: false
+  SkipLocProjectJsonGeneration: false
+  LanguageSet: VS_Main_Languages
+  LclSource: lclFilesInRepo
+  LclPackageId: ''
+  RepoType: gitHub
+  GitHubOrg: dotnet
+  MirrorRepo: ''
+  MirrorBranch: main
+  condition: ''
+  JobNameSuffix: ''
+
+jobs:
+- job: OneLocBuild${{ parameters.JobNameSuffix }}
+  
+  dependsOn: ${{ parameters.dependsOn }}
+
+  displayName: OneLocBuild${{ parameters.JobNameSuffix }}
+
+  variables:
+    - group: OneLocBuildVariables # Contains the CeapexPat and GithubPat
+    - name: _GenerateLocProjectArguments
+      value: -SourcesDirectory ${{ parameters.SourcesDirectory }}
+        -LanguageSet "${{ parameters.LanguageSet }}"
+        -CreateNeutralXlfs
+    - ${{ if eq(parameters.UseCheckedInLocProjectJson, 'true') }}:
+      - name: _GenerateLocProjectArguments
+        value: ${{ variables._GenerateLocProjectArguments }} -UseCheckedInLocProjectJson
+    - template: /eng/common/templates-official/variables/pool-providers.yml
+
+  ${{ if ne(parameters.pool, '') }}:
+    pool: ${{ parameters.pool }}
+  ${{ if eq(parameters.pool, '') }}:
+    pool:
+      # We don't use the collection uri here because it might vary (.visualstudio.com vs. dev.azure.com)
+      ${{ if eq(variables['System.TeamProject'], 'DevDiv') }}:
+        name: AzurePipelines-EO
+        image: 1ESPT-Windows2022
+        demands: Cmd
+        os: windows
+      # If it's not devdiv, it's dnceng
+      ${{ if ne(variables['System.TeamProject'], 'DevDiv') }}:
+        name: $(DncEngInternalBuildPool)
+        image: 1es-windows-2022-pt
+        os: windows
+
+  steps:
+    - ${{ if ne(parameters.SkipLocProjectJsonGeneration, 'true') }}:
+      - task: Powershell@2
+        inputs:
+          filePath: $(Build.SourcesDirectory)/eng/common/generate-locproject.ps1
+          arguments: $(_GenerateLocProjectArguments)
+        displayName: Generate LocProject.json
+        condition: ${{ parameters.condition }}
+
+    - task: OneLocBuild@2
+      displayName: OneLocBuild
+      env:
+        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
+      inputs:
+        locProj: eng/Localize/LocProject.json
+        outDir: $(Build.ArtifactStagingDirectory)
+        lclSource: ${{ parameters.LclSource }}
+        lclPackageId: ${{ parameters.LclPackageId }}
+        isCreatePrSelected: ${{ parameters.CreatePr }}
+        isAutoCompletePrSelected: ${{ parameters.AutoCompletePr }}
+        ${{ if eq(parameters.CreatePr, true) }}:
+          isUseLfLineEndingsSelected: ${{ parameters.UseLfLineEndings }}
+          ${{ if eq(parameters.RepoType, 'gitHub') }}:
+            isShouldReusePrSelected: ${{ parameters.ReusePr }}
+        packageSourceAuth: patAuth
+        patVariable: ${{ parameters.CeapexPat }}
+        ${{ if eq(parameters.RepoType, 'gitHub') }}:
+          repoType: ${{ parameters.RepoType }}
+          gitHubPatVariable: "${{ parameters.GithubPat }}"
+        ${{ if ne(parameters.MirrorRepo, '') }}:
+          isMirrorRepoSelected: true
+          gitHubOrganization: ${{ parameters.GitHubOrg }}
+          mirrorRepo: ${{ parameters.MirrorRepo }}
+          mirrorBranch: ${{ parameters.MirrorBranch }}
+      condition: ${{ parameters.condition }}
+
+    - task: 1ES.PublishBuildArtifacts@1
+      displayName: Publish Localization Files
+      inputs:
+        PathtoPublish: '$(Build.ArtifactStagingDirectory)/loc'
+        PublishLocation: Container
+        ArtifactName: Loc
+      condition: ${{ parameters.condition }}
+
+    - task: 1ES.PublishBuildArtifacts@1
+      displayName: Publish LocProject.json
+      inputs:
+        PathtoPublish: '$(Build.SourcesDirectory)/eng/Localize/'
+        PublishLocation: Container
+        ArtifactName: Loc
+      condition: ${{ parameters.condition }}
\ No newline at end of file
diff --git a/eng/common/templates-official/job/publish-build-assets.yml b/eng/common/templates-official/job/publish-build-assets.yml
new file mode 100644
index 00000000000..ea5104625fa
--- /dev/null
+++ b/eng/common/templates-official/job/publish-build-assets.yml
@@ -0,0 +1,153 @@
+parameters:
+  configuration: 'Debug'
+
+  # Optional: condition for the job to run
+  condition: ''
+
+  # Optional: 'true' if future jobs should run even if this job fails
+  continueOnError: false
+
+  # Optional: dependencies of the job
+  dependsOn: ''
+
+  # Optional: Include PublishBuildArtifacts task
+  enablePublishBuildArtifacts: false
+
+  # Optional: A defined YAML pool - https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema#pool
+  pool: {}
+
+  # Optional: should run as a public build even in the internal project
+  #           if 'true', the build won't run any of the internal only steps, even if it is running in non-public projects.
+  runAsPublic: false
+
+  # Optional: whether the build's artifacts will be published using release pipelines or direct feed publishing
+  publishUsingPipelines: false
+
+  # Optional: whether the build's artifacts will be published using release pipelines or direct feed publishing
+  publishAssetsImmediately: false
+
+  artifactsPublishingAdditionalParameters: ''
+
+  signingValidationAdditionalParameters: ''
+
+jobs:
+- job: Asset_Registry_Publish
+
+  dependsOn: ${{ parameters.dependsOn }}
+  timeoutInMinutes: 150
+
+  ${{ if eq(parameters.publishAssetsImmediately, 'true') }}:
+    displayName: Publish Assets
+  ${{ else }}:
+    displayName: Publish to Build Asset Registry
+
+  variables:
+  - template: /eng/common/templates-official/variables/pool-providers.yml
+  - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+    - group: Publish-Build-Assets
+    - group: AzureDevOps-Artifact-Feeds-Pats
+    - name: runCodesignValidationInjection
+      value: false
+    - ${{ if eq(parameters.publishAssetsImmediately, 'true') }}:
+      - template: /eng/common/templates-official/post-build/common-variables.yml
+
+  pool:
+    # We don't use the collection uri here because it might vary (.visualstudio.com vs. dev.azure.com)
+    ${{ if eq(variables['System.TeamProject'], 'DevDiv') }}:
+      name: AzurePipelines-EO
+      image: 1ESPT-Windows2022
+      demands: Cmd
+      os: windows
+    # If it's not devdiv, it's dnceng
+    ${{ if ne(variables['System.TeamProject'], 'DevDiv') }}:
+      name: $(DncEngInternalBuildPool)
+      image: 1es-windows-2022-pt
+      os: windows
+  steps:
+  - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+    - task: DownloadBuildArtifacts@0
+      displayName: Download artifact
+      inputs:
+        artifactName: AssetManifests
+        downloadPath: '$(Build.StagingDirectory)/Download'
+        checkDownloadedFiles: true
+      condition: ${{ parameters.condition }}
+      continueOnError: ${{ parameters.continueOnError }}
+    
+    - task: NuGetAuthenticate@1
+
+    - task: PowerShell@2
+      displayName: Publish Build Assets
+      inputs:
+        filePath: eng\common\sdk-task.ps1
+        arguments: -task PublishBuildAssets -restore -msbuildEngine dotnet
+          /p:ManifestsPath='$(Build.StagingDirectory)/Download/AssetManifests'
+          /p:BuildAssetRegistryToken=$(MaestroAccessToken)
+          /p:MaestroApiEndpoint=https://maestro-prod.westus2.cloudapp.azure.com
+          /p:PublishUsingPipelines=${{ parameters.publishUsingPipelines }}
+          /p:OfficialBuildId=$(Build.BuildNumber)
+      condition: ${{ parameters.condition }}
+      continueOnError: ${{ parameters.continueOnError }}
+    
+    - task: powershell@2
+      displayName: Create ReleaseConfigs Artifact
+      inputs:
+        targetType: inline
+        script: |
+          Add-Content -Path "$(Build.StagingDirectory)/ReleaseConfigs.txt" -Value $(BARBuildId)
+          Add-Content -Path "$(Build.StagingDirectory)/ReleaseConfigs.txt" -Value "$(DefaultChannels)"
+          Add-Content -Path "$(Build.StagingDirectory)/ReleaseConfigs.txt" -Value $(IsStableBuild)
+    
+    - task: 1ES.PublishBuildArtifacts@1
+      displayName: Publish ReleaseConfigs Artifact
+      inputs:
+        PathtoPublish: '$(Build.StagingDirectory)/ReleaseConfigs.txt'
+        PublishLocation: Container
+        ArtifactName: ReleaseConfigs
+
+    - task: powershell@2
+      displayName: Check if SymbolPublishingExclusionsFile.txt exists
+      inputs:
+        targetType: inline
+        script: |
+          $symbolExclusionfile = "$(Build.SourcesDirectory)/eng/SymbolPublishingExclusionsFile.txt"
+          if(Test-Path -Path $symbolExclusionfile)
+          {
+            Write-Host "SymbolExclusionFile exists"
+            Write-Host "##vso[task.setvariable variable=SymbolExclusionFile]true"
+          }
+          else{
+           Write-Host "Symbols Exclusion file does not exists"
+           Write-Host "##vso[task.setvariable variable=SymbolExclusionFile]false"
+          }
+
+    - task: 1ES.PublishBuildArtifacts@1
+      displayName: Publish SymbolPublishingExclusionsFile Artifact
+      condition: eq(variables['SymbolExclusionFile'], 'true') 
+      inputs:
+        PathtoPublish: '$(Build.SourcesDirectory)/eng/SymbolPublishingExclusionsFile.txt'
+        PublishLocation: Container
+        ArtifactName: ReleaseConfigs
+
+    - ${{ if eq(parameters.publishAssetsImmediately, 'true') }}:
+      - template: /eng/common/templates-official/post-build/setup-maestro-vars.yml
+        parameters:
+          BARBuildId: ${{ parameters.BARBuildId }}
+          PromoteToChannelIds: ${{ parameters.PromoteToChannelIds }}
+
+      - task: PowerShell@2
+        displayName: Publish Using Darc
+        inputs:
+          filePath: $(Build.SourcesDirectory)/eng/common/post-build/publish-using-darc.ps1
+          arguments: -BuildId $(BARBuildId) 
+            -PublishingInfraVersion 3
+            -AzdoToken '$(publishing-dnceng-devdiv-code-r-build-re)'
+            -MaestroToken '$(MaestroApiAccessToken)'
+            -WaitPublishingFinish true
+            -ArtifactsPublishingAdditionalParameters '${{ parameters.artifactsPublishingAdditionalParameters }}'
+            -SymbolPublishingAdditionalParameters '${{ parameters.symbolPublishingAdditionalParameters }}'
+
+    - ${{ if eq(parameters.enablePublishBuildArtifacts, 'true') }}:
+      - template: /eng/common/templates-official/steps/publish-logs.yml
+        parameters:
+          JobLabel: 'Publish_Artifacts_Logs'     
diff --git a/eng/common/templates-official/job/source-build.yml b/eng/common/templates-official/job/source-build.yml
new file mode 100644
index 00000000000..8aba3b44bb2
--- /dev/null
+++ b/eng/common/templates-official/job/source-build.yml
@@ -0,0 +1,67 @@
+parameters:
+  # This template adds arcade-powered source-build to CI. The template produces a server job with a
+  # default ID 'Source_Build_Complete' to put in a dependency list if necessary.
+
+  # Specifies the prefix for source-build jobs added to pipeline. Use this if disambiguation needed.
+  jobNamePrefix: 'Source_Build'
+
+  # Defines the platform on which to run the job. By default, a linux-x64 machine, suitable for
+  # managed-only repositories. This is an object with these properties:
+  #
+  # name: ''
+  #   The name of the job. This is included in the job ID.
+  # targetRID: ''
+  #   The name of the target RID to use, instead of the one auto-detected by Arcade.
+  # nonPortable: false
+  #   Enables non-portable mode. This means a more specific RID (e.g. fedora.32-x64 rather than
+  #   linux-x64), and compiling against distro-provided packages rather than portable ones.
+  # skipPublishValidation: false
+  #   Disables publishing validation.  By default, a check is performed to ensure no packages are
+  #   published by source-build.
+  # container: ''
+  #   A container to use. Runs in docker.
+  # pool: {}
+  #   A pool to use. Runs directly on an agent.
+  # buildScript: ''
+  #   Specifies the build script to invoke to perform the build in the repo. The default
+  #   './build.sh' should work for typical Arcade repositories, but this is customizable for
+  #   difficult situations.
+  # jobProperties: {}
+  #   A list of job properties to inject at the top level, for potential extensibility beyond
+  #   container and pool.
+  platform: {}
+
+jobs:
+- job: ${{ parameters.jobNamePrefix }}_${{ parameters.platform.name }}
+  displayName: Source-Build (${{ parameters.platform.name }})
+
+  ${{ each property in parameters.platform.jobProperties }}:
+    ${{ property.key }}: ${{ property.value }}
+
+  ${{ if ne(parameters.platform.container, '') }}:
+    container: ${{ parameters.platform.container }}
+
+  ${{ if eq(parameters.platform.pool, '') }}:
+    # The default VM host AzDO pool. This should be capable of running Docker containers: almost all
+    # source-build builds run in Docker, including the default managed platform.
+    # /eng/common/templates-official/variables/pool-providers.yml can't be used here (some customers declare variables already), so duplicate its logic
+    pool:
+      ${{ if eq(variables['System.TeamProject'], 'public') }}:
+        name: $[replace(replace(eq(contains(coalesce(variables['System.PullRequest.TargetBranch'], variables['Build.SourceBranch'], 'refs/heads/main'), 'release'), 'true'), True, 'NetCore-Svc-Public' ), False, 'NetCore-Public')]
+        demands: ImageOverride -equals Build.Ubuntu.1804.Amd64.Open
+
+      ${{ if eq(variables['System.TeamProject'], 'internal') }}:
+        name: $[replace(replace(eq(contains(coalesce(variables['System.PullRequest.TargetBranch'], variables['Build.SourceBranch'], 'refs/heads/main'), 'release'), 'true'), True, 'NetCore1ESPool-Svc-Internal'), False, 'NetCore1ESPool-Internal')]
+        image: 1es-mariner-2-pt
+        os: linux
+
+  ${{ if ne(parameters.platform.pool, '') }}:
+    pool: ${{ parameters.platform.pool }}
+
+  workspace:
+    clean: all
+
+  steps:
+  - template: /eng/common/templates-official/steps/source-build.yml
+    parameters:
+      platform: ${{ parameters.platform }}
diff --git a/eng/common/templates-official/job/source-index-stage1.yml b/eng/common/templates-official/job/source-index-stage1.yml
new file mode 100644
index 00000000000..4b633739170
--- /dev/null
+++ b/eng/common/templates-official/job/source-index-stage1.yml
@@ -0,0 +1,68 @@
+parameters:
+  runAsPublic: false
+  sourceIndexPackageVersion: 1.0.1-20230228.2
+  sourceIndexPackageSource: https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json
+  sourceIndexBuildCommand: powershell -NoLogo -NoProfile -ExecutionPolicy Bypass -Command "eng/common/build.ps1 -restore -build -binarylog -ci"
+  preSteps: []
+  binlogPath: artifacts/log/Debug/Build.binlog
+  condition: ''
+  dependsOn: ''
+  pool: ''
+
+jobs:
+- job: SourceIndexStage1
+  dependsOn: ${{ parameters.dependsOn }}
+  condition: ${{ parameters.condition }}
+  variables:
+  - name: SourceIndexPackageVersion
+    value: ${{ parameters.sourceIndexPackageVersion }}
+  - name: SourceIndexPackageSource
+    value: ${{ parameters.sourceIndexPackageSource }}
+  - name: BinlogPath
+    value: ${{ parameters.binlogPath }}
+  - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+    - group: source-dot-net stage1 variables
+  - template: /eng/common/templates-official/variables/pool-providers.yml
+
+  ${{ if ne(parameters.pool, '') }}:
+    pool: ${{ parameters.pool }}
+  ${{ if eq(parameters.pool, '') }}:
+    pool:
+      ${{ if eq(variables['System.TeamProject'], 'public') }}:
+        name: $(DncEngPublicBuildPool)
+        demands: ImageOverride -equals windows.vs2019.amd64.open
+      ${{ if eq(variables['System.TeamProject'], 'internal') }}:
+        name: $(DncEngInternalBuildPool)
+        image: 1es-windows-2022-pt
+        os: windows
+
+  steps:
+  - ${{ each preStep in parameters.preSteps }}:
+    - ${{ preStep }}
+
+  - task: UseDotNet@2
+    displayName: Use .NET Core SDK 6
+    inputs:
+      packageType: sdk
+      version: 6.0.x
+      installationPath: $(Agent.TempDirectory)/dotnet
+      workingDirectory: $(Agent.TempDirectory)
+
+  - script: |
+      $(Agent.TempDirectory)/dotnet/dotnet tool install BinLogToSln --version $(SourceIndexPackageVersion) --add-source $(SourceIndexPackageSource) --tool-path $(Agent.TempDirectory)/.source-index/tools
+      $(Agent.TempDirectory)/dotnet/dotnet tool install UploadIndexStage1 --version $(SourceIndexPackageVersion) --add-source $(SourceIndexPackageSource) --tool-path $(Agent.TempDirectory)/.source-index/tools
+    displayName: Download Tools
+    # Set working directory to temp directory so 'dotnet' doesn't try to use global.json and use the repo's sdk.
+    workingDirectory: $(Agent.TempDirectory)
+
+  - script: ${{ parameters.sourceIndexBuildCommand }}
+    displayName: Build Repository
+
+  - script: $(Agent.TempDirectory)/.source-index/tools/BinLogToSln -i $(BinlogPath) -r $(Build.SourcesDirectory) -n $(Build.Repository.Name) -o .source-index/stage1output
+    displayName: Process Binlog into indexable sln
+
+  - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+    - script: $(Agent.TempDirectory)/.source-index/tools/UploadIndexStage1 -i .source-index/stage1output -n $(Build.Repository.Name)
+      displayName: Upload stage1 artifacts to source index
+      env:
+        BLOB_CONTAINER_URL: $(source-dot-net-stage1-blob-container-url)
diff --git a/eng/common/templates-official/jobs/codeql-build.yml b/eng/common/templates-official/jobs/codeql-build.yml
new file mode 100644
index 00000000000..b68d3c2f319
--- /dev/null
+++ b/eng/common/templates-official/jobs/codeql-build.yml
@@ -0,0 +1,31 @@
+parameters:
+  # See schema documentation in /Documentation/AzureDevOps/TemplateSchema.md
+  continueOnError: false
+  # Required: A collection of jobs to run - https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema#job
+  jobs: []
+  # Optional: if specified, restore and use this version of Guardian instead of the default.
+  overrideGuardianVersion: ''
+
+jobs:
+- template: /eng/common/templates-official/jobs/jobs.yml
+  parameters:
+    enableMicrobuild: false
+    enablePublishBuildArtifacts: false
+    enablePublishTestResults: false
+    enablePublishBuildAssets: false
+    enablePublishUsingPipelines: false
+    enableTelemetry: true
+
+    variables:
+      - group: Publish-Build-Assets
+      # The Guardian version specified in 'eng/common/sdl/packages.config'. This value must be kept in
+      # sync with the packages.config file.
+      - name: DefaultGuardianVersion
+        value: 0.109.0
+      - name: GuardianPackagesConfigFile
+        value: $(Build.SourcesDirectory)\eng\common\sdl\packages.config
+      - name: GuardianVersion
+        value: ${{ coalesce(parameters.overrideGuardianVersion, '$(DefaultGuardianVersion)') }}
+  
+    jobs: ${{ parameters.jobs }}
+        
diff --git a/eng/common/templates-official/jobs/jobs.yml b/eng/common/templates-official/jobs/jobs.yml
new file mode 100644
index 00000000000..857a0f8ba43
--- /dev/null
+++ b/eng/common/templates-official/jobs/jobs.yml
@@ -0,0 +1,97 @@
+parameters:
+  # See schema documentation in /Documentation/AzureDevOps/TemplateSchema.md
+  continueOnError: false
+
+  # Optional: Include PublishBuildArtifacts task
+  enablePublishBuildArtifacts: false
+
+  # Optional: Enable publishing using release pipelines
+  enablePublishUsingPipelines: false
+
+  # Optional: Enable running the source-build jobs to build repo from source
+  enableSourceBuild: false
+
+  # Optional: Parameters for source-build template.
+  #           See /eng/common/templates-official/jobs/source-build.yml for options
+  sourceBuildParameters: []
+
+  graphFileGeneration:
+    # Optional: Enable generating the graph files at the end of the build
+    enabled: false
+    # Optional: Include toolset dependencies in the generated graph files
+    includeToolset: false
+    
+  # Required: A collection of jobs to run - https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema#job
+  jobs: []
+
+  # Optional: Override automatically derived dependsOn value for "publish build assets" job
+  publishBuildAssetsDependsOn: ''
+
+  # Optional: Publish the assets as soon as the publish to BAR stage is complete, rather doing so in a separate stage.
+  publishAssetsImmediately: false
+
+  # Optional: If using publishAssetsImmediately and additional parameters are needed, can be used to send along additional parameters (normally sent to post-build.yml)
+  artifactsPublishingAdditionalParameters: ''
+  signingValidationAdditionalParameters: ''
+
+  # Optional: should run as a public build even in the internal project
+  #           if 'true', the build won't run any of the internal only steps, even if it is running in non-public projects.
+  runAsPublic: false
+
+  enableSourceIndex: false
+  sourceIndexParams: {}
+
+# Internal resources (telemetry, microbuild) can only be accessed from non-public projects,
+# and some (Microbuild) should only be applied to non-PR cases for internal builds.
+
+jobs:
+- ${{ each job in parameters.jobs }}:
+  - template: ../job/job.yml
+    parameters: 
+      # pass along parameters
+      ${{ each parameter in parameters }}:
+        ${{ if ne(parameter.key, 'jobs') }}:
+          ${{ parameter.key }}: ${{ parameter.value }}
+
+      # pass along job properties
+      ${{ each property in job }}:
+        ${{ if ne(property.key, 'job') }}:
+          ${{ property.key }}: ${{ property.value }}
+
+      name: ${{ job.job }}
+
+- ${{ if eq(parameters.enableSourceBuild, true) }}:
+  - template: /eng/common/templates-official/jobs/source-build.yml
+    parameters:
+      allCompletedJobId: Source_Build_Complete
+      ${{ each parameter in parameters.sourceBuildParameters }}:
+        ${{ parameter.key }}: ${{ parameter.value }}
+
+- ${{ if eq(parameters.enableSourceIndex, 'true') }}:
+  - template: ../job/source-index-stage1.yml
+    parameters:
+      runAsPublic: ${{ parameters.runAsPublic }}
+      ${{ each parameter in parameters.sourceIndexParams }}:
+        ${{ parameter.key }}: ${{ parameter.value }}
+
+- ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+  - ${{ if or(eq(parameters.enablePublishBuildAssets, true), eq(parameters.artifacts.publish.manifests, 'true'), ne(parameters.artifacts.publish.manifests, '')) }}:
+    - template: ../job/publish-build-assets.yml
+      parameters:
+        continueOnError: ${{ parameters.continueOnError }}
+        dependsOn:
+        - ${{ if ne(parameters.publishBuildAssetsDependsOn, '') }}:
+          - ${{ each job in parameters.publishBuildAssetsDependsOn }}:
+            - ${{ job.job }}
+        - ${{ if eq(parameters.publishBuildAssetsDependsOn, '') }}:
+          - ${{ each job in parameters.jobs }}:
+            - ${{ job.job }}
+        - ${{ if eq(parameters.enableSourceBuild, true) }}:
+          - Source_Build_Complete
+
+        runAsPublic: ${{ parameters.runAsPublic }}
+        publishUsingPipelines: ${{ parameters.enablePublishUsingPipelines }}
+        publishAssetsImmediately: ${{ parameters.publishAssetsImmediately }}
+        enablePublishBuildArtifacts: ${{ parameters.enablePublishBuildArtifacts }}
+        artifactsPublishingAdditionalParameters: ${{ parameters.artifactsPublishingAdditionalParameters }}
+        signingValidationAdditionalParameters: ${{ parameters.signingValidationAdditionalParameters }}
diff --git a/eng/common/templates-official/jobs/source-build.yml b/eng/common/templates-official/jobs/source-build.yml
new file mode 100644
index 00000000000..08e5db9bb11
--- /dev/null
+++ b/eng/common/templates-official/jobs/source-build.yml
@@ -0,0 +1,46 @@
+parameters:
+  # This template adds arcade-powered source-build to CI. A job is created for each platform, as
+  # well as an optional server job that completes when all platform jobs complete.
+
+  # The name of the "join" job for all source-build platforms. If set to empty string, the job is
+  # not included. Existing repo pipelines can use this job depend on all source-build jobs
+  # completing without maintaining a separate list of every single job ID: just depend on this one
+  # server job. By default, not included. Recommended name if used: 'Source_Build_Complete'.
+  allCompletedJobId: ''
+
+  # See /eng/common/templates-official/job/source-build.yml
+  jobNamePrefix: 'Source_Build'
+
+  # This is the default platform provided by Arcade, intended for use by a managed-only repo.
+  defaultManagedPlatform:
+    name: 'Managed'
+    container: 'mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream8'
+
+  # Defines the platforms on which to run build jobs. One job is created for each platform, and the
+  # object in this array is sent to the job template as 'platform'. If no platforms are specified,
+  # one job runs on 'defaultManagedPlatform'.
+  platforms: []
+
+jobs:
+
+- ${{ if ne(parameters.allCompletedJobId, '') }}:
+  - job: ${{ parameters.allCompletedJobId }}
+    displayName: Source-Build Complete
+    pool: server
+    dependsOn:
+    - ${{ each platform in parameters.platforms }}:
+      - ${{ parameters.jobNamePrefix }}_${{ platform.name }}
+    - ${{ if eq(length(parameters.platforms), 0) }}:
+      - ${{ parameters.jobNamePrefix }}_${{ parameters.defaultManagedPlatform.name }}
+
+- ${{ each platform in parameters.platforms }}:
+  - template: /eng/common/templates-official/job/source-build.yml
+    parameters:
+      jobNamePrefix: ${{ parameters.jobNamePrefix }}
+      platform: ${{ platform }}
+
+- ${{ if eq(length(parameters.platforms), 0) }}:
+  - template: /eng/common/templates-official/job/source-build.yml
+    parameters:
+      jobNamePrefix: ${{ parameters.jobNamePrefix }}
+      platform: ${{ parameters.defaultManagedPlatform }}
diff --git a/eng/common/templates-official/post-build/common-variables.yml b/eng/common/templates-official/post-build/common-variables.yml
new file mode 100644
index 00000000000..c24193acfc9
--- /dev/null
+++ b/eng/common/templates-official/post-build/common-variables.yml
@@ -0,0 +1,22 @@
+variables:
+  - group: Publish-Build-Assets
+
+  # Whether the build is internal or not
+  - name: IsInternalBuild
+    value: ${{ and(ne(variables['System.TeamProject'], 'public'), contains(variables['Build.SourceBranch'], 'internal')) }}
+
+  # Default Maestro++ API Endpoint and API Version
+  - name: MaestroApiEndPoint
+    value: "https://maestro-prod.westus2.cloudapp.azure.com"
+  - name: MaestroApiAccessToken
+    value: $(MaestroAccessToken)
+  - name: MaestroApiVersion
+    value: "2020-02-20"
+
+  - name: SourceLinkCLIVersion
+    value: 3.0.0
+  - name: SymbolToolVersion
+    value: 1.0.1
+
+  - name: runCodesignValidationInjection
+    value: false
diff --git a/eng/common/templates-official/post-build/post-build.yml b/eng/common/templates-official/post-build/post-build.yml
new file mode 100644
index 00000000000..5c98fe1c0f3
--- /dev/null
+++ b/eng/common/templates-official/post-build/post-build.yml
@@ -0,0 +1,285 @@
+parameters:
+  # Which publishing infra should be used. THIS SHOULD MATCH THE VERSION ON THE BUILD MANIFEST.
+  # Publishing V1 is no longer supported
+  # Publishing V2 is no longer supported
+  # Publishing V3 is the default
+  - name: publishingInfraVersion
+    displayName: Which version of publishing should be used to promote the build definition?
+    type: number
+    default: 3
+    values:
+    - 3
+
+  - name: BARBuildId
+    displayName: BAR Build Id
+    type: number
+    default: 0
+
+  - name: PromoteToChannelIds
+    displayName: Channel to promote BARBuildId to
+    type: string
+    default: ''
+
+  - name: enableSourceLinkValidation
+    displayName: Enable SourceLink validation
+    type: boolean
+    default: false
+
+  - name: enableSigningValidation
+    displayName: Enable signing validation
+    type: boolean
+    default: true
+
+  - name: enableSymbolValidation
+    displayName: Enable symbol validation
+    type: boolean
+    default: false
+
+  - name: enableNugetValidation
+    displayName: Enable NuGet validation
+    type: boolean
+    default: true
+    
+  - name: publishInstallersAndChecksums
+    displayName: Publish installers and checksums
+    type: boolean
+    default: true
+
+  - name: SDLValidationParameters
+    type: object
+    default:
+      enable: false
+      publishGdn: false
+      continueOnError: false
+      params: ''
+      artifactNames: ''
+      downloadArtifacts: true
+
+  # These parameters let the user customize the call to sdk-task.ps1 for publishing
+  # symbols & general artifacts as well as for signing validation
+  - name: symbolPublishingAdditionalParameters
+    displayName: Symbol publishing additional parameters
+    type: string
+    default: ''
+
+  - name: artifactsPublishingAdditionalParameters
+    displayName: Artifact publishing additional parameters
+    type: string
+    default: ''
+
+  - name: signingValidationAdditionalParameters
+    displayName: Signing validation additional parameters
+    type: string
+    default: ''
+
+  # Which stages should finish execution before post-build stages start
+  - name: validateDependsOn
+    type: object
+    default:
+    - build
+
+  - name: publishDependsOn
+    type: object
+    default:
+    - Validate
+
+  # Optional: Call asset publishing rather than running in a separate stage
+  - name: publishAssetsImmediately
+    type: boolean
+    default: false
+
+stages:
+- ${{ if or(eq( parameters.enableNugetValidation, 'true'), eq(parameters.enableSigningValidation, 'true'), eq(parameters.enableSourceLinkValidation, 'true'), eq(parameters.SDLValidationParameters.enable, 'true')) }}:
+  - stage: Validate
+    dependsOn: ${{ parameters.validateDependsOn }}
+    displayName: Validate Build Assets
+    variables:
+      - template: common-variables.yml
+      - template: /eng/common/templates-official/variables/pool-providers.yml
+    jobs:
+    - job:
+      displayName: NuGet Validation
+      condition: and(succeededOrFailed(), eq( ${{ parameters.enableNugetValidation }}, 'true'))
+      pool:
+        # We don't use the collection uri here because it might vary (.visualstudio.com vs. dev.azure.com)
+        ${{ if eq(variables['System.TeamProject'], 'DevDiv') }}:
+          name: AzurePipelines-EO
+          image: 1ESPT-Windows2022
+          demands: Cmd
+          os: windows
+        # If it's not devdiv, it's dnceng
+        ${{ else }}:
+          name: $(DncEngInternalBuildPool)
+          image: 1es-windows-2022-pt
+          os: windows
+
+      steps:
+        - template: setup-maestro-vars.yml
+          parameters:
+            BARBuildId: ${{ parameters.BARBuildId }}
+            PromoteToChannelIds: ${{ parameters.PromoteToChannelIds }}
+
+        - task: DownloadBuildArtifacts@0
+          displayName: Download Package Artifacts
+          inputs:
+            buildType: specific
+            buildVersionToDownload: specific
+            project: $(AzDOProjectName)
+            pipeline: $(AzDOPipelineId)
+            buildId: $(AzDOBuildId)
+            artifactName: PackageArtifacts
+            checkDownloadedFiles: true
+
+        - task: PowerShell@2
+          displayName: Validate
+          inputs:
+            filePath: $(Build.SourcesDirectory)/eng/common/post-build/nuget-validation.ps1
+            arguments: -PackagesPath $(Build.ArtifactStagingDirectory)/PackageArtifacts/ 
+              -ToolDestinationPath $(Agent.BuildDirectory)/Extract/ 
+
+    - job:
+      displayName: Signing Validation
+      condition: and( eq( ${{ parameters.enableSigningValidation }}, 'true'), ne( variables['PostBuildSign'], 'true'))
+      pool:
+        # We don't use the collection uri here because it might vary (.visualstudio.com vs. dev.azure.com)
+        ${{ if eq(variables['System.TeamProject'], 'DevDiv') }}:
+          name: AzurePipelines-EO
+          image: 1ESPT-Windows2022
+          demands: Cmd
+          os: windows
+        # If it's not devdiv, it's dnceng
+        ${{ else }}:
+          name: $(DncEngInternalBuildPool)
+          image: 1es-windows-2022-pt
+          os: windows
+      steps:
+        - template: setup-maestro-vars.yml
+          parameters:
+            BARBuildId: ${{ parameters.BARBuildId }}
+            PromoteToChannelIds: ${{ parameters.PromoteToChannelIds }}
+
+        - task: DownloadBuildArtifacts@0
+          displayName: Download Package Artifacts
+          inputs:
+            buildType: specific
+            buildVersionToDownload: specific
+            project: $(AzDOProjectName)
+            pipeline: $(AzDOPipelineId)
+            buildId: $(AzDOBuildId)
+            artifactName: PackageArtifacts
+            checkDownloadedFiles: true
+            itemPattern: |
+              **
+              !**/Microsoft.SourceBuild.Intermediate.*.nupkg
+
+        # This is necessary whenever we want to publish/restore to an AzDO private feed
+        # Since sdk-task.ps1 tries to restore packages we need to do this authentication here
+        # otherwise it'll complain about accessing a private feed.
+        - task: NuGetAuthenticate@1
+          displayName: 'Authenticate to AzDO Feeds'
+
+        # Signing validation will optionally work with the buildmanifest file which is downloaded from
+        # Azure DevOps above.
+        - task: PowerShell@2
+          displayName: Validate
+          inputs:
+            filePath: eng\common\sdk-task.ps1
+            arguments: -task SigningValidation -restore -msbuildEngine vs
+              /p:PackageBasePath='$(Build.ArtifactStagingDirectory)/PackageArtifacts'
+              /p:SignCheckExclusionsFile='$(Build.SourcesDirectory)/eng/SignCheckExclusionsFile.txt'
+              ${{ parameters.signingValidationAdditionalParameters }}
+
+        - template: ../steps/publish-logs.yml
+          parameters:
+            StageLabel: 'Validation'
+            JobLabel: 'Signing'
+            BinlogToolVersion: $(BinlogToolVersion)
+
+    - job:
+      displayName: SourceLink Validation
+      condition: eq( ${{ parameters.enableSourceLinkValidation }}, 'true')
+      pool:
+        # We don't use the collection uri here because it might vary (.visualstudio.com vs. dev.azure.com)
+        ${{ if eq(variables['System.TeamProject'], 'DevDiv') }}:
+          name: AzurePipelines-EO
+          image: 1ESPT-Windows2022
+          demands: Cmd
+          os: windows
+        # If it's not devdiv, it's dnceng
+        ${{ else }}:
+          name: $(DncEngInternalBuildPool)
+          image: 1es-windows-2022-pt
+          os: windows
+      steps:
+        - template: setup-maestro-vars.yml
+          parameters:
+            BARBuildId: ${{ parameters.BARBuildId }}
+            PromoteToChannelIds: ${{ parameters.PromoteToChannelIds }}
+
+        - task: DownloadBuildArtifacts@0
+          displayName: Download Blob Artifacts
+          inputs:
+            buildType: specific
+            buildVersionToDownload: specific
+            project: $(AzDOProjectName)
+            pipeline: $(AzDOPipelineId)
+            buildId: $(AzDOBuildId)
+            artifactName: BlobArtifacts
+            checkDownloadedFiles: true
+
+        - task: PowerShell@2
+          displayName: Validate
+          inputs:
+            filePath: $(Build.SourcesDirectory)/eng/common/post-build/sourcelink-validation.ps1
+            arguments: -InputPath $(Build.ArtifactStagingDirectory)/BlobArtifacts/ 
+              -ExtractPath $(Agent.BuildDirectory)/Extract/ 
+              -GHRepoName $(Build.Repository.Name) 
+              -GHCommit $(Build.SourceVersion)
+              -SourcelinkCliVersion $(SourceLinkCLIVersion)
+          continueOnError: true
+
+- ${{ if ne(parameters.publishAssetsImmediately, 'true') }}:
+  - stage: publish_using_darc
+    ${{ if or(eq(parameters.enableNugetValidation, 'true'), eq(parameters.enableSigningValidation, 'true'), eq(parameters.enableSourceLinkValidation, 'true'), eq(parameters.SDLValidationParameters.enable, 'true')) }}:
+      dependsOn: ${{ parameters.publishDependsOn }}
+    ${{ else }}:
+      dependsOn: ${{ parameters.validateDependsOn }}
+    displayName: Publish using Darc
+    variables:
+      - template: common-variables.yml
+      - template: /eng/common/templates-official/variables/pool-providers.yml
+    jobs:
+    - job:
+      displayName: Publish Using Darc
+      timeoutInMinutes: 120
+      pool:
+        # We don't use the collection uri here because it might vary (.visualstudio.com vs. dev.azure.com)
+        ${{ if eq(variables['System.TeamProject'], 'DevDiv') }}:
+          name: AzurePipelines-EO
+          image: 1ESPT-Windows2022
+          demands: Cmd
+          os: windows
+        # If it's not devdiv, it's dnceng
+        ${{ else }}:
+          name: $(DncEngInternalBuildPool)
+          image: 1es-windows-2022-pt
+          os: windows
+      steps:
+        - template: setup-maestro-vars.yml
+          parameters:
+            BARBuildId: ${{ parameters.BARBuildId }}
+            PromoteToChannelIds: ${{ parameters.PromoteToChannelIds }}
+
+        - task: NuGetAuthenticate@1
+
+        - task: PowerShell@2
+          displayName: Publish Using Darc
+          inputs:
+            filePath: $(Build.SourcesDirectory)/eng/common/post-build/publish-using-darc.ps1
+            arguments: -BuildId $(BARBuildId) 
+              -PublishingInfraVersion ${{ parameters.publishingInfraVersion }}
+              -AzdoToken '$(publishing-dnceng-devdiv-code-r-build-re)'
+              -MaestroToken '$(MaestroApiAccessToken)'
+              -WaitPublishingFinish true
+              -ArtifactsPublishingAdditionalParameters '${{ parameters.artifactsPublishingAdditionalParameters }}'
+              -SymbolPublishingAdditionalParameters '${{ parameters.symbolPublishingAdditionalParameters }}'
diff --git a/eng/common/templates-official/post-build/setup-maestro-vars.yml b/eng/common/templates-official/post-build/setup-maestro-vars.yml
new file mode 100644
index 00000000000..0c87f149a4a
--- /dev/null
+++ b/eng/common/templates-official/post-build/setup-maestro-vars.yml
@@ -0,0 +1,70 @@
+parameters:
+  BARBuildId: ''
+  PromoteToChannelIds: ''
+
+steps:
+  - ${{ if eq(coalesce(parameters.PromoteToChannelIds, 0), 0) }}:
+    - task: DownloadBuildArtifacts@0
+      displayName: Download Release Configs
+      inputs:
+        buildType: current
+        artifactName: ReleaseConfigs
+        checkDownloadedFiles: true
+
+  - task: PowerShell@2
+    name: setReleaseVars
+    displayName: Set Release Configs Vars
+    inputs:
+      targetType: inline
+      pwsh: true
+      script: |
+        try {
+          if (!$Env:PromoteToMaestroChannels -or $Env:PromoteToMaestroChannels.Trim() -eq '') {
+            $Content = Get-Content $(Build.StagingDirectory)/ReleaseConfigs/ReleaseConfigs.txt
+
+            $BarId = $Content | Select -Index 0
+            $Channels = $Content | Select -Index 1             
+            $IsStableBuild = $Content | Select -Index 2
+
+            $AzureDevOpsProject = $Env:System_TeamProject
+            $AzureDevOpsBuildDefinitionId = $Env:System_DefinitionId
+            $AzureDevOpsBuildId = $Env:Build_BuildId
+          }
+          else {
+            $buildApiEndpoint = "${Env:MaestroApiEndPoint}/api/builds/${Env:BARBuildId}?api-version=${Env:MaestroApiVersion}"
+
+            $apiHeaders = New-Object 'System.Collections.Generic.Dictionary[[String],[String]]'
+            $apiHeaders.Add('Accept', 'application/json')
+            $apiHeaders.Add('Authorization',"Bearer ${Env:MAESTRO_API_TOKEN}")
+
+            $buildInfo = try { Invoke-WebRequest -Method Get -Uri $buildApiEndpoint -Headers $apiHeaders | ConvertFrom-Json } catch { Write-Host "Error: $_" }
+            
+            $BarId = $Env:BARBuildId
+            $Channels = $Env:PromoteToMaestroChannels -split ","
+            $Channels = $Channels -join "]["
+            $Channels = "[$Channels]"
+
+            $IsStableBuild = $buildInfo.stable
+            $AzureDevOpsProject = $buildInfo.azureDevOpsProject
+            $AzureDevOpsBuildDefinitionId = $buildInfo.azureDevOpsBuildDefinitionId
+            $AzureDevOpsBuildId = $buildInfo.azureDevOpsBuildId
+          }
+
+          Write-Host "##vso[task.setvariable variable=BARBuildId]$BarId"
+          Write-Host "##vso[task.setvariable variable=TargetChannels]$Channels"
+          Write-Host "##vso[task.setvariable variable=IsStableBuild]$IsStableBuild"
+
+          Write-Host "##vso[task.setvariable variable=AzDOProjectName]$AzureDevOpsProject"
+          Write-Host "##vso[task.setvariable variable=AzDOPipelineId]$AzureDevOpsBuildDefinitionId"
+          Write-Host "##vso[task.setvariable variable=AzDOBuildId]$AzureDevOpsBuildId"
+        }
+        catch {
+          Write-Host $_
+          Write-Host $_.Exception
+          Write-Host $_.ScriptStackTrace
+          exit 1
+        }
+    env:
+      MAESTRO_API_TOKEN: $(MaestroApiAccessToken)
+      BARBuildId: ${{ parameters.BARBuildId }}
+      PromoteToMaestroChannels: ${{ parameters.PromoteToChannelIds }}
diff --git a/eng/common/templates-official/post-build/trigger-subscription.yml b/eng/common/templates-official/post-build/trigger-subscription.yml
new file mode 100644
index 00000000000..da669030daf
--- /dev/null
+++ b/eng/common/templates-official/post-build/trigger-subscription.yml
@@ -0,0 +1,13 @@
+parameters:
+  ChannelId: 0
+
+steps:
+- task: PowerShell@2
+  displayName: Triggering subscriptions
+  inputs:
+    filePath: $(Build.SourcesDirectory)/eng/common/post-build/trigger-subscriptions.ps1
+    arguments: -SourceRepo $(Build.Repository.Uri)
+      -ChannelId ${{ parameters.ChannelId }}
+      -MaestroApiAccessToken $(MaestroAccessToken)
+      -MaestroApiEndPoint $(MaestroApiEndPoint)
+      -MaestroApiVersion $(MaestroApiVersion)
diff --git a/eng/common/templates-official/steps/add-build-to-channel.yml b/eng/common/templates-official/steps/add-build-to-channel.yml
new file mode 100644
index 00000000000..f67a210d62f
--- /dev/null
+++ b/eng/common/templates-official/steps/add-build-to-channel.yml
@@ -0,0 +1,13 @@
+parameters:
+  ChannelId: 0
+
+steps:
+- task: PowerShell@2
+  displayName: Add Build to Channel
+  inputs:
+    filePath: $(Build.SourcesDirectory)/eng/common/post-build/add-build-to-channel.ps1
+    arguments: -BuildId $(BARBuildId) 
+      -ChannelId ${{ parameters.ChannelId }}
+      -MaestroApiAccessToken $(MaestroApiAccessToken)
+      -MaestroApiEndPoint $(MaestroApiEndPoint)
+      -MaestroApiVersion $(MaestroApiVersion) 
diff --git a/eng/common/templates-official/steps/build-reason.yml b/eng/common/templates-official/steps/build-reason.yml
new file mode 100644
index 00000000000..eba58109b52
--- /dev/null
+++ b/eng/common/templates-official/steps/build-reason.yml
@@ -0,0 +1,12 @@
+# build-reason.yml
+# Description: runs steps if build.reason condition is valid.  conditions is a string of valid build reasons 
+# to include steps (',' separated).
+parameters:
+  conditions: ''
+  steps: []
+
+steps:
+  - ${{ if and( not(startsWith(parameters.conditions, 'not')), contains(parameters.conditions, variables['build.reason'])) }}:
+    - ${{ parameters.steps }}
+  - ${{ if and( startsWith(parameters.conditions, 'not'), not(contains(parameters.conditions, variables['build.reason']))) }}:
+    - ${{ parameters.steps }}
diff --git a/eng/common/templates-official/steps/component-governance.yml b/eng/common/templates-official/steps/component-governance.yml
new file mode 100644
index 00000000000..0ecec47b0c9
--- /dev/null
+++ b/eng/common/templates-official/steps/component-governance.yml
@@ -0,0 +1,13 @@
+parameters:
+  disableComponentGovernance: false
+  componentGovernanceIgnoreDirectories: ''
+
+steps:
+- ${{ if eq(parameters.disableComponentGovernance, 'true') }}:
+  - script: "echo ##vso[task.setvariable variable=skipComponentGovernanceDetection]true"
+    displayName: Set skipComponentGovernanceDetection variable
+- ${{ if ne(parameters.disableComponentGovernance, 'true') }}:
+  - task: ComponentGovernanceComponentDetection@0
+    continueOnError: true
+    inputs:
+      ignoreDirectories: ${{ parameters.componentGovernanceIgnoreDirectories }}
\ No newline at end of file
diff --git a/eng/common/templates-official/steps/execute-codeql.yml b/eng/common/templates-official/steps/execute-codeql.yml
new file mode 100644
index 00000000000..9b4a5ffa30a
--- /dev/null
+++ b/eng/common/templates-official/steps/execute-codeql.yml
@@ -0,0 +1,32 @@
+parameters:
+  # Language that should be analyzed. Defaults to csharp
+  language: csharp
+  # Build Commands
+  buildCommands: ''
+  overrideParameters: ''                                       # Optional: to override values for parameters.
+  additionalParameters: ''                                     # Optional: parameters that need user specific values eg: '-SourceToolsList @("abc","def") -ArtifactToolsList @("ghi","jkl")'
+  # Optional: if specified, restore and use this version of Guardian instead of the default.
+  overrideGuardianVersion: ''
+  # Optional: if true, publish the '.gdn' folder as a pipeline artifact. This can help with in-depth
+  # diagnosis of problems with specific tool configurations.
+  publishGuardianDirectoryToPipeline: false
+  # The script to run to execute all SDL tools. Use this if you want to use a script to define SDL
+  # parameters rather than relying on YAML. It may be better to use a local script, because you can
+  # reproduce results locally without piecing together a command based on the YAML.
+  executeAllSdlToolsScript: 'eng/common/sdl/execute-all-sdl-tools.ps1'
+  # There is some sort of bug (has been reported) in Azure DevOps where if this parameter is named
+  # 'continueOnError', the parameter value is not correctly picked up.
+  # This can also be remedied by the caller (post-build.yml) if it does not use a nested parameter
+  # optional: determines whether to continue the build if the step errors;
+  sdlContinueOnError: false
+
+steps:
+- template: /eng/common/templates-official/steps/execute-sdl.yml
+  parameters:
+    overrideGuardianVersion: ${{ parameters.overrideGuardianVersion }}
+    executeAllSdlToolsScript: ${{ parameters.executeAllSdlToolsScript }}
+    overrideParameters: ${{ parameters.overrideParameters }}
+    additionalParameters: '${{ parameters.additionalParameters }}
+      -CodeQLAdditionalRunConfigParams @("BuildCommands < ${{ parameters.buildCommands }}", "Language < ${{ parameters.language }}")'
+    publishGuardianDirectoryToPipeline: ${{ parameters.publishGuardianDirectoryToPipeline }}
+    sdlContinueOnError: ${{ parameters.sdlContinueOnError }}
\ No newline at end of file
diff --git a/eng/common/templates-official/steps/execute-sdl.yml b/eng/common/templates-official/steps/execute-sdl.yml
new file mode 100644
index 00000000000..07426fde05d
--- /dev/null
+++ b/eng/common/templates-official/steps/execute-sdl.yml
@@ -0,0 +1,88 @@
+parameters:
+  overrideGuardianVersion: ''
+  executeAllSdlToolsScript: ''
+  overrideParameters: ''
+  additionalParameters: ''
+  publishGuardianDirectoryToPipeline: false
+  sdlContinueOnError: false
+  condition: ''
+
+steps:
+- task: NuGetAuthenticate@1
+  inputs:
+    nuGetServiceConnections: GuardianConnect
+
+- task: NuGetToolInstaller@1
+  displayName: 'Install NuGet.exe'
+  
+- ${{ if ne(parameters.overrideGuardianVersion, '') }}:
+  - pwsh: |
+      Set-Location -Path $(Build.SourcesDirectory)\eng\common\sdl
+      . .\sdl.ps1
+      $guardianCliLocation = Install-Gdn -Path $(Build.SourcesDirectory)\.artifacts -Version ${{ parameters.overrideGuardianVersion }}
+      Write-Host "##vso[task.setvariable variable=GuardianCliLocation]$guardianCliLocation"
+    displayName: Install Guardian (Overridden)
+
+- ${{ if eq(parameters.overrideGuardianVersion, '') }}:
+  - pwsh: |
+      Set-Location -Path $(Build.SourcesDirectory)\eng\common\sdl
+      . .\sdl.ps1
+      $guardianCliLocation = Install-Gdn -Path $(Build.SourcesDirectory)\.artifacts
+      Write-Host "##vso[task.setvariable variable=GuardianCliLocation]$guardianCliLocation"
+    displayName: Install Guardian
+
+- ${{ if ne(parameters.overrideParameters, '') }}:
+  - powershell: ${{ parameters.executeAllSdlToolsScript }} ${{ parameters.overrideParameters }}
+    displayName: Execute SDL (Overridden)
+    continueOnError: ${{ parameters.sdlContinueOnError }}
+    condition: ${{ parameters.condition }}
+
+- ${{ if eq(parameters.overrideParameters, '') }}:
+  - powershell: ${{ parameters.executeAllSdlToolsScript }}
+      -GuardianCliLocation $(GuardianCliLocation)
+      -NugetPackageDirectory $(Build.SourcesDirectory)\.packages
+      -AzureDevOpsAccessToken $(dn-bot-dotnet-build-rw-code-rw)
+      ${{ parameters.additionalParameters }}
+    displayName: Execute SDL
+    continueOnError: ${{ parameters.sdlContinueOnError }}
+    condition: ${{ parameters.condition }}
+
+- ${{ if ne(parameters.publishGuardianDirectoryToPipeline, 'false') }}:
+  # We want to publish the Guardian results and configuration for easy diagnosis. However, the
+  # '.gdn' dir is a mix of configuration, results, extracted dependencies, and Guardian default
+  # tooling files. Some of these files are large and aren't useful during an investigation, so
+  # exclude them by simply deleting them before publishing. (As of writing, there is no documented
+  # way to selectively exclude a dir from the pipeline artifact publish task.)
+  - task: DeleteFiles@1
+    displayName: Delete Guardian dependencies to avoid uploading
+    inputs:
+      SourceFolder: $(Agent.BuildDirectory)/.gdn
+      Contents: |
+        c
+        i
+    condition: succeededOrFailed()
+
+  - publish: $(Agent.BuildDirectory)/.gdn
+    artifact: GuardianConfiguration
+    displayName: Publish GuardianConfiguration
+    condition: succeededOrFailed()
+
+  # Publish the SARIF files in a container named CodeAnalysisLogs to enable integration
+  # with the "SARIF SAST Scans Tab" Azure DevOps extension
+  - task: CopyFiles@2
+    displayName: Copy SARIF files
+    inputs:
+      flattenFolders: true
+      sourceFolder:  $(Agent.BuildDirectory)/.gdn/rc/
+      contents: '**/*.sarif'
+      targetFolder: $(Build.SourcesDirectory)/CodeAnalysisLogs
+    condition: succeededOrFailed()
+
+  # Use PublishBuildArtifacts because the SARIF extension only checks this case
+  # see microsoft/sarif-azuredevops-extension#4
+  - task: PublishBuildArtifacts@1
+    displayName: Publish SARIF files to CodeAnalysisLogs container
+    inputs:
+      pathToPublish:  $(Build.SourcesDirectory)/CodeAnalysisLogs
+      artifactName: CodeAnalysisLogs
+    condition: succeededOrFailed()
\ No newline at end of file
diff --git a/eng/common/templates-official/steps/generate-sbom.yml b/eng/common/templates-official/steps/generate-sbom.yml
new file mode 100644
index 00000000000..1bf43bf807a
--- /dev/null
+++ b/eng/common/templates-official/steps/generate-sbom.yml
@@ -0,0 +1,48 @@
+# BuildDropPath - The root folder of the drop directory for which the manifest file will be generated.
+# PackageName - The name of the package this SBOM represents.
+# PackageVersion - The version of the package this SBOM represents. 
+# ManifestDirPath - The path of the directory where the generated manifest files will be placed
+# IgnoreDirectories - Directories to ignore for SBOM generation. This will be passed through to the CG component detector.
+
+parameters:
+  PackageVersion: 8.0.0
+  BuildDropPath: '$(Build.SourcesDirectory)/artifacts'
+  PackageName: '.NET'
+  ManifestDirPath: $(Build.ArtifactStagingDirectory)/sbom
+  IgnoreDirectories: ''
+  sbomContinueOnError: true
+
+steps:
+- task: PowerShell@2 
+  displayName: Prep for SBOM generation in (Non-linux)
+  condition: or(eq(variables['Agent.Os'], 'Windows_NT'), eq(variables['Agent.Os'], 'Darwin'))
+  inputs: 
+    filePath: ./eng/common/generate-sbom-prep.ps1
+    arguments: ${{parameters.manifestDirPath}}
+
+# Chmodding is a workaround for https://github.com/dotnet/arcade/issues/8461
+- script: |
+    chmod +x ./eng/common/generate-sbom-prep.sh
+    ./eng/common/generate-sbom-prep.sh ${{parameters.manifestDirPath}}
+  displayName: Prep for SBOM generation in (Linux)
+  condition: eq(variables['Agent.Os'], 'Linux')
+  continueOnError: ${{ parameters.sbomContinueOnError }}
+
+- task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
+  displayName: 'Generate SBOM manifest'
+  continueOnError: ${{ parameters.sbomContinueOnError }}
+  inputs:
+      PackageName: ${{ parameters.packageName }}
+      BuildDropPath: ${{ parameters.buildDropPath }}
+      PackageVersion: ${{ parameters.packageVersion }}
+      ManifestDirPath: ${{ parameters.manifestDirPath }}
+      ${{ if ne(parameters.IgnoreDirectories, '') }}:
+        AdditionalComponentDetectorArgs: '--IgnoreDirectories ${{ parameters.IgnoreDirectories }}'
+
+- task: 1ES.PublishPipelineArtifact@1
+  displayName: Publish SBOM manifest
+  continueOnError: ${{parameters.sbomContinueOnError}}
+  inputs:
+    targetPath: '${{parameters.manifestDirPath}}'
+    artifactName: $(ARTIFACT_NAME)
+
diff --git a/eng/common/templates-official/steps/publish-logs.yml b/eng/common/templates-official/steps/publish-logs.yml
new file mode 100644
index 00000000000..04012fed182
--- /dev/null
+++ b/eng/common/templates-official/steps/publish-logs.yml
@@ -0,0 +1,23 @@
+parameters:
+  StageLabel: ''
+  JobLabel: ''
+
+steps:
+- task: Powershell@2
+  displayName: Prepare Binlogs to Upload
+  inputs:
+    targetType: inline
+    script: |
+      New-Item -ItemType Directory $(Build.SourcesDirectory)/PostBuildLogs/${{parameters.StageLabel}}/${{parameters.JobLabel}}/
+      Move-Item -Path $(Build.SourcesDirectory)/artifacts/log/Debug/* $(Build.SourcesDirectory)/PostBuildLogs/${{parameters.StageLabel}}/${{parameters.JobLabel}}/
+  continueOnError: true
+  condition: always()
+
+- task: 1ES.PublishBuildArtifacts@1
+  displayName: Publish Logs
+  inputs:
+    PathtoPublish: '$(Build.SourcesDirectory)/PostBuildLogs'
+    PublishLocation: Container
+    ArtifactName: PostBuildLogs
+  continueOnError: true
+  condition: always()
diff --git a/eng/common/templates-official/steps/retain-build.yml b/eng/common/templates-official/steps/retain-build.yml
new file mode 100644
index 00000000000..83d97a26a01
--- /dev/null
+++ b/eng/common/templates-official/steps/retain-build.yml
@@ -0,0 +1,28 @@
+parameters:
+  # Optional azure devops PAT with build execute permissions for the build's organization,
+  # only needed if the build that should be retained ran on a different organization than 
+  # the pipeline where this template is executing from
+  Token: ''
+  # Optional BuildId to retain, defaults to the current running build
+  BuildId: ''
+  # Azure devops Organization URI for the build in the https://dev.azure.com/<organization> format.
+  # Defaults to the organization the current pipeline is running on
+  AzdoOrgUri: '$(System.CollectionUri)'
+  # Azure devops project for the build. Defaults to the project the current pipeline is running on
+  AzdoProject: '$(System.TeamProject)'
+
+steps:
+  - task: powershell@2
+    inputs:
+      targetType: 'filePath'
+      filePath: eng/common/retain-build.ps1
+      pwsh: true
+      arguments: >
+        -AzdoOrgUri: ${{parameters.AzdoOrgUri}}
+        -AzdoProject ${{parameters.AzdoProject}}
+        -Token ${{coalesce(parameters.Token, '$env:SYSTEM_ACCESSTOKEN') }}
+        -BuildId ${{coalesce(parameters.BuildId, '$env:BUILD_ID')}}
+    displayName: Enable permanent build retention
+    env:
+      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
+      BUILD_ID: $(Build.BuildId)
\ No newline at end of file
diff --git a/eng/common/templates-official/steps/send-to-helix.yml b/eng/common/templates-official/steps/send-to-helix.yml
new file mode 100644
index 00000000000..3eb7e2d5f84
--- /dev/null
+++ b/eng/common/templates-official/steps/send-to-helix.yml
@@ -0,0 +1,91 @@
+# Please remember to update the documentation if you make changes to these parameters!
+parameters:
+  HelixSource: 'pr/default'              # required -- sources must start with pr/, official/, prodcon/, or agent/
+  HelixType: 'tests/default/'            # required -- Helix telemetry which identifies what type of data this is; should include "test" for clarity and must end in '/'
+  HelixBuild: $(Build.BuildNumber)       # required -- the build number Helix will use to identify this -- automatically set to the AzDO build number
+  HelixTargetQueues: ''                  # required -- semicolon-delimited list of Helix queues to test on; see https://helix.dot.net/ for a list of queues
+  HelixAccessToken: ''                   # required -- access token to make Helix API requests; should be provided by the appropriate variable group
+  HelixConfiguration: ''                 # optional -- additional property attached to a job
+  HelixPreCommands: ''                   # optional -- commands to run before Helix work item execution
+  HelixPostCommands: ''                  # optional -- commands to run after Helix work item execution
+  WorkItemDirectory: ''                  # optional -- a payload directory to zip up and send to Helix; requires WorkItemCommand; incompatible with XUnitProjects
+  WorkItemCommand: ''                    # optional -- a command to execute on the payload; requires WorkItemDirectory; incompatible with XUnitProjects
+  WorkItemTimeout: ''                    # optional -- a timeout in TimeSpan.Parse-ready value (e.g. 00:02:00) for the work item command; requires WorkItemDirectory; incompatible with XUnitProjects
+  CorrelationPayloadDirectory: ''        # optional -- a directory to zip up and send to Helix as a correlation payload
+  XUnitProjects: ''                      # optional -- semicolon-delimited list of XUnitProjects to parse and send to Helix; requires XUnitRuntimeTargetFramework, XUnitPublishTargetFramework, XUnitRunnerVersion, and IncludeDotNetCli=true
+  XUnitWorkItemTimeout: ''               # optional -- the workitem timeout in seconds for all workitems created from the xUnit projects specified by XUnitProjects
+  XUnitPublishTargetFramework: ''        # optional -- framework to use to publish your xUnit projects
+  XUnitRuntimeTargetFramework: ''        # optional -- framework to use for the xUnit console runner
+  XUnitRunnerVersion: ''                 # optional -- version of the xUnit nuget package you wish to use on Helix; required for XUnitProjects
+  IncludeDotNetCli: false                # optional -- true will download a version of the .NET CLI onto the Helix machine as a correlation payload; requires DotNetCliPackageType and DotNetCliVersion
+  DotNetCliPackageType: ''               # optional -- either 'sdk', 'runtime' or 'aspnetcore-runtime'; determines whether the sdk or runtime will be sent to Helix; see https://raw.githubusercontent.com/dotnet/core/main/release-notes/releases-index.json
+  DotNetCliVersion: ''                   # optional -- version of the CLI to send to Helix; based on this: https://raw.githubusercontent.com/dotnet/core/main/release-notes/releases-index.json
+  WaitForWorkItemCompletion: true        # optional -- true will make the task wait until work items have been completed and fail the build if work items fail. False is "fire and forget."
+  IsExternal: false                      # [DEPRECATED] -- doesn't do anything, jobs are external if HelixAccessToken is empty and Creator is set
+  HelixBaseUri: 'https://helix.dot.net/' # optional -- sets the Helix API base URI (allows targeting https://helix.int-dot.net )
+  Creator: ''                            # optional -- if the build is external, use this to specify who is sending the job
+  DisplayNamePrefix: 'Run Tests'         # optional -- rename the beginning of the displayName of the steps in AzDO 
+  condition: succeeded()                 # optional -- condition for step to execute; defaults to succeeded()
+  continueOnError: false                 # optional -- determines whether to continue the build if the step errors; defaults to false
+
+steps:
+  - powershell: 'powershell "$env:BUILD_SOURCESDIRECTORY\eng\common\msbuild.ps1 $env:BUILD_SOURCESDIRECTORY\eng\common\helixpublish.proj /restore /p:TreatWarningsAsErrors=false /t:Test /bl:$env:BUILD_SOURCESDIRECTORY\artifacts\log\$env:BuildConfig\SendToHelix.binlog"'
+    displayName: ${{ parameters.DisplayNamePrefix }} (Windows)
+    env:
+      BuildConfig: $(_BuildConfig)
+      HelixSource: ${{ parameters.HelixSource }}
+      HelixType: ${{ parameters.HelixType }}
+      HelixBuild: ${{ parameters.HelixBuild }}
+      HelixConfiguration:  ${{ parameters.HelixConfiguration }}
+      HelixTargetQueues: ${{ parameters.HelixTargetQueues }}
+      HelixAccessToken: ${{ parameters.HelixAccessToken }}
+      HelixPreCommands: ${{ parameters.HelixPreCommands }}
+      HelixPostCommands: ${{ parameters.HelixPostCommands }}
+      WorkItemDirectory: ${{ parameters.WorkItemDirectory }}
+      WorkItemCommand: ${{ parameters.WorkItemCommand }}
+      WorkItemTimeout: ${{ parameters.WorkItemTimeout }}
+      CorrelationPayloadDirectory: ${{ parameters.CorrelationPayloadDirectory }}
+      XUnitProjects: ${{ parameters.XUnitProjects }}
+      XUnitWorkItemTimeout: ${{ parameters.XUnitWorkItemTimeout }}
+      XUnitPublishTargetFramework: ${{ parameters.XUnitPublishTargetFramework }}
+      XUnitRuntimeTargetFramework: ${{ parameters.XUnitRuntimeTargetFramework }}
+      XUnitRunnerVersion: ${{ parameters.XUnitRunnerVersion }}
+      IncludeDotNetCli: ${{ parameters.IncludeDotNetCli }}
+      DotNetCliPackageType: ${{ parameters.DotNetCliPackageType }}
+      DotNetCliVersion: ${{ parameters.DotNetCliVersion }}
+      WaitForWorkItemCompletion: ${{ parameters.WaitForWorkItemCompletion }}
+      HelixBaseUri: ${{ parameters.HelixBaseUri }}
+      Creator: ${{ parameters.Creator }}
+      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
+    condition: and(${{ parameters.condition }}, eq(variables['Agent.Os'], 'Windows_NT'))
+    continueOnError: ${{ parameters.continueOnError }}
+  - script: $BUILD_SOURCESDIRECTORY/eng/common/msbuild.sh $BUILD_SOURCESDIRECTORY/eng/common/helixpublish.proj /restore /p:TreatWarningsAsErrors=false /t:Test /bl:$BUILD_SOURCESDIRECTORY/artifacts/log/$BuildConfig/SendToHelix.binlog
+    displayName: ${{ parameters.DisplayNamePrefix }} (Unix)
+    env:
+      BuildConfig: $(_BuildConfig)
+      HelixSource: ${{ parameters.HelixSource }}
+      HelixType: ${{ parameters.HelixType }}
+      HelixBuild: ${{ parameters.HelixBuild }}
+      HelixConfiguration:  ${{ parameters.HelixConfiguration }}
+      HelixTargetQueues: ${{ parameters.HelixTargetQueues }}
+      HelixAccessToken: ${{ parameters.HelixAccessToken }}
+      HelixPreCommands: ${{ parameters.HelixPreCommands }}
+      HelixPostCommands: ${{ parameters.HelixPostCommands }}
+      WorkItemDirectory: ${{ parameters.WorkItemDirectory }}
+      WorkItemCommand: ${{ parameters.WorkItemCommand }}
+      WorkItemTimeout: ${{ parameters.WorkItemTimeout }}
+      CorrelationPayloadDirectory: ${{ parameters.CorrelationPayloadDirectory }}
+      XUnitProjects: ${{ parameters.XUnitProjects }}
+      XUnitWorkItemTimeout: ${{ parameters.XUnitWorkItemTimeout }}
+      XUnitPublishTargetFramework: ${{ parameters.XUnitPublishTargetFramework }}
+      XUnitRuntimeTargetFramework: ${{ parameters.XUnitRuntimeTargetFramework }}
+      XUnitRunnerVersion: ${{ parameters.XUnitRunnerVersion }}
+      IncludeDotNetCli: ${{ parameters.IncludeDotNetCli }}
+      DotNetCliPackageType: ${{ parameters.DotNetCliPackageType }}
+      DotNetCliVersion: ${{ parameters.DotNetCliVersion }}
+      WaitForWorkItemCompletion: ${{ parameters.WaitForWorkItemCompletion }}
+      HelixBaseUri: ${{ parameters.HelixBaseUri }}
+      Creator: ${{ parameters.Creator }}
+      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
+    condition: and(${{ parameters.condition }}, ne(variables['Agent.Os'], 'Windows_NT'))
+    continueOnError: ${{ parameters.continueOnError }}
diff --git a/eng/common/templates-official/steps/source-build.yml b/eng/common/templates-official/steps/source-build.yml
new file mode 100644
index 00000000000..829f17c34d1
--- /dev/null
+++ b/eng/common/templates-official/steps/source-build.yml
@@ -0,0 +1,129 @@
+parameters:
+  # This template adds arcade-powered source-build to CI.
+
+  # This is a 'steps' template, and is intended for advanced scenarios where the existing build
+  # infra has a careful build methodology that must be followed. For example, a repo
+  # (dotnet/runtime) might choose to clone the GitHub repo only once and store it as a pipeline
+  # artifact for all subsequent jobs to use, to reduce dependence on a strong network connection to
+  # GitHub. Using this steps template leaves room for that infra to be included.
+
+  # Defines the platform on which to run the steps. See 'eng/common/templates-official/job/source-build.yml'
+  # for details. The entire object is described in the 'job' template for simplicity, even though
+  # the usage of the properties on this object is split between the 'job' and 'steps' templates.
+  platform: {}
+
+steps:
+# Build. Keep it self-contained for simple reusability. (No source-build-specific job variables.)
+- script: |
+    set -x
+    df -h
+
+    # If building on the internal project, the artifact feeds variable may be available (usually only if needed)
+    # In that case, call the feed setup script to add internal feeds corresponding to public ones.
+    # In addition, add an msbuild argument to copy the WIP from the repo to the target build location.
+    # This is because SetupNuGetSources.sh will alter the current NuGet.config file, and we need to preserve those
+    # changes.
+    internalRestoreArgs=
+    if [ '$(dn-bot-dnceng-artifact-feeds-rw)' != '$''(dn-bot-dnceng-artifact-feeds-rw)' ]; then
+      # Temporarily work around https://github.com/dotnet/arcade/issues/7709
+      chmod +x $(Build.SourcesDirectory)/eng/common/SetupNugetSources.sh
+      $(Build.SourcesDirectory)/eng/common/SetupNugetSources.sh $(Build.SourcesDirectory)/NuGet.config $(dn-bot-dnceng-artifact-feeds-rw)
+      internalRestoreArgs='/p:CopyWipIntoInnerSourceBuildRepo=true'
+
+      # The 'Copy WIP' feature of source build uses git stash to apply changes from the original repo.
+      # This only works if there is a username/email configured, which won't be the case in most CI runs.
+      git config --get user.email
+      if [ $? -ne 0 ]; then
+        git config user.email dn-bot@microsoft.com
+        git config user.name dn-bot
+      fi
+    fi
+
+    # If building on the internal project, the internal storage variable may be available (usually only if needed)
+    # In that case, add variables to allow the download of internal runtimes if the specified versions are not found
+    # in the default public locations.
+    internalRuntimeDownloadArgs=
+    if [ '$(dotnetbuilds-internal-container-read-token-base64)' != '$''(dotnetbuilds-internal-container-read-token-base64)' ]; then
+      internalRuntimeDownloadArgs='/p:DotNetRuntimeSourceFeed=https://dotnetbuilds.blob.core.windows.net/internal /p:DotNetRuntimeSourceFeedKey=$(dotnetbuilds-internal-container-read-token-base64) --runtimesourcefeed https://dotnetbuilds.blob.core.windows.net/internal --runtimesourcefeedkey $(dotnetbuilds-internal-container-read-token-base64)'
+    fi
+
+    buildConfig=Release
+    # Check if AzDO substitutes in a build config from a variable, and use it if so.
+    if [ '$(_BuildConfig)' != '$''(_BuildConfig)' ]; then
+      buildConfig='$(_BuildConfig)'
+    fi
+
+    officialBuildArgs=
+    if [ '${{ and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}' = 'True' ]; then
+      officialBuildArgs='/p:DotNetPublishUsingPipelines=true /p:OfficialBuildId=$(BUILD.BUILDNUMBER)'
+    fi
+
+    targetRidArgs=
+    if [ '${{ parameters.platform.targetRID }}' != '' ]; then
+      targetRidArgs='/p:TargetRid=${{ parameters.platform.targetRID }}'
+    fi
+
+    runtimeOsArgs=
+    if [ '${{ parameters.platform.runtimeOS }}' != '' ]; then
+      runtimeOsArgs='/p:RuntimeOS=${{ parameters.platform.runtimeOS }}'
+    fi
+
+    baseOsArgs=
+    if [ '${{ parameters.platform.baseOS }}' != '' ]; then
+      baseOsArgs='/p:BaseOS=${{ parameters.platform.baseOS }}'
+    fi
+
+    publishArgs=
+    if [ '${{ parameters.platform.skipPublishValidation }}' != 'true' ]; then
+      publishArgs='--publish'
+    fi
+
+    assetManifestFileName=SourceBuild_RidSpecific.xml
+    if [ '${{ parameters.platform.name }}' != '' ]; then
+      assetManifestFileName=SourceBuild_${{ parameters.platform.name }}.xml
+    fi
+
+    ${{ coalesce(parameters.platform.buildScript, './build.sh') }} --ci \
+      --configuration $buildConfig \
+      --restore --build --pack $publishArgs -bl \
+      $officialBuildArgs \
+      $internalRuntimeDownloadArgs \
+      $internalRestoreArgs \
+      $targetRidArgs \
+      $runtimeOsArgs \
+      $baseOsArgs \
+      /p:SourceBuildNonPortable=${{ parameters.platform.nonPortable }} \
+      /p:ArcadeBuildFromSource=true \
+      /p:AssetManifestFileName=$assetManifestFileName
+  displayName: Build
+
+# Upload build logs for diagnosis.
+- task: CopyFiles@2
+  displayName: Prepare BuildLogs staging directory
+  inputs:
+    SourceFolder: '$(Build.SourcesDirectory)'
+    Contents: |
+      **/*.log
+      **/*.binlog
+      artifacts/source-build/self/prebuilt-report/**
+    TargetFolder: '$(Build.StagingDirectory)/BuildLogs'
+    CleanTargetFolder: true
+  continueOnError: true
+  condition: succeededOrFailed()
+
+- task: 1ES.PublishPipelineArtifact@1
+  displayName: Publish BuildLogs
+  inputs:
+    targetPath: '$(Build.StagingDirectory)/BuildLogs'
+    artifactName: BuildLogs_SourceBuild_${{ parameters.platform.name }}_Attempt$(System.JobAttempt)
+  continueOnError: true
+  condition: succeededOrFailed()
+
+# Manually inject component detection so that we can ignore the source build upstream cache, which contains
+# a nupkg cache of input packages (a local feed).
+# This path must match the upstream cache path in property 'CurrentRepoSourceBuiltNupkgCacheDir'
+# in src\Microsoft.DotNet.Arcade.Sdk\tools\SourceBuild\SourceBuildArcade.targets
+- task: ComponentGovernanceComponentDetection@0
+  displayName: Component Detection (Exclude upstream cache)
+  inputs:
+    ignoreDirectories: '$(Build.SourcesDirectory)/artifacts/source-build/self/src/artifacts/obj/source-built-upstream-cache'
diff --git a/eng/common/templates-official/variables/pool-providers.yml b/eng/common/templates-official/variables/pool-providers.yml
new file mode 100644
index 00000000000..beab7d1bfba
--- /dev/null
+++ b/eng/common/templates-official/variables/pool-providers.yml
@@ -0,0 +1,45 @@
+# Select a pool provider based off branch name. Anything with branch name containing 'release' must go into an -Svc pool, 
+# otherwise it should go into the "normal" pools. This separates out the queueing and billing of released branches.
+
+# Motivation: 
+#   Once a given branch of a repository's output has been officially "shipped" once, it is then considered to be COGS
+#   (Cost of goods sold) and should be moved to a servicing pool provider. This allows both separation of queueing
+#   (allowing release builds and main PR builds to not intefere with each other) and billing (required for COGS.
+#   Additionally, the pool provider name itself may be subject to change when the .NET Core Engineering Services 
+#   team needs to move resources around and create new and potentially differently-named pools. Using this template 
+#   file from an Arcade-ified repo helps guard against both having to update one's release/* branches and renaming.
+
+# How to use: 
+#  This yaml assumes your shipped product branches use the naming convention "release/..." (which many do).
+#  If we find alternate naming conventions in broad usage it can be added to the condition below.
+#
+#  First, import the template in an arcade-ified repo to pick up the variables, e.g.:
+#
+#  variables:
+#  - template: /eng/common/templates-official/variables/pool-providers.yml
+#
+#  ... then anywhere specifying the pool provider use the runtime variables,
+#      $(DncEngInternalBuildPool)
+#
+#        pool:
+#           name: $(DncEngInternalBuildPool)
+#           image: 1es-windows-2022-pt
+
+variables:
+  # Coalesce the target and source branches so we know when a PR targets a release branch
+  # If these variables are somehow missing, fall back to main (tends to have more capacity)
+
+  # Any new -Svc alternative pools should have variables added here to allow for splitting work
+
+  - name: DncEngInternalBuildPool
+    value: $[
+        replace(
+          replace(
+            eq(contains(coalesce(variables['System.PullRequest.TargetBranch'], variables['Build.SourceBranch'], 'refs/heads/main'), 'release'), 'true'),
+            True,
+            'NetCore1ESPool-Svc-Internal'
+          ),
+          False,
+          'NetCore1ESPool-Internal'
+        )
+      ]
\ No newline at end of file
diff --git a/eng/common/templates-official/variables/sdl-variables.yml b/eng/common/templates-official/variables/sdl-variables.yml
new file mode 100644
index 00000000000..dbdd66d4a4b
--- /dev/null
+++ b/eng/common/templates-official/variables/sdl-variables.yml
@@ -0,0 +1,7 @@
+variables:
+# The Guardian version specified in 'eng/common/sdl/packages.config'. This value must be kept in
+# sync with the packages.config file.
+- name: DefaultGuardianVersion
+  value: 0.109.0
+- name: GuardianPackagesConfigFile
+  value: $(Build.SourcesDirectory)\eng\common\sdl\packages.config
\ No newline at end of file
diff --git a/eng/common/templates/job/job.yml b/eng/common/templates/job/job.yml
index e24ca2f46f9..8ec5c4f2d9f 100644
--- a/eng/common/templates/job/job.yml
+++ b/eng/common/templates/job/job.yml
@@ -15,6 +15,7 @@ parameters:
   timeoutInMinutes: ''
   variables: []
   workspace: ''
+  templateContext: ''
 
 # Job base template specific parameters
   # See schema documentation - https://github.com/dotnet/arcade/blob/master/Documentation/AzureDevOps/TemplateSchema.md
@@ -68,6 +69,9 @@ jobs:
   ${{ if ne(parameters.timeoutInMinutes, '') }}:
     timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
 
+  ${{ if ne(parameters.templateContext, '') }}:
+    templateContext: ${{ parameters.templateContext }}
+
   variables:
   - ${{ if ne(parameters.enableTelemetry, 'false') }}:
     - name: DOTNET_CLI_TELEMETRY_PROFILE
diff --git a/eng/common/templates/job/publish-build-assets.yml b/eng/common/templates/job/publish-build-assets.yml
index fa5446c093d..8ec0151def2 100644
--- a/eng/common/templates/job/publish-build-assets.yml
+++ b/eng/common/templates/job/publish-build-assets.yml
@@ -58,7 +58,7 @@ jobs:
       demands: Cmd
     # If it's not devdiv, it's dnceng
     ${{ if ne(variables['System.TeamProject'], 'DevDiv') }}:
-      name: $(DncEngInternalBuildPool)
+      name: NetCore1ESPool-Publishing-Internal
       demands: ImageOverride -equals windows.vs2019.amd64
 
   steps:
@@ -71,7 +71,7 @@ jobs:
         checkDownloadedFiles: true
       condition: ${{ parameters.condition }}
       continueOnError: ${{ parameters.continueOnError }}
-    
+
     - task: NuGetAuthenticate@1
 
     - task: PowerShell@2
@@ -86,7 +86,7 @@ jobs:
           /p:OfficialBuildId=$(Build.BuildNumber)
       condition: ${{ parameters.condition }}
       continueOnError: ${{ parameters.continueOnError }}
-    
+
     - task: powershell@2
       displayName: Create ReleaseConfigs Artifact
       inputs:
@@ -95,7 +95,7 @@ jobs:
           Add-Content -Path "$(Build.StagingDirectory)/ReleaseConfigs.txt" -Value $(BARBuildId)
           Add-Content -Path "$(Build.StagingDirectory)/ReleaseConfigs.txt" -Value "$(DefaultChannels)"
           Add-Content -Path "$(Build.StagingDirectory)/ReleaseConfigs.txt" -Value $(IsStableBuild)
-    
+
     - task: PublishBuildArtifacts@1
       displayName: Publish ReleaseConfigs Artifact
       inputs:
@@ -121,7 +121,7 @@ jobs:
 
     - task: PublishBuildArtifacts@1
       displayName: Publish SymbolPublishingExclusionsFile Artifact
-      condition: eq(variables['SymbolExclusionFile'], 'true') 
+      condition: eq(variables['SymbolExclusionFile'], 'true')
       inputs:
         PathtoPublish: '$(Build.SourcesDirectory)/eng/SymbolPublishingExclusionsFile.txt'
         PublishLocation: Container
@@ -137,7 +137,7 @@ jobs:
         displayName: Publish Using Darc
         inputs:
           filePath: $(Build.SourcesDirectory)/eng/common/post-build/publish-using-darc.ps1
-          arguments: -BuildId $(BARBuildId) 
+          arguments: -BuildId $(BARBuildId)
             -PublishingInfraVersion 3
             -AzdoToken '$(publishing-dnceng-devdiv-code-r-build-re)'
             -MaestroToken '$(MaestroApiAccessToken)'
@@ -148,4 +148,4 @@ jobs:
     - ${{ if eq(parameters.enablePublishBuildArtifacts, 'true') }}:
       - template: /eng/common/templates/steps/publish-logs.yml
         parameters:
-          JobLabel: 'Publish_Artifacts_Logs'     
+          JobLabel: 'Publish_Artifacts_Logs'
diff --git a/eng/common/templates/post-build/post-build.yml b/eng/common/templates/post-build/post-build.yml
index 3f74abf7ce0..aba44a25a33 100644
--- a/eng/common/templates/post-build/post-build.yml
+++ b/eng/common/templates/post-build/post-build.yml
@@ -39,7 +39,7 @@ parameters:
     displayName: Enable NuGet validation
     type: boolean
     default: true
-    
+
   - name: publishInstallersAndChecksums
     displayName: Publish installers and checksums
     type: boolean
@@ -131,8 +131,8 @@ stages:
           displayName: Validate
           inputs:
             filePath: $(Build.SourcesDirectory)/eng/common/post-build/nuget-validation.ps1
-            arguments: -PackagesPath $(Build.ArtifactStagingDirectory)/PackageArtifacts/ 
-              -ToolDestinationPath $(Agent.BuildDirectory)/Extract/ 
+            arguments: -PackagesPath $(Build.ArtifactStagingDirectory)/PackageArtifacts/
+              -ToolDestinationPath $(Agent.BuildDirectory)/Extract/
 
     - job:
       displayName: Signing Validation
@@ -221,9 +221,9 @@ stages:
           displayName: Validate
           inputs:
             filePath: $(Build.SourcesDirectory)/eng/common/post-build/sourcelink-validation.ps1
-            arguments: -InputPath $(Build.ArtifactStagingDirectory)/BlobArtifacts/ 
-              -ExtractPath $(Agent.BuildDirectory)/Extract/ 
-              -GHRepoName $(Build.Repository.Name) 
+            arguments: -InputPath $(Build.ArtifactStagingDirectory)/BlobArtifacts/
+              -ExtractPath $(Agent.BuildDirectory)/Extract/
+              -GHRepoName $(Build.Repository.Name)
               -GHCommit $(Build.SourceVersion)
               -SourcelinkCliVersion $(SourceLinkCLIVersion)
           continueOnError: true
@@ -258,7 +258,7 @@ stages:
           demands: Cmd
         # If it's not devdiv, it's dnceng
         ${{ else }}:
-          name: $(DncEngInternalBuildPool)
+          name: NetCore1ESPool-Publishing-Internal
           demands: ImageOverride -equals windows.vs2019.amd64
       steps:
         - template: setup-maestro-vars.yml
@@ -272,7 +272,7 @@ stages:
           displayName: Publish Using Darc
           inputs:
             filePath: $(Build.SourcesDirectory)/eng/common/post-build/publish-using-darc.ps1
-            arguments: -BuildId $(BARBuildId) 
+            arguments: -BuildId $(BARBuildId)
               -PublishingInfraVersion ${{ parameters.publishingInfraVersion }}
               -AzdoToken '$(publishing-dnceng-devdiv-code-r-build-re)'
               -MaestroToken '$(MaestroApiAccessToken)'
diff --git a/eng/common/templates/steps/generate-sbom.yml b/eng/common/templates/steps/generate-sbom.yml
index a06373f38fa..2b21eae4273 100644
--- a/eng/common/templates/steps/generate-sbom.yml
+++ b/eng/common/templates/steps/generate-sbom.yml
@@ -5,7 +5,7 @@
 # IgnoreDirectories - Directories to ignore for SBOM generation. This will be passed through to the CG component detector.
 
 parameters:
-  PackageVersion: 7.0.0
+  PackageVersion: 8.0.0
   BuildDropPath: '$(Build.SourcesDirectory)/artifacts'
   PackageName: '.NET'
   ManifestDirPath: $(Build.ArtifactStagingDirectory)/sbom
diff --git a/eng/common/templates/variables/pool-providers.yml b/eng/common/templates/variables/pool-providers.yml
index 9cc5c550d3b..d236f9fdbb1 100644
--- a/eng/common/templates/variables/pool-providers.yml
+++ b/eng/common/templates/variables/pool-providers.yml
@@ -1,15 +1,15 @@
-# Select a pool provider based off branch name. Anything with branch name containing 'release' must go into an -Svc pool, 
+# Select a pool provider based off branch name. Anything with branch name containing 'release' must go into an -Svc pool,
 # otherwise it should go into the "normal" pools. This separates out the queueing and billing of released branches.
 
-# Motivation: 
+# Motivation:
 #   Once a given branch of a repository's output has been officially "shipped" once, it is then considered to be COGS
 #   (Cost of goods sold) and should be moved to a servicing pool provider. This allows both separation of queueing
 #   (allowing release builds and main PR builds to not intefere with each other) and billing (required for COGS.
-#   Additionally, the pool provider name itself may be subject to change when the .NET Core Engineering Services 
-#   team needs to move resources around and create new and potentially differently-named pools. Using this template 
+#   Additionally, the pool provider name itself may be subject to change when the .NET Core Engineering Services
+#   team needs to move resources around and create new and potentially differently-named pools. Using this template
 #   file from an Arcade-ified repo helps guard against both having to update one's release/* branches and renaming.
 
-# How to use: 
+# How to use:
 #  This yaml assumes your shipped product branches use the naming convention "release/..." (which many do).
 #  If we find alternate naming conventions in broad usage it can be added to the condition below.
 #
@@ -54,4 +54,4 @@ variables:
           False,
           'NetCore1ESPool-Internal'
         )
-      ]
\ No newline at end of file
+      ]
diff --git a/eng/common/tools.ps1 b/eng/common/tools.ps1
index fdd0cbb91f8..eb188cfda41 100644
--- a/eng/common/tools.ps1
+++ b/eng/common/tools.ps1
@@ -601,7 +601,15 @@ function InitializeBuildTool() {
       ExitWithExitCode 1
     }
     $dotnetPath = Join-Path $dotnetRoot (GetExecutableFileName 'dotnet')
-    $buildTool = @{ Path = $dotnetPath; Command = 'msbuild'; Tool = 'dotnet'; Framework = 'net8.0' }
+
+    # Use override if it exists - commonly set by source-build
+    if ($null -eq $env:_OverrideArcadeInitializeBuildToolFramework) {
+      $initializeBuildToolFramework="net8.0"
+    } else {
+      $initializeBuildToolFramework=$env:_OverrideArcadeInitializeBuildToolFramework
+    }
+
+    $buildTool = @{ Path = $dotnetPath; Command = 'msbuild'; Tool = 'dotnet'; Framework = $initializeBuildToolFramework }
   } elseif ($msbuildEngine -eq "vs") {
     try {
       $msbuildPath = InitializeVisualStudioMSBuild -install:$restore
diff --git a/eng/common/tools.sh b/eng/common/tools.sh
index e8d47894334..3392e3a9992 100755
--- a/eng/common/tools.sh
+++ b/eng/common/tools.sh
@@ -341,7 +341,12 @@ function InitializeBuildTool {
   # return values
   _InitializeBuildTool="$_InitializeDotNetCli/dotnet"
   _InitializeBuildToolCommand="msbuild"
-  _InitializeBuildToolFramework="net8.0"
+  # use override if it exists - commonly set by source-build
+  if [[ "${_OverrideArcadeInitializeBuildToolFramework:-x}" == "x" ]]; then
+    _InitializeBuildToolFramework="net8.0"
+  else
+    _InitializeBuildToolFramework="${_OverrideArcadeInitializeBuildToolFramework}"
+  fi
 }
 
 # Set RestoreNoCache as a workaround for https://github.com/NuGet/Home/issues/3116
diff --git a/eng/dependabot/Packages.props b/eng/dependabot/Packages.props
index ef064473a14..b098ccc9e3a 100644
--- a/eng/dependabot/Packages.props
+++ b/eng/dependabot/Packages.props
@@ -19,7 +19,7 @@
     <PackageVersion Include="LargeAddressAware" Version="1.0.5" />
     <PackageVersion Update="LargeAddressAware" Condition="'$(LargeAddressAwareVersion)' != ''" Version="$(LargeAddressAwareVersion)" />
 
-    <PackageVersion Include="Microsoft.BuildXL.Processes" Version="0.1.0-20231128.3" />
+    <PackageVersion Include="Microsoft.BuildXL.Processes" Version="0.1.0-20240307.8" />
     <PackageVersion Update="Microsoft.BuildXL.Processes" Condition="'$(BuildXLProcessesVersion)' != ''" Version="$(BuildXLProcessesVersion)" />
 
     <PackageVersion Include="Microsoft.VisualStudio.Setup.Configuration.Interop" Version="3.8.2112" />
@@ -37,7 +37,7 @@
     <PackageVersion Include="Shouldly" Version="4.2.1" />
     <PackageVersion Update="Shouldly" Condition="'$(ShouldlyVersion)' != ''" Version="$(ShouldlyVersion)" />
 
-    <PackageVersion Include="System.CodeDom" Version="7.0.0" />
+    <PackageVersion Include="System.CodeDom" Version="8.0.0" />
     <PackageVersion Update="System.CodeDom" Condition="'$(SystemCodeDomVersion)' != ''" Version="$(SystemCodeDomVersion)" />
 
     <PackageVersion Include="System.Private.Uri" Version="4.3.2" />
@@ -46,10 +46,10 @@
     <PackageVersion Include="System.Runtime" Version="4.3.1" />
     <PackageVersion Update="System.Runtime" Condition="'$(SystemRuntimeVersion)' != ''" Version="$(SystemRuntimeVersion)" />
 
-    <PackageVersion Include="System.Security.Cryptography.Pkcs" Version="7.0.2" />
+    <PackageVersion Include="System.Security.Cryptography.Pkcs" Version="8.0.0" />
     <PackageVersion Update="System.Security.Cryptography.Pkcs" Condition="'$(SystemSecurityCryptographyPkcsVersion)' != ''" Version="$(SystemSecurityCryptographyPkcsVersion)" />
 
-    <PackageVersion Include="System.Security.Cryptography.Xml" Version="7.0.1" />
+    <PackageVersion Include="System.Security.Cryptography.Xml" Version="8.0.0" />
     <PackageVersion Update="System.Security.Cryptography.Xml" Condition="'$(SystemSecurityCryptographyXmlVersion)' != ''" Version="$(SystemSecurityCryptographyXmlVersion)" />
 
     <PackageVersion Include="System.Security.Cryptography.X509Certificates" Version="4.3.2" />
diff --git a/global.json b/global.json
index 7a891ce770e..daf524dfe83 100644
--- a/global.json
+++ b/global.json
@@ -3,13 +3,13 @@
     "allowPrerelease": true
   },
   "tools": {
-    "dotnet": "8.0.100",
+    "dotnet": "8.0.201",
     "vs": {
       "version": "17.8.0"
     },
-    "xcopy-msbuild": "17.8.1-2"
+    "xcopy-msbuild": "17.8.5"
   },
   "msbuild-sdks": {
-    "Microsoft.DotNet.Arcade.Sdk": "8.0.0-beta.23620.2"
+    "Microsoft.DotNet.Arcade.Sdk": "8.0.0-beta.24158.4"
   }
 }
diff --git a/src/BannedSymbols.txt b/src/BannedSymbols.txt
index c369fe9d42b..1713f85376d 100644
--- a/src/BannedSymbols.txt
+++ b/src/BannedSymbols.txt
@@ -5,3 +5,5 @@ M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings);Do not
 M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext);Do not pass paths to XmlReader.Create--use the Stream overload
 M:System.Xml.XPath.XPathDocument.#ctor(System.String);Do not pass string paths to XPathDocument ctor--use the Stream overload
 M:System.Xml.XPath.XPathDocument.#ctor(System.String,System.Xml.XmlSpace);Do not pass string paths to XPathDocument ctor--use the Stream overload
+M:System.Xml.Linq.XDocument.Load(System.String);Do not pass uri to XDocument.Load, use overload with XmlReader instead
+M:System.Xml.Linq.XDocument.Load(System.String, System.Xml.Linq.LoadOptions);Do not pass uri to XDocument.Load, use overload with XmlReader instead
diff --git a/src/Build.OM.UnitTests/Microsoft.Build.Engine.OM.UnitTests.csproj b/src/Build.OM.UnitTests/Microsoft.Build.Engine.OM.UnitTests.csproj
index d2515288da0..df1c15ea5e6 100644
--- a/src/Build.OM.UnitTests/Microsoft.Build.Engine.OM.UnitTests.csproj
+++ b/src/Build.OM.UnitTests/Microsoft.Build.Engine.OM.UnitTests.csproj
@@ -36,17 +36,9 @@
     <Compile Include="..\Shared\EncodingStringWriter.cs">
       <Link>EncodingStringWriter.cs</Link>
     </Compile>
-    <Compile Include="..\Shared\UnitTests\ObjectModelHelpers.cs" />
-    <Compile Include="..\Shared\UnitTests\MockLogger.cs" />
     <Compile Include="..\Shared\ErrorUtilities.cs" />
     <Compile Include="..\Shared\FileDelegates.cs" />
     <Compile Include="..\Shared\ResourceUtilities.cs" />
-    <Compile Include="..\Shared\UnitTests\EngineTestEnvironment.cs">
-      <Link>EngineTestEnvironment.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\UnitTests\TestEnvironment.cs">
-      <Link>TestEnvironment.cs</Link>
-    </Compile>
     <Compile Include="..\Shared\BuildEnvironmentHelper.cs">
       <Link>BuildEnvironmentHelper.cs</Link>
     </Compile>
@@ -55,15 +47,7 @@
     <Compile Include="..\Shared\EscapingUtilities.cs" />
     <Compile Include="..\Shared\FileUtilitiesRegex.cs" />
     <Compile Include="..\Shared\ExceptionHandling.cs" />
-    <Compile Include="..\Shared\UnitTests\TestData\GlobbingTestData.cs">
-      <Link>TestData\GlobbingTestData.cs</Link>
-    </Compile>
     <Compile Include="..\Shared\ProcessExtensions.cs" />
-    <Compile Include="..\UnitTests.Shared\EnvironmentProvider.cs" />
-    <Compile Include="..\UnitTests.Shared\RunnerUtilities.cs" />
-    <Compile Include="..\UnitTests.Shared\DriveMapping.cs" />
-    <Compile Include="..\UnitTests.Shared\DummyMappedDrive.cs" />
-    <Compile Include="..\UnitTests.Shared\DummyMappedDriveUtils.cs"/>
     <None Include="..\Shared\UnitTests\App.config">
       <Link>App.config</Link>
       <SubType>Designer</SubType>
@@ -79,6 +63,7 @@
     <ProjectReference Include="..\Utilities\Microsoft.Build.Utilities.csproj" />
     <ProjectReference Include="..\Tasks\Microsoft.Build.Tasks.csproj" />
     <ProjectReference Include="..\Xunit.NetCore.Extensions\Xunit.NetCore.Extensions.csproj" />
+    <ProjectReference Include="..\UnitTests.Shared\Microsoft.Build.UnitTests.Shared.csproj" />
   </ItemGroup>
 
   <ItemGroup>
diff --git a/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs b/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
index 7b1a91dfd04..8d19fd20280 100644
--- a/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
@@ -325,8 +325,6 @@ public void VerifyEnvironmentSavedBetweenCalls()
         /// </summary>
 #if RUNTIME_TYPE_NETCORE
         [Theory(Skip = "https://github.com/dotnet/msbuild/issues/1975")]
-#elif MONO
-        [Theory(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
 #else
         [Theory(Skip = "https://github.com/dotnet/msbuild/issues/2057")]
 #endif
@@ -403,11 +401,7 @@ public void ShutdownNodesAfterParallelBuild(int numberOfParallelProjectsToBuild,
         /// <summary>
         /// A simple successful build, out of process only.
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void SimpleBuildOutOfProcess()
         {
             RunOutOfProcBuild(_ => _env.SetEnvironmentVariable("MSBUILDNOINPROCNODE", "1"));
@@ -416,11 +410,7 @@ public void SimpleBuildOutOfProcess()
         /// <summary>
         /// A simple successful build, out of process only. Triggered by setting build parameters' DisableInProcNode to true.
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void DisableInProcNode()
         {
             RunOutOfProcBuild(buildParameters => buildParameters.DisableInProcNode = true);
@@ -466,11 +456,7 @@ private void RunOutOfProcBuild(Action<BuildParameters> buildParametersModifier)
             Assert.NotEqual(Process.GetCurrentProcess().Id, processId); // "Build is expected to be out-of-proc. In fact it was in-proc."
         }
 
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void RequestedResultsAreSatisfied()
         {
             const string contents = @"
@@ -689,8 +675,6 @@ public void MsBuildForwardAllPropertiesFromChildLaunchChildNode()
         /// </summary>
 #if RUNTIME_TYPE_NETCORE
         [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1976")]
-#elif MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
 #else
         [Fact]
 #endif
@@ -742,8 +726,6 @@ public void OutOfProcNodeForwardCertainproperties()
         /// </summary>
 #if RUNTIME_TYPE_NETCORE
         [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1976")]
-#elif MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
 #else
         [Fact]
 #endif
@@ -811,11 +793,7 @@ public void OutOfProcNodeForwardCertainpropertiesAlsoGetResultsFromCache()
         /// Make sure when if the environment variable MsBuildForwardPropertiesFromChild is set to empty and
         /// we launch a child node that we get no properties
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void ForwardNoPropertiesLaunchChildNode()
         {
             string contents = CleanupFileContents(@"
@@ -855,8 +833,6 @@ public void ForwardNoPropertiesLaunchChildNode()
         /// </summary>
 #if RUNTIME_TYPE_NETCORE
         [Fact(Skip = "https://github.com/dotnet/msbuild/issues/933")]
-#elif MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
 #else
         [Fact]
 #endif
@@ -916,11 +892,7 @@ public override bool Execute()
         /// When a child node is launched by default we should not send any properties.
         /// we launch a child node that we get no properties
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void ForwardNoPropertiesLaunchChildNodeDefault()
         {
             string contents = CleanupFileContents(@"
@@ -2139,11 +2111,7 @@ public void Regress251333()
         /// <summary>
         /// Verify that disabling the in-proc node doesn't cause projects which don't require it to fail.
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void Regress239661()
         {
             string contents = CleanupFileContents(@"
@@ -2201,11 +2169,7 @@ public void ExplicitInprocAffinityGetsOverruledByDisableInprocNode()
         /// <summary>
         /// Ensures that properties and items are transferred to the out-of-proc node when an instance is used to start the build.
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void ProjectInstanceTransfersToOOPNode()
         {
             string contents = CleanupFileContents(@"
@@ -2266,11 +2230,7 @@ public void ProjectInstanceTransfersToOOPNode()
         /// <summary>
         /// Ensures that a limited set of properties are transferred from a project instance to an OOP node.
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void ProjectInstanceLimitedTransferToOOPNode()
         {
             string contents = CleanupFileContents(@"
@@ -2566,8 +2526,6 @@ public void NonOverlappingEnusingTrypointTargetsShouldNotInfluenceEachOthersResu
         /// </summary>
 #if RUNTIME_TYPE_NETCORE
         [Fact(Skip = "https://github.com/dotnet/msbuild/issues/933")]
-#elif MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
 #else
         [Fact]
 #endif
@@ -2665,11 +2623,7 @@ public void Regress473114()
         /// second request will bail out where the first request did, as though it had
         /// executed the target, rather than skipping and continuing.
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void VerifyMultipleRequestForSameProjectWithErrors_Simple()
         {
             var projA = _env.CreateFile(".proj").Path;
@@ -2748,11 +2702,7 @@ public void VerifyMultipleRequestForSameProjectWithErrors_Simple()
         /// expected in the first request, but be skipped by the second (since if it's "skipping
         /// unsuccessful", it can assume that all other OnError targets have also already been run)
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void VerifyMultipleRequestForSameProjectWithErrors_OnErrorChain()
         {
             var projA = _env.CreateFile(".proj").Path;
@@ -2867,11 +2817,7 @@ public void VerifyMultipleRequestForSameProjectWithErrors_OnErrorChain()
         /// they're marked as ContinueOnError=ErrorAndContinue, then we won't bail, but
         /// will continue executing (on the first request) or skipping (on the second)
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void VerifyMultipleRequestForSameProjectWithErrors_ErrorAndContinue()
         {
             var projA = _env.CreateFile(".proj").Path;
@@ -2957,11 +2903,7 @@ public void VerifyMultipleRequestForSameProjectWithErrors_ErrorAndContinue()
         /// This test verifies that if the errors are in AfterTargets, we still
         /// exit as though the target that those targets run after has already run.
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void VerifyMultipleRequestForSameProjectWithErrors_AfterTargets()
         {
             var projA = _env.CreateFile(".proj").Path;
@@ -3244,11 +3186,7 @@ public void TestSimultaneousSubmissionsWithLegacyThreadingData_P2P()
         /// submissions aren't restricted to running strictly serially by the single in-proc
         /// node.
         /// </summary>
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1245")]
-#else
         [Fact]
-#endif
         public void TestSimultaneousSubmissionsWithLegacyThreadingData_P2P_MP()
         {
             string projectContent1 = @"<Project ToolsVersion=`msbuilddefaulttoolsversion` xmlns=`msbuildnamespace`>
@@ -4408,5 +4346,29 @@ public void TaskInputLoggingIsExposedToTasks(string taskFactory, bool taskInputL
 
             Assert.Equal(BuildResultCode.Success, result.OverallResult);
         }
+
+        [Fact]
+        public void ProjectWithNoTargets()
+        {
+            string contents = @"<Project />";
+
+            BuildRequestData data = GetBuildRequestData(contents);
+            BuildResult result = _buildManager.Build(_parameters, data);
+            Assert.Equal(BuildResultCode.Failure, result.OverallResult);
+
+            _logger.AssertLogContains("MSB4040");
+        }
+
+        [Fact]
+        public void ProjectWithNoTargetsGraph()
+        {
+            string contents = @"<Project />";
+
+            GraphBuildRequestData data = GetGraphBuildRequestData(contents);
+            GraphBuildResult result = _buildManager.Build(_parameters, data);
+            Assert.Equal(BuildResultCode.Failure, result.OverallResult);
+
+            _logger.AssertLogContains("MSB4040");
+        }
     }
 }
diff --git a/src/Build.UnitTests/BackEnd/EventSourceTestHelper.cs b/src/Build.UnitTests/BackEnd/EventSourceTestHelper.cs
new file mode 100644
index 00000000000..41a7edf7e42
--- /dev/null
+++ b/src/Build.UnitTests/BackEnd/EventSourceTestHelper.cs
@@ -0,0 +1,86 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.Collections.Generic;
+using System.Diagnostics.Tracing;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace Microsoft.Build.Engine.UnitTests.BackEnd
+{
+    /// <summary>
+    /// This class provides the ability to fetch events emitted from the "Microsoft-Build" EventSource.
+    /// The instance listens and saves emitted events in-memory.
+    /// To fetch the events, use the <see cref="GetEvents"/> method.
+    /// Note that the current implementation of this class does not have protection against concurrent usage in tests.
+    /// If used in tests, ensure to rely on unique variables, names, or IDs. For example usage: <see cref="SdkResolverService_Tests.AssertSdkResolutionMessagesAreLoggedInEventSource"/>.
+    /// 
+    /// Reference: <see href="https://learn.microsoft.com/en-us/dotnet/api/system.diagnostics.tracing.eventlistener"/>
+    /// <example>
+    /// <code>
+    /// // ...
+    /// using var eventSourceTestListener = new EventSourceTestHelper();
+    /// // ...
+    /// var events = eventSourceTestListener.GetEvents();
+    /// // verification
+    /// </code>
+    /// </example>
+    /// </summary>
+    internal sealed class EventSourceTestHelper : EventListener
+    {
+        private readonly string eventSourceName = "Microsoft-Build";
+        private readonly List<EventWrittenEventArgs> emittedEvents;
+        private object _eventListLock = new object();
+        private EventSource? _eventSources = null;
+
+        public EventSourceTestHelper()
+        {
+            emittedEvents = new List<EventWrittenEventArgs>();
+        }
+
+        protected override void OnEventSourceCreated(EventSource eventSource)
+        {
+            if (eventSource.Name == eventSourceName)
+            {
+                EnableEvents(eventSource, EventLevel.LogAlways);
+                _eventSources = eventSource;
+            }
+        }
+
+        protected override void OnEventWritten(EventWrittenEventArgs eventData)
+        {
+            lock (_eventListLock)
+            {
+                emittedEvents.Add(eventData);
+            }
+        }
+
+        public override void Dispose() {
+            if (_eventSources  != null)
+            {
+                DisableEvents(_eventSources);
+            }
+            
+            base.Dispose();
+        }
+
+        /// <summary>
+        /// Returns the events that were emitted till invocation of this method.
+        /// The events are cleared from the in-memory store and are populated again in <see cref="OnEventWritten"/>. 
+        /// </summary>
+        /// <returns>List of the events that were emitted for eventSource</returns>
+        internal List<EventWrittenEventArgs> GetEvents()
+        {
+            var resultList = new List<EventWrittenEventArgs>();
+            lock (_eventListLock)
+            {
+                resultList = new List<EventWrittenEventArgs>(emittedEvents);
+                emittedEvents.Clear();
+            }
+            
+            return resultList;
+        }
+    }
+}
diff --git a/src/Build.UnitTests/BackEnd/ResultsCache_Tests.cs b/src/Build.UnitTests/BackEnd/ResultsCache_Tests.cs
index 0dfff488ff0..d832aa878b3 100644
--- a/src/Build.UnitTests/BackEnd/ResultsCache_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/ResultsCache_Tests.cs
@@ -13,8 +13,6 @@
 using Shouldly;
 using Xunit;
 
-
-
 #nullable disable
 
 namespace Microsoft.Build.UnitTests.BackEnd
diff --git a/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs b/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs
index bb2cf8e7019..f5887f5a46b 100644
--- a/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs
@@ -3,6 +3,7 @@
 
 using System;
 using System.Collections.Generic;
+using System.Diagnostics.Tracing;
 using System.Linq;
 using System.Text.RegularExpressions;
 using System.Threading.Tasks;
@@ -24,7 +25,7 @@
 
 namespace Microsoft.Build.Engine.UnitTests.BackEnd
 {
-    public class SdkResolverService_Tests
+    public class SdkResolverService_Tests : IDisposable
     {
         private readonly MockLogger _logger;
         private readonly LoggingContext _loggingContext;
@@ -40,6 +41,11 @@ public SdkResolverService_Tests()
                 new BuildEventContext(0, 0, BuildEventContext.InvalidProjectContextId, 0, 0));
         }
 
+        public void Dispose()
+        {
+            SdkResolverService.Instance.InitializeForTests();
+        }
+
         [Fact]
         // Scenario: Sdk is not resolved.
         public void AssertAllResolverErrorsLoggedWhenSdkNotResolved()
@@ -111,7 +117,6 @@ public void AssertResolverThrows()
             e.Sdk.Name.ShouldBe("1sdkName");
         }
 
-
         [Fact]
         // Scenario: MockSdkResolverWithResolvableSdkPattern2 is a specific resolver (i.e. resolver with pattern)
         // and it successfully resolves sdk.
@@ -184,6 +189,35 @@ public void AssertFirstResolverWithPatternCanResolve()
             _logger.BuildMessageEvents.Select(i => i.Message).ShouldNotContain("MockSdkResolver1 running");
         }
 
+        [Fact]
+        public void AssertSdkResolutionMessagesAreLogged()
+        {
+            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy());
+            SdkReference sdk = new SdkReference("1sdkName", "referencedVersion", "minimumVersion");
+
+            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+
+            // First resolver attempted to resolve, but failed.
+            _logger.BuildMessageEvents.Select(i => i.Message).ShouldContain(ResourceUtilities.FormatResourceStringStripCodeAndKeyword("SDKResolverAttempt", nameof(MockResolverReturnsNull), sdk.ToString(), "null",
+                ResourceUtilities.FormatResourceStringStripCodeAndKeyword("SDKResolverReturnedNull", nameof(MockResolverReturnsNull))));
+            // Second resolver succeeded.
+            _logger.BuildMessageEvents.Select(i => i.Message).ShouldContain(ResourceUtilities.FormatResourceStringStripCodeAndKeyword("SucceededToResolveSDK", sdk.ToString(), nameof(MockSdkResolver1), result.Path, result.Version));
+        }
+
+        [Fact]
+        public void AssertSdkResolutionMessagesAreLoggedInEventSource()
+        {
+            using var eventSourceTestListener = new EventSourceTestHelper();
+            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(false, false, true));
+            var sdkName = Guid.NewGuid().ToString();
+            SdkReference sdk = new SdkReference(sdkName, "referencedVersion", "minimumVersion");
+
+            SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var eventsLogged = eventSourceTestListener.GetEvents();
+            eventsLogged.ShouldContain(x => x.EventId == 64); // Start of the sdk resolve
+            eventsLogged.ShouldContain(x => x.EventId == 65 && x.Payload[1].ToString() == sdkName);
+        }
+
         [Fact]
         public void AssertFirstResolverErrorsSupressedWhenResolved()
         {
@@ -238,6 +272,29 @@ public void AssertResolverStateNotPreserved()
             SdkResolverService.Instance.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe("resolverpath");
         }
 
+        [Fact]
+        public void AssertResolversLoadedIfDefaultResolverSucceeds()
+        {
+            const int submissionId = BuildEventContext.InvalidSubmissionId;
+
+            MockLoaderStrategy mockLoaderStrategy = new MockLoaderStrategy(includeDefaultResolver: true);
+            SdkResolverService.Instance.InitializeForTests(mockLoaderStrategy);
+
+            SdkReference sdk = new SdkReference("notfound", "1.0", "minimumVersion");
+
+            SdkResolverService.Instance.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe("defaultpath");
+
+#if NETCOREAPP
+            // On Core, we check the default resolver *first*, so regular resolvers are not loaded.
+            mockLoaderStrategy.ResolversHaveBeenLoaded.ShouldBeFalse();
+            mockLoaderStrategy.ManifestsHaveBeenLoaded.ShouldBeFalse();
+#else
+            // On Framework, the default resolver is a fallback, so regular resolvers will have been loaded.
+            mockLoaderStrategy.ResolversHaveBeenLoaded.ShouldBeTrue();
+            mockLoaderStrategy.ManifestsHaveBeenLoaded.ShouldBeTrue();
+#endif
+        }
+
         [Theory]
         [InlineData(null, "1.0", true)]
         [InlineData("1.0", "1.0", true)]
@@ -608,10 +665,13 @@ public void IsRunningInVisualStudioIsSetForResolverContext()
         private sealed class MockLoaderStrategy : SdkResolverLoader
         {
             private List<SdkResolver> _resolvers;
+            private List<SdkResolver> _defaultResolvers;
             private List<(string ResolvableSdkPattern, SdkResolver Resolver)> _resolversWithPatterns;
 
+            public bool ResolversHaveBeenLoaded { get; private set; } = false;
+            public bool ManifestsHaveBeenLoaded { get; private set; } = false;
 
-            public MockLoaderStrategy(bool includeErrorResolver = false, bool includeResolversWithPatterns = false) : this()
+            public MockLoaderStrategy(bool includeErrorResolver = false, bool includeResolversWithPatterns = false, bool includeDefaultResolver = false) : this()
             {
                 if (includeErrorResolver)
                 {
@@ -623,6 +683,11 @@ public MockLoaderStrategy(bool includeErrorResolver = false, bool includeResolve
                     _resolversWithPatterns.Add(("1.*", new MockSdkResolverWithResolvableSdkPattern1()));
                     _resolversWithPatterns.Add((".*", new MockSdkResolverWithResolvableSdkPattern2()));
                 }
+
+                if (includeDefaultResolver)
+                {
+                    _defaultResolvers.Add(new MockSdkResolverDefault());
+                }
             }
 
             private MockLoaderStrategy()
@@ -635,16 +700,22 @@ private MockLoaderStrategy()
                     new MockSdkResolverWithState()
                 };
 
+                _defaultResolvers = new List<SdkResolver>();
+
                 _resolversWithPatterns = new List<(string ResolvableSdkPattern, SdkResolver Resolver)>();
             }
 
             internal override IReadOnlyList<SdkResolver> LoadAllResolvers(ElementLocation location)
             {
+                ResolversHaveBeenLoaded = true;
+
                 return _resolvers.OrderBy(i => i.Priority).ToList();
             }
 
             internal override IReadOnlyList<SdkResolverManifest> GetResolversManifests(ElementLocation location)
             {
+                ManifestsHaveBeenLoaded = true;
+
                 var manifests = new List<SdkResolverManifest>();
                 foreach (SdkResolver resolver in _resolvers)
                 {
@@ -664,6 +735,8 @@ internal override IReadOnlyList<SdkResolverManifest> GetResolversManifests(Eleme
 
             protected internal override IReadOnlyList<SdkResolver> LoadResolversFromManifest(SdkResolverManifest manifest, ElementLocation location)
             {
+                ResolversHaveBeenLoaded = true;
+
                 var resolvers = new List<SdkResolver>();
                 foreach (var resolver in _resolvers)
                 {
@@ -684,7 +757,7 @@ protected internal override IReadOnlyList<SdkResolver> LoadResolversFromManifest
 
             internal override IReadOnlyList<SdkResolver> GetDefaultResolvers()
             {
-                return new List<SdkResolver>();
+                return _defaultResolvers;
             }
         }
 
@@ -810,5 +883,18 @@ public override SdkResultBase Resolve(SdkReference sdk, SdkResolverContextBase r
                 throw new ArithmeticException("EXMESSAGE");
             }
         }
+
+        private sealed class MockSdkResolverDefault : SdkResolver
+        {
+            public override string Name => nameof(MockSdkResolverDefault);
+            public override int Priority => 9999;
+
+            public override SdkResultBase Resolve(SdkReference sdk, SdkResolverContextBase resolverContext, SdkResultFactoryBase factory)
+            {
+                resolverContext.Logger.LogMessage("MockSdkResolverDefault running", MessageImportance.Normal);
+
+                return factory.IndicateSuccess("defaultpath", string.Empty);
+            }
+        }
     }
 }
diff --git a/src/Build.UnitTests/BinaryLogger_Tests.cs b/src/Build.UnitTests/BinaryLogger_Tests.cs
index 4928a8d29f8..ccd837ef921 100644
--- a/src/Build.UnitTests/BinaryLogger_Tests.cs
+++ b/src/Build.UnitTests/BinaryLogger_Tests.cs
@@ -5,8 +5,10 @@
 using System.Collections.Generic;
 using System.IO;
 using System.IO.Compression;
+using System.Linq;
+using System.Reflection;
 using System.Text;
-
+using FluentAssertions;
 using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Evaluation;
 using Microsoft.Build.Execution;
@@ -83,10 +85,21 @@ public BinaryLoggerTests(ITestOutputHelper output)
             _logFile = _env.ExpectFile(".binlog").Path;
         }
 
+        public enum BinlogRoundtripTestReplayMode
+        {
+            NoReplay,
+            Structured,
+            RawEvents
+        }
+
         [Theory]
-        [InlineData(s_testProject)]
-        [InlineData(s_testProject2)]
-        public void TestBinaryLoggerRoundtrip(string projectText)
+        [InlineData(s_testProject, BinlogRoundtripTestReplayMode.NoReplay)]
+        [InlineData(s_testProject, BinlogRoundtripTestReplayMode.Structured)]
+        [InlineData(s_testProject, BinlogRoundtripTestReplayMode.RawEvents)]
+        [InlineData(s_testProject2, BinlogRoundtripTestReplayMode.NoReplay)]
+        [InlineData(s_testProject2, BinlogRoundtripTestReplayMode.Structured)]
+        [InlineData(s_testProject2, BinlogRoundtripTestReplayMode.RawEvents)]
+        public void TestBinaryLoggerRoundtrip(string projectText, BinlogRoundtripTestReplayMode replayMode)
         {
             var binaryLogger = new BinaryLogger();
 
@@ -110,6 +123,36 @@ public void TestBinaryLoggerRoundtrip(string projectText)
                 project.Build(new ILogger[] { binaryLogger, mockLogFromBuild, serialFromBuild, parallelFromBuild }).ShouldBeTrue();
             }
 
+            string fileToReplay;
+            switch (replayMode)
+            {
+                case BinlogRoundtripTestReplayMode.NoReplay:
+                    fileToReplay = _logFile;
+                    break;
+                case BinlogRoundtripTestReplayMode.Structured:
+                case BinlogRoundtripTestReplayMode.RawEvents:
+                    {
+                        var logReader = new BinaryLogReplayEventSource();
+                        fileToReplay = _env.ExpectFile(".binlog").Path;
+                        if (replayMode == BinlogRoundtripTestReplayMode.Structured)
+                        {
+                            // need dummy handler to force structured replay
+                            logReader.BuildFinished += (_, _) => { };
+                        }
+
+                        BinaryLogger outputBinlog = new BinaryLogger()
+                        {
+                            Parameters = fileToReplay
+                        };
+                        outputBinlog.Initialize(logReader);
+                        logReader.Replay(_logFile);
+                        outputBinlog.Shutdown();
+                    }
+                    break;
+                default:
+                    throw new ArgumentOutOfRangeException(nameof(replayMode), replayMode, null);
+            }
+
             var mockLogFromPlayback = new MockLogger();
 
             var serialFromPlaybackText = new StringBuilder();
@@ -126,7 +169,10 @@ public void TestBinaryLoggerRoundtrip(string projectText)
             parallelFromPlayback.Initialize(binaryLogReader);
 
             // read the binary log and replay into mockLogger2
-            binaryLogReader.Replay(_logFile);
+            binaryLogReader.Replay(fileToReplay);
+            mockLogFromPlayback.Shutdown();
+            serialFromPlayback.Shutdown();
+            parallelFromPlayback.Shutdown();
 
             // the binlog will have more information than recorded by the text log
             mockLogFromPlayback.FullLog.ShouldContainWithoutWhitespace(mockLogFromBuild.FullLog);
@@ -140,6 +186,138 @@ public void TestBinaryLoggerRoundtrip(string projectText)
             parallelActual.ShouldContainWithoutWhitespace(parallelExpected);
         }
 
+        /// <summary>
+        /// This test validate that binlog file content is identical upon replaying.
+        /// The identity can be defined via 3 ways:
+        ///   * byte-for-byte equality
+        ///   * byte-for-byte equality of unzipped content
+        ///   * structured equality of events
+        ///
+        /// They are ordered by their strength (the byte-for-byte equality implies the other two, etc.),
+        ///  but we mainly care about the structured equality. If the more strong equalities are broken -
+        ///  the assertions can be simply removed.
+        /// However the structured equality is important - it guarantees that binlog reading and writing functionality
+        ///  is not dropping or altering any information.
+        /// </summary>
+        /// <param name="projectText"></param>
+        /// <param name="replayMode"></param>
+        [Theory]
+        [InlineData(s_testProject, BinlogRoundtripTestReplayMode.Structured)]
+        [InlineData(s_testProject, BinlogRoundtripTestReplayMode.RawEvents)]
+        [InlineData(s_testProject2, BinlogRoundtripTestReplayMode.Structured)]
+        [InlineData(s_testProject2, BinlogRoundtripTestReplayMode.RawEvents)]
+        public void TestBinaryLoggerRoundtripEquality(string projectText, BinlogRoundtripTestReplayMode replayMode)
+        {
+            var binaryLogger = new BinaryLogger();
+
+            binaryLogger.Parameters = _logFile;
+
+            // build and log into binary logger
+            using (ProjectCollection collection = new())
+            {
+                Project project = ObjectModelHelpers.CreateInMemoryProject(collection, projectText);
+                // make sure the project file makes it to the binlog (it has file existence check)
+                File.WriteAllText(project.FullPath, projectText);
+                project.Build(new ILogger[] { binaryLogger }).ShouldBeTrue();
+                File.Delete(project.FullPath);
+            }
+
+            var logReader = new BinaryLogReplayEventSource();
+            string replayedLogFile = _env.ExpectFile(".binlog").Path;
+            if (replayMode == BinlogRoundtripTestReplayMode.Structured)
+            {
+                // need dummy handler to force structured replay
+                logReader.BuildFinished += (_, _) => { };
+            }
+
+            BinaryLogger outputBinlog = new BinaryLogger()
+            {
+                Parameters = $"LogFile={replayedLogFile};OmitInitialInfo"
+            };
+            outputBinlog.Initialize(logReader);
+            logReader.Replay(_logFile);
+            outputBinlog.Shutdown();
+
+            AssertBinlogsHaveEqualContent(_logFile, replayedLogFile);
+            // If this assertation complicates development - it can possibly be removed
+            // The structured equality above should be enough.
+            AssertFilesAreBinaryEqualAfterUnpack(_logFile, replayedLogFile);
+        }
+
+        private static void AssertFilesAreBinaryEqualAfterUnpack(string firstPath, string secondPath)
+        {
+            using var br1 = BinaryLogReplayEventSource.OpenReader(firstPath);
+            using var br2 = BinaryLogReplayEventSource.OpenReader(secondPath);
+            const int bufferSize = 4096;
+
+            int readCount = 0;
+            while (br1.ReadBytes(bufferSize) is { Length: > 0 } bytes1)
+            {
+                var bytes2 = br2.ReadBytes(bufferSize);
+
+                bytes1.SequenceEqual(bytes2).ShouldBeTrue(
+                    $"Buffers starting at position {readCount} differ. First:{Environment.NewLine}{string.Join(",", bytes1)}{Environment.NewLine}Second:{Environment.NewLine}{string.Join(",", bytes2)}");
+                readCount += bufferSize;
+            }
+
+            br2.ReadBytes(bufferSize).Length.ShouldBe(0, "Second buffer contains bytes after first file end");
+        }
+
+        private static void AssertBinlogsHaveEqualContent(string firstPath, string secondPath)
+        {
+            using var reader1 = BinaryLogReplayEventSource.OpenBuildEventsReader(firstPath);
+            using var reader2 = BinaryLogReplayEventSource.OpenBuildEventsReader(secondPath);
+
+            Dictionary<string, string> embedFiles1 = new();
+            Dictionary<string, string> embedFiles2 = new();
+
+            reader1.ArchiveFileEncountered += arg
+                => AddArchiveFile(embedFiles1, arg);
+
+            // This would be standard subscribe:
+            // reader2.ArchiveFileEncountered += arg
+            //    => AddArchiveFile(embedFiles2, arg);
+
+            // We however use the AddArchiveFileFromStringHandler - to exercise it
+            // and to assert it's equality with ArchiveFileEncountered handler
+            string currentFileName = null;
+            reader2.ArchiveFileEncountered +=
+                ((Action<StringReadEventArgs>)AddArchiveFileFromStringHandler).ToArchiveFileHandler();
+
+            int i = 0;
+            while (reader1.Read() is { } ev1)
+            {
+                i++;
+                var ev2 = reader2.Read();
+
+                ev1.Should().BeEquivalentTo(ev2,
+                    $"Binlogs ({firstPath} and {secondPath}) should be equal at event {i}");
+            }
+            // Read the second reader - to confirm there are no more events
+            //  and to force the embedded files to be read.
+            reader2.Read().ShouldBeNull($"Binlogs ({firstPath} and {secondPath}) are not equal - second has more events >{i + 1}");
+
+            Assert.Equal(embedFiles1, embedFiles2);
+
+            void AddArchiveFile(Dictionary<string, string> files, ArchiveFileEventArgs arg)
+            {
+                ArchiveFile embedFile = arg.ArchiveData.ToArchiveFile();
+                files.Add(embedFile.FullPath, embedFile.Content);
+            }
+
+            void AddArchiveFileFromStringHandler(StringReadEventArgs args)
+            {
+                if (currentFileName == null)
+                {
+                    currentFileName = args.OriginalString;
+                    return;
+                }
+
+                embedFiles2.Add(currentFileName, args.OriginalString);
+                currentFileName = null;
+            }
+        }
+
         [Fact]
         public void BinaryLoggerShouldSupportFilePathExplicitParameter()
         {
@@ -172,12 +350,13 @@ public void UnusedEnvironmentVariablesDoNotAppearInBinaryLog()
 </Project>";
                 TransientTestFolder logFolder = env.CreateFolder(createFolder: true);
                 TransientTestFile projectFile = env.CreateFile(logFolder, "myProj.proj", contents);
-                BinaryLogger logger = new();
-                logger.Parameters = _logFile;
-                RunnerUtilities.ExecMSBuild($"{projectFile.Path} -bl:{logger.Parameters}", out bool success);
+                
+                RunnerUtilities.ExecMSBuild($"{projectFile.Path} -bl:{_logFile}", out bool success);
                 success.ShouldBeTrue();
-                RunnerUtilities.ExecMSBuild($"{logger.Parameters} -flp:logfile={Path.Combine(logFolder.Path, "logFile.log")};verbosity=diagnostic", out success);
+
+                RunnerUtilities.ExecMSBuild($"{_logFile} -flp:logfile={Path.Combine(logFolder.Path, "logFile.log")};verbosity=diagnostic", out success);
                 success.ShouldBeTrue();
+
                 string text = File.ReadAllText(Path.Combine(logFolder.Path, "logFile.log"));
                 text.ShouldContain("EnvVar2");
                 text.ShouldContain("value2");
@@ -230,10 +409,9 @@ private void AssemblyLoadsDuringTaskRun(string additionalEventText)
                     """;
                 TransientTestFolder logFolder = env.CreateFolder(createFolder: true);
                 TransientTestFile projectFile = env.CreateFile(logFolder, "myProj.proj", contents);
-                BinaryLogger logger = new();
-                logger.Parameters = _logFile;
+                
                 env.SetEnvironmentVariable("MSBUILDNOINPROCNODE", "1");
-                RunnerUtilities.ExecMSBuild($"{projectFile.Path} -nr:False -bl:{logger.Parameters} -flp1:logfile={Path.Combine(logFolder.Path, "logFile.log")};verbosity=diagnostic -flp2:logfile={Path.Combine(logFolder.Path, "logFile2.log")};verbosity=normal", out bool success);
+                RunnerUtilities.ExecMSBuild($"{projectFile.Path} -nr:False -bl:{_logFile} -flp1:logfile={Path.Combine(logFolder.Path, "logFile.log")};verbosity=diagnostic -flp2:logfile={Path.Combine(logFolder.Path, "logFile2.log")};verbosity=normal", out bool success);
                 success.ShouldBeTrue();
 
                 string assemblyLoadedEventText =
@@ -245,7 +423,7 @@ private void AssemblyLoadsDuringTaskRun(string additionalEventText)
                 string text2 = File.ReadAllText(Path.Combine(logFolder.Path, "logFile2.log"));
                 text2.ShouldNotContain(assemblyLoadedEventText);
                 text2.ShouldNotContain(additionalEventText);
-                RunnerUtilities.ExecMSBuild($"{logger.Parameters} -flp1:logfile={Path.Combine(logFolder.Path, "logFile3.log")};verbosity=diagnostic -flp2:logfile={Path.Combine(logFolder.Path, "logFile4.log")};verbosity=normal", out success);
+                RunnerUtilities.ExecMSBuild($"{_logFile} -flp1:logfile={Path.Combine(logFolder.Path, "logFile3.log")};verbosity=diagnostic -flp2:logfile={Path.Combine(logFolder.Path, "logFile4.log")};verbosity=normal", out success);
                 success.ShouldBeTrue();
                 text = File.ReadAllText(Path.Combine(logFolder.Path, "logFile3.log"));
                 text.ShouldContain(assemblyLoadedEventText);
@@ -438,22 +616,22 @@ public void SuppressCommandOutputForNonDiagVerbosity()
                             <Exec Command='echo a'/>
                         </Target>
                     </Project>";
-                BinaryLogger logger = new();
-                logger.Parameters = _logFile;
+
+
                 TransientTestFolder testFolder = env.CreateFolder(createFolder: true);
 
                 TransientTestFile projectFile1 = env.CreateFile(testFolder, "testProject01.proj", contents);
-                string consoleOutput1 = RunnerUtilities.ExecMSBuild($"{projectFile1.Path} -bl:{logger.Parameters} -verbosity:diag -nologo", out bool success1);
+                string consoleOutput1 = RunnerUtilities.ExecMSBuild($"{projectFile1.Path} -bl:{_logFile} -verbosity:diag -nologo", out bool success1);
                 success1.ShouldBeTrue();
-                var expected1 = $"-nologo -bl:{logger.Parameters} -verbosity:diag {projectFile1.Path}";
+                var expected1 = $"-nologo -bl:{_logFile} -verbosity:diag {projectFile1.Path}";
                 consoleOutput1.ShouldContain(expected1);
 
                 foreach (var verbosity in new string[] { "q", "m", "n", "d" })
                 {
                     TransientTestFile projectFile2 = env.CreateFile(testFolder, $"testProject_{verbosity}.proj", contents);
-                    string consoleOutput2 = RunnerUtilities.ExecMSBuild($"{projectFile2.Path} -bl:{logger.Parameters} -verbosity:{verbosity} -nologo", out bool success2);
+                    string consoleOutput2 = RunnerUtilities.ExecMSBuild($"{projectFile2.Path} -bl:{_logFile} -verbosity:{verbosity} -nologo", out bool success2);
                     success2.ShouldBeTrue();
-                    var expected2 = $"-nologo -bl:{logger.Parameters} -verbosity:{verbosity} {projectFile2.Path}";
+                    var expected2 = $"-nologo -bl:{_logFile} -verbosity:{verbosity} {projectFile2.Path}";
                     consoleOutput2.ShouldNotContain(expected2);
                 }
             }
diff --git a/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs b/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
index faacc88379f..99474115048 100644
--- a/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
+++ b/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
@@ -7,6 +7,7 @@
 using System.IO;
 using System.Linq;
 using System.Text;
+using FluentAssertions;
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Framework.Profiler;
@@ -894,6 +895,232 @@ public void ReadingCorruptedStreamThrows()
             }
         }
 
+        [Fact]
+        public void ForwardCompatibleRead_HandleAppendOnlyChanges()
+        {
+            // Let's not write any strings prior the first event - to make locating (and overwriting) the size byte(s) easier.
+            BuildErrorEventArgs error = new(null, null, null, 1, 2, 3, 4, null, null, null);
+            BuildFinishedEventArgs finished = new("Message", "HelpKeyword", true);
+
+            var memoryStream = new MemoryStream();
+            var binaryWriter = new BinaryWriter(memoryStream);
+            var binaryReader = new BinaryReader(memoryStream);
+            var buildEventArgsWriter = new BuildEventArgsWriter(binaryWriter);
+
+            buildEventArgsWriter.Write(error);
+
+            // Some future data that are not known in current version
+            binaryWriter.Write(new byte[] { 1, 2, 3, 4 });
+
+
+            int positionAfterFirstEvent = (int)memoryStream.Position;
+            memoryStream.Position = 0;
+            // event type
+            Microsoft.Build.Shared.BinaryReaderExtensions.Read7BitEncodedInt(binaryReader);
+            int eventSizePos = (int)memoryStream.Position;
+            int eventSize = Microsoft.Build.Shared.BinaryReaderExtensions.Read7BitEncodedInt(binaryReader);
+            int positionAfterFirstEventSize = (int)memoryStream.Position;
+            memoryStream.Position = eventSizePos;
+            // the extra 4 bytes
+            Microsoft.Build.Shared.BinaryWriterExtensions.Write7BitEncodedInt(binaryWriter, eventSize + 4);
+            memoryStream.Position.ShouldBe(positionAfterFirstEventSize, "The event size need to be overwritten in place - without overwriting any bytes after the size info");
+            memoryStream.Position = positionAfterFirstEvent;
+
+            buildEventArgsWriter.Write(finished);
+
+            // Remember num of bytes written - we should read them all.
+            long length = memoryStream.Length;
+            // Now move back to the beginning of the stream and start reading.
+            memoryStream.Position = 0;
+
+            using var buildEventArgsReader = new BuildEventArgsReader(binaryReader, BinaryLogger.FileFormatVersion)
+            {
+                SkipUnknownEventParts = true
+            };
+
+            List<BinaryLogReaderErrorEventArgs> readerErrors = new();
+            buildEventArgsReader.RecoverableReadError += readerErrors.Add;
+
+            var deserializedError = (BuildErrorEventArgs)buildEventArgsReader.Read();
+
+            readerErrors.Count.ShouldBe(1);
+            readerErrors[0].ErrorType.ShouldBe(ReaderErrorType.UnknownEventData);
+            readerErrors[0].RecordKind.ShouldBe(BinaryLogRecordKind.Error);
+
+            deserializedError.Should().BeEquivalentTo(error);
+
+            var deserializedFinished = (BuildFinishedEventArgs)buildEventArgsReader.Read();
+
+            readerErrors.Count.ShouldBe(1);
+
+            deserializedFinished.Should().BeEquivalentTo(finished);
+
+            // There is nothing else in the stream
+            memoryStream.Position.Should().Be(length);
+        }
+
+        [Fact]
+        public void ForwardCompatibleRead_HandleUnknownEvent()
+        {
+            // Let's not write any strings prior the first event - to make locating (and overwriting) the event type byte(s) easier.
+            BuildErrorEventArgs error = new(null, null, null, 1, 2, 3, 4, null, null, null);
+            BuildFinishedEventArgs finished = new("Message", "HelpKeyword", true);
+
+            var memoryStream = new MemoryStream();
+            var binaryWriter = new BinaryWriter(memoryStream);
+            var binaryReader = new BinaryReader(memoryStream);
+            var buildEventArgsWriter = new BuildEventArgsWriter(binaryWriter);
+
+            buildEventArgsWriter.Write(error);
+
+            int positionAfterFirstEvent = (int)memoryStream.Position;
+            memoryStream.Position = 0;
+            // event type
+            Microsoft.Build.Shared.BinaryReaderExtensions.Read7BitEncodedInt(binaryReader);
+            int eventSizePos = (int)memoryStream.Position;
+            memoryStream.Position = 0;
+
+            // some future type that is not known in current version
+            BinaryLogRecordKind unknownType = (BinaryLogRecordKind) Enum.GetValues(typeof(BinaryLogRecordKind)).Cast<BinaryLogRecordKind>().Select(e => (int)e).Max() + 2;
+            Microsoft.Build.Shared.BinaryWriterExtensions.Write7BitEncodedInt(binaryWriter, (int)unknownType);
+            memoryStream.Position.ShouldBe(eventSizePos, "The event type need to be overwritten in place - without overwriting any bytes after the type info");
+            memoryStream.Position = positionAfterFirstEvent;
+
+            buildEventArgsWriter.Write(finished);
+
+            // Remember num of bytes written - we should read them all.
+            long length = memoryStream.Length;
+            // Now move back to the beginning of the stream and start reading.
+            memoryStream.Position = 0;
+
+            List<BinaryLogReaderErrorEventArgs> readerErrors = new();
+            using var buildEventArgsReader = new BuildEventArgsReader(binaryReader, BinaryLogger.FileFormatVersion)
+            {
+                SkipUnknownEvents = true
+            };
+
+            buildEventArgsReader.RecoverableReadError += readerErrors.Add;
+
+            var deserializedEvent = buildEventArgsReader.Read();
+
+            readerErrors.Count.ShouldBe(1);
+            readerErrors[0].ErrorType.ShouldBe(ReaderErrorType.UnknownEventType);
+            readerErrors[0].RecordKind.ShouldBe(unknownType);
+
+            deserializedEvent.Should().BeEquivalentTo(finished);
+
+            // There is nothing else in the stream
+            memoryStream.Position.Should().Be(length);
+        }
+
+        [Fact]
+        public void ForwardCompatibleRead_HandleMismatchedFormatOfEvent()
+        {
+            // BuildErrorEventArgs error = new("Subcategory", "Code", "File", 1, 2, 3, 4, "Message", "HelpKeyword", "SenderName");
+            BuildErrorEventArgs error = new(null, null, null, 1, 2, 3, 4, null, null, null);
+            BuildFinishedEventArgs finished = new("Message", "HelpKeyword", true);
+
+            var memoryStream = new MemoryStream();
+            var binaryWriter = new BinaryWriter(memoryStream);
+            var binaryReader = new BinaryReader(memoryStream);
+            var buildEventArgsWriter = new BuildEventArgsWriter(binaryWriter);
+
+            buildEventArgsWriter.Write(error);
+
+            int positionAfterFirstEvent = (int)memoryStream.Position;
+            memoryStream.Position = 0;
+            // event type
+            Microsoft.Build.Shared.BinaryReaderExtensions.Read7BitEncodedInt(binaryReader);
+            int eventSize = Microsoft.Build.Shared.BinaryReaderExtensions.Read7BitEncodedInt(binaryReader);
+            // overwrite the entire event with garbage
+            binaryWriter.Write(Enumerable.Repeat(byte.MaxValue, eventSize).ToArray());
+
+            memoryStream.Position.ShouldBe(positionAfterFirstEvent, "The event need to be overwritten in place - without overwriting any bytes after the size info");
+
+            buildEventArgsWriter.Write(finished);
+
+            // Remember num of bytes written - we should read them all.
+            long length = memoryStream.Length;
+            // Now move back to the beginning of the stream and start reading.
+            memoryStream.Position = 0;
+
+            using var buildEventArgsReader = new BuildEventArgsReader(binaryReader, BinaryLogger.FileFormatVersion)
+            {
+                SkipUnknownEvents = true
+            };
+
+            List<BinaryLogReaderErrorEventArgs> readerErrors = new();
+            buildEventArgsReader.RecoverableReadError += readerErrors.Add;
+
+            var deserializedEvent = buildEventArgsReader.Read();
+
+            readerErrors.Count.ShouldBe(1);
+            readerErrors[0].ErrorType.ShouldBe(ReaderErrorType.UnknownFormatOfEventData);
+            readerErrors[0].RecordKind.ShouldBe(BinaryLogRecordKind.Error);
+            readerErrors[0].GetFormattedMessage().ShouldContain("FormatException");
+
+            deserializedEvent.Should().BeEquivalentTo(finished);
+
+            // There is nothing else in the stream
+            memoryStream.Position.Should().Be(length);
+        }
+
+        [Fact]
+        public void ForwardCompatibleRead_HandleRemovalOfDataFromEventDefinition()
+        {
+            // BuildErrorEventArgs error = new("Subcategory", "Code", "File", 1, 2, 3, 4, "Message", "HelpKeyword", "SenderName");
+            BuildErrorEventArgs error = new(null, null, null, 1, 2, 3, 4, null, null, null);
+            BuildFinishedEventArgs finished = new("Message", "HelpKeyword", true);
+
+            var memoryStream = new MemoryStream();
+            var binaryWriter = new BinaryWriter(memoryStream);
+            var binaryReader = new BinaryReader(memoryStream);
+            var buildEventArgsWriter = new BuildEventArgsWriter(binaryWriter);
+
+            buildEventArgsWriter.Write(error);
+
+            int positionAfterFirstEvent = (int)memoryStream.Position;
+            memoryStream.Position = 0;
+            // event type
+            Microsoft.Build.Shared.BinaryReaderExtensions.Read7BitEncodedInt(binaryReader);
+            int eventSizePos = (int)memoryStream.Position;
+            int eventSize = Microsoft.Build.Shared.BinaryReaderExtensions.Read7BitEncodedInt(binaryReader);
+            int positionAfterFirstEventSize = (int)memoryStream.Position;
+            memoryStream.Position = eventSizePos;
+            // simulate there are 4 bytes less in the future version of the event - while our reader expects those
+            Microsoft.Build.Shared.BinaryWriterExtensions.Write7BitEncodedInt(binaryWriter, eventSize - 4);
+            memoryStream.Position.ShouldBe(positionAfterFirstEventSize, "The event size need to be overwritten in place - without overwriting any bytes after the size info");
+            // remove the 4 bytes - so that actual size of event is inline with it's written size.
+            memoryStream.Position = positionAfterFirstEvent - 4;
+
+            buildEventArgsWriter.Write(finished);
+
+            // Remember num of bytes written - we should read them all.
+            long length = memoryStream.Length;
+            // Now move back to the beginning of the stream and start reading.
+            memoryStream.Position = 0;
+
+            using var buildEventArgsReader = new BuildEventArgsReader(binaryReader, BinaryLogger.FileFormatVersion)
+            {
+                SkipUnknownEvents = true
+            };
+
+            List<BinaryLogReaderErrorEventArgs> readerErrors = new();
+            buildEventArgsReader.RecoverableReadError += readerErrors.Add;
+
+            var deserializedEvent = buildEventArgsReader.Read();
+
+            readerErrors.Count.ShouldBe(1);
+            readerErrors[0].ErrorType.ShouldBe(ReaderErrorType.UnknownFormatOfEventData);
+            readerErrors[0].RecordKind.ShouldBe(BinaryLogRecordKind.Error);
+            readerErrors[0].GetFormattedMessage().ShouldContain("EndOfStreamException");
+
+            deserializedEvent.Should().BeEquivalentTo(finished);
+
+            // There is nothing else in the stream
+            memoryStream.Position.Should().Be(length);
+        }
+
         private string ToString(BuildEventContext context)
         {
             return $"{context.BuildRequestId} {context.NodeId} {context.ProjectContextId} {context.ProjectInstanceId} {context.SubmissionId} {context.TargetId} {context.TaskId}";
diff --git a/src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs b/src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs
index 78cd0f31dc1..0427761054c 100644
--- a/src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs
+++ b/src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs
@@ -56,6 +56,7 @@ private static void SetResolverForContext(EvaluationContext context, SdkResolver
 
         [Theory]
         [InlineData(EvaluationContext.SharingPolicy.Shared)]
+        [InlineData(EvaluationContext.SharingPolicy.SharedSDKCache)]
         [InlineData(EvaluationContext.SharingPolicy.Isolated)]
         public void SharedContextShouldGetReusedWhereasIsolatedContextShouldNot(EvaluationContext.SharingPolicy policy)
         {
@@ -76,6 +77,9 @@ public void SharedContextShouldGetReusedWhereasIsolatedContextShouldNot(Evaluati
                         case EvaluationContext.SharingPolicy.Shared:
                             currentContext.ShouldBeSameAs(previousContext, $"Shared policy: usage {i} was not the same as usage {i - 1}");
                             break;
+                        case EvaluationContext.SharingPolicy.SharedSDKCache:
+                            currentContext.ShouldNotBeSameAs(previousContext, $"SharedSDKCache policy: usage {i} was the same as usage {i - 1}");
+                            break;
                         case EvaluationContext.SharingPolicy.Isolated:
                             currentContext.ShouldNotBeSameAs(previousContext, $"Isolated policy: usage {i} was the same as usage {i - 1}");
                             break;
@@ -123,11 +127,13 @@ public void PassedInFileSystemShouldBeReusedInSharedContext()
             fileSystem.FileOrDirectoryExistsCalls.ShouldBe(2);
         }
 
-        [Fact]
-        public void IsolatedContextShouldNotSupportBeingPassedAFileSystem()
+        [Theory]
+        [InlineData(EvaluationContext.SharingPolicy.SharedSDKCache)]
+        [InlineData(EvaluationContext.SharingPolicy.Isolated)]
+        public void NonSharedContextShouldNotSupportBeingPassedAFileSystem(EvaluationContext.SharingPolicy policy)
         {
             var fileSystem = new Helpers.LoggingFileSystem();
-            Should.Throw<ArgumentException>(() => EvaluationContext.Create(EvaluationContext.SharingPolicy.Isolated, fileSystem));
+            Should.Throw<ArgumentException>(() => EvaluationContext.Create(policy, fileSystem));
         }
 
         [Theory]
@@ -184,6 +190,7 @@ public void EvaluationShouldUseDirectoryCache(bool useProjectInstance)
 
         [Theory]
         [InlineData(EvaluationContext.SharingPolicy.Shared)]
+        [InlineData(EvaluationContext.SharingPolicy.SharedSDKCache)]
         [InlineData(EvaluationContext.SharingPolicy.Isolated)]
         public void ReevaluationShouldNotReuseInitialContext(EvaluationContext.SharingPolicy policy)
         {
@@ -220,6 +227,7 @@ public void ReevaluationShouldNotReuseInitialContext(EvaluationContext.SharingPo
 
         [Theory]
         [InlineData(EvaluationContext.SharingPolicy.Shared)]
+        [InlineData(EvaluationContext.SharingPolicy.SharedSDKCache)]
         [InlineData(EvaluationContext.SharingPolicy.Isolated)]
         public void ProjectInstanceShouldRespectSharingPolicy(EvaluationContext.SharingPolicy policy)
         {
@@ -267,6 +275,7 @@ public void ProjectInstanceShouldRespectSharingPolicy(EvaluationContext.SharingP
 
         [Theory]
         [InlineData(EvaluationContext.SharingPolicy.Shared, 1, 1)]
+        [InlineData(EvaluationContext.SharingPolicy.SharedSDKCache, 1, 1)]
         [InlineData(EvaluationContext.SharingPolicy.Isolated, 4, 4)]
         public void ContextPinsSdkResolverCache(EvaluationContext.SharingPolicy policy, int sdkLookupsForFoo, int sdkLookupsForBar)
         {
@@ -323,17 +332,20 @@ public static IEnumerable<object[]> ContextPinsGlobExpansionCacheData
                     }
                 };
 
-                yield return new object[]
+                foreach (var policy in new[] { EvaluationContext.SharingPolicy.SharedSDKCache, EvaluationContext.SharingPolicy.Isolated })
                 {
-                    EvaluationContext.SharingPolicy.Isolated,
-                    new[]
+                    yield return new object[]
                     {
-                        new[] {"0.cs"},
-                        new[] {"0.cs", "1.cs"},
-                        new[] {"0.cs", "1.cs", "2.cs"},
-                        new[] {"0.cs", "1.cs", "2.cs", "3.cs"},
-                    }
-                };
+                        policy,
+                        new[]
+                        {
+                            new[] {"0.cs"},
+                            new[] {"0.cs", "1.cs"},
+                            new[] {"0.cs", "1.cs", "2.cs"},
+                            new[] {"0.cs", "1.cs", "2.cs", "3.cs"},
+                        }
+                    };
+                }
             }
         }
 
@@ -394,17 +406,20 @@ public static IEnumerable<object[]> ContextDisambiguatesRelativeGlobsData
                     }
                 };
 
-                yield return new object[]
+                foreach (var policy in new[] { EvaluationContext.SharingPolicy.SharedSDKCache, EvaluationContext.SharingPolicy.Isolated })
                 {
-                    EvaluationContext.SharingPolicy.Isolated,
-                    new[]
+                    yield return new object[]
                     {
-                        new[] {"0.cs"},
-                        new[] {"0.cs", "1.cs"},
-                        new[] {"0.cs", "1.cs", "2.cs"},
-                        new[] {"0.cs", "1.cs", "2.cs", "3.cs"},
-                    }
-                };
+                        policy,
+                        new[]
+                        {
+                            new[] {"0.cs"},
+                            new[] {"0.cs", "1.cs"},
+                            new[] {"0.cs", "1.cs", "2.cs"},
+                            new[] {"0.cs", "1.cs", "2.cs", "3.cs"},
+                        }
+                    };
+                }
             }
         }
 
@@ -672,12 +687,18 @@ private void ContextCachesCommonOutOfProjectCone(bool itemSpecPathIsRelative, Ev
 
             Directory.CreateDirectory(globDirectory.Path);
 
-            // Globs with a directory part will produce items prepended with that directory part
-            foreach (var globExpansion in expectedGlobExpansions)
+            // Globs with a directory part will produce items prepended with that directory part.
+            // Make a deep copy of the argument to avoid writing to global variables.
+            string[][] prependedExpectedGlobExpansions = new string[expectedGlobExpansions.Length][];
+            for (int expIndex = 0; expIndex < expectedGlobExpansions.Length; expIndex++)
             {
+                string[] globExpansion = expectedGlobExpansions[expIndex];
+                string[] prependedGlobExpansion = new string[globExpansion.Length];
+
+                prependedExpectedGlobExpansions[expIndex] = prependedGlobExpansion;
                 for (var i = 0; i < globExpansion.Length; i++)
                 {
-                    globExpansion[i] = Path.Combine(itemSpecDirectoryPart, globExpansion[i]);
+                    prependedGlobExpansion[i] = Path.Combine(itemSpecDirectoryPart, globExpansion[i]);
                 }
             }
 
@@ -708,7 +729,7 @@ private void ContextCachesCommonOutOfProjectCone(bool itemSpecPathIsRelative, Ev
                 context,
                 project =>
                 {
-                    var expectedGlobExpansion = expectedGlobExpansions[evaluationCount];
+                    var expectedGlobExpansion = prependedExpectedGlobExpansions[evaluationCount];
                     evaluationCount++;
 
                     File.WriteAllText(Path.Combine(globDirectory.Path, $"{evaluationCount}.cs"), "");
@@ -771,6 +792,7 @@ public void ContextCachesImportGlobExpansions(EvaluationContext.SharingPolicy po
 
         [Theory]
         [InlineData(EvaluationContext.SharingPolicy.Isolated)]
+        [InlineData(EvaluationContext.SharingPolicy.SharedSDKCache)]
         [InlineData(EvaluationContext.SharingPolicy.Shared)]
         public void ContextCachesExistenceChecksInConditions(EvaluationContext.SharingPolicy policy)
         {
@@ -806,6 +828,7 @@ public void ContextCachesExistenceChecksInConditions(EvaluationContext.SharingPo
                             case EvaluationContext.SharingPolicy.Shared:
                                 project.GetPropertyValue("p").ShouldBe("val");
                                 break;
+                            case EvaluationContext.SharingPolicy.SharedSDKCache:
                             case EvaluationContext.SharingPolicy.Isolated:
                                 project.GetPropertyValue("p").ShouldBeEmpty();
                                 break;
@@ -818,6 +841,7 @@ public void ContextCachesExistenceChecksInConditions(EvaluationContext.SharingPo
 
         [Theory]
         [InlineData(EvaluationContext.SharingPolicy.Isolated)]
+        [InlineData(EvaluationContext.SharingPolicy.SharedSDKCache)]
         [InlineData(EvaluationContext.SharingPolicy.Shared)]
         public void ContextCachesExistenceChecksInGetDirectoryNameOfFileAbove(EvaluationContext.SharingPolicy policy)
         {
@@ -850,6 +874,7 @@ public void ContextCachesExistenceChecksInGetDirectoryNameOfFileAbove(Evaluation
                         case EvaluationContext.SharingPolicy.Shared:
                             searchedPath.EvaluatedValue.ShouldBe(subdirectory.Path);
                             break;
+                        case EvaluationContext.SharingPolicy.SharedSDKCache:
                         case EvaluationContext.SharingPolicy.Isolated:
                             searchedPath.EvaluatedValue.ShouldBe(
                                 evaluationCount == 1
@@ -872,6 +897,7 @@ public void ContextCachesExistenceChecksInGetDirectoryNameOfFileAbove(Evaluation
 
         [Theory]
         [InlineData(EvaluationContext.SharingPolicy.Isolated)]
+        [InlineData(EvaluationContext.SharingPolicy.SharedSDKCache)]
         [InlineData(EvaluationContext.SharingPolicy.Shared)]
         public void ContextCachesExistenceChecksInGetPathOfFileAbove(EvaluationContext.SharingPolicy policy)
         {
@@ -904,6 +930,7 @@ public void ContextCachesExistenceChecksInGetPathOfFileAbove(EvaluationContext.S
                         case EvaluationContext.SharingPolicy.Shared:
                             searchedPath.EvaluatedValue.ShouldBe(subdirectoryFile.Path);
                             break;
+                        case EvaluationContext.SharingPolicy.SharedSDKCache:
                         case EvaluationContext.SharingPolicy.Isolated:
                             searchedPath.EvaluatedValue.ShouldBe(
                                 evaluationCount == 1
diff --git a/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs b/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs
index 44a21a2321f..286d08a84a5 100644
--- a/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs
@@ -914,6 +914,31 @@ public void MultipleImportsVerifyImportsIncludingDuplicates()
             }
         }
 
+        [DotNetOnlyFact("Tests .NET SDK-only error")]
+        public void ImportWithVSPathThrowsCorrectError()
+        {
+            string importPath = null;
+
+            using (TestEnvironment env = TestEnvironment.Create())
+            {
+                // Does not matter that the file or folder does not exist, we are checking for the VS pathing here
+                importPath = "path\\that\\does\\not\\exist\\Microsoft\\VisualStudio\\FileName.txt";
+
+                var content = env.CreateTestProjectWithFiles(@"
+                    <Project ToolsVersion=""msbuilddefaulttoolsversion"" xmlns='msbuildnamespace' >
+                        <Import Project='" + importPath + @"'/>
+                    </Project>
+                ");
+
+                InvalidProjectFileException ex = Assert.Throws<InvalidProjectFileException>(() =>
+                {
+                        Project project = new Project(content.ProjectFile, null, null);
+                });
+
+                Assert.Contains("MSB4278", ex.ErrorCode);
+            }
+        }
+
         /// <summary>
         /// RecordDuplicateButNotCircularImports should not record circular imports (which do come under the category of "duplicate imports".
         /// </summary>
diff --git a/src/Build.UnitTests/Evaluation/Expander_Tests.cs b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
index 030c6db60c3..d7744692f25 100644
--- a/src/Build.UnitTests/Evaluation/Expander_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
@@ -4333,6 +4333,18 @@ public void PropertyFunctionGuidNewGuid()
             Assert.True(Guid.TryParse(result, out Guid guid));
         }
 
+        [Theory]
+        [InlineData("NonExistingFeature", "Undefined")]
+        [InlineData("EvaluationContext_SharedSDKCachePolicy", "Available")]
+        public void PropertyFunctionCheckFeatureAvailability(string featureName, string availability)
+        {
+            var expander = new Expander<ProjectPropertyInstance, ProjectItemInstance>(new PropertyDictionary<ProjectPropertyInstance>(), FileSystems.Default);
+
+            var result = expander.ExpandIntoStringLeaveEscaped($"$([MSBuild]::CheckFeatureAvailability({featureName}))", ExpanderOptions.ExpandProperties, MockElementLocation.Instance);
+
+            Assert.Equal(availability, result);
+        }
+
         [Fact]
         public void PropertyFunctionIntrinsicFunctionGetCurrentToolsDirectory()
         {
diff --git a/src/Build.UnitTests/Evaluation/ItemEvaluation_Tests.cs b/src/Build.UnitTests/Evaluation/ItemEvaluation_Tests.cs
index 67b41b392cf..7f2cee834f7 100644
--- a/src/Build.UnitTests/Evaluation/ItemEvaluation_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/ItemEvaluation_Tests.cs
@@ -562,8 +562,9 @@ public void LazyWildcardExpansionDoesNotEvaluateWildCardsIfNotReferenced()
 <Project>
    <Import Project=`foo/*.props`/>
    <ItemGroup>
-      <i Include=`**/foo/**/*.cs`/>
-      <i2 Include=`**/bar/**/*.cs`/>
+      <i Include=`**/foo/**/*.cs` />
+      <i2 Include=`**/bar/**/*.cs` />
+      <i3 Include=`**/yyy/**/*.cs` Exclude=`mock-value` />
    </ItemGroup>
 
    <ItemGroup>
@@ -584,11 +585,11 @@ public void LazyWildcardExpansionDoesNotEvaluateWildCardsIfNotReferenced()
 ".Cleanup();
             using (var env = TestEnvironment.Create())
             {
-                var projectFiles = env.CreateTestProjectWithFiles(content, new[] { "foo/extra.props", "foo/a.cs", "foo/b.cs", "bar/c.cs", "bar/d.cs" });
+                var projectFiles = env.CreateTestProjectWithFiles(content, new[] { "foo/extra.props", "foo/a.cs", "foo/b.cs", "bar/c.cs", "bar/d.cs", "yyy/d.cs" });
 
                 File.WriteAllText(projectFiles.CreatedFiles[0], import);
 
-                env.SetEnvironmentVariable("MsBuildSkipEagerWildCardEvaluationRegexes", ".*foo.*");
+                env.SetEnvironmentVariable("MsBuildSkipEagerWildCardEvaluationRegexes", ".*foo.*;.*yyy*.");
 
                 EngineFileUtilities.CaptureLazyWildcardRegexes();
 
@@ -596,6 +597,7 @@ public void LazyWildcardExpansionDoesNotEvaluateWildCardsIfNotReferenced()
 
                 Assert.Equal("true", project.GetPropertyValue("FromImport"));
                 Assert.Equal("**/foo/**/*.cs", project.GetConcatenatedItemsOfType("i"));
+                Assert.Equal("**/yyy/**/*.cs", project.GetConcatenatedItemsOfType("i3"));
 
                 var expectedItems = "bar\\c.cs;bar\\d.cs";
 
diff --git a/src/Build.UnitTests/Evaluation/ProjectRootElementCache_Tests.cs b/src/Build.UnitTests/Evaluation/ProjectRootElementCache_Tests.cs
index 1d30e7f6067..915e38582d5 100644
--- a/src/Build.UnitTests/Evaluation/ProjectRootElementCache_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/ProjectRootElementCache_Tests.cs
@@ -79,7 +79,7 @@ public void AddEntry()
         /// <summary>
         /// Tests that a strong reference is held to a single item
         /// </summary>
-        [WindowsFullFrameworkOnlyFact(additionalMessage: "This test fails on .NET Core and Mono: https://github.com/dotnet/msbuild/issues/282")]
+        [WindowsFullFrameworkOnlyFact(additionalMessage: "This test fails on .NET Core: https://github.com/dotnet/msbuild/issues/282")]
         public void AddEntryStrongReference()
         {
             string projectPath = NativeMethodsShared.IsUnixLike ? "/foo" : "c:\\foo";
diff --git a/src/Build.UnitTests/Evaluation/ProjectSdkImplicitImport_Tests.cs b/src/Build.UnitTests/Evaluation/ProjectSdkImplicitImport_Tests.cs
index 7f026071d8c..3b46c282d24 100644
--- a/src/Build.UnitTests/Evaluation/ProjectSdkImplicitImport_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/ProjectSdkImplicitImport_Tests.cs
@@ -624,6 +624,9 @@ internal void SdkPropertiesAreExpanded(SdkPropertiesAreExpandedCase data)
         {
             _env.SetEnvironmentVariable("MSBuildSDKsPath", _testSdkRoot);
             _env.SetEnvironmentVariable("MSBUILD_SDKREFERENCE_PROPERTY_EXPANSION_MODE", data.Mode.ToString());
+            _env.SetEnvironmentVariable("MSBUILDINCLUDEDEFAULTSDKRESOLVER", "false");
+
+            Build.BackEnd.SdkResolution.CachingSdkResolverLoader.ResetStateForTests();
 
             File.WriteAllText(_sdkPropsPath, _sdkPropsContent);
             File.WriteAllText(_sdkTargetsPath, _sdkTargetsContent);
@@ -804,6 +807,7 @@ public override SdkResult Resolve(SdkReference sdk, SdkResolverContext resolverC
         public void Dispose()
         {
             _env.Dispose();
+            Build.BackEnd.SdkResolution.CachingSdkResolverLoader.ResetStateForTests();
         }
 
         private void VerifyPropertyFromImplicitImport(Project project, string propertyName, string expectedContainingProjectPath, string expectedValue)
diff --git a/src/Build.UnitTests/EvaluationProfiler_Tests.cs b/src/Build.UnitTests/EvaluationProfiler_Tests.cs
index 078dc9e3520..bcf76c7e5a1 100644
--- a/src/Build.UnitTests/EvaluationProfiler_Tests.cs
+++ b/src/Build.UnitTests/EvaluationProfiler_Tests.cs
@@ -95,11 +95,7 @@ public void Dispose()
 <ItemGroup>
     <CSFile Include='file.cs'/>
 </ItemGroup>")]
-#if MONO
-        [Theory(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Theory]
-#endif
         public void VerifySimpleProfiledData(string elementName, string body)
         {
             string contents = $@"
@@ -131,11 +127,7 @@ public void VerifySimpleProfiledData(string elementName, string body)
 <ItemGroup>
     <CSFile Include='file.cs'/>
 </ItemGroup>")]
-#if MONO
-        [Theory(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Theory]
-#endif
         public void VerifySimpleProfiledDataWithoutProjectLoadSetting(string elementName, string body)
         {
             string contents = $@"
@@ -149,11 +141,7 @@ public void VerifySimpleProfiledDataWithoutProjectLoadSetting(string elementName
             Assert.Contains(profiledElements, location => location.ElementName == elementName);
         }
 
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void VerifyProfiledData()
         {
             var result = BuildAndGetProfilerResult(SpecData);
@@ -186,11 +174,7 @@ public void VerifyProfiledData()
             Assert.Single(profiledElements.Where(location => location.ElementName == "Target"));
         }
 
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void VerifyProfiledGlobData()
         {
             string contents = @"
@@ -220,11 +204,7 @@ public void VerifyProfiledGlobData()
             Assert.Equal(2, totalGlobLocation.NumberOfHits);
         }
 
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void VerifyParentIdData()
         {
             string contents = @"
@@ -264,11 +244,7 @@ public void VerifyParentIdData()
             Assert.Equal(target.Id, messageTarget.ParentId);
         }
 
-#if MONO
-        [Fact(Skip = "https://github.com/dotnet/msbuild/issues/1240")]
-#else
         [Fact]
-#endif
         public void VerifyIdsSanity()
         {
             var result = BuildAndGetProfilerResult(SpecData);
diff --git a/src/Build.UnitTests/Graph/GraphTestingUtilities.cs b/src/Build.UnitTests/Graph/GraphTestingUtilities.cs
index 6b415681733..d23ce086db7 100644
--- a/src/Build.UnitTests/Graph/GraphTestingUtilities.cs
+++ b/src/Build.UnitTests/Graph/GraphTestingUtilities.cs
@@ -65,7 +65,7 @@ public static void AssertOuterBuild(
             foreach (ProjectGraphNode outerBuildReferencer in outerBuild.ReferencingProjects)
             {
                 ProjectGraphNode[] innerBuilds = outerBuildReferencer.ProjectReferences
-                    .Where(p => IsInnerBuild(p) && p.ProjectInstance.FullPath == outerBuild.ProjectInstance.FullPath)
+                    .Where(p => p.ProjectType == ProjectInterpretation.ProjectType.InnerBuild && p.ProjectInstance.FullPath == outerBuild.ProjectInstance.FullPath)
                     .ToArray();
 
                 innerBuilds.Length.ShouldBe(expectedInnerBuildCount);
@@ -91,7 +91,7 @@ public static void AssertNonMultitargetingNode(ProjectGraphNode node, Dictionary
         {
             additionalGlobalProperties ??= new Dictionary<string, string>();
 
-            IsNotMultitargeting(node).ShouldBeTrue();
+            node.ProjectType.ShouldBe(ProjectInterpretation.ProjectType.NonMultitargeting);
             node.ProjectInstance.GlobalProperties.ShouldBeSameIgnoringOrder(EmptyGlobalProperties.AddRange(additionalGlobalProperties));
             node.ProjectInstance.GetProperty(InnerBuildPropertyName).ShouldBeNull();
         }
@@ -100,8 +100,7 @@ public static void AssertOuterBuildEvaluation(ProjectGraphNode outerBuild, Dicti
         {
             additionalGlobalProperties.ShouldNotBeNull();
 
-            IsOuterBuild(outerBuild).ShouldBeTrue();
-            IsInnerBuild(outerBuild).ShouldBeFalse();
+            outerBuild.ProjectType.ShouldBe(ProjectInterpretation.ProjectType.OuterBuild);
 
             outerBuild.ProjectInstance.GetProperty(InnerBuildPropertyName).ShouldBeNull();
             outerBuild.ProjectInstance.GlobalProperties.ShouldBeSameIgnoringOrder(EmptyGlobalProperties.AddRange(additionalGlobalProperties));
@@ -114,8 +113,7 @@ public static void AssertInnerBuildEvaluation(
         {
             additionalGlobalProperties.ShouldNotBeNull();
 
-            IsOuterBuild(innerBuild).ShouldBeFalse();
-            IsInnerBuild(innerBuild).ShouldBeTrue();
+            innerBuild.ProjectType.ShouldBe(ProjectInterpretation.ProjectType.InnerBuild);
 
             var innerBuildPropertyValue = innerBuild.ProjectInstance.GetPropertyValue(InnerBuildPropertyName);
 
@@ -130,21 +128,6 @@ public static void AssertInnerBuildEvaluation(
             }
         }
 
-        internal static bool IsOuterBuild(ProjectGraphNode project)
-        {
-            return ProjectInterpretation.GetProjectType(project.ProjectInstance) == ProjectInterpretation.ProjectType.OuterBuild;
-        }
-
-        internal static bool IsInnerBuild(ProjectGraphNode project)
-        {
-            return ProjectInterpretation.GetProjectType(project.ProjectInstance) == ProjectInterpretation.ProjectType.InnerBuild;
-        }
-
-        internal static bool IsNotMultitargeting(ProjectGraphNode project)
-        {
-            return ProjectInterpretation.GetProjectType(project.ProjectInstance) == ProjectInterpretation.ProjectType.NonMultitargeting;
-        }
-
         internal static ProjectGraphNode GetFirstNodeWithProjectNumber(ProjectGraph graph, int projectNum)
         {
             return GetNodesWithProjectNumber(graph, projectNum).First();
@@ -157,7 +140,7 @@ internal static IEnumerable<ProjectGraphNode> GetNodesWithProjectNumber(ProjectG
 
         internal static ProjectGraphNode GetOuterBuild(ProjectGraph graph, int projectNumber)
         {
-            return GetNodesWithProjectNumber(graph, projectNumber).FirstOrDefault(IsOuterBuild);
+            return GetNodesWithProjectNumber(graph, projectNumber).FirstOrDefault(i => i.ProjectType == ProjectInterpretation.ProjectType.OuterBuild);
         }
 
         internal static IReadOnlyCollection<ProjectGraphNode> GetInnerBuilds(ProjectGraph graph, int projectNumber)
@@ -171,7 +154,7 @@ internal static IReadOnlyCollection<ProjectGraphNode> GetInnerBuilds(ProjectGrap
             else
             {
                 var innerBuilds = GetNodesWithProjectNumber(graph, projectNumber)
-                    .Where(p => IsInnerBuild(p) && p.ProjectInstance.FullPath.Equals(outerBuild.ProjectInstance.FullPath))
+                    .Where(p => p.ProjectType == ProjectInterpretation.ProjectType.InnerBuild && p.ProjectInstance.FullPath.Equals(outerBuild.ProjectInstance.FullPath))
                     .ToArray();
 
                 innerBuilds.ShouldNotBeEmpty();
diff --git a/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs b/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs
index d3f01d757fb..063df0be739 100644
--- a/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs
+++ b/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs
@@ -558,9 +558,7 @@ private void AssertBuild(
 
             TransientTestFile CreateTmpFile(TestEnvironment env)
             {
-                return NativeMethodsShared.IsMono && NativeMethodsShared.IsOSX
-                                                ? env.CreateFile(new TransientTestFolder(Path.Combine(Directory.GetCurrentDirectory(), Guid.NewGuid().ToString("N"))))
-                                                : env.CreateFile();
+                return env.CreateFile();
             }
         }
 
diff --git a/src/Build.UnitTests/Graph/ProjectGraph_Tests.cs b/src/Build.UnitTests/Graph/ProjectGraph_Tests.cs
index f2bc8fd22a8..26729eee551 100644
--- a/src/Build.UnitTests/Graph/ProjectGraph_Tests.cs
+++ b/src/Build.UnitTests/Graph/ProjectGraph_Tests.cs
@@ -2133,7 +2133,7 @@ public void InnerBuildProducedByOuterBuildCanBeReferencedByAnotherNode()
 
             graph.ProjectNodes.Count.ShouldBe(4);
 
-            var outerBuild = graph.GraphRoots.First(IsOuterBuild);
+            var outerBuild = graph.GraphRoots.First(i => i.ProjectType == ProjectInterpretation.ProjectType.OuterBuild);
 
             AssertOuterBuild(outerBuild, graph, additionalGlobalProperties);
             AssertNonMultitargetingNode(GetFirstNodeWithProjectNumber(graph, 2), additionalGlobalProperties);
@@ -2215,7 +2215,7 @@ public void InnerBuildsProducedByOuterBuildsCanBeReferencedByOtherInnerBuilds()
 
             AssertOuterBuild(outerBuild1, graph, additionalGlobalProperties);
 
-            var innerBuild1WithReferenceToInnerBuild2 = outerBuild1.ProjectReferences.FirstOrDefault(n => IsInnerBuild(n) && n.ProjectInstance.GlobalProperties[InnerBuildPropertyName] == "a");
+            var innerBuild1WithReferenceToInnerBuild2 = outerBuild1.ProjectReferences.FirstOrDefault(n => n.ProjectType == ProjectInterpretation.ProjectType.InnerBuild && n.ProjectInstance.GlobalProperties[InnerBuildPropertyName] == "a");
             innerBuild1WithReferenceToInnerBuild2.ShouldNotBeNull();
 
             var outerBuild2 = GetOuterBuild(graph, 2);
diff --git a/src/Build.UnitTests/Instance/TaskItem_Tests.cs b/src/Build.UnitTests/Instance/TaskItem_Tests.cs
index 7c9a8b14f6c..9a9cc0eb4ca 100644
--- a/src/Build.UnitTests/Instance/TaskItem_Tests.cs
+++ b/src/Build.UnitTests/Instance/TaskItem_Tests.cs
@@ -289,11 +289,7 @@ public void Escaping1()
         /// <summary>
         /// Flushing an item through a task run in the task host also should not mess up special characters on the metadata.
         /// </summary>
-#if RUNTIME_TYPE_NETCORE || MONO
-        [Fact(Skip = "FEATURE: TASKHOST")]
-#else
         [Fact]
-#endif
         public void Escaping2()
         {
             string content = ObjectModelHelpers.CleanupFileContents(@"
@@ -346,11 +342,7 @@ public void Escaping2()
         /// <summary>
         /// Flushing an item through a task run in the task host also should not mess up the escaping of the itemspec either.
         /// </summary>
-#if RUNTIME_TYPE_NETCORE || MONO
-        [Fact(Skip = "FEATURE: TASKHOST")]
-#else
         [Fact]
-#endif
         public void Escaping3()
         {
             string content = ObjectModelHelpers.CleanupFileContents(@"
diff --git a/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj b/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
index dda2456a9f9..b9c1cefc88c 100644
--- a/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
+++ b/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
@@ -9,7 +9,7 @@
     <DefineConstants>$(DefineConstants);MICROSOFT_BUILD_ENGINE_UNITTESTS</DefineConstants>
 
     <!-- Define a constant so we can skip tests that require MSBuildTaskHost -->
-    <DefineConstants Condition="'$(MSBuildRuntimeType)' == 'Core' or '$(MonoBuild)' == 'true'">$(DefineConstants);NO_MSBUILDTASKHOST</DefineConstants>
+    <DefineConstants Condition="'$(MSBuildRuntimeType)' == 'Core'">$(DefineConstants);NO_MSBUILDTASKHOST</DefineConstants>
 
     <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
   </PropertyGroup>
@@ -28,21 +28,20 @@
     <ProjectReference Include="..\Build\Microsoft.Build.csproj" />
     <ProjectReference Include="..\Framework\Microsoft.Build.Framework.csproj" />
     <ProjectReference Include="..\MSBuild\MSBuild.csproj" />
-    <ProjectReference Include="..\MSBuildTaskHost\MSBuildTaskHost.csproj" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(MonoBuild)' != 'true'" Aliases="MSBuildTaskHost" />
+    <ProjectReference Include="..\MSBuildTaskHost\MSBuildTaskHost.csproj" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'" Aliases="MSBuildTaskHost" />
     <ProjectReference Include="..\Tasks\Microsoft.Build.Tasks.csproj" />
     <ProjectReference Include="..\Utilities\Microsoft.Build.Utilities.csproj" />
     <ProjectReference Include="..\Xunit.NetCore.Extensions\Xunit.NetCore.Extensions.csproj" />
+    <ProjectReference Include="..\UnitTests.Shared\Microsoft.Build.UnitTests.Shared.csproj" />
 
     <ProjectReference Include="..\Samples\TaskWithDependency\TaskWithDependency.csproj" Private="false" ReferenceOutputAssembly="false" OutputItemType="TaskWithDependencyResolvedProjectReferencePath">
       <SetTargetFramework Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">TargetFramework=$(FullFrameworkTFM)</SetTargetFramework>
-      <SetTargetFramework Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(MonoBuild)' == 'true'">TargetFramework=$(FullFrameworkTFM)</SetTargetFramework>
       <SetTargetFramework Condition="'$(TargetFrameworkIdentifier)' != '.NETFramework'">TargetFramework=$(LatestDotNetCoreForMSBuild)</SetTargetFramework>
     </ProjectReference>
     <ProjectReference Include="..\Samples\PortableTask\PortableTask.csproj" Private="false" ReferenceOutputAssembly="false" OutputItemType="PortableTaskResolvedProjectReferencePath" />
 
     <ProjectReference Include="..\Samples\ProjectCachePlugin\ProjectCachePlugin.csproj" Private="false" ReferenceOutputAssembly="false">
       <SetTargetFramework Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">TargetFramework=$(FullFrameworkTFM)</SetTargetFramework>
-      <SetTargetFramework Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(MonoBuild)' == 'true'">TargetFramework=$(FullFrameworkTFM)</SetTargetFramework>
       <SetTargetFramework Condition="'$(TargetFrameworkIdentifier)' != '.NETFramework'">TargetFramework=$(LatestDotNetCoreForMSBuild)</SetTargetFramework>
     </ProjectReference>
 
@@ -50,27 +49,13 @@
   </ItemGroup>
 
   <ItemGroup>
-    <Compile Include="..\Shared\UnitTests\BuildEventArgsExtension.cs" />
+    <Compile Include="..\Shared\UnitTests\CommunicationUtilities_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\EscapingUtilities_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\ErrorUtilities_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\PrintLineDebugger_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\FileUtilities_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\FileMatcher_Tests.cs" />
-    <Compile Include="..\Shared\UnitTests\MockEngine.cs" />
-    <Compile Include="..\Shared\UnitTests\MockLogger.cs" />
     <Compile Include="..\Shared\UnitTests\ResourceUtilities_Tests.cs" />
-    <Compile Include="..\UnitTests.Shared\EnvironmentProvider.cs" />
-    <Compile Include="..\UnitTests.Shared\RunnerUtilities.cs" />
-    <Compile Include="..\UnitTests.Shared\DriveMapping.cs" />
-    <Compile Include="..\UnitTests.Shared\DummyMappedDrive.cs" />
-    <Compile Include="..\UnitTests.Shared\DummyMappedDriveUtils.cs" />
-    <Compile Include="..\Shared\UnitTests\StreamHelpers.cs" />
-    <Compile Include="..\Shared\UnitTests\EngineTestEnvironment.cs">
-      <Link>EngineTestEnvironment.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\UnitTests\TestEnvironment.cs">
-      <Link>TestEnvironment.cs</Link>
-    </Compile>
     <Compile Include="..\Shared\UnitTests\TypeLoader_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\TypeLoader_Dependencies_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\XmakeAttributes_Tests.cs">
@@ -83,22 +68,12 @@
     <Compile Include="..\Shared\UnitTests\TaskParameter_Tests.cs">
       <Link>TaskParameter_Tests.cs</Link>
     </Compile>
-    <Compile Include="..\Shared\UnitTests\ObjectModelHelpers.cs" />
     <Compile Include="..\Shared\UnitTests\CopyOnWriteDictionary_Tests.cs">
       <Link>Collections\CopyOnWriteDictionary_Tests.cs</Link>
     </Compile>
-    <Compile Include="..\Shared\UnitTests\TestData\GlobbingTestData.cs">
-      <Link>TestData\GlobbingTestData.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\UnitTests\ImmutableDictionary_Tests.cs" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(MSBuildRuntimeType)' == 'Full' and '$(MonoBuild)' != 'true'">
+    <Compile Include="..\Shared\UnitTests\ImmutableDictionary_Tests.cs" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(MSBuildRuntimeType)' == 'Full'">
       <Link>Collections\ImmutableDictionary_Tests.cs</Link>
     </Compile>
-    <Compile Include="..\Shared\UnitTests\LongPathSupportDisabledFactAttribute.cs">
-      <Link>Shared\LongPathSupportDisabledFactAttribute.cs</Link>
-    </Compile>
-    <Compile Include="..\UnitTests.Shared\RequiresSymbolicLinksFactAttribute.cs">
-      <Link>RequiresSymbolicLinksFactAttribute.cs</Link>
-    </Compile>
 
     <None Include="..\Shared\UnitTests\App.config">
       <Link>App.config</Link>
diff --git a/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs b/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
index 758c98729ac..c994283bdbe 100644
--- a/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
+++ b/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
@@ -557,6 +557,7 @@ public void ProjectCacheByVsScenarioIgnoresSlnDisabledProjects()
                         currentBuildEnvironment.Mode,
                         currentBuildEnvironment.CurrentMSBuildExePath,
                         currentBuildEnvironment.RunningTests,
+                        currentBuildEnvironment.RunningInMSBuildExe,
                         runningInVisualStudio: true,
                         visualStudioPath: currentBuildEnvironment.VisualStudioInstallRootDirectory));
 
@@ -674,6 +675,7 @@ public void DesignTimeBuildsDuringVsScenarioShouldDisableTheCache()
                         currentBuildEnvironment.Mode,
                         currentBuildEnvironment.CurrentMSBuildExePath,
                         currentBuildEnvironment.RunningTests,
+                        currentBuildEnvironment.RunningInMSBuildExe,
                         runningInVisualStudio: true,
                         visualStudioPath: currentBuildEnvironment.VisualStudioInstallRootDirectory));
 
@@ -1440,6 +1442,7 @@ public void ParallelStressTestForVsScenario(bool useSynchronousLogging, bool dis
                         currentBuildEnvironment.Mode,
                         currentBuildEnvironment.CurrentMSBuildExePath,
                         currentBuildEnvironment.RunningTests,
+                        currentBuildEnvironment.RunningInMSBuildExe,
                         runningInVisualStudio: true,
                         visualStudioPath: currentBuildEnvironment.VisualStudioInstallRootDirectory));
 
diff --git a/src/Build.UnitTests/Utilities_Tests.cs b/src/Build.UnitTests/Utilities_Tests.cs
index 491ad832358..6f618546667 100644
--- a/src/Build.UnitTests/Utilities_Tests.cs
+++ b/src/Build.UnitTests/Utilities_Tests.cs
@@ -2,14 +2,11 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
-using System.Collections;
 using System.Collections.Generic;
 using System.IO;
-using Microsoft.Build.Shared;
 using Shouldly;
 using Xunit;
 using Xunit.Abstractions;
-using CommunicationsUtilities = Microsoft.Build.Internal.CommunicationsUtilities;
 using InternalUtilities = Microsoft.Build.Internal.Utilities;
 using InvalidProjectFileException = Microsoft.Build.Exceptions.InvalidProjectFileException;
 using MSBuildApp = Microsoft.Build.CommandLine.MSBuildApp;
@@ -322,24 +319,6 @@ public void CreateToolsVersionString()
             Assert.Equal("\"66\", \"44\"", result);
         }
 
-        /// <summary>
-        /// Verify our custom way of getting env vars gives the same results as the BCL.
-        /// </summary>
-        [Fact]
-        public void GetEnvVars()
-        {
-            IDictionary<string, string> envVars = CommunicationsUtilities.GetEnvironmentVariables();
-            IDictionary referenceVars = Environment.GetEnvironmentVariables();
-            IDictionary<string, string> referenceVars2 = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase);
-
-            foreach (DictionaryEntry item in referenceVars)
-            {
-                referenceVars2.Add((string)item.Key, (string)item.Value);
-            }
-
-            Helpers.AssertCollectionsValueEqual(envVars, referenceVars2);
-        }
-
         protected string GetXmlContents(string xmlText)
         {
             XmlDocumentWithLocation xmldoc = new XmlDocumentWithLocation(loadAsReadOnly);
diff --git a/src/Build/AssemblyInfo.cs b/src/Build/AssemblyInfo.cs
index 86a5a8073d2..6e57337863d 100644
--- a/src/Build/AssemblyInfo.cs
+++ b/src/Build/AssemblyInfo.cs
@@ -19,6 +19,7 @@
 #endif
 [assembly: InternalsVisibleTo("Microsoft.Build.Framework.UnitTests, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")]
 [assembly: InternalsVisibleTo("Microsoft.Build.Engine.UnitTests, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")]
+[assembly: InternalsVisibleTo("Microsoft.Build.UnitTests.Shared, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")]
 [assembly: InternalsVisibleTo("Microsoft.Build.Conversion.Core, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293")]
 [assembly: InternalsVisibleTo("Microsoft.Build.Conversion.Unittest, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")]
 [assembly: InternalsVisibleTo("Microsoft.Build.Tasks.Cop, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")]
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 3d2088d264c..33fba22ca1e 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1956,11 +1956,20 @@ private void ExecuteGraphBuildScheduler(GraphBuildSubmission submission)
             {
                 _projectCacheService.InitializePluginsForGraph(projectGraph, submission.BuildRequestData.TargetNames, _executionCancellationTokenSource.Token);
 
-                var targetListTask = projectGraph.GetTargetLists(submission.BuildRequestData.TargetNames);
+                IReadOnlyDictionary<ProjectGraphNode, ImmutableList<string>> targetsPerNode = projectGraph.GetTargetLists(submission.BuildRequestData.TargetNames);
 
-                DumpGraph(projectGraph, targetListTask);
+                DumpGraph(projectGraph, targetsPerNode);
 
-                resultsPerNode = BuildGraph(projectGraph, targetListTask, submission.BuildRequestData);
+                // Non-graph builds verify this in RequestBuilder, but for graph builds we need to disambiguate
+                // between entry nodes and other nodes in the graph since only entry nodes should error. Just do
+                // the verification expicitly before the build even starts.
+                foreach (ProjectGraphNode entryPointNode in projectGraph.EntryPointNodes)
+                {
+                    ImmutableList<string> targetList = targetsPerNode[entryPointNode];
+                    ProjectErrorUtilities.VerifyThrowInvalidProject(targetList.Count > 0, entryPointNode.ProjectInstance.ProjectFileLocation, "NoTargetSpecified");
+                }
+
+                resultsPerNode = BuildGraph(projectGraph, targetsPerNode, submission.BuildRequestData);
             }
             else
             {
diff --git a/src/Build/BackEnd/Components/Caching/ResultsCache.cs b/src/Build/BackEnd/Components/Caching/ResultsCache.cs
index d8167fe45b0..0823f86cffe 100644
--- a/src/Build/BackEnd/Components/Caching/ResultsCache.cs
+++ b/src/Build/BackEnd/Components/Caching/ResultsCache.cs
@@ -6,6 +6,7 @@
 using System.Collections.Concurrent;
 using System.Collections.Generic;
 using Microsoft.Build.Execution;
+using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 
 #nullable disable
@@ -145,7 +146,7 @@ public BuildResult GetResultsForConfiguration(int configurationId)
         /// 3. If there are no specified targets, then all default targets in the request must have non-skipped results
         ///    in the cache.
         /// </summary>
-        /// <param name="request">The request whose results we should return</param>
+        /// <param name="request">The request whose results we should return.</param>
         /// <param name="configInitialTargets">The initial targets for the request's configuration.</param>
         /// <param name="configDefaultTargets">The default targets for the request's configuration.</param>
         /// <param name="skippedResultsDoNotCauseCacheMiss">If false, a cached skipped target will cause this method to return "NotSatisfied".
@@ -156,7 +157,7 @@ public BuildResult GetResultsForConfiguration(int configurationId)
         public ResultsCacheResponse SatisfyRequest(BuildRequest request, List<string> configInitialTargets, List<string> configDefaultTargets, bool skippedResultsDoNotCauseCacheMiss)
         {
             ErrorUtilities.VerifyThrow(request.IsConfigurationResolved, "UnresolvedConfigurationInRequest");
-            ResultsCacheResponse response = new ResultsCacheResponse(ResultsCacheResponseType.NotSatisfied);
+            ResultsCacheResponse response = new(ResultsCacheResponseType.NotSatisfied);
 
             lock (_resultsByConfiguration)
             {
@@ -205,11 +206,6 @@ public ResultsCacheResponse SatisfyRequest(BuildRequest request, List<string> co
                             response.Results = new BuildResult(request, allResults, targetsToAddResultsFor.ToArray(), null);
                         }
                     }
-                    else
-                    {
-                        // Some targets were not satisfied.
-                        response.Type = ResultsCacheResponseType.NotSatisfied;
-                    }
                 }
             }
 
diff --git a/src/Build/BackEnd/Components/Communications/CurrentHost.cs b/src/Build/BackEnd/Components/Communications/CurrentHost.cs
index 97855dfd97f..37bc10fc28e 100644
--- a/src/Build/BackEnd/Components/Communications/CurrentHost.cs
+++ b/src/Build/BackEnd/Components/Communications/CurrentHost.cs
@@ -1,7 +1,7 @@
 Ôªø// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-#if RUNTIME_TYPE_NETCORE || MONO
+#if RUNTIME_TYPE_NETCORE
 using System.Diagnostics;
 using System.IO;
 using Microsoft.Build.Shared;
@@ -14,7 +14,7 @@ namespace Microsoft.Build.BackEnd
     internal static class CurrentHost
     {
 
-#if RUNTIME_TYPE_NETCORE || MONO
+#if RUNTIME_TYPE_NETCORE
         private static string s_currentHost;
 #endif
 
@@ -24,7 +24,7 @@ internal static class CurrentHost
         /// <returns>The full path to the executable hosting the current process, or null if running on Full Framework on Windows.</returns>
         public static string GetCurrentHost()
         {
-#if RUNTIME_TYPE_NETCORE || MONO
+#if RUNTIME_TYPE_NETCORE
             if (s_currentHost == null)
             {
                 string dotnetExe = Path.Combine(FileUtilities.GetFolderAbove(BuildEnvironmentHelper.Instance.CurrentMSBuildToolsDirectory, 2),
diff --git a/src/Build/BackEnd/Components/Communications/NodeLauncher.cs b/src/Build/BackEnd/Components/Communications/NodeLauncher.cs
index ddec6d79279..ff60a441e23 100644
--- a/src/Build/BackEnd/Components/Communications/NodeLauncher.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeLauncher.cs
@@ -93,13 +93,9 @@ private Process StartInternal(string msbuildLocation, string commandLineArgs)
 
             string exeName = msbuildLocation;
 
-#if RUNTIME_TYPE_NETCORE || MONO
-            // Mono automagically uses the current mono, to execute a managed assembly
-            if (!NativeMethodsShared.IsMono)
-            {
-                // Run the child process with the same host as the currently-running process.
-                exeName = CurrentHost.GetCurrentHost();
-            }
+#if RUNTIME_TYPE_NETCORE
+            // Run the child process with the same host as the currently-running process.
+            exeName = CurrentHost.GetCurrentHost();
 #endif
 
             if (!NativeMethodsShared.IsWindows)
diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
index 273e6990f13..99e706d2486 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
@@ -490,7 +490,7 @@ internal static void ConnectToPipeStream(NamedPipeClientStream nodeStream, strin
             nodeStream.Connect(timeout);
 
 #if !FEATURE_PIPEOPTIONS_CURRENTUSERONLY
-            if (NativeMethodsShared.IsWindows && !NativeMethodsShared.IsMono)
+            if (NativeMethodsShared.IsWindows)
             {
                 // Verify that the owner of the pipe is us.  This prevents a security hole where a remote node has
                 // been faked up with ACLs that would let us attach to it.  It could then issue fake build requests back to
@@ -514,7 +514,7 @@ internal static void ConnectToPipeStream(NamedPipeClientStream nodeStream, strin
 
             CommunicationsUtilities.Trace("Reading handshake from pipe {0}", pipeName);
 
-#if NETCOREAPP2_1_OR_GREATER || MONO
+#if NETCOREAPP2_1_OR_GREATER
             nodeStream.ReadEndOfHandshakeSignal(true, timeout);
 #else
             nodeStream.ReadEndOfHandshakeSignal(true);
diff --git a/src/Build/BackEnd/Components/Logging/EventSourceSink.cs b/src/Build/BackEnd/Components/Logging/EventSourceSink.cs
index 5e5e883ff08..340dfafc495 100644
--- a/src/Build/BackEnd/Components/Logging/EventSourceSink.cs
+++ b/src/Build/BackEnd/Components/Logging/EventSourceSink.cs
@@ -537,15 +537,11 @@ private void RaiseProjectStartedEvent(object sender, ProjectStartedEventArgs bui
                     // if a logger has failed politely, abort immediately
                     // first unregister all loggers, since other loggers may receive remaining events in unexpected orderings
                     // if a fellow logger is throwing in an event handler.
-                    this.UnregisterAllEventHandlers();
+                    UnregisterAllEventHandlers();
                     throw;
                 }
                 catch (Exception exception)
                 {
-                    // first unregister all loggers, since other loggers may receive remaining events in unexpected orderings
-                    // if a fellow logger is throwing in an event handler.
-                    this.UnregisterAllEventHandlers();
-
                     if (ExceptionHandling.IsCriticalException(exception))
                     {
                         throw;
@@ -873,9 +869,9 @@ private void RaiseAnyEvent(object sender, BuildEventArgs buildEvent)
                     // if a logger has failed politely, abort immediately
                     // first unregister all loggers, since other loggers may receive remaining events in unexpected orderings
                     // if a fellow logger is throwing in an event handler.
-                    this.UnregisterAllEventHandlers();
+                    UnregisterAllEventHandlers();
 
-                    // We ought to dump this farther up the stack, but if for example a task is logging an event within a
+                    // We ought to dump this further up the stack, but if for example a task is logging an event within a
                     // catch(Exception) block and not rethrowing it, there's the possibility that this exception could
                     // just get silently eaten.  So better to have duplicates than to not log the problem at all. :)
                     ExceptionHandling.DumpExceptionToFile(exception);
@@ -884,11 +880,7 @@ private void RaiseAnyEvent(object sender, BuildEventArgs buildEvent)
                 }
                 catch (Exception exception)
                 {
-                    // first unregister all loggers, since other loggers may receive remaining events in unexpected orderings
-                    // if a fellow logger is throwing in an event handler.
-                    this.UnregisterAllEventHandlers();
-
-                    // We ought to dump this farther up the stack, but if for example a task is logging an event within a
+                    // We ought to dump this further up the stack, but if for example a task is logging an event within a
                     // catch(Exception) block and not rethrowing it, there's the possibility that this exception could
                     // just get silently eaten.  So better to have duplicates than to not log the problem at all. :)
                     ExceptionHandling.DumpExceptionToFile(exception);
diff --git a/src/Build/BackEnd/Components/Logging/ProjectLoggingContext.cs b/src/Build/BackEnd/Components/Logging/ProjectLoggingContext.cs
index 1058ee7f8b1..eaf5e31be4f 100644
--- a/src/Build/BackEnd/Components/Logging/ProjectLoggingContext.cs
+++ b/src/Build/BackEnd/Components/Logging/ProjectLoggingContext.cs
@@ -81,7 +81,7 @@ private ProjectLoggingContext(
             List<string> targets,
             string toolsVersion,
             PropertyDictionary<ProjectPropertyInstance> projectProperties,
-            ItemDictionary<ProjectItemInstance> projectItems,
+            IItemDictionary<ProjectItemInstance> projectItems,
             BuildEventContext parentBuildEventContext,
             int evaluationId,
             int projectContextId)
diff --git a/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs b/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs
index 3a954dec21b..fb23fdf63e8 100644
--- a/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs
+++ b/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs
@@ -47,8 +47,11 @@ public enum CacheResultType
     public class CacheResult
     {
         public CacheResultType ResultType { get; }
+
         public BuildResult? BuildResult { get; }
+
         public ProxyTargets? ProxyTargets { get; }
+
         internal Exception? Exception { get; }
 
         private CacheResult(
diff --git a/src/Build/BackEnd/Components/RequestBuilder/Lookup.cs b/src/Build/BackEnd/Components/RequestBuilder/Lookup.cs
index b5bcf7ca165..e0bcc5eff38 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/Lookup.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/Lookup.cs
@@ -88,7 +88,7 @@ internal class Lookup : IPropertyProvider<ProjectPropertyInstance>, IItemProvide
         /// <summary>
         /// Construct a lookup over specified items and properties.
         /// </summary>
-        internal Lookup(ItemDictionary<ProjectItemInstance> projectItems, PropertyDictionary<ProjectPropertyInstance> properties)
+        internal Lookup(IItemDictionary<ProjectItemInstance> projectItems, PropertyDictionary<ProjectPropertyInstance> properties)
         {
             ErrorUtilities.VerifyThrowInternalNull(projectItems, nameof(projectItems));
             ErrorUtilities.VerifyThrowInternalNull(properties, nameof(properties));
@@ -120,7 +120,7 @@ private Lookup(Lookup that)
         // Convenience private properties
         // "Primary" is the "top" or "innermost" scope
         // "Secondary" is the next from the top.
-        private ItemDictionary<ProjectItemInstance> PrimaryTable
+        private IItemDictionary<ProjectItemInstance> PrimaryTable
         {
             get { return _lookupScopes.First.Value.Items; }
             set { _lookupScopes.First.Value.Items = value; }
@@ -150,7 +150,7 @@ private PropertyDictionary<ProjectPropertyInstance> PrimaryPropertySets
             set { _lookupScopes.First.Value.PropertySets = value; }
         }
 
-        private ItemDictionary<ProjectItemInstance> SecondaryTable
+        private IItemDictionary<ProjectItemInstance> SecondaryTable
         {
             get { return _lookupScopes.First.Next.Value.Items; }
             set { _lookupScopes.First.Next.Value.Items = value; }
@@ -870,7 +870,7 @@ private ProjectItemInstance RetrieveOriginalFromCloneTable(ProjectItemInstance i
         /// Applies a list of modifications to the appropriate <see cref="ItemDictionary{ProjectItemInstance}" /> in a main table.
         /// If any modifications conflict, these modifications win.
         /// </summary>
-        private void ApplyModificationsToTable(ItemDictionary<ProjectItemInstance> table, string itemType, ItemsMetadataUpdateDictionary modify)
+        private void ApplyModificationsToTable(IItemDictionary<ProjectItemInstance> table, string itemType, ItemsMetadataUpdateDictionary modify)
         {
             ICollection<ProjectItemInstance> existing = table[itemType];
             if (existing != null)
@@ -1295,7 +1295,7 @@ internal class Scope
             /// <summary>
             /// Contains all of the original items at this level in the Lookup
             /// </summary>
-            private ItemDictionary<ProjectItemInstance> _items;
+            private IItemDictionary<ProjectItemInstance> _items;
 
             /// <summary>
             /// Contains all of the items which have been added at this level in the Lookup
@@ -1344,7 +1344,7 @@ internal class Scope
             /// </summary>
             private bool _truncateLookupsAtThisScope;
 
-            internal Scope(Lookup lookup, string description, ItemDictionary<ProjectItemInstance> items, PropertyDictionary<ProjectPropertyInstance> properties)
+            internal Scope(Lookup lookup, string description, IItemDictionary<ProjectItemInstance> items, PropertyDictionary<ProjectPropertyInstance> properties)
             {
                 _owningLookup = lookup;
                 _description = description;
@@ -1364,7 +1364,7 @@ internal Scope(Lookup lookup, string description, ItemDictionary<ProjectItemInst
             /// include adds or removes unless it's the table in
             /// the outermost scope.
             /// </summary>
-            internal ItemDictionary<ProjectItemInstance> Items
+            internal IItemDictionary<ProjectItemInstance> Items
             {
                 get { return _items; }
                 set { _items = value; }
diff --git a/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
index e2c2e7cc772..0d98b32f5a8 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
@@ -842,13 +842,20 @@ private async Task BuildAndReport()
                 {
                     // The build was likely cancelled. We do not need to log an error in this case.
                 }
-                else if (_projectLoggingContext is null)
+                else if (ex is InternalLoggerException)
                 {
-                    _nodeLoggingContext.LogError(BuildEventFileInfo.Empty, "UnhandledMSBuildError", ex.ToString());
+                    string realMessage = TaskLoggingHelper.GetInnerExceptionMessageString(ex);
+                    LoggingContext loggingContext = ((LoggingContext)_projectLoggingContext) ?? _nodeLoggingContext;
+                    loggingContext.LogError(
+                        BuildEventFileInfo.Empty,
+                        "FatalErrorWhileLoggingWithInnerException",
+                        realMessage);
+
+                    loggingContext.LogCommentFromText(MessageImportance.Low, ex.ToString());
                 }
                 else
                 {
-                    _projectLoggingContext.LogError(BuildEventFileInfo.Empty, "UnhandledMSBuildError", ex.ToString());
+                    (((LoggingContext)_projectLoggingContext) ?? _nodeLoggingContext).LogError(BuildEventFileInfo.Empty, "UnhandledMSBuildError", ex.ToString());
                 }
 
                 if (ExceptionHandling.IsCriticalException(ex))
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TargetEntry.cs b/src/Build/BackEnd/Components/RequestBuilder/TargetEntry.cs
index e742933082c..bbfc80ae5d9 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TargetEntry.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TargetEntry.cs
@@ -4,6 +4,7 @@
 using System;
 using System.Collections.Generic;
 using System.Diagnostics;
+using System.Linq;
 using System.Threading;
 using System.Threading.Tasks;
 using Microsoft.Build.Collections;
@@ -568,7 +569,7 @@ internal async Task ExecuteTarget(ITaskBuilder taskBuilder, BuildRequestEntry re
                 }
 
                 // Produce the final results.
-                List<TaskItem> targetOutputItems = new List<TaskItem>();
+                TaskItem[] targetOutputItems = Array.Empty<TaskItem>();
 
                 try
                 {
@@ -622,26 +623,39 @@ internal async Task ExecuteTarget(ITaskBuilder taskBuilder, BuildRequestEntry re
 
                         if (keepDupes)
                         {
+                            List<TaskItem> targetOutputItemsList = new();
                             foreach (ItemBucket bucket in batchingBuckets)
                             {
-                                targetOutputItems.AddRange(bucket.Expander.ExpandIntoTaskItemsLeaveEscaped(targetReturns, ExpanderOptions.ExpandAll, targetReturnsLocation));
+                                if (targetOutputItems is null)
+                                {
+                                    // As an optimization, use the results for the first bucket and if there are no more buckets to process, only a single list is allocated.
+                                    targetOutputItemsList = bucket.Expander.ExpandIntoTaskItemsLeaveEscaped(targetReturns, ExpanderOptions.ExpandAll, targetReturnsLocation).ToList();
+                                }
+                                else
+                                {
+                                    targetOutputItemsList.AddRange(bucket.Expander.ExpandIntoTaskItemsLeaveEscaped(targetReturns, ExpanderOptions.ExpandAll, targetReturnsLocation));
+                                }
                             }
+
+                            targetOutputItems = targetOutputItemsList.ToArray();
                         }
                         else
                         {
-                            HashSet<TaskItem> addedItems = new HashSet<TaskItem>();
-                            foreach (ItemBucket bucket in batchingBuckets)
+                            // Optimize for only one bucket by initializing the HashSet<T> with the first one's items in case there are a lot of items, it won't need to be resized.
+                            if (batchingBuckets.Count == 1)
                             {
-                                IList<TaskItem> itemsToAdd = bucket.Expander.ExpandIntoTaskItemsLeaveEscaped(targetReturns, ExpanderOptions.ExpandAll, targetReturnsLocation);
-
-                                foreach (TaskItem item in itemsToAdd)
+                                targetOutputItems = new HashSet<TaskItem>(batchingBuckets[0].Expander.ExpandIntoTaskItemsLeaveEscaped(targetReturns, ExpanderOptions.ExpandAll, targetReturnsLocation)).ToArray();
+                            }
+                            else
+                            {
+                                HashSet<TaskItem> addedItems = new HashSet<TaskItem>();
+                                foreach (ItemBucket bucket in batchingBuckets)
                                 {
-                                    if (!addedItems.Contains(item))
-                                    {
-                                        targetOutputItems.Add(item);
-                                        addedItems.Add(item);
-                                    }
+                                    IList<TaskItem> itemsToAdd = bucket.Expander.ExpandIntoTaskItemsLeaveEscaped(targetReturns, ExpanderOptions.ExpandAll, targetReturnsLocation);
+                                    addedItems.UnionWith(itemsToAdd);
                                 }
+
+                                targetOutputItems = addedItems.ToArray();
                             }
                         }
                     }
@@ -649,10 +663,10 @@ internal async Task ExecuteTarget(ITaskBuilder taskBuilder, BuildRequestEntry re
                 finally
                 {
                     // log the last target finished since we now have the target outputs.
-                    targetLoggingContext?.LogTargetBatchFinished(projectFullPath, targetSuccess, targetOutputItems?.Count > 0 ? targetOutputItems : null);
+                    targetLoggingContext?.LogTargetBatchFinished(projectFullPath, targetSuccess, targetOutputItems.Length > 0 ? targetOutputItems : null);
                 }
 
-                _targetResult = new TargetResult(targetOutputItems.ToArray(), aggregateResult, targetLoggingContext?.BuildEventContext);
+                _targetResult = new TargetResult(targetOutputItems, aggregateResult, targetLoggingContext?.BuildEventContext);
 
                 if (aggregateResult.ResultCode == WorkUnitResultCode.Failed && aggregateResult.ActionCode == WorkUnitActionCode.Stop)
                 {
diff --git a/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverLoader.cs b/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverLoader.cs
index 4c765982f88..3e2536873a7 100644
--- a/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverLoader.cs
+++ b/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverLoader.cs
@@ -57,6 +57,15 @@ public CachingSdkResolverLoader()
             _defaultResolvers = base.GetDefaultResolvers();
         }
 
+        /// <summary>
+        /// Resets the cached state, intended for tests only.
+        /// </summary>
+        internal static void ResetStateForTests()
+        {
+            // Re-create the singleton to pick up environmental changes.
+            Instance = new CachingSdkResolverLoader();
+        }
+
         #region SdkResolverLoader overrides
 
         /// <inheritdoc />
@@ -87,5 +96,6 @@ protected internal override IReadOnlyList<SdkResolver> LoadResolversFromManifest
         }
 
         #endregion
+
     }
 }
diff --git a/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs b/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs
index 3c5349611c1..a7f54890bbd 100644
--- a/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs
+++ b/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs
@@ -9,6 +9,7 @@
 using System.Xml;
 using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Construction;
+using Microsoft.Build.Eventing;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 
@@ -39,27 +40,33 @@ internal virtual IReadOnlyList<SdkResolver> GetDefaultResolvers()
             var resolvers = !string.Equals(IncludeDefaultResolver, "false", StringComparison.OrdinalIgnoreCase) ?
                 new List<SdkResolver> { new DefaultSdkResolver() }
                 : new List<SdkResolver>();
-
             return resolvers;
         }
 
         internal virtual IReadOnlyList<SdkResolver> LoadAllResolvers(ElementLocation location)
         {
+            MSBuildEventSource.Log.SdkResolverLoadAllResolversStart();
             var resolvers = !string.Equals(IncludeDefaultResolver, "false", StringComparison.OrdinalIgnoreCase) ?
-                new List<SdkResolver> { new DefaultSdkResolver() }
-                : new List<SdkResolver>();
+                    new List<SdkResolver> { new DefaultSdkResolver() }
+                    : new List<SdkResolver>();
+            try
+            {   
+                var potentialResolvers = FindPotentialSdkResolvers(
+                    Path.Combine(BuildEnvironmentHelper.Instance.MSBuildToolsDirectory32, "SdkResolvers"), location);
 
-            var potentialResolvers = FindPotentialSdkResolvers(
-                Path.Combine(BuildEnvironmentHelper.Instance.MSBuildToolsDirectory32, "SdkResolvers"), location);
+                if (potentialResolvers.Count == 0)
+                {
+                    return resolvers;
+                }
 
-            if (potentialResolvers.Count == 0)
-            {
-                return resolvers;
+                foreach (var potentialResolver in potentialResolvers)
+                {
+                    LoadResolvers(potentialResolver, location, resolvers);
+                }
             }
-
-            foreach (var potentialResolver in potentialResolvers)
+            finally
             {
-                LoadResolvers(potentialResolver, location, resolvers);
+                MSBuildEventSource.Log.SdkResolverLoadAllResolversStop(resolvers.Count);
             }
 
             return resolvers.OrderBy(t => t.Priority).ToList();
@@ -67,8 +74,18 @@ internal virtual IReadOnlyList<SdkResolver> LoadAllResolvers(ElementLocation loc
 
         internal virtual IReadOnlyList<SdkResolverManifest> GetResolversManifests(ElementLocation location)
         {
-            return FindPotentialSdkResolversManifests(
+            MSBuildEventSource.Log.SdkResolverFindResolversManifestsStart();
+            IReadOnlyList<SdkResolverManifest> allResolversManifests = null;
+            try
+            {
+                allResolversManifests = FindPotentialSdkResolversManifests(
                 Path.Combine(BuildEnvironmentHelper.Instance.MSBuildToolsDirectoryRoot, "SdkResolvers"), location);
+            }
+            finally
+            {
+                MSBuildEventSource.Log.SdkResolverFindResolversManifestsStop(allResolversManifests?.Count ?? 0);
+            }
+            return allResolversManifests;
         }
 
         /// <summary>
@@ -234,8 +251,16 @@ protected virtual Assembly LoadResolverAssembly(string resolverPath)
 
         protected internal virtual IReadOnlyList<SdkResolver> LoadResolversFromManifest(SdkResolverManifest manifest, ElementLocation location)
         {
+            MSBuildEventSource.Log.SdkResolverLoadResolversStart();
             var resolvers = new List<SdkResolver>();
-            LoadResolvers(manifest.Path, location, resolvers);
+            try
+            {
+                LoadResolvers(manifest.Path, location, resolvers);
+            }
+            finally
+            {
+                MSBuildEventSource.Log.SdkResolverLoadResolversStop(manifest.DisplayName ?? string.Empty, resolvers.Count);
+            }
             return resolvers;
         }
 
diff --git a/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs b/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
index a9e03193f11..f2f71286e8e 100644
--- a/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
+++ b/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
@@ -118,6 +118,53 @@ public virtual void ClearCaches()
         /// <inheritdoc cref="ISdkResolverService.ResolveSdk"/>
         public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, string solutionPath, string projectPath, bool interactive, bool isRunningInVisualStudio, bool failOnUnresolvedSdk)
         {
+            // If we are running in .NET core, we ask the built-in default resolver first.
+            // - It is a perf optimization (no need to discover and load any of the plug-in assemblies to resolve an "in-box" Sdk).
+            // - It brings `dotnet build` to parity with `MSBuild.exe` functionally, as the Framework build of Microsoft.DotNet.MSBuildSdkResolver
+            //   contains the same logic and it is the first resolver in priority order.
+            //
+            // In an attempt to avoid confusion, this text uses "SDK" to refer to the installation unit, e.g. "C:\Program Files\dotnet\sdk\8.0.100",
+            // and "Sdk" to refer to the set of imports for targeting a specific project type, e.g. "Microsoft.NET.Sdk.Web".
+            //
+            // Here's the flow on Framework (`MSBuild.exe`):
+            // 1. Microsoft.DotNet.MSBuildSdkResolver is loaded and asked to resolve the Sdk required by the project.
+            //    1.1. It resolves the SDK (as in installation directory) using machine-wide state and global.json.
+            //    1.2. It checks the Sdks subdirectory of the SDK installation directory for a matching in-box Sdk.
+            //    1.3. If no match, checks installed workloads.
+            // 2. If no match so far, Microsoft.Build.NuGetSdkResolver is loaded and asked to resolve the Sdk.
+            // 3. If no match still, DefaultSdkResolver checks the Sdks subdirectory of the Visual Studio\MSBuild directory.
+            //
+            // Here's the flow on Core (`dotnet build`):
+            // 1. DefaultSdkResolver checks the Sdks subdirectory of our SDK installation. Note that the work of resolving the
+            //    SDK version using machine-wide state and global.json (step 1.1. in `MSBuild.exe` above) has already been done
+            //    by the `dotnet` muxer. We know which SDK (capital letters) we are in, so the in-box Sdk lookup is trivial.
+            // 2. If no match, Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver is loaded and asked to resolve the Sdk required by the project.
+            //    2.1. It checks installed workloads.
+            // 3. If no match still, Microsoft.Build.NuGetSdkResolver is loaded and asked to resolve the Sdk.
+            //
+            // Overall, while Sdk resolvers look like a general plug-in system, there are good reasons why some of the logic is hard-coded.
+            // It's not really meant to be modified outside of very special/internal scenarios.
+#if NETCOREAPP
+            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10))
+            {
+                if (TryResolveSdkUsingSpecifiedResolvers(
+                    _sdkResolverLoader.GetDefaultResolvers(),
+                    BuildEventContext.InvalidSubmissionId, // disables GetResolverState/SetResolverState
+                    sdk,
+                    loggingContext,
+                    sdkReferenceLocation,
+                    solutionPath,
+                    projectPath,
+                    interactive,
+                    isRunningInVisualStudio,
+                    out SdkResult sdkResult,
+                    out _,
+                    out _))
+                {
+                    return sdkResult;
+                }
+            }
+#endif
             if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_4))
             {
                 return ResolveSdkUsingResolversWithPatternsFirst(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, failOnUnresolvedSdk);
@@ -251,10 +298,8 @@ private List<SdkResolver> GetResolvers(IList<SdkResolverManifest> resolversManif
                         if (!_manifestToResolvers.TryGetValue(resolverManifest, out newResolvers))
                         {
                             // Loading of the needed resolvers.
-                            MSBuildEventSource.Log.SdkResolverServiceLoadResolversStart();
                             newResolvers = _sdkResolverLoader.LoadResolversFromManifest(resolverManifest, sdkReferenceLocation);
                             _manifestToResolvers[resolverManifest] = newResolvers;
-                            MSBuildEventSource.Log.SdkResolverServiceLoadResolversStop(resolverManifest.DisplayName ?? string.Empty, newResolvers.Count);
                         }
                     }
                 }
@@ -312,8 +357,6 @@ private bool TryResolveSdkUsingSpecifiedResolvers(
             // Loop through resolvers which have already been sorted by priority, returning the first result that was successful
             SdkLogger buildEngineLogger = new SdkLogger(loggingContext);
 
-            loggingContext.LogComment(MessageImportance.Low, "SdkResolving", sdk.ToString());
-
             foreach (SdkResolver sdkResolver in resolvers)
             {
                 SdkResolverContext context = new SdkResolverContext(buildEngineLogger, projectPath, solutionPath, ProjectCollection.Version, interactive, isRunningInVisualStudio)
@@ -355,6 +398,8 @@ private bool TryResolveSdkUsingSpecifiedResolvers(
 
                 if (result.Success)
                 {
+                    loggingContext.LogComment(MessageImportance.Low, "SucceededToResolveSDK", sdk.ToString(), sdkResolver.Name, result.Path ?? "null", result.Version ?? "null");
+
                     LogWarnings(loggingContext, sdkReferenceLocation, result.Warnings);
 
                     if (!IsReferenceSameVersion(sdk, result.Version))
@@ -369,6 +414,13 @@ private bool TryResolveSdkUsingSpecifiedResolvers(
                     sdkResult = result;
                     return true;
                 }
+                else if (loggingContext.LoggingService.MinimumRequiredMessageImportance >= MessageImportance.Low)
+                {
+                    string resultWarnings = result.Warnings?.Any() == true ? string.Join(Environment.NewLine, result.Warnings) : "null";
+                    string resultErrors = result.Errors?.Any() == true ? string.Join(Environment.NewLine, result.Errors) : "null";
+
+                    loggingContext.LogComment(MessageImportance.Low, "SDKResolverAttempt", sdkResolver.Name, sdk.ToString(), resultWarnings, resultErrors);
+                }
 
                 results.Add(result);
             }
@@ -391,6 +443,10 @@ internal void InitializeForTests(SdkResolverLoader resolverLoader = null, IReadO
             {
                 _sdkResolverLoader = resolverLoader;
             }
+            else
+            {
+                _sdkResolverLoader = CachingSdkResolverLoader.Instance;
+            }
 
             _specificResolversManifestsRegistry = null;
             _generalResolversManifestsRegistry = null;
@@ -459,9 +515,7 @@ private void Initialize(ElementLocation location)
                     return;
                 }
 
-                MSBuildEventSource.Log.SdkResolverServiceInitializeStart();
                 _resolversList = _sdkResolverLoader.LoadAllResolvers(location);
-                MSBuildEventSource.Log.SdkResolverServiceInitializeStop(_resolversList.Count);
             }
         }
 
@@ -474,24 +528,24 @@ private void RegisterResolversManifests(ElementLocation location)
                     return;
                 }
 
-                MSBuildEventSource.Log.SdkResolverServiceFindResolversManifestsStart();
                 var allResolversManifests = _sdkResolverLoader.GetResolversManifests(location);
 
                 _manifestToResolvers = new Dictionary<SdkResolverManifest, IReadOnlyList<SdkResolver>>();
 
-                // Load and add the manifest for the default resolvers, located directly in this dll.
-                IReadOnlyList<SdkResolver> defaultResolvers = _sdkResolverLoader.GetDefaultResolvers();
                 SdkResolverManifest sdkDefaultResolversManifest = null;
-                if (defaultResolvers.Count > 0)
+#if NETCOREAPP
+                if (!ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10))
+#endif
                 {
-                    MSBuildEventSource.Log.SdkResolverServiceLoadResolversStart();
-                    sdkDefaultResolversManifest = new SdkResolverManifest(DisplayName: "DefaultResolversManifest", Path: null, ResolvableSdkRegex: null);
-                    _manifestToResolvers[sdkDefaultResolversManifest] = defaultResolvers;
-                    MSBuildEventSource.Log.SdkResolverServiceLoadResolversStop(sdkDefaultResolversManifest.DisplayName ?? string.Empty, defaultResolvers.Count);
+                    // Load and add the manifest for the default resolvers, located directly in this dll.
+                    IReadOnlyList<SdkResolver> defaultResolvers = _sdkResolverLoader.GetDefaultResolvers();
+                    if (defaultResolvers.Count > 0)
+                    {
+                        sdkDefaultResolversManifest = new SdkResolverManifest(DisplayName: "DefaultResolversManifest", Path: null, ResolvableSdkRegex: null);
+                        _manifestToResolvers[sdkDefaultResolversManifest] = defaultResolvers;
+                    }
                 }
 
-                MSBuildEventSource.Log.SdkResolverServiceFindResolversManifestsStop(allResolversManifests.Count);
-
                 // Break the list of all resolvers manifests into two parts: manifests with specific and general resolvers.
                 _specificResolversManifestsRegistry = new List<SdkResolverManifest>();
                 _generalResolversManifestsRegistry = new List<SdkResolverManifest>();
diff --git a/src/Build/BackEnd/Node/InProcNode.cs b/src/Build/BackEnd/Node/InProcNode.cs
index 3b0b1600905..927d696f2e9 100644
--- a/src/Build/BackEnd/Node/InProcNode.cs
+++ b/src/Build/BackEnd/Node/InProcNode.cs
@@ -336,18 +336,7 @@ private NodeEngineShutdownReason HandleShutdown(out Exception exception)
                 NativeMethodsShared.SetCurrentDirectory(_savedCurrentDirectory);
 
                 // Restore the original environment.
-                foreach (KeyValuePair<string, string> entry in CommunicationsUtilities.GetEnvironmentVariables())
-                {
-                    if (!_savedEnvironment.ContainsKey(entry.Key))
-                    {
-                        Environment.SetEnvironmentVariable(entry.Key, null);
-                    }
-                }
-
-                foreach (KeyValuePair<string, string> entry in _savedEnvironment)
-                {
-                    Environment.SetEnvironmentVariable(entry.Key, entry.Value);
-                }
+                CommunicationsUtilities.SetEnvironment(_savedEnvironment);
             }
 
             exception = _shutdownException;
diff --git a/src/Build/BackEnd/Node/OutOfProcNode.cs b/src/Build/BackEnd/Node/OutOfProcNode.cs
index afa0d2aec65..51ac31c32dd 100644
--- a/src/Build/BackEnd/Node/OutOfProcNode.cs
+++ b/src/Build/BackEnd/Node/OutOfProcNode.cs
@@ -472,24 +472,20 @@ private NodeEngineShutdownReason HandleShutdown(out Exception exception)
             // so reset it away from a user-requested folder that may get deleted.
             NativeMethodsShared.SetCurrentDirectory(BuildEnvironmentHelper.Instance.CurrentMSBuildToolsDirectory);
 
-            // Restore the original environment.
+            // Restore the original environment, best effort.
             // If the node was never configured, this will be null.
             if (_savedEnvironment != null)
             {
-                foreach (KeyValuePair<string, string> entry in CommunicationsUtilities.GetEnvironmentVariables())
+                try
                 {
-                    if (!_savedEnvironment.ContainsKey(entry.Key))
-                    {
-                        Environment.SetEnvironmentVariable(entry.Key, null);
-                    }
+                    CommunicationsUtilities.SetEnvironment(_savedEnvironment);
                 }
-
-                foreach (KeyValuePair<string, string> entry in _savedEnvironment)
+                catch (Exception ex)
                 {
-                    Environment.SetEnvironmentVariable(entry.Key, entry.Value);
+                    CommunicationsUtilities.Trace("Failed to restore the original environment: {0}.", ex);
                 }
+                Traits.UpdateFromEnvironment();
             }
-
             try
             {
                 // Shut down logging, which will cause all queued logging messages to be sent.
@@ -722,12 +718,14 @@ private void HandleNodeConfiguration(NodeConfiguration configuration)
                 }
             }
 
-            // Now set the new environment
+            // Now set the new environment and update Traits class accordingly
             foreach (KeyValuePair<string, string> environmentPair in _buildParameters.BuildProcessEnvironment)
             {
                 Environment.SetEnvironmentVariable(environmentPair.Key, environmentPair.Value);
             }
 
+            Traits.UpdateFromEnvironment();
+
             // We want to make sure the global project collection has the toolsets which were defined on the parent
             // so that any custom toolsets defined can be picked up by tasks who may use the global project collection but are
             // executed on the child node.
diff --git a/src/Build/BackEnd/Node/OutOfProcServerNode.cs b/src/Build/BackEnd/Node/OutOfProcServerNode.cs
index aa28f7213e0..6b2715903e7 100644
--- a/src/Build/BackEnd/Node/OutOfProcServerNode.cs
+++ b/src/Build/BackEnd/Node/OutOfProcServerNode.cs
@@ -9,6 +9,7 @@
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Execution;
+using Microsoft.Build.Framework;
 using Microsoft.Build.Framework.Telemetry;
 using Microsoft.Build.Internal;
 using Microsoft.Build.Shared;
@@ -357,7 +358,10 @@ private void HandleServerNodeBuildCommand(ServerNodeBuildCommand command)
 
             // Set build process context
             Directory.SetCurrentDirectory(command.StartupDirectory);
+
             CommunicationsUtilities.SetEnvironment(command.BuildProcessEnvironment);
+            Traits.UpdateFromEnvironment();
+
             Thread.CurrentThread.CurrentCulture = command.Culture;
             Thread.CurrentThread.CurrentUICulture = command.UICulture;
 
diff --git a/src/Build/Collections/IConstrainableDictionary.cs b/src/Build/Collections/IConstrainableDictionary.cs
new file mode 100644
index 00000000000..2c4b34eef5d
--- /dev/null
+++ b/src/Build/Collections/IConstrainableDictionary.cs
@@ -0,0 +1,31 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.Collections.Generic;
+
+namespace Microsoft.Build.Collections
+{
+    /// <summary>
+    /// Represents an <see cref="IDictionary{String, TValue}"/> that supports use of an
+    /// <see cref="IConstrainedEqualityComparer{T}"/>.
+    /// </summary>
+    /// <typeparam name="TValue">The type of the values in the dictionary. The key is assumed
+    /// to always be <see cref="String"/>.</typeparam>
+    internal interface IConstrainableDictionary<TValue> : IDictionary<string, TValue>
+    {
+        /// <summary>
+        /// Get the value with the specified key or null if it is not present.
+        /// The key used for lookup is the substring of <paramref name="keyString"/>
+        /// starting at <paramref name="startIndex"/> and ending at <paramref name="endIndex"/>
+        /// (e.g. if the key is just the first character in <paramref name="keyString"/>, then
+        /// the value for <paramref name="startIndex"/> should be 0 and the value for
+        /// <paramref name="endIndex"/> should also be 0.)
+        /// </summary>
+        /// <param name="keyString">A string that contains the key of the item to retrieve.</param>
+        /// <param name="startIndex">The start index of the substring of <paramref name="keyString"/> that contains the key.</param>
+        /// <param name="endIndex">The end index of the substring of <paramref name="keyString"/> that contains the key.</param>
+        /// <returns>If it's found, the item whose key matches the calculated substring. Null otherwise.</returns>
+        TValue? Get(string keyString, int startIndex, int endIndex);
+    }
+}
diff --git a/src/Build/Collections/IItemDictionary.cs b/src/Build/Collections/IItemDictionary.cs
new file mode 100644
index 00000000000..1555c1de814
--- /dev/null
+++ b/src/Build/Collections/IItemDictionary.cs
@@ -0,0 +1,134 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.Collections;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using Microsoft.Build.Evaluation;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Collections
+{
+    internal interface IItemDictionary<T> : IEnumerable<T>, IItemProvider<T>
+        where T : class, IKeyed, IItem
+    {
+        /// <summary>
+        /// Number of items in total, for debugging purposes.
+        /// </summary>
+        int Count { get; }
+
+        /// <summary>
+        /// Get the item types that have at least one item in this collection.
+        /// </summary>
+        /// <remarks>
+        /// KeyCollection&lt;K&gt; is already a read only collection, so no protection
+        /// is necessary.
+        /// </remarks>
+        ICollection<string> ItemTypes { get; }
+
+        /// <summary>
+        /// Returns the item list for a particular item type,
+        /// creating and adding a new item list if necessary.
+        /// Does not throw if there are no items of this type.
+        /// This is a read-only list.
+        /// If the result is not empty it is a live list.
+        /// Use AddItem or RemoveItem to modify items in this project.
+        /// Using the return value from this in a multithreaded situation is unsafe.
+        /// </summary>
+        ICollection<T> this[string itemType] { get; }
+
+        /// <summary>
+        /// Empty the collection.
+        /// </summary>
+        void Clear();
+
+        /// <summary>
+        /// Returns an enumerable which copies the underlying data on read.
+        /// </summary>
+        IEnumerable<TResult> GetCopyOnReadEnumerable<TResult>(Func<T, TResult> selector);
+
+        /// <summary>
+        /// Enumerates item lists per each item type under the lock.
+        /// </summary>
+        /// <param name="itemTypeCallback">
+        /// A delegate that accepts the item type string and a list of items of that type.
+        /// Will be called for each item type in the list.
+        /// </param>
+        void EnumerateItemsPerType(Action<string, IEnumerable<T>> itemTypeCallback);
+
+        /// <summary>
+        /// Whether the provided item is in this table or not.
+        /// </summary>
+        bool Contains(T projectItem);
+
+        /// <summary>
+        /// Add a new item to the collection, at the
+        /// end of the list of other items with its key.
+        /// </summary>
+        void Add(T projectItem);
+
+        /// <summary>
+        /// Adds each new item to the collection, at the
+        /// end of the list of other items with the same key.
+        /// </summary>
+        void AddRange(IEnumerable<T> projectItems);
+
+        /// <summary>
+        /// Removes an item, if it is in the collection.
+        /// Returns true if it was found, otherwise false.
+        /// </summary>
+        /// <remarks>
+        /// If a list is emptied, removes the list from the enclosing collection
+        /// so it can be garbage collected.
+        /// </remarks>        
+        bool Remove(T projectItem);
+
+        /// <summary>
+        /// Replaces an existing item with a new item.  This is necessary to preserve the original ordering semantics of Lookup.GetItems
+        /// when items with metadata modifications are being returned.  See Dev10 bug 480737.
+        /// If the item is not found, does nothing.
+        /// </summary>
+        /// <param name="existingItem">The item to be replaced.</param>
+        /// <param name="newItem">The replacement item.</param>
+        void Replace(T existingItem, T newItem);
+
+        /// <summary>
+        /// Add the set of items specified to this dictionary.
+        /// </summary>
+        /// <param name="other">An enumerator over the items to remove.</param>
+        void ImportItems(IEnumerable<T> other);
+
+        /// <summary>
+        /// Add the set of items specified, all sharing an item type, to this dictionary.
+        /// </summary>
+        /// <comment>
+        /// This is a little faster than ImportItems where all the items have the same item type.
+        /// </comment>
+        void ImportItemsOfType(string itemType, IEnumerable<T> items);
+
+        /// <summary>
+        /// Remove the set of items specified from this dictionary
+        /// </summary>
+        /// <param name="other">An enumerator over the items to remove.</param>
+        void RemoveItems(IEnumerable<T> other);
+
+        /// <summary>
+        /// Special method used for batching buckets.
+        /// Adds an explicit marker indicating there are no items for the specified item type.
+        /// In the general case, this is redundant, but batching buckets use this to indicate that they are
+        /// batching over the item type, but their bucket does not contain items of that type.
+        /// See <see cref="HasEmptyMarker">HasEmptyMarker</see>.
+        /// </summary>
+        void AddEmptyMarker(string itemType);
+
+        /// <summary>
+        /// Special method used for batching buckets.
+        /// Lookup can call this to see whether there was an explicit marker placed indicating that
+        /// there are no items of this type. See comment on <see cref="AddEmptyMarker">AddEmptyMarker</see>.
+        /// </summary>
+        bool HasEmptyMarker(string itemType);
+    }
+}
diff --git a/src/Build/Collections/ItemDictionary.cs b/src/Build/Collections/ItemDictionary.cs
index ee57e45788c..128ef852825 100644
--- a/src/Build/Collections/ItemDictionary.cs
+++ b/src/Build/Collections/ItemDictionary.cs
@@ -29,7 +29,7 @@ namespace Microsoft.Build.Collections
     /// </remarks>
     /// <typeparam name="T">Item class type to store</typeparam>
     [DebuggerDisplay("#Item types={ItemTypes.Count} #Items={Count}")]
-    internal sealed class ItemDictionary<T> : IEnumerable<T>, IItemProvider<T>
+    internal sealed class ItemDictionary<T> : IItemDictionary<T>
         where T : class, IKeyed, IItem
     {
         /// <summary>
@@ -50,7 +50,7 @@ internal sealed class ItemDictionary<T> : IEnumerable<T>, IItemProvider<T>
         /// <summary>
         /// Constructor for an empty collection.
         /// </summary>
-        internal ItemDictionary()
+        public ItemDictionary()
         {
             // Tracing.Record("new item dictionary");
             _itemLists = new Dictionary<string, LinkedList<T>>(MSBuildNameIgnoreCaseComparer.Default);
@@ -61,7 +61,7 @@ internal ItemDictionary()
         /// Constructor for an empty collection taking an initial capacity
         /// for the number of distinct item types
         /// </summary>
-        internal ItemDictionary(int initialItemTypesCapacity, int initialItemsCapacity = 0)
+        public ItemDictionary(int initialItemTypesCapacity, int initialItemsCapacity = 0)
         {
             // Tracing.Record("new item dictionary");
             _itemLists = new Dictionary<string, LinkedList<T>>(initialItemTypesCapacity, MSBuildNameIgnoreCaseComparer.Default);
@@ -71,7 +71,7 @@ internal ItemDictionary(int initialItemTypesCapacity, int initialItemsCapacity =
         /// <summary>
         /// Constructor for an collection holding items from a specified enumerable.
         /// </summary>
-        internal ItemDictionary(IEnumerable<T> items)
+        public ItemDictionary(IEnumerable<T> items)
         {
             // Tracing.Record("new item dictionary");
             _itemLists = new Dictionary<string, LinkedList<T>>(MSBuildNameIgnoreCaseComparer.Default);
@@ -82,7 +82,7 @@ internal ItemDictionary(IEnumerable<T> items)
         /// <summary>
         /// Number of items in total, for debugging purposes.
         /// </summary>
-        internal int Count => _nodes.Count;
+        public int Count => _nodes.Count;
 
         /// <summary>
         /// Get the item types that have at least one item in this collection
@@ -91,7 +91,7 @@ internal ItemDictionary(IEnumerable<T> items)
         /// KeyCollection&lt;K&gt; is already a read only collection, so no protection
         /// is necessary.
         /// </remarks>
-        internal ICollection<string> ItemTypes
+        public ICollection<string> ItemTypes
         {
             get
             {
@@ -111,7 +111,7 @@ internal ICollection<string> ItemTypes
         /// Use AddItem or RemoveItem to modify items in this project.
         /// Using the return value from this in a multithreaded situation is unsafe.
         /// </summary>
-        internal ICollection<T> this[string itemtype]
+        public ICollection<T> this[string itemtype]
         {
             get
             {
@@ -176,7 +176,7 @@ IEnumerator IEnumerable.GetEnumerator()
         /// A delegate that accepts the item type string and a list of items of that type.
         /// Will be called for each item type in the list.
         /// </param>
-        internal void EnumerateItemsPerType(Action<string, IEnumerable<T>> itemTypeCallback)
+        public void EnumerateItemsPerType(Action<string, IEnumerable<T>> itemTypeCallback)
         {
             lock (_itemLists)
             {
@@ -214,7 +214,7 @@ public ICollection<T> GetItems(string itemType)
         /// <summary>
         /// Whether the provided item is in this table or not.
         /// </summary>
-        internal bool Contains(T projectItem)
+        public bool Contains(T projectItem)
         {
             lock (_itemLists)
             {
@@ -226,18 +226,22 @@ internal bool Contains(T projectItem)
         /// Add a new item to the collection, at the
         /// end of the list of other items with its key.
         /// </summary>
-        internal void Add(T projectItem)
+        public void Add(T projectItem)
         {
             lock (_itemLists)
             {
-                if (!_itemLists.TryGetValue(projectItem.Key, out LinkedList<T> list))
+                AddProjectItem(projectItem);
+            }
+        }
+
+        public void AddRange(IEnumerable<T> projectItems)
+        {
+            lock (_itemLists)
+            {
+                foreach (var projectItem in projectItems)
                 {
-                    list = new LinkedList<T>();
-                    _itemLists[projectItem.Key] = list;
+                    AddProjectItem(projectItem);
                 }
-
-                LinkedListNode<T> node = list.AddLast(projectItem);
-                _nodes.Add(projectItem, node);
             }
         }
 
@@ -249,7 +253,7 @@ internal void Add(T projectItem)
         /// If a list is emptied, removes the list from the enclosing collection
         /// so it can be garbage collected.
         /// </remarks>
-        internal bool Remove(T projectItem)
+        public bool Remove(T projectItem)
         {
             lock (_itemLists)
             {
@@ -279,7 +283,7 @@ internal bool Remove(T projectItem)
         /// </summary>
         /// <param name="existingItem">The item to be replaced.</param>
         /// <param name="newItem">The replacement item.</param>
-        internal void Replace(T existingItem, T newItem)
+        public void Replace(T existingItem, T newItem)
         {
             ErrorUtilities.VerifyThrow(existingItem.Key == newItem.Key, "Cannot replace an item {0} with an item {1} with a different name.", existingItem.Key, newItem.Key);
             lock (_itemLists)
@@ -297,12 +301,9 @@ internal void Replace(T existingItem, T newItem)
         /// Add the set of items specified to this dictionary
         /// </summary>
         /// <param name="other">An enumerator over the items to remove.</param>
-        internal void ImportItems(IEnumerable<T> other)
+        public void ImportItems(IEnumerable<T> other)
         {
-            foreach (T item in other)
-            {
-                Add(item);
-            }
+            AddRange(other);
         }
 
         /// <summary>
@@ -311,7 +312,7 @@ internal void ImportItems(IEnumerable<T> other)
         /// <comment>
         /// This is a little faster than ImportItems where all the items have the same item type.
         /// </comment>
-        internal void ImportItemsOfType(string itemType, IEnumerable<T> items)
+        public void ImportItemsOfType(string itemType, IEnumerable<T> items)
         {
             lock (_itemLists)
             {
@@ -337,7 +338,7 @@ internal void ImportItemsOfType(string itemType, IEnumerable<T> items)
         /// Remove the set of items specified from this dictionary
         /// </summary>
         /// <param name="other">An enumerator over the items to remove.</param>
-        internal void RemoveItems(IEnumerable<T> other)
+        public void RemoveItems(IEnumerable<T> other)
         {
             foreach (T item in other)
             {
@@ -352,7 +353,7 @@ internal void RemoveItems(IEnumerable<T> other)
         /// batching over the item type, but their bucket does not contain items of that type.
         /// See <see cref="HasEmptyMarker">HasEmptyMarker</see>.
         /// </summary>
-        internal void AddEmptyMarker(string itemType)
+        public void AddEmptyMarker(string itemType)
         {
             lock (_itemLists)
             {
@@ -366,7 +367,7 @@ internal void AddEmptyMarker(string itemType)
         /// Lookup can call this to see whether there was an explicit marker placed indicating that
         /// there are no items of this type. See comment on <see cref="AddEmptyMarker">AddEmptyMarker</see>.
         /// </summary>
-        internal bool HasEmptyMarker(string itemType)
+        public bool HasEmptyMarker(string itemType)
         {
             lock (_itemLists)
             {
@@ -379,6 +380,18 @@ internal bool HasEmptyMarker(string itemType)
             }
         }
 
+        private void AddProjectItem(T projectItem)
+        {
+            if (!_itemLists.TryGetValue(projectItem.Key, out LinkedList<T> list))
+            {
+                list = new LinkedList<T>();
+                _itemLists[projectItem.Key] = list;
+            }
+
+            LinkedListNode<T> node = list.AddLast(projectItem);
+            _nodes.Add(projectItem, node);
+        }
+
         /// <summary>
         /// Custom enumerator that allows enumeration over all the items in the collection
         /// as though they were in a single list.
diff --git a/src/Build/Collections/PropertyDictionary.cs b/src/Build/Collections/PropertyDictionary.cs
index 7672333cd2b..96884a1914d 100644
--- a/src/Build/Collections/PropertyDictionary.cs
+++ b/src/Build/Collections/PropertyDictionary.cs
@@ -35,14 +35,14 @@ namespace Microsoft.Build.Collections
     /// </remarks>
     /// <typeparam name="T">Property or Metadata class type to store</typeparam>
     [DebuggerDisplay("#Entries={Count}")]
-    internal sealed class PropertyDictionary<T> : IEnumerable<T>, IEquatable<PropertyDictionary<T>>, IPropertyProvider<T>, IDictionary<string, T>
+    internal sealed class PropertyDictionary<T> : IEnumerable<T>, IEquatable<PropertyDictionary<T>>, IPropertyProvider<T>, IDictionary<string, T>, IConstrainableDictionary<T>
         where T : class, IKeyed, IValued, IEquatable<T>
     {
         /// <summary>
         /// Backing dictionary
         /// </summary>
         [DebuggerBrowsable(DebuggerBrowsableState.RootHidden)]
-        private readonly RetrievableEntryHashSet<T> _properties;
+        private readonly IRetrievableEntryHashSet<T> _properties;
 
         /// <summary>
         /// Creates empty dictionary
@@ -92,6 +92,15 @@ internal PropertyDictionary(int capacity, IEnumerable<T> elements)
             }
         }
 
+        /// <summary>
+        /// Initializes a new instance of the <see cref="PropertyDictionary{T}"/> class.
+        /// </summary>
+        /// <param name="propertiesHashSet">The collection of properties to use.</param>
+        internal PropertyDictionary(IRetrievableEntryHashSet<T> propertiesHashSet)
+        {
+            _properties = propertiesHashSet;
+        }
+
         /// <summary>
         /// Accessor for the list of property names
         /// </summary>
@@ -132,7 +141,7 @@ int ICollection<KeyValuePair<string, T>>.Count
             {
                 lock (_properties)
                 {
-                    return _properties.Count;
+                    return ((ICollection<T>)_properties).Count;
                 }
             }
         }
@@ -152,7 +161,7 @@ internal int Count
             {
                 lock (_properties)
                 {
-                    return _properties.Count;
+                    return ((ICollection<T>)_properties).Count;
                 }
             }
         }
@@ -228,7 +237,7 @@ public void Clear()
         {
             lock (_properties)
             {
-                _properties.Clear();
+                ((ICollection<T>)_properties).Clear();
             }
         }
 
@@ -318,6 +327,12 @@ public T GetProperty(string name, int startIndex, int endIndex)
             }
         }
 
+        /// <inheritdoc />
+        public T Get(string keyString, int startIndex, int endIndex)
+        {
+            return GetProperty(keyString, startIndex, endIndex);
+        }
+
         #region IDictionary<string,T> Members
 
         /// <summary>
@@ -424,13 +439,7 @@ bool ICollection<KeyValuePair<string, T>>.Remove(KeyValuePair<string, T> item)
         /// </summary>
         IEnumerator<KeyValuePair<string, T>> IEnumerable<KeyValuePair<string, T>>.GetEnumerator()
         {
-            lock (_properties)
-            {
-                foreach (var entry in _properties)
-                {
-                    yield return new KeyValuePair<string, T>(entry.Key, entry);
-                }
-            }
+            return ((IEnumerable<KeyValuePair<string, T>>)_properties).GetEnumerator();
         }
 
         #endregion
@@ -500,7 +509,7 @@ internal Dictionary<string, string> ToDictionary()
         {
             lock (_properties)
             {
-                var dictionary = new Dictionary<string, string>(_properties.Count, MSBuildNameIgnoreCaseComparer.Default);
+                var dictionary = new Dictionary<string, string>(((ICollection<T>)_properties).Count, MSBuildNameIgnoreCaseComparer.Default);
 
                 foreach (T property in this)
                 {
@@ -515,7 +524,7 @@ internal void Enumerate(Action<string, string> keyValueCallback)
         {
             lock (_properties)
             {
-                foreach (var kvp in _properties)
+                foreach (var kvp in (ICollection<T>)_properties)
                 {
                     keyValueCallback(kvp.Key, EscapingUtilities.UnescapeAll(kvp.EscapedValue));
                 }
@@ -527,7 +536,7 @@ internal IEnumerable<TResult> Filter<TResult>(Func<T, bool> filter, Func<T, TRes
             List<TResult> result = new();
             lock (_properties)
             {
-                foreach (T property in _properties)
+                foreach (T property in (ICollection<T>)_properties)
                 {
                     if (filter(property))
                     {
diff --git a/src/Build/Collections/RetrievableEntryHashSet/HashSet.cs b/src/Build/Collections/RetrievableEntryHashSet/HashSet.cs
index 8824d26e051..e6160cec90f 100644
--- a/src/Build/Collections/RetrievableEntryHashSet/HashSet.cs
+++ b/src/Build/Collections/RetrievableEntryHashSet/HashSet.cs
@@ -82,9 +82,7 @@ namespace Microsoft.Build.Collections
 #if FEATURE_SECURITY_PERMISSIONS
     [System.Security.Permissions.HostProtection(MayLeakOnAbort = true)]
 #endif
-    internal class RetrievableEntryHashSet<T> : ICollection<T>,
-        ISerializable, IDeserializationCallback,
-        IDictionary<string, T>
+    internal class RetrievableEntryHashSet<T> : IRetrievableEntryHashSet<T>
         where T : class, IKeyed
     {
         // store lower 31 bits of hash code
diff --git a/src/Build/Collections/RetrievableEntryHashSet/IRetrievableEntryHashSet.cs b/src/Build/Collections/RetrievableEntryHashSet/IRetrievableEntryHashSet.cs
new file mode 100644
index 00000000000..3100e7914a8
--- /dev/null
+++ b/src/Build/Collections/RetrievableEntryHashSet/IRetrievableEntryHashSet.cs
@@ -0,0 +1,73 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System.Collections.Generic;
+using System.Runtime.Serialization;
+
+#nullable disable
+
+namespace Microsoft.Build.Collections
+{
+    internal interface IRetrievableEntryHashSet<T> :
+        ICollection<T>,
+        ISerializable,
+        IDeserializationCallback,
+        IDictionary<string, T>
+        where T : class, IKeyed
+    {
+        /// <summary>
+        /// Gets the item with the given name.
+        /// </summary>
+        /// <param name="key">key to check for containment.</param>
+        /// <returns>The item (if contained).</returns>
+        /// <exception cref="KeyNotFoundException">Thrown if no item with the given name is present in the collection.</exception>
+        T Get(string key);
+
+        /// <summary>
+        /// Gets the item if any with the given name.
+        /// </summary>
+        /// <param name="key">key to check for containment.</param>
+        /// <param name="index">The position of the substring within <paramref name="key"/>.</param>
+        /// <param name="length">The maximum number of characters in the <paramref name="key"/> to lookup.</param>
+        /// <returns>The item (if contained).</returns>
+        /// <exception cref="KeyNotFoundException">Thrown if no item with the given name is present in the collection.</exception>
+        T Get(string key, int index, int length);
+
+        /// <summary>
+        /// Copies the contents of this HashSet into the provided array.
+        /// </summary>
+        /// <param name="array">The array into which the contents of this HashSet will be copied.</param>
+        void CopyTo(T[] array);
+
+        /// <summary>
+        /// Copies the contents of this HashSet into the provided array.
+        /// </summary>
+        /// <param name="array">The array into which the contents of this HashSet will be copied.</param>
+        /// <param name="arrayIndex">The index within <paramref name="array"/> where the first item will be placed.</param>
+        /// <param name="count">The number of items from HashSet to copy into <paramref name="array"/>.</param>
+        void CopyTo(T[] array, int arrayIndex, int count);
+
+        /// <summary>
+        /// Take the union of this HashSet with other. Modifies this set.
+        /// 
+        /// Implementation note: GetSuggestedCapacity (to increase capacity in advance avoiding 
+        /// multiple resizes ended up not being useful in practice; quickly gets to the 
+        /// point where it's a wasteful check.
+        /// </summary>
+        /// <param name="other">enumerable with items to add</param>
+        void UnionWith(IEnumerable<T> other);
+
+        /// <summary>
+        /// Sets the capacity of this list to the size of the list (rounded up to nearest prime),
+        /// unless count is 0, in which case we release references.
+        /// 
+        /// This method can be used to minimize a list's memory overhead once it is known that no
+        /// new elements will be added to the list. To completely clear a list and release all 
+        /// memory referenced by the list, execute the following statements:
+        /// 
+        /// list.Clear();
+        /// list.TrimExcess();
+        /// </summary>
+        void TrimExcess();
+    }
+}
diff --git a/src/Build/CompatibilitySuppressions.xml b/src/Build/CompatibilitySuppressions.xml
index eebf61e063c..85a8e28b087 100644
--- a/src/Build/CompatibilitySuppressions.xml
+++ b/src/Build/CompatibilitySuppressions.xml
@@ -1,6 +1,265 @@
 Ôªø<?xml version="1.0" encoding="utf-8"?>
 <!-- https://learn.microsoft.com/en-us/dotnet/fundamentals/package-validation/diagnostic-ids -->
-<Suppressions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+<Suppressions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
+  <Suppression>
+    <DiagnosticId>CP0001</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.IBuildEventStringsReader</Target>
+    <Left>lib/net472/Microsoft.Build.dll</Left>
+    <Right>lib/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0001</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.IBuildEventStringsReader</Target>
+    <Left>lib/net8.0/Microsoft.Build.dll</Left>
+    <Right>lib/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0001</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.IBuildEventStringsReader</Target>
+    <Left>ref/net472/Microsoft.Build.dll</Left>
+    <Right>ref/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0001</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.IBuildEventStringsReader</Target>
+    <Left>ref/net8.0/Microsoft.Build.dll</Left>
+    <Right>ref/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BinaryLogReplayEventSource.add_NotificationsSourceCreated(System.Action{Microsoft.Build.Logging.IBuildEventArgsReaderNotifications})</Target>
+    <Left>lib/net472/Microsoft.Build.dll</Left>
+    <Right>lib/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BinaryLogReplayEventSource.remove_NotificationsSourceCreated(System.Action{Microsoft.Build.Logging.IBuildEventArgsReaderNotifications})</Target>
+    <Left>lib/net472/Microsoft.Build.dll</Left>
+    <Right>lib/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BuildEventArgsReader.add_StringEncountered(System.Action)</Target>
+    <Left>lib/net472/Microsoft.Build.dll</Left>
+    <Right>lib/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BuildEventArgsReader.remove_StringEncountered(System.Action)</Target>
+    <Left>lib/net472/Microsoft.Build.dll</Left>
+    <Right>lib/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BinaryLogReplayEventSource.add_NotificationsSourceCreated(System.Action{Microsoft.Build.Logging.IBuildEventArgsReaderNotifications})</Target>
+    <Left>lib/net8.0/Microsoft.Build.dll</Left>
+    <Right>lib/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BinaryLogReplayEventSource.remove_NotificationsSourceCreated(System.Action{Microsoft.Build.Logging.IBuildEventArgsReaderNotifications})</Target>
+    <Left>lib/net8.0/Microsoft.Build.dll</Left>
+    <Right>lib/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BuildEventArgsReader.add_StringEncountered(System.Action)</Target>
+    <Left>lib/net8.0/Microsoft.Build.dll</Left>
+    <Right>lib/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BuildEventArgsReader.remove_StringEncountered(System.Action)</Target>
+    <Left>lib/net8.0/Microsoft.Build.dll</Left>
+    <Right>lib/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BinaryLogReplayEventSource.add_NotificationsSourceCreated(System.Action{Microsoft.Build.Logging.IBuildEventArgsReaderNotifications})</Target>
+    <Left>ref/net472/Microsoft.Build.dll</Left>
+    <Right>ref/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BinaryLogReplayEventSource.remove_NotificationsSourceCreated(System.Action{Microsoft.Build.Logging.IBuildEventArgsReaderNotifications})</Target>
+    <Left>ref/net472/Microsoft.Build.dll</Left>
+    <Right>ref/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BuildEventArgsReader.add_StringEncountered(System.Action)</Target>
+    <Left>ref/net472/Microsoft.Build.dll</Left>
+    <Right>ref/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BuildEventArgsReader.remove_StringEncountered(System.Action)</Target>
+    <Left>ref/net472/Microsoft.Build.dll</Left>
+    <Right>ref/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BinaryLogReplayEventSource.add_NotificationsSourceCreated(System.Action{Microsoft.Build.Logging.IBuildEventArgsReaderNotifications})</Target>
+    <Left>ref/net8.0/Microsoft.Build.dll</Left>
+    <Right>ref/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BinaryLogReplayEventSource.remove_NotificationsSourceCreated(System.Action{Microsoft.Build.Logging.IBuildEventArgsReaderNotifications})</Target>
+    <Left>ref/net8.0/Microsoft.Build.dll</Left>
+    <Right>ref/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BuildEventArgsReader.add_StringEncountered(System.Action)</Target>
+    <Left>ref/net8.0/Microsoft.Build.dll</Left>
+    <Right>ref/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0002</DiagnosticId>
+    <Target>M:Microsoft.Build.Logging.BuildEventArgsReader.remove_StringEncountered(System.Action)</Target>
+    <Left>ref/net8.0/Microsoft.Build.dll</Left>
+    <Right>ref/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0006</DiagnosticId>
+    <Target>E:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications.ArchiveFileEncountered</Target>
+    <Left>lib/net472/Microsoft.Build.dll</Left>
+    <Right>lib/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0006</DiagnosticId>
+    <Target>E:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications.RecoverableReadError</Target>
+    <Left>lib/net472/Microsoft.Build.dll</Left>
+    <Right>lib/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0006</DiagnosticId>
+    <Target>E:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications.StringReadDone</Target>
+    <Left>lib/net472/Microsoft.Build.dll</Left>
+    <Right>lib/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0006</DiagnosticId>
+    <Target>E:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications.ArchiveFileEncountered</Target>
+    <Left>lib/net8.0/Microsoft.Build.dll</Left>
+    <Right>lib/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0006</DiagnosticId>
+    <Target>E:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications.RecoverableReadError</Target>
+    <Left>lib/net8.0/Microsoft.Build.dll</Left>
+    <Right>lib/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0006</DiagnosticId>
+    <Target>E:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications.StringReadDone</Target>
+    <Left>lib/net8.0/Microsoft.Build.dll</Left>
+    <Right>lib/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0006</DiagnosticId>
+    <Target>E:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications.ArchiveFileEncountered</Target>
+    <Left>ref/net8.0/Microsoft.Build.dll</Left>
+    <Right>ref/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0006</DiagnosticId>
+    <Target>E:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications.RecoverableReadError</Target>
+    <Left>ref/net8.0/Microsoft.Build.dll</Left>
+    <Right>ref/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0006</DiagnosticId>
+    <Target>E:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications.StringReadDone</Target>
+    <Left>ref/net8.0/Microsoft.Build.dll</Left>
+    <Right>ref/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0008</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.BuildEventArgsReader</Target>
+    <Left>lib/net472/Microsoft.Build.dll</Left>
+    <Right>lib/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0008</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications</Target>
+    <Left>lib/net472/Microsoft.Build.dll</Left>
+    <Right>lib/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0008</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.BuildEventArgsReader</Target>
+    <Left>lib/net8.0/Microsoft.Build.dll</Left>
+    <Right>lib/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0008</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications</Target>
+    <Left>lib/net8.0/Microsoft.Build.dll</Left>
+    <Right>lib/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0008</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.BuildEventArgsReader</Target>
+    <Left>ref/net472/Microsoft.Build.dll</Left>
+    <Right>ref/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0008</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications</Target>
+    <Left>ref/net472/Microsoft.Build.dll</Left>
+    <Right>ref/net472/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0008</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.BuildEventArgsReader</Target>
+    <Left>ref/net8.0/Microsoft.Build.dll</Left>
+    <Right>ref/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>CP0008</DiagnosticId>
+    <Target>T:Microsoft.Build.Logging.IBuildEventArgsReaderNotifications</Target>
+    <Left>ref/net8.0/Microsoft.Build.dll</Left>
+    <Right>ref/net8.0/Microsoft.Build.dll</Right>
+    <IsBaselineSuppression>true</IsBaselineSuppression>
+  </Suppression>
   <!-- Changes to the Experimental namespace are considered non-breaking, and this ctor should be used only internally, not by plugin code. -->
   <Suppression>
     <DiagnosticId>CP0002</DiagnosticId>
diff --git a/src/Build/Construction/Solution/ProjectInSolution.cs b/src/Build/Construction/Solution/ProjectInSolution.cs
index 3880a57f618..97c8e269da4 100644
--- a/src/Build/Construction/Solution/ProjectInSolution.cs
+++ b/src/Build/Construction/Solution/ProjectInSolution.cs
@@ -8,7 +8,7 @@
 using System.Security;
 using System.Text;
 using System.Xml;
-#if !NETFRAMEWORK || MONO
+#if !NETFRAMEWORK
 using Microsoft.Build.Shared;
 #endif
 
@@ -157,7 +157,7 @@ public string RelativePath
 
             internal set
             {
-#if NETFRAMEWORK && !MONO
+#if NETFRAMEWORK
                 // Avoid loading System.Runtime.InteropServices.RuntimeInformation in full-framework
                 // cases. It caused https://github.com/NuGet/Home/issues/6918.
                 _relativePath = value;
@@ -184,7 +184,7 @@ public string AbsolutePath
                     {
                         try
                         {
-#if NETFRAMEWORK && !MONO
+#if NETFRAMEWORK
                             _absolutePath = Path.GetFullPath(_absolutePath);
 #else
                             _absolutePath = FileUtilities.NormalizePath(_absolutePath);
diff --git a/src/Build/Definition/Project.cs b/src/Build/Definition/Project.cs
index d785f9f8c50..791c88c741c 100644
--- a/src/Build/Definition/Project.cs
+++ b/src/Build/Definition/Project.cs
@@ -45,7 +45,7 @@ namespace Microsoft.Build.Evaluation
     /// Edits to this project always update the backing XML.
     /// </summary>
     // UNDONE: (Multiple configurations.) Protect against problems when attempting to edit, after edits were made to the same ProjectRootElement either directly or through other projects evaluated from that ProjectRootElement.
-    [DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={implementation._data.GlobalPropertiesDictionary.Count} #Properties={implementation._data.Properties.Count} #ItemTypes={implementation._data.ItemTypes.Count} #ItemDefinitions={implementation._data.ItemDefinitions.Count} #Items={implementation._data.Items.Count} #Targets={implementation._data.Targets.Count}")]
+    [DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} {implementation}")]
     public class Project : ILinkableObject
     {
         /// <summary>
@@ -1812,6 +1812,7 @@ internal void VerifyThrowInvalidOperationNotImported(ProjectRootElement otherXml
         /// <summary>
         /// Internal project evaluation implementation.
         /// </summary>
+        [DebuggerDisplay("#GlobalProperties={_data.GlobalPropertiesDictionary.Count} #Properties={_data.Properties.Count} #ItemTypes={_data.ItemTypes.Count} #ItemDefinitions={_data.ItemDefinitions.Count} #Items={_data.Items.Count} #Targets={_data.Targets.Count}")]
         private class ProjectImpl : ProjectLink, IProjectLinkInternal
         {
             /// <summary>
@@ -4118,7 +4119,7 @@ internal Data(Project project, PropertyDictionary<ProjectPropertyInstance> globa
             /// Items in this project, ordered within groups of item types.
             /// Protected by an upcast to IEnumerable.
             /// </summary>
-            public ItemDictionary<ProjectItem> Items { get; private set; }
+            public IItemDictionary<ProjectItem> Items { get; private set; }
 
             public List<ProjectItemElement> EvaluatedItemElements { get; private set; }
 
diff --git a/src/Build/Definition/ProjectCollection.cs b/src/Build/Definition/ProjectCollection.cs
index 924b3e25db7..11dd0a1143d 100644
--- a/src/Build/Definition/ProjectCollection.cs
+++ b/src/Build/Definition/ProjectCollection.cs
@@ -11,6 +11,7 @@
 using System.Threading;
 using System.Xml;
 using Microsoft.Build.BackEnd;
+using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Collections;
 using Microsoft.Build.Construction;
 using Microsoft.Build.Execution;
@@ -1732,6 +1733,7 @@ private void ShutDownLoggingService()
             {
                 try
                 {
+                    (LoggingService as LoggingService)?.WaitForLoggingToProcessEvents();
                     ((IBuildComponent)LoggingService).ShutdownComponent();
                 }
                 catch (LoggerException)
diff --git a/src/Build/Definition/Toolset.cs b/src/Build/Definition/Toolset.cs
index 212fb7fecc1..bf9ae352007 100644
--- a/src/Build/Definition/Toolset.cs
+++ b/src/Build/Definition/Toolset.cs
@@ -915,8 +915,6 @@ private void InitializeProperties(ILoggingService loggingServices, BuildEventCon
                 reservedProperties.Add(ProjectPropertyInstance.Create(ReservedPropertyNames.msbuildRuntimeType,
 #if RUNTIME_TYPE_NETCORE
                     Traits.Instance.ForceEvaluateAsFullFramework ? "Full" : "Core",
-#elif MONO
-                    NativeMethodsShared.IsMono ? "Mono" : "Full");
 #else
                     "Full",
 #endif
diff --git a/src/Build/Definition/ToolsetReader.cs b/src/Build/Definition/ToolsetReader.cs
index dc91a43e774..0799d38db90 100644
--- a/src/Build/Definition/ToolsetReader.cs
+++ b/src/Build/Definition/ToolsetReader.cs
@@ -179,16 +179,12 @@ void ReadConfigToolset()
                             FrameworkLocationHelper.GetPathToDotNetFrameworkV40(DotNetFrameworkArchitecture.Current);
                         if (v4Dir != null && !toolsets.ContainsKey("4.0"))
                         {
-                            // Create standard properties. On Mono they are well known
-                            var buildProperties =
-                                CreateStandardProperties(globalProperties, "4.0", libraryPath, v4Dir);
-
                             toolsets.Add(
                                 "4.0",
                                 new Toolset(
                                     "4.0",
                                     v4Dir,
-                                    buildProperties,
+                                    buildProperties: null,
                                     environmentProperties,
                                     globalProperties,
                                     null,
@@ -210,21 +206,12 @@ void ReadConfigToolset()
                                     continue;
                                 }
 
-                                if (NativeMethodsShared.IsMono && Version.TryParse(version, out Version parsedVersion) && parsedVersion.Major > 14)
-                                {
-                                    continue;
-                                }
-
-                                // Create standard properties. On Mono they are well known
-                                var buildProperties =
-                                    CreateStandardProperties(globalProperties, version, xbuildToolsetsDir, binPath);
-
                                 toolsets.Add(
                                     version,
                                     new Toolset(
                                         version,
                                         binPath,
-                                        buildProperties,
+                                        buildProperties: null,
                                         environmentProperties,
                                         globalProperties,
                                         null,
@@ -535,7 +522,6 @@ private Toolset ReadToolset(
                 InvalidToolsetDefinitionException.Throw("ConflictingValuesOfMSBuildToolsPath", toolsVersion.Name, toolsVersion.Source.LocationString);
             }
 
-            AppendStandardProperties(properties, globalProperties, toolsVersion.Name, null, toolsPath);
             Toolset toolset = null;
 
             try
@@ -551,100 +537,6 @@ private Toolset ReadToolset(
             return toolset;
         }
 
-        /// <summary>
-        /// Create a dictionary with standard properties.
-        /// </summary>
-        private static PropertyDictionary<ProjectPropertyInstance> CreateStandardProperties(
-            PropertyDictionary<ProjectPropertyInstance> globalProperties,
-            string version,
-            string root,
-            string toolsPath)
-        {
-            // Create standard properties. On Mono they are well known
-            if (!NativeMethodsShared.IsMono)
-            {
-                return null;
-            }
-            PropertyDictionary<ProjectPropertyInstance> buildProperties =
-                new PropertyDictionary<ProjectPropertyInstance>();
-            AppendStandardProperties(buildProperties, globalProperties, version, root, toolsPath);
-            return buildProperties;
-        }
-
-        /// <summary>
-        /// Appends standard properties to a dictionary. These properties are read from
-        /// the registry under Windows (they are a part of a toolset definition).
-        /// </summary>
-        private static void AppendStandardProperties(
-            PropertyDictionary<ProjectPropertyInstance> properties,
-            PropertyDictionary<ProjectPropertyInstance> globalProperties,
-            string version,
-            string root,
-            string toolsPath)
-        {
-            if (NativeMethodsShared.IsMono)
-            {
-                var v4Dir = FrameworkLocationHelper.GetPathToDotNetFrameworkV40(DotNetFrameworkArchitecture.Current)
-                            + Path.DirectorySeparatorChar;
-                var v35Dir = FrameworkLocationHelper.GetPathToDotNetFrameworkV35(DotNetFrameworkArchitecture.Current)
-                             + Path.DirectorySeparatorChar;
-
-                if (root == null)
-                {
-                    var libraryPath = NativeMethodsShared.FrameworkBasePath;
-                    if (toolsPath.StartsWith(libraryPath))
-                    {
-                        root = Path.GetDirectoryName(toolsPath);
-                        if (toolsPath.EndsWith("bin"))
-                        {
-                            root = Path.GetDirectoryName(root);
-                        }
-                    }
-                    else
-                    {
-                        root = libraryPath;
-                    }
-                }
-
-                root += Path.DirectorySeparatorChar;
-
-                // Global properties cannot be overwritten
-                if (globalProperties["FrameworkSDKRoot"] == null && properties["FrameworkSDKRoot"] == null)
-                {
-                    properties.Set(ProjectPropertyInstance.Create("FrameworkSDKRoot", root, true, false));
-                }
-                if (globalProperties["MSBuildToolsRoot"] == null && properties["MSBuildToolsRoot"] == null)
-                {
-                    properties.Set(ProjectPropertyInstance.Create("MSBuildToolsRoot", root, true, false));
-                }
-                if (globalProperties["MSBuildFrameworkToolsPath"] == null
-                    && properties["MSBuildFrameworkToolsPath"] == null)
-                {
-                    properties.Set(ProjectPropertyInstance.Create("MSBuildFrameworkToolsPath", toolsPath, true, false));
-                }
-                if (globalProperties["MSBuildFrameworkToolsPath32"] == null
-                    && properties["MSBuildFrameworkToolsPath32"] == null)
-                {
-                    properties.Set(
-                        ProjectPropertyInstance.Create("MSBuildFrameworkToolsPath32", toolsPath, true, false));
-                }
-                if (globalProperties["MSBuildRuntimeVersion"] == null && properties["MSBuildRuntimeVersion"] == null)
-                {
-                    properties.Set(ProjectPropertyInstance.Create("MSBuildRuntimeVersion", version, true, false));
-                }
-                if (!string.IsNullOrEmpty(v35Dir) && globalProperties["SDK35ToolsPath"] == null
-                    && properties["SDK35ToolsPath"] == null)
-                {
-                    properties.Set(ProjectPropertyInstance.Create("SDK35ToolsPath", v35Dir, true, false));
-                }
-                if (!string.IsNullOrEmpty(v4Dir) && globalProperties["SDK40ToolsPath"] == null
-                    && properties["SDK40ToolsPath"] == null)
-                {
-                    properties.Set(ProjectPropertyInstance.Create("SDK40ToolsPath", v4Dir, true, false));
-                }
-            }
-        }
-
         /// <summary>
         /// Processes a particular ToolsetPropertyDefinition into the correct value and location in the initial and/or final property set.
         /// </summary>
diff --git a/src/Build/Evaluation/Context/EvaluationContext.cs b/src/Build/Evaluation/Context/EvaluationContext.cs
index 649ae9ac856..c4130775330 100644
--- a/src/Build/Evaluation/Context/EvaluationContext.cs
+++ b/src/Build/Evaluation/Context/EvaluationContext.cs
@@ -26,20 +26,29 @@ public class EvaluationContext
         public enum SharingPolicy
         {
             /// <summary>
-            /// Instructs the <see cref="EvaluationContext"/> to reuse state between the different project evaluations that use it.
+            /// Instructs the <see cref="EvaluationContext"/> to reuse all cached state between the different project evaluations that use it.
             /// </summary>
             Shared,
 
             /// <summary>
-            /// Instructs the <see cref="EvaluationContext"/> not to reuse state between the different project evaluations that use it.
+            /// Instructs the <see cref="EvaluationContext"/> to not reuse any cached state between the different project evaluations that use it.
             /// </summary>
-            Isolated
-        }
+            Isolated,
 
-        internal static Action<EvaluationContext> TestOnlyHookOnCreate { get; set; }
+            /// <summary>
+            /// Instructs the <see cref="EvaluationContext"/> to reuse SDK resolver cache between the different project evaluations that use it.
+            /// No other cached state is reused.
+            /// </summary>
+            SharedSDKCache,
+        }
 
+        /// <summary>
+        /// For contexts that are not fully shared, this field tracks whether the instance has already been used for evaluation.
+        /// </summary>
         private int _used;
 
+        internal static Action<EvaluationContext> TestOnlyHookOnCreate { get; set; }
+
         internal SharingPolicy Policy { get; }
 
         internal ISdkResolverService SdkResolverService { get; }
@@ -65,28 +74,26 @@ private EvaluationContext(SharingPolicy policy, IFileSystem fileSystem, ISdkReso
         /// <summary>
         ///     Factory for <see cref="EvaluationContext" />
         /// </summary>
+        /// <param name="policy">The <see cref="SharingPolicy"/> to use.</param>
         public static EvaluationContext Create(SharingPolicy policy)
         {
-
-            // ReSharper disable once IntroduceOptionalParameters.Global
-            // do not remove this method to avoid breaking binary compatibility
+            // Do not remove this method to avoid breaking binary compatibility.
             return Create(policy, fileSystem: null);
         }
 
         /// <summary>
         ///     Factory for <see cref="EvaluationContext" />
         /// </summary>
-        /// <param name="policy"> The <see cref="SharingPolicy"/> to use.</param>
+        /// <param name="policy">The <see cref="SharingPolicy"/> to use.</param>
         /// <param name="fileSystem">The <see cref="IFileSystem"/> to use.
         ///     This parameter is compatible only with <see cref="SharingPolicy.Shared"/>.
-        ///     The method throws if a file system is used with <see cref="SharingPolicy.Isolated"/>.
-        ///     The reasoning is that <see cref="SharingPolicy.Isolated"/> means not reusing any caches between evaluations,
+        ///     The method throws if a file system is used with <see cref="SharingPolicy.Isolated"/> or <see cref="SharingPolicy.SharedSDKCache"/>.
+        ///     The reasoning is that these values guarantee not reusing file system caches between evaluations,
         ///     and the passed in <paramref name="fileSystem"/> might cache state.
         /// </param>
         public static EvaluationContext Create(SharingPolicy policy, MSBuildFileSystemBase fileSystem)
         {
-            // Unsupported case: isolated context with non null file system.
-            // Isolated means caches aren't reused, but the given file system might cache.
+            // Unsupported case: not-fully-shared context with non null file system.
             ErrorUtilities.VerifyThrowArgument(
                 policy == SharingPolicy.Shared || fileSystem == null,
                 "IsolatedContextDoesNotSupportFileSystem");
@@ -100,27 +107,28 @@ public static EvaluationContext Create(SharingPolicy policy, MSBuildFileSystemBa
             return context;
         }
 
-        private EvaluationContext CreateUsedIsolatedContext()
-        {
-            var context = Create(SharingPolicy.Isolated);
-            context._used = 1;
-
-            return context;
-        }
-
         internal EvaluationContext ContextForNewProject()
         {
-            // Projects using isolated contexts need to get a new context instance
+            // Projects using Isolated and SharedSDKCache contexts need to get a new context instance.
             switch (Policy)
             {
                 case SharingPolicy.Shared:
                     return this;
+                case SharingPolicy.SharedSDKCache:
                 case SharingPolicy.Isolated:
-                    // reuse the first isolated context if it has not seen an evaluation yet.
-                    var previousValueWasUsed = Interlocked.CompareExchange(ref _used, 1, 0);
-                    return previousValueWasUsed == 0
-                        ? this
-                        : CreateUsedIsolatedContext();
+                    // Reuse the first not-fully-shared context if it's not been used for an evaluation yet.
+                    if (Interlocked.CompareExchange(ref _used, 1, 0) == 0)
+                    {
+                        return this;
+                    }
+                    // Create a copy if this context has already been used. Mark it used.
+                    EvaluationContext context = new EvaluationContext(Policy, fileSystem: null, sdkResolverService: Policy == SharingPolicy.SharedSDKCache ? SdkResolverService : null)
+                    {
+                        _used = 1,
+                    };
+                    TestOnlyHookOnCreate?.Invoke(context);
+                    return context;
+
                 default:
                     ErrorUtilities.ThrowInternalErrorUnreachable();
                     return null;
@@ -134,11 +142,10 @@ internal EvaluationContext ContextForNewProject()
         /// <returns>The new evaluation context.</returns>
         internal EvaluationContext ContextWithFileSystem(IFileSystem fileSystem)
         {
-            var newContext = new EvaluationContext(this.Policy, fileSystem, this.SdkResolverService, this.FileEntryExpansionCache)
+            return new EvaluationContext(Policy, fileSystem, SdkResolverService, FileEntryExpansionCache)
             {
-                _used = 1
+                _used = 1,
             };
-            return newContext;
         }
     }
 }
diff --git a/src/Build/Evaluation/Evaluator.cs b/src/Build/Evaluation/Evaluator.cs
index e048e5dd371..780d58db6b1 100644
--- a/src/Build/Evaluation/Evaluator.cs
+++ b/src/Build/Evaluation/Evaluator.cs
@@ -1150,9 +1150,6 @@ private void AddBuiltInProperties()
 #if RUNTIME_TYPE_NETCORE
             SetBuiltInProperty(ReservedPropertyNames.msbuildRuntimeType,
                 Traits.Instance.ForceEvaluateAsFullFramework ? "Full" : "Core");
-#elif MONO
-            SetBuiltInProperty(ReservedPropertyNames.msbuildRuntimeType,
-                                                        NativeMethodsShared.IsMono ? "Mono" : "Full");
 #else
             SetBuiltInProperty(ReservedPropertyNames.msbuildRuntimeType, "Full");
 #endif
@@ -2304,6 +2301,8 @@ private LoadImportsResult ExpandAndLoadImportsFromUnescapedImportExpression(stri
                                 continue;
                             }
 
+                            VerifyVSDistributionPath(importElement.Project, importLocationInProject);
+
                             ProjectErrorUtilities.ThrowInvalidProject(importLocationInProject, "ImportedProjectNotFound",
                                                                       importFileUnescaped, importExpressionEscaped);
                         }
@@ -2577,6 +2576,8 @@ private void ThrowForImportedProjectWithSearchPathsNotFound(ProjectImportPathMat
 
             string stringifiedListOfSearchPaths = StringifyList(onlyFallbackSearchPaths);
 
+            VerifyVSDistributionPath(importElement.Project, importElement.ProjectLocation);
+
 #if FEATURE_SYSTEM_CONFIGURATION
             string configLocation = AppDomain.CurrentDomain.SetupInformation.ConfigurationFile;
 
@@ -2640,6 +2641,16 @@ private void SetAllProjectsProperty()
                     mayBeReserved: false);
             }
         }
+
+        [Conditional("FEATURE_GUIDE_TO_VS_ON_UNSUPPORTED_PROJECTS")]
+        private void VerifyVSDistributionPath(string path, ElementLocation importLocationInProject)
+        {
+            if (path.IndexOf("Microsoft\\VisualStudio", StringComparison.OrdinalIgnoreCase) >= 0
+                || path.IndexOf("Microsoft/VisualStudio", StringComparison.OrdinalIgnoreCase) >= 0)
+            {
+                ProjectErrorUtilities.ThrowInvalidProject(importLocationInProject, "ImportedProjectFromVSDistribution", path);
+            }
+        }
     }
 
     /// <summary>
diff --git a/src/Build/Evaluation/Expander.cs b/src/Build/Evaluation/Expander.cs
index c998910190e..b98f902e994 100644
--- a/src/Build/Evaluation/Expander.cs
+++ b/src/Build/Evaluation/Expander.cs
@@ -4171,6 +4171,14 @@ private bool TryExecuteWellKnownFunction(out object returnVal, object objectInst
                                 return true;
                             }
                         }
+                        else if (string.Equals(_methodMethodName, nameof(IntrinsicFunctions.CheckFeatureAvailability), StringComparison.OrdinalIgnoreCase))
+                        {
+                            if (TryGetArg(args, out string arg0))
+                            {
+                                returnVal = IntrinsicFunctions.CheckFeatureAvailability(arg0);
+                                return true;
+                            }
+                        }
                         else if (string.Equals(_methodMethodName, nameof(IntrinsicFunctions.BitwiseOr), StringComparison.OrdinalIgnoreCase))
                         {
                             if (TryGetArgs(args, out int arg0, out int arg1))
diff --git a/src/Build/Evaluation/IEvaluatorData.cs b/src/Build/Evaluation/IEvaluatorData.cs
index d6074d17f46..4d5b2ea8e98 100644
--- a/src/Build/Evaluation/IEvaluatorData.cs
+++ b/src/Build/Evaluation/IEvaluatorData.cs
@@ -190,7 +190,7 @@ IEnumerable<D> ItemDefinitionsEnumerable
         /// covariance problems. (A dictionary of Key, Value cannot be upcast
         /// to a Dictionary of Key, IValue).
         /// </summary>
-        ItemDictionary<I> Items
+        IItemDictionary<I> Items
         {
             get;
         }
diff --git a/src/Build/Evaluation/IntrinsicFunctions.cs b/src/Build/Evaluation/IntrinsicFunctions.cs
index 3fff5c28e65..37312b8c83e 100644
--- a/src/Build/Evaluation/IntrinsicFunctions.cs
+++ b/src/Build/Evaluation/IntrinsicFunctions.cs
@@ -35,7 +35,7 @@ internal static class IntrinsicFunctions
 
         private static readonly Lazy<Regex> RegistrySdkRegex = new Lazy<Regex>(() => new Regex(@"^HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Microsoft SDKs\\Windows\\v(\d+\.\d+)$", RegexOptions.IgnoreCase));
 
-        private static readonly Lazy<NuGetFrameworkWrapper> NuGetFramework = new Lazy<NuGetFrameworkWrapper>(() => new NuGetFrameworkWrapper());
+        private static readonly Lazy<NuGetFrameworkWrapper> NuGetFramework = new Lazy<NuGetFrameworkWrapper>(() => NuGetFrameworkWrapper.CreateInstance());
 
         /// <summary>
         /// Add two doubles
@@ -574,6 +574,11 @@ internal static bool AreFeaturesEnabled(Version wave)
             return ChangeWaves.AreFeaturesEnabled(wave);
         }
 
+        internal static string CheckFeatureAvailability(string featureName)
+        {
+            return Features.CheckFeatureAvailability(featureName).ToString();
+        }
+
         public static string GetCurrentToolsDirectory()
         {
             return BuildEnvironmentHelper.Instance.CurrentMSBuildToolsDirectory;
diff --git a/src/Build/Evaluation/LazyItemEvaluator.EvaluatorData.cs b/src/Build/Evaluation/LazyItemEvaluator.EvaluatorData.cs
index 74e43ce6c93..79cd844c167 100644
--- a/src/Build/Evaluation/LazyItemEvaluator.EvaluatorData.cs
+++ b/src/Build/Evaluation/LazyItemEvaluator.EvaluatorData.cs
@@ -30,7 +30,7 @@ public EvaluatorData(IEvaluatorData<P, I, M, D> wrappedData, IReadOnlyDictionary
                 _itemsByType = itemsByType;
             }
 
-            public ItemDictionary<I> Items
+            public IItemDictionary<I> Items
             {
                 get
                 {
diff --git a/src/Build/Evaluation/PropertyTrackingEvaluatorDataWrapper.cs b/src/Build/Evaluation/PropertyTrackingEvaluatorDataWrapper.cs
index 7a4d6da9521..51117c2d7c1 100644
--- a/src/Build/Evaluation/PropertyTrackingEvaluatorDataWrapper.cs
+++ b/src/Build/Evaluation/PropertyTrackingEvaluatorDataWrapper.cs
@@ -134,7 +134,7 @@ public P SetProperty(ProjectPropertyElement propertyElement, string evaluatedVal
         public bool CanEvaluateElementsWithFalseConditions => _wrapped.CanEvaluateElementsWithFalseConditions;
         public PropertyDictionary<P> Properties => _wrapped.Properties;
         public IEnumerable<D> ItemDefinitionsEnumerable => _wrapped.ItemDefinitionsEnumerable;
-        public ItemDictionary<I> Items => _wrapped.Items;
+        public IItemDictionary<I> Items => _wrapped.Items;
         public List<ProjectItemElement> EvaluatedItemElements => _wrapped.EvaluatedItemElements;
         public PropertyDictionary<ProjectPropertyInstance> EnvironmentVariablePropertiesDictionary => _wrapped.EnvironmentVariablePropertiesDictionary;
         public void InitializeForEvaluation(IToolsetProvider toolsetProvider, EvaluationContext evaluationContext) => _wrapped.InitializeForEvaluation(toolsetProvider, evaluationContext);
diff --git a/src/Build/Graph/GraphBuilder.cs b/src/Build/Graph/GraphBuilder.cs
index e343a98c4cc..dabd4276bc6 100644
--- a/src/Build/Graph/GraphBuilder.cs
+++ b/src/Build/Graph/GraphBuilder.cs
@@ -137,7 +137,7 @@ private void AddEdgesFromProjectReferenceItems(Dictionary<ConfigurationMetadata,
             {
                 var currentNode = parsedProject.Value.GraphNode;
 
-                var requiresTransitiveProjectReferences = _projectInterpretation.RequiresTransitiveProjectReferences(currentNode.ProjectInstance);
+                var requiresTransitiveProjectReferences = _projectInterpretation.RequiresTransitiveProjectReferences(currentNode);
 
                 foreach (var referenceInfo in parsedProject.Value.ReferenceInfos)
                 {
@@ -572,7 +572,7 @@ private void SubmitProjectForParsing(ConfigurationMetadata projectToEvaluate)
         {
             var referenceInfos = new List<ProjectInterpretation.ReferenceInfo>();
 
-            foreach (var referenceInfo in _projectInterpretation.GetReferences(parsedProject.ProjectInstance, _projectCollection, GetInstanceForPlatformNegotiationWithCaching))
+            foreach (var referenceInfo in _projectInterpretation.GetReferences(parsedProject, _projectCollection, GetInstanceForPlatformNegotiationWithCaching))
             {
                 if (FileUtilities.IsSolutionFilename(referenceInfo.ReferenceConfiguration.ProjectFullPath))
                 {
diff --git a/src/Build/Graph/ProjectGraph.cs b/src/Build/Graph/ProjectGraph.cs
index 39993e3a4fc..c9b55477667 100644
--- a/src/Build/Graph/ProjectGraph.cs
+++ b/src/Build/Graph/ProjectGraph.cs
@@ -635,7 +635,7 @@ public IReadOnlyDictionary<ProjectGraphNode, ImmutableList<string>> GetTargetLis
                 // Queue the project references for visitation, if the edge hasn't already been traversed.
                 foreach (var referenceNode in node.ProjectReferences)
                 {
-                    var applicableTargets = targetsToPropagate.GetApplicableTargetsForReference(referenceNode.ProjectInstance);
+                    var applicableTargets = targetsToPropagate.GetApplicableTargetsForReference(referenceNode);
 
                     if (applicableTargets.IsEmpty)
                     {
diff --git a/src/Build/Graph/ProjectGraphNode.cs b/src/Build/Graph/ProjectGraphNode.cs
index bb14d663c84..f5f5f9e2c4b 100644
--- a/src/Build/Graph/ProjectGraphNode.cs
+++ b/src/Build/Graph/ProjectGraphNode.cs
@@ -1,6 +1,7 @@
 Ôªø// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
+using System;
 using System.Collections.Generic;
 using System.Diagnostics;
 using Microsoft.Build.BackEnd;
@@ -21,11 +22,15 @@ public sealed class ProjectGraphNode
         private readonly HashSet<ProjectGraphNode> _projectReferences = new HashSet<ProjectGraphNode>();
         private readonly HashSet<ProjectGraphNode> _referencingProjects = new HashSet<ProjectGraphNode>();
 
+        internal ProjectInterpretation.ProjectType ProjectType { get; }
+
         // No public creation.
         internal ProjectGraphNode(ProjectInstance projectInstance)
         {
             ErrorUtilities.VerifyThrowInternalNull(projectInstance, nameof(projectInstance));
             ProjectInstance = projectInstance;
+
+            ProjectType = ProjectInterpretation.GetProjectType(projectInstance);
         }
 
         /// <summary>
diff --git a/src/Build/Graph/ProjectInterpretation.cs b/src/Build/Graph/ProjectInterpretation.cs
index d617f78e35a..93aebf6c1af 100644
--- a/src/Build/Graph/ProjectInterpretation.cs
+++ b/src/Build/Graph/ProjectInterpretation.cs
@@ -78,12 +78,14 @@ public TargetSpecification(string target, bool skipIfNonexistent)
             public bool SkipIfNonexistent { get; }
         }
 
-        public IEnumerable<ReferenceInfo> GetReferences(ProjectInstance requesterInstance, ProjectCollection projectCollection, ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory)
+        public IEnumerable<ReferenceInfo> GetReferences(ProjectGraphNode projectGraphNode, ProjectCollection projectCollection, ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory)
         {
             IEnumerable<ProjectItemInstance> projectReferenceItems;
             IEnumerable<GlobalPropertiesModifier> globalPropertiesModifiers = null;
 
-            switch (GetProjectType(requesterInstance))
+            ProjectInstance requesterInstance = projectGraphNode.ProjectInstance;
+
+            switch (projectGraphNode.ProjectType)
             {
                 case ProjectType.OuterBuild:
                     projectReferenceItems = ConstructInnerBuildReferences(requesterInstance);
@@ -251,7 +253,7 @@ public void AddInnerBuildEdges(Dictionary<ConfigurationMetadata, ParsedProject>
             {
                 ProjectGraphNode outerBuild = node.Value.GraphNode;
 
-                if (GetProjectType(outerBuild.ProjectInstance) == ProjectType.OuterBuild && outerBuild.ReferencingProjects.Count != 0)
+                if (outerBuild.ProjectType == ProjectType.OuterBuild && outerBuild.ReferencingProjects.Count != 0)
                 {
                     foreach (ProjectGraphNode innerBuild in outerBuild.ProjectReferences)
                     {
@@ -524,18 +526,18 @@ public static TargetsToPropagate FromProjectAndEntryTargets(ProjectInstance proj
                 return new TargetsToPropagate(targetsForOuterBuild.ToImmutable(), targetsForInnerBuild.ToImmutable());
             }
 
-            public ImmutableList<string> GetApplicableTargetsForReference(ProjectInstance reference)
+            public ImmutableList<string> GetApplicableTargetsForReference(ProjectGraphNode projectGraphNode)
             {
                 ImmutableList<string> RemoveNonexistentTargetsIfSkippable(ImmutableList<TargetSpecification> targets)
                 {
                     // Keep targets that are non-skippable or that exist but are skippable.
                     return targets
-                        .Where(t => !t.SkipIfNonexistent || reference.Targets.ContainsKey(t.Target))
+                        .Where(t => !t.SkipIfNonexistent || projectGraphNode.ProjectInstance.Targets.ContainsKey(t.Target))
                         .Select(t => t.Target)
                         .ToImmutableList();
                 }
 
-                return GetProjectType(reference) switch
+                return projectGraphNode.ProjectType switch
                 {
                     ProjectType.InnerBuild => RemoveNonexistentTargetsIfSkippable(_allTargets),
                     ProjectType.OuterBuild => RemoveNonexistentTargetsIfSkippable(_outerBuildTargets),
@@ -545,14 +547,16 @@ ImmutableList<string> RemoveNonexistentTargetsIfSkippable(ImmutableList<TargetSp
             }
         }
 
-        public bool RequiresTransitiveProjectReferences(ProjectInstance projectInstance)
+        public bool RequiresTransitiveProjectReferences(ProjectGraphNode projectGraphNode)
         {
             // Outer builds do not get edges based on ProjectReference or their transitive closure, only inner builds do.
-            if (GetProjectType(projectInstance) == ProjectType.OuterBuild)
+            if (projectGraphNode.ProjectType == ProjectType.OuterBuild)
             {
                 return false;
             }
 
+            ProjectInstance projectInstance = projectGraphNode.ProjectInstance;
+
             // special case for Quickbuild which updates msbuild binaries independent of props/targets. Remove this when all QB repos will have
             // migrated to new enough Visual Studio versions whose Microsoft.Managed.After.Targets enable transitive references.
             if (string.IsNullOrWhiteSpace(projectInstance.GetPropertyValue(AddTransitiveProjectReferencesInStaticGraphPropertyName)) &&
diff --git a/src/Build/Instance/IImmutableInstanceProvider.cs b/src/Build/Instance/IImmutableInstanceProvider.cs
new file mode 100644
index 00000000000..a862a12cf13
--- /dev/null
+++ b/src/Build/Instance/IImmutableInstanceProvider.cs
@@ -0,0 +1,14 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+namespace Microsoft.Build.Execution
+{
+    /// <summary>
+    /// Represents an object that is immutable and has an Instance, e.g. a <see cref="ProjectPropertyInstance"/>.
+    /// </summary>
+    /// <typeparam name="T">The Instance type.</typeparam>
+    internal interface IImmutableInstanceProvider<T>
+    {
+        T ImmutableInstance { get; set; }
+    }
+}
diff --git a/src/Build/Instance/ImmutableProjectCollections/ImmutableElementCollectionConverter.cs b/src/Build/Instance/ImmutableProjectCollections/ImmutableElementCollectionConverter.cs
new file mode 100644
index 00000000000..ae164108704
--- /dev/null
+++ b/src/Build/Instance/ImmutableProjectCollections/ImmutableElementCollectionConverter.cs
@@ -0,0 +1,250 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+#nullable disable
+
+using System;
+using System.Collections;
+using System.Collections.Generic;
+using System.Data;
+using System.Runtime.Serialization;
+using Microsoft.Build.Collections;
+using Microsoft.Build.Evaluation;
+using Microsoft.Build.Execution;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Instance
+{
+    /// <summary>
+    /// A specialized collection used when element data originates in an immutable Project.
+    /// </summary>
+    internal sealed class ImmutableElementCollectionConverter<TCached, T> : IRetrievableEntryHashSet<T>
+        where T : class, IKeyed
+    {
+        private readonly IDictionary<string, TCached> _projectElements;
+        private readonly IDictionary<(string, int, int), TCached> _constrainedProjectElements;
+        private readonly ValuesCollection _values;
+
+        public ImmutableElementCollectionConverter(
+            IDictionary<string, TCached> projectElements,
+            IDictionary<(string, int, int), TCached> constrainedProjectElements)
+        {
+            _projectElements = projectElements;
+            _constrainedProjectElements = constrainedProjectElements;
+            _values = new ValuesCollection(_projectElements, _constrainedProjectElements);
+        }
+
+        public T this[string key]
+        {
+            get => Get(key);
+            set => throw new NotSupportedException();
+        }
+
+        public int Count => _values.Count;
+
+        public bool IsReadOnly => true;
+
+        public ICollection<string> Keys => _projectElements.Keys;
+
+        public ICollection<T> Values => _values;
+
+        public void Add(T item) => throw new NotSupportedException();
+
+        public void Add(string key, T value) => throw new NotSupportedException();
+
+        public void Add(KeyValuePair<string, T> item) => throw new NotSupportedException();
+
+        public void Clear() => throw new NotSupportedException();
+
+        public bool Contains(T item) => _projectElements.ContainsKey(item.Key);
+
+        // Note: This implementation of Contains(KeyValuePair<string, T> only checks whether the collection contains
+        // an item with the same key. This doesn't match the general behavior of collection comparison, where the
+        // KeyValuePair's key *and* value are compared. This is done intentionally in order to match the behavior of
+        // RetrievableEntryHashSet, which only checks for the existence of an item with the same key (ignoring
+        // whether the values match).
+        public bool Contains(KeyValuePair<string, T> item) => _projectElements.ContainsKey(item.Key);
+
+        public bool ContainsKey(string key) => _projectElements.ContainsKey(key);
+
+        public void CopyTo(T[] array) => _values.CopyTo(array, arrayIndex: 0);
+
+        public void CopyTo(T[] array, int arrayIndex, int count) => _values.CopyTo(array, arrayIndex, count);
+
+        public void CopyTo(T[] array, int arrayIndex) => _values.CopyTo(array, arrayIndex);
+
+        public void CopyTo(KeyValuePair<string, T>[] array, int arrayIndex) => _values.CopyTo(array, arrayIndex);
+
+        public T Get(string key) => _values.Get(key);
+
+        public T Get(string key, int index, int length) => _values.Get(key, index, length);
+
+        public IEnumerator<T> GetEnumerator() => _values.GetEnumerator();
+
+        public void GetObjectData(SerializationInfo info, StreamingContext context) => throw new NotSupportedException();
+
+        public void OnDeserialization(object sender) => throw new NotSupportedException();
+
+        public bool Remove(T item) => throw new NotSupportedException();
+
+        public bool Remove(string key) => throw new NotSupportedException();
+
+        public bool Remove(KeyValuePair<string, T> item) => throw new NotSupportedException();
+
+        public void TrimExcess()
+        {
+        }
+
+        public bool TryGetValue(string key, out T value) => _values.TryGetValue(key, out value);
+
+        public void UnionWith(IEnumerable<T> other) => throw new NotSupportedException();
+
+        IEnumerator<KeyValuePair<string, T>> IEnumerable<KeyValuePair<string, T>>.GetEnumerator() => _values.GetKvpEnumerator();
+
+        IEnumerator IEnumerable.GetEnumerator() => _values.GetEnumerator();
+
+        /// <summary>
+        /// Wraps the Project's values.
+        /// </summary>
+        private sealed class ValuesCollection : ICollection<T>
+        {
+            private readonly IDictionary<string, TCached> _projectElements;
+            private readonly IDictionary<(string, int, int), TCached> _constrainedProjectElements;
+
+            public ValuesCollection(
+                IDictionary<string, TCached> projectElements,
+                IDictionary<(string, int, int), TCached> constrainedProjectElements)
+            {
+                _projectElements = projectElements;
+                _constrainedProjectElements = constrainedProjectElements;
+            }
+
+            public int Count => _projectElements.Count;
+
+            public bool IsReadOnly => true;
+
+            public void Add(T item) => throw new NotSupportedException();
+
+            public void Clear() => throw new NotSupportedException();
+
+            public bool Contains(T item)
+            {
+                if (item == null)
+                {
+                    throw new ArgumentNullException(nameof(item));
+                }
+
+                return _projectElements.ContainsKey(item.Key);
+            }
+
+            public void CopyTo(T[] array, int arrayIndex)
+            {
+                CopyTo(array, arrayIndex, _projectElements.Count);
+            }
+
+            public void CopyTo(T[] array, int arrayIndex, int count)
+            {
+                if (count < 0)
+                {
+                    throw new ArgumentOutOfRangeException(nameof(count));
+                }
+
+                ErrorUtilities.VerifyCollectionCopyToArguments(array, nameof(array), arrayIndex, nameof(arrayIndex), count);
+
+                int index = arrayIndex;
+                int endIndex = arrayIndex + count;
+                foreach (var item in _projectElements.Values)
+                {
+                    array[index] = GetElementInstance(item);
+                    ++index;
+                    if (index >= endIndex)
+                    {
+                        break;
+                    }
+                }
+            }
+
+            public void CopyTo(KeyValuePair<string, T>[] array, int arrayIndex)
+            {
+                ErrorUtilities.VerifyCollectionCopyToArguments(array, nameof(array), arrayIndex, nameof(arrayIndex), _projectElements.Count);
+
+                int index = arrayIndex;
+                foreach (var item in _projectElements.Values)
+                {
+                    var itemInstance = GetElementInstance(item);
+                    array[index] = new KeyValuePair<string, T>(itemInstance.Key, itemInstance);
+                    ++index;
+                }
+            }
+
+            public IEnumerator<T> GetEnumerator()
+            {
+                foreach (var item in _projectElements.Values)
+                {
+                    yield return GetElementInstance(item);
+                }
+            }
+
+            public IEnumerator<KeyValuePair<string, T>> GetKvpEnumerator()
+            {
+                foreach (var kvp in _projectElements)
+                {
+                    T instance = GetElementInstance(kvp.Value);
+                    yield return new KeyValuePair<string, T>(kvp.Key, instance);
+                }
+            }
+
+            public bool Remove(T item) => throw new NotSupportedException();
+
+            IEnumerator IEnumerable.GetEnumerator()
+            {
+                foreach (var item in _projectElements.Values)
+                {
+                    yield return GetElementInstance(item);
+                }
+            }
+
+            public T Get(string key)
+            {
+                if (_projectElements.TryGetValue(key, out TCached element))
+                {
+                    return GetElementInstance(element);
+                }
+
+                return null;
+            }
+
+            public T Get(string keyString, int startIndex, int length)
+            {
+                if (_constrainedProjectElements.TryGetValue((keyString, startIndex, length), out TCached element))
+                {
+                    return GetElementInstance(element);
+                }
+
+                return null;
+            }
+
+            public bool TryGetValue(string key, out T value)
+            {
+                value = null;
+                if (!_projectElements.TryGetValue(key, out TCached element))
+                {
+                    return false;
+                }
+
+                value = GetElementInstance(element);
+                return value != null;
+            }
+
+            private T GetElementInstance(TCached element)
+            {
+                if (element is IImmutableInstanceProvider<T> instanceProvider)
+                {
+                    return instanceProvider.ImmutableInstance;
+                }
+
+                return null;
+            }
+        }
+    }
+}
diff --git a/src/Build/Instance/ImmutableProjectCollections/ImmutableItemDictionary.cs b/src/Build/Instance/ImmutableProjectCollections/ImmutableItemDictionary.cs
new file mode 100644
index 00000000000..74919a57b97
--- /dev/null
+++ b/src/Build/Instance/ImmutableProjectCollections/ImmutableItemDictionary.cs
@@ -0,0 +1,221 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.Collections;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using Microsoft.Build.Collections;
+using Microsoft.Build.Evaluation;
+using Microsoft.Build.Execution;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Instance
+{
+    /// <summary>
+    /// A specialized collection used when item data originates in an immutable Project.
+    /// </summary>
+    internal sealed class ImmutableItemDictionary<TCached, T> : IItemDictionary<T>
+        where T : class, IKeyed, IItem
+    {
+        private readonly IDictionary<string, ICollection<TCached>> _itemsByType;
+        private readonly ICollection<T> _allItems;
+
+        public ImmutableItemDictionary(IDictionary<string, ICollection<TCached>> itemsByType, ICollection<TCached> allItems)
+        {
+            _itemsByType = itemsByType ?? throw new ArgumentNullException(nameof(itemsByType));
+
+            if (allItems == null)
+            {
+                throw new ArgumentNullException(nameof(allItems));
+            }
+
+            var convertedItems = new HashSet<T>(allItems.Count);
+            foreach (var item in allItems)
+            {
+                T? instance = GetInstance(item);
+                if (instance != null)
+                {
+                    convertedItems.Add(instance);
+                }
+            }
+            _allItems = new ReadOnlyCollection<T>(convertedItems);
+        }
+
+        /// <inheritdoc />
+        public ICollection<T> this[string itemType]
+        {
+            get
+            {
+                if (!_itemsByType.TryGetValue(itemType, out ICollection<TCached>? list))
+                {
+                    return Array.Empty<T>();
+                }
+
+                return new ListConverter(itemType, _allItems, list);
+            }
+        }
+
+        /// <inheritdoc />
+        public int Count => _allItems.Count;
+
+        /// <inheritdoc />
+        public ICollection<string> ItemTypes => _itemsByType.Keys;
+
+        /// <inheritdoc />
+        public void Add(T projectItem) => throw new NotSupportedException();
+
+        /// <inheritdoc />
+        public void AddEmptyMarker(string itemType) => throw new NotSupportedException();
+
+        /// <inheritdoc />
+        public void AddRange(IEnumerable<T> projectItems) => throw new NotSupportedException();
+
+        /// <inheritdoc />
+        public void Clear() => throw new NotSupportedException();
+
+        /// <inheritdoc />
+        public bool Contains(T projectItem) => _allItems.Contains(projectItem);
+
+        /// <inheritdoc />
+        public void EnumerateItemsPerType(Action<string, IEnumerable<T>> itemTypeCallback)
+        {
+            foreach (var kvp in _itemsByType)
+            {
+                if (kvp.Value == null || kvp.Value.Count == 0)
+                {
+                    // skip empty markers
+                    continue;
+                }
+
+                itemTypeCallback(kvp.Key, new ListConverter(kvp.Key, _allItems, kvp.Value));
+            }
+        }
+
+        /// <inheritdoc />
+        public IEnumerable<TResult> GetCopyOnReadEnumerable<TResult>(Func<T, TResult> selector)
+        {
+            foreach (var item in _allItems)
+            {
+                yield return selector(item);
+            }
+        }
+
+        /// <inheritdoc />
+        public IEnumerator<T> GetEnumerator() => _allItems.GetEnumerator();
+
+        /// <inheritdoc />
+        IEnumerator IEnumerable.GetEnumerator() => _allItems.GetEnumerator();
+
+        /// <inheritdoc />
+        public ICollection<T> GetItems(string itemType)
+        {
+            if (_itemsByType.TryGetValue(itemType, out ICollection<TCached>? items))
+            {
+                return new ListConverter(itemType, _allItems, items);
+            }
+
+            return Array.Empty<T>();
+        }
+
+        /// <inheritdoc />
+        public bool HasEmptyMarker(string itemType) => _itemsByType.Values.Any(list => list.Count == 0);
+
+        /// <inheritdoc />
+        public void ImportItems(IEnumerable<T> other) => throw new NotSupportedException();
+
+        /// <inheritdoc />
+        public void ImportItemsOfType(string itemType, IEnumerable<T> items) => throw new NotSupportedException();
+
+        /// <inheritdoc />
+        public bool Remove(T projectItem) => throw new NotSupportedException();
+
+        /// <inheritdoc />
+        public void RemoveItems(IEnumerable<T> other) => throw new NotSupportedException();
+
+        /// <inheritdoc />
+        public void Replace(T existingItem, T newItem) => throw new NotSupportedException();
+
+        private static T? GetInstance(TCached item)
+        {
+            if (item is IImmutableInstanceProvider<T> instanceProvider)
+            {
+                return instanceProvider.ImmutableInstance;
+            }
+
+            return null;
+        }
+
+        private sealed class ListConverter : ICollection<T>
+        {
+            private readonly string _itemType;
+            private readonly ICollection<T> _allItems;
+            private readonly ICollection<TCached> _list;
+
+            public ListConverter(string itemType, ICollection<T> allItems, ICollection<TCached> list)
+            {
+                _itemType = itemType;
+                _allItems = allItems;
+                _list = list;
+            }
+
+            public int Count => _list.Count;
+
+            public bool IsReadOnly => true;
+
+            public void Add(T item) => throw new NotSupportedException();
+
+            public void Clear() => throw new NotSupportedException();
+
+            public bool Remove(T item) => throw new NotSupportedException();
+
+            public bool Contains(T item)
+            {
+                return MSBuildNameIgnoreCaseComparer.Default.Equals(item.Key, _itemType) &&
+                       _allItems.Contains(item);
+            }
+
+            public void CopyTo(T[] array, int arrayIndex)
+            {
+                ErrorUtilities.VerifyCollectionCopyToArguments(array, nameof(array), arrayIndex, nameof(arrayIndex), _list.Count);
+
+                int currentIndex = arrayIndex;
+                foreach (var item in _list)
+                {
+                    T? instance = GetInstance(item);
+                    if (instance != null)
+                    {
+                        array[currentIndex] = instance;
+                        ++currentIndex;
+                    }
+                }
+            }
+
+            public IEnumerator<T> GetEnumerator()
+            {
+                foreach (var item in _list)
+                {
+                    T? instance = GetInstance(item);
+                    if (instance != null)
+                    {
+                        yield return instance;
+                    }
+                }
+            }
+
+            IEnumerator IEnumerable.GetEnumerator()
+            {
+                foreach (var item in _list)
+                {
+                    T? instance = GetInstance(item);
+                    if (instance != null)
+                    {
+                        yield return instance;
+                    }
+                }
+            }
+        }
+    }
+}
diff --git a/src/Build/Instance/ProjectInstance.cs b/src/Build/Instance/ProjectInstance.cs
index 0be0eeee71e..fe63676c1d2 100644
--- a/src/Build/Instance/ProjectInstance.cs
+++ b/src/Build/Instance/ProjectInstance.cs
@@ -21,6 +21,7 @@
 using Microsoft.Build.Evaluation.Context;
 using Microsoft.Build.FileSystem;
 using Microsoft.Build.Framework;
+using Microsoft.Build.Instance;
 using Microsoft.Build.Internal;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.FileSystem;
@@ -34,6 +35,7 @@
 namespace Microsoft.Build.Execution
 {
     using Utilities = Microsoft.Build.Internal.Utilities;
+
     /// <summary>
     /// Enum for controlling project instance creation
     /// </summary>
@@ -124,7 +126,7 @@ public class ProjectInstance : IPropertyProvider<ProjectPropertyInstance>, IItem
         /// <summary>
         /// Items in the project. This is a dictionary of ordered lists of a single type of items keyed by item type.
         /// </summary>
-        private ItemDictionary<ProjectItemInstance> _items;
+        private IItemDictionary<ProjectItemInstance> _items;
 
         /// <summary>
         /// Items organized by evaluatedInclude value
@@ -151,7 +153,7 @@ public class ProjectInstance : IPropertyProvider<ProjectPropertyInstance>, IItem
         /// <summary>
         /// The item definitions from the parent Project.
         /// </summary>
-        private RetrievableEntryHashSet<ProjectItemDefinitionInstance> _itemDefinitions;
+        private IRetrievableEntryHashSet<ProjectItemDefinitionInstance> _itemDefinitions;
 
         /// <summary>
         /// The HostServices to use during a build.
@@ -388,6 +390,82 @@ public ProjectInstance(Project project, ProjectInstanceSettings settings)
             _isImmutable = immutable;
         }
 
+        /// <summary>
+        /// Creates a ProjectInstance from an immutable <see cref="Project"/>.
+        /// The resulting <see cref="ProjectInstance"/> object wraps the <see cref="Project"/>
+        /// object. Unlike the ProjectInstance(Project project, ProjectInstanceSettings settings)
+        /// constructor, the properties and items are not cloned.
+        /// </summary>
+        /// <param name="linkedProject">The immutable <see cref="Project"/>.</param>
+        /// <param name="fastItemLookupNeeded">Whether the fast item lookup cache is required.</param>
+        private ProjectInstance(Project linkedProject, bool fastItemLookupNeeded)
+        {
+            ErrorUtilities.VerifyThrowInternalNull(linkedProject, nameof(linkedProject));
+
+            var projectPath = linkedProject.FullPath;
+            _directory = Path.GetDirectoryName(projectPath);
+            _projectFileLocation = ElementLocation.Create(projectPath);
+            _hostServices = linkedProject.ProjectCollection.HostServices;
+            _isImmutable = true;
+
+            EvaluationId = linkedProject.EvaluationCounter;
+
+            // ProjectProperties
+            InitializeImmutableProjectPropertyInstances(linkedProject.Properties);
+            var projectPropertiesConverter = GetImmutableElementCollectionConverter<ProjectProperty, ProjectPropertyInstance>(linkedProject.Properties);
+            _properties = new PropertyDictionary<ProjectPropertyInstance>(projectPropertiesConverter);
+
+            // ProjectItemDefinitions
+            InitializeImmutableProjectItemDefinitionInstances(linkedProject.ItemDefinitions);
+            _itemDefinitions = GetImmutableElementCollectionConverter<ProjectItemDefinition, ProjectItemDefinitionInstance>(linkedProject.ItemDefinitions);
+
+            // ProjectItems
+            InitializeImmutableProjectItemInstances(linkedProject.Items);
+            var itemsByType = linkedProject.Items as IDictionary<string, ICollection<ProjectItem>>;
+            _items = new ImmutableItemDictionary<ProjectItem, ProjectItemInstance>(itemsByType, linkedProject.Items);
+
+            // ItemsByEvaluatedInclude
+            if (fastItemLookupNeeded)
+            {
+                _itemsByEvaluatedInclude = new MultiDictionary<string, ProjectItemInstance>(StringComparer.OrdinalIgnoreCase);
+                foreach (var item in linkedProject.Items)
+                {
+                    if (item is IImmutableInstanceProvider<ProjectItemInstance> immutableInstanceProvider)
+                    {
+                        _itemsByEvaluatedInclude.Add(item.EvaluatedInclude, immutableInstanceProvider.ImmutableInstance);
+                    }
+                }
+            }
+
+            _globalProperties = new PropertyDictionary<ProjectPropertyInstance>(linkedProject.GlobalPropertiesCount);
+            foreach (var property in linkedProject.GlobalPropertiesEnumerable)
+            {
+                _globalProperties.Set(ProjectPropertyInstance.Create(property.Key, property.Value));
+            }
+
+            CreateEnvironmentVariablePropertiesSnapshot(linkedProject.ProjectCollection.EnvironmentProperties);
+            CreateTargetsSnapshot(linkedProject.Targets, null, null, null, null);
+            CreateImportsSnapshot(linkedProject.Imports, linkedProject.ImportsIncludingDuplicates);
+
+            Toolset = linkedProject.ProjectCollection.GetToolset(linkedProject.ToolsVersion);
+            SubToolsetVersion = linkedProject.SubToolsetVersion;
+            TaskRegistry = new TaskRegistry(Toolset, linkedProject.ProjectCollection.ProjectRootElementCache);
+
+            ProjectRootElementCache = linkedProject.ProjectCollection.ProjectRootElementCache;
+
+            EvaluatedItemElements = new List<ProjectItemElement>(linkedProject.Items.Count);
+            foreach (var item in linkedProject.Items)
+            {
+                EvaluatedItemElements.Add(item.Xml);
+            }
+
+            _usingDifferentToolsVersionFromProjectFile = false;
+            _originalProjectToolsVersion = linkedProject.ToolsVersion;
+            _explicitToolsVersionSpecified = linkedProject.SubToolsetVersion != null;
+
+            _isImmutable = true;
+        }
+
         /// <summary>
         /// Creates a ProjectInstance directly.
         /// No intermediate Project object is created.
@@ -785,6 +863,51 @@ public static ProjectInstance FromProjectRootElement(ProjectRootElement rootElem
                 options.Interactive);
         }
 
+        /// <summary>
+        /// Create a ProjectInstance from an immutable project source.
+        /// </summary>
+        /// <param name="project">The immutable <see cref="Project"/> on which the ProjectInstance is based.</param>
+        /// <param name="settings">The <see cref="ProjectInstanceSettings"/> to use.</param>
+        public static ProjectInstance FromImmutableProjectSource(Project project, ProjectInstanceSettings settings)
+        {
+            bool fastItemLookupNeeded = settings.HasFlag(ProjectInstanceSettings.ImmutableWithFastItemLookup);
+            return new ProjectInstance(project, fastItemLookupNeeded);
+        }
+
+        private static ImmutableElementCollectionConverter<TCached, T> GetImmutableElementCollectionConverter<TCached, T>(
+            ICollection<TCached> elementsCollection)
+            where T : class, IKeyed
+        {
+            // The elementsCollection we receive here is implemented in CPS as a special collection
+            // that is both IDictionary<string, TCached> and also IDictionary<(string, int, int), TCached>.
+            // This allows it to represent the fundamental operations of an IRetrievableEntryHashSet.
+            // The IDictionary<(string, int, int), TCached> interface is used to handle the
+            // IRetrievableEntryHashSet's Get(string key, int index, int length) method. Here we take
+            // elementsCollection and put it into an ImmutableElementCollectionConverter, which
+            // represents the elementsCollection as an IRetrievableEntryHashSet<T>.
+            // That IRetrievableEntryHashSet is then used either directly or as a backing source for
+            // another collection wrapper (e.g. PropertyDictionary).
+            if (elementsCollection is not IDictionary<string, TCached> elementsDictionary ||
+                elementsCollection is not IDictionary<(string, int, int), TCached> constrainedElementsDictionary)
+            {
+                throw new ArgumentException(nameof(elementsCollection));
+            }
+
+            return new ImmutableElementCollectionConverter<TCached, T>(elementsDictionary, constrainedElementsDictionary);
+        }
+
+        private static ImmutableElementCollectionConverter<TCached, T> GetImmutableElementCollectionConverter<TCached, T>(
+            IDictionary<string, TCached> elementsDictionary)
+            where T : class, IKeyed
+        {
+            if (elementsDictionary is not IDictionary<(string, int, int), TCached> constrainedElementsDictionary)
+            {
+                throw new ArgumentException(nameof(elementsDictionary));
+            }
+
+            return new ImmutableElementCollectionConverter<TCached, T>(elementsDictionary, constrainedElementsDictionary);
+        }
+
         /// <summary>
         /// Global properties this project was evaluated with, if any.
         /// Read only collection.
@@ -1101,7 +1224,7 @@ IEnumerable<ProjectItemDefinitionInstance> IEvaluatorData<ProjectPropertyInstanc
         /// <summary>
         /// Gets the items
         /// </summary>
-        ItemDictionary<ProjectItemInstance> IEvaluatorData<ProjectPropertyInstance, ProjectItemInstance, ProjectMetadataInstance, ProjectItemDefinitionInstance>.Items
+        IItemDictionary<ProjectItemInstance> IEvaluatorData<ProjectPropertyInstance, ProjectItemInstance, ProjectMetadataInstance, ProjectItemDefinitionInstance>.Items
         {
             [DebuggerStepThrough]
             get
@@ -1283,7 +1406,7 @@ internal PropertyDictionary<ProjectPropertyInstance> PropertiesToBuildWith
         /// Actual collection of items in this project,
         /// for the build to start with.
         /// </summary>
-        internal ItemDictionary<ProjectItemInstance> ItemsToBuildWith
+        internal IItemDictionary<ProjectItemInstance> ItemsToBuildWith
         {
             [DebuggerStepThrough]
             get
@@ -2360,7 +2483,7 @@ internal bool Build(string[] targets, IEnumerable<ILogger> loggers, IEnumerable<
 
             if (loggers != null)
             {
-                parameters.Loggers = (loggers is ICollection<ILogger>) ? ((ICollection<ILogger>)loggers) : new List<ILogger>(loggers);
+                parameters.Loggers = (loggers is ICollection<ILogger> loggersCollection) ? loggersCollection : new List<ILogger>(loggers);
 
                 // Enables task parameter logging based on whether any of the loggers attached
                 // to the Project have their verbosity set to Diagnostic. If no logger has
@@ -2693,6 +2816,41 @@ private static IDictionary<string, TValue> CreateCloneDictionary<TValue>(IDictio
             }
         }
 
+        private static void InitializeImmutableProjectItemDefinitionInstances(IDictionary<string, ProjectItemDefinition> projectItemDefinitions)
+        {
+            foreach (var projectItemDefinition in projectItemDefinitions.Values)
+            {
+                if (projectItemDefinition is IImmutableInstanceProvider<ProjectItemDefinitionInstance> immutableInstanceProvider)
+                {
+                    immutableInstanceProvider.ImmutableInstance = new ProjectItemDefinitionInstance(projectItemDefinition);
+                }
+            }
+        }
+
+        private static void InitializeImmutableProjectPropertyInstances(ICollection<ProjectProperty> projectProperties)
+        {
+            foreach (var projectProperty in projectProperties)
+            {
+                if (projectProperty is IImmutableInstanceProvider<ProjectPropertyInstance> immutableInstanceProvider)
+                {
+                    immutableInstanceProvider.ImmutableInstance = InstantiateProjectPropertyInstance(projectProperty, isImmutable: true);
+                }
+            }
+        }
+
+        private static ProjectPropertyInstance InstantiateProjectPropertyInstance(ProjectProperty property, bool isImmutable)
+        {
+            // Allow reserved property names, since this is how they are added to the project instance.
+            // The caller has prevented users setting them themselves.
+            var instance = ProjectPropertyInstance.Create(
+                                property.Name,
+                                ((IProperty)property).EvaluatedValueEscaped,
+                                true /* MAY be reserved name */,
+                                isImmutable,
+                                property.IsEnvironmentProperty);
+            return instance;
+        }
+
         /// <summary>
         /// Common code for the constructors that evaluate directly.
         /// Global properties may be null.
@@ -2934,44 +3092,60 @@ private Dictionary<ProjectItem, ProjectItemInstance> CreateItemsSnapshot(ICollec
 
             foreach (ProjectItem item in items)
             {
-                List<ProjectItemDefinitionInstance> inheritedItemDefinitions = null;
+                ProjectItemInstance instance = InstantiateProjectItemInstance(item);
+                _items.Add(instance);
+                projectItemToInstanceMap?.Add(item, instance);
+            }
 
-                if (item.InheritedItemDefinitions != null)
-                {
-                    inheritedItemDefinitions = new List<ProjectItemDefinitionInstance>(item.InheritedItemDefinitions.Count);
+            return projectItemToInstanceMap;
+        }
 
-                    foreach (ProjectItemDefinition inheritedItemDefinition in item.InheritedItemDefinitions)
-                    {
-                        // All item definitions in this list should be present in the collection of item definitions
-                        // on the project we are cloning.
-                        inheritedItemDefinitions.Add(_itemDefinitions[inheritedItemDefinition.ItemType]);
-                    }
+        private void InitializeImmutableProjectItemInstances(ICollection<ProjectItem> projectItems)
+        {
+            foreach (var projectItem in projectItems)
+            {
+                if (projectItem is IImmutableInstanceProvider<ProjectItemInstance> immutableInstanceProvider)
+                {
+                    ProjectItemInstance instance = InstantiateProjectItemInstance(projectItem);
+                    immutableInstanceProvider.ImmutableInstance = instance;
                 }
+            }
+        }
 
-                CopyOnWritePropertyDictionary<ProjectMetadataInstance> directMetadata = null;
+        private ProjectItemInstance InstantiateProjectItemInstance(ProjectItem item)
+        {
+            List<ProjectItemDefinitionInstance> inheritedItemDefinitions = null;
 
-                if (item.DirectMetadata != null)
-                {
-                    directMetadata = new CopyOnWritePropertyDictionary<ProjectMetadataInstance>();
+            if (item.InheritedItemDefinitions != null)
+            {
+                inheritedItemDefinitions = new List<ProjectItemDefinitionInstance>(item.InheritedItemDefinitions.Count);
 
-                    IEnumerable<ProjectMetadataInstance> projectMetadataInstances = item.DirectMetadata.Select(directMetadatum => new ProjectMetadataInstance(directMetadatum));
-                    directMetadata.ImportProperties(projectMetadataInstances);
+                foreach (ProjectItemDefinition inheritedItemDefinition in item.InheritedItemDefinitions)
+                {
+                    // All item definitions in this list should be present in the collection of item definitions
+                    // on the project we are cloning.
+                    inheritedItemDefinitions.Add(_itemDefinitions[inheritedItemDefinition.ItemType]);
                 }
+            }
 
-                // For externally constructed ProjectItem, fall back to the publicly available EvaluateInclude
-                var evaluatedIncludeEscaped = ((IItem)item).EvaluatedIncludeEscaped;
-                evaluatedIncludeEscaped ??= item.EvaluatedInclude;
-                var evaluatedIncludeBeforeWildcardExpansionEscaped = item.EvaluatedIncludeBeforeWildcardExpansionEscaped;
-                evaluatedIncludeBeforeWildcardExpansionEscaped ??= item.EvaluatedInclude;
-
-                ProjectItemInstance instance = new ProjectItemInstance(this, item.ItemType, evaluatedIncludeEscaped, evaluatedIncludeBeforeWildcardExpansionEscaped, directMetadata, inheritedItemDefinitions, item.Xml.ContainingProject.EscapedFullPath);
+            CopyOnWritePropertyDictionary<ProjectMetadataInstance> directMetadata = null;
 
-                _items.Add(instance);
+            if (item.DirectMetadata != null)
+            {
+                directMetadata = new CopyOnWritePropertyDictionary<ProjectMetadataInstance>();
 
-                projectItemToInstanceMap?.Add(item, instance);
+                IEnumerable<ProjectMetadataInstance> projectMetadataInstances = item.DirectMetadata.Select(directMetadatum => new ProjectMetadataInstance(directMetadatum));
+                directMetadata.ImportProperties(projectMetadataInstances);
             }
 
-            return projectItemToInstanceMap;
+            // For externally constructed ProjectItem, fall back to the publicly available EvaluateInclude
+            var evaluatedIncludeEscaped = ((IItem)item).EvaluatedIncludeEscaped;
+            evaluatedIncludeEscaped ??= item.EvaluatedInclude;
+            var evaluatedIncludeBeforeWildcardExpansionEscaped = item.EvaluatedIncludeBeforeWildcardExpansionEscaped;
+            evaluatedIncludeBeforeWildcardExpansionEscaped ??= item.EvaluatedInclude;
+
+            ProjectItemInstance instance = new ProjectItemInstance(this, item.ItemType, evaluatedIncludeEscaped, evaluatedIncludeBeforeWildcardExpansionEscaped, directMetadata, inheritedItemDefinitions, item.Xml.ContainingProject.EscapedFullPath);
+            return instance;
         }
 
         /// <summary>
@@ -2979,7 +3153,7 @@ private Dictionary<ProjectItem, ProjectItemInstance> CreateItemsSnapshot(ICollec
         /// </summary>
         private void CreateItemDefinitionsSnapshot(IDictionary<string, ProjectItemDefinition> itemDefinitions)
         {
-            _itemDefinitions = new RetrievableEntryHashSet<ProjectItemDefinitionInstance>(MSBuildNameIgnoreCaseComparer.Default);
+            _itemDefinitions = new RetrievableEntryHashSet<ProjectItemDefinitionInstance>(itemDefinitions.Count, MSBuildNameIgnoreCaseComparer.Default);
 
             foreach (ProjectItemDefinition definition in itemDefinitions.Values)
             {
@@ -2996,9 +3170,7 @@ private void CreatePropertiesSnapshot(ICollection<ProjectProperty> properties, b
 
             foreach (ProjectProperty property in properties)
             {
-                // Allow reserved property names, since this is how they are added to the project instance.
-                // The caller has prevented users setting them themselves.
-                ProjectPropertyInstance instance = ProjectPropertyInstance.Create(property.Name, ((IProperty)property).EvaluatedValueEscaped, true /* MAY be reserved name */, isImmutable, property.IsEnvironmentProperty);
+                ProjectPropertyInstance instance = InstantiateProjectPropertyInstance(property, isImmutable);
                 _properties.Set(instance);
             }
         }
diff --git a/src/Build/Instance/TaskFactories/AssemblyTaskFactory.cs b/src/Build/Instance/TaskFactories/AssemblyTaskFactory.cs
index 616a99de8f3..a830764d053 100644
--- a/src/Build/Instance/TaskFactories/AssemblyTaskFactory.cs
+++ b/src/Build/Instance/TaskFactories/AssemblyTaskFactory.cs
@@ -332,9 +332,7 @@ internal ITask CreateTaskInstance(ElementLocation taskLocation, TaskLoggingConte
                 VerifyThrowIdentityParametersValid(taskIdentityParameters, taskLocation, _taskName, "MSBuildRuntime", "MSBuildArchitecture");
 
                 mergedParameters = MergeTaskFactoryParameterSets(_factoryIdentityParameters, taskIdentityParameters);
-                useTaskFactory = !NativeMethodsShared.IsMono
-                                 && (_taskHostFactoryExplicitlyRequested
-                                     || !TaskHostParametersMatchCurrentProcess(mergedParameters));
+                useTaskFactory = _taskHostFactoryExplicitlyRequested || !TaskHostParametersMatchCurrentProcess(mergedParameters);
             }
             else
             {
diff --git a/src/Build/Logging/BinaryLogger/BinaryLogRecordKind.cs b/src/Build/Logging/BinaryLogger/BinaryLogRecordKind.cs
index 9fe1638fd3a..22921695dea 100644
--- a/src/Build/Logging/BinaryLogger/BinaryLogRecordKind.cs
+++ b/src/Build/Logging/BinaryLogger/BinaryLogRecordKind.cs
@@ -5,7 +5,12 @@
 
 namespace Microsoft.Build.Logging
 {
-    internal enum BinaryLogRecordKind
+    /// <summary>
+    /// Indicates the type of record stored in the binary log.
+    /// There is a record type for each type of build event and there
+    /// are also few meta-data record types (e.g. string data, lookup data, EOF).
+    /// </summary>
+    public enum BinaryLogRecordKind
     {
         EndOfFile = 0,
         BuildStarted,
diff --git a/src/Build/Logging/BinaryLogger/BinaryLogReplayEventSource.cs b/src/Build/Logging/BinaryLogger/BinaryLogReplayEventSource.cs
index a19a06c2d37..abf9e4e80c9 100644
--- a/src/Build/Logging/BinaryLogger/BinaryLogReplayEventSource.cs
+++ b/src/Build/Logging/BinaryLogger/BinaryLogReplayEventSource.cs
@@ -11,13 +11,63 @@
 
 namespace Microsoft.Build.Logging
 {
+    /// <summary>
+    /// Interface for replaying a binary log file (*.binlog)
+    /// </summary>
+    internal interface IBinaryLogReplaySource :
+        IEventSource,
+        IBuildEventArgsReaderNotifications
+    {
+        /// <summary>
+        /// Event raised when non-textual log record is read.
+        /// This means all event args and key-value pairs.
+        /// Strings and Embedded files are not included.
+        /// </summary>
+        event Action<BinaryLogRecordKind, Stream>? RawLogRecordReceived;
+
+        /// <summary>
+        /// Enables initialization (e.g. subscription to events) - that is deferred until Replay is triggered.
+        /// At this point all other possible subscribers should be already subscribed -
+        ///  so it can be determined if raw events or structured events should be replayed.
+        /// </summary>
+        /// <param name="onRawReadingPossible"></param>
+        /// <param name="onStructuredReadingOnly"></param>
+        void DeferredInitialize(
+            Action onRawReadingPossible,
+            Action onStructuredReadingOnly);
+
+        /// <summary>
+        /// File format version of the binary log file.
+        /// </summary>
+        int FileFormatVersion { get; }
+
+        /// <summary>
+        /// The minimum reader version for the binary log file.
+        /// </summary>
+        int MinimumReaderVersion { get; }
+
+        /// <summary>
+        /// Raised when the log reader encounters a project import archive (embedded content) in the stream.
+        /// The subscriber must read the exactly given length of binary data from the stream - otherwise exception is raised.
+        /// If no subscriber is attached, the data is skipped.
+        /// </summary>
+        event Action<EmbeddedContentEventArgs> EmbeddedContentRead;
+    }
+
     /// <summary>
     /// Provides a method to read a binary log file (*.binlog) and replay all stored BuildEventArgs
     /// by implementing IEventSource and raising corresponding events.
     /// </summary>
     /// <remarks>The class is public so that we can call it from MSBuild.exe when replaying a log file.</remarks>
-    public sealed class BinaryLogReplayEventSource : EventArgsDispatcher
+    public sealed class BinaryLogReplayEventSource : EventArgsDispatcher,
+        IBinaryLogReplaySource
     {
+        private int? _fileFormatVersion;
+        private int? _minimumReaderVersion;
+
+        public int FileFormatVersion => _fileFormatVersion ?? throw new InvalidOperationException(ResourceUtilities.GetResourceString("Binlog_Source_VersionUninitialized"));
+        public int MinimumReaderVersion => _minimumReaderVersion ?? throw new InvalidOperationException(ResourceUtilities.GetResourceString("Binlog_Source_VersionUninitialized"));
+
         /// Touches the <see cref="ItemGroupLoggingHelper"/> static constructor
         /// to ensure it initializes <see cref="TaskParameterEventArgs.MessageGetter"/>
         /// and <see cref="TaskParameterEventArgs.DictionaryFactory"/>
@@ -27,9 +77,12 @@ static BinaryLogReplayEventSource()
         }
 
         /// <summary>
-        /// Raised once <see cref="BuildEventArgsReader"/> is created during replaying
+        /// Unknown build events or unknown parts of known build events will be ignored if this is set to true.
         /// </summary>
-        public event Action<IBuildEventArgsReaderNotifications>? NotificationsSourceCreated;
+        public bool AllowForwardCompatibility { private get; init; }
+
+        /// <inheritdoc cref="IBuildEventArgsReaderNotifications.RecoverableReadError"/>
+        public event Action<BinaryLogReaderErrorEventArgs>? RecoverableReadError;
 
         /// <summary>
         /// Read the provided binary log file and raise corresponding events for each BuildEventArgs
@@ -40,6 +93,17 @@ public void Replay(string sourceFilePath)
             Replay(sourceFilePath, CancellationToken.None);
         }
 
+        /// <summary>
+        /// Read the provided binary log file opened as a stream and raise corresponding events for each BuildEventArgs
+        /// </summary>
+        /// <param name="sourceFileStream">Stream over the binlog content.</param>
+        /// <param name="cancellationToken"></param>
+        public void Replay(Stream sourceFileStream, CancellationToken cancellationToken)
+        {
+            using var binaryReader = OpenReader(sourceFileStream);
+            Replay(binaryReader, cancellationToken);
+        }
+
         /// <summary>
         /// Creates a <see cref="BinaryReader"/> for the provided binary log file.
         /// Performs decompression and buffering in the optimal way.
@@ -53,21 +117,78 @@ public static BinaryReader OpenReader(string sourceFilePath)
             try
             {
                 stream = new FileStream(sourceFilePath, FileMode.Open, FileAccess.Read, FileShare.Read);
-                var gzipStream = new GZipStream(stream, CompressionMode.Decompress, leaveOpen: false);
-
-                // wrapping the GZipStream in a buffered stream significantly improves performance
-                // and the max throughput is reached with a 32K buffer. See details here:
-                // https://github.com/dotnet/runtime/issues/39233#issuecomment-745598847
-                var bufferedStream = new BufferedStream(gzipStream, 32768);
-                return new BinaryReader(bufferedStream);
+                return OpenReader(stream);
             }
-            catch(Exception)
+            catch (Exception)
             {
                 stream?.Dispose();
                 throw;
             }
         }
 
+        /// <summary>
+        /// Creates a <see cref="BinaryReader"/> for the provided binary log file.
+        /// Performs decompression and buffering in the optimal way.
+        /// Caller is responsible for disposing the returned reader.
+        /// </summary>
+        /// <param name="sourceFileStream">Stream over the binlog file</param>
+        /// <returns>BinaryReader of the given binlog file.</returns>
+        public static BinaryReader OpenReader(Stream sourceFileStream)
+        {
+            var gzipStream = new GZipStream(sourceFileStream, CompressionMode.Decompress, leaveOpen: false);
+
+            // wrapping the GZipStream in a buffered stream significantly improves performance
+            // and the max throughput is reached with a 32K buffer. See details here:
+            // https://github.com/dotnet/runtime/issues/39233#issuecomment-745598847
+            var bufferedStream = new BufferedStream(gzipStream, 32768);
+            return new BinaryReader(bufferedStream);
+        }
+
+        /// <summary>
+        /// Creates a <see cref="BuildEventArgsReader"/> for the provided binary reader over binary log file.
+        /// Caller is responsible for disposing the returned reader.
+        /// </summary>
+        /// <param name="binaryReader"></param>
+        /// <param name="closeInput">Indicates whether the passed BinaryReader should be closed on disposing.</param>
+        /// <param name="allowForwardCompatibility">Unknown build events or unknown parts of known build events will be ignored if this is set to true.</param>
+        /// <returns>BuildEventArgsReader over the given binlog file binary reader.</returns>
+        public static BuildEventArgsReader OpenBuildEventsReader(
+            BinaryReader binaryReader,
+            bool closeInput,
+            bool allowForwardCompatibility = false)
+        {
+            int fileFormatVersion = binaryReader.ReadInt32();
+            // Is this the new log format that contains the minimum reader version?
+            int minimumReaderVersion = fileFormatVersion >= BinaryLogger.ForwardCompatibilityMinimalVersion
+                ? binaryReader.ReadInt32()
+                : fileFormatVersion;
+
+            // the log file is written using a newer version of file format
+            // that we don't know how to read
+            if (fileFormatVersion > BinaryLogger.FileFormatVersion &&
+                (!allowForwardCompatibility || minimumReaderVersion > BinaryLogger.FileFormatVersion))
+            {
+                var text = ResourceUtilities.FormatResourceStringStripCodeAndKeyword("UnsupportedLogFileFormat", fileFormatVersion, minimumReaderVersion, BinaryLogger.FileFormatVersion);
+                throw new NotSupportedException(text);
+            }
+
+            return new BuildEventArgsReader(binaryReader, fileFormatVersion)
+            {
+                CloseInput = closeInput,
+                MinimumReaderVersion = minimumReaderVersion
+            };
+        }
+
+        /// <summary>
+        /// Creates a <see cref="BinaryReader"/> for the provided binary log file.
+        /// Performs decompression and buffering in the optimal way.
+        /// Caller is responsible for disposing the returned reader.
+        /// </summary>
+        /// <param name="sourceFilePath"></param>
+        /// <returns>BinaryReader of the given binlog file.</returns>
+        public static BuildEventArgsReader OpenBuildEventsReader(string sourceFilePath)
+            => OpenBuildEventsReader(OpenReader(sourceFilePath), true);
+
         /// <summary>
         /// Read the provided binary log file and raise corresponding events for each BuildEventArgs
         /// </summary>
@@ -75,8 +196,8 @@ public static BinaryReader OpenReader(string sourceFilePath)
         /// <param name="cancellationToken">A <see cref="CancellationToken"/> indicating the replay should stop as soon as possible.</param>
         public void Replay(string sourceFilePath, CancellationToken cancellationToken)
         {
-            using var binaryReader = OpenReader(sourceFilePath);
-            Replay(binaryReader, cancellationToken);
+            using var eventsReader = OpenBuildEventsReader(sourceFilePath);
+            Replay(eventsReader, cancellationToken);
         }
 
         /// <summary>
@@ -85,24 +206,137 @@ public void Replay(string sourceFilePath, CancellationToken cancellationToken)
         /// <param name="binaryReader">The binary log content binary reader - caller is responsible for disposing.</param>
         /// <param name="cancellationToken">A <see cref="CancellationToken"/> indicating the replay should stop as soon as possible.</param>
         public void Replay(BinaryReader binaryReader, CancellationToken cancellationToken)
+            => Replay(binaryReader, false, cancellationToken);
+
+        /// <summary>
+        /// Read the provided binary log file and raise corresponding events for each BuildEventArgs
+        /// </summary>
+        /// <param name="binaryReader">The binary log content binary reader - caller is responsible for disposing, unless <paramref name="closeInput"/> is set to true.</param>
+        /// <param name="closeInput">Indicates whether the passed BinaryReader should be closed on disposing.</param>
+        /// <param name="cancellationToken">A <see cref="CancellationToken"/> indicating the replay should stop as soon as possible.</param>
+        public void Replay(BinaryReader binaryReader, bool closeInput, CancellationToken cancellationToken)
         {
-            int fileFormatVersion = binaryReader.ReadInt32();
+            using var reader = OpenBuildEventsReader(binaryReader, closeInput, AllowForwardCompatibility);
+            Replay(reader, cancellationToken);
+        }
 
-            // the log file is written using a newer version of file format
-            // that we don't know how to read
-            if (fileFormatVersion > BinaryLogger.FileFormatVersion)
+        /// <summary>
+        /// Read the provided binary log file and raise corresponding events for each BuildEventArgs
+        /// </summary>
+        /// <param name="reader">The build events reader - caller is responsible for disposing.</param>
+        /// <param name="cancellationToken">A <see cref="CancellationToken"/> indicating the replay should stop as soon as possible.</param>
+        public void Replay(BuildEventArgsReader reader, CancellationToken cancellationToken)
+        {
+            _fileFormatVersion = reader.FileFormatVersion;
+            _minimumReaderVersion = reader.MinimumReaderVersion;
+            bool supportsForwardCompatibility = reader.FileFormatVersion >= BinaryLogger.ForwardCompatibilityMinimalVersion;
+
+            // Allow any possible deferred subscriptions to be registered
+            if (HasStructuredEventsSubscribers || !supportsForwardCompatibility)
             {
-                var text = ResourceUtilities.FormatResourceStringStripCodeAndKeyword("UnsupportedLogFileFormat", fileFormatVersion, BinaryLogger.FileFormatVersion);
-                throw new NotSupportedException(text);
+                _onStructuredReadingOnly?.Invoke();
+            }
+            else
+            {
+                _onRawReadingPossible?.Invoke();
             }
 
-            using var reader = new BuildEventArgsReader(binaryReader, fileFormatVersion);
-            NotificationsSourceCreated?.Invoke(reader);
+            reader.EmbeddedContentRead += _embeddedContentRead;
+            reader.ArchiveFileEncountered += _archiveFileEncountered;
+            reader.StringReadDone += _stringReadDone;
 
-            while (!cancellationToken.IsCancellationRequested && reader.Read() is { } instance)
+            if (HasStructuredEventsSubscribers || !supportsForwardCompatibility)
             {
-                Dispatch(instance);
+                if (this._rawLogRecordReceived != null)
+                {
+                    throw new NotSupportedException(
+                        ResourceUtilities.GetResourceString("Binlog_Source_MultiSubscribeError"));
+                }
+
+                // Forward compatible reading makes sense only for structured events reading.
+                reader.SkipUnknownEvents = supportsForwardCompatibility && AllowForwardCompatibility;
+                reader.SkipUnknownEventParts = supportsForwardCompatibility && AllowForwardCompatibility;
+                reader.RecoverableReadError += RecoverableReadError;
+
+                while (!cancellationToken.IsCancellationRequested && reader.Read() is { } instance)
+                {
+                    Dispatch(instance);
+                }
             }
+            else
+            {
+                if (this._rawLogRecordReceived == null &&
+                    this._embeddedContentRead == null &&
+                    this._stringReadDone == null &&
+                    this._archiveFileEncountered == null)
+                {
+                    throw new NotSupportedException(
+                        ResourceUtilities.GetResourceString("Binlog_Source_MissingSubscribeError"));
+                }
+
+                while (!cancellationToken.IsCancellationRequested && reader.ReadRaw() is { } instance &&
+                       instance.RecordKind != BinaryLogRecordKind.EndOfFile)
+                {
+                    _rawLogRecordReceived?.Invoke(instance.RecordKind, instance.Stream);
+                }
+            }
+
+            // Unsubscribe from events for a case if the reader is reused (upon cancellation).
+            reader.EmbeddedContentRead -= _embeddedContentRead;
+            reader.ArchiveFileEncountered -= _archiveFileEncountered;
+            reader.StringReadDone -= _stringReadDone;
+            reader.RecoverableReadError -= RecoverableReadError;
+        }
+
+        // Following members are explicit implementations of the IBinaryLogReplaySource interface
+        //  to avoid exposing them publicly.
+        // We want an interface so that BinaryLogger can fine tune its initialization logic
+        //  in case the given event source is the replay source. On the other hand we don't want
+        //  to expose these members publicly because they are not intended to be used by the consumers.
+
+        private Action? _onRawReadingPossible;
+        private Action? _onStructuredReadingOnly;
+        /// <inheritdoc cref="IBinaryLogReplaySource.DeferredInitialize"/>
+        void IBinaryLogReplaySource.DeferredInitialize(
+            Action onRawReadingPossible,
+            Action onStructuredReadingOnly)
+        {
+            this._onRawReadingPossible += onRawReadingPossible;
+            this._onStructuredReadingOnly += onStructuredReadingOnly;
+        }
+
+        private Action<EmbeddedContentEventArgs>? _embeddedContentRead;
+        /// <inheritdoc cref="IBinaryLogReplaySource.EmbeddedContentRead"/>
+        event Action<EmbeddedContentEventArgs>? IBinaryLogReplaySource.EmbeddedContentRead
+        {
+            // Explicitly implemented event has to declare explicit add/remove accessors
+            //  https://stackoverflow.com/a/2268472/2308106
+            add => _embeddedContentRead += value;
+            remove => _embeddedContentRead -= value;
+        }
+
+        private Action<StringReadEventArgs>? _stringReadDone;
+        /// <inheritdoc cref="IBuildEventArgsReaderNotifications.StringReadDone"/>
+        event Action<StringReadEventArgs>? IBuildEventArgsReaderNotifications.StringReadDone
+        {
+            add => _stringReadDone += value;
+            remove => _stringReadDone -= value;
+        }
+
+        private Action<ArchiveFileEventArgs>? _archiveFileEncountered;
+        /// <inheritdoc cref="IBuildEventArgsReaderNotifications.ArchiveFileEncountered"/>
+        event Action<ArchiveFileEventArgs>? IBuildEventArgsReaderNotifications.ArchiveFileEncountered
+        {
+            add => _archiveFileEncountered += value;
+            remove => _archiveFileEncountered -= value;
+        }
+
+        private Action<BinaryLogRecordKind, Stream>? _rawLogRecordReceived;
+        /// <inheritdoc cref="IBinaryLogReplaySource.RawLogRecordReceived"/>
+        event Action<BinaryLogRecordKind, Stream>? IBinaryLogReplaySource.RawLogRecordReceived
+        {
+            add => _rawLogRecordReceived += value;
+            remove => _rawLogRecordReceived -= value;
         }
     }
 }
diff --git a/src/Build/Logging/BinaryLogger/BinaryLogger.cs b/src/Build/Logging/BinaryLogger/BinaryLogger.cs
index a935708e681..a9e6f75705f 100644
--- a/src/Build/Logging/BinaryLogger/BinaryLogger.cs
+++ b/src/Build/Logging/BinaryLogger/BinaryLogger.cs
@@ -63,7 +63,24 @@ public sealed class BinaryLogger : ILogger
         //   - AssemblyLoadBuildEventArgs
         // version 17:
         //   - Added extended data for types implementing IExtendedBuildEventArgs
-        internal const int FileFormatVersion = 17;
+        // version 18:
+        //   - Making ProjectStartedEventArgs, ProjectEvaluationFinishedEventArgs, AssemblyLoadBuildEventArgs equal
+        //     between de/serialization roundtrips.
+        //   - Adding serialized events lengths - to support forward compatible reading
+
+        // This should be never changed.
+        // The minimum version of the binary log reader that can read log of above version.
+        internal const int ForwardCompatibilityMinimalVersion = 18;
+
+        // The current version of the binary log representation.
+        // Changes with each update of the binary log format.
+        internal const int FileFormatVersion = 18;
+
+        // The minimum version of the binary log reader that can read log of above version.
+        // This should be changed only when the binary log format is changed in a way that would prevent it from being
+        // read by older readers. (changing of the individual BuildEventArgs or adding new is fine - as reader can
+        // skip them if they are not known to it. Example of change requiring the increment would be the introduction of strings deduplication)
+        internal const int MinimumReaderVersion = 18;
 
         private Stream stream;
         private BinaryWriter binaryWriter;
@@ -92,7 +109,7 @@ public enum ProjectImportsCollectionMode
             /// <summary>
             /// Create an external .ProjectImports.zip archive for the project files.
             /// </summary>
-            ZipFile
+            ZipFile,
         }
 
         /// <summary>
@@ -115,7 +132,7 @@ public enum ProjectImportsCollectionMode
         public string Parameters { get; set; }
 
         /// <summary>
-        /// Initializes the logger by subscribing to events of the specified event source.
+        /// Initializes the logger by subscribing to events of the specified event source and embedded content source.
         /// </summary>
         public void Initialize(IEventSource eventSource)
         {
@@ -130,7 +147,8 @@ public void Initialize(IEventSource eventSource)
             Traits.Instance.EscapeHatches.LogProjectImports = true;
             bool logPropertiesAndItemsAfterEvaluation = Traits.Instance.EscapeHatches.LogPropertiesAndItemsAfterEvaluation ?? true;
 
-            ProcessParameters();
+            ProcessParameters(out bool omitInitialInfo);
+            var replayEventSource = eventSource as IBinaryLogReplaySource;
 
             try
             {
@@ -152,7 +170,7 @@ public void Initialize(IEventSource eventSource)
 
                 stream = new FileStream(FilePath, FileMode.Create);
 
-                if (CollectProjectImports != ProjectImportsCollectionMode.None)
+                if (CollectProjectImports != ProjectImportsCollectionMode.None && replayEventSource == null)
                 {
                     projectImportsCollector = new ProjectImportsCollector(FilePath, CollectProjectImports == ProjectImportsCollectionMode.ZipFile);
                 }
@@ -189,13 +207,57 @@ public void Initialize(IEventSource eventSource)
                 eventArgsWriter.EmbedFile += EventArgsWriter_EmbedFile;
             }
 
-            binaryWriter.Write(FileFormatVersion);
-
-            LogInitialInfo();
+            if (replayEventSource != null)
+            {
+                if (CollectProjectImports == ProjectImportsCollectionMode.Embed)
+                {
+                    replayEventSource.EmbeddedContentRead += args =>
+                        eventArgsWriter.WriteBlob(args.ContentKind, args.ContentStream);
+                }
+                else if (CollectProjectImports == ProjectImportsCollectionMode.ZipFile)
+                {
+                    replayEventSource.EmbeddedContentRead += args =>
+                        ProjectImportsCollector.FlushBlobToFile(FilePath, args.ContentStream);
+                }
 
-            eventSource.AnyEventRaised += EventSource_AnyEventRaised;
+                // If raw events are provided - let's try to use the advantage.
+                // But other subscribers can later on subscribe to structured events -
+                //  for this reason we do only subscribe delayed.
+                replayEventSource.DeferredInitialize(
+                    // For raw events we cannot write the initial info - as we cannot write
+                    //  at the same time as raw events are being written - this would break the deduplicated strings store.
+                    // But we need to write the version info - but since we read/write raw - let's not change the version info.
+                    () =>
+                    {
+                        binaryWriter.Write(replayEventSource.FileFormatVersion);
+                        binaryWriter.Write(replayEventSource.MinimumReaderVersion);
+                        replayEventSource.RawLogRecordReceived += RawEvents_LogDataSliceReceived;
+                        // Replay separated strings here as well (and do not deduplicate! It would skew string indexes)
+                        replayEventSource.StringReadDone += strArg => eventArgsWriter.WriteStringRecord(strArg.StringToBeUsed);
+                    },
+                    SubscribeToStructuredEvents);
+            }
+            else
+            {
+                SubscribeToStructuredEvents();
+            }
 
             KnownTelemetry.LoggingConfigurationTelemetry.BinaryLogger = true;
+
+            void SubscribeToStructuredEvents()
+            {
+                // Write the version info - the latest version is written only for structured events replaying
+                //  as raw events do not change structure - hence the version is the same as the one they were written with.
+                binaryWriter.Write(FileFormatVersion);
+                binaryWriter.Write(MinimumReaderVersion);
+
+                if (!omitInitialInfo)
+                {
+                    LogInitialInfo();
+                }
+
+                eventSource.AnyEventRaised += EventSource_AnyEventRaised;
+            }
         }
 
         private void EventArgsWriter_EmbedFile(string filePath)
@@ -236,26 +298,11 @@ public void Shutdown()
 
                 if (CollectProjectImports == ProjectImportsCollectionMode.Embed)
                 {
-                    var archiveFilePath = projectImportsCollector.ArchiveFilePath;
+                    projectImportsCollector.ProcessResult(
+                        streamToEmbed => eventArgsWriter.WriteBlob(BinaryLogRecordKind.ProjectImportArchive, streamToEmbed),
+                        LogMessage);
 
-                    // It is possible that the archive couldn't be created for some reason.
-                    // Only embed it if it actually exists.
-                    if (FileSystems.Default.FileExists(archiveFilePath))
-                    {
-                        using (FileStream fileStream = File.OpenRead(archiveFilePath))
-                        {
-                            if (fileStream.Length > int.MaxValue)
-                            {
-                                LogMessage("Imported files archive exceeded 2GB limit and it's not embedded.");
-                            }
-                            else
-                            {
-                                eventArgsWriter.WriteBlob(BinaryLogRecordKind.ProjectImportArchive, fileStream);
-                            }
-                        }
-
-                        File.Delete(archiveFilePath);
-                    }
+                    projectImportsCollector.DeleteArchive();
                 }
 
                 projectImportsCollector = null;
@@ -272,6 +319,11 @@ public void Shutdown()
             }
         }
 
+        private void RawEvents_LogDataSliceReceived(BinaryLogRecordKind recordKind, Stream stream)
+        {
+            eventArgsWriter.WriteBlob(recordKind, stream);
+        }
+
         private void EventSource_AnyEventRaised(object sender, BuildEventArgs e)
         {
             Write(e);
@@ -304,7 +356,7 @@ private void CollectImports(BuildEventArgs e)
             {
                 projectImportsCollector.AddFile(projectArgs.ProjectFile);
             }
-            else if (e is MetaprojectGeneratedEventArgs metaprojectArgs)
+            else if (e is MetaprojectGeneratedEventArgs { metaprojectXml: { } } metaprojectArgs)
             {
                 projectImportsCollector.AddFileFromMemory(metaprojectArgs.ProjectFile, metaprojectArgs.metaprojectXml);
             }
@@ -319,13 +371,14 @@ private void CollectImports(BuildEventArgs e)
         /// </summary>
         /// <exception cref="LoggerException">
         /// </exception>
-        private void ProcessParameters()
+        private void ProcessParameters(out bool omitInitialInfo)
         {
             if (Parameters == null)
             {
                 throw new LoggerException(ResourceUtilities.FormatResourceStringStripCodeAndKeyword("InvalidBinaryLoggerParameters", ""));
             }
 
+            omitInitialInfo = false;
             var parameters = Parameters.Split(MSBuildConstants.SemicolonChar, StringSplitOptions.RemoveEmptyEntries);
             foreach (var parameter in parameters)
             {
@@ -341,6 +394,10 @@ private void ProcessParameters()
                 {
                     CollectProjectImports = ProjectImportsCollectionMode.ZipFile;
                 }
+                else if (string.Equals(parameter, "OmitInitialInfo", StringComparison.OrdinalIgnoreCase))
+                {
+                    omitInitialInfo = true;
+                }
                 else if (parameter.EndsWith(".binlog", StringComparison.OrdinalIgnoreCase))
                 {
                     FilePath = parameter;
diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsDispatcher.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsDispatcher.cs
index 4a50a3d8e8b..db24d791ed2 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsDispatcher.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsDispatcher.cs
@@ -85,6 +85,22 @@ public class EventArgsDispatcher : IEventSource
         /// </summary>
         public event BuildMessageEventHandler MessageRaised;
 
+        internal bool HasStructuredEventsSubscribers =>
+            AnyEventRaised != null ||
+            StatusEventRaised != null ||
+            CustomEventRaised != null ||
+            BuildStarted != null ||
+            BuildFinished != null ||
+            ProjectStarted != null ||
+            ProjectFinished != null ||
+            TargetStarted != null ||
+            TargetFinished != null ||
+            TaskStarted != null ||
+            TaskFinished != null ||
+            ErrorRaised != null ||
+            WarningRaised != null ||
+            MessageRaised != null;
+
         /// <summary>
         /// Raise one of the events that is appropriate for the type of the BuildEventArgs
         /// </summary>
diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
index 38e391565de..2c49c17c8a7 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
@@ -2,10 +2,14 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Buffers;
 using System.Collections;
 using System.Collections.Generic;
 using System.IO;
+using System.IO.Compression;
+using System.Linq;
 using System.Reflection;
+using System.Runtime.CompilerServices;
 using System.Text;
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.Collections;
@@ -20,9 +24,13 @@ namespace Microsoft.Build.Logging
     /// </summary>
     public class BuildEventArgsReader : IBuildEventArgsReaderNotifications, IDisposable
     {
-        private readonly BinaryReader binaryReader;
-        private readonly int fileFormatVersion;
-        private long recordNumber = 0;
+        private readonly BinaryReader _binaryReader;
+        // This is used to verify that events deserialization is not overreading expected size.
+        private readonly TransparentReadStream _readStream;
+        private readonly int _fileFormatVersion;
+        private long _recordNumber = 0;
+        private bool _skipUnknownEvents;
+        private bool _skipUnknownEventParts;
 
         /// <summary>
         /// A list of string records we've encountered so far. If it's a small string, it will be the string directly.
@@ -59,33 +67,140 @@ public class BuildEventArgsReader : IBuildEventArgsReaderNotifications, IDisposa
         /// <param name="fileFormatVersion">The file format version of the log file being read.</param>
         public BuildEventArgsReader(BinaryReader binaryReader, int fileFormatVersion)
         {
-            this.binaryReader = binaryReader;
-            this.fileFormatVersion = fileFormatVersion;
+            this._readStream = TransparentReadStream.EnsureTransparentReadStream(binaryReader.BaseStream);
+            // make sure the reader we're going to use wraps the transparent stream wrapper
+            this._binaryReader = binaryReader.BaseStream == _readStream
+                ? binaryReader
+                : new BinaryReader(_readStream);
+            this._fileFormatVersion = fileFormatVersion;
         }
 
-        public void Dispose()
+        /// <summary>
+        /// Directs whether the passed <see cref="BinaryReader"/> should be closed when this instance is disposed.
+        /// Defaults to "false".
+        /// </summary>
+        public bool CloseInput { private get; set; } = false;
+
+        /// <summary>
+        /// Indicates whether unknown BuildEvents should be silently skipped. Read returns null otherwise.
+        /// Parameter is supported only if the file format supports forward compatible reading (version is 18 or higher).
+        /// </summary>
+        public bool SkipUnknownEvents
         {
-            stringStorage.Dispose();
+            set
+            {
+                if (value)
+                {
+                    EnsureForwardCompatibleReadingSupported();
+                }
+
+                _skipUnknownEvents = value;
+            }
         }
 
         /// <summary>
-        /// An event that allows the subscriber to be notified when a string is read from the binary log.
-        /// Subscriber may adjust the string by setting <see cref="StringReadEventArgs.StringToBeUsed"/> property.
-        /// The passed event arg can be reused and should not be stored.
+        /// Indicates whether unread parts of BuildEvents (probably added in newer format of particular BuildEvent)should be silently skipped. Exception thrown otherwise.
+        /// Parameter is supported only if the file format supports forward compatible reading (version is 18 or higher).
         /// </summary>
-        public event Action<StringReadEventArgs>? StringReadDone;
+        public bool SkipUnknownEventParts
+        {
+            set
+            {
+                if (value)
+                {
+                    EnsureForwardCompatibleReadingSupported();
+                }
+                _skipUnknownEventParts = value;
+            }
+        }
+
+        private void EnsureForwardCompatibleReadingSupported()
+        {
+            if (_fileFormatVersion < BinaryLogger.ForwardCompatibilityMinimalVersion)
+            {
+                throw new InvalidOperationException(
+                    ResourceUtilities.FormatResourceStringStripCodeAndKeyword("Binlog_FwdCompatUnsupported",
+                        _fileFormatVersion));
+            }
+        }
 
         /// <summary>
-        /// An event that allows the caller to be notified when a string is encountered in the binary log.
-        /// BinaryReader passed in ctor is at the beginning of the string at this point.
+        /// Receives recoverable errors during reading. See <see cref="IBuildEventArgsReaderNotifications.RecoverableReadError"/> for documentation on arguments.
+        /// Applicable mainly when <see cref="SkipUnknownEvents"/> or <see cref="SkipUnknownEventParts"/> is set to true."/>
         /// </summary>
-        public event Action? StringEncountered;
+        public event Action<BinaryLogReaderErrorEventArgs>? RecoverableReadError;
+
+        public void Dispose()
+        {
+            stringStorage.Dispose();
+            if (CloseInput)
+            {
+                _binaryReader.Dispose();
+            }
+        }
+
+        /// <inheritdoc cref="IBuildEventArgsReaderNotifications.StringReadDone"/>
+        public event Action<StringReadEventArgs>? StringReadDone;
+
+        internal int FileFormatVersion => _fileFormatVersion;
+        internal int MinimumReaderVersion { get; set; } = BinaryLogger.ForwardCompatibilityMinimalVersion;
+
+        /// <inheritdoc cref="IBinaryLogReplaySource.EmbeddedContentRead"/>
+        internal event Action<EmbeddedContentEventArgs>? EmbeddedContentRead;
+
+        /// <inheritdoc cref="IBuildEventArgsReaderNotifications.ArchiveFileEncountered"/>
+        public event Action<ArchiveFileEventArgs>? ArchiveFileEncountered;
+
+        private SubStream? _lastSubStream;
+
+        internal readonly record struct RawRecord(BinaryLogRecordKind RecordKind, Stream Stream);
 
         /// <summary>
-        /// Raised when the log reader encounters a binary blob embedded in the stream.
-        /// The arguments include the blob kind and the byte buffer with the contents.
+        /// Reads the next serialized log record from the <see cref="BinaryReader"/>.
         /// </summary>
-        internal event Action<BinaryLogRecordKind, byte[]>? OnBlobRead;
+        /// <returns>ArraySegment containing serialized BuildEventArgs record</returns>
+        internal RawRecord ReadRaw()
+        {
+            // This method is internal and condition is checked once before calling in loop,
+            //  so avoiding it here on each call.
+            // But keeping it for documentation purposes - in case someone will try to call it and debug issues.
+            ////if (fileFormatVersion < 18)
+            ////{
+            ////    throw new InvalidOperationException(
+            ////                           $"Raw data reading is not supported for file format version {fileFormatVersion} (needs >=18).");
+            ////}
+
+            if (_lastSubStream?.IsAtEnd == false)
+            {
+                _lastSubStream.ReadToEnd();
+            }
+
+            BinaryLogRecordKind recordKind = PreprocessRecordsTillNextEvent(IsTextualDataRecord);
+
+            if (recordKind == BinaryLogRecordKind.EndOfFile)
+            {
+                return new(recordKind, Stream.Null);
+            }
+
+            int serializedEventLength = ReadInt32();
+            Stream stream = _binaryReader.BaseStream.Slice(serializedEventLength);
+
+            _lastSubStream = stream as SubStream;
+
+            _recordNumber += 1;
+
+            return new(recordKind, stream);
+        }
+
+        [MethodImpl(MethodImplOptions.AggressiveInlining)]
+        private void CheckErrorsSubscribed()
+        {
+            if ((_skipUnknownEvents || _skipUnknownEventParts) && RecoverableReadError == null)
+            {
+                throw new InvalidOperationException(
+                    ResourceUtilities.GetResourceString("Binlog_MissingRecoverableErrorSubscribeError"));
+            }
+        }
 
         /// <summary>
         /// Reads the next log record from the <see cref="BinaryReader"/>.
@@ -96,11 +211,131 @@ public void Dispose()
         /// </returns>
         public BuildEventArgs? Read()
         {
+            CheckErrorsSubscribed();
+            BuildEventArgs? result = null;
+            while (result == null)
+            {
+                BinaryLogRecordKind recordKind = PreprocessRecordsTillNextEvent(IsAuxiliaryRecord);
+
+                if (recordKind == BinaryLogRecordKind.EndOfFile)
+                {
+                    return null;
+                }
+
+                int serializedEventLength = 0;
+                if (_fileFormatVersion >= BinaryLogger.ForwardCompatibilityMinimalVersion)
+                {
+                    serializedEventLength = ReadInt32(); // record length
+                    _readStream.BytesCountAllowedToRead = serializedEventLength;
+                }
+
+                bool hasError = false;
+                try
+                {
+                    result = ReadBuildEventArgs(recordKind);
+                }
+                catch (Exception e) when (
+                    // We throw this on mismatches in metadata (name-value list, strings index).
+                    e is InvalidDataException ||
+                    // Thrown when BinaryReader is unable to deserialize binary data into expected type.
+                    e is FormatException ||
+                    // Thrown when we attempt to read more bytes than what is in the next event chunk.
+                    (e is EndOfStreamException && _readStream.BytesCountAllowedToReadRemaining <= 0))
+                {
+                    hasError = true;
+
+                    string ErrorFactory() =>
+                        ResourceUtilities.FormatResourceStringStripCodeAndKeyword("Binlog_ReaderMismatchedRead",
+                            _recordNumber, serializedEventLength, e.GetType(), e.Message) + (_skipUnknownEvents
+                            ? " " + ResourceUtilities.GetResourceString("Binlog_ReaderSkippingRecord")
+                            : string.Empty);
+
+                    HandleError(ErrorFactory, _skipUnknownEvents, ReaderErrorType.UnknownFormatOfEventData, recordKind, e);
+                }
+
+                if (result == null && !hasError)
+                {
+                    string ErrorFactory() =>
+                        ResourceUtilities.FormatResourceStringStripCodeAndKeyword("Binlog_ReaderUnknownType",
+                            _recordNumber, serializedEventLength, recordKind) + (_skipUnknownEvents
+                            ? " " + ResourceUtilities.GetResourceString("Binlog_ReaderSkippingRecord")
+                            : string.Empty);
+
+                    HandleError(ErrorFactory, _skipUnknownEvents, ReaderErrorType.UnknownEventType, recordKind);
+                }
+
+                if (_readStream.BytesCountAllowedToReadRemaining > 0)
+                {
+                    string ErrorFactory() => ResourceUtilities.FormatResourceStringStripCodeAndKeyword(
+                        "Binlog_ReaderUnderRead", _recordNumber, serializedEventLength,
+                        serializedEventLength - _readStream.BytesCountAllowedToReadRemaining);
+
+                    HandleError(ErrorFactory, _skipUnknownEventParts, ReaderErrorType.UnknownEventData, recordKind);
+                }
+
+                _recordNumber += 1;
+            }
+
+            return result;
+
+            void HandleError(FormatErrorMessage msgFactory, bool noThrow, ReaderErrorType readerErrorType, BinaryLogRecordKind recordKind, Exception? innerException = null)
+            {
+                if (noThrow)
+                {
+                    RecoverableReadError?.Invoke(new BinaryLogReaderErrorEventArgs(readerErrorType, recordKind, msgFactory));
+                    SkipBytes(_readStream.BytesCountAllowedToReadRemaining);
+                }
+                else
+                {
+                    throw new InvalidDataException(msgFactory(), innerException);
+                }
+            }
+        }
+
+        private BuildEventArgs? ReadBuildEventArgs(BinaryLogRecordKind recordKind)
+            => recordKind switch
+            {
+                BinaryLogRecordKind.BuildStarted => ReadBuildStartedEventArgs(),
+                BinaryLogRecordKind.BuildFinished => ReadBuildFinishedEventArgs(),
+                BinaryLogRecordKind.ProjectStarted => ReadProjectStartedEventArgs(),
+                BinaryLogRecordKind.ProjectFinished => ReadProjectFinishedEventArgs(),
+                BinaryLogRecordKind.TargetStarted => ReadTargetStartedEventArgs(),
+                BinaryLogRecordKind.TargetFinished => ReadTargetFinishedEventArgs(),
+                BinaryLogRecordKind.TaskStarted => ReadTaskStartedEventArgs(),
+                BinaryLogRecordKind.TaskFinished => ReadTaskFinishedEventArgs(),
+                BinaryLogRecordKind.Error => ReadBuildErrorEventArgs(),
+                BinaryLogRecordKind.Warning => ReadBuildWarningEventArgs(),
+                BinaryLogRecordKind.Message => ReadBuildMessageEventArgs(),
+                BinaryLogRecordKind.CriticalBuildMessage => ReadCriticalBuildMessageEventArgs(),
+                BinaryLogRecordKind.TaskCommandLine => ReadTaskCommandLineEventArgs(),
+                BinaryLogRecordKind.TaskParameter => ReadTaskParameterEventArgs(),
+                BinaryLogRecordKind.ProjectEvaluationStarted => ReadProjectEvaluationStartedEventArgs(),
+                BinaryLogRecordKind.ProjectEvaluationFinished => ReadProjectEvaluationFinishedEventArgs(),
+                BinaryLogRecordKind.ProjectImported => ReadProjectImportedEventArgs(),
+                BinaryLogRecordKind.TargetSkipped => ReadTargetSkippedEventArgs(),
+                BinaryLogRecordKind.EnvironmentVariableRead => ReadEnvironmentVariableReadEventArgs(),
+                BinaryLogRecordKind.ResponseFileUsed => ReadResponseFileUsedEventArgs(),
+                BinaryLogRecordKind.PropertyReassignment => ReadPropertyReassignmentEventArgs(),
+                BinaryLogRecordKind.UninitializedPropertyRead => ReadUninitializedPropertyReadEventArgs(),
+                BinaryLogRecordKind.PropertyInitialValueSet => ReadPropertyInitialValueSetEventArgs(),
+                BinaryLogRecordKind.AssemblyLoad => ReadAssemblyLoadEventArgs(),
+                _ => null
+            };
+
+        private void SkipBytes(int count)
+        {
+            _binaryReader.BaseStream.Seek(count, SeekOrigin.Current);
+        }
+
+        private BinaryLogRecordKind PreprocessRecordsTillNextEvent(Func<BinaryLogRecordKind, bool> isPreprocessRecord)
+        {
+            _readStream.BytesCountAllowedToRead = null;
+
             BinaryLogRecordKind recordKind = (BinaryLogRecordKind)ReadInt32();
 
             // Skip over data storage records since they don't result in a BuildEventArgs.
             // just ingest their data and continue.
-            while (IsAuxiliaryRecord(recordKind))
+            while (isPreprocessRecord(recordKind))
             {
                 // these are ordered by commonality
                 if (recordKind == BinaryLogRecordKind.String)
@@ -110,99 +345,19 @@ public void Dispose()
                 else if (recordKind == BinaryLogRecordKind.NameValueList)
                 {
                     ReadNameValueList();
+                    _readStream.BytesCountAllowedToRead = null;
                 }
                 else if (recordKind == BinaryLogRecordKind.ProjectImportArchive)
                 {
-                    ReadBlob(recordKind);
+                    ReadEmbeddedContent(recordKind);
                 }
 
-                recordNumber += 1;
+                _recordNumber += 1;
 
                 recordKind = (BinaryLogRecordKind)ReadInt32();
             }
 
-            BuildEventArgs? result = null;
-            switch (recordKind)
-            {
-                case BinaryLogRecordKind.EndOfFile:
-                    break;
-                case BinaryLogRecordKind.BuildStarted:
-                    result = ReadBuildStartedEventArgs();
-                    break;
-                case BinaryLogRecordKind.BuildFinished:
-                    result = ReadBuildFinishedEventArgs();
-                    break;
-                case BinaryLogRecordKind.ProjectStarted:
-                    result = ReadProjectStartedEventArgs();
-                    break;
-                case BinaryLogRecordKind.ProjectFinished:
-                    result = ReadProjectFinishedEventArgs();
-                    break;
-                case BinaryLogRecordKind.TargetStarted:
-                    result = ReadTargetStartedEventArgs();
-                    break;
-                case BinaryLogRecordKind.TargetFinished:
-                    result = ReadTargetFinishedEventArgs();
-                    break;
-                case BinaryLogRecordKind.TaskStarted:
-                    result = ReadTaskStartedEventArgs();
-                    break;
-                case BinaryLogRecordKind.TaskFinished:
-                    result = ReadTaskFinishedEventArgs();
-                    break;
-                case BinaryLogRecordKind.Error:
-                    result = ReadBuildErrorEventArgs();
-                    break;
-                case BinaryLogRecordKind.Warning:
-                    result = ReadBuildWarningEventArgs();
-                    break;
-                case BinaryLogRecordKind.Message:
-                    result = ReadBuildMessageEventArgs();
-                    break;
-                case BinaryLogRecordKind.CriticalBuildMessage:
-                    result = ReadCriticalBuildMessageEventArgs();
-                    break;
-                case BinaryLogRecordKind.TaskCommandLine:
-                    result = ReadTaskCommandLineEventArgs();
-                    break;
-                case BinaryLogRecordKind.TaskParameter:
-                    result = ReadTaskParameterEventArgs();
-                    break;
-                case BinaryLogRecordKind.ProjectEvaluationStarted:
-                    result = ReadProjectEvaluationStartedEventArgs();
-                    break;
-                case BinaryLogRecordKind.ProjectEvaluationFinished:
-                    result = ReadProjectEvaluationFinishedEventArgs();
-                    break;
-                case BinaryLogRecordKind.ProjectImported:
-                    result = ReadProjectImportedEventArgs();
-                    break;
-                case BinaryLogRecordKind.TargetSkipped:
-                    result = ReadTargetSkippedEventArgs();
-                    break;
-                case BinaryLogRecordKind.EnvironmentVariableRead:
-                    result = ReadEnvironmentVariableReadEventArgs();
-                    break;
-                case BinaryLogRecordKind.ResponseFileUsed:
-                    result = ReadResponseFileUsedEventArgs();
-                    break;
-                case BinaryLogRecordKind.PropertyReassignment:
-                    result = ReadPropertyReassignmentEventArgs();
-                    break;
-                case BinaryLogRecordKind.UninitializedPropertyRead:
-                    result = ReadUninitializedPropertyReadEventArgs();
-                    break;
-                case BinaryLogRecordKind.PropertyInitialValueSet:
-                    result = ReadPropertyInitialValueSetEventArgs();
-                    break;
-                case BinaryLogRecordKind.AssemblyLoad:
-                    result = ReadAssemblyLoadEventArgs();
-                    break;
-            }
-
-            recordNumber += 1;
-
-            return result;
+            return recordKind;
         }
 
         private static bool IsAuxiliaryRecord(BinaryLogRecordKind recordKind)
@@ -212,15 +367,94 @@ private static bool IsAuxiliaryRecord(BinaryLogRecordKind recordKind)
                 || recordKind == BinaryLogRecordKind.ProjectImportArchive;
         }
 
-        private void ReadBlob(BinaryLogRecordKind kind)
+        private static bool IsTextualDataRecord(BinaryLogRecordKind recordKind)
+        {
+            return recordKind == BinaryLogRecordKind.String
+                   || recordKind == BinaryLogRecordKind.ProjectImportArchive;
+        }
+
+        private void ReadEmbeddedContent(BinaryLogRecordKind recordKind)
         {
             int length = ReadInt32();
-            byte[] bytes = binaryReader.ReadBytes(length);
-            OnBlobRead?.Invoke(kind, bytes);
+
+            if (ArchiveFileEncountered != null)
+            {
+                // We could create ZipArchive over the target stream, and write to that directly,
+                //  however, binlog format needs to know stream size upfront - which is unknown,
+                //  so we would need to write the size after - and that would require the target stream to be seekable (which it's not)
+                ProjectImportsCollector? projectImportsCollector = null;
+
+                if (EmbeddedContentRead != null)
+                {
+                    projectImportsCollector =
+                        new ProjectImportsCollector(Path.GetRandomFileName(), false, runOnBackground: false);
+                }
+
+                Stream embeddedStream = _binaryReader.BaseStream.Slice(length);
+
+                // We are intentionally not grace handling corrupt embedded stream
+
+                using var zipArchive = new ZipArchive(embeddedStream, ZipArchiveMode.Read);
+
+                foreach (var entry in zipArchive.Entries/*.OrderBy(e => e.LastWriteTime)*/)
+                {
+                    var file = ArchiveStream.From(entry);
+                    ArchiveFileEventArgs archiveFileEventArgs = new(file);
+                    // ArchiveFileEventArgs is not IDisposable as we do not want to clutter exposed API
+                    using var cleanupScope = new CleanupScope(archiveFileEventArgs.Dispose);
+                    ArchiveFileEncountered(archiveFileEventArgs);
+
+                    if (projectImportsCollector != null)
+                    {
+                        var resultFile = archiveFileEventArgs.ArchiveData;
+
+                        if (resultFile is ArchiveStream archiveStream)
+                        {
+                            projectImportsCollector.AddFileFromMemory(
+                                archiveStream.FullPath,
+                                archiveStream.ContentReader.BaseStream,
+                                makePathAbsolute: false,
+                                entryCreationStamp: entry.LastWriteTime);
+                        }
+                        else
+                        {
+                            projectImportsCollector.AddFileFromMemory(
+                                resultFile.FullPath,
+                                resultFile.ToArchiveFile().Content,
+                                makePathAbsolute: false,
+                                entryCreationStamp: entry.LastWriteTime);
+                        }
+                    }
+                }
+
+                // Once embedded files are replayed one by one - we can send the resulting stream to subscriber
+                if (EmbeddedContentRead != null)
+                {
+                    projectImportsCollector!.ProcessResult(
+                        streamToEmbed => EmbeddedContentRead(new EmbeddedContentEventArgs(recordKind, streamToEmbed)),
+                        error => throw new InvalidDataException(error));
+                    projectImportsCollector.DeleteArchive();
+                }
+            }
+            else if (EmbeddedContentRead != null)
+            {
+                EmbeddedContentRead(new EmbeddedContentEventArgs(
+                    recordKind,
+                    _binaryReader.BaseStream.Slice(length)));
+            }
+            else
+            {
+                SkipBytes(length);
+            }
         }
 
         private void ReadNameValueList()
         {
+            if (_fileFormatVersion >= BinaryLogger.ForwardCompatibilityMinimalVersion)
+            {
+                _readStream.BytesCountAllowedToRead = ReadInt32();
+            }
+
             int count = ReadInt32();
 
             var list = new (int, int)[count];
@@ -262,7 +496,7 @@ private IDictionary<string, string> GetNameValueList(int id)
 
             // this should never happen for valid binlogs
             throw new InvalidDataException(
-                $"NameValueList record number {recordNumber} is invalid: index {id} is not within {stringRecords.Count}.");
+                $"NameValueList record number {_recordNumber} is invalid: index {id} is not within {nameValueListRecords.Count}.");
         }
 
         private readonly StringReadEventArgs stringReadEventArgs = new StringReadEventArgs(string.Empty);
@@ -280,7 +514,7 @@ private BuildEventArgs ReadProjectImportedEventArgs()
             bool importIgnored = false;
 
             // the ImportIgnored field was introduced in file format version 3
-            if (fileFormatVersion > 2)
+            if (_fileFormatVersion > 2)
             {
                 importIgnored = ReadBoolean();
             }
@@ -317,7 +551,7 @@ private BuildEventArgs ReadTargetSkippedEventArgs()
             bool originallySucceeded = false;
             TargetSkipReason skipReason = TargetSkipReason.None;
             BuildEventContext? originalBuildEventContext = null;
-            if (fileFormatVersion >= 13)
+            if (_fileFormatVersion >= 13)
             {
                 condition = ReadOptionalString();
                 evaluatedCondition = ReadOptionalString();
@@ -333,10 +567,10 @@ private BuildEventArgs ReadTargetSkippedEventArgs()
 
             var buildReason = (TargetBuiltReason)ReadInt32();
 
-            if (fileFormatVersion >= 14)
+            if (_fileFormatVersion >= 14)
             {
                 skipReason = (TargetSkipReason)ReadInt32();
-                originalBuildEventContext = binaryReader.ReadOptionalBuildEventContext();
+                originalBuildEventContext = _binaryReader.ReadOptionalBuildEventContext();
             }
 
             var e = new TargetSkippedEventArgs(
@@ -417,10 +651,15 @@ private BuildEventArgs ReadProjectEvaluationFinishedEventArgs()
             };
             SetCommonFields(e, fields);
 
-            if (fileFormatVersion >= 12)
+            if (_fileFormatVersion >= 12)
             {
                 IEnumerable? globalProperties = null;
-                if (ReadBoolean())
+                // In newer versions, we store the global properties always, as it handles
+                //  null and empty within WriteProperties already.
+                // This saves a single boolean, but mainly doesn't hide the difference between null and empty
+                //  during write->read roundtrip.
+                if (_fileFormatVersion >= BinaryLogger.ForwardCompatibilityMinimalVersion ||
+                    ReadBoolean())
                 {
                     globalProperties = ReadStringDictionary();
                 }
@@ -434,7 +673,7 @@ private BuildEventArgs ReadProjectEvaluationFinishedEventArgs()
             }
 
             // ProfilerResult was introduced in version 5
-            if (fileFormatVersion > 4)
+            if (_fileFormatVersion > 4)
             {
                 var hasProfileData = ReadBoolean();
                 if (hasProfileData)
@@ -472,9 +711,11 @@ private BuildEventArgs ReadProjectStartedEventArgs()
 
             IDictionary<string, string>? globalProperties = null;
 
-            if (fileFormatVersion > 6)
+            if (_fileFormatVersion > 6)
             {
-                if (ReadBoolean())
+                // See ReadProjectEvaluationFinishedEventArgs for details on why we always store global properties in newer version.
+                if (_fileFormatVersion >= BinaryLogger.ForwardCompatibilityMinimalVersion ||
+                    ReadBoolean())
                 {
                     globalProperties = ReadStringDictionary();
                 }
@@ -522,7 +763,7 @@ private BuildEventArgs ReadTargetStartedEventArgs()
             var targetFile = ReadOptionalString();
             var parentTarget = ReadOptionalString();
             // BuildReason was introduced in version 4
-            var buildReason = fileFormatVersion > 3 ? (TargetBuiltReason)ReadInt32() : TargetBuiltReason.None;
+            var buildReason = _fileFormatVersion > 3 ? (TargetBuiltReason)ReadInt32() : TargetBuiltReason.None;
 
             var e = new TargetStartedEventArgs(
                 fields.Message,
@@ -950,6 +1191,7 @@ private AssemblyLoadBuildEventArgs ReadAssemblyLoadEventArgs()
                 mvid,
                 appDomainName);
             SetCommonFields(e, fields);
+            e.ProjectFile = fields.ProjectFile;
 
             return e;
         }
@@ -1078,7 +1320,7 @@ private BuildEventArgsFields ReadBuildEventArgsFields(bool readImportance = fals
                 result.Arguments = arguments;
             }
 
-            if ((fileFormatVersion < 13 && readImportance) || (fileFormatVersion >= 13 && (flags & BuildEventArgsFieldFlags.Importance) != 0))
+            if ((_fileFormatVersion < 13 && readImportance) || (_fileFormatVersion >= 13 && (flags & BuildEventArgsFieldFlags.Importance) != 0))
             {
                 result.Importance = (MessageImportance)ReadInt32();
             }
@@ -1137,7 +1379,7 @@ private BuildEventContext ReadBuildEventContext()
 
             // evaluationId was introduced in format version 2
             int evaluationId = BuildEventContext.InvalidEvaluationId;
-            if (fileFormatVersion > 1)
+            if (_fileFormatVersion > 1)
             {
                 evaluationId = ReadInt32();
             }
@@ -1155,7 +1397,7 @@ private BuildEventContext ReadBuildEventContext()
 
         private IDictionary<string, string>? ReadStringDictionary()
         {
-            if (fileFormatVersion < 10)
+            if (_fileFormatVersion < 10)
             {
                 return ReadLegacyStringDictionary();
             }
@@ -1207,7 +1449,7 @@ private ITaskItem ReadTaskItem()
             // so we only have to write the name once, and then the count of items
             // with that name. When reading a legacy binlog we need to read the
             // old style flat list where the name is duplicated for each item.
-            if (fileFormatVersion < 10)
+            if (_fileFormatVersion < 10)
             {
                 int count = ReadInt32();
                 if (count == 0)
@@ -1223,7 +1465,7 @@ private ITaskItem ReadTaskItem()
                     list[i] = new DictionaryEntry(itemName, item);
                 }
             }
-            else if (fileFormatVersion < 12)
+            else if (_fileFormatVersion < 12)
             {
                 int count = ReadInt32();
                 if (count == 0)
@@ -1302,8 +1544,7 @@ private ITaskItem ReadTaskItem()
 
         private string ReadString()
         {
-            this.StringEncountered?.Invoke();
-            string text = binaryReader.ReadString();
+            string text = _binaryReader.ReadString();
             if (this.StringReadDone != null)
             {
                 stringReadEventArgs.Reuse(text);
@@ -1315,7 +1556,7 @@ private string ReadString()
 
         private string? ReadOptionalString()
         {
-            if (fileFormatVersion < 10)
+            if (_fileFormatVersion < 10)
             {
                 if (ReadBoolean())
                 {
@@ -1332,7 +1573,7 @@ private string ReadString()
 
         private string? ReadDeduplicatedString()
         {
-            if (fileFormatVersion < 10)
+            if (_fileFormatVersion < 10)
             {
                 return ReadString();
             }
@@ -1364,7 +1605,7 @@ private string ReadString()
 
             // this should never happen for valid binlogs
             throw new InvalidDataException(
-                $"String record number {recordNumber} is invalid: string index {index} is not within {stringRecords.Count}.");
+                $"String record number {_recordNumber} is invalid: string index {index} is not within {stringRecords.Count}.");
         }
 
         private int ReadInt32()
@@ -1372,32 +1613,32 @@ private int ReadInt32()
             // on some platforms (net5) this method was added to BinaryReader
             // but it's not available on others. Call our own extension method
             // explicitly to avoid ambiguity.
-            return BinaryReaderExtensions.Read7BitEncodedInt(binaryReader);
+            return BinaryReaderExtensions.Read7BitEncodedInt(_binaryReader);
         }
 
         private long ReadInt64()
         {
-            return binaryReader.ReadInt64();
+            return _binaryReader.ReadInt64();
         }
 
         private bool ReadBoolean()
         {
-            return binaryReader.ReadBoolean();
+            return _binaryReader.ReadBoolean();
         }
 
         private Guid ReadGuid()
         {
-            return new Guid(binaryReader.ReadBytes(16 /*sizeof(Guid) - to avoid unsafe context, Guid will never change in size */));
+            return new Guid(_binaryReader.ReadBytes(16 /*sizeof(Guid) - to avoid unsafe context, Guid will never change in size */));
         }
 
         private DateTime ReadDateTime()
         {
-            return new DateTime(binaryReader.ReadInt64(), (DateTimeKind)ReadInt32());
+            return new DateTime(_binaryReader.ReadInt64(), (DateTimeKind)ReadInt32());
         }
 
         private TimeSpan ReadTimeSpan()
         {
-            return new TimeSpan(binaryReader.ReadInt64());
+            return new TimeSpan(_binaryReader.ReadInt64());
         }
 
         private ProfiledLocation ReadProfiledLocation()
@@ -1426,7 +1667,7 @@ private EvaluationLocation ReadEvaluationLocation()
             }
 
             // Id and parent Id were introduced in version 6
-            if (fileFormatVersion > 5)
+            if (_fileFormatVersion > 5)
             {
                 var id = ReadInt64();
                 long? parentId = null;
diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
index 0a21182e83c..8a8311e1fd6 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Buffers;
 using System.Collections;
 using System.Collections.Generic;
 using System.Globalization;
@@ -35,6 +36,13 @@ internal class BuildEventArgsWriter
         /// </summary>
         private readonly MemoryStream currentRecordStream;
 
+        /// <summary>
+        /// For NameValueList we need to prefix the storage size
+        ///  (distinct from values count due to variable int encoding)
+        /// So using same technique as with 'currentRecordStream'.
+        /// </summary>
+        private readonly MemoryStream nameValueListStream;
+
         /// <summary>
         /// The binary writer around the originalStream.
         /// </summary>
@@ -121,6 +129,8 @@ public BuildEventArgsWriter(BinaryWriter binaryWriter)
             // starting point to avoid reallocations in the common case
             this.currentRecordStream = new MemoryStream(65536);
 
+            this.nameValueListStream = new MemoryStream(256);
+
             this.originalBinaryWriter = binaryWriter;
             this.currentRecordWriter = new BinaryWriter(currentRecordStream);
 
@@ -132,11 +142,20 @@ public BuildEventArgsWriter(BinaryWriter binaryWriter)
         /// </summary>
         public void Write(BuildEventArgs e)
         {
-            WriteCore(e);
+            // reset the temp stream (in case last usage forgot to do so).
+            this.currentRecordStream.SetLength(0);
+            BinaryLogRecordKind eventKind = WriteCore(e);
 
-            // flush the current record and clear the MemoryStream to prepare for next use
-            currentRecordStream.WriteTo(originalStream);
-            currentRecordStream.SetLength(0);
+            FlushRecordToFinalStream(eventKind, currentRecordStream);
+        }
+
+        private void FlushRecordToFinalStream(BinaryLogRecordKind recordKind, MemoryStream recordStream)
+        {
+            using var redirectionScope = RedirectWritesToOriginalWriter();
+            Write(recordKind);
+            Write((int)recordStream.Length);
+            recordStream.WriteTo(originalStream);
+            recordStream.SetLength(0);
         }
 
         /*
@@ -178,23 +197,23 @@ Base types and inheritance ("EventArgs" suffix omitted):
                     ExtendedCustomBuild
         */
 
-        private void WriteCore(BuildEventArgs e)
+        private BinaryLogRecordKind WriteCore(BuildEventArgs e)
         {
             switch (e)
             {
-                case BuildMessageEventArgs buildMessage: Write(buildMessage); break;
-                case TaskStartedEventArgs taskStarted: Write(taskStarted); break;
-                case TaskFinishedEventArgs taskFinished: Write(taskFinished); break;
-                case TargetStartedEventArgs targetStarted: Write(targetStarted); break;
-                case TargetFinishedEventArgs targetFinished: Write(targetFinished); break;
-                case BuildErrorEventArgs buildError: Write(buildError); break;
-                case BuildWarningEventArgs buildWarning: Write(buildWarning); break;
-                case ProjectStartedEventArgs projectStarted: Write(projectStarted); break;
-                case ProjectFinishedEventArgs projectFinished: Write(projectFinished); break;
-                case BuildStartedEventArgs buildStarted: Write(buildStarted); break;
-                case BuildFinishedEventArgs buildFinished: Write(buildFinished); break;
-                case ProjectEvaluationStartedEventArgs projectEvaluationStarted: Write(projectEvaluationStarted); break;
-                case ProjectEvaluationFinishedEventArgs projectEvaluationFinished: Write(projectEvaluationFinished); break;
+                case BuildMessageEventArgs buildMessage: return Write(buildMessage);
+                case TaskStartedEventArgs taskStarted: return Write(taskStarted);
+                case TaskFinishedEventArgs taskFinished: return Write(taskFinished);
+                case TargetStartedEventArgs targetStarted: return Write(targetStarted);
+                case TargetFinishedEventArgs targetFinished: return Write(targetFinished);
+                case BuildErrorEventArgs buildError: return Write(buildError);
+                case BuildWarningEventArgs buildWarning: return Write(buildWarning);
+                case ProjectStartedEventArgs projectStarted: return Write(projectStarted);
+                case ProjectFinishedEventArgs projectFinished: return Write(projectFinished);
+                case BuildStartedEventArgs buildStarted: return Write(buildStarted);
+                case BuildFinishedEventArgs buildFinished: return Write(buildFinished);
+                case ProjectEvaluationStartedEventArgs projectEvaluationStarted: return Write(projectEvaluationStarted);
+                case ProjectEvaluationFinishedEventArgs projectEvaluationFinished: return Write(projectEvaluationFinished);
                 default:
                     // convert all unrecognized objects to message
                     // and just preserve the message
@@ -224,25 +243,13 @@ private void WriteCore(BuildEventArgs e)
                             e.Timestamp);
                     }
                     buildMessageEventArgs.BuildEventContext = e.BuildEventContext ?? BuildEventContext.Invalid;
-                    Write(buildMessageEventArgs);
-                    break;
+                    return Write(buildMessageEventArgs);
             }
         }
 
-        public void WriteBlob(BinaryLogRecordKind kind, byte[] bytes)
-        {
-            // write the blob directly to the underlying writer,
-            // bypassing the memory stream
-            using var redirection = RedirectWritesToOriginalWriter();
-
-            Write(kind);
-            Write(bytes.Length);
-            Write(bytes);
-        }
-
         public void WriteBlob(BinaryLogRecordKind kind, Stream stream)
         {
-            if (stream.Length > int.MaxValue)
+            if (stream.CanSeek && stream.Length > int.MaxValue)
             {
                 throw new ArgumentOutOfRangeException(nameof(stream));
             }
@@ -253,7 +260,7 @@ public void WriteBlob(BinaryLogRecordKind kind, Stream stream)
 
             Write(kind);
             Write((int)stream.Length);
-            Write(stream);
+            WriteToOriginalStream(stream);
         }
 
         /// <summary>
@@ -263,28 +270,17 @@ public void WriteBlob(BinaryLogRecordKind kind, Stream stream)
         /// </summary>
         private IDisposable RedirectWritesToOriginalWriter()
         {
-            binaryWriter = originalBinaryWriter;
-            return new RedirectionScope(this);
+            return RedirectWritesToDifferentWriter(originalBinaryWriter, currentRecordWriter);
         }
 
-        private struct RedirectionScope : IDisposable
+        private IDisposable RedirectWritesToDifferentWriter(BinaryWriter inScopeWriter, BinaryWriter afterScopeWriter)
         {
-            private readonly BuildEventArgsWriter _writer;
-
-            public RedirectionScope(BuildEventArgsWriter buildEventArgsWriter)
-            {
-                _writer = buildEventArgsWriter;
-            }
-
-            public void Dispose()
-            {
-                _writer.binaryWriter = _writer.currentRecordWriter;
-            }
+            binaryWriter = inScopeWriter;
+            return new CleanupScope(() => binaryWriter = afterScopeWriter);
         }
 
-        private void Write(BuildStartedEventArgs e)
+        private BinaryLogRecordKind Write(BuildStartedEventArgs e)
         {
-            Write(BinaryLogRecordKind.BuildStarted);
             WriteBuildEventArgsFields(e);
             if (Traits.LogAllEnvironmentVariables)
             {
@@ -294,38 +290,31 @@ private void Write(BuildStartedEventArgs e)
             {
                 Write(e.BuildEnvironment?.Where(kvp => EnvironmentUtilities.IsWellKnownEnvironmentDerivedProperty(kvp.Key)));
             }
+
+            return BinaryLogRecordKind.BuildStarted;
         }
 
-        private void Write(BuildFinishedEventArgs e)
+        private BinaryLogRecordKind Write(BuildFinishedEventArgs e)
         {
-            Write(BinaryLogRecordKind.BuildFinished);
             WriteBuildEventArgsFields(e);
             Write(e.Succeeded);
+
+            return BinaryLogRecordKind.BuildFinished;
         }
 
-        private void Write(ProjectEvaluationStartedEventArgs e)
+        private BinaryLogRecordKind Write(ProjectEvaluationStartedEventArgs e)
         {
-            Write(BinaryLogRecordKind.ProjectEvaluationStarted);
             WriteBuildEventArgsFields(e, writeMessage: false);
             WriteDeduplicatedString(e.ProjectFile);
+            return BinaryLogRecordKind.ProjectEvaluationStarted;
         }
 
-        private void Write(ProjectEvaluationFinishedEventArgs e)
+        private BinaryLogRecordKind Write(ProjectEvaluationFinishedEventArgs e)
         {
-            Write(BinaryLogRecordKind.ProjectEvaluationFinished);
-
             WriteBuildEventArgsFields(e, writeMessage: false);
             WriteDeduplicatedString(e.ProjectFile);
 
-            if (e.GlobalProperties == null)
-            {
-                Write(false);
-            }
-            else
-            {
-                Write(true);
-                WriteProperties(e.GlobalProperties);
-            }
+            WriteProperties(e.GlobalProperties);
 
             WriteProperties(e.Properties);
 
@@ -343,11 +332,12 @@ private void Write(ProjectEvaluationFinishedEventArgs e)
                     Write(item.Value);
                 }
             }
+
+            return BinaryLogRecordKind.ProjectEvaluationFinished;
         }
 
-        private void Write(ProjectStartedEventArgs e)
+        private BinaryLogRecordKind Write(ProjectStartedEventArgs e)
         {
-            Write(BinaryLogRecordKind.ProjectStarted);
             WriteBuildEventArgsFields(e, writeMessage: false);
 
             if (e.ParentProjectBuildEventContext == null)
@@ -366,75 +356,73 @@ private void Write(ProjectStartedEventArgs e)
             WriteDeduplicatedString(e.TargetNames);
             WriteDeduplicatedString(e.ToolsVersion);
 
-            if (e.GlobalProperties == null)
-            {
-                Write(false);
-            }
-            else
-            {
-                Write(true);
-                Write(e.GlobalProperties);
-            }
+            Write(e.GlobalProperties);
 
             WriteProperties(e.Properties);
 
             WriteProjectItems(e.Items);
+
+            return BinaryLogRecordKind.ProjectStarted;
         }
 
-        private void Write(ProjectFinishedEventArgs e)
+        private BinaryLogRecordKind Write(ProjectFinishedEventArgs e)
         {
-            Write(BinaryLogRecordKind.ProjectFinished);
             WriteBuildEventArgsFields(e, writeMessage: false);
             WriteDeduplicatedString(e.ProjectFile);
             Write(e.Succeeded);
+
+            return BinaryLogRecordKind.ProjectFinished;
         }
 
-        private void Write(TargetStartedEventArgs e)
+        private BinaryLogRecordKind Write(TargetStartedEventArgs e)
         {
-            Write(BinaryLogRecordKind.TargetStarted);
             WriteBuildEventArgsFields(e, writeMessage: false);
             WriteDeduplicatedString(e.TargetName);
             WriteDeduplicatedString(e.ProjectFile);
             WriteDeduplicatedString(e.TargetFile);
             WriteDeduplicatedString(e.ParentTarget);
             Write((int)e.BuildReason);
+
+            return BinaryLogRecordKind.TargetStarted;
         }
 
-        private void Write(TargetFinishedEventArgs e)
+        private BinaryLogRecordKind Write(TargetFinishedEventArgs e)
         {
-            Write(BinaryLogRecordKind.TargetFinished);
             WriteBuildEventArgsFields(e, writeMessage: false);
             Write(e.Succeeded);
             WriteDeduplicatedString(e.ProjectFile);
             WriteDeduplicatedString(e.TargetFile);
             WriteDeduplicatedString(e.TargetName);
             WriteTaskItemList(e.TargetOutputs);
+
+            return BinaryLogRecordKind.TargetFinished;
         }
 
-        private void Write(TaskStartedEventArgs e)
+        private BinaryLogRecordKind Write(TaskStartedEventArgs e)
         {
-            Write(BinaryLogRecordKind.TaskStarted);
             WriteBuildEventArgsFields(e, writeMessage: false, writeLineAndColumn: true);
             Write(e.LineNumber);
             Write(e.ColumnNumber);
             WriteDeduplicatedString(e.TaskName);
             WriteDeduplicatedString(e.ProjectFile);
             WriteDeduplicatedString(e.TaskFile);
+
+            return BinaryLogRecordKind.TaskStarted;
         }
 
-        private void Write(TaskFinishedEventArgs e)
+        private BinaryLogRecordKind Write(TaskFinishedEventArgs e)
         {
-            Write(BinaryLogRecordKind.TaskFinished);
             WriteBuildEventArgsFields(e, writeMessage: false);
             Write(e.Succeeded);
             WriteDeduplicatedString(e.TaskName);
             WriteDeduplicatedString(e.ProjectFile);
             WriteDeduplicatedString(e.TaskFile);
+
+            return BinaryLogRecordKind.TaskFinished;
         }
 
-        private void Write(BuildErrorEventArgs e)
+        private BinaryLogRecordKind Write(BuildErrorEventArgs e)
         {
-            Write(BinaryLogRecordKind.Error);
             WriteBuildEventArgsFields(e);
             WriteArguments(e.RawArguments);
             WriteDeduplicatedString(e.Subcategory);
@@ -445,11 +433,12 @@ private void Write(BuildErrorEventArgs e)
             Write(e.ColumnNumber);
             Write(e.EndLineNumber);
             Write(e.EndColumnNumber);
+
+            return BinaryLogRecordKind.Error;
         }
 
-        private void Write(BuildWarningEventArgs e)
+        private BinaryLogRecordKind Write(BuildWarningEventArgs e)
         {
-            Write(BinaryLogRecordKind.Warning);
             WriteBuildEventArgsFields(e);
             WriteArguments(e.RawArguments);
             WriteDeduplicatedString(e.Subcategory);
@@ -460,42 +449,42 @@ private void Write(BuildWarningEventArgs e)
             Write(e.ColumnNumber);
             Write(e.EndLineNumber);
             Write(e.EndColumnNumber);
+
+            return BinaryLogRecordKind.Warning;
         }
 
-        private void Write(BuildMessageEventArgs e)
+        private BinaryLogRecordKind Write(BuildMessageEventArgs e)
         {
             switch (e)
             {
-                case ResponseFileUsedEventArgs responseFileUsed: Write(responseFileUsed); break;
-                case TaskParameterEventArgs taskParameter: Write(taskParameter); break;
-                case ProjectImportedEventArgs projectImported: Write(projectImported); break;
-                case TargetSkippedEventArgs targetSkipped: Write(targetSkipped); break;
-                case PropertyReassignmentEventArgs propertyReassignment: Write(propertyReassignment); break;
-                case TaskCommandLineEventArgs taskCommandLine: Write(taskCommandLine); break;
-                case UninitializedPropertyReadEventArgs uninitializedPropertyRead: Write(uninitializedPropertyRead); break;
-                case EnvironmentVariableReadEventArgs environmentVariableRead: Write(environmentVariableRead); break;
-                case PropertyInitialValueSetEventArgs propertyInitialValueSet: Write(propertyInitialValueSet); break;
-                case CriticalBuildMessageEventArgs criticalBuildMessage: Write(criticalBuildMessage); break;
-                case AssemblyLoadBuildEventArgs assemblyLoad: Write(assemblyLoad); break;
+                case ResponseFileUsedEventArgs responseFileUsed: return Write(responseFileUsed);
+                case TaskParameterEventArgs taskParameter: return Write(taskParameter);
+                case ProjectImportedEventArgs projectImported: return Write(projectImported);
+                case TargetSkippedEventArgs targetSkipped: return Write(targetSkipped);
+                case PropertyReassignmentEventArgs propertyReassignment: return Write(propertyReassignment);
+                case TaskCommandLineEventArgs taskCommandLine: return Write(taskCommandLine);
+                case UninitializedPropertyReadEventArgs uninitializedPropertyRead: return Write(uninitializedPropertyRead);
+                case EnvironmentVariableReadEventArgs environmentVariableRead: return Write(environmentVariableRead);
+                case PropertyInitialValueSetEventArgs propertyInitialValueSet: return Write(propertyInitialValueSet);
+                case CriticalBuildMessageEventArgs criticalBuildMessage: return Write(criticalBuildMessage);
+                case AssemblyLoadBuildEventArgs assemblyLoad: return Write(assemblyLoad);
                 default: // actual BuildMessageEventArgs
-                    Write(BinaryLogRecordKind.Message);
                     WriteMessageFields(e, writeImportance: true);
-                    break;
+                    return BinaryLogRecordKind.Message;
             }
         }
 
-        private void Write(ProjectImportedEventArgs e)
+        private BinaryLogRecordKind Write(ProjectImportedEventArgs e)
         {
-            Write(BinaryLogRecordKind.ProjectImported);
             WriteMessageFields(e);
             Write(e.ImportIgnored);
             WriteDeduplicatedString(e.ImportedProjectFile);
             WriteDeduplicatedString(e.UnexpandedProject);
+            return BinaryLogRecordKind.ProjectImported;
         }
 
-        private void Write(TargetSkippedEventArgs e)
+        private BinaryLogRecordKind Write(TargetSkippedEventArgs e)
         {
-            Write(BinaryLogRecordKind.TargetSkipped);
             WriteMessageFields(e, writeMessage: false);
             WriteDeduplicatedString(e.TargetFile);
             WriteDeduplicatedString(e.TargetName);
@@ -506,11 +495,11 @@ private void Write(TargetSkippedEventArgs e)
             Write((int)e.BuildReason);
             Write((int)e.SkipReason);
             binaryWriter.WriteOptionalBuildEventContext(e.OriginalBuildEventContext);
+            return BinaryLogRecordKind.TargetSkipped;
         }
 
-        private void Write(AssemblyLoadBuildEventArgs e)
+        private BinaryLogRecordKind Write(AssemblyLoadBuildEventArgs e)
         {
-            Write(BinaryLogRecordKind.AssemblyLoad);
             WriteMessageFields(e, writeMessage: false, writeImportance: false);
             Write((int)e.LoadingContext);
             WriteDeduplicatedString(e.LoadingInitiator);
@@ -518,63 +507,63 @@ private void Write(AssemblyLoadBuildEventArgs e)
             WriteDeduplicatedString(e.AssemblyPath);
             Write(e.MVID);
             WriteDeduplicatedString(e.AppDomainDescriptor);
+            return BinaryLogRecordKind.AssemblyLoad;
         }
 
-        private void Write(CriticalBuildMessageEventArgs e)
+        private BinaryLogRecordKind Write(CriticalBuildMessageEventArgs e)
         {
-            Write(BinaryLogRecordKind.CriticalBuildMessage);
             WriteMessageFields(e);
+            return BinaryLogRecordKind.CriticalBuildMessage;
         }
 
-        private void Write(PropertyReassignmentEventArgs e)
+        private BinaryLogRecordKind Write(PropertyReassignmentEventArgs e)
         {
-            Write(BinaryLogRecordKind.PropertyReassignment);
             WriteMessageFields(e, writeMessage: false, writeImportance: true);
             WriteDeduplicatedString(e.PropertyName);
             WriteDeduplicatedString(e.PreviousValue);
             WriteDeduplicatedString(e.NewValue);
             WriteDeduplicatedString(e.Location);
+            return BinaryLogRecordKind.PropertyReassignment;
         }
 
-        private void Write(UninitializedPropertyReadEventArgs e)
+        private BinaryLogRecordKind Write(UninitializedPropertyReadEventArgs e)
         {
-            Write(BinaryLogRecordKind.UninitializedPropertyRead);
             WriteMessageFields(e, writeImportance: true);
             WriteDeduplicatedString(e.PropertyName);
+            return BinaryLogRecordKind.UninitializedPropertyRead;
         }
 
-        private void Write(PropertyInitialValueSetEventArgs e)
+        private BinaryLogRecordKind Write(PropertyInitialValueSetEventArgs e)
         {
-            Write(BinaryLogRecordKind.PropertyInitialValueSet);
             WriteMessageFields(e, writeImportance: true);
             WriteDeduplicatedString(e.PropertyName);
             WriteDeduplicatedString(e.PropertyValue);
             WriteDeduplicatedString(e.PropertySource);
+            return BinaryLogRecordKind.PropertyInitialValueSet;
         }
 
-        private void Write(EnvironmentVariableReadEventArgs e)
+        private BinaryLogRecordKind Write(EnvironmentVariableReadEventArgs e)
         {
-            Write(BinaryLogRecordKind.EnvironmentVariableRead);
             WriteMessageFields(e, writeImportance: true);
             WriteDeduplicatedString(e.EnvironmentVariableName);
+            return BinaryLogRecordKind.EnvironmentVariableRead;
         }
-        private void Write(ResponseFileUsedEventArgs e)
+        private BinaryLogRecordKind Write(ResponseFileUsedEventArgs e)
         {
-            Write(BinaryLogRecordKind.ResponseFileUsed);
             WriteMessageFields(e);
             WriteDeduplicatedString(e.ResponseFilePath);
+            return BinaryLogRecordKind.ResponseFileUsed;
         }
-        private void Write(TaskCommandLineEventArgs e)
+        private BinaryLogRecordKind Write(TaskCommandLineEventArgs e)
         {
-            Write(BinaryLogRecordKind.TaskCommandLine);
             WriteMessageFields(e, writeMessage: false, writeImportance: true);
             WriteDeduplicatedString(e.CommandLine);
             WriteDeduplicatedString(e.TaskName);
+            return BinaryLogRecordKind.TaskCommandLine;
         }
 
-        private void Write(TaskParameterEventArgs e)
+        private BinaryLogRecordKind Write(TaskParameterEventArgs e)
         {
-            Write(BinaryLogRecordKind.TaskParameter);
             WriteMessageFields(e, writeMessage: false);
             Write((int)e.Kind);
             WriteDeduplicatedString(e.ItemType);
@@ -584,6 +573,7 @@ private void Write(TaskParameterEventArgs e)
             {
                 CheckForFilesToEmbed(e.ItemType, e.Items);
             }
+            return BinaryLogRecordKind.TaskParameter;
         }
 
         private void WriteBuildEventArgsFields(BuildEventArgs e, bool writeMessage = true, bool writeLineAndColumn = false)
@@ -1078,19 +1068,27 @@ private void WriteNameValueList()
         /// </summary>
         private void WriteNameValueListRecord()
         {
-            // Switch the binaryWriter used by the Write* methods to the direct underlying stream writer.
             // We want this record to precede the record we're currently writing to currentRecordWriter
-            // which is backed by a MemoryStream buffer
-            using var redirectionScope = RedirectWritesToOriginalWriter();
+            // We as well want to know the storage size (differs from nameValueIndexListBuffer.Count as
+            //  we use variable integer encoding).
+            // So we redirect the writes to a MemoryStream and then flush the record to the final stream.
+            // All that is redirected away from the 'currentRecordStream' - that will be flushed last
+
+            nameValueListStream.SetLength(0);
+            var nameValueListBw = new BinaryWriter(nameValueListStream);
 
-            Write(BinaryLogRecordKind.NameValueList);
-            Write(nameValueIndexListBuffer.Count);
-            for (int i = 0; i < nameValueListBuffer.Count; i++)
+            using (var _ = RedirectWritesToDifferentWriter(nameValueListBw, binaryWriter))
             {
-                var kvp = nameValueIndexListBuffer[i];
-                Write(kvp.Key);
-                Write(kvp.Value);
+                Write(nameValueIndexListBuffer.Count);
+                for (int i = 0; i < nameValueListBuffer.Count; i++)
+                {
+                    var kvp = nameValueIndexListBuffer[i];
+                    Write(kvp.Key);
+                    Write(kvp.Value);
+                }
             }
+
+            FlushRecordToFinalStream(BinaryLogRecordKind.NameValueList, nameValueListStream);
         }
 
         /// <summary>
@@ -1124,7 +1122,7 @@ private void Write(BinaryLogRecordKind kind)
             Write((int)kind);
         }
 
-        private void Write(int value)
+        internal void Write(int value)
         {
             BinaryWriterExtensions.Write7BitEncodedInt(binaryWriter, value);
         }
@@ -1139,9 +1137,12 @@ private void Write(byte[] bytes)
             binaryWriter.Write(bytes);
         }
 
-        private void Write(Stream stream)
+        private void WriteToOriginalStream(Stream stream)
         {
-            stream.CopyTo(binaryWriter.BaseStream);
+            // WARNING: avoid calling binaryWriter.BaseStream here
+            // as it will flush the underlying stream - since that is a
+            // BufferedStream it will make buffering nearly useless
+            stream.CopyTo(originalStream);
         }
 
         private void Write(byte b)
@@ -1198,7 +1199,7 @@ private void WriteDeduplicatedString(string text)
             return (recordId, hash);
         }
 
-        private void WriteStringRecord(string text)
+        internal void WriteStringRecord(string text)
         {
             using var redirectionScope = RedirectWritesToOriginalWriter();
 
diff --git a/src/Build/Logging/BinaryLogger/IBuildEventArgsReaderNotifications.cs b/src/Build/Logging/BinaryLogger/IBuildEventArgsReaderNotifications.cs
deleted file mode 100644
index 415bd7c71fd..00000000000
--- a/src/Build/Logging/BinaryLogger/IBuildEventArgsReaderNotifications.cs
+++ /dev/null
@@ -1,13 +0,0 @@
-Ôªø// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-namespace Microsoft.Build.Logging
-{
-    /// <summary>
-    /// An interface for notifications from BuildEventArgsReader
-    /// </summary>
-    public interface IBuildEventArgsReaderNotifications : IBuildEventStringsReader
-    {
-        /* For future use */
-    }
-}
diff --git a/src/Build/Logging/BinaryLogger/IBuildEventStringsReader.cs b/src/Build/Logging/BinaryLogger/IBuildEventStringsReader.cs
deleted file mode 100644
index e9e7651ee78..00000000000
--- a/src/Build/Logging/BinaryLogger/IBuildEventStringsReader.cs
+++ /dev/null
@@ -1,26 +0,0 @@
-Ôªø// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-using System;
-
-namespace Microsoft.Build.Logging
-{
-    /// <summary>
-    /// An interface for notifications about reading strings from the binary log.
-    /// </summary>
-    public interface IBuildEventStringsReader
-    {
-        /// <summary>
-        /// An event that allows the subscriber to be notified when a string is read from the binary log.
-        /// Subscriber may adjust the string by setting <see cref="StringReadEventArgs.StringToBeUsed"/> property.
-        /// The passed event arg can be reused and should not be stored.
-        /// </summary>
-        public event Action<StringReadEventArgs>? StringReadDone;
-
-        /// <summary>
-        /// An event that allows the caller to be notified when a string is encountered in the binary log.
-        /// BinaryReader passed in ctor is at the beginning of the string at this point.
-        /// </summary>
-        public event Action? StringEncountered;
-    }
-}
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFile.cs b/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFile.cs
new file mode 100644
index 00000000000..ec8ba12c8b1
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFile.cs
@@ -0,0 +1,91 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.IO;
+using System.IO.Compression;
+using System.Text;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Logging
+{
+    /// <summary>
+    /// An object model for binlog embedded files.
+    /// Used in <see cref="IBuildEventArgsReaderNotifications.ArchiveFileEncountered"/> event.
+    /// </summary>
+    public abstract class ArchiveData : IDisposable
+    {
+        private protected ArchiveData(string fullPath) => FullPath = fullPath;
+
+        /// <summary>
+        /// Full path of the original file before it was put in the embedded archive.
+        /// </summary>
+        public string FullPath { get; }
+
+        /// <summary>
+        /// Materializes the whole content of the embedded file in memory as a string.
+        /// </summary>
+        /// <returns></returns>
+        public abstract ArchiveFile ToArchiveFile();
+
+        public virtual void Dispose()
+        { }
+    }
+
+    /// <summary>
+    /// Fully materialized (in-memory) embedded file.
+    /// Easier to work with (the content is expressed in a single string), but more memory greedy.
+    /// </summary>
+    public sealed class ArchiveFile : ArchiveData
+    {
+        public ArchiveFile(string fullPath, string content)
+            : base(fullPath)
+            => Content = content;
+
+        /// <summary>
+        /// The content of the original file.
+        /// </summary>
+        public string Content { get; }
+
+        /// <inheritdoc cref="ArchiveData.ToArchiveFile" />
+        public override ArchiveFile ToArchiveFile()
+            => this;
+    }
+
+    /// <summary>
+    /// Lazy (streaming) embedded file.
+    /// Might be favorable for large files, as it doesn't materialize the whole content in memory.
+    /// </summary>
+    public sealed class ArchiveStream : ArchiveData
+    {
+        public ArchiveStream(string fullPath, StreamReader contentReader)
+            : base(fullPath)
+            => ContentReader = contentReader;
+
+        /// <summary>
+        /// Stream over the content of the archived file.
+        /// </summary>
+        public StreamReader ContentReader { get; }
+
+        /// <summary>
+        /// Creates an externally exposable embedded file representation from a <see cref="ZipArchiveEntry"/> (which is an implementation detail currently).
+        /// </summary>
+        /// <param name="entry"></param>
+        /// <returns></returns>
+        internal static ArchiveStream From(ZipArchiveEntry entry)
+        {
+            return new ArchiveStream(entry.FullName, new StreamReader(entry.Open()));
+        }
+
+        /// <inheritdoc cref="ArchiveData.ToArchiveFile" />
+        public override ArchiveFile ToArchiveFile()
+        {
+            var content = ContentReader.ReadToEnd();
+            ContentReader.Dispose();
+            return new ArchiveFile(FullPath, content);
+        }
+
+        public override void Dispose()
+            => ContentReader.Dispose();
+    }
+}
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFileEventArgs.cs b/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFileEventArgs.cs
new file mode 100644
index 00000000000..9dc2b2e42a1
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFileEventArgs.cs
@@ -0,0 +1,20 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+
+namespace Microsoft.Build.Logging;
+
+/// <summary>
+/// Event arguments for <see cref="IBuildEventArgsReaderNotifications.ArchiveFileEncountered"/> event.
+/// </summary>
+public sealed class ArchiveFileEventArgs : EventArgs
+{
+    public ArchiveData ArchiveData { get; set; }
+
+    public ArchiveFileEventArgs(ArchiveData archiveData) => ArchiveData = archiveData;
+
+    // Intentionally not exposing this publicly (e.g. as IDisposable implementation)
+    // as we don't want to user to be bothered with ownership and disposing concerns.
+    internal void Dispose() => ArchiveData.Dispose();
+}
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFileEventArgsExtensions.cs b/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFileEventArgsExtensions.cs
new file mode 100644
index 00000000000..985e761411a
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/ArchiveFileEventArgsExtensions.cs
@@ -0,0 +1,52 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+
+namespace Microsoft.Build.Logging;
+
+public static class ArchiveFileEventArgsExtensions
+{
+    /// <summary>
+    /// Helper method that allows to subscribe to <see cref="IBuildEventArgsReaderNotifications.ArchiveFileEncountered"/> event via <see cref="IBuildEventArgsReaderNotifications.StringReadDone"/> event handler.
+    ///
+    /// This applies only when subscriber is OK with greedy reading entire content of the file and is interested only in the individual strings (e.g. for sensitive data redaction purposes),
+    ///  without distinction what each individual string means (e.g. they do not care about distinction between path and content or between individual files - they just need all textual data).
+    ///
+    /// <example>
+    /// <code>
+    /// private void OnStringReadDone(StringReadEventArgs e)
+    /// {
+    ///     e.StringToBeUsed = e.StringToBeUsed.Replace("foo", "bar");
+    /// }
+    ///
+    /// private void SubscribeToEvents()
+    /// {
+    ///     reader.StringReadDone += OnStringReadDone;
+    ///     reader.ArchiveFileEncountered += ((Action&lt;StringReadEventArgs&gt;)OnStringReadDone).ToArchiveFileHandler();
+    /// }
+    /// </code>
+    /// </example>
+    /// </summary>
+    public static Action<ArchiveFileEventArgs> ToArchiveFileHandler(this Action<StringReadEventArgs> stringHandler)
+    {
+        return args =>
+        {
+            var archiveFile = args.ArchiveData.ToArchiveFile();
+            var pathArgs = new StringReadEventArgs(archiveFile.FullPath);
+            stringHandler(pathArgs);
+            var contentArgs = new StringReadEventArgs(archiveFile.Content);
+            stringHandler(contentArgs);
+
+            if(pathArgs.StringToBeUsed != pathArgs.OriginalString ||
+               contentArgs.StringToBeUsed != contentArgs.OriginalString)
+            {
+                args.ArchiveData = new ArchiveFile(pathArgs.StringToBeUsed, contentArgs.StringToBeUsed);
+            }
+            else
+            {
+                args.ArchiveData = archiveFile;
+            }
+        };
+    }
+}
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/BinaryLogReaderErrorEventArgs.cs b/src/Build/Logging/BinaryLogger/Postprocessing/BinaryLogReaderErrorEventArgs.cs
new file mode 100644
index 00000000000..adad3e7d363
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/BinaryLogReaderErrorEventArgs.cs
@@ -0,0 +1,49 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+
+namespace Microsoft.Build.Logging
+{
+    /// <summary>
+    /// Materializes the error message.
+    /// Until it's called the error message is not materialized and no string allocations are made.
+    /// </summary>
+    /// <returns>The error message.</returns>
+    internal delegate string FormatErrorMessage();
+
+    /// <summary>
+    /// An event args for <see cref="IBuildEventArgsReaderNotifications.RecoverableReadError"/> event.
+    /// </summary>
+    public sealed class BinaryLogReaderErrorEventArgs : EventArgs
+    {
+        private readonly FormatErrorMessage _formatErrorMessage;
+
+        internal BinaryLogReaderErrorEventArgs(
+            ReaderErrorType errorType,
+            BinaryLogRecordKind recordKind,
+            FormatErrorMessage formatErrorMessage)
+        {
+            ErrorType = errorType;
+            RecordKind = recordKind;
+            _formatErrorMessage = formatErrorMessage;
+        }
+
+        /// <summary>
+        /// Type of the error that occurred during reading.
+        /// </summary>
+        public ReaderErrorType ErrorType { get; }
+
+        /// <summary>
+        /// Kind of the record that encountered the error.
+        /// </summary>
+        public BinaryLogRecordKind RecordKind { get; }
+
+        /// <summary>
+        /// Materializes the error message.
+        /// Until it's called the error message is not materialized and no string allocations are made.
+        /// </summary>
+        /// <returns>The error message.</returns>
+        public string GetFormattedMessage() => _formatErrorMessage();
+    }
+}
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/CleanupScope.cs b/src/Build/Logging/BinaryLogger/Postprocessing/CleanupScope.cs
new file mode 100644
index 00000000000..3045f914fe7
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/CleanupScope.cs
@@ -0,0 +1,15 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+
+namespace Microsoft.Build.Logging;
+
+internal readonly struct CleanupScope : IDisposable
+{
+    private readonly Action _disposeAction;
+
+    public CleanupScope(Action disposeAction) => _disposeAction = disposeAction;
+
+    public void Dispose() => _disposeAction();
+}
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/EmbeddedContentEventArgs.cs b/src/Build/Logging/BinaryLogger/Postprocessing/EmbeddedContentEventArgs.cs
new file mode 100644
index 00000000000..123d927dd12
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/EmbeddedContentEventArgs.cs
@@ -0,0 +1,20 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.IO;
+
+namespace Microsoft.Build.Logging
+{
+    internal sealed class EmbeddedContentEventArgs : EventArgs
+    {
+        public EmbeddedContentEventArgs(BinaryLogRecordKind contentKind, Stream contentStream)
+        {
+            ContentKind = contentKind;
+            ContentStream = contentStream;
+        }
+
+        public BinaryLogRecordKind ContentKind { get; }
+        public Stream ContentStream { get; }
+    }
+}
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/IBuildEventArgsReaderNotifications.cs b/src/Build/Logging/BinaryLogger/Postprocessing/IBuildEventArgsReaderNotifications.cs
new file mode 100644
index 00000000000..aee71562898
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/IBuildEventArgsReaderNotifications.cs
@@ -0,0 +1,50 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+
+namespace Microsoft.Build.Logging
+{
+    /// <summary>
+    /// An interface for notifications from BuildEventArgsReader
+    /// </summary>
+    public interface IBuildEventArgsReaderNotifications
+    {
+        /// <summary>
+        /// An event that allows the subscriber to be notified when a string is read from the binary log.
+        /// Subscriber may adjust the string by setting <see cref="StringReadEventArgs.StringToBeUsed"/> property.
+        /// The passed event arg can be reused and should not be stored.
+        /// </summary>
+        event Action<StringReadEventArgs>? StringReadDone;
+
+        /// <summary>
+        /// An event that allows the caller to be notified when an embedded file is encountered in the binary log.
+        /// When subscriber is OK with greedy reading entire content of the file and is interested only in the individual strings (e.g. for sensitive data redaction purposes),
+        ///  it can simplify subscribing to this event, by using handler with same signature as handler for <see cref="IBuildEventArgsReaderNotifications.StringReadDone"/> and wrapping it via
+        /// <see cref="ArchiveFileEventArgsExtensions.ToArchiveFileHandler"/> extension.
+        /// </summary>
+        /// <example>
+        /// <code>
+        /// private void OnStringReadDone(StringReadEventArgs e)
+        /// {
+        ///     e.StringToBeUsed = e.StringToBeUsed.Replace("foo", "bar");
+        /// }
+        ///
+        /// private void SubscribeToEvents()
+        /// {
+        ///     reader.StringReadDone += OnStringReadDone;
+        ///     reader.ArchiveFileEncountered += ((Action&lt;StringReadEventArgs&gt;)OnStringReadDone).ToArchiveFileHandler();
+        /// }
+        /// </code>
+        /// </example>
+        event Action<ArchiveFileEventArgs>? ArchiveFileEncountered;
+
+        /// <summary>
+        /// Receives recoverable errors during reading.
+        /// Communicates type of the error, kind of the record that encountered the error and the message detailing the error.
+        /// In case of <see cref="ReaderErrorType.UnknownEventData"/> this is raised before returning the structured representation of a build event
+        /// that has some extra unknown data in the binlog. In case of other error types this event is raised and the offending build event is skipped and not returned.
+        /// </summary>
+        event Action<BinaryLogReaderErrorEventArgs>? RecoverableReadError;
+    }
+}
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/ReaderErrorType.cs b/src/Build/Logging/BinaryLogger/Postprocessing/ReaderErrorType.cs
new file mode 100644
index 00000000000..5bce4a50935
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/ReaderErrorType.cs
@@ -0,0 +1,29 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+namespace Microsoft.Build.Logging;
+
+/// <summary>
+/// Type of the error that occurred during reading.
+/// </summary>
+public enum ReaderErrorType
+{
+    /// <summary>
+    /// The encountered event is completely unknown to the reader. It cannot interpret any part of it.
+    /// </summary>
+    UnknownEventType,
+
+    /// <summary>
+    /// The encountered event is known to the reader and reader is able to read the event as it knows it.
+    /// However there are some extra data (append only extension to the event in future version), that reader cannot interpret,
+    ///  it can only skip it.
+    /// </summary>
+    UnknownEventData,
+
+    /// <summary>
+    /// The encountered event type is known to the reader, but the reader cannot interpret the data of the event.
+    /// This is probably caused by an event definition changing more than just adding fields.
+    /// The reader can only skip the event in full.
+    /// </summary>
+    UnknownFormatOfEventData,
+}
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/StreamExtensions.cs b/src/Build/Logging/BinaryLogger/Postprocessing/StreamExtensions.cs
new file mode 100644
index 00000000000..2993b3953c1
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/StreamExtensions.cs
@@ -0,0 +1,102 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.Buffers;
+using System.Diagnostics;
+using System.IO;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Logging
+{
+    internal static class StreamExtensions
+    {
+        private static bool CheckIsSkipNeeded(long bytesCount)
+        {
+            if (bytesCount is < 0 or > int.MaxValue)
+            {
+                throw new ArgumentOutOfRangeException(nameof(bytesCount), ResourceUtilities.FormatResourceStringStripCodeAndKeyword("Binlog_StreamUtils_UnsupportedSkipOffset",
+                    bytesCount));
+            }
+
+            return bytesCount > 0;
+        }
+
+        public static long SkipBytes(this Stream stream, long bytesCount)
+        {
+            if (!CheckIsSkipNeeded(bytesCount))
+            {
+                return 0;
+            }
+
+            byte[] buffer = ArrayPool<byte>.Shared.Rent(4096);
+            using var _ = new CleanupScope(() => ArrayPool<byte>.Shared.Return(buffer));
+            return SkipBytes(stream, bytesCount, buffer);
+        }
+
+        public static long SkipBytes(this Stream stream, long bytesCount, byte[] buffer)
+        {
+            if (!CheckIsSkipNeeded(bytesCount))
+            {
+                return 0;
+            }
+
+            long totalRead = 0;
+            while (totalRead < bytesCount)
+            {
+                int read = stream.Read(buffer, 0, (int)Math.Min(bytesCount - totalRead, buffer.Length));
+                if (read == 0)
+                {
+                    throw new InvalidDataException("Unexpected end of stream.");
+                }
+
+                totalRead += read;
+            }
+
+            return totalRead;
+        }
+
+        public static byte[] ReadToEnd(this Stream stream)
+        {
+            if (stream.TryGetLength(out long length))
+            {
+                BinaryReader reader = new(stream);
+                return reader.ReadBytes((int)length);
+            }
+
+            using var ms = new MemoryStream();
+            stream.CopyTo(ms);
+            return ms.ToArray();
+        }
+
+        public static bool TryGetLength(this Stream stream, out long length)
+        {
+            try
+            {
+                length = stream.Length;
+                return true;
+            }
+            catch (NotSupportedException)
+            {
+                length = 0;
+                return false;
+            }
+        }
+
+        public static Stream ToReadableSeekableStream(this Stream stream)
+        {
+            return TransparentReadStream.EnsureSeekableStream(stream);
+        }
+
+        /// <summary>
+        /// Creates bounded read-only, forward-only view over an underlying stream.
+        /// </summary>
+        /// <param name="stream"></param>
+        /// <param name="length"></param>
+        /// <returns></returns>
+        public static Stream Slice(this Stream stream, long length)
+        {
+            return new SubStream(stream, length);
+        }
+    }
+}
diff --git a/src/Build/Logging/BinaryLogger/StringReadEventArgs.cs b/src/Build/Logging/BinaryLogger/Postprocessing/StringReadEventArgs.cs
similarity index 90%
rename from src/Build/Logging/BinaryLogger/StringReadEventArgs.cs
rename to src/Build/Logging/BinaryLogger/Postprocessing/StringReadEventArgs.cs
index e2a4c83d3cb..909cec443eb 100644
--- a/src/Build/Logging/BinaryLogger/StringReadEventArgs.cs
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/StringReadEventArgs.cs
@@ -6,7 +6,7 @@
 namespace Microsoft.Build.Logging
 {
     /// <summary>
-    /// An event args for <see cref="IBuildEventStringsReader.StringReadDone"/> callback.
+    /// An event args for <see cref="IBuildEventArgsReaderNotifications.StringReadDone"/> callback.
     /// </summary>
     public sealed class StringReadEventArgs : EventArgs
     {
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/SubStream.cs b/src/Build/Logging/BinaryLogger/Postprocessing/SubStream.cs
new file mode 100644
index 00000000000..ff5caf9bfdf
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/SubStream.cs
@@ -0,0 +1,55 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.IO;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Logging
+{
+    /// <summary>
+    /// Bounded read-only, forward-only view over an underlying stream.
+    /// </summary>
+    internal sealed class SubStream : Stream
+    {
+        // Do not Dispose/Close on Dispose/Close !!
+        private readonly Stream _stream;
+        private readonly long _length;
+        private long _position;
+
+        public SubStream(Stream stream, long length)
+        {
+            _stream = stream;
+            _length = length;
+
+            if (!stream.CanRead)
+            {
+                throw new NotSupportedException(ResourceUtilities.GetResourceString("Binlog_StreamUtils_MustBeReadable"));
+            }
+        }
+
+        public bool IsAtEnd => _position >= _length;
+
+        public override bool CanRead => true;
+
+        public override bool CanSeek => false;
+
+        public override bool CanWrite => false;
+
+        public override long Length => _length;
+
+        public override long Position { get => _position; set => throw new NotImplementedException(); }
+
+        public override void Flush() { }
+        public override int Read(byte[] buffer, int offset, int count)
+        {
+            count = Math.Min((int)Math.Max(Length - _position, 0), count);
+            int read = _stream.Read(buffer, offset, count);
+            _position += read;
+            return read;
+        }
+        public override long Seek(long offset, SeekOrigin origin) => throw new NotImplementedException();
+        public override void SetLength(long value) => throw new NotImplementedException();
+        public override void Write(byte[] buffer, int offset, int count) => throw new NotImplementedException();
+    }
+}
diff --git a/src/Build/Logging/BinaryLogger/Postprocessing/TransparentReadStream.cs b/src/Build/Logging/BinaryLogger/Postprocessing/TransparentReadStream.cs
new file mode 100644
index 00000000000..4dd9afa0300
--- /dev/null
+++ b/src/Build/Logging/BinaryLogger/Postprocessing/TransparentReadStream.cs
@@ -0,0 +1,114 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.IO;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Logging
+{
+    /// <summary>
+    /// A wrapper stream that allows position tracking and forward seeking.
+    /// </summary>
+    internal sealed class TransparentReadStream : Stream
+    {
+        private readonly Stream _stream;
+        private long _position;
+        private long _maxAllowedPosition = long.MaxValue;
+
+        public static Stream EnsureSeekableStream(Stream stream)
+        {
+            if (stream.CanSeek)
+            {
+                return stream;
+            }
+
+            if (!stream.CanRead)
+            {
+                throw new InvalidOperationException(ResourceUtilities.GetResourceString("Binlog_StreamUtils_MustBeReadable"));
+            }
+
+            return new TransparentReadStream(stream);
+        }
+
+        public static TransparentReadStream EnsureTransparentReadStream(Stream stream)
+        {
+            if (stream is TransparentReadStream transparentReadStream)
+            {
+                return transparentReadStream;
+            }
+
+            if (!stream.CanRead)
+            {
+                throw new InvalidOperationException(ResourceUtilities.GetResourceString("Binlog_StreamUtils_MustBeReadable"));
+            }
+
+            return new TransparentReadStream(stream);
+        }
+
+        private TransparentReadStream(Stream stream)
+        {
+            _stream = stream;
+        }
+
+        public int? BytesCountAllowedToRead
+        {
+            set { _maxAllowedPosition = value.HasValue ? _position + value.Value : long.MaxValue; }
+        }
+
+        // if we haven't constrained the allowed read size - do not report it being unfinished either.
+        public int BytesCountAllowedToReadRemaining =>
+            _maxAllowedPosition == long.MaxValue ? 0 : (int)(_maxAllowedPosition - _position);
+
+        public override bool CanRead => _stream.CanRead;
+        public override bool CanSeek => true;
+        public override bool CanWrite => false;
+        public override long Length => _stream.Length;
+        public override long Position
+        {
+            get => _position;
+            set => this.SkipBytes(value - _position);
+        }
+
+        public override void Flush()
+        {
+            _stream.Flush();
+        }
+
+        public override int Read(byte[] buffer, int offset, int count)
+        {
+            if (_position + count > _maxAllowedPosition)
+            {
+                count = (int)(_maxAllowedPosition - _position);
+            }
+
+            int cnt = _stream.Read(buffer, offset, count);
+            _position += cnt;
+            return cnt;
+        }
+
+        public override long Seek(long offset, SeekOrigin origin)
+        {
+            if (origin != SeekOrigin.Current)
+            {
+                throw new NotSupportedException(ResourceUtilities.GetResourceString("Binlog_StreamUtils_SeekNonOrigin"));
+            }
+
+            this.SkipBytes(offset);
+
+            return _position;
+        }
+
+        public override void SetLength(long value)
+        {
+            throw new NotSupportedException(ResourceUtilities.GetResourceString("Binlog_StreamUtils_SetLengthUnsupported"));
+        }
+
+        public override void Write(byte[] buffer, int offset, int count)
+        {
+            throw new NotSupportedException(ResourceUtilities.GetResourceString("Binlog_StreamUtils_WriteUnsupported"));
+        }
+
+        public override void Close() => _stream.Close();
+    }
+}
diff --git a/src/Build/Logging/BinaryLogger/ProjectImportsCollector.cs b/src/Build/Logging/BinaryLogger/ProjectImportsCollector.cs
index 27ededae8cc..536d7f9ed48 100644
--- a/src/Build/Logging/BinaryLogger/ProjectImportsCollector.cs
+++ b/src/Build/Logging/BinaryLogger/ProjectImportsCollector.cs
@@ -8,8 +8,7 @@
 using System.Text;
 using System.Threading.Tasks;
 using Microsoft.Build.Shared;
-
-#nullable disable
+using Microsoft.Build.Shared.FileSystem;
 
 namespace Microsoft.Build.Logging
 {
@@ -21,10 +20,11 @@ namespace Microsoft.Build.Logging
     /// </summary>
     internal class ProjectImportsCollector
     {
-        private Stream _fileStream;
-        private ZipArchive _zipArchive;
-
-        public string ArchiveFilePath { get; }
+        private Stream? _fileStream;
+        private ZipArchive? _zipArchive;
+        private readonly string _archiveFilePath;
+        private readonly bool _runOnBackground;
+        private const string DefaultSourcesArchiveExtension = ".ProjectImports.zip";
 
         /// <summary>
         /// Avoid visiting each file more than once.
@@ -34,12 +34,29 @@ internal class ProjectImportsCollector
         // this will form a chain of file write tasks, running sequentially on a background thread
         private Task _currentTask = Task.CompletedTask;
 
-        public ProjectImportsCollector(string logFilePath, bool createFile, string sourcesArchiveExtension = ".ProjectImports.zip")
+        internal static void FlushBlobToFile(
+            string logFilePath,
+            Stream contentStream)
+        {
+            string archiveFilePath = GetArchiveFilePath(logFilePath, DefaultSourcesArchiveExtension);
+
+            using var fileStream = new FileStream(archiveFilePath, FileMode.Create, FileAccess.ReadWrite, FileShare.Delete);
+            contentStream.CopyTo(fileStream);
+        }
+
+        // Archive file will be stored alongside the binlog
+        private static string GetArchiveFilePath(string logFilePath, string sourcesArchiveExtension)
+            => Path.ChangeExtension(logFilePath, sourcesArchiveExtension);
+
+        public ProjectImportsCollector(
+            string logFilePath,
+            bool createFile,
+            string sourcesArchiveExtension = DefaultSourcesArchiveExtension,
+            bool runOnBackground = true)
         {
             if (createFile)
             {
-                // Archive file will be stored alongside the binlog
-                ArchiveFilePath = Path.ChangeExtension(logFilePath, sourcesArchiveExtension);
+                _archiveFilePath = GetArchiveFilePath(logFilePath, sourcesArchiveExtension);
             }
             else
             {
@@ -50,16 +67,16 @@ public ProjectImportsCollector(string logFilePath, bool createFile, string sourc
                 }
 
                 // Archive file will be temporarily stored in MSBuild cache folder and deleted when no longer needed
-                ArchiveFilePath = Path.Combine(
+                _archiveFilePath = Path.Combine(
                     cacheDirectory,
-                    Path.ChangeExtension(
+                    GetArchiveFilePath(
                         Path.GetFileName(logFilePath),
                         sourcesArchiveExtension));
             }
 
             try
             {
-                _fileStream = new FileStream(ArchiveFilePath, FileMode.Create, FileAccess.ReadWrite, FileShare.Delete);
+                _fileStream = new FileStream(_archiveFilePath, FileMode.Create, FileAccess.ReadWrite, FileShare.Delete);
                 _zipArchive = new ZipArchive(_fileStream, ZipArchiveMode.Create);
             }
             catch
@@ -69,49 +86,67 @@ public ProjectImportsCollector(string logFilePath, bool createFile, string sourc
                 _fileStream = null;
                 _zipArchive = null;
             }
+            _runOnBackground = runOnBackground;
+        }
+
+        public void AddFile(string? filePath)
+        {
+            AddFileHelper(filePath, AddFileCore);
         }
 
-        public void AddFile(string filePath)
+        public void AddFileFromMemory(
+            string? filePath,
+            string data,
+            DateTimeOffset? entryCreationStamp = null,
+            bool makePathAbsolute = true)
+        {
+            AddFileHelper(filePath, path =>
+                AddFileFromMemoryCore(path, data, makePathAbsolute, entryCreationStamp));
+        }
+
+        public void AddFileFromMemory(
+            string? filePath,
+            Stream data,
+            DateTimeOffset? entryCreationStamp = null,
+            bool makePathAbsolute = true)
+        {
+            AddFileHelper(filePath, path => AddFileFromMemoryCore(path, data, makePathAbsolute, entryCreationStamp));
+        }
+
+        private void AddFileHelper(
+            string? filePath,
+            Action<string> addFileWorker)
         {
             if (filePath != null && _fileStream != null)
             {
                 lock (_fileStream)
                 {
-                    // enqueue the task to add a file and return quickly
-                    // to avoid holding up the current thread
-                    _currentTask = _currentTask.ContinueWith(t =>
+                    if (_runOnBackground)
                     {
-                        try
-                        {
-                            AddFileCore(filePath);
-                        }
-                        catch
-                        {
-                        }
-                    }, TaskScheduler.Default);
+                        // enqueue the task to add a file and return quickly
+                        // to avoid holding up the current thread
+                        _currentTask = _currentTask.ContinueWith(
+                            t => { TryAddFile(); },
+                            TaskScheduler.Default);
+                    }
+                    else
+                    {
+                        TryAddFile();
+                    }
                 }
             }
-        }
 
-        public void AddFileFromMemory(string filePath, string data)
-        {
-            if (filePath != null && data != null && _fileStream != null)
+            bool TryAddFile()
             {
-                lock (_fileStream)
+                try
                 {
-                    // enqueue the task to add a file and return quickly
-                    // to avoid holding up the current thread
-                    _currentTask = _currentTask.ContinueWith(t =>
-                    {
-                        try
-                        {
-                            AddFileFromMemoryCore(filePath, data);
-                        }
-                        catch
-                        {
-                        }
-                    }, TaskScheduler.Default);
+                    addFileWorker(filePath);
+                    return true;
                 }
+                catch
+                { }
+
+                return false;
             }
         }
 
@@ -122,61 +157,82 @@ public void AddFileFromMemory(string filePath, string data)
         private void AddFileCore(string filePath)
         {
             // quick check to avoid repeated disk access for Exists etc.
-            if (_processedFiles.Contains(filePath))
+            if (!ShouldAddFile(ref filePath, true, true))
             {
                 return;
             }
 
-            if (!File.Exists(filePath))
+            using FileStream content = new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.Read | FileShare.Delete);
+            AddFileData(filePath, content, null);
+        }
+
+        /// <remarks>
+        /// This method doesn't need locking/synchronization because it's only called
+        /// from a task that is chained linearly
+        /// </remarks>
+        private void AddFileFromMemoryCore(string filePath, string data, bool makePathAbsolute, DateTimeOffset? entryCreationStamp)
+        {
+            // quick check to avoid repeated disk access for Exists etc.
+            if (!ShouldAddFile(ref filePath, false, makePathAbsolute))
             {
-                _processedFiles.Add(filePath);
                 return;
             }
 
-            filePath = Path.GetFullPath(filePath);
+            using var content = new MemoryStream(Encoding.UTF8.GetBytes(data));
+            AddFileData(filePath, content, entryCreationStamp);
+        }
 
-            // if the file is already included, don't include it again
-            if (!_processedFiles.Add(filePath))
+        private void AddFileFromMemoryCore(string filePath, Stream data, bool makePathAbsolute, DateTimeOffset? entryCreationStamp)
+        {
+            // quick check to avoid repeated disk access for Exists etc.
+            if (!ShouldAddFile(ref filePath, false, makePathAbsolute))
             {
                 return;
             }
 
-            using FileStream content = new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.Read | FileShare.Delete);
-            using Stream entryStream = OpenArchiveEntry(filePath);
-            content.CopyTo(entryStream);
+            AddFileData(filePath, data, entryCreationStamp);
         }
 
-        /// <remarks>
-        /// This method doesn't need locking/synchronization because it's only called
-        /// from a task that is chained linearly
-        /// </remarks>
-        private void AddFileFromMemoryCore(string filePath, string data)
+        private void AddFileData(string filePath, Stream data, DateTimeOffset? entryCreationStamp)
+        {
+            using Stream entryStream = OpenArchiveEntry(filePath, entryCreationStamp);
+            data.CopyTo(entryStream);
+        }
+
+        private bool ShouldAddFile(ref string filePath, bool checkFileExistence, bool makeAbsolute)
         {
             // quick check to avoid repeated disk access for Exists etc.
             if (_processedFiles.Contains(filePath))
             {
-                return;
+                return false;
             }
 
-            filePath = Path.GetFullPath(filePath);
-
-            // if the file is already included, don't include it again
-            if (!_processedFiles.Add(filePath))
+            if (checkFileExistence && !File.Exists(filePath))
             {
-                return;
+                _processedFiles.Add(filePath);
+                return false;
             }
 
-            using (Stream entryStream = OpenArchiveEntry(filePath))
-            using (var content = new MemoryStream(Encoding.UTF8.GetBytes(data)))
+            // Only make the path absolute if it's request. In the replay scenario, the file entries
+            // are read from zip archive - where ':' is stripped and path can then seem relative.
+            if (makeAbsolute)
             {
-                content.CopyTo(entryStream);
+                filePath = Path.GetFullPath(filePath);
             }
+
+            // if the file is already included, don't include it again
+            return _processedFiles.Add(filePath);
         }
 
-        private Stream OpenArchiveEntry(string filePath)
+        private Stream OpenArchiveEntry(string filePath, DateTimeOffset? entryCreationStamp)
         {
             string archivePath = CalculateArchivePath(filePath);
-            var archiveEntry = _zipArchive.CreateEntry(archivePath);
+            var archiveEntry = _zipArchive!.CreateEntry(archivePath);
+            if (entryCreationStamp.HasValue)
+            {
+                archiveEntry.LastWriteTime = entryCreationStamp.Value;
+            }
+
             return archiveEntry.Open();
         }
 
@@ -191,6 +247,27 @@ private static string CalculateArchivePath(string filePath)
             return archivePath;
         }
 
+        public void ProcessResult(Action<Stream> consumeStream, Action<string> onError)
+        {
+            Close();
+
+            // It is possible that the archive couldn't be created for some reason.
+            // Only embed it if it actually exists.
+            if (FileSystems.Default.FileExists(_archiveFilePath))
+            {
+                using FileStream fileStream = File.OpenRead(_archiveFilePath);
+
+                if (fileStream.Length > int.MaxValue)
+                {
+                    onError(ResourceUtilities.GetResourceString("Binlog_ImportFileSizeError"));
+                }
+                else
+                {
+                    consumeStream(fileStream);
+                }
+            }
+        }
+
         public void Close()
         {
             // wait for all pending file writes to complete
@@ -208,5 +285,11 @@ public void Close()
                 _fileStream = null;
             }
         }
+
+        public void DeleteArchive()
+        {
+            Close();
+            File.Delete(_archiveFilePath);
+        }
     }
 }
diff --git a/src/Build/Logging/DistributedLoggers/ConfigurableForwardingLogger.cs b/src/Build/Logging/DistributedLoggers/ConfigurableForwardingLogger.cs
index 277352b56a0..8e63fe788e3 100644
--- a/src/Build/Logging/DistributedLoggers/ConfigurableForwardingLogger.cs
+++ b/src/Build/Logging/DistributedLoggers/ConfigurableForwardingLogger.cs
@@ -1,14 +1,9 @@
 Ôªø// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
-using System.Collections.Generic;
-
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 
-#nullable disable
-
 namespace Microsoft.Build.Logging
 {
     /// <summary>
@@ -22,9 +17,7 @@ public class ConfigurableForwardingLogger : IForwardingLogger
         /// Default constructor.
         /// </summary>
         public ConfigurableForwardingLogger()
-        {
-            InitializeForwardingTable();
-        }
+        { }
         #endregion
 
         #region Properties
@@ -44,7 +37,7 @@ public LoggerVerbosity Verbosity
         /// and warnings summary at the end of a build.
         /// </summary>
         /// <value>null</value>
-        public string Parameters
+        public string? Parameters
         {
             get { return _loggerParameters; }
             set { _loggerParameters = value; }
@@ -54,7 +47,7 @@ public string Parameters
         /// This property is set by the build engine to allow a node loggers to forward messages to the
         /// central logger
         /// </summary>
-        public IEventRedirector BuildEventRedirector
+        public IEventRedirector? BuildEventRedirector
         {
             get { return _buildEventRedirector; }
             set { _buildEventRedirector = value; }
@@ -72,35 +65,10 @@ public int NodeId
 
         #region Methods
 
-        /// <summary>
-        /// Initialize the Forwarding Table with the default values
-        /// </summary>
-        private void InitializeForwardingTable()
-        {
-            _forwardingTable = new Dictionary<string, int>(16, StringComparer.OrdinalIgnoreCase);
-            _forwardingTable[BuildStartedEventDescription] = 0;
-            _forwardingTable[BuildFinishedEventDescription] = 0;
-            _forwardingTable[ProjectStartedEventDescription] = 0;
-            _forwardingTable[ProjectFinishedEventDescription] = 0;
-            _forwardingTable[ProjectEvaluationEventDescription] = 0;
-            _forwardingTable[TargetStartedEventDescription] = 0;
-            _forwardingTable[TargetFinishedEventDescription] = 0;
-            _forwardingTable[TaskStartedEventDescription] = 0;
-            _forwardingTable[TaskFinishedEventDescription] = 0;
-            _forwardingTable[ErrorEventDescription] = 0;
-            _forwardingTable[WarningEventDescription] = 0;
-            _forwardingTable[HighMessageEventDescription] = 0;
-            _forwardingTable[NormalMessageEventDescription] = 0;
-            _forwardingTable[LowMessageEventDescription] = 0;
-            _forwardingTable[CustomEventDescription] = 0;
-            _forwardingTable[CommandLineDescription] = 0;
-            _forwardingSetFromParameters = false;
-        }
-
         /// <summary>
         /// Parses out the logger parameters from the Parameters string.
         /// </summary>
-        private void ParseParameters()
+        private void ParseParameters(IEventSource eventSource)
         {
             if (_loggerParameters != null)
             {
@@ -109,7 +77,7 @@ private void ParseParameters()
                 {
                     if (parameterComponents[param].Length > 0)
                     {
-                        ApplyParameter(parameterComponents[param]);
+                        ApplyParameter(eventSource, parameterComponents[param]);
                     }
                 }
                 // Setting events to forward on the commandline will override the verbosity and other switches such as
@@ -125,8 +93,8 @@ private void ParseParameters()
                     // We can't know whether the project items needed to find ForwardProjectContextDescription
                     // will be set on ProjectStarted or ProjectEvaluationFinished because we don't know
                     // all of the other loggers that will be attached. So turn both on.
-                    _forwardingTable[ProjectStartedEventDescription] = 1;
-                    _forwardingTable[ProjectEvaluationEventDescription] = 1;
+                    eventSource.HandleStatusEventRaised(BuildStatusHandler);
+                    eventSource.HandleProjectStarted(ForwardEvent);
                 }
             }
         }
@@ -135,39 +103,93 @@ private void ParseParameters()
         /// Logger parameters can be used to enable and disable specific event types.
         /// Otherwise, the verbosity is used to choose which events to forward.
         /// </summary>
-        private void ApplyParameter(string parameterName)
+        private void ApplyParameter(IEventSource eventSource, string parameterName)
         {
             ErrorUtilities.VerifyThrowArgumentNull(parameterName, nameof(parameterName));
 
-            if (_forwardingTable.ContainsKey(parameterName))
+            bool isEventForwardingParameter = true;
+
+            // Careful - we need to brace before double specified parameters - hence the unsubscriptions before subscriptions
+            switch (parameterName.ToUpperInvariant())
+            {
+                case BuildStartedEventDescription:
+                    eventSource.HandleBuildStarted(ForwardEvent);
+                    break;
+                case BuildFinishedEventDescription:
+                    eventSource.HandleBuildFinished(ForwardEvent);
+                    break;
+                case ProjectStartedEventDescription:
+                    eventSource.HandleProjectStarted(ForwardEvent);
+                    break;
+                case ProjectFinishedEventDescription:
+                    eventSource.HandleProjectFinished(ForwardEvent);
+                    break;
+                case TargetStartedEventDescription:
+                    eventSource.HandleTargetStarted(ForwardEvent);
+                    break;
+                case TargetFinishedEventDescription:
+                    eventSource.HandleTargetFinished(ForwardEvent);
+                    break;
+                case TaskStartedEventDescription:
+                    eventSource.HandleTaskStarted(ForwardEvent);
+                    break;
+                case TaskFinishedEventDescription:
+                    eventSource.HandleTaskFinished(ForwardEvent);
+                    break;
+                case ErrorEventDescription:
+                    eventSource.HandleErrorRaised(ForwardEvent);
+                    break;
+                case WarningEventDescription:
+                    eventSource.HandleWarningRaised(ForwardEvent);
+                    break;
+                case CustomEventDescription:
+                    eventSource.HandleCustomEventRaised(ForwardEvent);
+                    break;
+                case HighMessageEventDescription:
+                    eventSource.HandleMessageRaised(MessageHandler);
+                    _forwardHighImportanceMessages = true;
+                    break;
+                case NormalMessageEventDescription:
+                    eventSource.HandleMessageRaised(MessageHandler);
+                    _forwardNormalImportanceMessages = true;
+                    break;
+                case LowMessageEventDescription:
+                    eventSource.HandleMessageRaised(MessageHandler);
+                    _forwardLowImportanceMessages = true;
+                    break;
+                case CommandLineDescription:
+                    eventSource.HandleMessageRaised(MessageHandler);
+                    _forwardTaskCommandLine = true;
+                    break;
+                case ProjectEvaluationStartedEventDescription:
+                case ProjectEvaluationFinishedEventDescription:
+                case ProjectEvaluationEventDescription:
+                    eventSource.HandleStatusEventRaised(BuildStatusHandler);
+                    break;
+                case PerformanceSummaryDescription:
+                    _showPerfSummary = true;
+                    isEventForwardingParameter = false;
+                    break;
+                case NoSummaryDescription:
+                    _showSummary = false;
+                    isEventForwardingParameter = false;
+                    break;
+                case ShowCommandLineDescription:
+                    _showCommandLine = true;
+                    isEventForwardingParameter = false;
+                    break;
+                case ForwardProjectContextDescription:
+                    _forwardProjectContext = true;
+                    isEventForwardingParameter = false;
+                    break;
+                default:
+                    isEventForwardingParameter = false;
+                    break;
+            }
+
+            if (isEventForwardingParameter)
             {
                 _forwardingSetFromParameters = true;
-                _forwardingTable[parameterName] = 1;
-            }
-            else if (String.Equals(parameterName, ProjectEvaluationStartedEventDescription, StringComparison.OrdinalIgnoreCase) ||
-                String.Equals(parameterName, ProjectEvaluationFinishedEventDescription, StringComparison.OrdinalIgnoreCase))
-            {
-                _forwardingSetFromParameters = true;
-                _forwardingTable[ProjectEvaluationEventDescription] = 1;
-            }
-
-            // If any of the following parameters are set, we will make sure we forward the events
-            // necessary for the central logger to emit the requested information
-            if (String.Equals(parameterName, PerformanceSummaryDescription, StringComparison.OrdinalIgnoreCase))
-            {
-                _showPerfSummary = true;
-            }
-            else if (String.Equals(parameterName, NoSummaryDescription, StringComparison.OrdinalIgnoreCase))
-            {
-                _showSummary = false;
-            }
-            else if (String.Equals(parameterName, ShowCommandLineDescription, StringComparison.OrdinalIgnoreCase))
-            {
-                _showCommandLine = true;
-            }
-            else if (string.Equals(parameterName, ForwardProjectContextDescription, StringComparison.OrdinalIgnoreCase))
-            {
-                _forwardProjectContext = true;
             }
         }
 
@@ -178,28 +200,12 @@ public virtual void Initialize(IEventSource eventSource)
         {
             ErrorUtilities.VerifyThrowArgumentNull(eventSource, nameof(eventSource));
 
-            ParseParameters();
-
-            ResetLoggerState();
+            ParseParameters(eventSource);
 
             if (!_forwardingSetFromParameters)
             {
-                SetForwardingBasedOnVerbosity();
+                SetForwardingBasedOnVerbosity(eventSource);
             }
-
-            eventSource.BuildStarted += BuildStartedHandler;
-            eventSource.BuildFinished += BuildFinishedHandler;
-            eventSource.ProjectStarted += ProjectStartedHandler;
-            eventSource.ProjectFinished += ProjectFinishedHandler;
-            eventSource.TargetStarted += TargetStartedHandler;
-            eventSource.TargetFinished += TargetFinishedHandler;
-            eventSource.TaskStarted += TaskStartedHandler;
-            eventSource.TaskFinished += TaskFinishedHandler;
-            eventSource.ErrorRaised += ErrorHandler;
-            eventSource.WarningRaised += WarningHandler;
-            eventSource.MessageRaised += MessageHandler;
-            eventSource.CustomEventRaised += CustomEventHandler;
-            eventSource.StatusEventRaised += BuildStatusHandler;
         }
 
         /// <summary>
@@ -210,90 +216,97 @@ public void Initialize(IEventSource eventSource, int nodeCount)
             Initialize(eventSource);
         }
 
-        private void SetForwardingBasedOnVerbosity()
+        private void SetForwardingBasedOnVerbosity(IEventSource eventSource)
         {
-            _forwardingTable[BuildStartedEventDescription] = 1;
-            _forwardingTable[BuildFinishedEventDescription] = 1;
+            eventSource.HandleBuildStarted(ForwardEvent);
+            eventSource.HandleBuildFinished(ForwardEvent);
 
             if (IsVerbosityAtLeast(LoggerVerbosity.Quiet))
             {
-                _forwardingTable[ErrorEventDescription] = 1;
-                _forwardingTable[WarningEventDescription] = 1;
+                eventSource.HandleErrorRaised(ForwardEvent);
+                eventSource.HandleWarningRaised(ForwardEvent);
             }
 
             if (IsVerbosityAtLeast(LoggerVerbosity.Minimal))
             {
-                _forwardingTable[HighMessageEventDescription] = 1;
+                eventSource.HandleMessageRaised(MessageHandler);
+                _forwardHighImportanceMessages = true;
             }
 
             if (IsVerbosityAtLeast(LoggerVerbosity.Normal))
             {
-                _forwardingTable[NormalMessageEventDescription] = 1;
-                _forwardingTable[ProjectStartedEventDescription] = 1;
-                _forwardingTable[ProjectFinishedEventDescription] = 1;
-                _forwardingTable[TargetStartedEventDescription] = 1;
-                _forwardingTable[TargetFinishedEventDescription] = 1;
-                _forwardingTable[CommandLineDescription] = 1;
+                // MessageHandler already subscribed
+                _forwardNormalImportanceMessages = true;
+                _forwardTaskCommandLine = true;
+
+                eventSource.HandleProjectStarted(ForwardEvent);
+                eventSource.HandleProjectFinished(ForwardEvent);
+                eventSource.HandleTargetStarted(ForwardEvent);
+                eventSource.HandleTargetFinished(ForwardEvent);
             }
 
             if (IsVerbosityAtLeast(LoggerVerbosity.Detailed))
             {
-                _forwardingTable[TargetStartedEventDescription] = 1;
-                _forwardingTable[TargetFinishedEventDescription] = 1;
-                _forwardingTable[TaskStartedEventDescription] = 1;
-                _forwardingTable[TaskFinishedEventDescription] = 1;
-                _forwardingTable[LowMessageEventDescription] = 1;
+                eventSource.HandleTaskStarted(ForwardEvent);
+                eventSource.HandleTaskFinished(ForwardEvent);
+
+                // MessageHandler already subscribed
+                _forwardLowImportanceMessages = true;
             }
 
             if (IsVerbosityAtLeast(LoggerVerbosity.Diagnostic))
             {
-                _forwardingTable[CustomEventDescription] = 1;
-                _forwardingTable[ProjectEvaluationEventDescription] = 1;
+                eventSource.HandleCustomEventRaised(ForwardEvent);
+                eventSource.HandleStatusEventRaised(BuildStatusHandler);
             }
 
             if (_showSummary)
             {
-                _forwardingTable[ErrorEventDescription] = 1;
-                _forwardingTable[WarningEventDescription] = 1;
+                eventSource.HandleErrorRaised(ForwardEvent);
+                eventSource.HandleWarningRaised(ForwardEvent);
             }
 
             if (_showPerfSummary)
             {
-                _forwardingTable[TargetStartedEventDescription] = 1;
-                _forwardingTable[TargetFinishedEventDescription] = 1;
-                _forwardingTable[TaskStartedEventDescription] = 1;
-                _forwardingTable[TaskFinishedEventDescription] = 1;
-                _forwardingTable[TargetStartedEventDescription] = 1;
-                _forwardingTable[TargetFinishedEventDescription] = 1;
-                _forwardingTable[ProjectStartedEventDescription] = 1;
-                _forwardingTable[ProjectFinishedEventDescription] = 1;
-                _forwardingTable[ProjectEvaluationEventDescription] = 1;
+                eventSource.HandleTaskStarted(ForwardEvent);
+                eventSource.HandleTaskFinished(ForwardEvent);
+                eventSource.HandleTargetStarted(ForwardEvent);
+                eventSource.HandleTargetFinished(ForwardEvent);
+                eventSource.HandleProjectStarted(ForwardEvent);
+                eventSource.HandleProjectFinished(ForwardEvent);
+                eventSource.HandleStatusEventRaised(BuildStatusHandler);
             }
 
             if (_showCommandLine)
             {
-                _forwardingTable[CommandLineDescription] = 1;
+                // Prevent double subscribe
+                eventSource.MessageRaised -= MessageHandler;
+                eventSource.MessageRaised += MessageHandler;
+
+                _forwardTaskCommandLine = true;
             }
         }
 
         /// <summary>
         /// Returns the minimum importance of messages logged by this logger.
+        /// Forwarding logger might be configured to forward messages of particular importance regardless of the verbosity level of said logger.
+        /// This method properly reflects that.
         /// </summary>
         /// <returns>
-        /// The minimum message importance corresponding to this logger's verbosity or (MessageImportance.High - 1)
-        /// if this logger does not log messages of any importance.
+        /// The minimum message importance corresponding to this logger's verbosity or configuration of forwarding of messages of particular importance level.
+        /// If this logger is not configured to forward messages of any importance and verbosity is not explicitly set, then (MessageImportance.High - 1) is returned.
         /// </returns>
         internal MessageImportance GetMinimumMessageImportance()
         {
-            if (_forwardingTable[LowMessageEventDescription] == 1)
+            if (_forwardLowImportanceMessages)
             {
                 return MessageImportance.Low;
             }
-            if (_forwardingTable[NormalMessageEventDescription] == 1)
+            if (_forwardNormalImportanceMessages)
             {
                 return MessageImportance.Normal;
             }
-            if (_forwardingTable[HighMessageEventDescription] == 1)
+            if (_forwardHighImportanceMessages)
             {
                 return MessageImportance.High;
             }
@@ -301,15 +314,6 @@ internal MessageImportance GetMinimumMessageImportance()
             return MessageImportance.High - 1;
         }
 
-        /// <summary>
-        /// Reset the states of per-build member variables.
-        /// Used when a build is finished, but the logger might be needed for the next build.
-        /// </summary>
-        private void ResetLoggerState()
-        {
-            // No state needs resetting
-        }
-
         /// <summary>
         /// Called when Engine is done with this logger
         /// </summary>
@@ -319,157 +323,35 @@ public virtual void Shutdown()
         }
 
         /// <summary>
-        /// Handler for build started events
-        /// </summary>
-        /// <param name="sender">sender (should be null)</param>
-        /// <param name="e">event arguments</param>
-        private void BuildStartedHandler(object sender, BuildStartedEventArgs e)
-        {
-            // This is false by default
-            if (_forwardingTable[BuildStartedEventDescription] == 1)
-            {
-                ForwardToCentralLogger(e);
-            }
-        }
-
-        /// <summary>
-        /// Handler for build finished events
-        /// </summary>
-        /// <param name="sender">sender (should be null)</param>
-        /// <param name="e">event arguments</param>
-        private void BuildFinishedHandler(object sender, BuildFinishedEventArgs e)
-        {
-            // This is false by default
-            if (_forwardingTable[BuildFinishedEventDescription] == 1)
-            {
-                ForwardToCentralLogger(e);
-            }
-            ResetLoggerState();
-        }
-
-        /// <summary>
-        /// Handler for project started events
-        /// </summary>
-        /// <param name="sender">sender (should be null)</param>
-        /// <param name="e">event arguments</param>
-        private void ProjectStartedHandler(object sender, ProjectStartedEventArgs e)
-        {
-            if (_forwardingTable[ProjectStartedEventDescription] == 1)
-            {
-                ForwardToCentralLogger(e);
-            }
-        }
-
-        /// <summary>
-        /// Handler for project finished events
-        /// </summary>
-        /// <param name="sender">sender (should be null)</param>
-        /// <param name="e">event arguments</param>
-        private void ProjectFinishedHandler(object sender, ProjectFinishedEventArgs e)
-        {
-            if (_forwardingTable[ProjectFinishedEventDescription] == 1)
-            {
-                ForwardToCentralLogger(e);
-            }
-        }
-
-        /// <summary>
-        /// Handler for target started events
-        /// </summary>
-        /// <param name="sender">sender (should be null)</param>
-        /// <param name="e">event arguments</param>
-        private void TargetStartedHandler(object sender, TargetStartedEventArgs e)
-        {
-            if (_forwardingTable[TargetStartedEventDescription] == 1)
-            {
-                ForwardToCentralLogger(e);
-            }
-        }
-
-        /// <summary>
-        /// Handler for target finished events
+        /// Handler for build events
         /// </summary>
         /// <param name="sender">sender (should be null)</param>
         /// <param name="e">event arguments</param>
-        private void TargetFinishedHandler(object sender, TargetFinishedEventArgs e)
+        private void ForwardEvent(object sender, BuildEventArgs e)
         {
-            if (_forwardingTable[TargetFinishedEventDescription] == 1)
-            {
-                ForwardToCentralLogger(e);
-            }
+            ForwardToCentralLogger(e);
         }
 
-        /// <summary>
-        /// Handler for task started events
-        /// </summary>
-        /// <param name="sender">sender (should be null)</param>
-        /// <param name="e">event arguments</param>
-        private void TaskStartedHandler(object sender, TaskStartedEventArgs e)
+        private void BuildStatusHandler(object sender, BuildStatusEventArgs e)
         {
-            if (_forwardingTable[TaskStartedEventDescription] == 1)
+            if (e is ProjectEvaluationStartedEventArgs || e is ProjectEvaluationFinishedEventArgs)
             {
                 ForwardToCentralLogger(e);
             }
         }
 
         /// <summary>
-        /// Handler for task finished events
+        /// Tailored handler for BuildMessageEventArgs - fine tunes forwarding of messages.
         /// </summary>
         /// <param name="sender">sender (should be null)</param>
         /// <param name="e">event arguments</param>
-        private void TaskFinishedHandler(object sender, TaskFinishedEventArgs e)
-        {
-            if (_forwardingTable[TaskFinishedEventDescription] == 1)
-            {
-                ForwardToCentralLogger(e);
-            }
-        }
-
-        /// <summary>
-        /// Prints an error event
-        /// </summary>
-        private void ErrorHandler(object sender, BuildErrorEventArgs e)
-        {
-            if (_forwardingTable[ErrorEventDescription] == 1)
-            {
-                ForwardToCentralLogger(e);
-            }
-        }
-
-        /// <summary>
-        /// Prints a warning event
-        /// </summary>
-        private void WarningHandler(object sender, BuildWarningEventArgs e)
-        {
-            if (_forwardingTable[WarningEventDescription] == 1)
-            {
-                ForwardToCentralLogger(e);
-            }
-        }
-
-        /// <summary>
-        /// Prints a message event
-        /// </summary>
         private void MessageHandler(object sender, BuildMessageEventArgs e)
         {
-            bool forwardEvent = false;
-
-            if (_forwardingTable[LowMessageEventDescription] == 1 && e.Importance == MessageImportance.Low)
-            {
-                forwardEvent = true;
-            }
-            else if (_forwardingTable[NormalMessageEventDescription] == 1 && e.Importance == MessageImportance.Normal)
-            {
-                forwardEvent = true;
-            }
-            else if (_forwardingTable[HighMessageEventDescription] == 1 && e.Importance == MessageImportance.High)
-            {
-                forwardEvent = true;
-            }
-            else if (_forwardingTable[CommandLineDescription] == 1 && e is TaskCommandLineEventArgs)
-            {
-                forwardEvent = true;
-            }
+            bool forwardEvent =
+                (_forwardLowImportanceMessages && e.Importance == MessageImportance.Low) ||
+                (_forwardNormalImportanceMessages && e.Importance == MessageImportance.Normal) ||
+                (_forwardHighImportanceMessages && e.Importance == MessageImportance.High) ||
+                (_forwardTaskCommandLine && e is TaskCommandLineEventArgs);
 
             if (forwardEvent)
             {
@@ -477,32 +359,13 @@ private void MessageHandler(object sender, BuildMessageEventArgs e)
             }
         }
 
-        /// <summary>
-        /// Prints a custom event
-        /// </summary>
-        private void CustomEventHandler(object sender, CustomBuildEventArgs e)
-        {
-            if (_forwardingTable[CustomEventDescription] == 1)
-            {
-                ForwardToCentralLogger(e);
-            }
-        }
-
-        private void BuildStatusHandler(object sender, BuildStatusEventArgs e)
-        {
-            if (_forwardingTable[ProjectEvaluationEventDescription] == 1 && (e is ProjectEvaluationStartedEventArgs || e is ProjectEvaluationFinishedEventArgs))
-            {
-                ForwardToCentralLogger(e);
-            }
-        }
-
         /// <summary>
         /// Forwards the specified event.
         /// </summary>
         /// <param name="e">The <see cref="BuildEventArgs"/> to forward.</param>
         protected virtual void ForwardToCentralLogger(BuildEventArgs e)
         {
-            _buildEventRedirector.ForwardEvent(e);
+            _buildEventRedirector?.ForwardEvent(e);
         }
 
         /// <summary>
@@ -525,7 +388,7 @@ private bool IsVerbosityAtLeast(LoggerVerbosity checkVerbosity)
         /// <summary>
         /// Console logger parameters.
         /// </summary>
-        private string _loggerParameters = null;
+        private string? _loggerParameters = null;
 
         /// <summary>
         /// Console logger parameters delimiters.
@@ -561,17 +424,10 @@ private bool IsVerbosityAtLeast(LoggerVerbosity checkVerbosity)
 
         #region Per-build Members
 
-        /// <summary>
-        /// A table indicating if a particular event type should be forwarded
-        /// The value is type int rather than bool to avoid the problem of JITting generics.
-        /// <see cref="Dictionary{String, Int}" /> is already compiled into mscorlib.
-        /// </summary>
-        private Dictionary<string, int> _forwardingTable;
-
         /// <summary>
         /// A pointer to the central logger
         /// </summary>
-        private IEventRedirector _buildEventRedirector;
+        private IEventRedirector? _buildEventRedirector;
 
         /// <summary>
         /// Indicates if the events to forward are being set by the parameters sent to the logger
@@ -600,6 +456,26 @@ private bool IsVerbosityAtLeast(LoggerVerbosity checkVerbosity)
         /// </summary>
         private bool _showCommandLine = false;
 
+        /// <summary>
+        /// Fine-tuning of BuildMessageEventArgs forwarding
+        /// </summary>
+        private bool _forwardLowImportanceMessages;
+
+        /// <summary>
+        /// Fine-tuning of BuildMessageEventArgs forwarding
+        /// </summary>
+        private bool _forwardNormalImportanceMessages;
+
+        /// <summary>
+        /// Fine-tuning of BuildMessageEventArgs forwarding
+        /// </summary>
+        private bool _forwardHighImportanceMessages;
+
+        /// <summary>
+        /// Fine-tuning of BuildMessageEventArgs forwarding
+        /// </summary>
+        private bool _forwardTaskCommandLine;
+
         /// <summary>
         /// Id of the node the logger is attached to
         /// </summary>
diff --git a/src/Build/Logging/DistributedLoggers/DistributedFileLogger.cs b/src/Build/Logging/DistributedLoggers/DistributedFileLogger.cs
index 21271e12fb0..67b1d939f93 100644
--- a/src/Build/Logging/DistributedLoggers/DistributedFileLogger.cs
+++ b/src/Build/Logging/DistributedLoggers/DistributedFileLogger.cs
@@ -68,7 +68,7 @@ private void ParseFileLoggerParameters()
         /// </summary>
         private void ApplyFileLoggerParameter(string parameterName, string parameterValue)
         {
-            if (String.Equals("LOGFILE", parameterName, StringComparison.OrdinalIgnoreCase))
+            if (string.Equals("LOGFILE", parameterName, StringComparison.OrdinalIgnoreCase))
             {
                 if (string.IsNullOrEmpty(parameterValue))
                 {
@@ -104,7 +104,7 @@ public void Initialize(IEventSource eventSource)
                 _nodeFileLogger = new FileLogger();
                 string extension = Path.GetExtension(_logFile);
                 // If there is no extension add a default of .log to it
-                if (String.IsNullOrEmpty(extension))
+                if (string.IsNullOrEmpty(extension))
                 {
                     _logFile += ".log";
                     extension = ".log";
diff --git a/src/Build/Logging/LoggerDescription.cs b/src/Build/Logging/LoggerDescription.cs
index a66ac147253..ef3a68959ab 100644
--- a/src/Build/Logging/LoggerDescription.cs
+++ b/src/Build/Logging/LoggerDescription.cs
@@ -89,7 +89,7 @@ internal int LoggerId
         /// <summary>
         /// This property generates the logger name by appending together the class name and assembly name
         /// </summary>
-        internal string Name
+        public string Name
         {
             get
             {
@@ -104,7 +104,7 @@ internal string Name
                 }
                 else
                 {
-                    return _loggerAssembly.AssemblyFile;
+                    return _loggerAssembly.AssemblyFile ?? _loggerAssembly.AssemblyName;
                 }
             }
         }
diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index 436bf030051..6d41abd7891 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -1,11 +1,10 @@
-Ôªø<Project Sdk="Microsoft.NET.Sdk">
+<Project Sdk="Microsoft.NET.Sdk">
 
   <Import Project="..\Shared\FileSystemSources.proj" />
   <Import Project="..\Shared\DebuggingSources.proj" />
 
   <PropertyGroup>
     <TargetFrameworks>$(FullFrameworkTFM);$(LatestDotNetCoreForMSBuild)</TargetFrameworks>
-    <TargetFrameworks Condition="'$(MonoBuild)'=='true'">$(RuntimeOutputTargetFrameworks)</TargetFrameworks>
     <RootNamespace>Microsoft.Build</RootNamespace>
     <AssemblyName>Microsoft.Build</AssemblyName>
 
@@ -15,7 +14,9 @@
     <EnableDefaultItems>false</EnableDefaultItems>
 
     <GenerateReferenceAssemblySource>true</GenerateReferenceAssemblySource>
-    <CreateTlb>true</CreateTlb>
+    <!-- Do not create Tlbs when building in .NET product mode. The packages are not shipped to VS,
+         only their contents redisted within the SDK. -->
+    <CreateTlb Condition="'$(DotNetBuild)' != 'true'">true</CreateTlb>
     <IsPackable>true</IsPackable>
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is used to create, edit, and evaluate MSBuild projects.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
@@ -35,7 +36,6 @@
     <PackageReference Include="System.Security.Principal.Windows" />
     <PackageReference Include="System.Threading.Tasks.Dataflow" />
 
-    <PackageReference Include="System.Reflection.Metadata" Condition="'$(MonoBuild)' == 'true'" />
     <PackageReference Include="System.Reflection.MetadataLoadContext" />
 
     <PackageReference Include="Microsoft.IO.Redist" Condition="'$(FeatureMSIORedist)' == 'true'" />
@@ -160,10 +160,6 @@
     <Compile Include="FileAccess\ProcessData.cs" />
     <Compile Include="FileAccess\ReportedFileOperation.cs" />
     <Compile Include="FileAccess\RequestedAccess.cs" />
-    <Compile Include="Logging\BinaryLogger\ExtendedDataFields.cs" />
-    <Compile Include="Logging\BinaryLogger\IBuildEventArgsReaderNotifications.cs" />
-    <Compile Include="Logging\BinaryLogger\IBuildEventStringsReader.cs" />
-    <Compile Include="Logging\BinaryLogger\StringReadEventArgs.cs" />
     <Compile Include="Utilities\ReaderWriterLockSlimExtensions.cs" />
     <Compile Include="BackEnd\Node\ConsoleOutput.cs" />
     <Compile Include="BackEnd\Node\PartialBuildTelemetry.cs" />
@@ -251,6 +247,7 @@
     <Compile Include="Collections\RetrievableEntryHashSet\BitHelper.cs" />
     <Compile Include="Collections\RetrievableEntryHashSet\HashSetDebugView.cs" />
     <Compile Include="Collections\RetrievableEntryHashSet\HashHelpers.cs" />
+    <Compile Include="Collections\RetrievableEntryHashSet\IRetrievableEntryHashSet.cs" />
     <Compile Include="Construction\ImplicitImportLocation.cs" />
     <Compile Include="Construction\ProjectSdkElement.cs" />
     <Compile Include="Definition\ProjectOptions.cs" />
@@ -369,6 +366,8 @@
     <Compile Include="Collections\CopyOnWritePropertyDictionary.cs" />
     <Compile Include="..\Shared\MSBuildNameIgnoreCaseComparer.cs" />
     <Compile Include="Collections\HashTableUtility.cs" />
+    <Compile Include="Collections\IConstrainableDictionary.cs" />
+    <Compile Include="Collections\IItemDictionary.cs" />
     <Compile Include="Collections\ItemDictionary.cs" />
     <Compile Include="Collections\IImmutable.cs" />
     <Compile Include="Collections\MultiDictionary.cs" />
@@ -491,6 +490,9 @@
     <Compile Include="Globbing\IMSBuildGlob.cs" />
     <Compile Include="Globbing\Visitor\ParsedGlobCollector.cs" />
     <!-- #### INSTANCE MODEL ### -->
+    <Compile Include="Instance\IImmutableInstanceProvider.cs" />
+    <Compile Include="Instance\ImmutableProjectCollections\ImmutableElementCollectionConverter.cs" />
+    <Compile Include="Instance\ImmutableProjectCollections\ImmutableItemDictionary.cs" />
     <Compile Include="Instance\ReflectableTaskPropertyInfo.cs" />
     <Compile Include="Instance\HostServices.cs" />
     <Compile Include="Instance\ProjectTargetInstanceChild.cs" />
@@ -527,6 +529,8 @@
     <Compile Include="Logging\BinaryLogger\BuildEventArgsReader.cs" />
     <Compile Include="Logging\BinaryLogger\BuildEventArgsWriter.cs" />
     <Compile Include="Logging\BinaryLogger\ProjectImportsCollector.cs" />
+    <Compile Include="Logging\BinaryLogger\ExtendedDataFields.cs" />
+    <Compile Include="Logging\BinaryLogger\Postprocessing\*.cs" />
     <Compile Include="Logging\ConsoleLogger.cs" />
     <Compile Include="Logging\DistributedLoggers\DistributedFileLogger.cs" />
     <Compile Include="Logging\DistributedLoggers\ConfigurableForwardingLogger.cs" />
@@ -670,4 +674,56 @@
       <LogicalName>$(AssemblyName).Strings.shared.resources</LogicalName>
     </EmbeddedResource>
   </ItemGroup>
+
+  <PropertyGroup>
+    <NuGetFrameworkWrapperRedirects_FilePath>$(IntermediateOutputPath)NuGetFrameworkWrapper.redirects.cs</NuGetFrameworkWrapperRedirects_FilePath>
+  </PropertyGroup>
+
+  <!-- Extract binding redirects for MSBuild and dependencies from MSBuild.exe.config into a source file.
+       This allows us to create secondary AppDomains with the same redirects at run-time, see
+       https://github.com/dotnet/msbuild/blob/main/documentation/NETFramework-NGEN.md#nugetframeworks -->
+  <Target Name="GenerateAppDomainConfig"
+          Inputs="..\MSBuild\app.config;..\MSBuild\app.amd64.config;$(MSBuildThisFileFullPath)"
+          Outputs="$(NuGetFrameworkWrapperRedirects_FilePath)"
+          BeforeTargets="CoreCompile"
+          Condition="'$(FeatureAppDomain)' == 'true'">
+    <PropertyGroup>
+      <BindingRedirectNamespace>&lt;Namespace Prefix='ns' Uri='urn:schemas-microsoft-com:asm.v1' /&gt;</BindingRedirectNamespace>
+      <BindingRedirectXPath>/configuration/runtime/ns:assemblyBinding/*</BindingRedirectXPath>
+    </PropertyGroup>
+
+    <XmlPeek XmlInputPath="..\MSBuild\app.config" Query="$(BindingRedirectXPath)" Namespaces="$(BindingRedirectNamespace)">
+      <Output TaskParameter="Result" ItemName="BindingRedirects32" />
+    </XmlPeek>
+    <XmlPeek XmlInputPath="..\MSBuild\app.amd64.config" Query="$(BindingRedirectXPath)" Namespaces="$(BindingRedirectNamespace)">
+      <Output TaskParameter="Result" ItemName="BindingRedirects64" />
+    </XmlPeek>
+
+    <PropertyGroup>
+      <NuGetFrameworkWrapperRedirects_Content><![CDATA[
+// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+namespace Microsoft.Build.Evaluation%3B;
+
+[System.CodeDom.Compiler.GeneratedCode("GenerateAppDomainConfig", "1.0")]
+internal sealed partial class NuGetFrameworkWrapper
+{
+    private const string _bindingRedirects32 = """;@(BindingRedirects32);"""%3B;
+    private const string _bindingRedirects64 = """;@(BindingRedirects64);"""%3B;
+}
+]]>
+      </NuGetFrameworkWrapperRedirects_Content>
+    </PropertyGroup>
+
+    <WriteLinesToFile File="$(NuGetFrameworkWrapperRedirects_FilePath)" Overwrite="true" WriteOnlyWhenDifferent="true" Lines="$(NuGetFrameworkWrapperRedirects_Content)" />
+
+    <ItemGroup>
+      <Compile Remove="$(NuGetFrameworkWrapperRedirects_FilePath)" />
+      <Compile Include="$(NuGetFrameworkWrapperRedirects_FilePath)">
+        <Link>Utilities\NuGetFrameworkWrapper.redirects.cs</Link>
+      </Compile>
+      <FileWrites Include="$(NuGetFrameworkWrapperRedirects_FilePath)" />
+    </ItemGroup>
+  </Target>
 </Project>
diff --git a/src/Build/ObjectModelRemoting/LinkedObjectFactory.cs b/src/Build/ObjectModelRemoting/LinkedObjectFactory.cs
index 4baaa9ace7d..c0165f577a5 100644
--- a/src/Build/ObjectModelRemoting/LinkedObjectFactory.cs
+++ b/src/Build/ObjectModelRemoting/LinkedObjectFactory.cs
@@ -4,6 +4,7 @@
 using System.Collections.Generic;
 using Microsoft.Build.Construction;
 using Microsoft.Build.Evaluation;
+using Microsoft.Build.Execution;
 using Microsoft.Build.Framework;
 
 #nullable disable
@@ -236,20 +237,22 @@ public UsingTaskParameterGroupElement Create(UsingTaskParameterGroupElementLink
         // memory storage of original items (with the Link field) while it is small, some of the MSbuild items can be created
         // in millions so it does adds up otherwise.
 
-        private class LinkedProjectItem : ProjectItem, ILinkableObject
+        private class LinkedProjectItem : ProjectItem, ILinkableObject, IImmutableInstanceProvider<ProjectItemInstance>
         {
             internal LinkedProjectItem(ProjectItemElement xml, Project project, ProjectItemLink link)
                 : base(xml, project)
             {
-                this.Link = link;
+                Link = link;
             }
 
+            public ProjectItemInstance ImmutableInstance { get; set; }
+
             internal override ProjectItemLink Link { get; }
 
             object ILinkableObject.Link => Link;
         }
 
-        private class LinkedProjectItemDefinition : ProjectItemDefinition, ILinkableObject
+        private class LinkedProjectItemDefinition : ProjectItemDefinition, ILinkableObject, IImmutableInstanceProvider<ProjectItemDefinitionInstance>
         {
             internal LinkedProjectItemDefinition(ProjectItemDefinitionLink link, Project project, string itemType)
                 : base(project, itemType)
@@ -257,6 +260,8 @@ internal LinkedProjectItemDefinition(ProjectItemDefinitionLink link, Project pro
                 Link = link;
             }
 
+            public ProjectItemDefinitionInstance ImmutableInstance { get; set; }
+
             internal override ProjectItemDefinitionLink Link { get; }
             object ILinkableObject.Link => Link;
         }
@@ -273,7 +278,7 @@ internal LinkedProjectMetadata(object parent, ProjectMetadataLink link)
             object ILinkableObject.Link => Link;
         }
 
-        private class LinkedProjectProperty : ProjectProperty, ILinkableObject
+        private class LinkedProjectProperty : ProjectProperty, ILinkableObject, IImmutableInstanceProvider<ProjectPropertyInstance>
         {
             internal ProjectPropertyLink Link { get; }
             object ILinkableObject.Link => Link;
@@ -290,6 +295,8 @@ internal LinkedProjectProperty(Project project, ProjectPropertyLink link)
                 Link = link;
             }
 
+            public ProjectPropertyInstance ImmutableInstance { get; set;  }
+
             public override string Name => Link.Name;
 
             public override string UnevaluatedValue
diff --git a/src/Build/Resources/Strings.resx b/src/Build/Resources/Strings.resx
index 119cfeaf410..a037905be7e 100644
--- a/src/Build/Resources/Strings.resx
+++ b/src/Build/Resources/Strings.resx
@@ -469,6 +469,13 @@
     likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
     special exception to abort the build.</comment>
   </data>
+  <data name="FatalErrorWhileLoggingWithInnerException" xml:space="preserve">
+    <value>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</value>
+    <comment>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</comment>
+  </data>
   <data name="General.TwoVectorsMustHaveSameLength">
     <value>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</value>
     <comment>{StrBegin="MSB3094: "}</comment>
@@ -527,6 +534,10 @@
     <value>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</value>
     <comment>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</comment>
   </data>
+  <data name="ImportedProjectFromVSDistribution" xml:space="preserve">
+    <value>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </value>
+    <comment>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</comment>
+  </data>
   <data name="ImportedProjectFromExtensionsPathNotFoundFromAppConfig" xml:space="preserve">
     <value>MSB4226: The imported project "{0}" was not found. Also, tried to find "{1}" in the fallback search path(s) for {2} - {3} . These search paths are defined in "{4}". Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk in one of the search paths.</value>
     <comment>{StrBegin="MSB4226: "}LOCALIZATION: &lt;Import&gt; should not be localized.</comment>
@@ -1324,6 +1335,17 @@
     <value>Could not resolve SDK "{0}". Exactly one of the probing messages below indicates why we could not resolve the SDK. Investigate and resolve that message to correctly specify the SDK.
   {1}</value>
   </data>
+  <data name="SucceededToResolveSDK" xml:space="preserve">
+    <value>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</value>
+  </data>
+  <data name="SDKResolverAttempt" xml:space="preserve">
+    <value>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</value>
+    <comment>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </comment>
+  </data>
   <data name="CouldNotRunNuGetSdkResolver" xml:space="preserve">
     <value>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</value>
   </data>
@@ -1352,7 +1374,7 @@
     <comment>{StrBegin="MSB4068: "}</comment>
   </data>
   <data name="UnsupportedLogFileFormat" xml:space="preserve">
-    <value>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</value>
+    <value>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</value>
     <comment>{StrBegin="MSB4235: "}</comment>
   </data>
   <data name="UnsupportedTaskParameterTypeError" xml:space="preserve">
@@ -1769,12 +1791,6 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
       LOCALIZATION:  Do not localize the word SDK.
     </comment>
   </data>
-  <data name="SdkResolving" xml:space="preserve">
-    <value>Resolving SDK '{0}'...</value>
-    <comment>
-      LOCALIZATION:  Do not localize the word SDK.
-    </comment>
-  </data>
   <data name="ProjectGraphDoesNotSupportProjectReferenceWithToolset" xml:space="preserve">
     <value>MSB4250: ProjectGraph does not support ProjectReference items with the ToolsVersion metadata set. Found ProjectReference "{0}" with ToolsVersion in file "{1}"</value>
     <comment>
@@ -1889,13 +1905,13 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
     <value>Property initial value: $({0})="{1}" Source: {2}</value>
   </data>
   <data name="NuGetAssemblyNotFound" xml:space="preserve">
-    <value>A required NuGet assembly was not found. Expected Path: {0}</value>
+    <value>A required NuGet assembly '{0}' could not be loaded.</value>
   </data>
   <data name="StaticGraphConstructionMetrics" xml:space="preserve">
     <value>Static graph loaded in {0} seconds: {1} nodes, {2} edges</value>
   </data>
   <data name="IsolatedContextDoesNotSupportFileSystem" xml:space="preserve">
-    <value>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</value>
+    <value>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</value>
   </data>
   <data name="LoadingProjectCachePlugin" xml:space="preserve">
     <value>Loading the following project cache plugin: {0}</value>
@@ -2010,10 +2026,79 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
   <data name="ReportFileAccessesX64Only" xml:space="preserve">
     <value>Reporting file accesses is only currently supported using the x64 flavor of MSBuild.</value>
   </data>
+  <data name="Binlog_Source_MultiSubscribeError" xml:space="preserve">
+    <value>Structured events and raw events cannot be replayed at the same time.</value>
+  </data>
+  <data name="Binlog_Source_MissingSubscribeError" xml:space="preserve">
+    <value>No subscribers for any events.</value>
+  </data>
+  <data name="Binlog_Source_VersionUninitialized" xml:space="preserve">
+    <value>Version info not yet initialized. Replay must be called first.</value>
+  </data>
+  <data name="Binlog_MissingRecoverableErrorSubscribeError" xml:space="preserve">
+    <value>Subscription to RecoverableReadError is mandatory during forward compatible reading.</value>
+  </data>
+  <data name="Binlog_ImportFileSizeError" xml:space="preserve">
+    <value>Imported files archive exceeded 2GB limit and it's not embedded.</value>
+  </data>
+  <data name="Binlog_FwdCompatUnsupported" xml:space="preserve">
+    <value>Forward compatible reading is not supported for file format version {0} (needs >= 18).</value>
+    <comment>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </comment>
+  </data>
+  <data name="Binlog_ReaderSkippingRecord" xml:space="preserve">
+    <value>Skipping the record.</value>
+  </data>
+  <data name="Binlog_ReaderMismatchedRead" xml:space="preserve">
+    <value>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</value>
+    <comment>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </comment>
+  </data>
+  <data name="Binlog_ReaderUnknownType" xml:space="preserve">
+    <value>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</value>
+    <comment>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </comment>
+  </data>
+  <data name="Binlog_ReaderUnderRead" xml:space="preserve">
+    <value>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</value>
+    <comment>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </comment>
+  </data>
+  <data name="Binlog_ArchiveFile_AcquiredAsStream" xml:space="preserve">
+    <value>Content already acquired as StreamReader via GetContentReader.</value>
+  </data>
+  <data name="Binlog_ArchiveFile_AcquiredAsString" xml:space="preserve">
+    <value>Content already acquired as string via GetContent or initialized as string only.</value>
+  </data>
+  <data name="Binlog_ArchiveFile_NotSetAfterAcquire" xml:space="preserve">
+    <value>ArchiveFile was obtained, but the final edited version was not set.</value>
+  </data>
+  <data name="Binlog_StreamUtils_MustBeReadable" xml:space="preserve">
+    <value>Stream must be readable.</value>
+  </data>
+  <data name="Binlog_StreamUtils_SeekNonOrigin" xml:space="preserve">
+    <value>Only seeking from SeekOrigin.Current is supported.</value>
+  </data>
+  <data name="Binlog_StreamUtils_SetLengthUnsupported" xml:space="preserve">
+    <value>Changing the stream length is not supported.</value>
+  </data>
+  <data name="Binlog_StreamUtils_WriteUnsupported" xml:space="preserve">
+    <value>Writing is not supported.</value>
+  </data>
+  <data name="Binlog_StreamUtils_UnsupportedSkipOffset" xml:space="preserve">
+    <value>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</value>
+    <comment>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </comment>
+  </data>
   <!--
         The Build message bucket is: MSB4000 - MSB4999
 
-        Next message code should be MSB4278
+        Next message code should be MSB4279
 
         Don't forget to update this comment after using a new code.
   -->
diff --git a/src/Build/Resources/xlf/Strings.cs.xlf b/src/Build/Resources/xlf/Strings.cs.xlf
index 93df3aa370f..83d03235b23 100644
--- a/src/Build/Resources/xlf/Strings.cs.xlf
+++ b/src/Build/Resources/xlf/Strings.cs.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">Obsah se u≈æ z√≠skal jako StreamReader p≈ôes GetContentReader.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">Obsah se u≈æ z√≠skal jako ≈ôetƒõzec p≈ôes GetContent nebo se inicializoval jenom jako ≈ôetƒõzec.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">Byla z√≠sk√°na hodnota ArchiveFile, nebyla ale nastavena koneƒçn√° upraven√° verze.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">ƒåten√≠ s dop≈ôednou kompatibilitou nen√≠ podporov√°no pro form√°t souboru verze {0} (mus√≠ b√Ωt &gt;= 18).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">Archiv importovan√Ωch soubor≈Ø p≈ôekroƒçil limit 2 GB a nen√≠ vlo≈æen√Ω.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">Odbƒõr ud√°losti RecoverableReadError je p≈ôi ƒçten√≠ s dop≈ôednou kompatibilitou povinn√Ω.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">Z√°znam BuildEvent s ƒç√≠slem {0} (serializovan√° velikost: {1}) se pokusil prov√©st nepovolen√© ƒçten√≠ (podrobnosti: {2}: {3}).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">Z√°znam se p≈ôeskakuje.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">Bylo oƒçek√°v√°no, ≈æe z√°znam BuildEvent s ƒç√≠slem {0} p≈ôeƒçte ze streamu p≈ôesnƒõ {1} bajt≈Ø, ale m√≠sto toho p≈ôeƒçetl: {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">Z√°znam BuildEvent s ƒç√≠slem {0} (serializovan√° velikost: {1}) m√° nepodporovan√Ω typ: {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">≈Ω√°dn√≠ odbƒõratel√© pro ≈æ√°dn√© ud√°losti</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">Strukturovan√© ud√°losti a nezpracovan√© ud√°losti nelze opƒõtovnƒõ p≈ôehr√°t souƒçasnƒõ.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">Informace o verzi se je≈°tƒõ neinicializovaly. Jako prvn√≠ se mus√≠ volat opƒõtovn√© p≈ôehr√°n√≠ (Replay).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">Stream mus√≠ b√Ωt ƒçiteln√Ω.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">Podporuje se jenom hled√°n√≠ ze SeekOrigin.Current.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">Zmƒõna d√©lky streamu nen√≠ podporov√°na.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">Do≈°lo k pokusu o p≈ôeskoƒçen√≠ {0} bajt≈Ø. Je povolen pouze nez√°porn√Ω posun a≈æ do hodnoty int.MaxValue.</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">Z√°pis nen√≠ podporov√°n.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">Vytvo≈ôen√≠ ot√°zky SELHALO. Vytv√°≈ôen√≠ bylo p≈ôedƒçasnƒõ ukonƒçeno, proto≈æe se p≈ôi nƒõm narazilo na c√≠l nebo √∫lohu, kter√© nebyly aktu√°ln√≠.</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: Sestavov√°n√≠ bylo neoƒçek√°vanƒõ zastaveno z d≈Øvodu neoƒçek√°van√© chyby protokolovac√≠ho n√°stroje.
+    {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: Polo≈æka {2} odkazuje na {0} polo≈æek a polo≈æka {3} odkazuje na {1} polo≈æek. Mus√≠ m√≠t stejn√Ω poƒçet polo≈æek.</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: Na pozici {1} podm√≠nky {0} je neoƒçek√°van√° mezera. Nezapomnƒõli jste ji odebrat?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: Importovan√Ω soubor ‚Äû{0}‚Äú neexistuje a zd√° se, ≈æe je souƒç√°st√≠ komponenty Visual Studia. Tento soubor m≈Ø≈æe vy≈æadovat MSBuild.exe, aby se mohl √∫spƒõ≈°nƒõ importovat, a proto se nemus√≠ poda≈ôit sestavit v rozhran√≠ p≈ô√≠kazov√©ho ≈ô√°dku dotnet. </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: N√°sleduj√≠c√≠ vstupn√≠ soubory mezipamƒõti pro v√Ωsledky neexistuj√≠: {0}</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">Objekty EvaluationContext vytvo≈ôen√© pomoc√≠ SharingPolicy.Isolated nepodporuj√≠ p≈ôed√°v√°n√≠ souborov√©ho syst√©mu MSBuildFileSystemBase.</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">Objekty EvaluationContext vytvo≈ôen√© pomoc√≠ SharingPolicy.Isolated nebo SharingPolicy.SharedSDKCache nepodporuj√≠ p≈ôed√°v√°n√≠ syst√©mu soubor≈Ø MSBuildFileSystemBase.</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">Po≈æadovan√© sestaven√≠ NuGet se nena≈°lo. Oƒçek√°van√° cesta: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">Nepovedlo se naƒç√≠st po≈æadovan√© sestaven√≠ NuGet {0}.</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">P≈ô√≠stupy k soubor≈Øm sestav se v souƒçasn√© dobƒõ podporuj√≠ jenom pomoc√≠ varianty x64 n√°stroje MSBuild.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">P≈ôekladaƒç {0} se pokusil p≈ôelo≈æit sadu SDK {1}.
+Upozornƒõn√≠: {2}
+Chyby: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: Selh√°n√≠ p≈ôekladaƒçe sady SDK: {0}</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">Sada SDK {0} byla √∫spƒõ≈°nƒõ p≈ôelo≈æena p≈ôekladaƒçem {1} na um√≠stƒõn√≠ {2} a verzi {3}.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">√öloha {0} po≈æadovala tento poƒçet jader: {1}. Z√≠skala tento poƒçet jader: {2}. Teƒè pou≈æ√≠v√° celkem tento poƒçet jader: {3}</target>
@@ -1500,7 +1630,7 @@
       </trans-unit>
       <trans-unit id="SolutionVenusProjectSkipped">
         <source>Skipping because the "$(AspNetConfiguration)" configuration is not supported for this web project.  You can use the AspNetConfiguration property to override the configuration used for building web projects, by adding /p:AspNetConfiguration=&lt;value&gt; to the command line. Currently web projects only support Debug and Release configurations.</source>
-        <target state="translated">Vynech√°no, proto≈æe konfigurace "$(AspNetConfiguration)" nen√≠ pro tento webov√Ω projekt podporov√°na. Pomoc√≠ vlastnosti AspNetConfiguration m≈Ø≈æete p≈ôepsat konfiguraci pou≈æ√≠vanou k sestavov√°n√≠ webov√Ωch projekt≈Ø, a to p≈ôid√°n√≠m p≈ô√≠kazu /p:AspNetConfiguration=&lt;hodnota&gt; do p≈ô√≠kazov√©ho ≈ô√°dku. Webov√© projekty nyn√≠ podporuj√≠ pouze konfigurace Debug a Release.</target>
+        <target state="translated">Vynech√°no, proto≈æe konfigurace $(AspNetConfiguration) nen√≠ pro tento webov√Ω projekt podporov√°na. Pomoc√≠ vlastnosti AspNetConfiguration m≈Ø≈æete p≈ôepsat konfiguraci pou≈æ√≠vanou k sestavov√°n√≠ webov√Ωch projekt≈Ø, a to p≈ôid√°n√≠m p≈ô√≠kazu /p:AspNetConfiguration=&lt;hodnota&gt; do p≈ô√≠kazov√©ho ≈ô√°dku. Webov√© projekty nyn√≠ podporuj√≠ pouze konfigurace Debug a Release.</target>
         <note>
     UE: This is not an error, so doesn't need an error code.
     LOCALIZATION: Do NOT localize "AspNetConfiguration", "Debug", "Release".
@@ -2490,8 +2620,8 @@ Vyu≈æit√≠:          Pr≈Ømƒõrn√© vyu≈æit√≠ {0}: {1:###.0}</target>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: Verze form√°tu souboru protokolu je {0}, ale tato verze n√°stroje MSBuild podporuje jenom verze do {1}.</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: Verze form√°tu souboru protokolu je {0} s minim√°ln√≠ po≈æadovanou verz√≠ ƒçteƒçky {1}, zat√≠mco tato verze n√°stroje MSBuild podporuje pouze verze do {2}.</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Vyu≈æit√≠:          Pr≈Ømƒõrn√© vyu≈æit√≠ {0}: {1:###.0}</target>
         <target state="translated">MSB4241: Odkaz na sadu SDK {0} verze {1} byl m√≠sto toho p≈ôelo≈æen na verzi {2}. Pokud neaktualizujete odkazovanou verzi tak, aby se shodovala, m≈Ø≈æe se pou≈æ√≠vat jin√° verze, ne≈æ kterou oƒçek√°v√°te.</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">P≈ôekl√°d√° se sada SDK {0}...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index 0ac225d5314..3001fd096d9 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">Inhalt, der bereits als ‚ÄûStreamReader‚Äú √ºber ‚ÄûGetContentReader‚Äú abgerufen wurde.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">Inhalt, der bereits als Zeichenfolge √ºber ‚ÄûGetContent‚Äù abgerufen oder nur als Zeichenfolge initialisiert wurde.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">‚ÄûArchiveFile‚Äú wurde abgerufen, aber die endg√ºltige bearbeitete Version wurde nicht festgelegt.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">Aufw√§rtskompatibles Lesen wird f√ºr Dateiformatversion {0} nicht unterst√ºtzt (mindestens 18 erforderlich).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">Das Archiv importierter Dateien hat das Limit von 2 GB √ºberschritten und ist nicht eingebettet.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">Das Abonnement von ‚ÄûRecoverableReadError‚Äú ist f√ºr aufw√§rtskompatible Lesevorg√§nge obligatorisch.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">Der BuildEvent-Datensatz mit der Nummer{0} (serialisierte Gr√∂√üe: {1}) hat versucht, unzul√§ssige Lesevorg√§nge auszuf√ºhren (Details: {2}: {3}).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">Der Datensatz wird √ºbersprungen.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">Der BuildEvent-Datensatz mit der Nummer {0} sollte genau {1} Bytes aus dem Datenstrom lesen. Gelesen wurden stattdessen jedoch {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">Der BuildEvent-Datensatz mit der Nummer {0} (serialisierte Gr√∂√üe: {1}) weist einen nicht unterst√ºtzten Typ auf: {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">Keine Abonnenten f√ºr Ereignisse.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">Strukturierte Ereignisse und unformatierte Ereignisse k√∂nnen nicht gleichzeitig wiedergegeben werden.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">Versionsinformationen wurden noch nicht initialisiert. Die Wiedergabe muss zuerst aufgerufen werden.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">Der Datenstrom muss lesbar sein.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">Es wird nur die Suche von ‚ÄûSeekOrigin.Current‚Äú unterst√ºtzt.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">Das √Ñndern der Datenstroml√§nge wird nicht unterst√ºtzt.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">Es wurde versucht, {0} Bytes zu √ºberspringen. Nur nicht negativer Offset bis ‚Äûint. MaxValue‚Äú ist zul√§ssig.</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">Schreibvorg√§nge werden nicht unterst√ºtzt.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">Fehler beim Erstellen der Frage. Der Build wurde fr√ºh beendet, da ein Ziel oder eine Aufgabe gefunden wurde, die nicht aktuell war.</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: Der Buildvorgang wurde aufgrund eines unerwarteten Protokollierungsfehlers unerwartet beendet.
+    {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: "{2}" verweist auf {0} Element(e), und "{3}" verweist auf {1} Element(e). Die Anzahl von Elementen muss identisch sein.</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: Unerwartetes Leerzeichen an Position "{1}" der Bedingung "{0}". Haben Sie vergessen, ein Leerzeichen zu entfernen?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: Die importierte Datei ‚Äû{0}‚Äú ist nicht vorhanden und scheint Teil einer Visual Studio Komponente zu sein. Diese Datei erfordert m√∂glicherweise ‚ÄûMSBuild.exe‚Äú, um erfolgreich importiert zu werden, und kann daher m√∂glicherweise nicht in der dotnet-CLI erstellt werden. </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: Die folgenden Cachedateien f√ºr Eingabeergebnisse sind nicht vorhanden: "{0}"</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">Die √úbergabe eines MSBuildFileSystemBase-Dateisystems an EvaluationContext-Objekte, die mit "SharingPolicy.Isolated" erstellt wurden, wird nicht unterst√ºtzt.</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">Die √úbergabe eines MSBuildFileSystemBase-Dateisystems an EvaluationContext-Objekte, die mit "SharingPolicy.Isolated" oder "SharingPolicy.SharedSDKCache" erstellt wurden, wird nicht unterst√ºtzt.</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">Eine erforderliche NuGet-Assembly wurde nicht gefunden. Erwarteter Pfad: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">Eine erforderliche NuGet-Assembly "{0}" konnte nicht geladen werden.</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">Das Melden von Dateizugriffen wird derzeit nur mit der x64-Variante von MSBuild unterst√ºtzt.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">Der Konfliktl√∂ser ‚Äû{0}‚Äú hat versucht, das SDK ‚Äû{1}‚Äú aufzul√∂sen.
+Warnungen: {2}
+Fehler: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: Fehler bei SDK-Resolver: "{0}"</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">Das SDK ‚Äû{0}‚Äú wurde vom Konfliktl√∂ser ‚Äû{1}‚Äú erfolgreich mit dem Speicherort ‚Äû{2}‚Äú und der Version ‚Äû{3}‚Äú aufgel√∂st.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">Die Aufgabe "{0}" hat {1} Kerne angefordert und {2} Kerne erhalten und belegt jetzt insgesamt {3} Kerne.</target>
@@ -492,7 +622,7 @@
       <trans-unit id="UnhandledMSBuildError">
         <source>This is an unhandled exception in MSBuild -- PLEASE UPVOTE AN EXISTING ISSUE OR FILE A NEW ONE AT https://aka.ms/msbuild/unhandled
     {0}</source>
-        <target state="translated">Dies ist ein Ausnahmefehler in MSBuild. STIMMEN SIE EINEM VORHANDENEN ISSUE ZU, ODER ERSTELLEN SIE EIN NEUES ISSUE UNTER https://aka.ms/msbuild/unhandled
+        <target state="translated">Dies ist eine nicht behandelte Ausnahme in MSBuild. RUFEN SIE EIN VORHANDENES PROBLEM AUF, ODER ERSTELLEN SIE EIN NEUES UNTER https://aka.ms/msbuild/unhandled
     {0}</target>
         <note />
       </trans-unit>
@@ -2490,8 +2620,8 @@ Auslastung:          {0} Durchschnittliche Auslastung: {1:###.0}</target>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: Die Protokolldatei hat die Formatversion {0}, diese Version von MSBuild unterst√ºtzt jedoch nur Versionen bis zu {1}.</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: Die Version des Protokolldateiformats lautet {0} und die mindestens erforderliche Readerversion ist {1}. Diese Version von MSBuild unterst√ºtzt jedoch nur Versionen bis zu {2}.</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Auslastung:          {0} Durchschnittliche Auslastung: {1:###.0}</target>
         <target state="translated">MSB4241: Der SDK-Verweis "{0}" auf Version "{1}" wurde stattdessen in Version "{2}" aufgel√∂st. Sie k√∂nnten eine andere Version als die erwartete verwenden, wenn Sie die referenzierte Version nicht entsprechend aktualisieren.</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">SDK "{0}" wird aufgel√∂st...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index ad0b6a876a3..f5f6b78041f 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">Contenido ya adquirido como StreamReader a trav√©s de GetContentReader.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">Contenido ya adquirido como cadena a trav√©s de GetContent o inicializado solo como cadena.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">Se obtuvo ArchiveFile, pero no se estableci√≥ la versi√≥n editada final.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">No se admite la lectura compatible con reenv√≠os para la versi√≥n {0} de formato de archivo (necesita &gt;= 18).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">El archivo de archivos importados super√≥ el l√≠mite de 2¬†GB y no est√° incrustado.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">La suscripci√≥n a RecoverableReadError es obligatoria durante la lectura compatible con versiones posteriores.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">El registro BuildEvent n√∫mero {0} (tama√±o serializado: {1}) intent√≥ realizar lecturas no permitidas (detalles: {2}: {3}).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">Omitiendo el registro.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">Se esperaba que el registro BuildEvent n√∫mero {0} leyera exactamente {1}¬†bytes del flujo, pero en su lugar ley√≥ {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">El registro BuildEvent n√∫mero {0} (tama√±o serializado: {1}) es de tipo no compatible: {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">No hay suscriptores para ning√∫n evento.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">Los eventos estructurados y los eventos sin procesar no se pueden reproducir al mismo tiempo.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">La informaci√≥n de versi√≥n a√∫n no se ha inicializado. La reproducci√≥n debe llamarse primero.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">La secuencia debe ser legible.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">Solo se admite la b√∫squeda desde SeekOrigin.Current.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">No se admite cambiar la longitud de la secuencia.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">Intento de omisi√≥n de {0}¬†bytes, solo se permite un desplazamiento no negativo hasta int.MaxValue.</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">No se admite la escritura.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">La creaci√≥n de la pregunta ha FALLADO. La creaci√≥n finaliz√≥ antes de tiempo al encontrar un objetivo o tarea que no estaba actualizado.</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: La compilaci√≥n se detuvo de manera inesperada por un error inesperado en el registrador.
+    {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: "{2}" hace referencia a {0} elementos y "{3}" hace referencia a {1} elementos. Deben tener el mismo n√∫mero de elementos.</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: Espacio inesperado en la posici√≥n "{1}" de la condici√≥n "{0}". ¬øOlvid√≥ quitar un espacio?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: El archivo importado "{0}" no existe y parece formar parte de un componente de Visual Studio. Este archivo puede requerir MSBuild.exe para poder importarse correctamente, por lo que es posible que no se pueda compilar en la CLI de dotnet. </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: Los siguientes archivos de cach√© de resultados de entrada no existen: "{0}"</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">Los objetos EvaluationContext creados con SharingPolicy.Isolated no admiten que se les pase un sistema de archivos MSBuildFileSystemBase.</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">Los objetos EvaluationContext creados con SharingPolicy.Isolated o SharingPolicy.SharedSDKCache no admiten que se pase un sistema de archivos MSBuildFileSystemBase.</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">No se encontr√≥ un ensamblado de NuGet necesario. Ruta de acceso esperada: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">No se pudo cargar un ensamblado NuGet necesario "{0}".</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">Los accesos a archivos de informes solo se admiten actualmente con el tipo x64 de MSBuild.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">El resolvedor "{0}" intent√≥ resolver el SDK "{1}".
+Advertencias: {2}
+Errores: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: Error del solucionador del SDK: "{0}"</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">El SDK "{0}" se resolvi√≥ correctamente mediante el resolvedor "{1}" a la ubicaci√≥n "{2}" y la versi√≥n "{3}".</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">La tarea "{0}" solicit√≥ {1}¬†n√∫cleos, adquiri√≥ {2}¬†n√∫cleos y ahora retiene un total de {3}¬†n√∫cleos.</target>
@@ -2490,8 +2620,8 @@ Utilizaci√≥n:          Utilizaci√≥n media de {0}: {1:###.0}</target>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: La versi√≥n del formato del archivo de registro es {0}, mientras que la versi√≥n de MSBuild solo admite versiones hasta {1}.</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: la versi√≥n del formato del archivo de registro es {0} con la versi√≥n m√≠nima necesaria del lector {1}, mientras que esta versi√≥n de MSBuild solo admite versiones de hasta {2}.</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Utilizaci√≥n:          Utilizaci√≥n media de {0}: {1:###.0}</target>
         <target state="translated">MSB4241: La referencia del SKD "{0}", versi√≥n "{1}", se resolvi√≥ en la versi√≥n "{2}". Podr√≠a estar utilizando una versi√≥n diferente de la esperada si no actualiza la versi√≥n de referencia para que coincida.</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">Resolviendo SDK "{0}"...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index 15ca23b22a4..28c5c4c14b9 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">Contenu d√©j√† acquis en tant que StreamReader par le biais de GetContentReader.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">Contenu d√©j√† acquis en tant que cha√Æne par le biais de GetContent ou initialis√© en tant que cha√Æne uniquement.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">ArchiveFile a √©t√© obtenu, mais la version modifi√©e finale n‚Äôa pas √©t√© d√©finie.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">La lecture compatible avec le transfert n‚Äôest pas prise en charge pour la version de format de fichier {0} (n√©cessite &gt;= 18).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">L‚Äôarchive des fichiers import√©s a d√©pass√© la limite de 2¬†Go et n‚Äôest pas incorpor√©e.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">L‚Äôabonnement √† RecoverableReadError est obligatoire pendant la lecture compatible avec le transfert.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">Le num√©ro d‚Äôenregistrement BuildEvent {0} (taille s√©rialis√©e¬†: {1}) a tent√© d‚Äôeffectuer des lectures non autoris√©es (d√©tails¬†: {2}¬†: {3}).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">L‚Äôenregistrement est ignor√©.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">Le num√©ro d‚Äôenregistrement BuildEvent {0} √©tait cens√© lire exactement {1}¬†octets du flux, mais lire {2} √† la place.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">Le type du num√©ro d‚Äôenregistrement BuildEvent {0} (taille s√©rialis√©e¬†: {1}) n‚Äôest pas pris en charge¬†: {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">Aucun(e) abonn√©(e) pour les √©v√©nements.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">Les √©v√©nements structur√©s et les √©v√©nements bruts ne peuvent pas √™tre relus en m√™me temps.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">Les informations de version ne sont pas encore initialis√©es. La relecture doit d‚Äôabord √™tre appel√©e.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">Le flux doit √™tre lisible.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">Seule la recherche √† partir de SeekOrigin.Current est prise en charge.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">La modification de la longueur du flux n‚Äôest pas prise en charge.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">Tentative d‚Äôomission de {0}¬†octets, seul un d√©calage non n√©gatif vers le haut jusqu‚Äô√† int. MaxValue est autoris√©.</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">L‚Äô√©criture n‚Äôest pas recommand√©e.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">√âCHEC de la g√©n√©ration de la question. La g√©n√©ration s‚Äôest arr√™t√©e t√¥t, car elle a rencontr√© une cible ou une t√¢che qui n‚Äô√©tait pas √† jour.</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: Arr√™t inattendu de la g√©n√©ration √† cause d‚Äôune d√©faillance inattendue du journal.
+    {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: "{2}" fait r√©f√©rence √† {0} √©l√©ment(s) et "{3}", √† {1} √©l√©ment(s). Ils doivent avoir le m√™me nombre d'√©l√©ments.</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: espace inattendu √† la position "{1}" de la condition "{0}". Avez-vous oubli√© de supprimer un espace¬†?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: le fichier import√© ¬´¬†{0}¬†¬ª n‚Äôexiste pas et semble faire partie d‚Äôun composant Visual Studio. Ce fichier peut n√©cessiter MSBuild.exe afin d‚Äô√™tre import√© avec succ√®s, et peut donc ne pas √™tre g√©n√©r√© dans l‚Äôinterface CLI dotnet. </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: Les fichiers cache des r√©sultats d'entr√©e suivants n'existent pas¬†: "{0}"</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">Les objets EvaluationContext cr√©√©s avec SharingPolicy.Isolated ne prennent pas en charge le passage d'un syst√®me de fichiers MSBuildFileSystemBase.</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">Les objets EvaluationContext cr√©√©s avec SharingPolicy.Isolated ou SharingPolicy.SharedSDKCache ne prennent pas en charge le passage √† un syst√®me de fichiers MSBuildFileSystemBase.</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">Un assembly NuGet obligatoire est introuvable. Chemin attendu¬†: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">Impossible de charger une assembl√©e NuGet ¬´{0}¬ª requise.</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">Les acc√®s aux fichiers de cr√©ation de rapports sont uniquement pris en charge √† l‚Äôaide de la saveur x64 de MSBuild.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">Le programme de r√©solution ¬´¬†{0}¬†¬ª a tent√© de r√©soudre le SDK ¬´¬†{1}¬†¬ª.
+Avertissements¬†: {2}
+Erreurs¬†: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: √âchec du Programme de R√©solution SDK : ¬´{0}¬ª</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">Le ¬´¬†{0}¬†¬ª SDK a √©t√© r√©solu par le programme de r√©solution de ¬´¬†{1}¬†¬ª en ¬´¬†{2}¬†¬ª d‚Äôemplacement et en version ¬´¬†{3}¬†¬ª.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">La t√¢che "{0}" a demand√© {1} c≈ìurs et a obtenu {2} c≈ìurs. Elle d√©tient d√©sormais {3} c≈ìurs au total.</target>
@@ -492,7 +622,7 @@
       <trans-unit id="UnhandledMSBuildError">
         <source>This is an unhandled exception in MSBuild -- PLEASE UPVOTE AN EXISTING ISSUE OR FILE A NEW ONE AT https://aka.ms/msbuild/unhandled
     {0}</source>
-        <target state="translated">Il s‚Äôagit d‚Äôune exception non prise en charge dans MSBuild¬†‚Äì‚Äì VOTEZ POUR UN PROBL√àME EXISTANT OU CR√âEZ-EN UN SUR https://aka.ms/msbuild/unhandled
+        <target state="translated">Il s‚Äôagit d‚Äôune exception non g√©r√©e dans MSBuild¬†‚Äì‚Äì VOTEZ POUR UN PROBL√àME EXISTANT OU ENTREZ UN NOUVEAU FICHIER √Ä https://aka.ms/msbuild/unhandled.
     {0}</target>
         <note />
       </trans-unit>
@@ -2490,8 +2620,8 @@ Utilisation¬†:          {0} Utilisation moyenne¬†: {1:###.0}</target>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: Le format du fichier journal correspond √† la version {0}, alors que cette version de MSBuild ne prend en charge que les versions allant jusqu'√† {1}.</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: Le format du fichier journal correspond √† la version {0} avec la version minimale requise du lecteur {1}, alors que cette version de MSBuild ne prend en charge que les versions allant jusqu‚Äô√† {2}.</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Utilisation¬†:          {0} Utilisation moyenne¬†: {1:###.0}</target>
         <target state="translated">MSB4241: La r√©f√©rence du SDK "{0}" version "{1}" a √©t√© r√©solue avec la version "{2}" √† la place. Vous risquez d'utiliser une version diff√©rente de celle attendue si vous ne mettez pas √† jour la version r√©f√©renc√©e correspondante.</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">R√©solution du SDK '{0}'...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index b8fe5cd168d..db3bb216291 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">Contenuto gi√† acquisito come StreamReader tramite GetContentReader.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">Il contenuto √® gi√† stato acquisito come stringa tramite GetContent o inizializzato solo come stringa.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">ArchiveFile √® stato ottenuto, ma la versione modificata finale non √® stata impostata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">La lettura compatibile con l'inoltro non √® supportata per la versione del formato di file {0} (richiede &gt;= 18).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">L'archivio dei file importati supera il limite di 2 GB e non √® incorporato.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">La sottoscrizione di RecoverableReadError √® obbligatoria durante la lettura compatibile con l'inoltro.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">Il record BuildEvent numero {0} (dimensioni serializzate: {1}) ha provato a eseguire letture non consentite (dettagli: {2}: {3}).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">Il record verr√† ignorato.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">Era previsto che il record BuildEvent numero {0} leggesse esattamente {1} byte dal flusso, ma ne ha letti {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">Il record BuildEvent numero {0} (dimensioni serializzate: {1}) √® di un tipo non supportato: {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">Nessun sottoscrittore per alcun evento.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">Non √® possibile riprodurre contemporaneamente eventi strutturati ed eventi non elaborati.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">Informazioni sulla versione non ancora inizializzate. √à prima necessario chiamare Replay.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">Il flusso deve essere leggibile.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">√à supportata solo la ricerca da SeekOrigin.Current.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">La modifica della lunghezza del flusso non √® supportata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">Tentativo di ignorare {0} byte, √® consentito solo un offset non negativo fino a int.MaxValue.</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">La scrittura non √® supportata.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">Compilazione della domanda NON RIUSCITA. La compilazione √® terminata in anticipo perch√© √® stata rilevata una destinazione o un'attivit√† non aggiornata.</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: la compilazione √® stata arrestata in modo imprevisto a causa di un errore del logger.
+    {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: "{2}" fa riferimento a {0} elemento/i, mentre "{3}" fa riferimento a {1} elemento/i. Devono avere lo stesso numero di elementi.</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: spazio imprevisto alla posizione "{1}" della condizione "{0}". Si √® dimenticato di rimuovere uno spazio?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: il file importato "{0}" non esiste e sembra far parte di un componente di Visual Studio. Per l'importazione corretta di questo file potrebbe essere richiesto MSBuild.exe ed √® quindi possibile che la compilazione abbia esito negativo nell'interfaccia della riga di comando di dotnet. </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: i file della cache dei risultati di input seguenti non esistono: "{0}"</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">Agli oggetti EvaluationContext creati con SharingPolicy.Isolated non √® possibile passare un file system MSBuildFileSystemBase.</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">Agli oggetti EvaluationContext creati con SharingPolicy.Isolated o SharingPolicy.SharedSDKCache non √® possibile passare un file system MSBuildFileSystemBase.</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">Un assembly NuGet obbligatorio non √® stato trovato. Percorso previsto: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">Non √® stato possibile caricare un assembly NuGet obbligatorio '{0}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">Gli accessi ai file di report sono attualmente supportati solo con la versione x64 di MSBuild.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">Il resolver "{0}" ha provato a risolvere l'SDK "{1}".
+Avvisi: {2}
+Errori: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: errore sistema di risoluzione SDK: "{0}"</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">L'SDK "{0}" √® stato correttamente risolto dal resolver "{1}" nel percorso "{2}" e nella versione "{3}".</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">L'attivit√† "{0}" ha richiesto {1} core, ha acquisito {2} core e ora contiene {3} core in totale.</target>
@@ -2490,8 +2620,8 @@ Utilizzo:          {0} Utilizzo medio: {1:###.0}</target>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: la versione del formato del file di log √® la {0}, ma questa versione di MSBuild supporta solo le versioni fino alla {1}.</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: la versione del formato del file di log √® la {0} e la versione minima del lettore richiesta √® la {1}, ma questa versione di MSBuild supporta solo le versioni fino alla {2}.</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Utilizzo:          {0} Utilizzo medio: {1:###.0}</target>
         <target state="translated">MSB4241: la versione "{1}" del riferimento "{0}" all'SDK √® stata risolta nella versione "{2}". Se non si aggiorna la versione di riferimento in modo che corrisponda, √® possibile che la versione in uso sia diversa da quella prevista.</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">Risoluzione dell'SDK '{0}'...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index 59c1576e9c3..82ddae9c55f 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">GetContentReader „Çí‰ªã„Åó„Å¶ StreamReader „Å®„Åó„Å¶Êó¢„Å´ÂèñÂæó„Åï„Çå„Åü„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">GetContent „Çí‰ªã„Åó„Å¶Êó¢„Å´ÊñáÂ≠óÂàó„Å®„Åó„Å¶ÂèñÂæó„Åï„Çå„Å¶„ÅÑ„Çã„Åã„ÄÅÊñáÂ≠óÂàó„Å®„Åó„Å¶„ÅÆ„ÅøÂàùÊúüÂåñ„Åï„Çå„Å¶„ÅÑ„Çã„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">ArchiveFile „ÅåÂèñÂæó„Åï„Çå„Åæ„Åó„Åü„Åå„ÄÅÊúÄÁµÇÁöÑ„Å´Á∑®ÈõÜ„Åï„Çå„Åü„Éê„Éº„Ç∏„Éß„É≥„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">„Éï„Ç°„Ç§„É´ÂΩ¢Âºè„ÅÆ„Éê„Éº„Ç∏„Éß„É≥ {0} „Åß„ÅØ„ÄÅÂâçÊñπ‰∫íÊèõÊÄß„ÅÆ„ÅÇ„ÇãË™≠„ÅøÂèñ„Çä„ÅØ„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì (&gt; = 18 „Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô)„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">„Ç§„É≥„Éù„Éº„Éà„Åï„Çå„Åü„Éï„Ç°„Ç§„É´ „Ç¢„Éº„Ç´„Ç§„Éñ„Åå 2 GB „ÅÆÂà∂Èôê„ÇíË∂Ö„Åà„Åü„Åü„ÇÅ„ÄÅÂüã„ÇÅËæº„Åæ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">ÂâçÊñπ‰∫íÊèõÊÄß„ÅÆ„ÅÇ„ÇãË™≠„ÅøÂèñ„Çä‰∏≠„ÅØ„ÄÅRecoverableReadError „ÅÆ„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥„ÅåÂøÖÈ†à„Åß„Åô„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">BuildEvent „É¨„Ç≥„Éº„ÉâÁï™Âè∑ {0} („Ç∑„É™„Ç¢„É´Âåñ„Åï„Çå„Åü„Çµ„Ç§„Ç∫: {1}) „ÅåË®±ÂèØ„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑË™≠„ÅøÂèñ„Çä„ÇíÂÆüË°å„Åó„Çà„ÅÜ„Å®„Åó„Åæ„Åó„Åü (Ë©≥Á¥∞: {2}: {3})„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">„É¨„Ç≥„Éº„Éâ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">BuildEvent „É¨„Ç≥„Éº„ÉâÁï™Âè∑ {0} „ÅØ„Çπ„Éà„É™„Éº„É†„Åã„ÇâÊ≠£Á¢∫„Å´ {1} „Éê„Ç§„Éà„ÇíË™≠„ÅøÂèñ„Çã„ÅØ„Åö„Åß„Åó„Åü„Åå„ÄÅ‰ª£„Çè„Çä„Å´ {2} „Éê„Ç§„Éà„ÇíË™≠„ÅøÂèñ„Çä„Åæ„Åó„Åü„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">BuildEvent „É¨„Ç≥„Éº„ÉâÁï™Âè∑ {0} („Ç∑„É™„Ç¢„É´Âåñ„Åï„Çå„Åü„Çµ„Ç§„Ç∫: {1}) „ÅØ„ÄÅ„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂûã: {2} „Åß„Åô„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">„Ç§„Éô„É≥„Éà„ÅÆ„Çµ„Éñ„Çπ„ÇØ„É©„Ç§„Éê„Éº„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">ÊßãÈÄ†Âåñ„Ç§„Éô„É≥„Éà„Å®Áîü„Ç§„Éô„É≥„Éà„ÇíÂêåÊôÇ„Å´ÂÜçÁîü„Åô„Çã„Åì„Å®„ÅØ„Åß„Åç„Åæ„Åõ„Çì„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">„Éê„Éº„Ç∏„Éß„É≥ÊÉÖÂ†±„ÅØ„Åæ„Å†ÂàùÊúüÂåñ„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇÂÜçÁîü„ÇíÊúÄÂàù„Å´Âëº„Å≥Âá∫„ÅôÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">„Çπ„Éà„É™„Éº„É†„ÅØË™≠„ÅøÂèñ„ÇäÂèØËÉΩ„Åß„Å™„Åë„Çå„Å∞„Å™„Çä„Åæ„Åõ„Çì„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">SeekOrigin.Current „Åã„Çâ„ÅÆ„Ç∑„Éº„ÇØ„ÅÆ„Åø„Åå„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">„Çπ„Éà„É™„Éº„É†„ÅÆÈï∑„Åï„ÇíÂ§âÊõ¥„Åô„Çã„Åì„Å®„ÅØ„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">{0} „Éê„Ç§„Éà„ÅÆ„Çπ„Ç≠„ÉÉ„Éó„ÇíË©¶„Åø„Åæ„Åô„ÄÇint.MaxValue „Åæ„Åß„ÅÆË≤†„Åß„Å™„ÅÑ„Ç™„Éï„Çª„ÉÉ„Éà„ÅÆ„Åø„ÅåË®±ÂèØ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">Êõ∏„ÅçËæº„Åø„ÅØ„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">Ë≥™Âïè„ÅÆ„Éì„É´„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„Éì„É´„Éâ„ÅØ„ÄÅÊúÄÊñ∞„Åß„ÅØ„Å™„ÅÑ„Çø„Éº„Ç≤„ÉÉ„Éà„Åæ„Åü„ÅØ„Çø„Çπ„ÇØ„ÅåÊ§úÂá∫„Åï„Çå„Åü„Åü„ÇÅ„ÄÅÊó©Êúü„Å´ÁµÇ‰∫Ü„Åó„Åæ„Åó„Åü„ÄÇ</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: ‰∫àÊúü„Åó„Å™„ÅÑ„É≠„Ç¨„Éº „Ç®„É©„Éº„ÅÆ„Åü„ÇÅ„ÄÅ„Éì„É´„Éâ„ÅØ‰∫àÊúü„Åõ„ÅöÂÅúÊ≠¢„Åó„Åæ„Åó„Åü„ÄÇ
+   {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: "{2}" „ÅØ {0} È†ÖÁõÆ„ÇíÂèÇÁÖß„Åó„ÄÅ"{3}" „ÅØ {1} È†ÖÁõÆ„ÇíÂèÇÁÖß„Åó„Åæ„Åô„ÄÇ„Åì„Çå„Çâ„ÅØÂêå„ÅòÈ†ÖÁõÆÊï∞„ÇíÊåÅ„Åü„Å™„Åë„Çå„Å∞„Å™„Çä„Åæ„Åõ„Çì„ÄÇ</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: Êù°‰ª∂ "{0}" „ÅÆ‰ΩçÁΩÆ "{1}" „Å´‰∫àÊúü„Åó„Å™„ÅÑ„Çπ„Éö„Éº„Çπ„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Çπ„Éö„Éº„Çπ„ÇíÂâäÈô§„Åó„Åü„ÅãÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: „Ç§„É≥„Éù„Éº„Éà„Åï„Çå„Åü„Éï„Ç°„Ç§„É´ "{0}" „ÅØÂ≠òÂú®„Åõ„Åö„ÄÅVisual Studio „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅÆ‰∏ÄÈÉ®„Åß„ÅÇ„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Åì„ÅÆ„Éï„Ç°„Ç§„É´„ÇíÊ≠£Â∏∏„Å´„Ç§„É≥„Éù„Éº„Éà„Åô„Çã„Å´„ÅØ MSBuild.exe „ÅåÂøÖË¶Å„Å™Â†¥Âêà„Åå„ÅÇ„Çã„Åü„ÇÅ„ÄÅdotnet CLI „Åß„Éì„É´„Éâ„Åß„Åç„Å™„ÅÑÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: ‰ª•‰∏ã„ÅÆÂÖ•ÂäõÁµêÊûú„Ç≠„É£„ÉÉ„Ç∑„É• „Éï„Ç°„Ç§„É´„ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì: "{0}"</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">SharingPolicy.Isolated „ÇíÊåáÂÆö„Åó„Å¶‰ΩúÊàê„Åï„Çå„Åü EvaluationContext „Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Å´ MSBuildFileSystemBase „Éï„Ç°„Ç§„É´ „Ç∑„Çπ„ÉÜ„É†„ÇíÊ∏°„Åô„Åì„Å®„ÅØ„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">SharingPolicy.Isolated „Åæ„Åü„ÅØ SharingPolicy.SharedSDKCache „Çí‰ΩøÁî®„Åó„Å¶‰ΩúÊàê„Åï„Çå„Åü EvaluationContext „Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÅØ„ÄÅMSBuildFileSystemBase „Éï„Ç°„Ç§„É´ „Ç∑„Çπ„ÉÜ„É†„Å∏„ÅÆÊ∏°„Åó„Çí„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">ÂøÖË¶Å„Å™ NuGet „Ç¢„Çª„É≥„Éñ„É™„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇÊÉ≥ÂÆö„Åï„Çå„Çã„Éë„Çπ: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">ÂøÖË¶Å„Å™ NuGet „Ç¢„Çª„É≥„Éñ„É™ '{0}' „ÇíË™≠„ÅøËæº„ÇÅ„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">„Éï„Ç°„Ç§„É´ „Ç¢„ÇØ„Çª„Çπ„ÅÆ„É¨„Éù„Éº„Éà„ÅØ„ÄÅÁèæÂú®„ÄÅMSBuild „ÅÆ x64 „Éï„É¨„Éº„Éê„Éº„Çí‰ΩøÁî®„Åó„Å¶„ÅÆ„Åø„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">"{0}" „É™„Çæ„É´„Éê„Éº„Åå SDK "{1}" „ÇíËß£Ê±∫„Åó„Çà„ÅÜ„Å®„Åó„Åæ„Åó„Åü„ÄÇ
+Ë≠¶Âëä: {2}
+„Ç®„É©„Éº: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: SDK „É™„Çæ„É´„Éê„Éº „Ç®„É©„Éº: "{0}"</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">SDK "{0}" „ÅØ„ÄÅ"{1}" „É™„Çæ„É´„Éê„Éº„Å´„Çà„Å£„Å¶Â†¥ÊâÄ "{2}" „Å®„Éê„Éº„Ç∏„Éß„É≥"{3}" „Å´Ê≠£Â∏∏„Å´Ëß£Ê±∫„Åï„Çå„Åæ„Åó„Åü„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">„Çø„Çπ„ÇØ "{0}" „Åß„ÅØ„ÄÅ{1} ÂÄã„ÅÆ„Ç≥„Ç¢„ÇíË¶ÅÊ±Ç„Åó„ÄÅ{2} ÂÄã„ÅÆ„Ç≥„Ç¢„ÇíÂèñÂæó„Åó„Åü„Åü„ÇÅ„ÄÅÁèæÂú®ÂêàË®à {3} ÂÄã„ÅÆ„Ç≥„Ç¢„Çí‰øùÊåÅ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ</target>
@@ -2490,8 +2620,8 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: „É≠„Ç∞ „Éï„Ç°„Ç§„É´ÂΩ¢Âºè„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÅØ {0} „Åß„Åô„Åå„ÄÅ„Åì„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÅÆ MSBuild „Åå„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„Çã„ÅÆ„ÅØ {1} „ÅÆ„Éê„Éº„Ç∏„Éß„É≥„Åæ„Åß„ÅÆ„Åø„Åß„Åô„ÄÇ</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: „É≠„Ç∞ „Éï„Ç°„Ç§„É´ÂΩ¢Âºè„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÅØ {0}„Åß„ÄÅÊúÄ‰ΩéÈôêÂøÖË¶Å„Å™„É™„Éº„ÉÄ„Éº „Éê„Éº„Ç∏„Éß„É≥„ÅØ {1} „Åß„Åô„Åå„ÄÅ„Åì„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÅÆ MSBuild „Åß„ÅØÊúÄÂ§ß {2} „Åæ„Åß„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÅÆ„Åø„Åå„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <target state="translated">MSB4241: SDK ÂèÇÁÖß "{0}" „ÅÆ„Éê„Éº„Ç∏„Éß„É≥ "{1}" „ÅØ„ÄÅ‰ª£„Çè„Çä„Å´„Éê„Éº„Ç∏„Éß„É≥ "{2}" „Å´Ëß£Ê±∫„Åï„Çå„Åæ„Åó„Åü„ÄÇ  ÂèÇÁÖß„Åï„Çå„Åü„Éê„Éº„Ç∏„Éß„É≥„Çí‰∏ÄËá¥„Åô„Çã„Çà„ÅÜ„Å´Êõ¥Êñ∞„Åó„Å™„ÅÑÂ†¥Âêà„ÄÅÂøÖË¶Å„Å™„Éê„Éº„Ç∏„Éß„É≥„Å®„ÅØÂà•„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„Çí‰ΩøÁî®„Åô„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">SDK '{0}' „ÇíËß£Ê±∫„Åó„Å¶„ÅÑ„Åæ„Åô...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.ko.xlf b/src/Build/Resources/xlf/Strings.ko.xlf
index f971f5ac61e..4b5c0ff47ac 100644
--- a/src/Build/Resources/xlf/Strings.ko.xlf
+++ b/src/Build/Resources/xlf/Strings.ko.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">GetContentReaderÎ•º ÌÜµÌï¥ Ïù¥ÎØ∏ StreamReaderÎ°ú ÌöçÎìùÌïú ÏΩòÌÖêÏ∏†ÏûÖÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">ÏΩòÌÖêÏ∏†Í∞Ä GetContentÎ•º ÌÜµÌï¥ Î¨∏ÏûêÏó¥Î°ú Ïù¥ÎØ∏ ÌöçÎìùÎêòÏóàÍ±∞ÎÇò Î¨∏ÏûêÏó¥Î°úÎßå Ï¥àÍ∏∞ÌôîÎêòÏóàÏäµÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">ArchiveFileÏùÑ Í∞ÄÏ†∏ÏôîÏßÄÎßå ÎßàÏßÄÎßâÏúºÎ°ú Ìé∏ÏßëÌïú Î≤ÑÏ†ÑÏù¥ ÏÑ§Ï†ïÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">ÌååÏùº ÌòïÏãù Î≤ÑÏ†Ñ {0}Ïóê ÎåÄÌï¥ ÏÉÅÏúÑ Ìò∏Ìôò ÏùΩÍ∏∞Í∞Ä ÏßÄÏõêÎêòÏßÄ ÏïäÏäµÎãàÎã§(18 Ïù¥ÏÉÅ ÌïÑÏöî).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">Í∞ÄÏ†∏Ïò® ÌååÏùº Î≥¥Í¥ÄÏù¥ 2GB Ï†úÌïúÏùÑ Ï¥àÍ≥ºÌñàÏúºÎ©∞ Ìè¨Ìï®ÎêòÏßÄ ÏïäÏäµÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">ÏÉÅÏúÑ Ìò∏Ìôò ÏùΩÍ∏∞ Ï§ëÏóêÎäî RecoverableReadErrorÏóê ÎåÄÌïú Íµ¨ÎèÖÏù¥ ÌïÑÏàòÏûÖÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">BuildEvent Î†àÏΩîÎìú Î≤àÌò∏ {0}Î≤à(ÏßÅÎ†¨ÌôîÎêú ÌÅ¨Í∏∞: {1})Ïù¥ ÌóàÏö©ÎêòÏßÄ ÏïäÎäî ÏùΩÍ∏∞Î•º ÏàòÌñâÌïòÎ†§Í≥† ÌñàÏäµÎãàÎã§(ÏÑ∏Î∂Ä Ï†ïÎ≥¥: {2}: {3}).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">Î†àÏΩîÎìúÎ•º Í±¥ÎÑàÎõ∞Îäî Ï§ëÏûÖÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">BuildEvent Î†àÏΩîÎìú Î≤àÌò∏ {0}Î≤àÏùÄ Ïä§Ìä∏Î¶ºÏóêÏÑú Ï†ïÌôïÌûà {1}Î∞îÏù¥Ìä∏Î•º ÏùΩÏñ¥Ïïº ÌïòÎäîÎç∞ ÎåÄÏã† {2}ÏùÑ(Î•º) ÏùΩÏóàÏäµÎãàÎã§.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">BuildEvent Î†àÏΩîÎìú Î≤àÌò∏ {0}Î≤à(ÏßÅÎ†¨ÌôîÎêú ÌÅ¨Í∏∞: {1})Ïù¥ ÏßÄÏõêÎêòÏßÄ ÏïäÎäî ÌòïÏãù({2})ÏûÖÎãàÎã§.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">Î™®Îì† Ïù¥Î≤§Ìä∏Ïóê ÎåÄÌïú Íµ¨ÎèÖÏûêÍ∞Ä ÏóÜÏäµÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">Íµ¨Ï°∞Ï†Å Ïù¥Î≤§Ìä∏ÏôÄ ÏõêÏãú Ïù¥Î≤§Ìä∏Îäî ÎèôÏãúÏóê Ïû¨ÏÉùÌï† Ïàò ÏóÜÏäµÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">Î≤ÑÏ†Ñ Ï†ïÎ≥¥Í∞Ä ÏïÑÏßÅ Ï¥àÍ∏∞ÌôîÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§. Ïû¨ÏÉùÏùÑ Î®ºÏ†Ä Ìò∏Ï∂úÌï¥Ïïº Ìï©ÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">Ïä§Ìä∏Î¶ºÏùÑ ÏùΩÏùÑ Ïàò ÏûàÏñ¥Ïïº Ìï©ÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">SeekOrigin.CurrentÏóêÏÑúÎßå Í≤ÄÏÉâÏù¥ ÏßÄÏõêÎê©ÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">Ïä§Ìä∏Î¶º Í∏∏Ïù¥ Î≥ÄÍ≤ΩÏùÄ ÏßÄÏõêÎêòÏßÄ ÏïäÏäµÎãàÎã§.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">{0}Î∞îÏù¥Ìä∏Î•º Í±¥ÎÑàÎõ∞Î†§Í≥† Ìï©ÎãàÎã§. ÏùåÏàòÍ∞Ä ÏïÑÎãå Ïò§ÌîÑÏÖãÎßå ÏµúÎåÄ int.MaxValueÍπåÏßÄ ÌóàÏö©Îê©ÎãàÎã§.</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">Ïì∞Í∏∞Îäî ÏßÄÏõêÎêòÏßÄ ÏïäÏäµÎãàÎã§.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">ÏßàÎ¨∏ ÎπåÎìúÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§. ÎπåÎìúÍ∞Ä ÏµúÏã†Ïù¥ ÏïÑÎãå ÎåÄÏÉÅ ÎòêÎäî ÏûëÏóÖÏùÑ Î∞úÍ≤¨ÌïòÏó¨ ÏùºÏ∞ç Ï¢ÖÎ£åÎêòÏóàÏäµÎãàÎã§.</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: ÏòàÍ∏∞Ïπò ÏïäÏùÄ Î°úÍ±∞ Ïò§Î•òÍ∞Ä Î∞úÏÉùÌïòÏó¨ ÎπåÎìúÍ∞Ä ÏòàÍ∏∞Ïπò ÏïäÍ≤å Ï§ëÏßÄÎêòÏóàÏäµÎãàÎã§.
+    {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: "{2}"ÏùÄ(Îäî) Ìï≠Î™©ÏùÑ {0}Í∞ú Ï∞∏Ï°∞ÌïòÍ≥† "{3}"ÏùÄ(Îäî) Ìï≠Î™©ÏùÑ {1}Í∞ú Ï∞∏Ï°∞Ìï©ÎãàÎã§. Ï∞∏Ï°∞ÌïòÎäî Ìï≠Î™© ÏàòÎäî Í∞ôÏïÑÏïº Ìï©ÎãàÎã§.</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: "{0}" Ï°∞Í±¥Ïùò "{1}" ÏúÑÏπòÏóê ÏòàÍ∏∞Ïπò ÏïäÏùÄ Í≥µÎ∞±Ïù¥ ÏûàÏäµÎãàÎã§. Í≥µÎ∞±ÏùÑ Ï†úÍ±∞ÌñàÎäîÏßÄ ÌôïÏù∏ÌïòÏÑ∏Ïöî.</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: Í∞ÄÏ†∏Ïò® ÌååÏùº "{0}"Ïù¥(Í∞Ä) Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏúºÎØÄÎ°ú Visual Studio Íµ¨ÏÑ± ÏöîÏÜåÏùò ÏùºÎ∂ÄÏù∏ Í≤É Í∞ôÏäµÎãàÎã§. Ïù¥ ÌååÏùºÏùÑ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Í∞ÄÏ†∏Ïò§Î†§Î©¥ MSBuild.exeÍ∞Ä ÌïÑÏöîÌï† Ïàò ÏûàÏúºÎØÄÎ°ú dotnet CLIÏóêÏÑú ÎπåÎìúÌïòÏßÄ Î™ªÌï† Ïàò ÏûàÏäµÎãàÎã§. </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: Îã§Ïùå ÏûÖÎ†• Í≤∞Í≥º Ï∫êÏãú ÌååÏùºÏù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§. "{0}"</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">SharingPolicy.IsolatedÎ°ú ÎßåÎì† EvaluationContext Í∞úÏ≤¥Îäî MSBuildFileSystemBase ÌååÏùº ÏãúÏä§ÌÖú Ï†ÑÎã¨ÏùÑ ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§.</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">SharingPolicy.Isolated ÎòêÎäî SharingPolicy.SharedSDKCacheÎ°ú ÎßåÎì† EvaluationContext Í∞úÏ≤¥Îäî MSBuildFileSystemBase ÌååÏùº ÏãúÏä§ÌÖú Ï†ÑÎã¨ÏùÑ ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§.</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">ÌïÑÏöîÌïú NuGet Ïñ¥ÏÖàÎ∏îÎ¶¨Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. ÏòàÏÉÅ Í≤ΩÎ°ú: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">ÌïÑÏöîÌïú NuGet Ïñ¥ÏÖàÎ∏îÎ¶¨ '{0}'ÏùÑ(Î•º) Î°úÎìúÌï† Ïàò ÏóÜÏäµÎãàÎã§.</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">ÌååÏùº Ïï°ÏÑ∏Ïä§ Î≥¥Í≥†Îäî ÌòÑÏû¨ x64 Î≤ÑÏ†ÑÏùò MSBuildÎ•º ÏÇ¨Ïö©ÌïòÎäî Í≤ΩÏö∞ÏóêÎßå ÏßÄÏõêÎê©ÎãàÎã§.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">"{0}" ÌôïÏù∏ÏûêÍ∞Ä SDK "{1}"ÏùÑ(Î•º) ÌôïÏù∏ÌïòÎ†§Í≥† ÌñàÏäµÎãàÎã§.
+Í≤ΩÍ≥†: {2}
+Ïò§Î•ò: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: SDK Ìï¥Í≤∞ ÌîÑÎ°úÍ∑∏Îû® Ïò§Î•ò: "{0}"</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">SDK "{0}"Ïù¥(Í∞Ä) "{1}" ÌôïÏù∏ÏûêÏóê ÏùòÌï¥ "{2}" ÏúÑÏπò Î∞è "{3}" Î≤ÑÏ†ÑÏúºÎ°ú ÌôïÏù∏ÎêòÏóàÏäµÎãàÎã§.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">"{0}" ÏûëÏóÖÏóêÏÑú ÏΩîÏñ¥ {1}Í∞úÎ•º ÏöîÏ≤≠ÌñàÍ≥† ÏΩîÏñ¥ {2}Í∞úÎ•º ÌöçÎìùÌñàÏúºÎ©∞ ÏßÄÍ∏à Ï¥ù {3}Í∞úÏùò ÏΩîÏñ¥Î•º Î≥¥Ïú†ÌïòÍ≥† ÏûàÏäµÎãàÎã§.</target>
@@ -2490,8 +2620,8 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: Î°úÍ∑∏ ÌååÏùº ÌòïÏãù Î≤ÑÏ†ÑÏùÄ {0}Ïù¥ÏßÄÎßå, MSBuildÏùò Ïù¥ Î≤ÑÏ†ÑÏùÄ {1} Î≤ÑÏ†ÑÍπåÏßÄÎßå ÏßÄÏõêÌï©ÎãàÎã§.</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: Î°úÍ∑∏ ÌååÏùº ÌòïÏãù Î≤ÑÏ†ÑÏùÄ {0}Ïù¥Î©∞ ÏµúÏÜå ÌïÑÏàò Î¶¨Îçî Î≤ÑÏ†ÑÏùÄ {1}Ïù∏ Î∞òÎ©¥, Ïù¥ MSBuild Î≤ÑÏ†ÑÏùÄ ÏµúÎåÄ {2} Î≤ÑÏ†ÑÍπåÏßÄÎßå ÏßÄÏõêÌï©ÎãàÎã§.</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <target state="translated">MSB4241: SDK Ï∞∏Ï°∞ "{0}" Î≤ÑÏ†Ñ "{1}"Ïù¥(Í∞Ä) ÎåÄÏã† "{2}" Î≤ÑÏ†ÑÏúºÎ°ú ÌôïÏù∏ÎêòÏóàÏäµÎãàÎã§. Ï∞∏Ï°∞Îêú Î≤ÑÏ†ÑÏùÑ ÏùºÏπòÌïòÎèÑÎ°ù ÏóÖÎç∞Ïù¥Ìä∏ÌïòÏßÄ ÏïäÎäî Í≤ΩÏö∞ ÏòàÏÉÅÍ≥º Îã§Î•∏ Î≤ÑÏ†ÑÏùÑ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏäµÎãàÎã§.</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">SDK '{0}'ÏùÑ(Î•º) ÌôïÏù∏ÌïòÎäî Ï§ë...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index a12062ad5a9..b253894f759 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">Zawarto≈õƒá zosta≈Ça ju≈º pobrana jako element StreamReader za po≈õrednictwem metody GetContentReader.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">Zawarto≈õƒá zosta≈Ça ju≈º uzyskana jako ciƒÖg za po≈õrednictwem metody GetContent lub zainicjowana tylko jako ciƒÖg.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">Uzyskano plik ArchiveFile, ale nie ustawiono ostatecznej edycji wersji.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">Odczyt zgodny z przekazywaniem nie jest obs≈Çugiwany w przypadku wersji formatu pliku {0} (wymaga &gt;= 18).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">Archiwum importowanych plik√≥w przekroczy≈Ço limit 2 GB i nie jest osadzone.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">Subskrypcja elementu RecoverableReadError jest obowiƒÖzkowa podczas odczytu zgodnego z przekazywaniem.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">Numer rekordu BuildEvent {0} (zserializowany rozmiar: {1}) pr√≥bowa≈Ç wykonaƒá niedozwolone odczyty (szczeg√≥≈Çy: {2}: {3}).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">Pomijanie rekordu.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">Oczekiwano, ≈ºe numer rekordu BuildEvent {0} odczyta ze strumienia liczbƒô bajt√≥w r√≥wnƒÖ dok≈Çadnie {1}, ale zamiast tego odczyta {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">Numer rekordu BuildEvent {0} (zserializowany rozmiar: {1}) jest nieobs≈Çugiwanym typem: {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">Brak subskrybent√≥w dla jakichkolwiek zdarze≈Ñ.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">Nie mo≈ºna jednocze≈õnie odtwarzaƒá zdarze≈Ñ strukturalnych i nieprzetworzonych.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">Informacje o wersji nie zosta≈Çy jeszcze zainicjowane. Ponowne odtwarzanie musi byƒá wywo≈Çywane jako pierwsze.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">Strumie≈Ñ musi byƒá mo≈ºliwy do odczytania.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">Obs≈Çugiwane jest tylko wyszukiwanie z elementu SeekOrigin.Current.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">Zmiana d≈Çugo≈õci strumienia nie jest obs≈Çugiwana.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">Pr√≥ba pominiƒôcia {0} bajt√≥w, tylko przesuniƒôcie nieujemne do liczby ca≈Çkowitej. Warto≈õƒá MaxValue jest dozwolona.</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">Zapisywanie nie jest obs≈Çugiwane.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">NIEPOWODZENIE kompilacji pytania. Kompilacja zosta≈Ça zako≈Ñczona wcze≈õniej, poniewa≈º napotka≈Ça element docelowy lub zadanie, kt√≥re nie by≈Ço aktualne.</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: Kompilacja zosta≈Ça nieoczekiwanie zatrzymana z powodu nieoczekiwanego b≈Çƒôdu rejestratora.
+    {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: ‚Äû{2}‚Äù odwo≈Çuje siƒô do nastƒôpujƒÖcej liczby element√≥w: {0}, a ‚Äû{3}‚Äù odwo≈Çuje siƒô do nastƒôpujƒÖcej liczby element√≥w: {1}. Liczba tych element√≥w musi byƒá taka sama.</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: Nieoczekiwana spacja na pozycji ‚Äû{1}‚Äù warunku ‚Äû{0}‚Äù. Czy zapomniano o usuniƒôciu spacji?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: zaimportowany plik ‚Äû{0}‚Äùnie istnieje i prawdopodobnie jest czƒô≈õciƒÖ sk≈Çadnika programu Visual Studio. Ten plik mo≈ºe wymagaƒá MSBuild.exe w celu pomy≈õlnego zaimportowania, dlatego kompilacja w interfejsie wiersza polecenia dotnet mo≈ºe zako≈Ñczyƒá siƒô niepowodzeniem. </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: NastƒôpujƒÖce pliki wej≈õciowej pamiƒôci podrƒôcznej wynik√≥w nie istniejƒÖ: ‚Äû{0}‚Äù</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">Obiekty EvaluationContext utworzone za pomocƒÖ elementu SharingPolicy.Isolated nie obs≈ÇugujƒÖ przekazywania za pomocƒÖ systemu plik√≥w MSBuildFileSystemBase.</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">Obiekty EvaluationContext utworzone za pomocƒÖ elementu SharingPolicy.Isolated lub SharingPolicy.SharedSDKCache nie obs≈ÇugujƒÖ przekazywania za pomocƒÖ systemu plik√≥w MSBuildFileSystemBase.</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">Nie znaleziono wymaganego zestawu NuGet. Oczekiwano ≈õcie≈ºki {0}.</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">Nie mo≈ºna za≈Çadowaƒá wymaganego zestawu NuGet ‚Äû{0}‚Äù.</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">Raportowanie dostƒôpu do plik√≥w jest obecnie obs≈Çugiwane tylko przy u≈ºyciu wersji x64 programu MSBuild.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">Narzƒôdzie Resolver ‚Äû{0}‚Äù pr√≥bowa≈Ço rozpoznaƒá zestaw SDK ‚Äû{1}‚Äù.
+Ostrze≈ºenia: {2}
+B≈Çƒôdy: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: niepowodzenia programu do rozpoznawania zestawu SDK: ‚Äû{0}‚Äù</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">Zestaw SDK ‚Äû{0}‚Äù zosta≈Ç pomy≈õlnie rozpoznany przez narzƒôdzie Resolver ‚Äû{1}‚Äù do lokalizacji ‚Äû{2}‚Äù i wersji ‚Äû{3}‚Äù.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">Zadanie ‚Äû{0}‚Äù ≈ºƒÖda≈Ço {1} rdzeni, uzyska≈Ço {2} i teraz jego ≈ÇƒÖczna liczba rdzeni to {3}.</target>
@@ -492,7 +622,7 @@
       <trans-unit id="UnhandledMSBuildError">
         <source>This is an unhandled exception in MSBuild -- PLEASE UPVOTE AN EXISTING ISSUE OR FILE A NEW ONE AT https://aka.ms/msbuild/unhandled
     {0}</source>
-        <target state="translated">Jest to nieobs≈Çugiwany wyjƒÖtek na platformie MSBuild -- ZAG≈ÅOSUJ NA ISTNIEJƒÑCY PROBLEM LUB ZAREJESTRUJ NOWY W WITRYNIE https://aka.ms/msbuild/unhandled.
+        <target state="translated">Jest to nieobs≈Çugiwany wyjƒÖtek w aplikacji MSBuild -- ZAG≈ÅOSUJ NA ISTNIEJƒÑCY PROBLEM LUB ZAG≈ÅOSUJ NA NOWY NA https://aka.ms/msbuild/unhandled.
     {0}</target>
         <note />
       </trans-unit>
@@ -2490,8 +2620,8 @@ Wykorzystanie:          ≈örednie wykorzystanie {0}: {1:###.0}</target>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: Wersja formatu pliku dziennika to {0}, podczas gdy ta wersja programu MSBuild obs≈Çuguje wy≈ÇƒÖcznie wersje do {1}.</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: wersja formatu pliku dziennika jest {0} z minimalnƒÖ wymaganƒÖ wersjƒÖ czytnika {1}, natomiast ta wersja programu MSBuild obs≈Çuguje tylko wersje do {2}.</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Wykorzystanie:          ≈örednie wykorzystanie {0}: {1:###.0}</target>
         <target state="translated">MSB4241: Odwo≈Çanie do zestawu SDK ‚Äû{0}‚Äù w wersji ‚Äû{1}‚Äù zosta≈Ço rozpoznane jako wersja ‚Äû{2}‚Äù. Mo≈ºe zostaƒá u≈ºyta inna wersja ni≈º oczekiwana, je≈õli nie zaktualizujesz wersji okre≈õlonej w odwo≈Çaniu, tak aby by≈Ça zgodna.</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">Trwa rozpoznawanie zestawu SDK ‚Äû{0}‚Äù...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index 258fdf8c1e5..7e767a652cb 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">Conte√∫do j√° adquirido como StreamReader por meio de GetContentReader.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">Conte√∫do j√° adquirido como cadeia de caracteres via GetContent ou inicializado apenas como cadeia de caracteres.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">ArchiveFile foi obtido, mas a vers√£o editada final n√£o foi definida.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">A leitura compat√≠vel com vers√µes futuras n√£o √© suportada para a vers√£o do formato de arquivo {0} (precisa de &gt;= 18).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">O arquivo de arquivos importados excedeu o limite de 2 GB e n√£o est√° inserido.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">A assinatura de RecoverableReadError √© obrigat√≥ria durante a leitura compat√≠vel com encaminhamento.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">N√∫mero do registro BuildEvent {0} (tamanho serializado: {1}) tentou executar leituras n√£o permitidas (detalhes: {2}: {3})</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">Ignorando o registro.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">O n√∫mero de registro {0} do BuildEvent deveria ler exatamente {1} bytes do fluxo, mas l√™ {2} em vez disso.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">O n√∫mero do registro {0} BuildEvent (tamanho serializado: {1}) √© do tipo sem suporte: {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">N√£o h√° assinantes para nenhum evento.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">Eventos estruturados e eventos brutos n√£o podem ser reproduzidos ao mesmo tempo.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">Informa√ß√µes de vers√£o ainda n√£o inicializadas. A reprodu√ß√£o deve ser chamada primeiro.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">O fluxo deve ser leg√≠vel.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">S√≥ h√° suporte para a busca de SeekOrigin.Current.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">N√£o h√° suporte para a altera√ß√£o do comprimento do fluxo.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">Tentativa de ignorar {0} bytes, somente deslocamento n√£o negativo at√© int.MaxValue √© permitido.</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">N√£o h√° suporte para grava√ß√£o.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">FALHA na compila√ß√£o da pergunta. A compila√ß√£o foi encerrada antecipadamente ao se deparar com um alvo ou tarefa que n√£o estava atualizado.</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: A compila√ß√£o parou inesperadamente devido a uma falha do agente de log.
+    {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: "{2}" refere-se ao(s) item(ns) {0} e "{3}" refere-se ao(s) item(ns) {1}. Eles devem ter o mesmo n√∫mero de itens.</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: espa√ßo inesperado na posi√ß√£o "{1}" da condi√ß√£o "{0}". Voc√™ esqueceu de remover um espa√ßo?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: o arquivo importado "{0}" n√£o existe e parece fazer parte de um componente do Visual Studio. Este arquivo pode exigir o MSBuild.exe para ser importado com √™xito e, portanto, talvez n√£o possa ser compilado na CLI do dotnet. </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: os arquivos de cache do resultado de entrada a seguir n√£o existem: "{0}"</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">Os objetos EvaluationContext criados com SharingPolicy.Isolated n√£o s√£o compat√≠veis com o recebimento de um sistema de arquivos MSBuildFileSystemBase.</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">Objetos EvaluationContext criados com SharingPolicy.Isolated ou SharingPolicy.SharedSDKCache n√£o d√£o suporte a serem passados em um sistema de arquivos MSBuildFileSystemBase.</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">Um assembly NuGet necess√°rio n√£o foi encontrado. Caminho Esperado: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">N√£o foi poss√≠vel carregar um assembly NuGet "{0}" obrigat√≥rio.</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">Atualmente, o relat√≥rio de acessos a arquivos s√≥ tem suporte usando o tipo x64 do MSBuild.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">O resolvedor "{0}" tentou resolver o SDK "{1}".
+Avisos: {2}
+Erros: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: Falha no Resolvedor do SDK: "{0}"</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">O SDK "{0}" foi resolvido com √™xito pelo resolvedor "{1}" para o local "{2}" e a vers√£o "{3}".</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">A tarefa "{0}" solicitou {1} n√∫cleos, adquiriu {2} n√∫cleos e agora cont√©m {3} n√∫cleos no total.</target>
@@ -492,7 +622,7 @@
       <trans-unit id="UnhandledMSBuildError">
         <source>This is an unhandled exception in MSBuild -- PLEASE UPVOTE AN EXISTING ISSUE OR FILE A NEW ONE AT https://aka.ms/msbuild/unhandled
     {0}</source>
-        <target state="translated">Essa √© uma exce√ß√£o n√£o tratada no MSBuild -- POR FAVOR, ATUALIZE UMA QUEST√ÉO EXISTENTE OU ENCAMINHE UMA NOVA EM https://aka.ms/msbuild/unhandled
+        <target state="translated">Esta √© uma exce√ß√£o n√£o tratada no MSBuild -- POR FAVOR, APOIE UM PROBLEMA EXISTENTE OU ARQUIVE UM NOVO EM https://aka.ms/msbuild/unhandled
     {0}</target>
         <note />
       </trans-unit>
@@ -2490,8 +2620,8 @@ Utiliza√ß√£o:          {0} Utiliza√ß√£o M√©dia: {1:###.0}</target>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: a vers√£o de formato do arquivo de log √© {0}, enquanto esta vers√£o do MSBuild d√° suporte apenas para vers√µes at√© {1}.</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: a vers√£o de formato de arquivo de log √© {0} com a vers√£o m√≠nima necess√°ria do leitor {1}, enquanto esta vers√£o do MSBuild d√° suporte apenas a vers√µes de at√© {2}.</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Utiliza√ß√£o:          {0} Utiliza√ß√£o M√©dia: {1:###.0}</target>
         <target state="translated">MSB4241: a refer√™ncia do SDK "{0}" vers√£o "{1}" foi resolvida para a vers√£o "{2}". Talvez voc√™ estava usando um vers√£o diferente que a esperada caso n√£o tenha atualizado a vers√£o referenciada de maneira correspondente.</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">Resolvendo o SDK '{0}'...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.ru.xlf b/src/Build/Resources/xlf/Strings.ru.xlf
index 11007faa0ee..bf90a1bb435 100644
--- a/src/Build/Resources/xlf/Strings.ru.xlf
+++ b/src/Build/Resources/xlf/Strings.ru.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">–°–æ–¥–µ—Ä–∂–∏–º–æ–µ, —É–∂–µ –ø–æ–ª—É—á–µ–Ω–æ –∫–∞–∫ StreamReader —á–µ—Ä–µ–∑ GetContentReader.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–æ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ —Å –ø–æ–º–æ—â—å—é GetContent –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Ç–æ–ª—å–∫–æ –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">ArchiveFile –ø–æ–ª—É—á–µ–Ω, –Ω–æ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è –∏–∑–º–µ–Ω–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">–ß—Ç–µ–Ω–∏–µ —Å –ø—Ä—è–º–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å—é –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –≤–µ—Ä—Å–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–∞ {0} (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ &gt;= 18).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">–ê—Ä—Ö–∏–≤ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–µ–≤—ã—Å–∏–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 2 –ì–ë –∏ –Ω–µ –≤–Ω–µ–¥—Ä–µ–Ω.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ RecoverableReadError –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –≤–æ –≤—Ä–µ–º—è –ø—Ä—è–º–æ–≥–æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–≥–æ —á—Ç–µ–Ω–∏—è.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">–ù–æ–º–µ—Ä –∑–∞–ø–∏—Å–∏ BuildEvent {0} (—Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {1}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —á—Ç–µ–Ω–∏—è (—Å–≤–µ–¥–µ–Ω–∏—è: {2}: {3}).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">–ü—Ä–æ–ø—É—Å–∫ –∑–∞–ø–∏—Å–∏.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">–û–∂–∏–¥–∞–ª–æ—Å—å, —á—Ç–æ –Ω–æ–º–µ—Ä {0} –∑–∞–ø–∏—Å–∏ BuildEvent –±—É–¥–µ—Ç —Å—á–∏—Ç—ã–≤–∞—Ç—å –≤ —Ç–æ—á–Ω–æ—Å—Ç–∏ {1} –±–∞–π—Ç –∏–∑ –ø–æ—Ç–æ–∫–∞, –Ω–æ –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">–ù–æ–º–µ—Ä –∑–∞–ø–∏—Å–∏ BuildEvent {0} (—Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {1}) –∏–º–µ–µ—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø: {2}.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">–ù–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è —Å–æ–±—ã—Ç–∏–π.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–µ –º–æ–≥—É—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">–°–≤–µ–¥–µ–Ω–∏—è –æ –≤–µ—Ä—Å–∏–∏ –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. –°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–∑–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">–ü–æ—Ç–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Ç–∞–µ–º.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ–∏—Å–∫ –∏–∑ SeekOrigin.Current.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –ø–æ—Ç–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ {0} –±–∞–π—Ç, —Ä–∞–∑—Ä–µ—à–µ–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –¥–æ int.MaxValue.</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">–ó–∞–ø–∏—Å—å –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">–°–ë–û–ô —Å–±–æ—Ä–∫–∏ –≤–æ–ø—Ä–æ—Å–∞. –í—ã—Ö–æ–¥ –∏–∑ —Å–±–æ—Ä–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω —Ä–∞–Ω—å—à–µ, —Ç–∞–∫ –∫–∞–∫ –±—ã–ª–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Ü–µ–ª—å –∏–ª–∏ –∑–∞–¥–∞—á–∞ –±–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: —Å–±–æ—Ä–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑-–∑–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–≥–æ —Å–±–æ—è —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤–µ–¥–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞.
+    {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: "{2}" —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {0}, –∞ "{3}" ‚Äî –Ω–∞ {1}. –ß–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º.</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –ø—Ä–æ–±–µ–ª –≤ –ø–æ–∑–∏—Ü–∏–∏ "{1}" —É—Å–ª–æ–≤–∏—è "{0}". –í—ã –∑–∞–±—ã–ª–∏ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–±–µ–ª?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª "{0}" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏, –≤–µ—Ä–æ—è—Ç–Ω–æ, —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ Visual Studio. –î–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è MSBuild.exe, –∏ –ø–æ—ç—Ç–æ–º—É –≤–æ–∑–º–æ–∂–Ω–æ, —á—Ç–æ —Å–±–æ—Ä–∫–∞ –≤ CLI dotnet –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —Å–±–æ–µ–º. </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: —Å–ª–µ–¥—É—é—â–∏–µ –≤—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã –∫—ç—à–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç: "{0}"</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">–û–±—ä–µ–∫—Ç—ã EvaluationContext, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é SharingPolicy.Isolated, –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –ø–µ—Ä–µ–¥–∞—á—É –≤ —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É MSBuildFileSystemBase.</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">–û–±—ä–µ–∫—Ç—ã EvaluationContext, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é SharingPolicy.SharedSDKCache, –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –ø–µ—Ä–µ–¥–∞—á—É –≤ —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É MSBuildFileSystemBase.</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ NuGet. –û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç—Ä–µ–±—É–µ–º—É—é —Å–±–æ—Ä–∫—É NuGet "{0}".</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">–î–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º –æ—Ç—á–µ—Ç–æ–≤ —Å–µ–π—á–∞—Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ 64-—Ä–∞–∑—Ä—è–¥–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è MSBuild.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å "{0}" –ø–æ–ø—ã—Ç–∞–ª—Å—è —Ä–∞–∑—Ä–µ—à–∏—Ç—å SDK "{1}".
+–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {2}
+–û—à–∏–±–æ–∫: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: —Å–±–æ–π —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç–µ–ª—è SDK: "{0}"</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">SDK "{0}" —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–µ–º "{1}" –≤ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ "{2}" –∏ –≤–µ—Ä—Å–∏—é "{3}".</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">–ó–∞–¥–∞—á–∞ "{0}" –∑–∞–ø—Ä–æ—Å–∏–ª–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ —è–¥–µ—Ä ({1}) –∏ –ø–æ–ª—É—á–∏–ª–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ —è–¥–µ—Ä ({2}). –¢–µ–ø–µ—Ä—å –æ–±—â–µ–µ —á–∏—Å–ª–æ —è–¥–µ—Ä, –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç –∑–∞–¥–∞—á–∞, —Ä–∞–≤–Ω–æ {3}.</target>
@@ -492,7 +622,7 @@
       <trans-unit id="UnhandledMSBuildError">
         <source>This is an unhandled exception in MSBuild -- PLEASE UPVOTE AN EXISTING ISSUE OR FILE A NEW ONE AT https://aka.ms/msbuild/unhandled
     {0}</source>
-        <target state="translated">–≠—Ç–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ MSBuild. –ü–†–û–ì–û–õ–û–°–£–ô–¢–ï –ó–ê –°–£–©–ï–°–¢–í–£–Æ–©–£–Æ –ü–†–û–ë–õ–ï–ú–£ –ò–õ–ò –°–û–û–ë–©–ò–¢–ï –û –ù–û–í–£–ô –ù–ê https://aka.ms/msbuild/unhandled
+        <target state="translated">–≠—Ç–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ MSBuild. –ü—Ä–æ–≥–æ–ª–æ—Å—É–π—Ç–µ –∑–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ –æ –Ω–æ–≤–æ–π –ø–æ –∞–¥—Ä–µ—Å—É https://aka.ms/msbuild/unhandled
     {0}</target>
         <note />
       </trans-unit>
@@ -2490,8 +2620,8 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: –≤–µ—Ä—Å–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–∞ –∂—É—Ä–Ω–∞–ª–∞: {0}, —Ç–æ–≥–¥–∞ –∫–∞–∫ —ç—Ç–∞ –≤–µ—Ä—Å–∏—è MSBuild –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤–µ—Ä—Å–∏–∏ –¥–æ {1}.</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: –≤–µ—Ä—Å–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–∞ –∂—É—Ä–Ω–∞–ª–∞ ‚Äî {0} —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –≤–µ—Ä—Å–∏–µ–π —á—Ç–µ–Ω–∏—è ‚Äî {1}, —Ç–æ–≥–¥–∞ –∫–∞–∫ —ç—Ç–∞ –≤–µ—Ä—Å–∏—è MSBuild –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤–µ—Ä—Å–∏–∏ –¥–æ {2}.</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <target state="translated">MSB4241: —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–∫–µ—Ç SDK "{0}" –≤–µ—Ä—Å–∏–∏ "{1}" –±—ã–ª–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏–∏ "{2}". –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –≤–µ—Ä—Å–∏—é, –æ—Ç–ª–∏—á–Ω—É—é –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π, –µ—Å–ª–∏ –≤—ã –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∏ –≤–µ—Ä—Å–∏—é –ø–æ —Å—Å—ã–ª–∫–µ.</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ SDK "{0}"‚Ä¶</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.tr.xlf b/src/Build/Resources/xlf/Strings.tr.xlf
index b0255efe91b..ec82a4c4384 100644
--- a/src/Build/Resources/xlf/Strings.tr.xlf
+++ b/src/Build/Resources/xlf/Strings.tr.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">ƒ∞√ßerik zaten GetContentReader ara StreamReader olarak alƒ±ndƒ±.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">ƒ∞√ßerik zaten GetContent aracƒ±lƒ±ƒüƒ±yla dize olarak alƒ±nmƒ±≈ü veya yalnƒ±zca dize olarak ba≈ülatƒ±lmƒ±≈ü.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">ArchiveFile elde edildi ancak d√ºzenlenen son s√ºr√ºm ayarlanmadƒ±.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">Dosya bi√ßimi s√ºr√ºm√º {0} i√ßin ileriye d√∂n√ºk olarak uyumlu okumalar desteklenmiyor (18 ve √ºst√º s√ºr√ºmleri gerektirir).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">ƒ∞√ßeri aktarƒ±lan dosyalar ar≈üivi 2 GB sƒ±nƒ±rƒ±nƒ± a≈ütƒ± ve eklenmedi.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">ƒ∞leriye d√∂n√ºk olarak uyumlu okuma sƒ±rasƒ±nda RecoverableReadError aboneliƒüi zorunludur.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">{0} BuildEvent kayƒ±t numarasƒ± (serile≈ütirilmi≈ü boyut: {1}), izin verilmeyen okumalar ger√ßekle≈ütirmeyi denedi (ayrƒ±ntƒ±lar: {2}: {3}).</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">Kayƒ±t atlanƒ±yor.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">{0} BuildEvent kayƒ±t numarasƒ±nƒ±n akƒ±≈ütan tam olarak {1} bayt okumasƒ± bekleniyordu ancak bunun yerine {2} bayt okudu.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">{0} BuildEvent kayƒ±t numarasƒ± (serile≈ütirilmi≈ü boyut: {1}) desteklenmeyen {2} t√ºr√ºnde.</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">Abonesi olan olay yok.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">Yapƒ±landƒ±rƒ±lmƒ±≈ü olaylar ve ham olaylar aynƒ± anda yeniden y√ºr√ºt√ºlemez.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">S√ºr√ºm bilgileri hen√ºz ba≈ülatƒ±lmadƒ±. √ñnce yeniden y√ºr√ºtme √ßaƒürƒ±lmalƒ±dƒ±r.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">Akƒ±≈ü okunabilir olmalƒ±dƒ±r.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">Yalnƒ±zca SeekOrigin.Current kaynaƒüƒ±ndan arama destekleniyor.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">Akƒ±≈ü uzunluƒüunun deƒüi≈ütirilmesi desteklenmiyor.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">{0} bayt atlamayƒ± deneyin, yalnƒ±zca en fazla int.MaxValue deƒüerine kadar negatif olmayan farka izin veriliyor.</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">Yazma i≈ülemi desteklenmiyor.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">Soru derleme BA≈ûARISIZ oldu. G√ºncel olmayan bir hedef veya g√∂rev ile kar≈üƒ±la≈ütƒ±ƒüƒ±ndan derleme i≈üleminden erken √ßƒ±kƒ±ldƒ±.</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: Beklenmeyen bir g√ºnl√ºk√ß√º hatasƒ± nedeniyle derleme i≈ülemi beklenmedik bir ≈üekilde durdu.
+    {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: "{2}", {0} √∂ƒüeye; "{3}", {1} √∂ƒüeye ba≈üvuruyor. Aynƒ± sayƒ±da √∂ƒüeye sahip olmalarƒ± gerekir.</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: "{0}" ko≈üulunun "{1}" konumunda beklenmeyen bo≈üluk var. Bo≈üluƒüu kaldƒ±rmayƒ± unutmu≈ü olabilirsiniz.</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: ƒ∞√ßeri aktarƒ±lan "{0}" dosyasƒ± mevcut deƒüil ve bir Visual Studio bile≈üeninin par√ßasƒ± gibi g√∂r√ºn√ºyor. Ba≈üarƒ±yla i√ßeri aktarƒ±labilmesi i√ßin bu dosya MSBuild.exe dosyasƒ±nƒ± gerektirir ve bu nedenle dotnet CLI‚Äôde derleme ba≈üarƒ±sƒ±z olabilir. </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: ≈ûu giri≈ü sonucu √∂nbellek dosyalarƒ± mevcut deƒüil: "{0}"</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">SharingPolicy.Isolated ile olu≈üturulan EvaluationContext nesneleri bir MSBuildFileSystemBase dosya sisteminin ge√ßirilmesini desteklemez.</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">SharingPolicy.Isolated veya SharingPolicy.SharedSDKCache ile olu≈üturulan EvaluationContext nesneleri, bir MSBuildFileSystemBase dosya sisteminin ge√ßirilmesini desteklemez.</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">Gereken NuGet derlemesi bulunamadƒ±. Beklenen Yol: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">Gerekli bir NuGet '{0}' derlemesi y√ºklenemedi.</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">Raporlama dosyasƒ± eri≈üimleri ≈üu anda yalnƒ±zca MSBuild x64 varyantƒ± kullanƒ±ldƒ±ƒüƒ±nda destekleniyor.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">"{0}" √ß√∂z√ºmleyicisi "{1}" SDK‚Äôsƒ±nƒ± √ß√∂z√ºmlemeyi denedi.
+Uyarƒ±lar: {2}
+Hatalar: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: SDK √á√∂z√ºmleyici Hatasƒ±: "{0}"</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">"{0}" SDK‚Äôsƒ± "{1}" √ß√∂z√ºmleyicisi tarafƒ±ndan "{2}" konumuna ve "{3}" s√ºr√ºm√ºne ba≈üarƒ±yla √ß√∂z√ºmlendi.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">"{0}" g√∂revi {1} √ßekirdek istedi, {2} √ßekirdek aldƒ± ve ≈üu anda toplam {3} √ßekirdek tutuyor.</target>
@@ -492,7 +622,7 @@
       <trans-unit id="UnhandledMSBuildError">
         <source>This is an unhandled exception in MSBuild -- PLEASE UPVOTE AN EXISTING ISSUE OR FILE A NEW ONE AT https://aka.ms/msbuild/unhandled
     {0}</source>
-        <target state="translated">Bu, MSBuild'de i≈ülenmeyen bir istisnadƒ±r -- L√úTFEN MEVCUT Bƒ∞R SORUNU OYLAYIN VEYA https://aka.ms/msbuild/unhandled ADRESƒ∞NDE YENƒ∞ Bƒ∞R SORUN OLU≈ûTURUN
+        <target state="translated">Bu, MSBuild'de i≈ülenmeyen bir istisnadƒ±r -- L√úTFEN MEVCUT Bƒ∞R SORUNU OYLAYIN VEYA https://aka.ms/msbuild/unhandled ADRESƒ∞NDE YENƒ∞ Bƒ∞R SORUN DOSYALAYIN
     {0}</target>
         <note />
       </trans-unit>
@@ -2490,8 +2620,8 @@ Kullanƒ±m:             {0} Ortalama Kullanƒ±m: {1:###.0}</target>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: G√ºnl√ºk dosyasƒ±nƒ±n bi√ßim s√ºr√ºm√º {0} ancak bu MSBuild s√ºr√ºm√ºn√ºn desteklediƒüi en y√ºksek s√ºr√ºm {1}.</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: G√ºnl√ºk dosyasƒ±nƒ±n bi√ßim s√ºr√ºm√º {0} ve gerekli en d√º≈ü√ºk okuyucu s√ºr√ºm√º {1}, ancak bu MSBuild s√ºr√ºm√ºn√ºn desteklediƒüi en y√ºksek s√ºr√ºm {2}.</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Kullanƒ±m:             {0} Ortalama Kullanƒ±m: {1:###.0}</target>
         <target state="translated">MSB4241: "{0}" SDK ba≈üvurusunun "{1}" s√ºr√ºm√º, bunun yerine s√ºr√ºm "{2}" olarak √ß√∂z√ºmlendi. Ba≈üvurulan s√ºr√ºm√º e≈üle≈üecek ≈üekilde g√ºncelle≈ütirmezseniz beklenen s√ºr√ºmden farklƒ± bir s√ºr√ºm kullanƒ±yor olabilirsiniz.</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">'{0}' SDK‚Äôsƒ± √ß√∂z√ºmleniyor...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index d13b0908ee6..d148cff64c7 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">Â∑≤ÈÄöËøá GetContentReader ‰ª• StreamReader ÂΩ¢ÂºèËé∑ÂèñÁöÑÂÜÖÂÆπ„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">Â∑≤ÈÄöËøá GetContent ‰ª•Â≠óÁ¨¶‰∏≤ÂΩ¢ÂºèËé∑ÂèñÊàñ‰ªÖÂàùÂßãÂåñ‰∏∫Â≠óÁ¨¶‰∏≤ÁöÑÂÜÖÂÆπ„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">Â∑≤Ëé∑Âèñ ArchiveFileÔºå‰ΩÜÊú™ËÆæÁΩÆÊúÄÁªàÁºñËæëÁöÑÁâàÊú¨„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">Êñá‰ª∂Ê†ºÂºèÁâàÊú¨ {0} ‰∏çÊîØÊåÅÂêëÂâçÂÖºÂÆπËØªÂèñ(ÈúÄË¶Å &gt;= 18)„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">ÂØºÂÖ•ÁöÑÊñá‰ª∂Â≠òÊ°£Ë∂ÖÂá∫‰∫Ü 2GB ÁöÑÈôêÂà∂ÔºåÂπ∂‰∏îÊú™ÂµåÂÖ•„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">Âú®ÂêëÂâçÂÖºÂÆπËØªÂèñÊúüÈó¥ÔºåÂøÖÈ°ªËÆ¢ÈòÖ RecoverableReadError„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">BuildEvent ËÆ∞ÂΩïÂè∑ {0} (Â∫èÂàóÂåñÂ§ßÂ∞è: {1}%1)Â∞ùËØïÊâßË°å‰∏çÂÖÅËÆ∏ÁöÑËØªÂèñ(ËØ¶ÁªÜ‰ø°ÊÅØ: {2}: {3})„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">Ê≠£Âú®Ë∑≥ËøáËÆ∞ÂΩï„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">BuildEvent ËÆ∞ÂΩïÂè∑ {0} Â∫î‰ªéÊµÅ‰∏≠ËØªÂèñÊÅ∞Â•Ω {1} Â≠óËäÇÔºå‰ΩÜËØªÂèñ‰∫Ü {2} Â≠óËäÇ„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">BuildEvent ËÆ∞ÂΩïÂè∑ {0} (Â∫èÂàóÂåñÂ§ßÂ∞è: {1})ÊòØ‰∏çÂèóÊîØÊåÅÁöÑÁ±ªÂûã: {2}„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">‰ªª‰Ωï‰∫ã‰ª∂ÈÉΩÊ≤°ÊúâËÆ¢ÈòÖËÄÖ„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">Êó†Ê≥ïÂêåÊó∂ÈáçÊí≠ÁªìÊûÑÂåñ‰∫ã‰ª∂ÂíåÂéüÂßã‰∫ã‰ª∂„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">Â∞öÊú™ÂàùÂßãÂåñÁâàÊú¨‰ø°ÊÅØ„ÄÇÂøÖÈ°ªÈ¶ñÂÖàË∞ÉÁî®ÈáçÊí≠„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">ÊµÅÂøÖÈ°ª‰∏∫ÂèØËØª„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">‰ªÖÊîØÊåÅ‰ªé SeekOrigin.Current ËøõË°åÊü•Êâæ„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">‰∏çÊîØÊåÅÊõ¥ÊîπÊµÅÈïøÂ∫¶„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">Â∞ùËØïË∑≥Ëøá {0} Â≠óËäÇÔºå‰ªÖÂÖÅËÆ∏ÊúÄÈ´ò int.MaxValue ÁöÑÈùûË¥üÂÅèÁßªÈáè„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">‰∏çÊîØÊåÅÂÜôÂÖ•„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">ÈóÆÈ¢òÁîüÊàêÂ§±Ë¥•„ÄÇÁîüÊàêÊèêÂâçÈÄÄÂá∫ÔºåÂõ†‰∏∫ÈÅáÂà∞‰∏çÊòØÊúÄÊñ∞ÁöÑÁõÆÊ†áÊàñ‰ªªÂä°„ÄÇ</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: ÁîüÊàêÂ∑≤ÊÑèÂ§ñÂÅúÊ≠¢ÔºåÂõ†‰∏∫ËÆ∞ÂΩïÂô®ÂèëÁîüÊïÖÈöú„ÄÇ
+   {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: ‚Äú{2}‚ÄùÂºïÁî® {0} ‰∏™È°πÔºåËÄå‚Äú{3}‚ÄùÂºïÁî® {1} ‰∏™È°π„ÄÇÂÆÉ‰ª¨ÂøÖÈ°ªÂÖ∑ÊúâÁõ∏ÂêåÁöÑÈ°πÊï∞„ÄÇ</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: Âú®Êù°‰ª∂‚Äú{0}‚ÄùÁöÑ‰ΩçÁΩÆ‚Äú{1}‚ÄùÂ§ÑÂá∫Áé∞ÊÑèÂ§ñÁ©∫Ê†º„ÄÇÊòØÂê¶ÂøòËÆ∞‰∫ÜÂà†Èô§Á©∫Ê†º?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: ÂØºÂÖ•ÁöÑÊñá‰ª∂‚Äú{0}‚Äù‰∏çÂ≠òÂú®ÔºåÂπ∂‰∏î‰ºº‰πéÊòØ Visual Studio ÁªÑ‰ª∂ÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇÊ≠§Êñá‰ª∂ÂèØËÉΩÈúÄË¶Å MSBuild.exe ÊâçËÉΩÊàêÂäüÂØºÂÖ•ÔºåÂõ†Ê≠§ÂèØËÉΩÊó†Ê≥ïÂú® dotnet CLI ‰∏≠ÁîüÊàê„ÄÇ </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: ‰ª•‰∏ãËæìÂÖ•ÁªìÊûúÁºìÂ≠òÊñá‰ª∂‰∏çÂ≠òÂú®:‚Äú{0}‚Äù</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">‰ΩøÁî® SharingPolicy.Isolated ÂàõÂª∫ÁöÑ EvaluationContext ÂØπË±°‰∏çÊîØÊåÅÈÄöËøá MSBuildFileSystemBase Êñá‰ª∂Á≥ªÁªü‰º†ÈÄí„ÄÇ</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">‰ΩøÁî® SharingPolicy.Isolated ÂàõÂª∫ÁöÑ EvaluationContext ÂØπË±°„ÄÇSharingPolicy.SharedSDKCache ‰∏çÊîØÊåÅË¢´‰º†ÈÄí MSBuildFileSystemBase Êñá‰ª∂Á≥ªÁªü„ÄÇ</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">Êú™ÊâæÂà∞ÊâÄÈúÄÁöÑ NuGet Á®ãÂ∫èÈõÜ„ÄÇÊâÄÈúÄË∑ØÂæÑ: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">Êó†Ê≥ïÂä†ËΩΩÊâÄÈúÄÁöÑ NuGet Á®ãÂ∫èÈõÜ‚Äú{0}‚Äù„ÄÇ</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">ÂΩìÂâç‰ªÖÊîØÊåÅ‰ΩøÁî® x64 È£éÊ†ºÁöÑ MSBuild Êù•Êä•ÂëäÊñá‰ª∂ËÆøÈóÆÊÉÖÂÜµ„ÄÇ</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">‚Äú{0}‚ÄùËß£ÊûêÁ®ãÂ∫èÂ∑≤Â∞ùËØïËß£Êûê SDK‚Äú{1}‚Äù„ÄÇ
+Ë≠¶Âëä: {2}
+ÈîôËØØ: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: SDK Ëß£ÊûêÁ®ãÂ∫èÂ§±Ë¥•: "{0}"</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">SDK‚Äú{0}‚ÄùÂ∑≤Áî±‚Äú{1}‚ÄùËß£ÊûêÁ®ãÂ∫èÊàêÂäüËß£Êûê‰∏∫‰ΩçÁΩÆ‚Äú{2}‚ÄùÂíåÁâàÊú¨‚Äú{3}‚Äù„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">‰ªªÂä°‚Äú{0}‚ÄùËØ∑Ê±Ç‰∫Ü {1} ‰∏™Ê†∏ÂøÉÔºåÂ∑≤Ëé∑Âèñ {2} ‰∏™Ê†∏ÂøÉÔºåÁé∞ÊÄªÂÖ±ÂåÖÂê´ {3} ‰∏™Ê†∏ÂøÉ„ÄÇ</target>
@@ -2421,7 +2551,7 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
       </trans-unit>
       <trans-unit id="InvalidSdkFormat">
         <source>MSB4229: The value "{0}" is not valid for an Sdk specification. The attribute should be a semicolon-delimited list of Sdk-name/minimum-version pairs, separated by a forward slash.</source>
-        <target state="translated">MSB4229: ÂÄº‚Äú{0}‚ÄùÂØπ Sdk ËßÑËåÉÊó†Êïà„ÄÇÊ≠§Â±ûÊÄßÂ∫îËØ•ÊòØ‰ª•ÂàÜÂè∑ÂàÜÈöîÁöÑSdk-name/minimum-version ÂØπ (Áî®Ê≠£ÊñúÊù†ÂàÜÈöî) ÁöÑÂàóË°®„ÄÇ</target>
+        <target state="translated">MSB4229: ÂÄº‚Äú{0}‚ÄùÂØπ Sdk ËßÑËåÉÊó†Êïà„ÄÇÊ≠§Â±ûÊÄßÂ∫îËØ•ÊòØ‰ª•ÂàÜÂè∑ÂàÜÈöîÁöÑSdk-name/minimum-version ÂØπÔºàÁî®Ê≠£ÊñúÊù†ÂàÜÈöîÔºâÁöÑÂàóË°®„ÄÇ</target>
         <note>{StrBegin="MSB4229: "}</note>
       </trans-unit>
       <trans-unit id="TaskInstantiationFailureNotSupported">
@@ -2490,8 +2620,8 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: Êó•ÂøóÊñá‰ª∂Ê†ºÂºèÁâàÊú¨‰∏∫ {0}Ôºå‰ΩÜÊ≠§ÁâàÊú¨ÁöÑ MSBuild ‰ªÖÊîØÊåÅ {1} ÂèäÊõ¥‰ΩéÁâàÊú¨„ÄÇ</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: Êó•ÂøóÊñá‰ª∂Ê†ºÂºèÁâàÊú¨‰∏∫ {0}ÔºåÂÖ∂ÊâÄÈúÄÁöÑÊúÄ‰ΩéËØªÂèñÂô®ÁâàÊú¨‰∏∫ {1}ÔºåËÄåÊ≠§ÁâàÊú¨ÁöÑ MSBuild ÊúÄÈ´ò‰ªÖÊîØÊåÅ {2} ÁâàÊú¨„ÄÇ</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <target state="translated">MSB4241: SDK ÂºïÁî®‚Äú{0}‚ÄùÁâàÊú¨‚Äú{1}‚ÄùÂ∑≤Êîπ‰∏∫Ëß£ÊûêÂà∞ÁâàÊú¨‚Äú{2}‚Äù„ÄÇÂ¶ÇÊûú‰∏çÊõ¥Êñ∞Ë¶ÅÂåπÈÖçÁöÑÂ∑≤ÂºïÁî®ÁâàÊú¨Ôºå‰Ω†ÂèØËÉΩ‰ºö‰ΩøÁî®‰∏éÈ¢ÑÊúü‰∏çÂêåÁöÑÁâàÊú¨„ÄÇ</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">Ê≠£Âú®Ëß£Êûê SDK‚Äú{0}‚Äù...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Resources/xlf/Strings.zh-Hant.xlf b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
index 69a33fe9a21..ef485bd062f 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
@@ -26,6 +26,106 @@
         <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
     instead of the "ContinueOnError".</note>
       </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsStream">
+        <source>Content already acquired as StreamReader via GetContentReader.</source>
+        <target state="translated">ÂÖßÂÆπÂ∑≤ÈÄèÈÅé GetContentReader ÂèñÂæóÁÇ∫ StreamReader„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_AcquiredAsString">
+        <source>Content already acquired as string via GetContent or initialized as string only.</source>
+        <target state="translated">ÂÖßÂÆπÂ∑≤ÈÄèÈÅé GetContent ÂèñÂæóÁÇ∫Â≠ó‰∏≤ÔºåÊàñÂàùÂßãÂåñÁÇ∫ÂÉÖÂ≠ó‰∏≤„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ArchiveFile_NotSetAfterAcquire">
+        <source>ArchiveFile was obtained, but the final edited version was not set.</source>
+        <target state="translated">Â∑≤ÂèñÂæó ArchiveFileÔºå‰ΩÜÊú™Ë®≠ÂÆöÊúÄÁµÇÁ∑®ËºØÁöÑÁâàÊú¨„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_FwdCompatUnsupported">
+        <source>Forward compatible reading is not supported for file format version {0} (needs &gt;= 18).</source>
+        <target state="translated">Ê™îÊ°àÊ†ºÂºèÁâàÊú¨ {0} ‰∏çÊîØÊè¥Ê≠£ÂêëÁõ∏ÂÆπËÆÄÂèñ (ÈúÄË¶Å &gt;= 18)„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting version.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ImportFileSizeError">
+        <source>Imported files archive exceeded 2GB limit and it's not embedded.</source>
+        <target state="translated">ÂåØÂÖ•ÁöÑÊ™îÊ°àÂ∞ÅÂ≠òË∂ÖÈÅé 2 GB ÈôêÂà∂Ôºå‰∏îÊú™ÂÖßÂµå„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_MissingRecoverableErrorSubscribeError">
+        <source>Subscription to RecoverableReadError is mandatory during forward compatible reading.</source>
+        <target state="translated">Âú®Ê≠£ÂêëÁõ∏ÂÆπËÆÄÂèñÊúüÈñìÔºåÂøÖÈ†àË®ÇÈñ± RecoverableReadError„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderMismatchedRead">
+        <source>BuildEvent record number {0} (serialized size: {1}) attempted to perform disallowed reads (details: {2}: {3}).</source>
+        <target state="translated">BuildEvent Ë®òÈåÑÁ∑®Ëôü {0} (Â∫èÂàóÂåñÂ§ßÂ∞è: {1}) ÂòóË©¶Âü∑Ë°åÁ¶ÅÊ≠¢ÁöÑËÆÄÂèñ (Ë©≥Á¥∞Ë≥áÊñô: {2}: {3})„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an exception type and {3} the exception message string.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderSkippingRecord">
+        <source>Skipping the record.</source>
+        <target state="translated">Ê≠£Âú®Áï•ÈÅéË®òÈåÑ„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnderRead">
+        <source>BuildEvent record number {0} was expected to read exactly {1} bytes from the stream, but read {2} instead.</source>
+        <target state="translated">BuildEvent Ë®òÈåÑÁ∑®Ëôü {0} È†êÊúüÊúÉÂæûË≥áÊñôÊµÅËÆÄÂèñÁ¢∫Âàá {1} ÂÄã‰ΩçÂÖÉÁµÑÔºå‰ΩÜÊîπÁÇ∫ËÆÄÂèñ {2}„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is an integer value indicating number of bytes.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_ReaderUnknownType">
+        <source>BuildEvent record number {0} (serialized size: {1}) is of unsupported type: {2}.</source>
+        <target state="translated">BuildEvent Ë®òÈåÑÁ∑®Ëôü {0} (Â∫èÂàóÂåñÂ§ßÂ∞è: {1}) ÁöÑÈ°ûÂûã‰∏çÂèóÊîØÊè¥: {2}„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is an integer number denoting order. {1} is an integer denoting size. {2} is a string or integer value indicating type.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MissingSubscribeError">
+        <source>No subscribers for any events.</source>
+        <target state="translated">Ê≤íÊúâ‰ªª‰Ωï‰∫ã‰ª∂ÁöÑË®ÇÈñ±ËÄÖ„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_MultiSubscribeError">
+        <source>Structured events and raw events cannot be replayed at the same time.</source>
+        <target state="translated">ÁµêÊßãÂåñ‰∫ã‰ª∂ÂíåÂéüÂßã‰∫ã‰ª∂‰∏çËÉΩÂêåÊôÇÈáçÊñ∞Âü∑Âæû„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_Source_VersionUninitialized">
+        <source>Version info not yet initialized. Replay must be called first.</source>
+        <target state="translated">ÁâàÊú¨Ë≥áË®äÂ∞öÊú™ÂàùÂßãÂåñ„ÄÇÂøÖÈ†àÂÖàÂè´Áî®ÈáçÊñ∞Âü∑Ë°å„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_MustBeReadable">
+        <source>Stream must be readable.</source>
+        <target state="translated">Ë≥áÊñôÊµÅÂøÖÈ†àÂèØËÆÄÂèñ„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SeekNonOrigin">
+        <source>Only seeking from SeekOrigin.Current is supported.</source>
+        <target state="translated">ÂÉÖÊîØÊè¥Âæû SeekOrigin.Current Â∞ãÊâæ„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_SetLengthUnsupported">
+        <source>Changing the stream length is not supported.</source>
+        <target state="translated">‰∏çÊîØÊè¥ËÆäÊõ¥Ë≥áÊñôÊµÅÈï∑Â∫¶„ÄÇ</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_UnsupportedSkipOffset">
+        <source>Attempt to skip {0} bytes, only non-negative offset up to int.MaxValue is allowed.</source>
+        <target state="translated">ÂòóË©¶Áï•ÈÅé {0} ÂÄã‰ΩçÂÖÉÁµÑÔºåÂÉÖÂÖÅË®±ÊúÄÂ§öÁÇ∫ int.MaxValue ÁöÑÈùûË≤†Êï∏‰ΩçÁßª„ÄÇ</target>
+        <note>
+      LOCALIZATION: {0} is integer number denoting number of bytes. 'int.MaxValue' should not be translated.
+    </note>
+      </trans-unit>
+      <trans-unit id="Binlog_StreamUtils_WriteUnsupported">
+        <source>Writing is not supported.</source>
+        <target state="translated">‰∏çÊîØÊè¥ÂØ´ÂÖ•„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
         <source>Question build FAILED. The build exited early as it encountered a target or task that was not up-to-date.</source>
         <target state="translated">ÂïèÈ°åÂª∫Á´ãÂ§±Êïó„ÄÇÂª∫ÁΩÆÊèêÊó©ÁµêÊùüÔºåÂõ†ÁÇ∫ÂÆÉÈÅáÂà∞‰∏çÊòØÊúÄÊñ∞ÁöÑÁõÆÊ®ôÊàñÂ∑•‰Ωú„ÄÇ</target>
@@ -149,6 +249,15 @@
   {1}</target>
         <note />
       </trans-unit>
+      <trans-unit id="FatalErrorWhileLoggingWithInnerException">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.
+    {0}</source>
+        <target state="translated">MSB4017: Âõ†ÁÇ∫Êú™È†êÊúüÁöÑË®òÈåÑÂô®Â§±ÊïóÔºåÂª∫ÁΩÆÊú™È†êÊúüÂÅúÊ≠¢„ÄÇ
+   {0}</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
       <trans-unit id="General.TwoVectorsMustHaveSameLength">
         <source>MSB3094: "{2}" refers to {0} item(s), and "{3}" refers to {1} item(s). They must have the same number of items.</source>
         <target state="translated">MSB3094: "{2}" ÂèÉËÄÉ {0} ÂÄãÈ†ÖÁõÆÔºå"{3}" ÂâáÂèÉËÄÉ {1} ÂÄãÈ†ÖÁõÆ„ÄÇÂÖ©ËÄÖÂèÉËÄÉÁöÑÈ†ÖÁõÆÊï∏ÁõÆÂøÖÈ†àÁõ∏Âêå„ÄÇ</target>
@@ -159,6 +268,11 @@
         <target state="translated">MSB4259: Ê¢ù‰ª∂ "{0}" ÁöÑ‰ΩçÁΩÆ "{1}" Âá∫ÁèæÈùûÈ†êÊúüÁöÑÁ©∫Ê†º„ÄÇÂøòË®òÁßªÈô§Á©∫Ê†º‰∫ÜÂóé?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="ImportedProjectFromVSDistribution">
+        <source>MSB4278: The imported file "{0}" does not exist and appears to be part of a Visual Studio component. This file may require MSBuild.exe in order to be imported successfully, and so may fail to build in the dotnet CLI. </source>
+        <target state="translated">MSB4278: ÂåØÂÖ•ÁöÑÊ™îÊ°à "{0}" ‰∏çÂ≠òÂú®ÔºåËÄå‰∏î‰ºº‰πéÊòØ Visual Studio ÂÖÉ‰ª∂ÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇÊ≠§Ê™îÊ°àÂèØËÉΩÈúÄË¶Å MSBuild.exe ÊâçËÉΩÊàêÂäüÂåØÂÖ•ÔºåÂõ†Ê≠§ÂèØËÉΩÁÑ°Ê≥ïÂú® dotnet CLI ‰∏≠Âª∫ÁΩÆ„ÄÇ </target>
+        <note>{StrBegin="MSB4278: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: ‰∏ãÂàóËº∏ÂÖ•ÁµêÊûúÂø´ÂèñÊ™îÊ°à‰∏çÂ≠òÂú®: "{0}"</target>
@@ -170,8 +284,8 @@
         <note />
       </trans-unit>
       <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
-        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
-        <target state="translated">‰ΩøÁî® SharingPolicy.Isolated Âª∫Á´ãÁöÑ EvaluationContext Áâ©‰ª∂‰∏çÊîØÊè¥‰ª• MSBuildFileSystemBase Ê™îÊ°àÁ≥ªÁµ±ÂÇ≥ÈÅû„ÄÇ</target>
+        <source>EvaluationContext objects created with SharingPolicy.Isolated or SharingPolicy.SharedSDKCache do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="translated">‰ΩøÁî® SharingPolicy.Isolated Êàñ SharingPolicy.SharedSDKCache Âª∫Á´ãÁöÑ EvaluationContext Áâ©‰ª∂‰∏çÊîØÊè¥‰ª• MSBuildFileSystemBase Ê™îÊ°àÁ≥ªÁµ±ÂÇ≥ÈÅû„ÄÇ</target>
         <note />
       </trans-unit>
       <trans-unit id="ItemReferencingSelfInTarget">
@@ -222,8 +336,8 @@
         <note />
       </trans-unit>
       <trans-unit id="NuGetAssemblyNotFound">
-        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
-        <target state="translated">Êâæ‰∏çÂà∞ÂøÖË¶ÅÁöÑ NuGet ÂÖÉ‰ª∂„ÄÇÈ†êÊúüÁöÑË∑ØÂæë: {0}</target>
+        <source>A required NuGet assembly '{0}' could not be loaded.</source>
+        <target state="translated">ÁÑ°Ê≥ïËºâÂÖ•ÂøÖË¶ÅÁöÑ NuGet ÁµÑ‰ª∂ '{0}'„ÄÇ</target>
         <note />
       </trans-unit>
       <trans-unit id="NullReferenceFromProjectInstanceFactory">
@@ -390,6 +504,17 @@
         <target state="translated">ÁõÆÂâçÂè™ÊîØÊè¥‰ΩøÁî® MSBuild ÁöÑ x64 ËÆäÈ´î‰æÜÂ†±ÂëäÊ™îÊ°àÂ≠òÂèñ„ÄÇ</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverAttempt">
+        <source>The "{0}" resolver attempted to resolve the SDK "{1}".
+Warnings: {2}
+Errors: {3}</source>
+        <target state="translated">"{0}" Ëß£ÊûêÁ®ãÂºèÂ∑≤ÂòóË©¶Ëß£Êûê SDK "{1}"„ÄÇ
+Ë≠¶Âëä: {2}
+ÈåØË™§: {3}</target>
+        <note>
+      LOCALIZATION: Do not localize the word SDK. "{2}" is new line separated warnings or "null". "{3}" is new line separated errors or "null".
+    </note>
+      </trans-unit>
       <trans-unit id="SDKResolverCriticalFailure">
         <source>MSB4242: SDK Resolver Failure: "{0}"</source>
         <target state="translated">MSB4242: SDK Ëß£ÊûêÁ®ãÂºèÂ§±Êïó: "{0}"</target>
@@ -451,6 +576,11 @@
       LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
     </note>
       </trans-unit>
+      <trans-unit id="SucceededToResolveSDK">
+        <source>The SDK "{0}" was successfully resolved by the "{1}" resolver to location "{2}" and version "{3}".</source>
+        <target state="translated">SDK "{0}" Â∑≤Áî± "{1}" Ëß£ÊûêÁ®ãÂºèÊàêÂäüËß£ÊûêÁÇ∫‰ΩçÁΩÆ "{2}" ÂíåÁâàÊú¨ "{3}"„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskAcquiredCores">
         <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
         <target state="translated">Â∑•‰Ωú "{0}" Â∑≤Ë¶ÅÊ±Ç {1} ÂÄãÊ†∏ÂøÉ„ÄÅÂ∑≤ÂèñÂæó {2} ÂÄãÊ†∏ÂøÉÔºåÁèæÂú®ÂÖ±‰øùÁïô {3} ÂÄãÊ†∏ÂøÉ„ÄÇ</target>
@@ -2490,8 +2620,8 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <note>{StrBegin="MSB4238: "}</note>
       </trans-unit>
       <trans-unit id="UnsupportedLogFileFormat">
-        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
-        <target state="translated">MSB4235: Ë®òÈåÑÊ™îÊ†ºÂºèÁâàÊú¨ÁÇ∫ {0}Ôºå‰ΩÜÊ≠§Áâà MSBuild ÂÉÖÊîØÊè¥ {1} (Âê´) ‰πãÂâçÁöÑÁâàÊú¨„ÄÇ</target>
+        <source>MSB4235: The log file format version is {0} with minimum required reader version {1}, whereas this version of MSBuild only supports versions up to {2}.</source>
+        <target state="translated">MSB4235: Ë®òÈåÑÊ™îÊ†ºÂºèÁâàÊú¨ÁÇ∫ {0}ÔºåÂÖ∂ÂÖ∑ÊúâÊúÄ‰ΩéËÆÄÂèñÂô®ÁâàÊú¨ {1}ÔºåËÄåÊ≠§ÁâàÊú¨ÁöÑ MSBuild Âè™ÊîØÊè¥ÊúÄÂ§öÁÇ∫ {2} ÁöÑÁâàÊú¨„ÄÇ</target>
         <note>{StrBegin="MSB4235: "}</note>
       </trans-unit>
       <trans-unit id="ProjectEvaluationPerformanceSummary">
@@ -2581,13 +2711,6 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <target state="translated">MSB4241: SDK ÂèÉËÄÉ "{0}" ÁâàÊú¨ "{1}" Â∑≤ÊîπÁÇ∫Ëß£ÊûêÊàêÁâàÊú¨ "{2}"„ÄÇËã•ÊÇ®Êú™Â∞áÂèÉËÄÉÁöÑÁâàÊú¨Êõ¥Êñ∞ÁÇ∫Á¨¶ÂêàÁöÑÁâàÊú¨ÔºåÊÇ®ÂèØËÉΩ‰ΩøÁî®‰∫ÜËàáÈ†êÊúü‰∏çÂêåÁöÑÁâàÊú¨„ÄÇ</target>
         <note>{StrBegin="MSB4241: "}
       LOCALIZATION:  Do not localize the word SDK.
-    </note>
-      </trans-unit>
-      <trans-unit id="SdkResolving">
-        <source>Resolving SDK '{0}'...</source>
-        <target state="translated">Ê≠£Âú®Ëß£Êûê SDK '{0}'...</target>
-        <note>
-      LOCALIZATION:  Do not localize the word SDK.
     </note>
       </trans-unit>
       <trans-unit id="SdkResolverManifestInvalid">
diff --git a/src/Build/Utilities/EngineFileUtilities.cs b/src/Build/Utilities/EngineFileUtilities.cs
index 5942dad9bad..e2d3c40a131 100644
--- a/src/Build/Utilities/EngineFileUtilities.cs
+++ b/src/Build/Utilities/EngineFileUtilities.cs
@@ -191,10 +191,14 @@ private static string[] GetFileList(
             FileMatcher.SearchAction action = FileMatcher.SearchAction.None;
             string excludeFileSpec = string.Empty;
 
-            var noWildcards = !FilespecHasWildcards(filespecEscaped) || FilespecMatchesLazyWildcard(filespecEscaped, forceEvaluateWildCards);
-
-            // It is possible to return original string if no wildcard matches and no entries in Exclude set.
-            if (noWildcards && excludeSpecsEscaped?.Any() != true)
+            var filespecHasNoWildCards = !FilespecHasWildcards(filespecEscaped);
+            var filespecMatchesLazyWildcard = FilespecMatchesLazyWildcard(filespecEscaped, forceEvaluateWildCards);
+            var excludeSpecsAreEmpty = excludeSpecsEscaped?.Any() != true;
+            
+            // Return original value if:
+            //      FileSpec matches lazyloading regex or
+            //      file has no wildcard and excludeSpecs are empty
+            if ( filespecMatchesLazyWildcard || (filespecHasNoWildCards && excludeSpecsAreEmpty) )
             {
                 // Just return the original string.
                 fileList = new string[] { returnEscaped ? filespecEscaped : EscapingUtilities.UnescapeAll(filespecEscaped) };
diff --git a/src/Build/Utilities/NuGetFrameworkWrapper.cs b/src/Build/Utilities/NuGetFrameworkWrapper.cs
index 367ef9ddf2b..97ccb0de770 100644
--- a/src/Build/Utilities/NuGetFrameworkWrapper.cs
+++ b/src/Build/Utilities/NuGetFrameworkWrapper.cs
@@ -3,6 +3,7 @@
 
 using System;
 using System.Collections.Generic;
+using System.Globalization;
 using System.IO;
 using System.Linq;
 using System.Reflection;
@@ -16,47 +17,63 @@
 namespace Microsoft.Build.Evaluation
 {
     /// <summary>
-    /// Wraps the NuGet.Frameworks assembly, which is referenced by reflection.
+    /// Wraps the NuGet.Frameworks assembly, which is referenced by reflection and optionally loaded into a separate AppDomain for performance.
     /// </summary>
-    internal class NuGetFrameworkWrapper
+    internal sealed partial class NuGetFrameworkWrapper
+#if FEATURE_APPDOMAIN
+        : MarshalByRefObject
+#endif
     {
+        private const string NuGetFrameworksAssemblyName = "NuGet.Frameworks";
+        private const string NuGetFrameworksFileName = NuGetFrameworksAssemblyName + ".dll";
+
         /// <summary>
-        /// NuGet Types
+        /// Methods, properties, and objects used from the NuGet.Frameworks assembly.
         /// </summary>
-        private static MethodInfo ParseMethod;
-        private static MethodInfo IsCompatibleMethod;
-        private static object DefaultCompatibilityProvider;
-        private static PropertyInfo FrameworkProperty;
-        private static PropertyInfo VersionProperty;
-        private static PropertyInfo PlatformProperty;
-        private static PropertyInfo PlatformVersionProperty;
-        private static PropertyInfo AllFrameworkVersionsProperty;
+        private MethodInfo ParseMethod;
+        private MethodInfo IsCompatibleMethod;
+        private object DefaultCompatibilityProvider;
+        private PropertyInfo FrameworkProperty;
+        private PropertyInfo VersionProperty;
+        private PropertyInfo PlatformProperty;
+        private PropertyInfo PlatformVersionProperty;
+        private PropertyInfo AllFrameworkVersionsProperty;
 
+        /// <summary>
+        /// Public constructor for cross-domain activation only. Use <see cref="CreateInstance"/> to instantiate.
+        /// </summary>
         public NuGetFrameworkWrapper()
+        { }
+
+        /// <summary>
+        /// Initialized this instance. May run in a separate AppDomain.
+        /// </summary>
+        /// <param name="assemblyName">The NuGet.Frameworks to be loaded or null to load by path.</param>
+        /// <param name="assemblyFilePath">The file path from which NuGet.Frameworks should be loaded of <paramref name="assemblyName"/> is null.</param>
+        public void Initialize(AssemblyName assemblyName, string assemblyFilePath)
         {
-            // Resolve the location of the NuGet.Frameworks assembly
-            var assemblyDirectory = BuildEnvironmentHelper.Instance.Mode == BuildEnvironmentMode.VisualStudio ?
-                Path.Combine(BuildEnvironmentHelper.Instance.VisualStudioInstallRootDirectory, "Common7", "IDE", "CommonExtensions", "Microsoft", "NuGet") :
-                BuildEnvironmentHelper.Instance.CurrentMSBuildToolsDirectory;
-            try
+            Assembly NuGetAssembly;
+            if (assemblyName != null)
             {
-                var NuGetAssembly = Assembly.LoadFile(Path.Combine(assemblyDirectory, "NuGet.Frameworks.dll"));
-                var NuGetFramework = NuGetAssembly.GetType("NuGet.Frameworks.NuGetFramework");
-                var NuGetFrameworkCompatibilityProvider = NuGetAssembly.GetType("NuGet.Frameworks.CompatibilityProvider");
-                var NuGetFrameworkDefaultCompatibilityProvider = NuGetAssembly.GetType("NuGet.Frameworks.DefaultCompatibilityProvider");
-                ParseMethod = NuGetFramework.GetMethod("Parse", new Type[] { typeof(string) });
-                IsCompatibleMethod = NuGetFrameworkCompatibilityProvider.GetMethod("IsCompatible");
-                DefaultCompatibilityProvider = NuGetFrameworkDefaultCompatibilityProvider.GetMethod("get_Instance").Invoke(null, Array.Empty<object>());
-                FrameworkProperty = NuGetFramework.GetProperty("Framework");
-                VersionProperty = NuGetFramework.GetProperty("Version");
-                PlatformProperty = NuGetFramework.GetProperty("Platform");
-                PlatformVersionProperty = NuGetFramework.GetProperty("PlatformVersion");
-                AllFrameworkVersionsProperty = NuGetFramework.GetProperty("AllFrameworkVersions");
+                // This will load the assembly into the default load context if possible, and fall back to LoadFrom context.
+                NuGetAssembly = Assembly.Load(assemblyName);
             }
-            catch
+            else
             {
-                throw new InternalErrorException(string.Format(AssemblyResources.GetString("NuGetAssemblyNotFound"), assemblyDirectory));
+                NuGetAssembly = Assembly.LoadFile(assemblyFilePath);
             }
+
+            var NuGetFramework = NuGetAssembly.GetType("NuGet.Frameworks.NuGetFramework");
+            var NuGetFrameworkCompatibilityProvider = NuGetAssembly.GetType("NuGet.Frameworks.CompatibilityProvider");
+            var NuGetFrameworkDefaultCompatibilityProvider = NuGetAssembly.GetType("NuGet.Frameworks.DefaultCompatibilityProvider");
+            ParseMethod = NuGetFramework.GetMethod("Parse", new Type[] { typeof(string) });
+            IsCompatibleMethod = NuGetFrameworkCompatibilityProvider.GetMethod("IsCompatible");
+            DefaultCompatibilityProvider = NuGetFrameworkDefaultCompatibilityProvider.GetMethod("get_Instance").Invoke(null, Array.Empty<object>());
+            FrameworkProperty = NuGetFramework.GetProperty("Framework");
+            VersionProperty = NuGetFramework.GetProperty("Version");
+            PlatformProperty = NuGetFramework.GetProperty("Platform");
+            PlatformVersionProperty = NuGetFramework.GetProperty("PlatformVersion");
+            AllFrameworkVersionsProperty = NuGetFramework.GetProperty("AllFrameworkVersions");
         }
 
         private object Parse(string tfm)
@@ -133,5 +150,104 @@ public string FilterTargetFrameworks(string incoming, string filter)
                 });
             }
         }
+
+#if FEATURE_APPDOMAIN
+        /// <summary>
+        /// A null-returning InitializeLifetimeService to give the proxy an infinite lease time.
+        /// </summary>
+        public override object InitializeLifetimeService() => null;
+
+        /// <summary>
+        /// Creates <see cref="AppDomainSetup"/> suitable for loading Microsoft.Build, NuGet.Frameworks, and dependencies.
+        /// See https://github.com/dotnet/msbuild/blob/main/documentation/NETFramework-NGEN.md#nugetframeworks for the motivation
+        /// to use a separate AppDomain.
+        /// </summary>
+        private static AppDomainSetup CreateAppDomainSetup(AssemblyName assemblyName, string assemblyPath)
+        {
+            byte[] publicKeyToken = assemblyName.GetPublicKeyToken();
+            StringBuilder publicKeyTokenString = new(publicKeyToken.Length * 2);
+            for (int i = 0; i < publicKeyToken.Length; i++)
+            {
+                publicKeyTokenString.Append(publicKeyToken[i].ToString("x2", CultureInfo.InvariantCulture));
+            }
+
+            // Create an app.config for the AppDomain. We expect the AD to host the currently executing assembly Microsoft.Build,
+            // NuGet.Frameworks, and Framework assemblies. It is important to use the same binding redirects that were used when
+            // NGENing MSBuild for the native images to be used.
+            string configuration = $"""
+<?xml version="1.0" encoding="utf-8"?>
+  <configuration>
+    <runtime>
+      <DisableFXClosureWalk enabled="true" />
+      <DeferFXClosureWalk enabled="true" />
+      <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
+        {(Environment.Is64BitProcess ? _bindingRedirects64 : _bindingRedirects32)}
+        <dependentAssembly>
+          <assemblyIdentity name="{NuGetFrameworksAssemblyName}" publicKeyToken="{publicKeyTokenString}" culture="{assemblyName.CultureName}" />
+          <codeBase version="{assemblyName.Version}" href="{assemblyPath}" />
+        </dependentAssembly>
+      </assemblyBinding>
+    </runtime>
+  </configuration>
+""";
+
+            AppDomainSetup appDomainSetup = AppDomain.CurrentDomain.SetupInformation;
+            appDomainSetup.SetConfigurationBytes(Encoding.UTF8.GetBytes(configuration));
+            return appDomainSetup;
+        }
+#endif
+
+        public static NuGetFrameworkWrapper CreateInstance()
+        {
+            // Resolve the location of the NuGet.Frameworks assembly
+            string assemblyDirectory = BuildEnvironmentHelper.Instance.Mode == BuildEnvironmentMode.VisualStudio ?
+                Path.Combine(BuildEnvironmentHelper.Instance.VisualStudioInstallRootDirectory, "Common7", "IDE", "CommonExtensions", "Microsoft", "NuGet") :
+                BuildEnvironmentHelper.Instance.CurrentMSBuildToolsDirectory;
+
+            string assemblyPath = Path.Combine(assemblyDirectory, NuGetFrameworksFileName);
+
+            NuGetFrameworkWrapper instance = null;
+            AssemblyName assemblyName = null;
+#if FEATURE_APPDOMAIN
+            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10) &&
+                (BuildEnvironmentHelper.Instance.RunningInMSBuildExe || BuildEnvironmentHelper.Instance.RunningInVisualStudio))
+            {
+                // If we are running in MSBuild.exe or VS, we can load the assembly with Assembly.Load, which enables
+                // the runtime to bind to the native image, eliminating some non-trivial JITting cost. Devenv.exe knows how to
+                // load the assembly by name. In MSBuild.exe, however, we don't know the version of the assembly statically so
+                // we create a separate AppDomain with the right binding redirects.
+                try
+                {
+                    assemblyName = AssemblyName.GetAssemblyName(assemblyPath);
+                    if (assemblyName != null && BuildEnvironmentHelper.Instance.RunningInMSBuildExe)
+                    {
+                        AppDomainSetup appDomainSetup = CreateAppDomainSetup(assemblyName, assemblyPath);
+                        if (appDomainSetup != null)
+                        {
+                            AppDomain appDomain = AppDomain.CreateDomain(nameof(NuGetFrameworkWrapper), null, appDomainSetup);
+                            instance = (NuGetFrameworkWrapper)appDomain.CreateInstanceAndUnwrap(Assembly.GetExecutingAssembly().FullName, typeof(NuGetFrameworkWrapper).FullName);
+                        }
+                    }
+                }
+                catch
+                {
+                    // If anything goes wrong just fall back to loading into current AD by path.
+                    instance = null;
+                    assemblyName = null;
+                }
+            }
+#endif
+            try
+            {
+                instance ??= new NuGetFrameworkWrapper();
+                instance.Initialize(assemblyName, assemblyPath);
+
+                return instance;
+            }
+            catch (Exception ex)
+            {
+                throw new InternalErrorException(string.Format(AssemblyResources.GetString("NuGetAssemblyNotFound"), assemblyDirectory), ex);
+            }
+        }
     }
 }
diff --git a/src/Deprecated/Conversion.UnitTests/XMakeConversionUnitTests.csproj b/src/Deprecated/Conversion.UnitTests/XMakeConversionUnitTests.csproj
index e40299d2289..de178a504d3 100644
--- a/src/Deprecated/Conversion.UnitTests/XMakeConversionUnitTests.csproj
+++ b/src/Deprecated/Conversion.UnitTests/XMakeConversionUnitTests.csproj
@@ -33,8 +33,8 @@
   </PropertyGroup>
   <ItemGroup>
     <!-- Source Files -->
-    <Compile Include="..\..\shared\unittests\MockLogger.cs" />
-    <Compile Include="..\..\shared\unittests\ObjectModelHelpers.cs" />
+    <Compile Include="..\..\UnitTests.Shared\MockLogger.cs" />
+    <Compile Include="..\..\UnitTests.Shared\ObjectModelHelpers.cs" />
     <Compile Include="OldVSProjectFileReader_Tests.cs" />
     <Compile Include="ProjectFileConverter_Tests.cs" />
     <!-- Assemblies Files we depend on -->
diff --git a/src/Deprecated/Engine.UnitTests/Microsoft.Build.Engine.UnitTests.csproj b/src/Deprecated/Engine.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
index 7360b075b1d..b43f608a108 100644
--- a/src/Deprecated/Engine.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
+++ b/src/Deprecated/Engine.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
@@ -25,12 +25,12 @@
     <Compile Include="..\Shared\UnitTests\ErrorUtilities_Tests.cs" />
     <Compile Include="..\shared\unittests\FileUtilities_Tests.cs" />
     <Compile Include="..\shared\unittests\FileMatcher_Tests.cs" />
-    <Compile Include="..\shared\unittests\ObjectModelHelpers.cs" />
-    <Compile Include="..\Shared\UnitTests\MockEngine.cs" />
-    <Compile Include="..\Shared\UnitTests\MockLogger.cs" />
+    <Compile Include="..\UnitTests.Shared\ObjectModelHelpers.cs" />
+    <Compile Include="..\UnitTests.Shared\MockEngine.cs" />
+    <Compile Include="..\UnitTests.Shared\MockLogger.cs" />
     <Compile Include="..\shared\unittests\ResourceUtilities_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\SolutionParser_Tests.cs" />
-    <Compile Include="..\Shared\UnitTests\StreamHelpers.cs" />
+    <Compile Include="..\UnitTests.Shared\StreamHelpers.cs" />
     <Compile Include="..\shared\unittests\TypeLoader_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\XmakeAttributes_Tests.cs">
       <Link>XmakeAttributes_Tests.cs</Link>
diff --git a/src/Deprecated/Engine/Microsoft.Build.Engine.csproj b/src/Deprecated/Engine/Microsoft.Build.Engine.csproj
index 2b627bf1f99..fdd96ff09e0 100644
--- a/src/Deprecated/Engine/Microsoft.Build.Engine.csproj
+++ b/src/Deprecated/Engine/Microsoft.Build.Engine.csproj
@@ -4,7 +4,9 @@
     <NoWarn>$(NoWarn);618</NoWarn>
     <GenerateReferenceAssemblySource>true</GenerateReferenceAssemblySource>
     <EnableDefaultItems>false</EnableDefaultItems>
-    <CreateTlb>true</CreateTlb>
+    <!-- Do not create Tlbs when building in .NET product mode. The packages are not shipped to VS,
+         only their contents redisted within the SDK. -->
+    <CreateTlb Condition="'$(DotNetBuild)' != 'true'">true</CreateTlb>
     <AdditionalTlbExpAsmPaths>$(XMakeRefPath)</AdditionalTlbExpAsmPaths>
     <PublishTlbPath>$(XMakeRefPath)</PublishTlbPath>
     <GenerateAssemblyRefs>true</GenerateAssemblyRefs>
diff --git a/src/Directory.BeforeCommon.targets b/src/Directory.BeforeCommon.targets
index 0352fbf056b..27628d8d2e8 100644
--- a/src/Directory.BeforeCommon.targets
+++ b/src/Directory.BeforeCommon.targets
@@ -11,25 +11,25 @@
   </PropertyGroup>
 
   <PropertyGroup>
-    <DefineConstants Condition="'$(MonoBuild)' != 'true'">$(DefineConstants);FEATURE_DEBUG_LAUNCH</DefineConstants>
+    <DefineConstants>$(DefineConstants);FEATURE_DEBUG_LAUNCH</DefineConstants>
   </PropertyGroup>
 
   <PropertyGroup Condition="$(TargetFramework.StartsWith('net4')) Or $(TargetFramework.StartsWith('net3'))">
     <DefineConstants>$(DefineConstants);FEATURE_APARTMENT_STATE</DefineConstants>
-    <DefineConstants Condition="'$(MonoBuild)' != 'true'">$(DefineConstants);FEATURE_APM</DefineConstants>
+    <DefineConstants>$(DefineConstants);FEATURE_APM</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_APPDOMAIN</DefineConstants>
     <FeatureAppDomain>true</FeatureAppDomain>
     <DefineConstants>$(DefineConstants);FEATURE_ASPNET_COMPILER</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_ASSEMBLY_LOCATION</DefineConstants>
-    <DefineConstants Condition="'$(MonoBuild)' != 'true'">$(DefineConstants);FEATURE_COMPILED_XSL</DefineConstants>
-    <DefineConstants Condition="'$(MonoBuild)' != 'true'">$(DefineConstants);FEATURE_COMPILE_IN_TESTS</DefineConstants>
+    <DefineConstants>$(DefineConstants);FEATURE_COMPILED_XSL</DefineConstants>
+    <DefineConstants>$(DefineConstants);FEATURE_COMPILE_IN_TESTS</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_CONSTRAINED_EXECUTION</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_CODETASKFACTORY</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_CRYPTOGRAPHIC_FACTORY_ALGORITHM_NAMES</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_CULTUREINFO_GETCULTURES</DefineConstants>
-    <DefineConstants Condition="'$(MonoBuild)' != 'true' and '$(MachineIndependentBuild)' != 'true'">$(DefineConstants);FEATURE_ENCODING_DEFAULT</DefineConstants>
+    <DefineConstants Condition="'$(MachineIndependentBuild)' != 'true'">$(DefineConstants);FEATURE_ENCODING_DEFAULT</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_ENVIRONMENT_SYSTEMDIRECTORY</DefineConstants>
-    <DefineConstants Condition="'$(MonoBuild)' != 'true'">$(DefineConstants);FEATURE_FILE_TRACKER</DefineConstants>
+    <DefineConstants>$(DefineConstants);FEATURE_FILE_TRACKER</DefineConstants>
     <DefineConstants Condition="'$(MachineIndependentBuild)' != 'true'">$(DefineConstants);FEATURE_GAC</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_GET_COMMANDLINE</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_HANDLEPROCESSCORRUPTEDSTATEEXCEPTIONS</DefineConstants>
@@ -52,8 +52,7 @@
     <DefineConstants>$(DefineConstants);FEATURE_RESOURCE_EXPOSURE</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_RESXREADER_LIVEDESERIALIZATION</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_RUN_EXE_IN_TESTS</DefineConstants>
-    <DefineConstants Condition="'$(MonoBuild)' == 'true'">$(DefineConstants);USE_MSBUILD_DLL_EXTN</DefineConstants>
-    <DefineConstants Condition="'$(MonoBuild)' != 'true' and '$(MachineIndependentBuild)' != 'true'">$(DefineConstants);FEATURE_SECURITY_PERMISSIONS</DefineConstants>
+    <DefineConstants Condition="'$(MachineIndependentBuild)' != 'true'">$(DefineConstants);FEATURE_SECURITY_PERMISSIONS</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_SECURITY_PRINCIPAL_WINDOWS</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_STRONG_NAMES</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_SYSTEM_CONFIGURATION</DefineConstants>
@@ -67,20 +66,18 @@
     <DefineConstants>$(DefineConstants);FEATURE_XAML_TYPES</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_XAMLTASKFACTORY</DefineConstants>
     <FeatureXamlTypes>true</FeatureXamlTypes>
-    <DefineConstants Condition="'$(MonoBuild)' != 'true'">$(DefineConstants);FEATURE_XML_SCHEMA_VALIDATION</DefineConstants>
+    <DefineConstants>$(DefineConstants);FEATURE_XML_SCHEMA_VALIDATION</DefineConstants>
     <DefineConstants Condition="'$(MachineIndependentBuild)' != 'true'">$(DefineConstants);FEATURE_WIN32_REGISTRY</DefineConstants>
-    <DefineConstants Condition="'$(MonoBuild)' != 'true' and '$(MachineIndependentBuild)' != 'true' and '$(TargetFrameworkVersion)' != 'v3.5' and '$(DotNetBuildFromSource)' != 'true'">$(DefineConstants);FEATURE_VISUALSTUDIOSETUP</DefineConstants>
+    <DefineConstants Condition="'$(MachineIndependentBuild)' != 'true' and '$(TargetFrameworkVersion)' != 'v3.5' and '$(DotNetBuildFromSource)' != 'true'">$(DefineConstants);FEATURE_VISUALSTUDIOSETUP</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_MSCOREE</DefineConstants>
   </PropertyGroup>
 
   <PropertyGroup>
-    <DefineConstants Condition="'$(MonoBuild)'=='true'">$(DefineConstants);MONO</DefineConstants>
-
     <!-- Useful for tests that need OS information as a constant -->
     <DefineConstants Condition="$([MSBuild]::IsOSPlatform('windows'))">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>
   </PropertyGroup>
 
-  <PropertyGroup Condition="'$(MonoBuild)' != 'true' and ($([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp' or $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard')">
+  <PropertyGroup Condition="$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp' or $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard'">
     <NetCoreBuild>true</NetCoreBuild>
     <DefineConstants>$(DefineConstants);RUNTIME_TYPE_NETCORE;FEATURE_FASTSPAN</DefineConstants>
   </PropertyGroup>
@@ -89,6 +86,7 @@
     <CompilerToolsDir>$([System.IO.Path]::Combine($(ToolPackagesDir)Microsoft.Net.Compilers, $(CompilerToolsVersion), "tools"))$([System.IO.Path]::DirectorySeparatorChar)</CompilerToolsDir>
     <DefineConstants>$(DefineConstants);FEATURE_ASSEMBLYLOADCONTEXT</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_RUNTIMEINFORMATION</DefineConstants>
+    <DefineConstants>$(DefineConstants);FEATURE_GUIDE_TO_VS_ON_UNSUPPORTED_PROJECTS</DefineConstants>
     <DefineConstants>$(DefineConstants);USE_MSBUILD_DLL_EXTN</DefineConstants>
     <DefineConstants>$(DefineConstants);WORKAROUND_COREFX_19110</DefineConstants>
     <DefineConstants>$(DefineConstants);FEATURE_SYMLINK_TARGET</DefineConstants>
@@ -112,7 +110,7 @@
     <DocumentationFile Condition=" '$(GenerateDocumentationFile)' == 'true' ">$(IntermediateOutputPath)\$(AssemblyName).xml</DocumentationFile>
   </PropertyGroup>
 
-  <PropertyGroup Condition="'$(MonoBuild)' != 'true' and '$(DotNetBuildFromSource)' != 'true' and $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework'">
+  <PropertyGroup Condition="'$(DotNetBuildFromSource)' != 'true' and $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework'">
     <DefineConstants>$(DefineConstants);FEATURE_MSIOREDIST</DefineConstants>
     <FeatureMSIORedist>true</FeatureMSIORedist>
   </PropertyGroup>
diff --git a/src/Directory.Build.props b/src/Directory.Build.props
index fd9dc2a5974..8946c45dc5a 100644
--- a/src/Directory.Build.props
+++ b/src/Directory.Build.props
@@ -24,21 +24,19 @@
 
     <ProduceReferenceAssembly Condition="'$(IsTestProject)' != 'true'">true</ProduceReferenceAssembly>
 
-    <!-- Set up BeforeCommon.targets -->
-    <CustomBeforeMicrosoftCommonTargets>$(MSBuildThisFileDirectory)Directory.BeforeCommon.targets</CustomBeforeMicrosoftCommonTargets>
+    <!-- Set up BeforeCommon.targets. Arcade uses this property as well, so don't overwrite it. -->
+    <CustomBeforeMicrosoftCommonTargets>$(CustomBeforeMicrosoftCommonTargets);$(MSBuildThisFileDirectory)Directory.BeforeCommon.targets</CustomBeforeMicrosoftCommonTargets>
 
     <Platforms>AnyCPU;x64;arm64</Platforms>
 
     <!-- Defaults for target frameworks and architecture -->
     <LibraryTargetFrameworks>$(FullFrameworkTFM);$(LatestDotNetCoreForMSBuild);netstandard2.0</LibraryTargetFrameworks>
     <LibraryTargetFrameworks Condition="'$(DotNetBuildFromSource)' == 'true'">$(LatestDotNetCoreForMSBuild);netstandard2.0</LibraryTargetFrameworks>
-    <LibraryTargetFrameworks Condition="'$(MonoBuild)'=='true'">$(FullFrameworkTFM);netstandard2.0</LibraryTargetFrameworks>
     <PlatformTarget>AnyCPU</PlatformTarget>
 
     <!-- Target frameworks for Exe and unit test projects (ie projects with runtime output) -->
     <RuntimeOutputTargetFrameworks>$(LatestDotNetCoreForMSBuild)</RuntimeOutputTargetFrameworks>
     <RuntimeOutputTargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(FullFrameworkTFM);$(RuntimeOutputTargetFrameworks)</RuntimeOutputTargetFrameworks>
-    <RuntimeOutputTargetFrameworks Condition="'$(MonoBuild)' == 'true'">$(FullFrameworkTFM)</RuntimeOutputTargetFrameworks>
 
     <!-- Don't automatically append target framework to output path, since we want to put the Platform Target beforehand, if it's not AnyCPU -->
     <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
diff --git a/src/Directory.Build.targets b/src/Directory.Build.targets
index 67f3b7d2a26..fc6affaa7d2 100644
--- a/src/Directory.Build.targets
+++ b/src/Directory.Build.targets
@@ -8,12 +8,14 @@
     <StrongNameKeyId>Microsoft</StrongNameKeyId>
   </PropertyGroup>
 
-  <PropertyGroup Condition="'$(IsUnitTestProject)' == 'true'">
+  <PropertyGroup Condition="'$(IsTestLibrary)' == 'true' or '$(IsUnitTestProject)' == 'true'">
     <StrongNameKeyId>MSBuildTest</StrongNameKeyId>
     <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)Test.snk</AssemblyOriginatorKeyFile>
     <PublicKey>002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4</PublicKey>
     <PublicKeyToken>9d77cc7ad39b68eb</PublicKeyToken>
+  </PropertyGroup>
 
+  <PropertyGroup Condition="'$(IsUnitTestProject)' == 'true'">
     <!-- Set output type of test projects to EXE.  This will allow us to run tests on .NET Core via F5 or "dotnet run" -->
     <OutputType>Exe</OutputType>
     <GenerateProgramFile>false</GenerateProgramFile>
@@ -30,10 +32,6 @@
     <!-- Replace with MSBuild::IsBsdLike once the initial msbuild knows about it -->
     <XunitOptions Condition="$([MSBuild]::IsOSPlatform('FREEBSD')) Or $([MSBuild]::IsOSPlatform('NETBSD')) Or $([MSBuild]::IsOSPlatform('OPENBSD'))">$(XunitOptions) -notrait category=nonfreebsdtests</XunitOptions>
 
-    <XunitOptions Condition="'$(MonoBuild)' == 'true'">$(XunitOptions) -notrait category=non-mono-tests -notrait category=nonmonotests</XunitOptions>
-    <XunitOptions Condition="$([MSBuild]::IsOSPlatform('osx')) and '$(MonoBuild)' == 'true'">$(XunitOptions) -notrait category=mono-osx-failing</XunitOptions>
-    <XunitOptions Condition="$([MSBuild]::IsOSPlatform('windows')) and '$(MonoBuild)' == 'true'">$(XunitOptions) -notrait category=mono-windows-failing</XunitOptions>
-
     <XunitOptions Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp'">$(XunitOptions) -notrait category=nonnetcoreapptests</XunitOptions>
     <XunitOptions Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">$(XunitOptions) -notrait category=nonnetfxtests</XunitOptions>
 
@@ -81,8 +79,6 @@
     <PublicApiTfm Condition="$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework' and $([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)')) == '3.5'">net35</PublicApiTfm>
     <PublicApiTfm Condition="$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard'">netstandard</PublicApiTfm>
     <PublicApiTfm Condition="$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp'">netstandard</PublicApiTfm>
-
-    <GenAPIFolderPath>$(RepoRoot)ref\$(GenAPIAssemblyName)\$(GenAPIShortFrameworkIdentifier)\</GenAPIFolderPath>
   </PropertyGroup>
 
   <ItemGroup Condition="'$(IsUnitTestProject)' == 'true' And '$(TargetFrameworkIdentifier)' != '.NETFramework' ">
@@ -118,6 +114,9 @@
     </ItemGroup>
   </Target>
 
+  <!-- This target creates a type library for the assemblies in a package. It requires desktop msbuild to locate the tooling
+       Type libraries are still needed by Visual Studio in some cases, like the legacy C# project system.
+       It calls into msbuild via COM, and needs the type library to do so. -->
   <Target Name="CreateTypeLib" BeforeTargets="AfterBuild" Inputs="$(TargetPath)" Outputs="$(TargetDir)$(TargetName).tlb;$(TargetDir)x64\$(TargetName).tlb" Condition="'$(BuildingInsideVisualStudio)' != 'true' and '$(CreateTlb)' == 'true' and $([MSBuild]::IsOSPlatform('windows')) and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(MSBuildRuntimeType)' != 'Core'">
     <PropertyGroup>
       <TlbExpPath>$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToDotNetFrameworkSdkFile('tlbexp.exe'))</TlbExpPath>
diff --git a/src/Framework.UnitTests/Microsoft.Build.Framework.UnitTests.csproj b/src/Framework.UnitTests/Microsoft.Build.Framework.UnitTests.csproj
index 7821be8ff91..f5931d3d9af 100644
--- a/src/Framework.UnitTests/Microsoft.Build.Framework.UnitTests.csproj
+++ b/src/Framework.UnitTests/Microsoft.Build.Framework.UnitTests.csproj
@@ -1,8 +1,5 @@
 <Project Sdk="Microsoft.NET.Sdk">
 
-  <Import Project="..\Shared\FileSystemSources.proj" />
-  <Import Project="..\Shared\DebuggingSources.proj" />
-
   <PropertyGroup>
     <TargetFrameworks>$(RuntimeOutputTargetFrameworks)</TargetFrameworks>
     <PlatformTarget>$(RuntimeOutputPlatformTarget)</PlatformTarget>
@@ -22,6 +19,7 @@
     <ProjectReference Include="..\Framework\Microsoft.Build.Framework.csproj" />
     <ProjectReference Include="..\Xunit.NetCore.Extensions\Xunit.NetCore.Extensions.csproj" />
     <ProjectReference Include="..\StringTools\StringTools.csproj" />
+    <ProjectReference Include="..\UnitTests.Shared\Microsoft.Build.UnitTests.Shared.csproj" />
   </ItemGroup>
 
   <ItemGroup>
@@ -29,17 +27,10 @@
   </ItemGroup>
 
   <ItemGroup>
-    <Compile Include="..\Shared\UnitTests\TestEnvironment.cs" />
-    <Compile Include="..\Shared\FileUtilities.cs" />
-    <Compile Include="..\Shared\TempFileUtilities.cs" />
-    <Compile Include="..\Shared\ErrorUtilities.cs" />
     <Compile Include="..\Shared\EscapingUtilities.cs" />
-    <Compile Include="..\Shared\BuildEnvironmentHelper.cs" />
     <Compile Include="..\Shared\ProcessExtensions.cs" />
     <Compile Include="..\Shared\ResourceUtilities.cs" />
-    <Compile Include="..\Shared\ExceptionHandling.cs" />
     <Compile Include="..\Shared\FileUtilitiesRegex.cs" />
-    <Compile Include="..\Shared\UnitTests\AssemblyResources.cs" />
   </ItemGroup>
 
   <ItemGroup>
diff --git a/src/Framework/AssemblyUtilities.cs b/src/Framework/AssemblyUtilities.cs
index dcb013b3a0d..eea490775a7 100644
--- a/src/Framework/AssemblyUtilities.cs
+++ b/src/Framework/AssemblyUtilities.cs
@@ -99,9 +99,8 @@ public static AssemblyName CloneIfPossible(this AssemblyName assemblyNameToClone
             name.CodeBase = assemblyNameToClone.CodeBase;
             name.KeyPair = assemblyNameToClone.KeyPair;
             name.VersionCompatibility = assemblyNameToClone.VersionCompatibility;
-#elif !MONO
+#else
             // Setting the culture name creates a new CultureInfo, leading to many allocations. Only set CultureName when the CultureInfo member is not available.
-            // CultureName not available on Mono
             name.CultureName = assemblyNameToClone.CultureName;
 #endif
 
diff --git a/src/Framework/ChangeWaves.cs b/src/Framework/ChangeWaves.cs
index 1f925324acf..b6479c3698e 100644
--- a/src/Framework/ChangeWaves.cs
+++ b/src/Framework/ChangeWaves.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Diagnostics;
 using System.Linq;
 
 #nullable disable
@@ -22,7 +23,7 @@ internal enum ChangeWaveConversionState
     /// </summary>
     /// See docs here: https://github.com/dotnet/msbuild/blob/main/documentation/wiki/ChangeWaves.md
     /// For dev docs: https://github.com/dotnet/msbuild/blob/main/documentation/wiki/ChangeWaves-Dev.md
-    internal class ChangeWaves
+    internal static class ChangeWaves
     {
         internal static readonly Version Wave17_4 = new Version(17, 4);
         internal static readonly Version Wave17_6 = new Version(17, 6);
@@ -35,6 +36,13 @@ internal class ChangeWaves
         /// </summary>
         internal static readonly Version EnableAllFeatures = new Version(999, 999);
 
+#if DEBUG
+        /// <summary>
+        /// True if <see cref="ResetStateForTests"/> has been called.
+        /// </summary>
+        private static bool _runningTests = false;
+#endif
+
         /// <summary>
         /// The lowest wave in the current rotation of Change Waves.
         /// </summary>
@@ -162,6 +170,10 @@ internal static bool AreFeaturesEnabled(Version wave)
         {
             ApplyChangeWave();
 
+#if DEBUG
+            Debug.Assert(_runningTests || AllWaves.Contains(wave), $"Change wave version {wave} is invalid");
+#endif
+
             return wave < _cachedWave;
         }
 
@@ -171,6 +183,9 @@ internal static bool AreFeaturesEnabled(Version wave)
         /// </summary>
         internal static void ResetStateForTests()
         {
+#if DEBUG
+            _runningTests = true;
+#endif
             _cachedWave = null;
             _state = ChangeWaveConversionState.NotConvertedYet;
         }
diff --git a/src/Framework/Features.cs b/src/Framework/Features.cs
new file mode 100644
index 00000000000..13c7b12e667
--- /dev/null
+++ b/src/Framework/Features.cs
@@ -0,0 +1,60 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace Microsoft.Build.Framework
+{
+    /// <summary>
+    /// The status of a feature.
+    /// </summary>
+    public enum FeatureStatus
+    {
+        /// <summary>
+        /// The feature availability is not determined.
+        /// </summary>
+        Undefined,
+
+        /// <summary>
+        /// The feature is available.
+        /// </summary>
+        Available,
+
+        /// <summary>
+        /// The feature is not available.
+        /// </summary>
+        NotAvailable,
+
+        /// <summary>
+        /// The feature is in preview, subject to change API or behavior between releases.
+        /// </summary>
+        Preview,
+    }
+
+    /// <summary>
+    /// This class is used to manage features.
+    /// </summary>
+    public static class Features
+    {
+        private static readonly Dictionary<string, FeatureStatus> _featureStatusMap = new Dictionary<string, FeatureStatus>
+        {
+            { "EvaluationContext_SharedSDKCachePolicy", FeatureStatus.Available }, // EvaluationContext supports the SharingPolicy.SharedSDKCache flag.
+            // Add more features here.
+        };
+
+        /// <summary>
+        /// Checks if a feature is available or not.
+        /// </summary>
+        /// <param name="featureName">The name of the feature.</param>
+        /// <returns>A feature status <see cref="FeatureStatus"/>.</returns>
+        public static FeatureStatus CheckFeatureAvailability(string featureName)
+        {
+            return _featureStatusMap.TryGetValue(featureName, out FeatureStatus status) ?
+                 status : FeatureStatus.Undefined;
+        }
+    }
+}
diff --git a/src/Framework/IEventSource.cs b/src/Framework/IEventSource.cs
index 4ba9c258238..187c105d386 100644
--- a/src/Framework/IEventSource.cs
+++ b/src/Framework/IEventSource.cs
@@ -152,4 +152,165 @@ public interface IEventSource
         /// </summary>
         event AnyEventHandler AnyEventRaised;
     }
+
+    /// <summary>
+    /// Helper methods for <see cref="IEventSource"/> interface.
+    /// </summary>
+    public static class EventSourceExtensions
+    {
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.MessageRaised"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleMessageRaised(this IEventSource eventSource, BuildMessageEventHandler handler)
+        {
+            eventSource.MessageRaised -= handler;
+            eventSource.MessageRaised += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.ErrorRaised"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleErrorRaised(this IEventSource eventSource, BuildErrorEventHandler handler)
+        {
+            eventSource.ErrorRaised -= handler;
+            eventSource.ErrorRaised += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.WarningRaised"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleWarningRaised(this IEventSource eventSource, BuildWarningEventHandler handler)
+        {
+            eventSource.WarningRaised -= handler;
+            eventSource.WarningRaised += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.BuildStarted"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleBuildStarted(this IEventSource eventSource, BuildStartedEventHandler handler)
+        {
+            eventSource.BuildStarted -= handler;
+            eventSource.BuildStarted += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.BuildFinished"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleBuildFinished(this IEventSource eventSource, BuildFinishedEventHandler handler)
+        {
+            eventSource.BuildFinished -= handler;
+            eventSource.BuildFinished += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.ProjectStarted"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleProjectStarted(this IEventSource eventSource, ProjectStartedEventHandler handler)
+        {
+            eventSource.ProjectStarted -= handler;
+            eventSource.ProjectStarted += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.ProjectFinished"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleProjectFinished(this IEventSource eventSource, ProjectFinishedEventHandler handler)
+        {
+            eventSource.ProjectFinished -= handler;
+            eventSource.ProjectFinished += handler;
+        }
+
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.TargetStarted"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleTargetStarted(this IEventSource eventSource, TargetStartedEventHandler handler)
+        {
+            eventSource.TargetStarted -= handler;
+            eventSource.TargetStarted += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.TargetFinished"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleTargetFinished(this IEventSource eventSource, TargetFinishedEventHandler handler)
+        {
+            eventSource.TargetFinished -= handler;
+            eventSource.TargetFinished += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.TaskStarted"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleTaskStarted(this IEventSource eventSource, TaskStartedEventHandler handler)
+        {
+            eventSource.TaskStarted -= handler;
+            eventSource.TaskStarted += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.TaskFinished"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleTaskFinished(this IEventSource eventSource, TaskFinishedEventHandler handler)
+        {
+            eventSource.TaskFinished -= handler;
+            eventSource.TaskFinished += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.CustomEventRaised"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleCustomEventRaised(this IEventSource eventSource, CustomBuildEventHandler handler)
+        {
+            eventSource.CustomEventRaised -= handler;
+            eventSource.CustomEventRaised += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.StatusEventRaised"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleStatusEventRaised(this IEventSource eventSource, BuildStatusEventHandler handler)
+        {
+            eventSource.StatusEventRaised -= handler;
+            eventSource.StatusEventRaised += handler;
+        }
+
+        /// <summary>
+        /// Helper method ensuring single deduplicated subscription to the <see cref="IEventSource.AnyEventRaised"/> event.
+        /// </summary>
+        /// <param name="eventSource"></param>
+        /// <param name="handler">Handler to the event. If this handler is already subscribed, single subscription will be ensured.</param>
+        public static void HandleAnyEventRaised(this IEventSource eventSource, AnyEventHandler handler)
+        {
+            eventSource.AnyEventRaised -= handler;
+            eventSource.AnyEventRaised += handler;
+        }
+    }
 }
diff --git a/src/Framework/MSBuildEventSource.cs b/src/Framework/MSBuildEventSource.cs
index f96d17a98e3..efe948081a3 100644
--- a/src/Framework/MSBuildEventSource.cs
+++ b/src/Framework/MSBuildEventSource.cs
@@ -476,13 +476,13 @@ public void WriteLinesToFileUpToDateStop(string fileItemSpec, bool wasUpToDate)
         }
 
         [Event(62, Keywords = Keywords.All)]
-        public void SdkResolverServiceInitializeStart()
+        public void SdkResolverLoadAllResolversStart()
         {
             WriteEvent(62);
         }
 
         [Event(63, Keywords = Keywords.All)]
-        public void SdkResolverServiceInitializeStop(int resolverCount)
+        public void SdkResolverLoadAllResolversStop(int resolverCount)
         {
             WriteEvent(63, resolverCount);
         }
@@ -601,25 +601,25 @@ public void OutOfProcSdkResolverServiceRequestSdkPathFromMainNodeStop(int submis
         }
 
         [Event(81, Keywords = Keywords.All)]
-        public void SdkResolverServiceFindResolversManifestsStart()
+        public void SdkResolverFindResolversManifestsStart()
         {
             WriteEvent(81);
         }
 
         [Event(82, Keywords = Keywords.All)]
-        public void SdkResolverServiceFindResolversManifestsStop(int resolverManifestCount)
+        public void SdkResolverFindResolversManifestsStop(int resolverManifestCount)
         {
             WriteEvent(82, resolverManifestCount);
         }
 
         [Event(83, Keywords = Keywords.All)]
-        public void SdkResolverServiceLoadResolversStart()
+        public void SdkResolverLoadResolversStart()
         {
             WriteEvent(83);
         }
 
         [Event(84, Keywords = Keywords.All)]
-        public void SdkResolverServiceLoadResolversStop(string manifestName, int resolverCount)
+        public void SdkResolverLoadResolversStop(string manifestName, int resolverCount)
         {
             WriteEvent(84, manifestName, resolverCount);
         }
diff --git a/src/Framework/Microsoft.Build.Framework.csproj b/src/Framework/Microsoft.Build.Framework.csproj
index 1abc2b39272..787ba544b89 100644
--- a/src/Framework/Microsoft.Build.Framework.csproj
+++ b/src/Framework/Microsoft.Build.Framework.csproj
@@ -3,7 +3,9 @@
     <TargetFrameworks>$(LibraryTargetFrameworks)</TargetFrameworks>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <GenerateReferenceAssemblySource>true</GenerateReferenceAssemblySource>
-    <CreateTlb>true</CreateTlb>
+    <!-- Do not create Tlbs when building in .NET product mode. The packages are not shipped to VS,
+         only their contents redisted within the SDK. -->
+    <CreateTlb Condition="'$(DotNetBuild)' != 'true'">true</CreateTlb>
     <IsPackable>true</IsPackable>
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is a common assembly used by other MSBuild assemblies.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
diff --git a/src/Framework/NativeMethods.cs b/src/Framework/NativeMethods.cs
index b1cb2b0d7b2..b543973746e 100644
--- a/src/Framework/NativeMethods.cs
+++ b/src/Framework/NativeMethods.cs
@@ -490,7 +490,6 @@ public SystemInformationData()
     public static int GetLogicalCoreCount()
     {
         int numberOfCpus = Environment.ProcessorCount;
-#if !MONO
         // .NET on Windows returns a core count limited to the current NUMA node
         //     https://github.com/dotnet/runtime/issues/29686
         // so always double-check it.
@@ -502,7 +501,6 @@ public static int GetLogicalCoreCount()
                 numberOfCpus = result;
             }
         }
-#endif
 
         return numberOfCpus;
     }
@@ -661,37 +659,6 @@ internal static bool IsBSD
 #endif
     }
 
-    private static readonly object IsMonoLock = new object();
-
-    private static bool? _isMono;
-
-    /// <summary>
-    /// Gets a flag indicating if we are running under MONO
-    /// </summary>
-    internal static bool IsMono
-    {
-        get
-        {
-            if (_isMono != null)
-            {
-                return _isMono.Value;
-            }
-
-            lock (IsMonoLock)
-            {
-                if (_isMono == null)
-                {
-                    // There could be potentially expensive TypeResolve events, so cache IsMono.
-                    // Also, VS does not host Mono runtimes, so turn IsMono off when msbuild is running under VS
-                    _isMono = !BuildEnvironmentState.s_runningInVisualStudio &&
-                              Type.GetType("Mono.Runtime") != null;
-                }
-            }
-
-            return _isMono.Value;
-        }
-    }
-
 #if !CLR2COMPATIBILITY
     private static bool? _isWindows;
 #endif
@@ -750,8 +717,6 @@ internal static string FrameworkName
         {
 #if RUNTIME_TYPE_NETCORE
             const string frameworkName = ".NET";
-#elif MONO
-            const string frameworkName = "Mono";
 #else
             const string frameworkName = ".NET Framework";
 #endif
diff --git a/src/Framework/Properties/AssemblyInfo.cs b/src/Framework/Properties/AssemblyInfo.cs
index f0d1f5e83d7..1f0b9011081 100644
--- a/src/Framework/Properties/AssemblyInfo.cs
+++ b/src/Framework/Properties/AssemblyInfo.cs
@@ -53,6 +53,7 @@
 [assembly: InternalsVisibleTo("Microsoft.Build.Utilities.UnitTests, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")]
 [assembly: InternalsVisibleTo("Microsoft.Build.CommandLine.UnitTests, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")]
 [assembly: InternalsVisibleTo("Microsoft.Build.Tasks.UnitTests, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")]
+[assembly: InternalsVisibleTo("Microsoft.Build.UnitTests.Shared, PublicKey=002400000480000094000000060200000024000052534131000400000100010015c01ae1f50e8cc09ba9eac9147cf8fd9fce2cfe9f8dce4f7301c4132ca9fb50ce8cbf1df4dc18dd4d210e4345c744ecb3365ed327efdbc52603faa5e21daa11234c8c4a73e51f03bf192544581ebe107adee3a34928e39d04e524a9ce729d5090bfd7dad9d10c722c0def9ccc08ff0a03790e48bcd1f9b6c476063e1966a1c4")]
 
 // This is the assembly-level GUID, and the GUID for the TypeLib associated with
 // this assembly.  We should specify this explicitly, as opposed to letting
diff --git a/src/Framework/Traits.cs b/src/Framework/Traits.cs
index daf68c5c7dc..d678ab57d35 100644
--- a/src/Framework/Traits.cs
+++ b/src/Framework/Traits.cs
@@ -13,7 +13,7 @@ namespace Microsoft.Build.Framework
     /// </summary>
     internal class Traits
     {
-        private static readonly Traits _instance = new Traits();
+        private static Traits _instance = new Traits();
         public static Traits Instance
         {
             get
@@ -136,6 +136,15 @@ public Traits()
 
         public readonly bool InProcNodeDisabled = Environment.GetEnvironmentVariable("MSBUILDNOINPROCNODE") == "1";
 
+        public static void UpdateFromEnvironment()
+        {
+            // Re-create Traits instance to update values in Traits according to current environment.
+            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10))
+            {
+                _instance = new Traits();
+            }
+        }
+
         private static int ParseIntFromEnvironmentVariableOrDefault(string environmentVariable, int defaultValue)
         {
             return int.TryParse(Environment.GetEnvironmentVariable(environmentVariable), out int result)
@@ -316,11 +325,6 @@ public bool? LogPropertiesAndItemsAfterEvaluation
         /// </summary>
         public readonly bool DisableSdkResolutionCache = Environment.GetEnvironmentVariable("MSBUILDDISABLESDKCACHE") == "1";
 
-        /// <summary>
-        /// Disable the NuGet-based SDK resolver.
-        /// </summary>
-        public readonly bool DisableNuGetSdkResolver = Environment.GetEnvironmentVariable("MSBUILDDISABLENUGETSDKRESOLVER") == "1";
-
         /// <summary>
         /// Don't delete TargetPath metadata from associated files found by RAR.
         /// </summary>
diff --git a/src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj b/src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj
index 423de50897b..d2b2b866183 100644
--- a/src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj
+++ b/src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj
@@ -20,7 +20,7 @@
   <ItemGroup>
     <!-- This file is needed so the dotnet CLI knows how to map preview SDK versions to tfms (because tfms do not have preview information on them) -->
     <!-- This is because according to semver, 2.1.0-preview is not >= 2.1.0 -->
-    <Content Include="$(RepoRoot).dotnet\sdk\$(DotNetCliVersion)\Microsoft.NETCoreSdk.BundledVersions.props" CopyToOutputDirectory="PreserveNewest" />
+    <Content Include="$(DotNetRoot)sdk\$(DotNetCliVersion)\Microsoft.NETCoreSdk.BundledVersions.props" CopyToOutputDirectory="PreserveNewest" />
 
     <!-- Include NuGet build tasks -->
     <PackageReference Include="NuGet.Build.Tasks" />
@@ -30,22 +30,13 @@
     <!-- As of 17.5, NuGet.Build.Tasks and Microsoft.Build.NuGetSdkResolver depends on Newtonsoft.Json version 13.0.1,
          causing it to be downloaded and flagged by component governance -->
     <PackageReference Include="Newtonsoft.Json" />
-  </ItemGroup>
-
-  <ItemGroup Condition="'$(MonoBuild)' == 'true'">
-    <!-- This is for the second build. Copy over the resolvers from the bootstrap directory, which will include the
-         nuget resolver also -->
-    <Content
-            Condition="'$(CreateBootstrap)' != 'true'"
-            Include="$(MSBuildBinPath)\SdkResolvers\**\*" LinkBase="SdkResolvers" CopyToOutputDirectory="PreserveNewest" />
-
-    <Content Include="$(MSBuildExtensionsPath)\**\*" LinkBase="Extensions" CopyToOutputDirectory="PreserveNewest" />
 
-    <Content Include="$(RepoRoot).dotnet\sdk\$(DotNetCliVersion)\RuntimeIdentifierGraph.json" CopyToOutputDirectory="PreserveNewest" />
+    <!-- Add this explicitly since it's marked as Private in MSBuild.csproj, but we need these at runtime to be like VS. -->
+    <PackageReference Include="Microsoft.BuildXL.Processes" Condition="'$(FeatureReportFileAccesses)' == 'true'" PrivateAssets="all" />
   </ItemGroup>
 
   <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->
-  <Target Name="UpdateMSBuildDepsFile" AfterTargets="Build" Condition="'$(MonoBuild)' != 'true' and ($([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netcoreapp2.1')) or '$(TargetFramework)' == 'netstandard2.0')">
+  <Target Name="UpdateMSBuildDepsFile" AfterTargets="Build" Condition="($([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netcoreapp2.1')) or '$(TargetFramework)' == 'netstandard2.0')">
     <Copy SourceFiles="$(OutputPath)$(AssemblyName).deps.json" DestinationFiles="$(OutputPath)MSBuild.deps.json" SkipUnchangedFiles="true" />
   </Target>
   <Target Name="UpdatePublishedMSBuildDepsFile" AfterTargets="Publish" Condition="'$(TargetFramework)' == '$(LatestDotNetCoreForMSBuild)'">
diff --git a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
index 735b63da358..53e4555fcf2 100644
--- a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
+++ b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
@@ -576,6 +576,26 @@ public void TargetsSwitchIdentificationTests(string @switch)
             emptyParametersAllowed.ShouldBeFalse();
         }
 
+        [Theory]
+        [InlineData("featureavailability")]
+        [InlineData("fa")]
+        public void FeatureAvailibilitySwitchIdentificationTest(string switchName)
+        {
+            CommandLineSwitches.IsParameterizedSwitch(
+                switchName,
+                out CommandLineSwitches.ParameterizedSwitch parameterizedSwitch,
+                out string duplicateSwitchErrorMessage,
+                out bool multipleParametersAllowed,
+                out string missingParametersErrorMessage,
+                out _,
+                out _);
+
+            parameterizedSwitch.ShouldBe(CommandLineSwitches.ParameterizedSwitch.FeatureAvailability);
+            duplicateSwitchErrorMessage.ShouldBeNull();
+            multipleParametersAllowed.ShouldBeTrue();
+            missingParametersErrorMessage.ShouldNotBeNullOrEmpty();
+        }
+
         [Fact]
         public void TargetsSwitchParameter()
         {
diff --git a/src/MSBuild.UnitTests/Microsoft.Build.CommandLine.UnitTests.csproj b/src/MSBuild.UnitTests/Microsoft.Build.CommandLine.UnitTests.csproj
index abb5f36de05..35fa1dbb627 100644
--- a/src/MSBuild.UnitTests/Microsoft.Build.CommandLine.UnitTests.csproj
+++ b/src/MSBuild.UnitTests/Microsoft.Build.CommandLine.UnitTests.csproj
@@ -20,6 +20,7 @@
     <ProjectReference Include="..\MSBuild\MSBuild.csproj" />
     <ProjectReference Include="..\Utilities\Microsoft.Build.Utilities.csproj" />
     <ProjectReference Include="..\Xunit.NetCore.Extensions\Xunit.NetCore.Extensions.csproj" />
+    <ProjectReference Include="..\UnitTests.Shared\Microsoft.Build.UnitTests.Shared.csproj" />
     
     <!-- Tasks are needed for some tests -->
     <ProjectReference Include="..\Tasks\Microsoft.Build.Tasks.csproj" />
@@ -33,18 +34,9 @@
     <Compile Include="..\Shared\RegistryHelper.cs">
       <Link>RegistryHelper.cs</Link>
     </Compile>
-    <Compile Include="..\Shared\UnitTests\EngineTestEnvironment.cs" />
-    <Compile Include="..\Shared\UnitTests\TestEnvironment.cs">
-      <Link>TestEnvironment.cs</Link>
-    </Compile>
     <Compile Include="..\Shared\VersionUtilities.cs">
       <Link>VersionUtilities.cs</Link>
     </Compile>
-    <Compile Include="..\Shared\UnitTests\MockEngine.cs" />
-    <Compile Include="..\Shared\UnitTests\MockLogger.cs" />
-    <Compile Include="..\Shared\UnitTests\ObjectModelHelpers.cs" />
-    <Compile Include="..\UnitTests.Shared\EnvironmentProvider.cs" />
-    <Compile Include="..\UnitTests.Shared\RunnerUtilities.cs" />
 
     <EmbeddedResource Include="..\MSBuild\MSBuild\Microsoft.Build.Core.xsd">
       <Link>Microsoft.Build.Core.xsd</Link>
diff --git a/src/MSBuild.UnitTests/NodeStatus_Tests.cs b/src/MSBuild.UnitTests/NodeStatus_SizeChange_Tests.cs
similarity index 94%
rename from src/MSBuild.UnitTests/NodeStatus_Tests.cs
rename to src/MSBuild.UnitTests/NodeStatus_SizeChange_Tests.cs
index 42e821c4ae6..ba6e2f50ecd 100644
--- a/src/MSBuild.UnitTests/NodeStatus_Tests.cs
+++ b/src/MSBuild.UnitTests/NodeStatus_SizeChange_Tests.cs
@@ -19,11 +19,11 @@
 namespace Microsoft.Build.CommandLine.UnitTests;
 
 [UsesVerify]
-public class NodeStatus_Tests
+public class NodeStatus_SizeChange_Tests
 {
     private readonly NodeStatus _status = new("Namespace.Project", "TargetFramework", "Target", new MockStopwatch());
 
-    public NodeStatus_Tests()
+    public NodeStatus_SizeChange_Tests()
     {
         UseProjectRelativeDirectory("Snapshots");
     }
diff --git a/src/MSBuild.UnitTests/NodeStatus_Transition_Tests.cs b/src/MSBuild.UnitTests/NodeStatus_Transition_Tests.cs
new file mode 100644
index 00000000000..1d1dacae7f0
--- /dev/null
+++ b/src/MSBuild.UnitTests/NodeStatus_Transition_Tests.cs
@@ -0,0 +1,181 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.Collections.Generic;
+using System.IO;
+using System.Linq;
+using System.Text;
+using System.Text.RegularExpressions;
+using System.Threading.Tasks;
+
+using Microsoft.Build.Logging.TerminalLogger;
+using Shouldly;
+using VerifyTests;
+using VerifyXunit;
+using Xunit;
+
+using static VerifyXunit.Verifier;
+
+
+namespace Microsoft.Build.CommandLine.UnitTests;
+
+[UsesVerify]
+public class NodeStatus_Transition_Tests
+{
+    public NodeStatus_Transition_Tests()
+    {
+        UseProjectRelativeDirectory("Snapshots");
+    }
+
+    [Fact]
+    public void NodeStatusTargetThrowsForInputWithAnsi()
+    {
+#if DEBUG
+        // This is testing a Debug.Assert, which won't throw in Release mode.
+        Func<NodeStatus> newNodeStatus = () => new NodeStatus("project", "tfm", AnsiCodes.Colorize("colorized target", TerminalColor.Green), new MockStopwatch());
+        newNodeStatus.ShouldThrow<ArgumentException>().Message.ShouldContain("Target should not contain any escape codes, if you want to colorize target use the other constructor.");
+#endif
+    }
+
+    [Fact]
+    public async Task NodeTargetChanges()
+    {
+        var rendered = Animate(
+            [
+                new("Namespace.Project", "TargetFramework", "Build", new MockStopwatch())
+            ],
+            [
+               new("Namespace.Project", "TargetFramework", "Testing", new MockStopwatch())
+            ]);
+
+        await VerifyReplay(rendered);
+    }
+
+    [Fact]
+    public async Task NodeTargetUpdatesTime()
+    {
+        // This test look like there is no change between the frames, but we ask the stopwatch for time they will increase the number.
+        // We need this because animations check that NodeStatus reference is the same.
+        // And we cannot use MockStopwatch because we don't know when to call Tick on them, and if we do it right away, the time will update in "both" nodes.
+        NodeStatus node = new("Namespace.Project", "TargetFramework", "Build", new TickingStopwatch());
+        var rendered = Animate(
+            [
+                node,
+            ],
+            [
+               node,
+            ]);
+
+        await VerifyReplay(rendered);
+    }
+
+    [Fact]
+    public async Task NodeTargetChangesToColoredTarget()
+    {
+        var rendered = Animate(
+            [
+                new("Namespace.Project", "TargetFramework", "Testing", new MockStopwatch())
+            ],
+            [
+               new("Namespace.Project", "TargetFramework", TerminalColor.Red, "failed", "MyTestName1", new MockStopwatch())
+            ]);
+
+        await VerifyReplay(rendered);
+    }
+
+    [Fact]
+    public async Task NodeWithColoredTargetUpdatesTime()
+    {
+        // This test look like there is no change between the frames, but we ask the stopwatch for time they will increase the number.
+        // We need this because animations check that NodeStatus reference is the same.
+        // And we cannot use MockStopwatch because we don't know when to call Tick on them, and if we do it right away, the time will update in "both" nodes.
+        NodeStatus node = new("Namespace.Project", "TargetFramework", TerminalColor.Green, "passed", "MyTestName1", new TickingStopwatch());
+        var rendered = Animate(
+            [
+                node,
+            ],
+            [
+               node
+            ]);
+
+        await VerifyReplay(rendered);
+    }
+
+    /// <summary>
+    /// Chains and renders node status updates and outputs replay able string of all the transitions.
+    /// </summary>
+    /// <param name="nodeStatusesUpdates">Takes array of arrays. The inner array is collection of nodes that are currently running. The outer array is how they update over time.</param>
+    /// <returns></returns>
+    private string Animate(params NodeStatus[][] nodeStatusesUpdates)
+    {
+        var width = 80;
+        var height = 1;
+
+        NodesFrame previousFrame = new(Array.Empty<NodeStatus>(), 0, 0);
+        StringBuilder result = new StringBuilder();
+        foreach (var nodeStatuses in nodeStatusesUpdates)
+        {
+            NodesFrame currentFrame = new NodesFrame(nodeStatuses, width, height);
+            result.Append(currentFrame.Render(previousFrame));
+            previousFrame = currentFrame;
+        }
+
+        return result.ToString();
+    }
+
+    private async Task VerifyReplay(string rendered)
+    {
+        try
+        {
+            await Verify(rendered);
+        }
+        catch (Exception ex)
+        {
+            if (ex.GetType().Name != "VerifyException")
+            {
+                throw;
+            }
+
+            if (!ex.Message.StartsWith("Directory:"))
+            {
+                throw;
+            }
+
+            string? directory = null;
+            string? received = null;
+            string? verified = null;
+            foreach (var line in ex.Message.Split('\n'))
+            {
+                var trimmed = line.TrimStart(' ', '-');
+                Extract(trimmed, "Directory", ref directory);
+                Extract(trimmed, "Received", ref received);
+                Extract(trimmed, "Verified", ref verified);
+            }
+
+            if (directory == null || received == null || verified == null)
+            {
+                throw;
+            }
+
+            var pipeline = $$""" | % { "`n`n" } { $_ -split "(?=`e)" | % { Write-Host -NoNewline $_; Start-Sleep 0.5 }; Write-Host }""";
+            throw new Exception($$"""
+                {{ex.Message.TrimEnd('\n')}}
+
+                Received replay:
+                    Get-Content {{Path.Combine(directory, received)}} {{pipeline}}
+
+                Verified replay:
+                    Get-Content {{Path.Combine(directory, verified)}} {{pipeline}}
+                """);
+        }
+
+        void Extract(string line, string prefix, ref string? output)
+        {
+            if (line.StartsWith($"{prefix}: "))
+            {
+                output = line.Substring(prefix.Length + 2);
+            }
+        }
+    }
+}
diff --git a/src/MSBuild.UnitTests/Snapshots/NodeStatus_Tests.EverythingFits.verified.txt b/src/MSBuild.UnitTests/Snapshots/NodeStatus_SizeChange_Tests.EverythingFits.verified.txt
similarity index 100%
rename from src/MSBuild.UnitTests/Snapshots/NodeStatus_Tests.EverythingFits.verified.txt
rename to src/MSBuild.UnitTests/Snapshots/NodeStatus_SizeChange_Tests.EverythingFits.verified.txt
diff --git a/src/MSBuild.UnitTests/Snapshots/NodeStatus_Tests.GoesToProject.verified.txt b/src/MSBuild.UnitTests/Snapshots/NodeStatus_SizeChange_Tests.GoesToProject.verified.txt
similarity index 100%
rename from src/MSBuild.UnitTests/Snapshots/NodeStatus_Tests.GoesToProject.verified.txt
rename to src/MSBuild.UnitTests/Snapshots/NodeStatus_SizeChange_Tests.GoesToProject.verified.txt
diff --git a/src/MSBuild.UnitTests/Snapshots/NodeStatus_Tests.NamespaceIsTruncatedNext.verified.txt b/src/MSBuild.UnitTests/Snapshots/NodeStatus_SizeChange_Tests.NamespaceIsTruncatedNext.verified.txt
similarity index 100%
rename from src/MSBuild.UnitTests/Snapshots/NodeStatus_Tests.NamespaceIsTruncatedNext.verified.txt
rename to src/MSBuild.UnitTests/Snapshots/NodeStatus_SizeChange_Tests.NamespaceIsTruncatedNext.verified.txt
diff --git a/src/MSBuild.UnitTests/Snapshots/NodeStatus_Tests.TargetIsTruncatedFirst.verified.txt b/src/MSBuild.UnitTests/Snapshots/NodeStatus_SizeChange_Tests.TargetIsTruncatedFirst.verified.txt
similarity index 100%
rename from src/MSBuild.UnitTests/Snapshots/NodeStatus_Tests.TargetIsTruncatedFirst.verified.txt
rename to src/MSBuild.UnitTests/Snapshots/NodeStatus_SizeChange_Tests.TargetIsTruncatedFirst.verified.txt
diff --git a/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeTargetChanges.verified.txt b/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeTargetChanges.verified.txt
new file mode 100644
index 00000000000..c76bd410799
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeTargetChanges.verified.txt
@@ -0,0 +1,4 @@
+Ôªø[1F
+  Namespace.Project [36;1mTargetFramework[m [120G[12DBuild (0.0s)
+[2F
+[K  Namespace.Project [36;1mTargetFramework[m [120G[14DTesting (0.0s)
diff --git a/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeTargetChangesToColoredTarget.verified.txt b/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeTargetChangesToColoredTarget.verified.txt
new file mode 100644
index 00000000000..3be7cd9e970
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeTargetChangesToColoredTarget.verified.txt
@@ -0,0 +1,4 @@
+Ôªø[1F
+  Namespace.Project [36;1mTargetFramework[m [120G[14DTesting (0.0s)
+[2F
+[K  Namespace.Project [36;1mTargetFramework[m [120G[25D[31;1mfailed[m MyTestName1 (0.0s)
diff --git a/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeTargetUpdatesTime.verified.txt b/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeTargetUpdatesTime.verified.txt
new file mode 100644
index 00000000000..5f7a118d89e
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeTargetUpdatesTime.verified.txt
@@ -0,0 +1,4 @@
+Ôªø[1F
+  Namespace.Project [36;1mTargetFramework[m [120G[12DBuild (0.0s)
+[2F
+[120G[6D(0.2s)
diff --git a/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeWithColoredTargetUpdatesTime.verified.txt b/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeWithColoredTargetUpdatesTime.verified.txt
new file mode 100644
index 00000000000..70de0fffa5d
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/NodeStatus_Transition_Tests.NodeWithColoredTargetUpdatesTime.verified.txt
@@ -0,0 +1,4 @@
+Ôªø[1F
+  Namespace.Project [36;1mTargetFramework[m [120G[25D[32;1mpassed[m MyTestName1 (0.0s)
+[2F
+[120G[6D(0.2s)
diff --git a/src/MSBuild.UnitTests/StaticStopwatch.cs b/src/MSBuild.UnitTests/StaticStopwatch.cs
new file mode 100644
index 00000000000..c1afad3179c
--- /dev/null
+++ b/src/MSBuild.UnitTests/StaticStopwatch.cs
@@ -0,0 +1,23 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System.Net.Http.Headers;
+using Microsoft.Build.Logging.TerminalLogger;
+
+namespace Microsoft.Build.CommandLine.UnitTests;
+
+/// <summary>
+/// Stopwatch that always show the time provided in constructor.
+/// </summary>
+internal sealed class StaticStopwatch : StopwatchAbstraction
+{
+    public StaticStopwatch(double elapsedSeconds)
+    {
+        ElapsedSeconds = elapsedSeconds;
+    }
+
+    public override double ElapsedSeconds { get; }
+
+    public override void Start() => throw new System.NotImplementedException();
+    public override void Stop() => throw new System.NotImplementedException();
+}
diff --git a/src/MSBuild.UnitTests/TerminalLogger_Tests.cs b/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
index 80353d7ab31..75749517b55 100644
--- a/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
+++ b/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
@@ -413,13 +413,8 @@ public void TestTerminalLoggerTogetherWithOtherLoggers()
                 TransientTestFolder logFolder = env.CreateFolder(createFolder: true);
                 TransientTestFile projectFile = env.CreateFile(logFolder, "myProj.proj", contents);
 
-                BinaryLogger loggerWithTL = new();
                 string logFileWithTL = env.ExpectFile(".binlog").Path;
-                loggerWithTL.Parameters = logFileWithTL;
-
-                BinaryLogger loggerWithoutTL = new();
                 string logFileWithoutTL = env.ExpectFile(".binlog").Path;
-                loggerWithoutTL.Parameters = logFileWithoutTL;
 
                 // Execute MSBuild with binary, file and terminal loggers
                 RunnerUtilities.ExecMSBuild($"{projectFile.Path} /m /bl:{logFileWithTL} -flp:logfile={Path.Combine(logFolder.Path, "logFileWithTL.log")};verbosity=diagnostic -tl:on", out bool success);
diff --git a/src/MSBuild.UnitTests/TickingStopwatch.cs b/src/MSBuild.UnitTests/TickingStopwatch.cs
new file mode 100644
index 00000000000..e0cd213ebeb
--- /dev/null
+++ b/src/MSBuild.UnitTests/TickingStopwatch.cs
@@ -0,0 +1,32 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using Microsoft.Build.Logging.TerminalLogger;
+
+namespace Microsoft.Build.CommandLine.UnitTests;
+
+/// <summary>
+/// Stopwatch that will increase by 0.1, every time you ask them for time. Useful for animations, because they check that NodeStatus
+/// reference stays the same, and also for ensuring we are grabbing the time only once per frame.
+/// </summary>
+internal sealed class TickingStopwatch : StopwatchAbstraction
+{
+    private double _elapsedSeconds;
+
+    public TickingStopwatch(double elapsedSeconds = 0.0)
+    {
+        _elapsedSeconds = elapsedSeconds;
+    }
+
+    public override double ElapsedSeconds
+    {
+        get
+        {
+            var elapsed = _elapsedSeconds;
+            _elapsedSeconds += 0.1;
+            return elapsed;
+        }
+    }
+    public override void Start() => throw new System.NotImplementedException();
+    public override void Stop() => throw new System.NotImplementedException();
+}
diff --git a/src/MSBuild.UnitTests/XMake_Tests.cs b/src/MSBuild.UnitTests/XMake_Tests.cs
index c18c5ad2d90..1c3aed6df74 100644
--- a/src/MSBuild.UnitTests/XMake_Tests.cs
+++ b/src/MSBuild.UnitTests/XMake_Tests.cs
@@ -12,6 +12,7 @@
 using System.Runtime.InteropServices;
 using System.Threading;
 using Microsoft.Build.CommandLine;
+using Microsoft.Build.Evaluation;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Logging;
 using Microsoft.Build.Shared;
@@ -526,7 +527,7 @@ public void Help(string indicator)
         [Fact]
         public void VersionSwitch()
         {
-            using TestEnvironment env = UnitTests.TestEnvironment.Create();
+            using TestEnvironment env = TestEnvironment.Create();
 
             // Ensure Change Wave 17.10 is enabled.
             ChangeWaves.ResetStateForTests();
@@ -570,7 +571,7 @@ public void VersionSwitch()
         [Fact]
         public void VersionSwitchDisableChangeWave()
         {
-            using TestEnvironment env = UnitTests.TestEnvironment.Create();
+            using TestEnvironment env = TestEnvironment.Create();
 
             // Disable Change Wave 17.10
             ChangeWaves.ResetStateForTests();
@@ -793,6 +794,53 @@ public void ExecuteAppWithGetPropertyItemAndTargetResult(
             results.ShouldNotContain(ResourceUtilities.GetResourceString("BuildFailedWithPropertiesItemsOrTargetResultsRequested"));
         }
 
+        [Fact]
+        public void BuildFailsWithBadPropertyName()
+        {
+            using TestEnvironment env = TestEnvironment.Create();
+            TransientTestFile project = env.CreateFile("testProject.csproj", @"
+<Project>
+  <Target Name=""Build"">
+  </Target>
+</Project>
+");
+            string results = RunnerUtilities.ExecMSBuild($" {project.Path} /p:someProperty:fdalse= ", out bool success);
+            success.ShouldBeFalse(results);
+
+            results.ShouldContain("error MSB4177");
+        }
+
+        [Theory]
+        [InlineData("-getProperty:Foo", "propertyContent")]
+        [InlineData("-getItem:Bar", "ItemContent")]
+        [InlineData("-getTargetResult:Biz", "Success")]
+        public void GetStarOutputsToFileIfRequested(string extraSwitch, string result)
+        {
+            using TestEnvironment env = TestEnvironment.Create();
+            TransientTestFile project = env.CreateFile("testProject.csproj", @"
+<Project>
+  <PropertyGroup>
+    <Foo>propertyContent</Foo>
+  </PropertyGroup>
+
+  <ItemGroup>
+    <Bar Include=""ItemContent"" />
+  </ItemGroup>
+
+  <Target Name=""Biz"" />
+</Project>
+");
+            string resultFile = env.GetTempFile(".tmp").Path;
+            string results = RunnerUtilities.ExecMSBuild($" {project.Path} {extraSwitch} -getResultOutputFile:{resultFile}", out bool success);
+            success.ShouldBeTrue();
+            File.Exists(resultFile).ShouldBeTrue();
+            File.ReadAllText(resultFile).ShouldContain(result);
+
+            result = RunnerUtilities.ExecMSBuild($" {project.Path} {extraSwitch} -getResultOutputFile:", out success);
+            success.ShouldBeFalse();
+            result.ShouldContain("MSB1068");
+        }
+
         [Theory]
         [InlineData(true)]
         [InlineData(false)]
@@ -847,6 +895,7 @@ public void SetConsoleUICulture()
 
             // Restore the current UI culture back to the way it was at the beginning of this unit test.
             thisThread.CurrentUICulture = originalUICulture;
+            MSBuildApp.SetConsoleUI();
         }
 
 
@@ -1260,33 +1309,15 @@ public void ResponseFileSwitchesAppearInCommandLine()
         [Fact]
         public void ResponseFileInProjectDirectoryExplicit()
         {
-            string directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString("N"));
-            string projectPath = Path.Combine(directory, "my.proj");
-            string rspPath = Path.Combine(directory, AutoResponseFileName);
-
-            try
-            {
-                Directory.CreateDirectory(directory);
-
-                string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
-                File.WriteAllText(projectPath, content);
-
-                string rspContent = "/p:A=1";
-                File.WriteAllText(rspPath, rspContent);
-
-                var msbuildParameters = "\"" + projectPath + "\"";
-
-                string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
-                successfulExit.ShouldBeTrue();
+            var directory = _env.CreateFolder();
+            string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
+            var projectPath = directory.CreateFile("my.proj", content).Path;
+            directory.CreateFile(AutoResponseFileName, "/p:A=1");
+            var msbuildParameters = "\"" + projectPath + "\"";
+            string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
+            successfulExit.ShouldBeTrue();
 
-                output.ShouldContain("[A=1]");
-            }
-            finally
-            {
-                File.Delete(projectPath);
-                File.Delete(rspPath);
-                FileUtilities.DeleteWithoutTrailingBackslash(directory);
-            }
+            output.ShouldContain("[A=1]");
         }
 
         /// <summary>
@@ -1295,33 +1326,17 @@ public void ResponseFileInProjectDirectoryExplicit()
         [Fact]
         public void ResponseFileInProjectDirectoryRandomName()
         {
-            string directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString("N"));
-            string projectPath = Path.Combine(directory, "my.proj");
-            string rspPath = Path.Combine(directory, "foo.rsp");
-
-            try
-            {
-                Directory.CreateDirectory(directory);
-
-                string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
-                File.WriteAllText(projectPath, content);
-
-                string rspContent = "/p:A=1";
-                File.WriteAllText(rspPath, rspContent);
+            var directory = _env.CreateFolder();
+            string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
+            var projectPath = directory.CreateFile("my.proj", content).Path;
+            directory.CreateFile("foo.rsp", "/p:A=1");
 
-                var msbuildParameters = "\"" + projectPath + "\"";
+            var msbuildParameters = "\"" + projectPath + "\"";
 
-                string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
-                successfulExit.ShouldBeTrue();
+            string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
+            successfulExit.ShouldBeTrue();
 
-                output.ShouldContain("[A=]");
-            }
-            finally
-            {
-                File.Delete(projectPath);
-                File.Delete(rspPath);
-                FileUtilities.DeleteWithoutTrailingBackslash(directory);
-            }
+            output.ShouldContain("[A=]");
         }
 
         /// <summary>
@@ -1331,33 +1346,18 @@ public void ResponseFileInProjectDirectoryRandomName()
         [Fact]
         public void ResponseFileInProjectDirectoryCommandLineWins()
         {
-            string directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString("N"));
-            string projectPath = Path.Combine(directory, "my.proj");
-            string rspPath = Path.Combine(directory, AutoResponseFileName);
-
-            try
-            {
-                Directory.CreateDirectory(directory);
-
-                string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
-                File.WriteAllText(projectPath, content);
+            var directory = _env.CreateFolder();
 
-                string rspContent = "/p:A=1";
-                File.WriteAllText(rspPath, rspContent);
+            string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
+            var projectPath = directory.CreateFile("my.proj", content).Path;
+            directory.CreateFile(AutoResponseFileName, "/p:A=1");
 
-                var msbuildParameters = "\"" + projectPath + "\"" + " /p:A=2";
+            var msbuildParameters = "\"" + projectPath + "\"" + " /p:A=2";
 
-                string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
-                successfulExit.ShouldBeTrue();
+            string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
+            successfulExit.ShouldBeTrue();
 
-                output.ShouldContain("[A=2]");
-            }
-            finally
-            {
-                File.Delete(projectPath);
-                File.Delete(rspPath);
-                FileUtilities.DeleteWithoutTrailingBackslash(directory);
-            }
+            output.ShouldContain("[A=2]");
         }
 
         /// <summary>
@@ -1444,33 +1444,17 @@ public void ProjectDirectoryIsMSBuildExeDirectory()
         [Fact]
         public void ResponseFileInProjectDirectoryItselfWithNoAutoResponseSwitch()
         {
-            string directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString("N"));
-            string projectPath = Path.Combine(directory, "my.proj");
-            string rspPath = Path.Combine(directory, AutoResponseFileName);
-
-            try
-            {
-                Directory.CreateDirectory(directory);
-
-                string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
-                File.WriteAllText(projectPath, content);
-
-                string rspContent = "/p:A=1 /noautoresponse";
-                File.WriteAllText(rspPath, rspContent);
+            var directory = _env.CreateFolder();
+            string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
+            var projectPath = directory.CreateFile("my.proj", content).Path;
+            directory.CreateFile(AutoResponseFileName, "/p:A=1 /noautoresponse");
 
-                var msbuildParameters = "\"" + projectPath + "\"";
+            var msbuildParameters = "\"" + projectPath + "\"";
 
-                string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
-                successfulExit.ShouldBeFalse();
+            string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
+            successfulExit.ShouldBeFalse();
 
-                output.ShouldContain("MSB1027"); // msbuild.rsp cannot have /noautoresponse in it
-            }
-            finally
-            {
-                File.Delete(projectPath);
-                File.Delete(rspPath);
-                FileUtilities.DeleteWithoutTrailingBackslash(directory);
-            }
+            output.ShouldContain("MSB1027"); // msbuild.rsp cannot have /noautoresponse in it
         }
 
         /// <summary>
@@ -1479,33 +1463,33 @@ public void ResponseFileInProjectDirectoryItselfWithNoAutoResponseSwitch()
         [Fact]
         public void ResponseFileInProjectDirectoryButCommandLineNoAutoResponseSwitch()
         {
-            string directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString("N"));
-            string projectPath = Path.Combine(directory, "my.proj");
-            string rspPath = Path.Combine(directory, AutoResponseFileName);
-
-            try
-            {
-                Directory.CreateDirectory(directory);
-
-                string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
-                File.WriteAllText(projectPath, content);
+            var directory = _env.CreateFolder();
+            string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
+            var projectPath = directory.CreateFile("my.proj", content).Path;
+            directory.CreateFile(AutoResponseFileName, "/p:A=1 /noautoresponse");
 
-                string rspContent = "/p:A=1 /noautoresponse";
-                File.WriteAllText(rspPath, rspContent);
+            var msbuildParameters = "\"" + projectPath + "\" /noautoresponse";
 
-                var msbuildParameters = "\"" + projectPath + "\" /noautoresponse";
+            string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
+            successfulExit.ShouldBeTrue();
+            output.ShouldContain("[A=]");
+        }
 
-                string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
-                successfulExit.ShouldBeTrue();
+        /// <summary>
+        /// Directory.Build.rsp in the directory of the specified project/solution should be respected when searching the files (solution/proj) to build.
+        /// </summary>
+        [Fact]
+        public void ResponseFileInProjectDirectoryWithSolutionProjectDifferentNamesShouldBeRespected()
+        {
+            var directory = _env.CreateFolder();
+            var content = ObjectModelHelpers.CleanupFileContents("<Project><Target Name='t'><Message Text='Completed'/></Target></Project>");
+            directory.CreateFile("projectFile.proj", content);
+            directory.CreateFile("solutionFile.sln", string.Empty);
+            directory.CreateFile("Directory.Build.rsp", "-ignoreProjectExtensions:.sln");
 
-                output.ShouldContain("[A=]");
-            }
-            finally
-            {
-                File.Delete(projectPath);
-                File.Delete(rspPath);
-                FileUtilities.DeleteWithoutTrailingBackslash(directory);
-            }
+            var msbuildParameters = "\"" + directory.Path + "\"";
+            RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
+            successfulExit.ShouldBeTrue();
         }
 
         /// <summary>
@@ -1515,28 +1499,17 @@ public void ResponseFileInProjectDirectoryButCommandLineNoAutoResponseSwitch()
         [Fact]
         public void ResponseFileInProjectDirectoryNullCase()
         {
-            string directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString("N"));
-            string projectPath = Path.Combine(directory, "my.proj");
-
-            try
-            {
-                Directory.CreateDirectory(directory);
+            var directory = _env.CreateFolder();
+            string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
 
-                string content = ObjectModelHelpers.CleanupFileContents("<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Warning Text='[A=$(A)]'/></Target></Project>");
-                File.WriteAllText(projectPath, content);
+            var projectPath = directory.CreateFile("my.proj", content).Path;
 
-                var msbuildParameters = "\"" + projectPath + "\"";
+            var msbuildParameters = "\"" + projectPath + "\"";
 
-                string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
-                successfulExit.ShouldBeTrue();
+            string output = RunnerUtilities.ExecMSBuild(msbuildParameters, out var successfulExit, _output);
+            successfulExit.ShouldBeTrue();
 
-                output.ShouldContain("[A=]");
-            }
-            finally
-            {
-                File.Delete(projectPath);
-                FileUtilities.DeleteWithoutTrailingBackslash(directory);
-            }
+            output.ShouldContain("[A=]");
         }
 
         /// <summary>
@@ -1915,7 +1888,7 @@ internal sealed class IgnoreProjectExtensionsHelper
             internal IgnoreProjectExtensionsHelper(string[] filesInDirectory)
             {
                 _directoryFileNameList = new List<string>();
-                foreach (string file in filesInDirectory)
+                foreach (var file in filesInDirectory)
                 {
                     _directoryFileNameList.Add(file);
                 }
@@ -2468,13 +2441,13 @@ public void MultipleTargetsDoesNotCrash()
         }
 
         [Theory]
-        [InlineData("-logger:,\"nonExistentlogger.dll\",IsOptional;Foo")]
-        [InlineData("-logger:ClassA,\"nonExistentlogger.dll\",IsOptional;Foo")]
-        [InlineData("-logger:,\"nonExistentlogger.dll\",IsOptional,OptionB,OptionC")]
-        [InlineData("-distributedlogger:,\"nonExistentlogger.dll\",IsOptional;Foo")]
-        [InlineData("-distributedlogger:ClassA,\"nonExistentlogger.dll\",IsOptional;Foo")]
-        [InlineData("-distributedlogger:,\"nonExistentlogger.dll\",IsOptional,OptionB,OptionC")]
-        public void MissingOptionalLoggersAreIgnored(string logger)
+        [InlineData("-logger:,\"nonExistentlogger.dll\",IsOptional;Foo", "nonExistentLogger.dll")]
+        [InlineData("-logger:ClassA,\"nonExistentlogger.dll\",IsOptional;Foo", "ClassA")]
+        [InlineData("-logger:,\"nonExistentlogger.dll\",IsOptional,OptionB,OptionC", "nonExistentLogger.dll")]
+        [InlineData("-distributedlogger:,\"nonExistentlogger.dll\",IsOptional;Foo", "nonExistentLogger.dll")]
+        [InlineData("-distributedlogger:ClassA,\"nonExistentlogger.dll\",IsOptional;Foo", "ClassA")]
+        [InlineData("-distributedlogger:,\"nonExistentlogger.dll\",IsOptional,OptionB,OptionC", "nonExistentLogger.dll")]
+        public void MissingOptionalLoggersAreIgnored(string logger, string expectedLoggerName)
         {
             string projectString =
                 "<Project>" +
@@ -2488,7 +2461,7 @@ public void MissingOptionalLoggersAreIgnored(string logger)
             var output = RunnerUtilities.ExecMSBuild(parametersLoggerOptional, out bool successfulExit, _output);
             successfulExit.ShouldBe(true);
             output.ShouldContain("Hello", customMessage: output);
-            output.ShouldContain("The specified logger could not be created and will not be used.", customMessage: output);
+            output.ShouldContain($"The specified logger \"{expectedLoggerName}\" could not be created and will not be used.", customMessage: output);
         }
 
         [Theory]
@@ -2638,6 +2611,41 @@ public override bool Execute()
             }
         }
 
+        [Theory]
+        [InlineData("", true)]
+        [InlineData("/tl:true", false)]
+        [InlineData("/nologo", false)]
+        [InlineData("/getProperty:p", false)]
+        public void EndToEndVersionMessage(string arguments, bool shouldContainVersionMessage)
+        {
+            using TestEnvironment testEnvironment = UnitTests.TestEnvironment.Create();
+
+            string projectContents = ObjectModelHelpers.CleanupFileContents("""
+                                                                            <Project>
+                                                                                <Target Name="Hello">
+                                                                                </Target>
+                                                                            </Project>
+                                                                            """);
+
+            TransientTestProjectWithFiles testProject = testEnvironment.CreateTestProjectWithFiles(projectContents);
+
+            string output = RunnerUtilities.ExecMSBuild($"{arguments} \"{testProject.ProjectFile}\"", out bool success, _output);
+            success.ShouldBeTrue();
+
+            string expectedVersionString =
+                ResourceUtilities.FormatResourceStringStripCodeAndKeyword("MSBuildVersionMessage",
+                    ProjectCollection.DisplayVersion, NativeMethodsShared.FrameworkName);
+
+            if (shouldContainVersionMessage)
+            {
+                output.ShouldContain(expectedVersionString);
+            }
+            else
+            {
+                output.ShouldNotContain(expectedVersionString);
+            }
+        }
+
         [Theory]
         [InlineData("/v:diagnostic", MessageImportance.Low)]
         [InlineData("/v:detailed", MessageImportance.Low)]
diff --git a/src/MSBuild/CommandLineSwitches.cs b/src/MSBuild/CommandLineSwitches.cs
index 6ac15c07dec..a4d81b8e2e3 100644
--- a/src/MSBuild/CommandLineSwitches.cs
+++ b/src/MSBuild/CommandLineSwitches.cs
@@ -50,6 +50,7 @@ internal enum ParameterlessSwitch
 #if DEBUG
             WaitForDebugger,
 #endif
+            // This has to be kept as last enum value
             NumberOfParameterlessSwitches
         }
 
@@ -115,6 +116,9 @@ internal enum ParameterizedSwitch
             GetProperty,
             GetItem,
             GetTargetResult,
+            GetResultOutputFile,
+            FeatureAvailability,
+            // This has to be kept as last enum value
             NumberOfParameterizedSwitches,
         }
 
@@ -278,8 +282,10 @@ internal ParameterizedSwitchInfo(
             new ParameterizedSwitchInfo(  new string[] { "question", "q" },                     ParameterizedSwitch.Question,                   null,                           false,          null,                                  true,   false),
             new ParameterizedSwitchInfo(  new string[] { "detailedsummary", "ds" },             ParameterizedSwitch.DetailedSummary,            null,                           false,          null,                                  true,   false),
             new ParameterizedSwitchInfo(  new string[] { "getProperty" },                       ParameterizedSwitch.GetProperty,                null,                           true,           "MissingGetPropertyError",             true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "getItem" },                           ParameterizedSwitch.GetItem,                    null,                           true,           "MissingGetItemError",             true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "getTargetResult" },                   ParameterizedSwitch.GetTargetResult,            null,                           true,           "MissingGetTargetResultError",             true,   false),
+            new ParameterizedSwitchInfo(  new string[] { "getItem" },                           ParameterizedSwitch.GetItem,                    null,                           true,           "MissingGetItemError",                 true,   false),
+            new ParameterizedSwitchInfo(  new string[] { "getTargetResult" },                   ParameterizedSwitch.GetTargetResult,            null,                           true,           "MissingGetTargetResultError",         true,   false),
+            new ParameterizedSwitchInfo(  new string[] { "getResultOutputFile" },               ParameterizedSwitch.GetResultOutputFile,        null,                           true,           "MissingGetResultFileError",           true,   false),
+            new ParameterizedSwitchInfo(  new string[] { "featureavailability", "fa" },         ParameterizedSwitch.FeatureAvailability,        null,                           true,           "MissingFeatureAvailabilityError",     true,   false),
         };
 
         /// <summary>
@@ -301,7 +307,7 @@ internal static bool IsParameterlessSwitch(
             {
                 foreach (string parameterlessSwitchName in switchInfo.switchNames)
                 {
-                    if (String.Equals(switchName, parameterlessSwitchName, StringComparison.OrdinalIgnoreCase))
+                    if (string.Equals(switchName, parameterlessSwitchName, StringComparison.OrdinalIgnoreCase))
                     {
                         parameterlessSwitch = switchInfo.parameterlessSwitch;
                         duplicateSwitchErrorMessage = switchInfo.duplicateSwitchErrorMessage;
@@ -313,17 +319,6 @@ internal static bool IsParameterlessSwitch(
             return false;
         }
 
-        /// <summary>
-        /// Identifies/detects a switch that takes no parameters.
-        /// </summary>
-        internal static bool IsParameterlessSwitch(
-            string switchName)
-        {
-            ParameterlessSwitch parameterlessSwitch;
-            string duplicateSwitchErrorMessage;
-            return CommandLineSwitches.IsParameterlessSwitch(switchName, out parameterlessSwitch, out duplicateSwitchErrorMessage);
-        }
-
         /// <summary>
         /// Identifies/detects a switch that takes parameters.
         /// </summary>
@@ -354,7 +349,7 @@ internal static bool IsParameterizedSwitch(
             {
                 foreach (string parameterizedSwitchName in switchInfo.switchNames)
                 {
-                    if (String.Equals(switchName, parameterizedSwitchName, StringComparison.OrdinalIgnoreCase))
+                    if (string.Equals(switchName, parameterizedSwitchName, StringComparison.OrdinalIgnoreCase))
                     {
                         parameterizedSwitch = switchInfo.parameterizedSwitch;
                         duplicateSwitchErrorMessage = switchInfo.duplicateSwitchErrorMessage;
@@ -480,7 +475,7 @@ internal bool SetParameterizedSwitch(
             // check if the switch has multiple parameters
             if (multipleParametersAllowed)
             {
-                if (String.Empty.Equals(switchParameters) && emptyParametersAllowed)
+                if (string.Empty.Equals(switchParameters) && emptyParametersAllowed)
                 {
                     // Store a null parameter if its allowed
                     _parameterizedSwitches[(int)parameterizedSwitch].parameters.Add(null);
@@ -551,7 +546,7 @@ internal string GetEquivalentCommandLineExceptProjectFile()
             commandLineA.Sort(StringComparer.OrdinalIgnoreCase);
             commandLineB.Sort(StringComparer.OrdinalIgnoreCase);
 
-            return (String.Join(" ", commandLineA).Trim() + " " + String.Join(" ", commandLineB).Trim()).Trim();
+            return (string.Join(" ", commandLineA).Trim() + " " + string.Join(" ", commandLineB).Trim()).Trim();
         }
 
         /// <summary>
diff --git a/src/MSBuild/MSBuild.csproj b/src/MSBuild/MSBuild.csproj
index 4f7383fa154..0415842c6b7 100644
--- a/src/MSBuild/MSBuild.csproj
+++ b/src/MSBuild/MSBuild.csproj
@@ -58,10 +58,6 @@
     <AllowedReferenceRelatedFileExtensions>$(AllowedReferenceRelatedFileExtensions);.tlb</AllowedReferenceRelatedFileExtensions>
   </PropertyGroup>
 
-  <PropertyGroup Condition="'$(MonoBuild)' == 'true'">
-    <TargetExt>.dll</TargetExt>
-  </PropertyGroup>
-
   <ItemGroup>
     <Compile Include="..\Shared\BuildEnvironmentHelper.cs">
       <Link>BuildEnvironmentHelper.cs</Link>
@@ -228,7 +224,7 @@
        in resolving references using them instead of the correct build-time references.
        Instead, add them just afterward, before assigning target paths/copying to
        the bin folder. -->
-  <Target Name="AddRefAssemblies" DependsOnTargets="ResolveAssemblyReferences" BeforeTargets="AssignTargetPaths" Condition="'$(MonoBuild)' != 'true'">
+  <Target Name="AddRefAssemblies" DependsOnTargets="ResolveAssemblyReferences" BeforeTargets="AssignTargetPaths">
     <ItemGroup>
       <Content Include="$(NuGetPackageRoot)\netstandard.library\2.0.3\build\netstandard2.0\ref\netstandard.dll" Link="ref\netstandard.dll" CopyToOutputDirectory="PreserveNewest" />
       <Content Include="$(NuGetPackageRoot)\netstandard.library\2.0.3\build\netstandard2.0\ref\mscorlib.dll" Link="ref\mscorlib.dll" CopyToOutputDirectory="PreserveNewest" />
@@ -239,7 +235,7 @@
 
     <ItemGroup>
       <_OurFiles Include="$(OutputPath)%(_TargetFrameworks.Identity)\MSBuild.exe.config" TargetFramework="%(_TargetFrameworks.Identity)" Condition=" '%(_TargetFrameworks.Identity)' == '$(FullFrameworkTFM)' " />
-      <_OurFiles Include="$(OutputPath)%(_TargetFrameworks.Identity)\Microsoft.Build.Framework.tlb" TargetFramework="%(_TargetFrameworks.Identity)" Condition=" '%(_TargetFrameworks.Identity)' == '$(FullFrameworkTFM)' " />
+      <_OurFiles Include="$(OutputPath)%(_TargetFrameworks.Identity)\Microsoft.Build.Framework.tlb" TargetFramework="%(_TargetFrameworks.Identity)" Condition=" '%(_TargetFrameworks.Identity)' == '$(FullFrameworkTFM)' and '$(CreateTlb)' == 'true'" />
       <_OurFiles Include="$(OutputPath)%(_TargetFrameworks.Identity)\Microsoft.Data.Entity.targets" TargetFramework="%(_TargetFrameworks.Identity)" Condition=" '%(_TargetFrameworks.Identity)' == '$(FullFrameworkTFM)' " />
       <_OurFiles Include="$(OutputPath)%(_TargetFrameworks.Identity)\Microsoft.ServiceModel.targets" TargetFramework="%(_TargetFrameworks.Identity)" Condition=" '%(_TargetFrameworks.Identity)' == '$(FullFrameworkTFM)' " />
       <_OurFiles Include="$(OutputPath)%(_TargetFrameworks.Identity)\Microsoft.WinFx.targets" TargetFramework="%(_TargetFrameworks.Identity)" Condition=" '%(_TargetFrameworks.Identity)' == '$(FullFrameworkTFM)' " />
diff --git a/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd b/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
index fe39afc0b89..8912214102d 100644
--- a/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
+++ b/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
@@ -1962,6 +1962,16 @@ elementFormDefault="qualified">
             <xs:documentation><!-- _locID_text="OutputType" _locComment="" -->Type of output to generate (WinExe, Exe, or Library)</xs:documentation>
         </xs:annotation>
     </xs:element>
+    <xs:element name="UseArtifactsOutput" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="UseArtifactsOutput" _locComment="" -->Use a centralized location for all outputs of this project. The location of the centralized outputs is set by the ArtifactsPath property. Project outputs are grouped by kind, then by project. See https://learn.microsoft.com/en-us/dotnet/core/sdk/artifacts-output for complete details.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="ArtifactsPath" type="msb:StringPropertyType" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="ArtifactsPath" _locComment="" -->The path to use for the centralized outputs - if set, UseArtifactsOutput will be defaulted to true. Project outputs will be placed under this path grouped by kind, then by project. See https://learn.microsoft.com/en-us/dotnet/core/sdk/artifacts-output for complete details.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
     <xs:element name="PackageOutputPath" substitutionGroup="msb:Property">
       <xs:annotation>
         <xs:documentation><!-- _locID_text="PackageOutputPath" -->Path to the output folder for the package generated when calling Pack.</xs:documentation>
@@ -2064,12 +2074,12 @@ elementFormDefault="qualified">
     <xs:element name="RootNamespace" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="RuntimeIdentifier" type="msb:StringPropertyType" substitutionGroup="msb:Property">
       <xs:annotation>
-        <xs:documentation><!-- _locID_text="RuntimeIdentifier" _locComment="" -->Runtime identifier supported by the project (e.g. win10-x64)</xs:documentation>
+        <xs:documentation><!-- _locID_text="RuntimeIdentifier" _locComment="" -->Runtime identifier supported by the project (e.g. win-x64)</xs:documentation>
       </xs:annotation>
     </xs:element>
     <xs:element name="RuntimeIdentifiers" type="msb:StringPropertyType" substitutionGroup="msb:Property">
       <xs:annotation>
-        <xs:documentation><!-- _locID_text="RuntimeIdentifiers" _locComment="" -->Semi-colon separated list of runtime identifiers supported by the project (e.g. win10-x64;osx.10.11-x64;ubuntu.16.04-x64)</xs:documentation>
+        <xs:documentation><!-- _locID_text="RuntimeIdentifiers" _locComment="" -->Semi-colon separated list of runtime identifiers supported by the project (e.g. win-x64;osx-x64;linux-x64)</xs:documentation>
       </xs:annotation>
     </xs:element>
     <xs:element name="SccProjectName" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
@@ -2113,12 +2123,12 @@ elementFormDefault="qualified">
     <xs:element name="TargetCulture" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="TargetFramework" type="msb:StringPropertyType" substitutionGroup="msb:Property">
       <xs:annotation>
-        <xs:documentation><!-- _locID_text="TargetFramework" _locComment="" -->Framework that this project targets. Must be a Target Framework Moniker (e.g. netcoreapp1.0)</xs:documentation>
+        <xs:documentation><!-- _locID_text="TargetFramework" _locComment="" -->Framework that this project targets. Must be a Target Framework Moniker (e.g. net8.0)</xs:documentation>
       </xs:annotation>
     </xs:element>
     <xs:element name="TargetFrameworks" type="msb:StringPropertyType" substitutionGroup="msb:Property">
       <xs:annotation>
-        <xs:documentation><!-- _locID_text="TargetFrameworks" _locComment="" -->Semi-colon separated list of frameworks that this project targets. Must be a Target Framework Moniker (e.g. netcoreapp1.0;net461)</xs:documentation>
+        <xs:documentation><!-- _locID_text="TargetFrameworks" _locComment="" -->Semi-colon separated list of frameworks that this project targets. Must be a Target Framework Moniker (e.g. net8.0;net461)</xs:documentation>
       </xs:annotation>
     </xs:element>
     <xs:element name="TargetFrameworkVersion" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
diff --git a/src/MSBuild/MSBuildClientApp.cs b/src/MSBuild/MSBuildClientApp.cs
index 3bc82973b49..fbe3d349fc4 100644
--- a/src/MSBuild/MSBuildClientApp.cs
+++ b/src/MSBuild/MSBuildClientApp.cs
@@ -7,7 +7,7 @@
 using Microsoft.Build.Framework.Telemetry;
 using Microsoft.Build.Shared;
 
-#if RUNTIME_TYPE_NETCORE || MONO
+#if RUNTIME_TYPE_NETCORE
 using System.IO;
 using System.Diagnostics;
 #endif
@@ -99,7 +99,7 @@ public static MSBuildApp.ExitType Execute(
         }
 
         // Copied from NodeProviderOutOfProcBase.cs
-#if RUNTIME_TYPE_NETCORE || MONO
+#if RUNTIME_TYPE_NETCORE
         private static string? CurrentHost;
         private static string GetCurrentHost()
         {
diff --git a/src/MSBuild/OutOfProcTaskHostNode.cs b/src/MSBuild/OutOfProcTaskHostNode.cs
index dc6cfcdf7e6..00b1333080b 100644
--- a/src/MSBuild/OutOfProcTaskHostNode.cs
+++ b/src/MSBuild/OutOfProcTaskHostNode.cs
@@ -810,13 +810,10 @@ private NodeEngineShutdownReason HandleShutdown()
             // Wait for the RunTask task runner thread before shutting down so that we can cleanly dispose all WaitHandles.
             _taskRunnerThread?.Join();
 
-            if (_debugCommunications)
-            {
-                using (StreamWriter writer = File.CreateText(String.Format(CultureInfo.CurrentCulture, Path.Combine(FileUtilities.TempFileDirectory, @"MSBuild_NodeShutdown_{0}.txt"), Process.GetCurrentProcess().Id)))
-                {
-                    writer.WriteLine("Node shutting down with reason {0}.", _shutdownReason);
-                }
-            }
+            using StreamWriter debugWriter = _debugCommunications
+                ? File.CreateText(string.Format(CultureInfo.CurrentCulture, Path.Combine(FileUtilities.TempFileDirectory, @"MSBuild_NodeShutdown_{0}.txt"), Process.GetCurrentProcess().Id))
+                : null;
+            debugWriter?.WriteLine("Node shutting down with reason {0}.", _shutdownReason);
 
 #if !CLR2COMPATIBILITY
             _registeredTaskObjectCache.DisposeCacheObjects(RegisteredTaskObjectLifetime.Build);
@@ -827,8 +824,15 @@ private NodeEngineShutdownReason HandleShutdown()
             // so reset it away from a user-requested folder that may get deleted.
             NativeMethodsShared.SetCurrentDirectory(BuildEnvironmentHelper.Instance.CurrentMSBuildToolsDirectory);
 
-            // Restore the original environment.
-            CommunicationsUtilities.SetEnvironment(_savedEnvironment);
+            // Restore the original environment, best effort.
+            try
+            {
+                CommunicationsUtilities.SetEnvironment(_savedEnvironment);
+            }
+            catch (Exception ex)
+            {
+                debugWriter?.WriteLine("Failed to restore the original environment: {0}.", ex);
+            }
 
             if (_nodeEndpoint.LinkStatus == LinkStatus.Active)
             {
diff --git a/src/MSBuild/Resources/Strings.resx b/src/MSBuild/Resources/Strings.resx
index 98c41c4823c..906e6fa9975 100644
--- a/src/MSBuild/Resources/Strings.resx
+++ b/src/MSBuild/Resources/Strings.resx
@@ -1,6 +1,66 @@
 Ôªø<?xml version="1.0" encoding="utf-8"?>
 <root>
+  <!--
+    Microsoft ResX Schema
+
+    Version 2.0
+
+    The primary goals of this format is to allow a simple XML format
+    that is mostly human readable. The generation and parsing of the
+    various data types are done through the TypeConverter classes
+    associated with the data types.
+
+    Example:
+
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+
+    There are any number of "resheader" rows that contain simple
+    name/value pairs.
+
+    Each data row contains a name, and value. The row also contains a
+    type or mimetype. Type corresponds to a .NET class that support
+    text/value conversion through the TypeConverter architecture.
+    Classes that don't support this are serialized and stored with the
+    mimetype set.
+
+    The mimetype is used for serialized objects, and tells the
+    ResXResourceReader how to depersist the object. This is currently not
+    extensible. For a given mimetype the value must be set accordingly:
+
+    Note - application/x-microsoft.net.object.binary.base64 is the format
+    that the ResXResourceWriter will generate, however the reader can
+    read any of the formats listed below.
+
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
   <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
     <xsd:element name="root" msdata:IsDataSet="true">
       <xsd:complexType>
         <xsd:choice maxOccurs="unbounded">
@@ -9,9 +69,16 @@
               <xsd:sequence>
                 <xsd:element name="value" type="xsd:string" minOccurs="0" />
               </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" />
+              <xsd:attribute name="name" use="required" type="xsd:string" />
               <xsd:attribute name="type" type="xsd:string" />
               <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
             </xsd:complexType>
           </xsd:element>
           <xsd:element name="data">
@@ -20,11 +87,10 @@
                 <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                 <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
               </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
-              <xsd:attribute name="UESanitized" type="xsd:boolean" msdata:Ordinal="3" />
-              <xsd:attribute name="Visibility" type="Visibility_Type" msdata:Ordinal="4" />
-              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="5" />
-              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="6" />
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
             </xsd:complexType>
           </xsd:element>
           <xsd:element name="resheader">
@@ -38,13 +104,6 @@
         </xsd:choice>
       </xsd:complexType>
     </xsd:element>
-    <xsd:simpleType name="Visibility_Type">
-      <xsd:restriction base="xsd:string">
-        <xsd:enumeration value="Public" />
-        <xsd:enumeration value="Obsolete" />
-        <xsd:enumeration value="Private_OM" />
-      </xsd:restriction>
-    </xsd:simpleType>
   </xsd:schema>
   <resheader name="resmimetype">
     <value>text/microsoft-resx</value>
@@ -53,19 +112,19 @@
     <value>2.0</value>
   </resheader>
   <resheader name="reader">
-    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <resheader name="writer">
-    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
-  <data name="AmbiguousProjectError" UESanitized="false" Visibility="Public">
+  <data name="AmbiguousProjectError" xml:space="preserve">
     <value>MSBUILD : error MSB1011: Specify which project or solution file to use because this folder contains more than one project or solution file.</value>
     <comment>{StrBegin="MSBUILD : error MSB1011: "}UE: If no project or solution file is explicitly specified on the MSBuild.exe command-line, then the engine searches for a
       project or solution file in the current directory by looking for *.*PROJ and *.SLN. If more than one file is found that matches this wildcard, we
       fire this error.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="AmbiguousProjectDirectoryError" UESanitized="false" Visibility="Public">
+  <data name="AmbiguousProjectDirectoryError" xml:space="preserve">
     <value>MSBUILD : error MSB1050: Specify which project or solution file to use because the folder "{0}" contains more than one project or solution file.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1050: "}UE: If no project or solution file is explicitly specified on the MSBuild.exe command-line, then the engine searches for a
@@ -74,36 +133,35 @@
       LOCALIZATION: The prefix "MSB1050 : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-
-  <data name="ConfigurationFailurePrefixNoErrorCode" UESanitized="false" Visibility="Public">
+  <data name="ConfigurationFailurePrefixNoErrorCode" xml:space="preserve">
     <value>MSBUILD : Configuration error {0}: {1}</value>
     <comment>{SubString="Configuration"}UE: This prefixes any error from reading the toolset definitions in msbuild.exe.config or the registry.
       There's no error code because one was included in the error message.
       LOCALIZATION: The word "Configuration" should be localized, the words "MSBuild" and "error" should NOT be localized.
     </comment>
   </data>
-  <data name="CannotAutoDisableAutoResponseFile" UESanitized="false" Visibility="Public">
+  <data name="CannotAutoDisableAutoResponseFile" xml:space="preserve">
     <value>MSBUILD : error MSB1027: The -noAutoResponse switch cannot be specified in the MSBuild.rsp auto-response file, nor in any response file that is referenced by the auto-response file.</value>
     <comment>{StrBegin="MSBUILD : error MSB1027: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-noAutoResponse" and "MSBuild.rsp" should not be localized.</comment>
   </data>
-  <data name="MSBuildVersionMessage" UESanitized="true" Visibility="Public">
+  <data name="MSBuildVersionMessage" xml:space="preserve">
     <value>MSBuild version {0} for {1}</value>
-    <comment>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</comment>
+    <comment>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</comment>
   </data>
-  <data name="DuplicateProjectSwitchError" UESanitized="true" Visibility="Public">
+  <data name="DuplicateProjectSwitchError" xml:space="preserve">
     <value>MSBUILD : error MSB1008: Only one project can be specified.</value>
     <comment>{StrBegin="MSBUILD : error MSB1008: "}UE: This happens if the user does something like "msbuild.exe myapp.proj myapp2.proj". This is not allowed.
     MSBuild.exe will only build a single project. The help topic may link to an article about how to author an MSBuild project
     that itself launches MSBuild on a number of other projects.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="FatalError" UESanitized="true" Visibility="Public">
+  <data name="FatalError" xml:space="preserve">
     <value>MSBUILD : error MSB1025: An internal failure occurred while running MSBuild.</value>
     <comment>{StrBegin="MSBUILD : error MSB1025: "}UE: This message is shown when the application has to terminate either because of a bug in the code, or because some
       FX/CLR method threw an unexpected exception.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" and "MSBuild" should not be localized.</comment>
   </data>
-  <data name="HelpMessage_1_Syntax" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_1_Syntax" xml:space="preserve">
     <value>Syntax:              MSBuild.exe [options] [project file | directory]
 </value>
     <comment>
@@ -115,7 +173,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_2_Description" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_2_Description" xml:space="preserve">
     <value>Description:         Builds the specified targets in the project file. If
                      a project file is not specified, MSBuild searches the
                      current working directory for a file that has a file
@@ -132,7 +190,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_3_SwitchesHeader" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_3_SwitchesHeader" xml:space="preserve">
     <value>Switches:            Note that you can specify switches using
                      "-switch", "/switch" and "--switch".
 </value>
@@ -145,7 +203,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_4_HelpSwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_4_HelpSwitch" xml:space="preserve">
     <value>  -help              Display this usage message. (Short form: -? or -h)
 </value>
     <comment>
@@ -157,7 +215,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_5_NoLogoSwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_5_NoLogoSwitch" xml:space="preserve">
     <value>  -noLogo            Do not display the startup banner and copyright message.
 </value>
     <comment>
@@ -169,7 +227,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_6_VersionSwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_6_VersionSwitch" xml:space="preserve">
     <value>  -version           Display version information only. (Short form: -ver)
 </value>
     <comment>
@@ -181,7 +239,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_7_ResponseFile" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_7_ResponseFile" xml:space="preserve">
     <value>  @&lt;file&gt;            Insert command-line settings from a text file. To specify
                      multiple response files, specify each response file
                      separately.
@@ -200,7 +258,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_8_NoAutoResponseSwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_8_NoAutoResponseSwitch" xml:space="preserve">
     <value>  -noAutoResponse    Do not auto-include any MSBuild.rsp files. (Short form:
                      -noAutoRsp)
 </value>
@@ -213,7 +271,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_9_TargetSwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_9_TargetSwitch" xml:space="preserve">
     <value>  -target:&lt;targets&gt;  Build these targets in this project. Use a semicolon or a
                      comma to separate multiple targets, or specify each
                      target separately. (Short form: -t)
@@ -229,7 +287,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_10_PropertySwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_10_PropertySwitch" xml:space="preserve">
     <value>  -property:&lt;n&gt;=&lt;v&gt;  Set or override these project-level properties. &lt;n&gt; is
                      the property name, and &lt;v&gt; is the property value. Use a
                      semicolon or a comma to separate multiple properties, or
@@ -246,7 +304,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_11_LoggerSwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_11_LoggerSwitch" xml:space="preserve">
     <value>  -logger:&lt;logger&gt;   Use this logger to log events from MSBuild. To specify
                      multiple loggers, specify each logger separately.
                      The &lt;logger&gt; syntax is:
@@ -271,7 +329,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_12_VerbositySwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_12_VerbositySwitch" xml:space="preserve">
     <value>  -verbosity:&lt;level&gt; Display this amount of information in the event log.
                      The available verbosity levels are: q[uiet], m[inimal],
                      n[ormal], d[etailed], and diag[nostic]. (Short form: -v)
@@ -291,7 +349,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_13_ConsoleLoggerParametersSwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_13_ConsoleLoggerParametersSwitch" xml:space="preserve">
     <value>  -consoleLoggerParameters:&lt;parameters&gt;
                      Parameters to console logger. (Short form: -clp)
                      The available parameters are:
@@ -338,7 +396,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_14_NoConsoleLoggerSwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_14_NoConsoleLoggerSwitch" xml:space="preserve">
     <value>  -noConsoleLogger   Disable the default console logger and do not log events
                      to the console. (Short form: -noConLog)
 </value>
@@ -351,7 +409,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_15_ValidateSwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_15_ValidateSwitch" xml:space="preserve">
     <value>  -validate          Validate the project against the default schema. (Short
                      form: -val)
 
@@ -369,19 +427,19 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_17_MaximumCPUSwitch" UESanitized="false" Visibility="Public">
-      <value>  -maxCpuCount[:n]   Specifies the maximum number of concurrent processes to
+  <data name="HelpMessage_17_MaximumCPUSwitch" xml:space="preserve">
+    <value>  -maxCpuCount[:n]   Specifies the maximum number of concurrent processes to
                      build with. If the switch is not used, the default
                      value used is 1. If the switch is used without a value
                      MSBuild will use up to the number of processors on the
                      computer. (Short form: -m[:n])
       </value>
-      <comment>
+    <comment>
           LOCALIZATION: "maxCpuCount" should not be localized.
           LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
       </comment>
   </data>
-  <data name="HelpMessage_16_Examples" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_16_Examples" xml:space="preserve">
     <value>Examples:
 
         MSBuild MyApp.sln -t:Rebuild -p:Configuration=Release
@@ -397,14 +455,12 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpPrompt" UESanitized="true" Visibility="Public">
+  <data name="HelpPrompt" xml:space="preserve">
     <value>For switch syntax, type "MSBuild -help"</value>
     <comment>UE: this message is shown when the user makes a syntax error on the command-line for a switch.
     LOCALIZATION: "MSBuild -help" should not be localized.</comment>
   </data>
-
-
- <data name="HelpMessage_18_DistributedLoggerSwitch" UESanitized="true" Visibility="Public">
+  <data name="HelpMessage_18_DistributedLoggerSwitch" xml:space="preserve">
     <value>  -distributedLogger:&lt;central logger&gt;*&lt;forwarding logger&gt;
                      Use this logger to log events from MSBuild, attaching a
                      different logger instance to each node. To specify
@@ -432,7 +488,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg chars.
     </comment>
   </data>
-   <data name="HelpMessage_19_IgnoreProjectExtensionsSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_19_IgnoreProjectExtensionsSwitch" xml:space="preserve">
     <value>  -ignoreProjectExtensions:&lt;extensions&gt;
                      List of extensions to ignore when determining which
                      project file to build. Use a semicolon or a comma
@@ -450,9 +506,8 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-
-  <data name="HelpMessage_23_ToolsVersionSwitch" UESanitized="false" Visibility="Public">
-   <value>  -toolsVersion:&lt;version&gt;
+  <data name="HelpMessage_23_ToolsVersionSwitch" xml:space="preserve">
+    <value>  -toolsVersion:&lt;version&gt;
                      The version of the MSBuild Toolset (tasks, targets, etc.)
                      to use during build. This version will override the
                      versions specified by individual projects. (Short form:
@@ -469,9 +524,8 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-
-  <data name="HelpMessage_OutputCacheFile" UESanitized="false" Visibility="Public">
-   <value>  -outputResultsCache:[cacheFile]
+  <data name="HelpMessage_OutputCacheFile" xml:space="preserve">
+    <value>  -outputResultsCache:[cacheFile]
                      Output cache file where MSBuild will write the contents of
                      its build result caches at the end of the build.
                      If -isolateProjects is set to False, this sets it to True.
@@ -482,9 +536,8 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-
-  <data name="HelpMessage_InputCachesFiles" UESanitized="false" Visibility="Public">
-   <value>  -inputResultsCaches:&lt;cacheFile&gt;...
+  <data name="HelpMessage_InputCachesFiles" xml:space="preserve">
+    <value>  -inputResultsCaches:&lt;cacheFile&gt;...
                      Semicolon separated list of input cache files that MSBuild
                      will read build results from. If -isolateProjects is set
                      to False, this sets it to True. (short form: -irc)
@@ -494,8 +547,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-
-  <data name="HelpMessage_20_FileLoggerSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_20_FileLoggerSwitch" xml:space="preserve">
     <value>  -fileLogger[n]     Logs the build output to a file. By default
                      the file is in the current directory and named
                      "msbuild[n].log". Events from all nodes are combined into
@@ -514,7 +566,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_21_DistributedFileLoggerSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_21_DistributedFileLoggerSwitch" xml:space="preserve">
     <value>  -distributedFileLogger
                      Logs the build output to multiple log files, one log file
                      per MSBuild node. The initial location for these files is
@@ -537,7 +589,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_22_FileLoggerParametersSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_22_FileLoggerParametersSwitch" xml:space="preserve">
     <value>  -fileLoggerParameters[n]:&lt;parameters&gt;
                      Provides any extra parameters for file loggers.
                      The presence of this switch implies the
@@ -576,7 +628,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_24_NodeReuse" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_24_NodeReuse" xml:space="preserve">
     <value>  -nodeReuse:&lt;parameters&gt;
                      Enables or Disables the reuse of MSBuild nodes.
                      The parameters are:
@@ -588,7 +640,7 @@
                        -nr:true
     </value>
   </data>
-  <data name="HelpMessage_25_PreprocessSwitch">
+  <data name="HelpMessage_25_PreprocessSwitch" xml:space="preserve">
     <value>  -preprocess[:file]
                      Creates a single, aggregated project file by
                      inlining all the files that would be imported during a
@@ -603,7 +655,7 @@
                        -pp:out.txt
     </value>
   </data>
-  <data name="HelpMessage_26_DetailedSummarySwitch">
+  <data name="HelpMessage_26_DetailedSummarySwitch" xml:space="preserve">
     <value>  -detailedSummary[:True|False]
                      Shows detailed information at the end of the build
                      about the configurations built and how they were
@@ -615,7 +667,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_28_WarnAsErrorSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_28_WarnAsErrorSwitch" xml:space="preserve">
     <value>  -warnAsError[:code[;code2]]
                      List of warning codes to treats as errors.  Use a semicolon
                      or a comma to separate multiple warning codes. To treat all
@@ -634,7 +686,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_29_WarnAsMessageSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_29_WarnAsMessageSwitch" xml:space="preserve">
     <value>  -warnAsMessage[:code[;code2]]
                      List of warning codes to treats as low importance
                      messages.  Use a semicolon or a comma to separate
@@ -649,7 +701,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_30_BinaryLoggerSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_30_BinaryLoggerSwitch" xml:space="preserve">
     <value>  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
                      Serializes all build events to a compressed binary file.
                      By default the file is in the current directory and named
@@ -701,7 +753,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_31_RestoreSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_31_RestoreSwitch" xml:space="preserve">
     <value>  -restore[:True|False]
                      Runs a target named Restore prior to building
                      other targets and ensures the build for these
@@ -726,7 +778,7 @@
                      format. Otherwise, a tab separated file is produced.
     </value>
   </data>
-  <data name="HelpMessage_33_RestorePropertySwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_33_RestorePropertySwitch" xml:space="preserve">
     <value>  -restoreProperty:&lt;n&gt;=&lt;v&gt;
                      Set or override these project-level properties only
                      during restore and do not use properties specified
@@ -743,7 +795,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_34_InteractiveSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_34_InteractiveSwitch" xml:space="preserve">
     <value>  -interactive[:True|False]
                      Indicates that actions in the build are allowed to
                      interact with the user.  Do not use this argument
@@ -758,7 +810,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_35_IsolateProjectsSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_35_IsolateProjectsSwitch" xml:space="preserve">
     <value>  -isolateProjects[:True|MessageUponIsolationViolation|False]
                      Causes MSBuild to build each project in isolation.
 
@@ -784,7 +836,7 @@
       LOCALIZATION: "-isolateProjects" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.</comment>
   </data>
-  <data name="HelpMessage_36_GraphBuildSwitch" UESanitized="false" Visibility="Public">
+  <data name="HelpMessage_36_GraphBuildSwitch" xml:space="preserve">
     <value>  -graphBuild[:True|False]
                      Causes MSBuild to construct and build a project graph.
 
@@ -803,10 +855,10 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_37_DocsLink" Visibility="Public">
+  <data name="HelpMessage_37_DocsLink" xml:space="preserve">
     <value>For more detailed information, see https://aka.ms/msbuild/docs</value>
   </data>
-  <data name="HelpMessage_38_TargetsSwitch" Visibility="Public">
+  <data name="HelpMessage_38_TargetsSwitch" xml:space="preserve">
     <value>  -targets[:file]
                      Prints a list of available targets without executing the
                      actual build process. By default the output is written to
@@ -822,7 +874,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_39_LowPrioritySwitch" Visibility="Public">
+  <data name="HelpMessage_39_LowPrioritySwitch" xml:space="preserve">
     <value>  -lowPriority[:True|False]
                      Causes MSBuild to run at low process priority.
 
@@ -836,7 +888,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_40_WarnNotAsErrorSwitch" Visibility="Public">
+  <data name="HelpMessage_40_WarnNotAsErrorSwitch" xml:space="preserve">
     <value>  -warnNotAsError[:code[;code2]]
                      List of warning codes to treats not treat as errors.
                      Use a semicolon or a comma to separate
@@ -851,7 +903,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_41_QuestionSwitch" Visibility="Public">
+  <data name="HelpMessage_41_QuestionSwitch" xml:space="preserve">
     <value>  -question
                      (Experimental) Question whether there is any build work.
                      MSBuild will error out when it detects a target or task
@@ -865,7 +917,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="HelpMessage_42_ReportFileAccessesSwitch" Visibility="Public">
+  <data name="HelpMessage_42_ReportFileAccessesSwitch" xml:space="preserve">
     <value>  -reportFileAccesses[:True|False]
                      Causes MSBuild to report file accesses to any configured
                      project cache plugins.
@@ -877,7 +929,7 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
-  <data name="InvalidConfigurationFile" Visibility="Public">
+  <data name="InvalidConfigurationFile" xml:space="preserve">
     <value>MSBUILD : Configuration error MSB1043: The application could not start. {0}</value>
     <comment>
       {StrBegin="MSBUILD : Configuration error MSB1043: "}
@@ -885,7 +937,7 @@
       LOCALIZATION: The prefix "MSBUILD : Configuration error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidLoggerError" UESanitized="false" Visibility="Public">
+  <data name="InvalidLoggerError" xml:space="preserve">
     <value>MSBUILD : error MSB1019: Logger switch was not correctly formed.</value>
     <comment>{StrBegin="MSBUILD : error MSB1019: "}UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user does any of the following:
@@ -896,7 +948,7 @@
       parameters are optional).
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="InvalidMaxCPUCountValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidMaxCPUCountValue" xml:space="preserve">
     <value>MSBUILD : error MSB1030: Maximum CPU count is not valid. {0}</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1030: "}
@@ -905,15 +957,15 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidMaxCPUCountValueOutsideRange" UESanitized="true" Visibility="Public">
+  <data name="InvalidMaxCPUCountValueOutsideRange" xml:space="preserve">
     <value>MSBUILD : error MSB1032: Maximum CPU count is not valid. Value must be an integer greater than zero and no more than 1024.</value>
     <comment>{StrBegin="MSBUILD : error MSB1032: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       This error is shown when a user specifies a CPU value that is zero or less. For example, -m:0 instead of -m:2.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
-    </data>
-  <data name="InvalidNodeNumberValue" UESanitized="true" Visibility="Public">
+  </data>
+  <data name="InvalidNodeNumberValue" xml:space="preserve">
     <value>MSBUILD : error MSB1033: Node number is not valid. {0}.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1033: "}
@@ -922,7 +974,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidNodeNumberValueIsNegative" UESanitized="true" Visibility="Public">
+  <data name="InvalidNodeNumberValueIsNegative" xml:space="preserve">
     <value>MSBUILD : error MSB1034: Node number is not valid. Value must be an integer greater than zero.</value>
     <comment>{StrBegin="MSBUILD : error MSB1034: "}
         UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
@@ -930,7 +982,7 @@
         LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
       </comment>
   </data>
-  <data name="InvalidPropertyError" UESanitized="true" Visibility="Public">
+  <data name="InvalidPropertyError" xml:space="preserve">
     <value>MSBUILD : error MSB1006: Property is not valid.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1006: "}UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
@@ -941,12 +993,12 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidSchemaFile" UESanitized="false" Visibility="Public">
+  <data name="InvalidSchemaFile" xml:space="preserve">
     <value>MSBUILD : MSB1046: The schema "{0}" is not valid. {1}</value>
     <comment>{StrBegin="MSBUILD : MSB1046: "}UE: This message is shown when the schema file provided for the validation of a project is itself not valid.
     LOCALIZATION: "{0}" is the schema file path. "{1}" is a message from an FX exception that describes why the schema file is bad.</comment>
   </data>
-  <data name="InvalidSwitchIndicator" UESanitized="true" Visibility="Public">
+  <data name="InvalidSwitchIndicator" xml:space="preserve">
     <value>Switch: {0}</value>
     <comment>
       UE: This is attached to error messages caused by an invalid switch. This message indicates what the invalid arg was.
@@ -956,7 +1008,7 @@
       LOCALIZATION: {0} contains the invalid switch text.
     </comment>
   </data>
-  <data name="InvalidToolsVersionError" UESanitized="false" Visibility="Public">
+  <data name="InvalidToolsVersionError" xml:space="preserve">
     <value>MSBUILD : error MSB1040: ToolsVersion is not valid. {0}</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1040: "}
@@ -965,7 +1017,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidVerbosityError" UESanitized="true" Visibility="Public">
+  <data name="InvalidVerbosityError" xml:space="preserve">
     <value>MSBUILD : error MSB1018: Verbosity level is not valid.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1018: "}UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
@@ -974,31 +1026,31 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="LoggerFatalError" UESanitized="false" Visibility="Public">
+  <data name="LoggerFatalError" xml:space="preserve">
     <value>MSBUILD : error MSB1028: The logger failed unexpectedly.</value>
     <comment>{StrBegin="MSBUILD : error MSB1028: "}
       UE: This error is shown when a logger specified with the -logger switch throws an exception while being
       initialized. This message is followed by the exception text including the stack trace.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="LoggerFailurePrefixNoErrorCode" UESanitized="false" Visibility="Public">
-      <value>MSBUILD : Logger error {0}: {1}</value>
-      <comment>UE: This prefixes the error message emitted by a logger, when a logger fails in a controlled way using a LoggerException.
+  <data name="LoggerFailurePrefixNoErrorCode" xml:space="preserve">
+    <value>MSBUILD : Logger error {0}: {1}</value>
+    <comment>UE: This prefixes the error message emitted by a logger, when a logger fails in a controlled way using a LoggerException.
       For example, the logger is indicating that it could not create its output file.
       There's no error code because one was supplied by the logger.
       LOCALIZATION: The word "Logger" should be localized, the words "MSBuild" and "error" should NOT be localized.
       </comment>
   </data>
-  <data name="LoggerFailurePrefixWithErrorCode" UESanitized="false" Visibility="Public">
-      <value>MSBUILD : Logger error MSB1029: {0}</value>
-      <comment>{SubString="Logger", "{0}"}{StrBegin="MSBUILD : "}
+  <data name="LoggerFailurePrefixWithErrorCode" xml:space="preserve">
+    <value>MSBUILD : Logger error MSB1029: {0}</value>
+    <comment>{SubString="Logger", "{0}"}{StrBegin="MSBUILD : "}
         UE: This prefixes the error message emitted by a logger, when a logger fails in a controlled way using a LoggerException.
         For example, the logger is indicating that it could not create its output file.
         This is like LoggerFailurePrefixNoErrorCode, but the logger didn't supply its own error code, so we have to provide one.
         LOCALIZATION: The word "Logger" should be localized, the words "MSBuild" and "error" should NOT be localized.
       </comment>
   </data>
-  <data name="MissingLoggerError" UESanitized="true" Visibility="Public">
+  <data name="MissingLoggerError" xml:space="preserve">
     <value>MSBUILD : error MSB1007: Specify a logger.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1007: "}UE: This happens if the user does something like "msbuild.exe -logger". The user must pass in an actual logger class
@@ -1006,14 +1058,14 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingMaxCPUCountError" UESanitized="true" Visibility="Public">
+  <data name="MissingMaxCPUCountError" xml:space="preserve">
     <value>MSBUILD : error MSB1031: Specify the maximum number of CPUs.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1031: "}UE: This happens if the user does something like "msbuild.exe -m". The user must pass in an actual number like -m:4.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingProjectError" UESanitized="false" Visibility="Public">
+  <data name="MissingProjectError" xml:space="preserve">
     <value>MSBUILD : error MSB1003: Specify a project or solution file. The current working directory does not contain a project or solution file.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1003: "}UE: The user must either specify a project or solution file to build, or there must be a project file in the current directory
@@ -1021,7 +1073,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingPropertyError" UESanitized="true" Visibility="Public">
+  <data name="MissingPropertyError" xml:space="preserve">
     <value>MSBUILD : error MSB1005: Specify a property and its value.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1005: "}UE: This happens if the user does something like "msbuild.exe -property". The user must pass in an actual property
@@ -1029,7 +1081,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingResponseFileError" UESanitized="true" Visibility="Public">
+  <data name="MissingResponseFileError" xml:space="preserve">
     <value>MSBUILD : error MSB1012: Specify a response file.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1012: "}UE: This error would occur if the user did something like "msbuild.exe @ foo.proj". The at-sign must be followed by a
@@ -1037,7 +1089,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingTargetError" UESanitized="true" Visibility="Public">
+  <data name="MissingTargetError" xml:space="preserve">
     <value>MSBUILD : error MSB1004: Specify the name of the target.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1004: "}UE: This happens if the user does something like "msbuild.exe -target". The user must pass in an actual target name
@@ -1045,7 +1097,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingGetPropertyError" UESanitized="true" Visibility="Public">
+  <data name="MissingGetPropertyError" xml:space="preserve">
     <value>MSBUILD : error MSB1010: Must provide a property name for the getProperty switch.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
@@ -1053,6 +1105,14 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
+  <data name="MissingFeatureAvailabilityError" UESanitized="true" Visibility="Public">
+    <value>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</value>
+    <comment>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </comment>
+  </data>
   <data name="MissingGetItemError" UESanitized="true" Visibility="Public">
     <value>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</value>
     <comment>
@@ -1061,7 +1121,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingGetTargetResultError" UESanitized="true" Visibility="Public">
+  <data name="MissingGetTargetResultError" xml:space="preserve">
     <value>MSBUILD : error MSB1017: Must provide a target name for the getTargetResult switch.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1017: "}UE: This happens if the user does something like "msbuild.exe -getTargetResult". The user must pass in an actual target name
@@ -1069,14 +1129,22 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="SolutionBuildInvalidForCommandLineEvaluation" UESanitized="true" Visibility="Public">
+  <data name="MissingGetResultFileError" xml:space="preserve">
+    <value>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</value>
+    <comment>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </comment>
+  </data>
+  <data name="SolutionBuildInvalidForCommandLineEvaluation" xml:space="preserve">
     <value>MSBUILD : error MSB1063: Cannot access properties or items when building solution files or solution filter files. This feature is only available when building individual projects.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1063: "}UE: This happens if the user passes in a solution file when trying to access individual properties or items. The user must pass in a project file.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingToolsVersionError" UESanitized="false" Visibility="Public">
+  <data name="MissingToolsVersionError" xml:space="preserve">
     <value>MSBUILD : error MSB1039: Specify the version of the toolset.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1039: "}
@@ -1085,7 +1153,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingVerbosityError" UESanitized="true" Visibility="Public">
+  <data name="MissingVerbosityError" xml:space="preserve">
     <value>MSBUILD : error MSB1016: Specify the verbosity level.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1016: "}UE: This happens if the user does something like "msbuild.exe -verbosity". The user must pass in a verbosity level
@@ -1093,14 +1161,14 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MultipleSchemasError" UESanitized="true" Visibility="Public">
+  <data name="MultipleSchemasError" xml:space="preserve">
     <value>MSBUILD : error MSB1024: Only one schema can be specified for validation of the project.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1024: "}UE: The user did something like msbuild -validate:foo.xsd -validate:bar.xsd. We only allow one schema to be specified.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="PickedUpSwitchesFromAutoResponse" UESanitized="false" Visibility="Public">
+  <data name="PickedUpSwitchesFromAutoResponse" xml:space="preserve">
     <value>Some command line switches were read from the auto-response file "{0}". To disable this file, use the "-noAutoResponse" switch.</value>
     <comment>
       UE: This message appears in high verbosity modes when we used some
@@ -1108,25 +1176,25 @@
       where the switches are coming from.
     </comment>
   </data>
-  <data name="ProjectNotFoundError" UESanitized="true" Visibility="Public">
+  <data name="ProjectNotFoundError" xml:space="preserve">
     <value>MSBUILD : error MSB1009: Project file does not exist.</value>
     <comment>{StrBegin="MSBUILD : error MSB1009: "}UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="PossiblyOmittedMaxCPUSwitch" UESanitized="false" Visibility="Public">
+  <data name="PossiblyOmittedMaxCPUSwitch" xml:space="preserve">
     <value>Building the projects in this solution one at a time. To enable parallel build, please add the "-m" switch.</value>
   </data>
-  <data name="ProjectSchemaErrorHalt" UESanitized="false" Visibility="Public">
+  <data name="ProjectSchemaErrorHalt" xml:space="preserve">
     <value>MSBUILD : MSB1045: Stopping because of syntax errors in project file.</value>
     <comment>{StrBegin="MSBUILD : MSB1045: "}</comment>
   </data>
-  <data name="ReadResponseFileError" UESanitized="true" Visibility="Public">
+  <data name="ReadResponseFileError" xml:space="preserve">
     <value>MSBUILD : error MSB1023: Cannot read the response file. {0}</value>
     <comment>{StrBegin="MSBUILD : error MSB1023: "}UE: This error is shown when the response file cannot be read off disk.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized. {0} contains a localized message explaining
     why the response file could not be read -- this message comes from the CLR/FX.</comment>
   </data>
-  <data name="RepeatedResponseFileError" UESanitized="true" Visibility="Public">
+  <data name="RepeatedResponseFileError" xml:space="preserve">
     <value>MSBUILD : error MSB1013: The response file was specified twice. A response file can be specified only once. Any files named "msbuild.rsp" in the directory of MSBuild.exe or in the directory of the first project or solution built (which if no project or solution is specified is the current working directory) were automatically used as response files.</value>
     <comment>{StrBegin="MSBUILD : error MSB1013: "}UE: Response files are just text files that contain a bunch of command-line switches to be passed to MSBuild.exe. The
     purpose is so you don't have to type the same switches over and over again ... you can just pass in the response file instead.
@@ -1135,54 +1203,54 @@
     exact @ switch that resulted in the duplicate response file.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="ResponseFileNotFoundError" UESanitized="true" Visibility="Public">
+  <data name="ResponseFileNotFoundError" xml:space="preserve">
     <value>MSBUILD : error MSB1022: Response file does not exist.</value>
     <comment>{StrBegin="MSBUILD : error MSB1022: "}UE: This message would show if the user did something like "msbuild @bogus.rsp" where bogus.rsp doesn't exist. This
     message does not need in-line parameters because the exception takes care of displaying the invalid arg.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="SchemaFileLocation" UESanitized="false" Visibility="Public">
+  <data name="SchemaFileLocation" xml:space="preserve">
     <value>Validating project using schema file "{0}".</value>
     <comment>LOCALIZATION: "{0}" is the location of the schema file.</comment>
   </data>
-  <data name="SchemaValidationError" UESanitized="false" Visibility="Public">
+  <data name="SchemaValidationError" xml:space="preserve">
     <value>MSBUILD : MSB1044: Project is not valid. {0}</value>
     <comment>{StrBegin="MSBUILD : MSB1044: "}UE: This error is shown when the user asks his project to be validated against a schema (-val switch for
     MSBuild.exe), and the project has errors. "{0}" contains a message explaining the problem.
     LOCALIZATION: "{0}" is a message from the System.XML schema validator and is already localized.</comment>
   </data>
-  <data name="SchemaNotFoundError" UESanitized="true" Visibility="Public">
+  <data name="SchemaNotFoundError" xml:space="preserve">
     <value>MSBUILD : error MSB1026: Schema file does not exist.</value>
     <comment>{StrBegin="MSBUILD : error MSB1026: "}UE: This error is shown when the user specifies a schema file using the -validate:&lt;schema&gt; switch, and the file
     does not exist on disk. This message does not need in-line parameters because the exception takes care of displaying the
     invalid arg.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="SchemaNotFoundErrorWithFile" UESanitized="true" Visibility="Public">
+  <data name="SchemaNotFoundErrorWithFile" xml:space="preserve">
     <value>MSBUILD : error MSB1026: Schema file '{0}' does not exist.</value>
     <comment>{StrBegin="MSBUILD : error MSB1026: "}UE: This error is printed if the default schema does not exist or in the extremely unlikely event
     that an explicit schema file was passed and existed when the command line parameters were checked but was deleted from disk before this check was made.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
- <data name="UnexpectedParametersError" UESanitized="true" Visibility="Public">
+  <data name="UnexpectedParametersError" xml:space="preserve">
     <value>MSBUILD : error MSB1002: This switch does not take any parameters.</value>
     <comment>{StrBegin="MSBUILD : error MSB1002: "}UE: For example, if somebody types "msbuild.exe -noLogo:1", they would get this error because the -noLogo switch
     should not be followed by any parameters ... it stands alone.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="UnknownSwitchError" UESanitized="true" Visibility="Public">
+  <data name="UnknownSwitchError" xml:space="preserve">
     <value>MSBUILD : error MSB1001: Unknown switch.</value>
     <comment>{StrBegin="MSBUILD : error MSB1001: "}UE: This occurs when the user passes in an unrecognized switch on the MSBuild.exe command-line.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="UnsupportedOS" UESanitized="true" Visibility="Public">
+  <data name="UnsupportedOS" xml:space="preserve">
     <value>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</value>
     <comment>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="Using35Engine" UESanitized="true" Visibility="Public">
+  <data name="Using35Engine" xml:space="preserve">
     <value>Forcing load of Microsoft.Build.Engine because MSBUILDOLDOM=1...</value>
   </data>
-    <data name="MissingIgnoreProjectExtensionsError" UESanitized="false" Visibility="Public">
+  <data name="MissingIgnoreProjectExtensionsError" xml:space="preserve">
     <value>MSBUILD : error MSB1035: Specify the project extensions to ignore.</value>
     <comment>{StrBegin="MSBUILD : error MSB1035: "}
       UE: This happens if the user does something like "msbuild.exe -ignoreProjectExtensions". The user must pass in one or more
@@ -1190,11 +1258,11 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidExtensionToIgnore" UESanitized="false" Visibility="Public">
+  <data name="InvalidExtensionToIgnore" xml:space="preserve">
     <value>MSBUILD : error MSB1036: There is an invalid extension in the -ignoreProjectExtensions list. Extensions must start with a period ".", have one or more characters after the period and not contain any invalid path characters or wildcards.</value>
     <comment>{StrBegin="MSBUILD : error MSB1036: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
-  <data name="MissingConsoleLoggerParameterError" UESanitized="true" Visibility="Public">
+  <data name="MissingConsoleLoggerParameterError" xml:space="preserve">
     <value>MSBUILD : error MSB1037: Specify one or more parameters for the console logger if using the -consoleLoggerParameters switch</value>
     <comment>{StrBegin="MSBUILD : error MSB1037: "}
       UE: This happens if the user does something like "msbuild.exe -consoleLoggerParameters:". The user must pass in one or more parameters
@@ -1202,7 +1270,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingFileLoggerParameterError" UESanitized="true" Visibility="Public">
+  <data name="MissingFileLoggerParameterError" xml:space="preserve">
     <value>MSBUILD : error MSB1038: Specify one or more parameters for the file logger if using the -fileLoggerParameters switch</value>
     <comment>{StrBegin="MSBUILD : error MSB1038: "}
       UE: This happens if the user does something like "msbuild.exe -fileLoggerParameters:". The user must pass in one or more parameters
@@ -1210,7 +1278,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingTerminalLoggerParameterError" UESanitized="true" Visibility="Public">
+  <data name="MissingTerminalLoggerParameterError" xml:space="preserve">
     <value>MSBUILD : error MSB1066: Specify one or more parameters for the terminal logger if using the -terminalLoggerParameters switch</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1066: "}
@@ -1219,14 +1287,14 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingNodeReuseParameterError" UESanitized="true" Visibility="Public">
+  <data name="MissingNodeReuseParameterError" xml:space="preserve">
     <value>MSBUILD : error MSB1041: Specify one or more parameters for node reuse if using the -nodeReuse switch</value>
     <comment>{StrBegin="MSBUILD : error MSB1041: "}
       UE: This happens if the user does something like "msbuild.exe -nodeReuse:" without a true or false
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
      </comment>
   </data>
-  <data name="InvalidNodeReuseValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidNodeReuseValue" xml:space="preserve">
     <value>MSBUILD : error MSB1042: Node reuse value is not valid. {0}.</value>
     <comment>{StrBegin="MSBUILD : error MSB1042: "}
      UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
@@ -1234,7 +1302,7 @@
      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
   </comment>
   </data>
-  <data name="InvalidNodeReuseTrueValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidNodeReuseTrueValue" xml:space="preserve">
     <value>MSBUILD : error MSB1042: Node reuse value is not valid. This version of MSBuild does not support node reuse. If specified, the node reuse switch value must be false.</value>
     <comment>{StrBegin="MSBUILD : error MSB1042: "}
      UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
@@ -1242,7 +1310,7 @@
      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
   </comment>
   </data>
-  <data name="InvalidRestoreValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidRestoreValue" xml:space="preserve">
     <value>MSBUILD : error MSB1052: Restore value is not valid. {0}</value>
     <comment>{StrBegin="MSBUILD : error MSB1052: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
@@ -1250,7 +1318,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidInteractiveValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidInteractiveValue" xml:space="preserve">
     <value>MSBUILD : error MSB1055: Interactive value is not valid. {0}</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1055: "}
@@ -1259,7 +1327,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidIsolateProjectsValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidIsolateProjectsValue" xml:space="preserve">
     <value>MSBUILD : error MSB1056: Isolate projects value is not valid. {0}</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1056: "}
@@ -1269,7 +1337,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidGraphBuildValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidGraphBuildValue" xml:space="preserve">
     <value>MSBUILD : error MSB1057: Graph build value is not valid.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1057: "}
@@ -1278,7 +1346,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidDetailedSummaryValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidDetailedSummaryValue" xml:space="preserve">
     <value>MSBUILD : error MSB1061: Detailed summary value is not valid. {0}</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1061: "}
@@ -1287,7 +1355,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidLowPriorityValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidLowPriorityValue" xml:space="preserve">
     <value>MSBUILD : error MSB1064: Low priority value is not valid. {0}</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1064: "}
@@ -1296,7 +1364,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="InvalidTerminalLoggerValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidTerminalLoggerValue" xml:space="preserve">
     <value>MSBUILD : error MSB1065: Terminal logger value is not valid. It should be one of 'auto', 'true', or 'false'. {0}</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1065: "}
@@ -1305,26 +1373,25 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="AbortingBuild" UESanitized="true" Visibility="Public">
+  <data name="AbortingBuild" xml:space="preserve">
     <value>Attempting to cancel the build...</value>
   </data>
-  <data name="InvalidPreprocessPath">
+  <data name="InvalidPreprocessPath" xml:space="preserve">
     <value>MSBUILD : error MSB1047: File to preprocess to is not valid. {0}</value>
     <comment>{StrBegin="MSBUILD : error MSB1047: "}</comment>
   </data>
-  <data name="TargetsCouldNotBePrinted">
+  <data name="TargetsCouldNotBePrinted" xml:space="preserve">
     <value>MSBUILD : error MSB1059: Targets could not be printed. {0}</value>
     <comment>{StrBegin="MSBUILD : error MSB1059: "}</comment>
   </data>
-  <!-- MSB1021 and MSB1020 are also used in the engine but their copies do not have the "MSBUILD : " prefix so we must have our own -->
-  <data name="LoggerCreationError" UESanitized="true" Visibility="Public">
+  <data name="LoggerCreationError" xml:space="preserve">
     <value>MSBUILD : error MSB1021: Cannot create an instance of the logger. {0}</value>
     <comment>{StrBegin="MSBUILD : error MSB1021: "}
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized. {0} contains a message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.</comment>
   </data>
-  <data name="LoggerNotFoundError" UESanitized="false" Visibility="Public">
+  <data name="LoggerNotFoundError" xml:space="preserve">
     <value>MSBUILD : error MSB1020: The logger was not found. Check the following: 1.) The logger name specified is the same as the name of the logger class. 2.) The logger class is "public" and implements the Microsoft.Build.Framework.ILogger interface. 3.) The path to the logger assembly is correct, or the logger can be loaded using only the assembly name provided.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1020: "}UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
@@ -1333,22 +1400,22 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="ProjectUpgradeNeededToVcxProj">
+  <data name="ProjectUpgradeNeededToVcxProj" xml:space="preserve">
     <value>MSBUILD : error MSB4192: The project file "{0}" is in the ".vcproj" or ".dsp" file format, which MSBuild cannot build directly. Please convert the project by opening it in the Visual Studio IDE or running the conversion tool, or, for ".vcproj", use MSBuild to build the solution file containing the project instead.</value>
     <comment>{StrBegin="MSBUILD : error MSB4192: "} LOC: ".vcproj" and ".dsp" should not be localized</comment>
   </data>
-  <data name="NeedJustMyCode">
+  <data name="NeedJustMyCode" xml:space="preserve">
     <value>If MSBuild debugging does not work correctly, please verify that the "Just My Code" feature is enabled in Visual Studio, and that you have selected the managed debugger.</value>
   </data>
-  <data name="DebuggingSolutionFiles">
+  <data name="DebuggingSolutionFiles" xml:space="preserve">
     <value>MSBUILD : error MSB1048: Solution files cannot be debugged directly. Run MSBuild first with an environment variable MSBUILDEMITSOLUTION=1 to create a corresponding ".sln.metaproj" file. Then debug that.</value>
     <comment>{StrBegin="MSBUILD : error MSB1048: "} LOC: ".SLN" should not be localized</comment>
   </data>
-  <data name="ParameterRequiredError">
+  <data name="ParameterRequiredError" xml:space="preserve">
     <value>MSBUILD : error MSB1049: The {0} parameter must be specified</value>
     <comment>{StrBegin="MSBUILD : error MSB1049: "}</comment>
   </data>
-  <data name="InvalidReportFileAccessesValue" UESanitized="true" Visibility="Public">
+  <data name="InvalidReportFileAccessesValue" xml:space="preserve">
     <value>MSBUILD : error MSB1063: Report file accesses value is not valid. {0}</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1063: "}
@@ -1357,21 +1424,14 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <!-- #################################################################################################-->
-  <!-- ######################################## Shared strings #########################################-->
-  <!-- ###### These belong in Strings.shared.resx, but have been copied here for performance ###########-->
-  <!-- ##### If you change the string here, please also change it in Shared\Resources\Strings.shared.resx ########-->
-  <!-- #################### and in XMakeBuildEngine\Resources\Strings.resx #############################-->
-  <!-- ############## Remove this block once ResourceManager bug 627270 has been fixed. ################-->
-  <!-- #################################################################################################-->
-  <data name="BuildStarted" UESanitized="false" Visibility="Public">
+  <data name="BuildStarted" xml:space="preserve">
     <value>Build started.</value>
   </data>
-  <data name="FileLocation" UESanitized="false" Visibility="Public">
+  <data name="FileLocation" xml:space="preserve">
     <value>{0} ({1},{2})</value>
     <comment>A file location to be embedded in a string.</comment>
   </data>
-  <data name="MissingWarnAsMessageParameterError" UESanitized="true" Visibility="Public">
+  <data name="MissingWarnAsMessageParameterError" xml:space="preserve">
     <value>MSBUILD : error MSB1051: Specify one or more warning codes to treat as low importance messages when using the -warnAsMessage switch.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1051: "}
@@ -1379,7 +1439,7 @@
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </comment>
   </data>
-  <data name="MissingWarnNotAsErrorParameterError" UESanitized="true" Visibility="Public">
+  <data name="MissingWarnNotAsErrorParameterError" xml:space="preserve">
     <value>MSBUILD : error MSB1060: Specify one or more warning codes when using the -warnNotAsError switch.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1060: "}
@@ -1393,19 +1453,20 @@
   <data name="MissingProfileParameterError" xml:space="preserve">
     <value>MSBUILD :error MSB1054: A filename must be specified to generate the profiler result.</value>
   </data>
-  <data name="DuplicateOutputResultsCache" UESanitized="true" Visibility="Public">
+  <data name="DuplicateOutputResultsCache" xml:space="preserve">
     <value>MSBUILD : error MSB1058: Only one output results cache can be specified.</value>
     <comment>{StrBegin="MSBUILD : error MSB1058: "}</comment>
   </data>
-  <data name="OptionalLoggerCreationMessage" UESanitized="true" Visibility="Public">
-    <value>The specified logger could not be created and will not be used. {0}</value>
+  <data name="OptionalLoggerCreationMessage" xml:space="preserve">
+    <value>The specified logger "{0}" could not be created and will not be used. {1}</value>
     <comment>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </comment>
   </data>
-  <data name="EnvironmentVariableAsSwitch" Visibility="Public">
+  <data name="EnvironmentVariableAsSwitch" xml:space="preserve">
     <value>MSBUILD : error MSB1060: Undefined environment variable passed in as switch.</value>
     <comment>
       {StrBegin="MSBUILD : error MSB1060: "}
@@ -1413,49 +1474,48 @@
       but the environment variable is not defined.
     </comment>
   </data>
-  <data name="Process" UESanitized="true" Visibility="Public">
+  <data name="Process" xml:space="preserve">
     <value>Process = "{0}"</value>
   </data>
-  <data name="MSBExePath" UESanitized="true" Visibility="Public">
+  <data name="MSBExePath" xml:space="preserve">
     <value>MSBuild executable path = "{0}"</value>
   </data>
-  <data name="CommandLine" UESanitized="true" Visibility="Public">
+  <data name="CommandLine" xml:space="preserve">
     <value>Command line arguments = "{0}"</value>
   </data>
-  <data name="CurrentDirectory" UESanitized="true" Visibility="Public">
+  <data name="CurrentDirectory" xml:space="preserve">
     <value>Current directory = "{0}"</value>
   </data>
-  <data name="MSBVersion" UESanitized="true" Visibility="Public">
+  <data name="MSBVersion" xml:space="preserve">
     <value>MSBuild version = "{0}"</value>
   </data>
-  <data name="MSBuildDebugPath" Visibility="Public">
+  <data name="MSBuildDebugPath" xml:space="preserve">
     <value>MSBuild logs and debug information will be at "{0}"</value>
   </data>
-  <data name="SwitchErrorWithArguments" Visibility="Public">
+  <data name="SwitchErrorWithArguments" xml:space="preserve">
     <value>{0}
     Full command line: '{1}'
   Switches appended by response files:{2}</value>
   </data>
-  <data name="ResponseFileSwitchFromLocation" Visibility="Public">
+  <data name="ResponseFileSwitchFromLocation" xml:space="preserve">
     <value>'{0}' came from '{1}'</value>
     <comment>
       These are response file switches with the location of the response file on disk.
     </comment>
   </data>
-  <data name="NotWarnAsErrorWithoutWarnAsError" Visibility="Public">
+  <data name="NotWarnAsErrorWithoutWarnAsError" xml:space="preserve">
     <value>MSBUILD : error MSB1062: The -warnnotaserror switch cannot be specified unless the -warnaserror switch is also specified and left empty.</value>
     <comment>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</comment>
   </data>
-  <data name="UnsupportedSwitchForSolutionFiles" Visibility="Public">
+  <data name="UnsupportedSwitchForSolutionFiles" xml:space="preserve">
     <value>The '{0}' switch is not supported for solution files.</value>
   </data>
-  <data name="NameInvalid" Visibility="Public">
+  <data name="NameInvalid" xml:space="preserve">
     <value>MSBUILD : error MSB5016: The name "{0}" contains an invalid character "{1}".</value>
     <comment>
       {StrBegin="MSBUILD : error MSB5016: "}
     </comment>
   </data>
-  <!-- **** TerminalLogger strings begin **** -->
   <data name="RestoreComplete" xml:space="preserve">
     <value>Restore complete ({0}s)</value>
     <comment>
@@ -1536,9 +1596,9 @@
       {0}: VT100 coded hyperlink to project output directory
     </comment>
   </data>
-  <data name="DurationDisplay">
-      <value>({0:F1}s)</value>
-      <comment>
+  <data name="DurationDisplay" xml:space="preserve">
+    <value>({0:F1}s)</value>
+    <comment>
         {0}: duration in seconds with 1 decimal point
       </comment>
   </data>
@@ -1554,11 +1614,37 @@
   <data name="TerminalLoggerNotUsedRedirected" xml:space="preserve">
     <value>Terminal Logger was not used because the output is being redirected to a file.</value>
   </data>
+  <data name="TestProjectFinished_NoTF" xml:space="preserve">
+    <value>{0}{1} test {2} ({3}s)</value>
+    <comment>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </comment>
+  </data>
+  <data name="TestProjectFinished_WithTF" xml:space="preserve">
+    <value>{0}{1} test {2} {3} ({4}s)</value>
+    <comment>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </comment>
+  </data>
+  <data name="TestSummary" xml:space="preserve">
+    <value>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</value>
+    <comment>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</comment>
+  </data>
   <!-- **** TerminalLogger strings end **** -->
     <!--
         The command line message bucket is: MSB1001 - MSB1999
 
-        Next error code should be MSB1067.
+        Next error code should be MSB1069.
 
         Don't forget to update this comment after using the new code.
   -->
diff --git a/src/MSBuild/Resources/xlf/Strings.cs.xlf b/src/MSBuild/Resources/xlf/Strings.cs.xlf
index bc757f96072..8cce023c82f 100644
--- a/src/MSBuild/Resources/xlf/Strings.cs.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.cs.xlf
@@ -157,7 +157,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">MSBuild verze {0} pro {1}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -575,17 +575,20 @@ Kdy≈æ se nastav√≠ na MessageUponIsolationViolation (nebo jeho kr√°tk√Ω
                        -logger:XMLLogger,MyLogger,Version=1.0.2,Culture=neutral
                        -logger:XMLLogger,C:\Loggers\MyLogger.dll;OutputAsHTML
 </source>
-        <target state="translated">  -logger:&lt;logger&gt;   Pou≈æ√≠t dan√Ω protokolovac√≠ n√°stroj k protokolov√°n√≠ ud√°lost√≠ n√°stroje MSBuild. Pokud chcete zadat 
-                     v√≠ce protokolovac√≠ch n√°stroj≈Ø, mus√≠te je zadat jednotlivƒõ.
-                     Syntaxe hodnoty &lt;logger&gt; je:
-                       [&lt;class&gt;,]&lt;assembly&gt;[,&lt;options&gt;][;&lt;parameters&gt;]
-                     Syntaxe hodnoty &lt;logger class&gt; je:
-                       [&lt;partial or full namespace&gt;.]&lt;logger class name&gt;
-                     Syntaxe hodnoty &lt;logger assembly&gt; je:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+        <target state="translated">  -logger:&lt;protok_n√°st&gt;   Pou≈æ√≠t dan√Ω protokolovac√≠ n√°stroj k protokolov√°n√≠
+                     ud√°lost√≠ n√°stroje MSBuild. Chcete-li zadat v√≠ce protokolovac√≠ch.
+                     n√°stroj≈Ø, mus√≠te je zadat jednotlivƒõ.
+                     Syntaxe hodnoty &lt;protok_n√°st&gt;:
+                        [&lt;t≈ô√≠da_protok_n√°st&gt;,]&lt;sestaven√≠_protok_n√°st&gt;
+                        [;&lt;param_protok_n√°st&gt;]
+                     Syntaxe hodnoty &lt;t≈ô√≠da_protok_n√°st&gt;:
+                        [&lt;ƒç√°st/√∫pl_obor_n√°zv≈Ø&gt;.]&lt;n√°z_t≈ô_protok_n√°st&gt;
+                     Syntaxe hodnoty &lt;sestaven√≠_protok_n√°st&gt;:
+                        {&lt;n√°zev_sestaven√≠&gt;[,&lt;strong name&gt;] | &lt;soubor_sestaven√≠&gt;}
                      Parametry protokolovac√≠ho n√°stroje urƒçuj√≠, jak MSBuild vytvo≈ô√≠ protokolovac√≠ n√°stroj.
-                     Parametry &lt;logger parameters&gt; jsou voliteln√© a p≈ôed√°vaj√≠ se
-                     protokolovac√≠mu n√°stroji p≈ôesnƒõ v tom tvaru, v jak√©m byly zad√°ny. (Kr√°tk√Ω tvar: -l)
+                     Parametry &lt;param_protok_n√°st&gt; jsou voliteln√© a p≈ôed√°vaj√≠ se 
+                     protokolovac√≠mu n√°stroji p≈ôesnƒõ v tom tvaru, v jak√©m
+                     byly zad√°ny. (Kr√°tk√Ω tvar: -l)
                      P≈ô√≠klady:
                        -logger:XMLLogger,MyLogger,Version=1.0.2,Culture=neutral
                        -logger:XMLLogger,C:\Loggers\MyLogger.dll;OutputAsHTML
@@ -854,20 +857,23 @@ Kdy≈æ se nastav√≠ na MessageUponIsolationViolation (nebo jeho kr√°tk√Ω
                        -dl:XMLLogger,MyLogger,Version=1.0.2,Culture=neutral
                        -dl:MyLogger,C:\My.dll*ForwardingLogger,C:\Logger.dll
 </source>
-        <target state="translated">  -distributedLogger:&lt;central logger&gt;*&lt;forwarding logger&gt;
-                     Pou≈æ√≠t zadan√Ω protokolovac√≠ n√°stroj pro protokolov√°n√≠ ud√°lost√≠ z n√°stroje MSBuild; ke ka≈æd√©mu uzlu p≈ôipojit
-                     jinou instanci protokolovac√≠ho n√°stroje. Pokud chcete zadat v√≠ce
-                     protokolovac√≠ch n√°stroj≈Ø, uveƒète je jednotlivƒõ.
+        <target state="translated">  -distributedlogger:&lt;centr_protok_n√°st&gt;*&lt;p≈ôed√°v_protok_n√°st&gt;                     
+                     Pou≈æ√≠t zadan√Ω protokolovac√≠ n√°stroj pro protokolov√°n√≠ ud√°lost√≠
+                     z n√°stroje MSBuild; ke ka≈æd√©mu uzlu p≈ôipojit jinou instanci 
+                     protokolovac√≠ho n√°stroje. Chcete-li zadat v√≠ce 
+                     protokolovac√≠ch n√°stroj≈Ø, uveƒète je jednotlivƒõ. 
                      (Kr√°tk√Ω tvar: -dl)
-                     Syntaxe hodnoty &lt;logger&gt; je:
-                       [&lt;class&gt;,]&lt;assembly&gt;[,&lt;options&gt;][;&lt;parameters&gt;]
-                     Syntaxe hodnoty &lt;logger class&gt; je:
-                       [&lt;partial or full namespace&gt;.]&lt;logger class name&gt;
-                     Syntaxe hodnoty &lt;logger assembly&gt; je:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                     Syntaxe hodnoty &lt;protok_n√°st&gt;:
+                        [&lt;t≈ô√≠da_protok_n√°st&gt;,]&lt;sestav_protok_n√°st&gt;
+                        [;&lt;param_protok_n√°st&gt;]
+                     Syntaxe hodnoty &lt;t≈ô√≠da_protok_n√°st&gt;:
+                        [&lt;ƒç√°st/√∫pl_obor_n√°zv≈Ø&gt;.]&lt;n√°z_t≈ô_protok_n√°st&gt;
+                     Syntaxe hodnoty &lt;sestav_protok_n√°st&gt;:
+                        {&lt;n√°zev_sestaven√≠&gt;[,&lt;strong name&gt;] | &lt;soubor_sestaven√≠&gt;}
                      Parametry protokolovac√≠ho n√°stroje urƒçuj√≠, jak MSBuild vytvo≈ô√≠ protokolovac√≠ n√°stroj.
                      Parametry &lt;param_protok_n√°st&gt; jsou voliteln√© a p≈ôed√°vaj√≠ se
-                     protokolovac√≠mu n√°stroji p≈ôesnƒõ v zadan√©m tvaru. (Kr√°tk√Ω tvar: -l)
+                     protokolovac√≠mu n√°stroji p≈ôesnƒõ v zadan√©m tvaru.
+                     (Kr√°tk√Ω tvar: -l)
                      P≈ô√≠klady:
                        -dl:XMLLogger,MyLogger,Version=1.0.2,Culture=neutral
                        -dl:MyLogger,C:\My.dll*ForwardingLogger,C:\Logger.dll
@@ -1055,7 +1061,7 @@ Kdy≈æ se nastav√≠ na MessageUponIsolationViolation (nebo jeho kr√°tk√Ω
                                              Verbosity=diagnostic;Encoding=UTF-8
 
                        -flp:Summary;Verbosity=minimal;LogFile=msbuild.sum 
-                       -flp1:warningsonly;logfile=msbuild.wrn
+                       -flp1:warningsonly;logfile=msbuild.wrn 
                        -flp2:errorsonly;logfile=msbuild.err
     </target>
         <note>
@@ -1328,6 +1334,15 @@ Kdy≈æ se nastav√≠ na MessageUponIsolationViolation (nebo jeho kr√°tk√Ω
         <target state="translated">Protokoly MSBuild a informace o ladƒõn√≠ budou dostupn√© v ‚Äû{0}‚Äú</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: Je nutn√© zadat n√°zev funkce pro p≈ôep√≠naƒç dostupnosti funkc√≠.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: Je nutn√© zadat n√°zev polo≈æky pro p≈ôep√≠naƒç getItem.</target>
@@ -1344,6 +1359,15 @@ Kdy≈æ se nastav√≠ na MessageUponIsolationViolation (nebo jeho kr√°tk√Ω
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: Je nutn√© zadat soubor pro p≈ôep√≠naƒç getResultOutputFile.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1467,11 +1491,12 @@ Kdy≈æ se nastav√≠ na MessageUponIsolationViolation (nebo jeho kr√°tk√Ω
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">Zadan√Ω protokolovac√≠ n√°stroj nebylo mo≈æn√© vytvo≈ôit a nebude se pou≈æ√≠vat. {0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">Zadan√Ω protokolovac√≠ n√°stroj {0} nebylo mo≈æn√© vytvo≈ôit a nebude se pou≈æ√≠vat. {1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1647,6 +1672,35 @@ Kdy≈æ se nastav√≠ na MessageUponIsolationViolation (nebo jeho kr√°tk√Ω
         <target state="translated">Termin√°lov√Ω protokolovaƒç se nepou≈æil, proto≈æe v√Ωstup se p≈ôesmƒõrov√°v√° do souboru.</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} ‚Äì test {2} ({3} s)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} ‚Äì test {2} {3} ({4} s)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">Testovac√≠ bƒõh {0}. Celkem: {1}, ne√∫spƒõ≈°n√©: {2}, √∫spƒõ≈°n√©: {3}, p≈ôeskoƒçeno: {4}, doba trv√°n√≠: {5} s</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: Pro tento p≈ôep√≠naƒç se nepou≈æ√≠vaj√≠ ≈æ√°dn√© parametry.</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.de.xlf b/src/MSBuild/Resources/xlf/Strings.de.xlf
index a21843226d1..2cc5ce4e5fa 100644
--- a/src/MSBuild/Resources/xlf/Strings.de.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.de.xlf
@@ -112,11 +112,12 @@
 
                      This flag is experimental and may not work as intended.
     </source>
-        <target state="translated">  -reportFileAccesses[:True|False]
-                     F√ºhrt dazu, dass MSBuild Dateizugriffe auf ein beliebiges konfiguriertes
-                     Projektcache-Plug-In meldet.
+        <target state="translated">  -reportFileAccesses[:True|Falsch]
+                     F√ºhrt dazu, dass MSBuild Dateizugriffe an alle konfigurierten
+ meldet
+                     Projektcache-Plug-Ins.
 
-                     Dieses Flag ist experimentell und funktioniert m√∂glicherweise nicht wie vorgesehen.
+                     Dieses Kennzeichen ist experimentell und funktioniert m√∂glicherweise nicht wie vorgesehen.
     </target>
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
@@ -156,7 +157,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">MSBuild-Version {0} f√ºr {1}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -573,11 +574,11 @@ Dies ist ein restriktiverer Modus von MSBuild, da er erfordert,
         <target state="translated">  -logger:&lt;Protokollierung&gt;   Mithilfe dieser Protokollierung werden Ereignisse von MSBuild protokolliert. Um mehrere Protokollierungen anzugeben, 
                      wird jede Protokollierung gesondert angegeben.
                      Die Syntax f√ºr die &lt;Protokollierung&gt; lautet:
-                       [&lt;Klasse&gt;,]&lt;assembly&gt;[,&lt;Optionen&gt;][;&lt;Parameter&gt;]
+                       [&lt;Klasse&gt;,]&lt;Assembly&gt;[,&lt;Optionen&gt;][;&lt;Parameter&gt;]
                      Die Syntax f√ºr die &lt;Protokollierungsklasse&gt; lautet:
                         [&lt;Teilweiser oder vollst√§ndiger Namespace&gt;.]&lt;Name der Protokollierungsklasse&gt;
                      Die Syntax f√ºr die &lt;Protokollierungsassembly&gt; lautet:
-                        {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;Assemblyname&gt;[,&lt;strong name&gt;] | &lt;Assemblydatei&gt;}
                      Die Protokollierungsoptionen geben an, wie MSBuild die Protokollierung erstellt.
                      Die &lt;Protokollierungsparameter&gt; sind optional und werden genau 
                      so an die Protokollierung √ºbergeben, wie sie eingegeben wurden. (Kurzform: -l)
@@ -855,11 +856,11 @@ Dieses Protokollierungsformat ist standardm√§√üig aktiviert.
                      gesondert angegeben.
                      (Kurzform -dl)
                      Die Syntax f√ºr die &lt;Protokollierung&gt; lautet:
-                       [&lt;Klasse&gt;,]&lt;assembly&gt;[,&lt;Optionen&gt;][;&lt;Parameter&gt;]
+                       [&lt;Klasse&gt;,]&lt;Assembly&gt;[,&lt;Optionen&gt;][;&lt;Parameter&gt;]
                      Die Syntax f√ºr die &lt;Protokollierungsklasse&gt; lautet:
                         [&lt;Teilweiser oder vollst√§ndiger Namespace&gt;.]&lt;Name der Protokollierungsklasse&gt;
                      Die Syntax f√ºr die &lt;Protokollierungsassembly&gt; lautet:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;Assemblyname&gt;[,&lt;strong name&gt;] | &lt;Assemblydatei&gt;}
                      Die Protokollierungsoptionen geben an, wie MSBuild die Protokollierung erstellt.
                      Die &lt;Protokollierungsparameter&gt; sind optional und werden genau 
                      so an die Protokollierung √ºbergeben, wie sie eingegeben wurden. (Kurzform: -l)
@@ -1321,6 +1322,15 @@ Dieses Protokollierungsformat ist standardm√§√üig aktiviert.
         <target state="translated">MSBuild-Protokolle und Debuginformationen befinden sich auf "{0}"</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: Es muss ein Featurename f√ºr den Featureverf√ºgbarkeitsschalter angegeben werden.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: Es muss ein Elementname f√ºr den getItem-Switch angegeben werden.</target>
@@ -1337,6 +1347,15 @@ Dieses Protokollierungsformat ist standardm√§√üig aktiviert.
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: Es muss eine Datei f√ºr den getResultOutputFile-Switch angegeben werden.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1460,11 +1479,12 @@ Dieses Protokollierungsformat ist standardm√§√üig aktiviert.
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">Die angegebene Protokollierung konnte nicht erstellt werden und wird nicht verwendet. {0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">Die angegebene Protokollierung ‚Äû{0}‚Äú konnte nicht erstellt werden und wird nicht verwendet. {1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1640,6 +1660,35 @@ Dieses Protokollierungsformat ist standardm√§√üig aktiviert.
         <target state="translated">Die Terminalprotokollierung wurde nicht verwendet, da die Ausgabe an eine Datei umgeleitet wird.</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} Test {2} ({3}s)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} Test {2} {3} ({4}s)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">Testlauf {0}. Gesamt: {1} Fehlgeschlagen: {2} Erfolgreich: {3} √úbersprungen: {4}, Dauer: {5}s</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: Der Schalter erlaubt keine Parameter.</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.es.xlf b/src/MSBuild/Resources/xlf/Strings.es.xlf
index 5e02da6973e..a46a83106bb 100644
--- a/src/MSBuild/Resources/xlf/Strings.es.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.es.xlf
@@ -116,7 +116,7 @@
                      Hace que MSBuild informe de los accesos a los archivos a cualquier
                      complemento de cach√© de proyectos.
 
-                     Esta marca es experimental y puede que no funcione seg√∫n lo previsto.
+Esta marca es experimental y puede que no funcione seg√∫n lo previsto.
     </target>
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
@@ -156,7 +156,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">Versi√≥n de MSBuild {0} para {1}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -571,14 +571,18 @@
                        -logger:XMLLogger,C:\Loggers\MyLogger.dll;OutputAsHTML
 </source>
         <target state="translated">  -logger:&lt;registrador&gt;   Use este registrador para registrar eventos
-                     de MSBuild. Para especificar varios registradores, especifique cada uno de ellos por separado.
+                     de MSBuild. Para especificar varios registradores, especifique
+                     cada uno de ellos por separado.
                      La sintaxis de &lt;registrador&gt; es:
-                       [&lt;clase&gt;,]&lt;assembly&gt;[,&lt;opciones&gt;][;&lt;par√°metros&gt;]
+                       [&lt;clase&gt;,]&lt;ensamblado&gt;[,&lt;opciones&gt;][;&lt;par√°metros&gt;]
                      La sintaxis de &lt;clase del registrador&gt; es:
-                       [&lt;espacio de nombres parcial o completo&gt;.]&lt;nombre de clase del registrador&gt;
-                       La sintaxis de &lt;ensamblado del registrador&gt; es:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
-                     Las opciones del registrador especifican c√≥mo crea MSBuild el registrador.
+                       [&lt;espacio de nombres parcial o completo&gt;.]&lt;nombre de
+                       clase del registrador&gt;
+                     La sintaxis de &lt;ensamblado del registrador&gt; es:
+                       {&lt;nombre del ensamblado&gt;[,&lt;strong name&gt;] | &lt;archivo
+                       de ensamblado&gt;}
+                     Las opciones del registrador especifican c√≥mo crea MSBuild
+                     el registrador.
                      Los &lt;par√°metros del registrador&gt; son opcionales y se pasan
                      al registrador tal como se escriben. (Forma corta: -l)
                      Ejemplos:
@@ -855,12 +859,15 @@
                      Para especificar varios registradores, especifique cada uno
                      de ellos por separado. (Forma corta: -dl)
                      La sintaxis de &lt;registrador&gt; es:
-                       [&lt;clase&gt;,]&lt;assembly&gt;[,&lt;opciones&gt;][;&lt;par√°metros&gt;]
+                       [&lt;clase&gt;,]&lt;ensamblado&gt;[,&lt;opciones&gt;][;&lt;par√°metros&gt;]
                      La sintaxis de &lt;clase del registrador&gt; es:
-                       [&lt;espacio de nombres parcial o completo&gt;.]&lt;nombre de la clase del registrador&gt;
+                       [&lt;espacio de nombres parcial o completo&gt;.]&lt;nombre
+                       de la clase del registrador&gt;
                      La sintaxis de &lt;ensamblado del registrador&gt; es:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
-                     Las opciones del registrador especifican c√≥mo crea MSBuild el registrador.
+                       {&lt;nombre del ensamblado&gt;[,&lt;strong name&gt;] | &lt;archivo
+                      de ensamblado&gt;}
+                     Las opciones del registrador especifican c√≥mo crea MSBuild
+                     el registrador.
                      Los &lt;par√°metros del registrador&gt; son opcionales y se pasan
                      al registrador tal como se escriben. (Forma corta: -l)
                      Ejemplos:
@@ -1321,6 +1328,15 @@
         <target state="translated">Los registros de MSBuild y la informaci√≥n de depuraci√≥n estar√°n en "{0}"</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: debe proporcionar un nombre de caracter√≠stica para el conmutador de disponibilidad de caracter√≠sticas.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: debe proporcionar un nombre de elemento para el modificador getItem.</target>
@@ -1337,6 +1353,15 @@
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: debe proporcionar un archivo para el modificador getResultOutputFile.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1460,11 +1485,12 @@
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">No se pudo crear el registrador especificado y no se usar√°. {0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">No se pudo crear el registrador especificado por "{0}" y no se usar√°. {1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1640,6 +1666,35 @@
         <target state="translated">No se us√≥ el terminal de Logger porque la salida se est√° redirigiendo a un archivo.</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} prueba{2} ({3}s)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} {2} {3} prueba ({4}s)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">Serie de pruebas {0}. Total: {1} error: {2} Pasado: {3} Omitido: {4}, Duraci√≥n: {5}s</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: Este modificador no tiene ning√∫n par√°metro.</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.fr.xlf b/src/MSBuild/Resources/xlf/Strings.fr.xlf
index 61673b8b84b..44ac7629a7e 100644
--- a/src/MSBuild/Resources/xlf/Strings.fr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.fr.xlf
@@ -114,7 +114,7 @@
     </source>
         <target state="translated">  -reportFileAccesses[:True|False]
                      Entra√Æne le signalement par MSBuild des acc√®s par fichiers aux plug-ins
-                     de cache de projet configur√©s.
+                     cache de projet configur√©s.
 
                      Cet indicateur est exp√©rimental et peut ne pas fonctionner comme pr√©vu.
     </target>
@@ -156,7 +156,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">Version MSBuild {0} pour {1}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -577,7 +577,7 @@ Cet indicateur est exp√©rimental et peut ne pas fonctionner comme pr√©vu.
                      Syntaxe de &lt;classe de journalisation&gt;¬†:
                        [&lt;espace de noms partiels ou complets&gt;.]&lt;nom de la classe de journalisation&gt;
                      Syntaxe de &lt;assembly de journalisation&gt;¬†:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;nom d'assembly&gt;[,&lt;strong name&gt;] | &lt;fichier d'assembly&gt;}
                      Les options de journalisation sp√©cifient la fa√ßon dont MSBuild cr√©e le journaliseur.
                      Les &lt;param√®tres de journalisation&gt; sont facultatifs. Ils sont pass√©s
                      au journaliseur tels que vous les avez tap√©s. (Forme abr√©g√©e¬†: -l)
@@ -859,7 +859,7 @@ Remarque : verbosit√© des enregistreurs d‚Äô√©v√©nements de fichiers
                      Syntaxe de &lt;classe de journalisation&gt;¬†:
                        [&lt;espace de noms partiels ou complets&gt;.]&lt;nom de la classe de journalisation&gt;
                      Syntaxe de &lt;assembly de journalisation&gt;¬†:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;nom d'assembly&gt;[,&lt;strong name&gt;] | &lt;fichier d'assembly&gt;}
                      Les options de journalisation sp√©cifient la fa√ßon dont MSBuild cr√©e le journaliseur.
                      Les &lt;param√®tres de journalisation&gt; sont facultatifs. Ils sont pass√©s
                      au journaliseur tels que vous les avez tap√©s. (Forme abr√©g√©e¬†: -l)
@@ -1321,9 +1321,18 @@ Remarque : verbosit√© des enregistreurs d‚Äô√©v√©nements de fichiers
         <target state="translated">Les journaux MSBuild et les informations de d√©bogage seront au "{0}"</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: vous devez fournir un nom de fonctionnalit√© pour le commutateur featureavailability.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
-        <target state="translated">MSBUILD : error MSB1014: Doit fournir un nom d'√©l√©ment pour le commutateur getItem.</target>
+        <target state="new">MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</target>
         <note>
       {StrBegin="MSBUILD : error MSB1014: "}UE: This happens if the user does something like "msbuild.exe -getItem". The user must pass in an actual item name
       following the switch, as in "msbuild.exe -getItem:blah".
@@ -1332,16 +1341,25 @@ Remarque : verbosit√© des enregistreurs d‚Äô√©v√©nements de fichiers
       </trans-unit>
       <trans-unit id="MissingGetPropertyError">
         <source>MSBUILD : error MSB1010: Must provide a property name for the getProperty switch.</source>
-        <target state="translated">MSBUILD : error MSB1010: Doit fournir un nom de propri√©t√© pour le commutateur getProperty.</target>
+        <target state="new">MSBUILD : error MSB1010: Must provide a property name for the getProperty switch.</target>
         <note>
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: doit fournir un fichier pour la bascule getResultOutputFile.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
         <source>MSBUILD : error MSB1017: Must provide a target name for the getTargetResult switch.</source>
-        <target state="translated">MSBUILD : error MSB1017: Doit fournir un nom de cible pour le commutateur getTargetResult.</target>
+        <target state="new">MSBUILD : error MSB1017: Must provide a target name for the getTargetResult switch.</target>
         <note>
       {StrBegin="MSBUILD : error MSB1017: "}UE: This happens if the user does something like "msbuild.exe -getTargetResult". The user must pass in an actual target name
       following the switch, as in "msbuild.exe -getTargetResult:blah".
@@ -1460,11 +1478,12 @@ Remarque : verbosit√© des enregistreurs d‚Äô√©v√©nements de fichiers
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">Le journaliseur sp√©cifi√© n'a pas pu √™tre cr√©√© et ne sera pas utilis√©. {0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">L‚Äôenregistreur d‚Äô√©v√©nements ¬´¬†{0}¬†¬ª sp√©cifi√© n‚Äôa pas pu √™tre cr√©√© et ne sera pas utilis√©. {1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1605,7 +1624,7 @@ Remarque : verbosit√© des enregistreurs d‚Äô√©v√©nements de fichiers
       </trans-unit>
       <trans-unit id="SolutionBuildInvalidForCommandLineEvaluation">
         <source>MSBUILD : error MSB1063: Cannot access properties or items when building solution files or solution filter files. This feature is only available when building individual projects.</source>
-        <target state="translated">MSBUILD : error MSB1063: Impossible d'acc√©der aux propri√©t√©s ou aux √©l√©ments lors de la cr√©ation de fichiers de solution ou de fichiers de filtre de solution. Cette fonctionnalit√© est disponible uniquement lors de la g√©n√©ration de projets individuels.</target>
+        <target state="new">MSBUILD : error MSB1063: Cannot access properties or items when building solution files or solution filter files. This feature is only available when building individual projects.</target>
         <note>
       {StrBegin="MSBUILD : error MSB1063: "}UE: This happens if the user passes in a solution file when trying to access individual properties or items. The user must pass in a project file.
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
@@ -1640,6 +1659,35 @@ Remarque : verbosit√© des enregistreurs d‚Äô√©v√©nements de fichiers
         <target state="translated">L‚Äôenregistreur d‚Äô√©v√©nements du terminal n‚Äôa pas √©t√© utilis√© car la sortie est redirig√©e vers un fichier.</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}Test de {1}¬†: {2} ({3}¬†s)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}Test de {1} {2}¬†: {3} ({4}¬†s)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">S√©rie de tests¬†: {0}. Total¬†: {1} √âchec¬†: {2}, R√©ussi¬†: {3}, Ignor√©¬†: {4}, Dur√©e¬†: {5}¬†s</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: Ce commutateur n'accepte aucun param√®tre.</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.it.xlf b/src/MSBuild/Resources/xlf/Strings.it.xlf
index 03015b156c1..c2bf89cf08f 100644
--- a/src/MSBuild/Resources/xlf/Strings.it.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.it.xlf
@@ -113,10 +113,10 @@
                      This flag is experimental and may not work as intended.
     </source>
         <target state="translated">  -reportFileAccesses[:True|False]
-                     Fa in modo che MSBuild segnali gli accessi ai file a qualsiasi
+                     Fa in modo che MSBuild segnali gli accessi ai file a qualsiasi file configurato
                      plug-in della cache del progetto.
 
-                     Questo flag √® sperimentale e potrebbe non funzionare come previsto.
+Questo flag √® sperimentale e potrebbe non funzionare come previsto.
     </target>
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
@@ -155,8 +155,8 @@
       </trans-unit>
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
-        <target state="translated">Versione di MSBuild ≈Å{0} per {1}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <target state="translated">Versione di MSBuild {0} per {1}</target>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -583,8 +583,8 @@ Questo flag √® sperimentale e potrebbe non funzionare come previsto.
                        [&lt;classe&gt;,]&lt;assembly&gt;[,&lt;opzioni&gt;][;&lt;parametri&gt;]
                      La sintassi di &lt;classe logger&gt; √® la seguente:
                        [&lt;spazio dei nomi parziale o completo&gt;.]&lt;nome classe logger&gt;
-                     La sintassi di &lt;logger assembly&gt; √® la seguente:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                     La sintassi di &lt;assembly logger&gt; √® la seguente:
+                       {&lt;nome assembly&gt;[,&lt;strong name&gt;] | &lt;file di assembly&gt;}
                      Le opzioni di logger consentono di specificare in che modo MSBuild crea il logger.
                      I &lt;parametri logger&gt; sono facoltativi e vengono passati al
                      logger cos√¨ come vengono digitati. Forma breve: -l.
@@ -865,8 +865,8 @@ Nota: livello di dettaglio dei logger di file
                        [&lt;classe&gt;,]&lt;assembly&gt;[,&lt;opzioni&gt;][;&lt;parametri&gt;]
                      La sintassi di &lt;classe logger&gt; √® la seguente:
                        [&lt;spazio dei nomi parziale o completo&gt;.]&lt;nome classe logger&gt;
-                     La sintassi di &lt;logger assembly&gt; √® la seguente:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                     La sintassi di &lt;assembly logger&gt; √® la seguente:
+                       {&lt;nome assembly&gt;[,&lt;strong name&gt;] | &lt;file di assembly&gt;}
                      Le opzioni di logger consentono di specificare in che modo MSBuild crea il logger.
                      I &lt;parametri logger&gt; sono facoltativi e vengono passati al
                      logger cos√¨ come vengono digitati. Forma breve: -l
@@ -985,8 +985,9 @@ Nota: livello di dettaglio dei logger di file
                      √® la directory corrente. Per impostazione predefinita, ai
                      file viene assegnato il nome "MSBuild&lt;idnodo&gt;.log". Il
                      percorso dei file e altri parametri di fileLogger possono
-                     essere specificati aggiungendo l'opzione "-fileLoggerParameters".
+                     essere specificati aggiungendo l'opzione
 
+                     "-fileLoggerParameters".
                      Se il nome di un file di log viene impostato con l'opzione
                      fileLoggerParameters, il logger distribuito user√† il nome
                      file come modello e aggiunger√† l'ID del nodo per creare un
@@ -1331,6 +1332,15 @@ Nota: livello di dettaglio dei logger di file
         <target state="translated">I log e le informazioni di debug di MSBuild sono contenuti in "{0}"</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: √à necessario fornire un nome funzionalit√† per il passaggio a disponibilit√† funzionalit√†.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: √® necessario specificare un nome elemento per l'opzione getItem.</target>
@@ -1347,6 +1357,15 @@ Nota: livello di dettaglio dei logger di file
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: √® necessario fornire un file per il passaggio getResultOutputFile.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1470,11 +1489,12 @@ Nota: livello di dettaglio dei logger di file
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">Non √® stato possibile creare il logger specificato, che quindi non verr√† usato. {0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">Non √® stato possibile creare il logger specificato "{0}", che quindi non verr√† usato. {1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1650,6 +1670,35 @@ Nota: livello di dettaglio dei logger di file
         <target state="translated">Il logger del terminale non √® stato usato perch√© l'output viene reindirizzato a un file.</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} test {2} {3}</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} test {2} {3} {4}</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">Esecuzione dei test {0}. Totale: {1} non superati: {2} superati: {3} ignorati: {4}, durata: {5}s</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: questa opzione non accetta parametri.</target>
@@ -2033,15 +2082,16 @@ Esegue la profilatura della valutazione di MSBuild e scrive
                        -restoreProperty:IsRestore=true;MyProperty=value
     </source>
         <target state="translated">  -restoreProperty:&lt;n&gt;=&lt;v&gt;
-                     Imposta queste propriet√† a livello di progetto o ne esegue
-                     l'override solo durante il ripristino e non usa le
-                     propriet√† specificate con l'argomento -property.
-                     &lt;v&gt; rappresenta il nome della propriet√† e &lt;v&gt; il
-                     valore della propriet√†. Usare il punto e virgola o la
-                     virgola per delimitare pi√π propriet√† o specificare ogni propriet√† separatamente.
-                     (Forma breve: -rp)
-                     Esempio:
-                       -restoreProperty:IsRestore=true;MyProperty=value
+                      Imposta queste propriet√† a livello di progetto o ne esegue
+                      l'override solo durante il ripristino e non usa le
+                      propriet√† specificate con l'argomento -property.
+                      &lt;v&gt; rappresenta il nome della propriet√† e &lt;v&gt; il
+                      valore della propriet√†. Usare il punto e virgola o la
+                      virgola per delimitare pi√π propriet√† o specificare ogni
+                      propriet√† separatamente.
+                      Forma breve: -rp.
+                      Esempio:
+                        -restoreProperty:IsRestore=true;MyProperty=value
     </target>
         <note>
       LOCALIZATION: "-restoreProperty" and "-rp" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.ja.xlf b/src/MSBuild/Resources/xlf/Strings.ja.xlf
index 533e64a7478..46b9f0da3e6 100644
--- a/src/MSBuild/Resources/xlf/Strings.ja.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ja.xlf
@@ -114,7 +114,7 @@
     </source>
         <target state="translated">  -reportFileAccesses[:True|False]
                      MSBuild „Åå„ÄÅÊßãÊàê„Åï„Çå„Å¶„ÅÑ„Çã„Éó„É≠„Ç∏„Çß„ÇØ„Éà „Ç≠„É£„ÉÉ„Ç∑„É• „Éó„É©„Ç∞„Ç§„É≥„Å∏„ÅÆ
-                     „Éï„Ç°„Ç§„É´ „Ç¢„ÇØ„Çª„Çπ„ÇíÂ†±Âëä„Åô„Çã„Çà„ÅÜ„Å´„Åó„Åæ„Åô„ÄÇ
+                     „Éï„Ç°„Ç§„É´ „Ç¢„ÇØ„Çª„Çπ„ÇíÂ†±Âëä„Åó„Åæ„Åô„ÄÇ
 
                      „Åì„ÅÆ„Éï„É©„Ç∞„ÅØÂÆüÈ®ìÁöÑ„Å™„ÇÇ„ÅÆ„Åß„ÅÇ„Çä„ÄÅÊÑèÂõ≥„Åó„Åü„Å®„Åä„Çä„Å´Âãï‰Ωú„Åó„Å™„ÅÑÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ
     </target>
@@ -135,7 +135,7 @@
       </trans-unit>
       <trans-unit id="InvalidTerminalLoggerValue">
         <source>MSBUILD : error MSB1065: Terminal logger value is not valid. It should be one of 'auto', 'true', or 'false'. {0}</source>
-        <target state="translated">MSBUILD : error MSB1065: „Çø„Éº„Éü„Éä„É´ „É≠„Ç¨„Éº„ÅÆÂÄ§„ÅåÁÑ°Âäπ„Åß„Åô„ÄÇ'auto'„ÄÅ'true'„ÄÅ„Åæ„Åü„ÅØ 'false' „ÅÆ„ÅÑ„Åö„Çå„Åã„Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ{0}</target>
+        <target state="translated">MSBUILD : error MSB1065: „Çø„Éº„Éü„Éä„É´ „É≠„Ç¨„Éº„ÅÆÂÄ§„ÅåÁÑ°Âäπ„Åß„Åô„ÄÇ'auto'„ÄÅ'true'„ÄÅ„Åæ„Åü„ÅØ 'false' „ÅÆ„ÅÑ„Åö„Çå„Åã„Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ {0}</target>
         <note>
       {StrBegin="MSBUILD : error MSB1065: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
@@ -156,7 +156,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">MSBuild „ÅÆ„Éê„Éº„Ç∏„Éß„É≥ {0} ({1})</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -1321,6 +1321,15 @@
         <target state="translated">MSBuild „ÅÆ„É≠„Ç∞„Å®„Éá„Éê„ÉÉ„Ç∞ÊÉÖÂ†±„ÅØ„ÄÅ"{0}" „Å´„ÅÇ„Çä„Åæ„Åô„ÄÇ</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: featureavailability „Çπ„Ç§„ÉÉ„ÉÅ„ÅÆÊ©üËÉΩÂêç„ÇíÊåáÂÆö„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: getItem „Çπ„Ç§„ÉÉ„ÉÅ„Å´È†ÖÁõÆÂêç„ÇíÊåáÂÆö„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ</target>
@@ -1337,6 +1346,15 @@
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: getResultOutputFile „Çπ„Ç§„ÉÉ„ÉÅ„ÅÆ„Éï„Ç°„Ç§„É´„ÇíÊåáÂÆö„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1460,11 +1478,12 @@
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">ÊåáÂÆö„Åï„Çå„Åü„É≠„Ç¨„Éº„Çí‰ΩúÊàê„Åß„Åç„Å™„Åã„Å£„Åü„Åü„ÇÅ„ÄÅ‰ΩøÁî®„Åï„Çå„Åæ„Åõ„Çì„ÄÇ{0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">ÊåáÂÆö„Åï„Çå„Åü„É≠„Ç¨„Éº "{0}" „ÅØ‰ΩúÊàê„Åß„Åç„Å™„Åã„Å£„Åü„Åü„ÇÅ„ÄÅ‰ΩøÁî®„Åï„Çå„Åæ„Åõ„Çì„ÄÇ{1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1640,6 +1659,35 @@
         <target state="translated">Âá∫Âäõ„Åå„Éï„Ç°„Ç§„É´„Å´„É™„ÉÄ„Ç§„É¨„ÇØ„Éà„Åï„Çå„Å¶„ÅÑ„Çã„Åü„ÇÅ„ÄÅ„Çø„Éº„Éü„Éä„É´ „É≠„Ç¨„Éº„ÅØ‰ΩøÁî®„Åï„Çå„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} „ÉÜ„Çπ„Éà {2} ({3} Áßí)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} „ÉÜ„Çπ„Éà {2} {3} ({4} Áßí)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">{0}„ÄÄ„Çí„ÉÜ„Çπ„ÉàÂÆüË°å„Åó„Åæ„Åô„ÄÇÂêàË®à: {1} ‰∏çÂêàÊ†º: {2} ÂêàÊ†º: {3} „Çπ„Ç≠„ÉÉ„Éó: {4}„ÄÅÊúüÈñì: {5} Áßí</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: „Åì„ÅÆ„Çπ„Ç§„ÉÉ„ÉÅ„Å´„ÅØ„Éë„É©„É°„Éº„Çø„Éº„ÇíÊåáÂÆö„Åß„Åç„Åæ„Åõ„Çì„ÄÇ</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.ko.xlf b/src/MSBuild/Resources/xlf/Strings.ko.xlf
index 37618cdb38b..82a417fba6d 100644
--- a/src/MSBuild/Resources/xlf/Strings.ko.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ko.xlf
@@ -156,7 +156,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">msbuild Î≤ÑÏ†Ñ {0}({1}Ïö©)</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -573,11 +573,11 @@
         <target state="translated">  -logger:&lt;Î°úÍ±∞&gt;   Ïù¥ Î°úÍ±∞Î•º ÏÇ¨Ïö©ÌïòÏó¨ MSBuildÏùò Ïù¥Î≤§Ìä∏Î•º Í∏∞Î°ùÌï©ÎãàÎã§. Ïó¨Îü¨
                      Î°úÍ±∞Î•º ÏßÄÏ†ïÌïòÎ†§Î©¥ Í∞Å Î°úÍ±∞Î•º Í∞úÎ≥ÑÏ†ÅÏúºÎ°ú ÏßÄÏ†ïÌï©ÎãàÎã§.
                      &lt;Î°úÍ±∞&gt; Íµ¨Î¨∏ÏùÄ Îã§ÏùåÍ≥º Í∞ôÏäµÎãàÎã§.
-                       [&lt;ÌÅ¥ÎûòÏä§&gt;,]&lt;assembly&gt;[,&lt;ÏòµÏÖò&gt;][;&lt;Îß§Í∞ú Î≥ÄÏàò&gt;]
+                       [&lt;ÌÅ¥ÎûòÏä§&gt;,]&lt;Ïñ¥ÏÖàÎ∏îÎ¶¨&gt;[,&lt;ÏòµÏÖò&gt;][;&lt;Îß§Í∞ú Î≥ÄÏàò&gt;]
                      &lt;Î°úÍ±∞ ÌÅ¥ÎûòÏä§&gt; Íµ¨Î¨∏ÏùÄ Îã§ÏùåÍ≥º Í∞ôÏäµÎãàÎã§.
                        [&lt;Î∂ÄÎ∂Ñ ÎòêÎäî Ï†ÑÏ≤¥ ÎÑ§ÏûÑÏä§ÌéòÏù¥Ïä§&gt;.]&lt;Î°úÍ±∞ ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ&gt;
                      &lt;Î°úÍ±∞ Ïñ¥ÏÖàÎ∏îÎ¶¨&gt; Íµ¨Î¨∏ÏùÄ Îã§ÏùåÍ≥º Í∞ôÏäµÎãàÎã§.
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;Ïñ¥ÏÖàÎ∏îÎ¶¨ Ïù¥Î¶Ñ&gt;[,&lt;strong name&gt;] | &lt;Ïñ¥ÏÖàÎ∏îÎ¶¨ ÌååÏùº&gt;}
                      Î°úÍ±∞ ÏòµÏÖòÏùÄ MSBuildÍ∞Ä Î°úÍ±∞Î•º ÎßåÎìúÎäî Î∞©Î≤ïÏùÑ ÏßÄÏ†ïÌï©ÎãàÎã§.
                      &lt;Î°úÍ±∞ Îß§Í∞ú Î≥ÄÏàò&gt;Îäî ÏÑ†ÌÉù ÏÇ¨Ìï≠Ïù¥Í≥† ÏûÖÎ†•Ìïú ÎåÄÎ°ú Ï†ïÌôïÌûà
                      Î°úÍ±∞Ïóê Ï†ÑÎã¨Îê©ÎãàÎã§. (ÏïΩÏãù: -l)
@@ -855,11 +855,11 @@
                      Î°úÍ±∞Î•º ÏßÄÏ†ïÌïòÎ†§Î©¥ Í∞Å Î°úÍ±∞Î•º Í∞úÎ≥ÑÏ†ÅÏúºÎ°ú ÏßÄÏ†ïÌï©ÎãàÎã§.
                      (ÏïΩÏãù -dl)
                      &lt;Î°úÍ±∞&gt; Íµ¨Î¨∏ÏùÄ Îã§ÏùåÍ≥º Í∞ôÏäµÎãàÎã§.
-                       [&lt;ÌÅ¥ÎûòÏä§&gt;,]&lt;assembly&gt;[,&lt;ÏòµÏÖò&gt;][;&lt;Îß§Í∞ú Î≥ÄÏàò&gt;]
+                       [&lt;ÌÅ¥ÎûòÏä§&gt;,]&lt;Ïñ¥ÏÖàÎ∏îÎ¶¨&gt;[,&lt;ÏòµÏÖò&gt;][;&lt;Îß§Í∞ú Î≥ÄÏàò&gt;]
                      &lt;Î°úÍ±∞ ÌÅ¥ÎûòÏä§&gt; Íµ¨Î¨∏ÏùÄ Îã§ÏùåÍ≥º Í∞ôÏäµÎãàÎã§.
                        [&lt;Î∂ÄÎ∂Ñ ÎòêÎäî Ï†ÑÏ≤¥ ÎÑ§ÏûÑÏä§ÌéòÏù¥Ïä§&gt;.]&lt;Î°úÍ±∞ ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ&gt;
                      &lt;Î°úÍ±∞ Ïñ¥ÏÖàÎ∏îÎ¶¨&gt; Íµ¨Î¨∏ÏùÄ Îã§ÏùåÍ≥º Í∞ôÏäµÎãàÎã§.
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;Ïñ¥ÏÖàÎ∏îÎ¶¨ Ïù¥Î¶Ñ&gt;[,&lt;strong name&gt;] | &lt;Ïñ¥ÏÖàÎ∏îÎ¶¨ ÌååÏùº&gt;}
                      Î°úÍ±∞ ÏòµÏÖòÏùÄ MSBuildÍ∞Ä Î°úÍ±∞Î•º ÎßåÎìúÎäî Î∞©Î≤ïÏùÑ ÏßÄÏ†ïÌï©ÎãàÎã§.
                       &lt;Î°úÍ±∞ Îß§Í∞ú Î≥ÄÏàò&gt;Îäî ÏÑ†ÌÉù ÏÇ¨Ìï≠Ïù¥Í≥†
                      ÏûÖÎ†•Ìïú ÎåÄÎ°ú Ï†ïÌôïÌûà Î°úÍ±∞Ïóê Ï†ÑÎã¨Îê©ÎãàÎã§. (ÏïΩÏãù: -l)
@@ -1321,6 +1321,15 @@
         <target state="translated">MSBuild Î°úÍ∑∏ Î∞è ÎîîÎ≤ÑÍ∑∏ Ï†ïÎ≥¥Îäî "{0}"Ïóê ÏûàÏäµÎãàÎã§.</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: featureavailability Ïä§ÏúÑÏπòÏóê ÎåÄÌïú Í∏∞Îä• Ïù¥Î¶ÑÏùÑ Ï†úÍ≥µÌï¥Ïïº Ìï©ÎãàÎã§.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: getItem Ïä§ÏúÑÏπòÏùò Ìï≠Î™© Ïù¥Î¶ÑÏùÑ Ï†úÍ≥µÌï¥Ïïº Ìï©ÎãàÎã§.</target>
@@ -1337,6 +1346,15 @@
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: getResultOutputFile Ïä§ÏúÑÏπòÏóê ÎåÄÌïú ÌååÏùºÏùÑ Ï†úÍ≥µÌï¥Ïïº Ìï©ÎãàÎã§.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1460,11 +1478,12 @@
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">ÏßÄÏ†ïÎêú Î°úÍ±∞Î•º ÎßåÎì§ Ïàò ÏóÜÏñ¥ ÏßÄÏ†ïÎêú Î°úÍ±∞Í∞Ä ÏÇ¨Ïö©ÎêòÏßÄ ÏïäÏäµÎãàÎã§. {0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">ÏßÄÏ†ïÌïú Î°úÍ±∞ "{0}"ÏùÑ(Î•º) ÎßåÎì§ Ïàò ÏóÜÏúºÎØÄÎ°ú ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏäµÎãàÎã§. {1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1640,6 +1659,35 @@
         <target state="translated">Ï∂úÎ†•Ïù¥ ÌååÏùºÎ°ú Î¶¨ÎîîÎ†âÏÖòÎêòÍ∏∞ ÎïåÎ¨∏Ïóê ÌÑ∞ÎØ∏ÎÑê Î°úÍ±∞Í∞Ä ÏÇ¨Ïö©ÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} ÌÖåÏä§Ìä∏ {2}({3}Ï¥à)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} ÌÖåÏä§Ìä∏ {2} {3}({4}Ï¥à)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">{0} ÌÖåÏä§Ìä∏Î•º Ïã§ÌñâÌï©ÎãàÎã§. Ìï©Í≥Ñ: {1} Ïã§Ìå®: {2} ÌÜµÍ≥º: {3} Í±¥ÎÑàÎúÄ: {4}, Í∏∞Í∞Ñ: {5}Ï¥à</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: Ïù¥ Ïä§ÏúÑÏπòÏóêÎäî Îß§Í∞ú Î≥ÄÏàòÎ•º ÏßÄÏ†ïÌï† Ïàò ÏóÜÏäµÎãàÎã§.</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.pl.xlf b/src/MSBuild/Resources/xlf/Strings.pl.xlf
index f4caceb0acc..9003a73598c 100644
--- a/src/MSBuild/Resources/xlf/Strings.pl.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pl.xlf
@@ -113,10 +113,10 @@
                      This flag is experimental and may not work as intended.
     </source>
         <target state="translated">  -reportFileAccesses[:True|False]
-                     Powoduje, ≈ºe platforma MSBuild zg≈Çasza dostƒôpy do wszystkich skonfigurowanych
+                     Powoduje, ≈ºe program MSBuild zg≈Çasza dostƒôpy do wszystkich skonfigurowanych plik√≥w
                      wtyczek pamiƒôci podrƒôcznej projektu.
 
-                     Ta flaga jest eksperymentalna i mo≈ºe nie dzia≈Çaƒá zgodnie z oczekiwaniami.
+Ta flaga jest eksperymentalna i mo≈ºe nie dzia≈Çaƒá zgodnie z oczekiwaniami.
     </target>
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
@@ -156,7 +156,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">Wersja programu MSBuild {0} dla {1}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -575,14 +575,17 @@
                        -logger:XMLLogger,MyLogger,Version=1.0.2,Culture=neutral
                        -logger:XMLLogger,C:\Loggers\MyLogger.dll;OutputAsHTML
 </source>
-        <target state="translated">  -logger:&lt;rejestrator&gt;  Umo≈ºliwia u≈ºycie podanego rejestratora do rejestrowania zdarze≈Ñ pochodzƒÖcych
-                     z programu MSBuild. Aby okre≈õliƒá wiele rejestrator√≥w, okre≈õl ka≈ºdy z nich osobno.
+        <target state="translated">  -logger:&lt;rejestrator&gt;  Umo≈ºliwia u≈ºycie podanego rejestratora do rejestrowania
+                         zdarze≈Ñ pochodzƒÖcych z programu MSBuild. Aby okre≈õliƒá
+                     wiele rejestrator√≥w, okre≈õl ka≈ºdy z nich osobno.
                      Sk≈Çadnia elementu &lt;rejestrator&gt;:
-                      [&lt;klasa rejestratora&gt;,]&lt;assembly&gt; [;&lt;parametry rejestratora&gt;]
+                        [&lt;klasa rejestratora&gt;,]&lt;zestaw rejestratora&gt;
+                        [;&lt;parametry rejestratora&gt;]
                      Sk≈Çadnia elementu &lt;klasa rejestratora&gt;:
-                       [&lt;czƒô≈õciowa lub pe≈Çna przestrze≈Ñ nazw&gt;.] &lt;nazwa klasy rejestratora&gt;
+                        [&lt;czƒô≈õciowa lub pe≈Çna przestrze≈Ñ nazw&gt;.]
+                        &lt;nazwa klasy rejestratora&gt;
                      Sk≈Çadnia elementu &lt;zestaw rejestratora&gt;:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                        {&lt;nazwa zestawu&gt;[,&lt;strong name&gt;] | &lt;plik zestawu&gt;}
                      Warto≈õci &lt;parametry rejestratora&gt; sƒÖ opcjonalne i sƒÖ
                      przekazywane do rejestratora dok≈Çadnie tak, jak zosta≈Çy
                      wpisane. (Kr√≥tka wersja: -l)
@@ -861,11 +864,11 @@
                      wiele rejestrator√≥w, okre≈õl ka≈ºdy z nich osobno.
                      (Kr√≥tka wersja: -dl)
                      Sk≈Çadnia elementu &lt;rejestrator&gt;:
-                       [&lt;klasa rejestratora&gt;,]&lt;assembly&gt;[;&lt;parametry rejestratora&gt;]
+                       [&lt;klasa rejestratora&gt;,]&lt;zestaw rejestratora&gt;[;&lt;parametry rejestratora&gt;]
                      Sk≈Çadnia elementu &lt;klasa rejestratora&gt;:
                        [&lt;czƒô≈õciowa lub pe≈Çna przestrze≈Ñ nazw&gt;.]&lt;nazwa klasy rejestratora&gt;
                      Sk≈Çadnia elementu &lt;zestaw rejestratora&gt;:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;nazwa zestawu&gt;[,&lt;strong name&gt;] | &lt;plik zestawu&gt;}
                      Warto≈õci &lt;parametry rejestratora&gt; sƒÖ opcjonalne i sƒÖ
                      przekazywane do rejestratora dok≈Çadnie tak, jak zosta≈Çy
                      wpisane. (Kr√≥tka wersja: -l)
@@ -977,11 +980,13 @@
                      create a log file for each node.
     </source>
         <target state="translated">  -distributedFileLogger
-                     Rejestruje dane wyj≈õciowe kompilacji w wielu plikach dziennika,po jednym pliku
-                     na wƒôze≈Ç programu MSBuild. PoczƒÖtkowƒÖ lokalizacjƒÖ tych plik√≥w
-                     jest bie≈ºƒÖcy katalog. Domy≈õlnie pliki majƒÖ nazwƒô
+                     Rejestruje dane wyj≈õciowe kompilacji w wielu plikach
+                     dziennika, po jednym pliku na wƒôze≈Ç programu MSBuild.
+                     PoczƒÖtkowƒÖ lokalizacjƒÖ tych plik√≥w jest bie≈ºƒÖcy katalog.
+                     Domy≈õlnie pliki majƒÖ nazwƒô
                      ‚ÄûMSBuild&lt;identyfikator wƒôz≈Ça&gt;.log‚Äù. Lokalizacjƒô plik√≥w
                      i inne parametry rejestratora plik√≥w mo≈ºna okre≈õliƒá
+
                      przez dodanie prze≈ÇƒÖcznika ‚Äû-fileLoggerParameters‚Äù.
 
                      Je≈õli nazwa pliku zostanie ustawiona za pomocƒÖ prze≈ÇƒÖcznika
@@ -1327,6 +1332,15 @@
         <target state="translated">Dzienniki i informacje debugowania programu MSBuild bƒôdƒÖ znajdowaƒá siƒô w lokalizacji ‚Äû{0}‚Äù</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: Nale≈ºy podaƒá nazwƒô funkcji dla prze≈ÇƒÖcznika dostƒôpno≈õci funkcji.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: Musi podaƒá nazwƒô elementu dla prze≈ÇƒÖcznika getItem.</target>
@@ -1343,6 +1357,15 @@
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: nale≈ºy podaƒá plik prze≈ÇƒÖcznika getResultOutputFile.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1466,11 +1489,12 @@
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">Nie mo≈ºna utworzyƒá okre≈õlonego rejestratora i nie zostanie on u≈ºyty. {0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">Nie mo≈ºna utworzyƒá okre≈õlonego rejestratora ‚Äû{0}‚Äù i nie zostanie on u≈ºyty. {1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1646,6 +1670,35 @@
         <target state="translated">Rejestrator terminali nie zosta≈Ç u≈ºyty, poniewa≈º dane wyj≈õciowe sƒÖ przekierowywane do pliku.</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} test {2} ({3}s)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} test {2} {3} ({4}s)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">Przebieg testu {0}. ≈ÅƒÖcznie: {1} niepowodzenie: {2} zako≈Ñczone powodzeniem: {3} pominiƒôto: {4}, czas trwania: {5}s</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: ten prze≈ÇƒÖcznik nie ma ≈ºadnych parametr√≥w.</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
index f84a9fbf2fa..33bf6b74f9a 100644
--- a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
@@ -113,9 +113,8 @@
                      This flag is experimental and may not work as intended.
     </source>
         <target state="translated">  -reportFileAccesses[:True|False]
-                     Faz com que o MSBuild relate acessos a arquivos a qualquer
- configurado
-                     plug-ins de cache do projeto.
+                     Faz com que o MSBuild relate acessos a arquivos para qualquer plug-in
+                     de cache de projeto configurado.
 
                      Este sinalizador √© experimental e pode n√£o funcionar conforme o esperado.
     </target>
@@ -157,7 +156,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">Vers√£o do MSBuild {0} para {1}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -1323,6 +1322,15 @@ arquivo de resposta.
         <target state="translated">Os logs e as informa√ß√µes de depura√ß√£o do MSBuild estar√£o no "{0}"</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: deve ser fornecido um nome de recurso para a op√ß√£o de disponibilidade de recursos.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: √â preciso fornecer um nome de item para a chave getItem.</target>
@@ -1339,6 +1347,15 @@ arquivo de resposta.
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: deve ser fornecido um arquivo para a op√ß√£o getResultOutputFile.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1462,11 +1479,12 @@ arquivo de resposta.
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">N√£o foi poss√≠vel criar o agente especificado e ele n√£o ser√° usado. {0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">O agente especificado "{0}" n√£o p√¥de ser criado e n√£o ser√° usado. {1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1642,6 +1660,35 @@ arquivo de resposta.
         <target state="translated">O Agente de Terminal n√£o foi usado porque a sa√≠da est√° sendo redirecionada para um arquivo.</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} teste {2} ({3}s)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} teste {2} {3} ({4}s)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">Execu√ß√£o de teste {0}. Total: {1} Falha: {2} Aprovado: {3} Ignorado: {4}, Dura√ß√£o: {5}s</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: Esta op√ß√£o n√£o aceita par√¢metros.</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.ru.xlf b/src/MSBuild/Resources/xlf/Strings.ru.xlf
index b17262420f6..d8b8f0fa611 100644
--- a/src/MSBuild/Resources/xlf/Strings.ru.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ru.xlf
@@ -79,7 +79,7 @@
       </trans-unit>
       <trans-unit id="DurationDisplay">
         <source>({0:F1}s)</source>
-        <target state="translated">({0:F1}—Å)</target>
+        <target state="translated">({0:F1}s)</target>
         <note>
         {0}: duration in seconds with 1 decimal point
       </note>
@@ -135,7 +135,7 @@
       </trans-unit>
       <trans-unit id="InvalidTerminalLoggerValue">
         <source>MSBUILD : error MSB1065: Terminal logger value is not valid. It should be one of 'auto', 'true', or 'false'. {0}</source>
-        <target state="translated">MSBUILD : error MSB1065: –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤–µ–¥–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞. –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π: "auto", "–ò–°–¢–ò–ù–ê" –∏–ª–∏ "–õ–û–ñ–¨". {0}</target>
+        <target state="new">MSBUILD : error MSB1065: Terminal logger value is not valid. It should be one of 'auto', 'true', or 'false'. {0}</target>
         <note>
       {StrBegin="MSBUILD : error MSB1065: "}
       UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
@@ -156,7 +156,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">–í–µ—Ä—Å–∏—è MSBuild {0} –¥–ª—è {1}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -1320,6 +1320,15 @@
         <target state="translated">–ñ—É—Ä–Ω–∞–ª—ã MSBuild –∏ –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å—É "{0}"</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è getItem.</target>
@@ -1336,6 +1345,15 @@
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ñ–∞–π–ª –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ getResultOutputFile.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1459,11 +1477,12 @@
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">–£–∫–∞–∑–∞–Ω–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –≤–µ–¥–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–æ –∏ –Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è. {0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">–£–∫–∞–∑–∞–Ω–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –≤–µ–¥–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ "{0}" –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∏ –Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è. {1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1639,6 +1658,35 @@
         <target state="translated">–°—Ä–µ–¥—Å—Ç–≤–æ –≤–µ–¥–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ —Ñ–∞–π–ª.</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} (—Ç–µ—Å—Ç) {2} ({3}¬†—Å)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} (—Ç–µ—Å—Ç) {2} {3} ({4}¬†—Å)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ {0}. –í—Å–µ–≥–æ: {1}, –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ: {2}, –ø—Ä–æ–π–¥–µ–Ω–æ: {3}, –ø—Ä–æ–ø—É—â–µ–Ω–æ: {4}, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {5}¬†—Å</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: —É —ç—Ç–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.tr.xlf b/src/MSBuild/Resources/xlf/Strings.tr.xlf
index aba51dfc9b3..2807c54531f 100644
--- a/src/MSBuild/Resources/xlf/Strings.tr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.tr.xlf
@@ -79,7 +79,7 @@
       </trans-unit>
       <trans-unit id="DurationDisplay">
         <source>({0:F1}s)</source>
-        <target state="translated">({0:F1} sn)</target>
+        <target state="translated">({0:F1}s)</target>
         <note>
         {0}: duration in seconds with 1 decimal point
       </note>
@@ -156,7 +156,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">{1} i√ßin MSBuild s√ºr√ºm {0}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -573,13 +573,13 @@
         <target state="translated">  -logger:&lt;g√ºnl√ºk√ß√º&gt;   MSBuild'deki olaylarƒ± g√ºnl√ºƒüe almak i√ßin bu g√ºnl√ºk√ß√ºy√º kullanƒ±n. Birden fazla
                      g√ºnl√ºk√ß√º belirtmek i√ßin her g√ºnl√ºk√ß√ºy√º ayrƒ± ayrƒ± belirtin.
                      &lt;g√ºnl√ºk√ß√º&gt; s√∂z dizimi ≈ü√∂yledir:
-                       [&lt;class&gt;,]&lt;assembly&gt;[,&lt;options&gt;][;&lt;parameters&gt;]
+                       [&lt;sƒ±nƒ±f&gt;,]&lt;derleme&gt;[,&lt;se√ßenekler&gt;][;&lt;parametreler&gt;]
                      &lt;g√ºnl√ºk√ß√º sƒ±nƒ±fƒ± &gt; s√∂z dizimi ≈ü√∂yledir:
                        [&lt;kƒ±smi veya tam ad alanƒ± &gt;.]&lt;g√ºnl√ºk√ß√º sƒ±nƒ±fƒ± adƒ±&gt;
                      &lt;g√ºnl√ºk√ß√º derlemesi&gt; s√∂z dizimi ≈ü√∂yledir:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;derleme adƒ±&gt;[,&lt;strong name&gt;] | &lt;derleme dosyasƒ±&gt;}
                      G√ºnl√ºk√ß√º se√ßenekleri, MSBuild'in g√ºnl√ºk√ß√ºy√º olu≈üturma bi√ßimini belirtir.
-                     &lt;g√ºnl√ºk√ß√º parametreleri &gt; isteƒüe baƒülƒ±dƒ±r ve tam olarak
+                     &lt;g√ºnl√ºk√ß√º parametreleri &gt; isteƒüe baƒülƒ±dƒ±r ve tam olarak 
                      yazdƒ±ƒüƒ±nƒ±z ≈üekliyle g√ºnl√ºk√ß√ºye ge√ßirilir. (Kƒ±sa bi√ßim: -l)
                      √ñrnekler:
                        -logger:XMLLogger,MyLogger,Version=1.0.2,Culture=neutral
@@ -855,11 +855,11 @@
                      g√ºnl√ºk√ß√º belirtmek i√ßin her g√ºnl√ºk√ß√ºy√º ayrƒ± ayrƒ± belirtin.
                      (Kƒ±sa bi√ßim -dl)
                      &lt;g√ºnl√ºk√ß√º&gt; s√∂z dizimi ≈ü√∂yledir:
-                       [&lt;sƒ±nƒ±f&gt;,]&lt;assembly&gt;[,&lt;se√ßenekler&gt;][;&lt;parametreler&gt;]
+                       [&lt;sƒ±nƒ±f&gt;,]&lt;derleme&gt;[,&lt;se√ßenekler&gt;][;&lt;parametreler&gt;]
                      &lt;g√ºnl√ºk√ß√º sƒ±nƒ±fƒ±&gt; s√∂z dizimi ≈ü√∂yledir:
                        [&lt;kƒ±smi veya tam ad alanƒ±&gt;.]&lt;g√ºnl√ºk√ß√º sƒ±nƒ±fƒ± adƒ±&gt;
                      &lt;g√ºnl√ºk√ß√º derlemesi&gt; s√∂z dizimi ≈ü√∂yledir:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;derleme adƒ±&gt;[,&lt;strong name&gt;] | &lt;derleme dosyasƒ±&gt;}
                      G√ºnl√ºk√ß√º se√ßenekleri, MSBuild'in g√ºnl√ºk√ß√ºy√º olu≈üturma bi√ßimini belirtir.
                      &lt;g√ºnl√ºk√ß√º parametreleri&gt; isteƒüe baƒülƒ±dƒ±r ve tam olarak
                      yazdƒ±ƒüƒ±nƒ±z ≈üekliyle g√ºnl√ºk√ß√ºye ge√ßirilir. (Kƒ±sa bi√ßim: -l)
@@ -886,9 +886,10 @@
                        -ignoreProjectExtensions:.sln
     </source>
         <target state="translated">  -ignoreProjectExtensions:&lt;uzantƒ±lar&gt;
-                     Hangi proje dosyasƒ±nƒ±n olu≈üturulacaƒüƒ± belirlenirken
-                     yoksayƒ±lacak uzantƒ±larƒ±n listesi. Birden √ßok uzantƒ±yƒ±
-                     birbirinden ayƒ±rmak i√ßin noktalƒ± virg√ºl veya virg√ºl kullanƒ±n.
+                     Hangi proje dosyasƒ±nƒ±n olu≈üturulacaƒüƒ± belirlenirken 
+                     yoksayƒ±lacak uzantƒ±larƒ±n listesi. Birden √ßok uzantƒ±yƒ± 
+                     birbirinden ayƒ±rmak i√ßin noktalƒ± virg√ºl veya 
+                     virg√ºl kullanƒ±n.
                      (Kƒ±sa bi√ßim: -ignore)
                      √ñrnek:
                        -ignoreProjectExtensions:.sln
@@ -978,6 +979,7 @@
                      Dosyalarƒ±n konumu ve fileLogger'ƒ±n diƒüer parametreleri 
                      "/fileLoggerParameters" anahtarƒ±nƒ±n eklenmesi yoluyla
                      belirtilebilir.
+
                      G√ºnl√ºk dosyasƒ± adƒ± fileLoggerParameters anahtarƒ±
                      aracƒ±lƒ±ƒüƒ±yla ayarlanƒ±rsa daƒüƒ±tƒ±lmƒ±≈ü g√ºnl√ºk√ß√º fileName 
                      deƒüerini ≈üablon olarak kullanƒ±p her d√ºƒü√ºm√ºn g√ºnl√ºk dosyasƒ±nƒ±
@@ -1024,31 +1026,32 @@
     </source>
         <target state="translated">  -fileLoggerParameters[n]:&lt;parametreler&gt;
                      Dosya g√ºnl√ºk√ß√ºleri i√ßin ek parametreler saƒülar.
-                     Bu anahtarƒ±n olmasƒ± kar≈üƒ±lƒ±k gelen -fileLogger[n]
+                     Bu anahtarƒ±n olmasƒ± kar≈üƒ±lƒ±k gelen -fileLogger[n] 
                      anahtarƒ±nƒ±n olduƒüu anlamƒ±na gelir.
                      "n" varsa, 1-9 arasƒ±nda bir rakam olabilir.
-                     Daƒüƒ±tƒ±lmƒ±≈ü dosya g√ºnl√ºk√ß√ºleri varsa -fileLoggerParameters
-                     bunlar tarafƒ±ndan da kullanƒ±lƒ±r; -distributedFileLogger a√ßƒ±klamasƒ±na bakƒ±n.
+                     Daƒüƒ±tƒ±lmƒ±≈ü dosya g√ºnl√ºk√ß√ºleri varsa -fileLoggerParameters 
+                     bunlar tarafƒ±ndan da kullanƒ±lƒ±r; -distributedFileLogger 
+                     a√ßƒ±klamasƒ±na bakƒ±n.
                      (Kƒ±sa bi√ßim: -flp[n])
-                     Konsol g√ºnl√ºk√ß√ºs√º i√ßin listelenenlerle aynƒ± parametreler
+                     Konsol g√ºnl√ºk√ß√ºs√º i√ßin listelenenlerle aynƒ± parametreler 
                      kullanƒ±labilir. Kullanƒ±labilecek bazƒ± ek parametreler:
-                        LogFile--Olu≈üturma g√ºnl√ºƒü√ºn√ºn yazƒ±lacaƒüƒ± g√ºnl√ºk
+                        LogFile--Olu≈üturma g√ºnl√ºƒü√ºn√ºn yazƒ±lacaƒüƒ± g√ºnl√ºk 
                             dosyasƒ±nƒ±n yolu.
-                        Append--Derleme g√ºnl√ºƒü√ºn√ºn g√ºn dosyasƒ±nƒ±n sonuna mƒ±
-                            ekleneceƒüini yoksa √ºzerine mi yazƒ±lacaƒüƒ±nƒ±
-                            belirler. Anahtar ayarlandƒ±ƒüƒ±nda olu≈üturma g√ºnl√ºƒü√º
-                            dosyanƒ±n sonuna eklenir. Anahtar ayarlanmadƒ±ƒüƒ±nda
-                            varolan g√ºnl√ºk dosyasƒ±nƒ±n √ºzerine yazƒ±lƒ±r.
+                        Append--Derleme g√ºnl√ºƒü√ºn√ºn g√ºn dosyasƒ±nƒ±n sonuna mƒ± 
+                            ekleneceƒüini yoksa √ºzerine mi yazƒ±lacaƒüƒ±nƒ± 
+                            belirler. Anahtar ayarlandƒ±ƒüƒ±nda olu≈üturma g√ºnl√ºƒü√º 
+                            dosyanƒ±n sonuna eklenir. Anahtar ayarlanmadƒ±ƒüƒ±nda 
+                            varolan g√ºnl√ºk dosyasƒ±nƒ±n √ºzerine yazƒ±lƒ±r. 
                             Varsayƒ±lan: g√ºnl√ºk dosyasƒ±nƒ±n sonuna eklenmez.
-                        Encoding--Dosyanƒ±n kodlamasƒ±nƒ± belirtir; √∂rneƒüin,
+                        Encoding--Dosyanƒ±n kodlamasƒ±nƒ± belirtir; √∂rneƒüin, 
                             UTF-8, Unicode veya ASCII
                      Varsayƒ±lan ayrƒ±ntƒ± d√ºzeyi ayarƒ± Detailed'dƒ±r.
                      √ñrnekler:
                        -fileLoggerParameters:LogFile=MyLog.log;Append;
                                            Verbosity=diagnostic;Encoding=UTF-8
 
-                       -flp:Summary;Verbosity=minimal;LogFile=msbuild.sum
-                       -flp1:warningsonly;logfile=msbuild.wrn
+                       -flp:Summary;Verbosity=minimal;LogFile=msbuild.sum 
+                       -flp1:warningsonly;logfile=msbuild.wrn 
                        -flp2:errorsonly;logfile=msbuild.err
     </target>
         <note>
@@ -1072,7 +1075,8 @@
                        -nr:true
     </source>
         <target state="translated">  -nodeReuse:&lt;parametreler&gt;
-                     MSBuild d√ºƒü√ºmlerinin yeniden kullanƒ±mƒ±nƒ± etkinle≈ütirir veya devre dƒ±≈üƒ± bƒ±rakƒ±r.
+                     MSBuild d√ºƒü√ºmlerinin yeniden kullanƒ±mƒ±nƒ± etkinle≈ütirir
+                     veya devre dƒ±≈üƒ± bƒ±rakƒ±r.
                      Parametreler:
                      True --Derleme tamamlandƒ±ktan sonra d√ºƒü√ºmler kalƒ±r ve
                             izleyen derlemelerde yeniden kullanƒ±lƒ±r (varsayƒ±lan)
@@ -1321,6 +1325,15 @@
         <target state="translated">MSBuild g√ºnl√ºkleri ve hata ayƒ±klama bilgileri "{0}" yolunda olacak</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: √ñzellik kullanƒ±labilirlik anahtarƒ± i√ßin bir √∂zellik adƒ± belirtilmesi gerekli.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: getItem anahtarƒ± i√ßin bir √∂ƒüe adƒ± saƒülanmasƒ± gerekiyor.</target>
@@ -1337,6 +1350,15 @@
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: getResultOutputFile anahtarƒ± i√ßin bir dosya saƒülanmalƒ±dƒ±r.</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1403,7 +1425,7 @@
       </trans-unit>
       <trans-unit id="MissingTerminalLoggerParameterError">
         <source>MSBUILD : error MSB1066: Specify one or more parameters for the terminal logger if using the -terminalLoggerParameters switch</source>
-        <target state="translated">MSBUILD : error MSB1066: terminalLoggerParameters anahtarƒ± kullanƒ±lƒ±yorsa terminal g√ºnl√ºk√ß√ºs√º i√ßin bir veya birden √ßok parametre belirtin</target>
+        <target state="translated">MSBUILD : error MSB1066: -terminalLoggerParameters anahtarƒ± kullanƒ±lƒ±yorsa terminal g√ºnl√ºk√ß√ºs√º i√ßin bir veya birden √ßok parametre belirtin</target>
         <note>
       {StrBegin="MSBUILD : error MSB1066: "}
       UE: This happens if the user does something like "msbuild.exe -termionalLoggerParameters:". The user must pass in one or more parameters
@@ -1460,11 +1482,12 @@
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">Belirtilen g√ºnl√ºk√ß√º olu≈üturulamadƒ±ƒüƒ±ndan kullanƒ±lamƒ±yor. {0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">Belirtilen "{0}" g√ºnl√ºk√ß√ºs√º olu≈üturulamadƒ± ve kullanƒ±lmayacak. {1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1640,6 +1663,35 @@
         <target state="translated">√áƒ±kƒ±≈ü bir dosyaya yeniden y√∂nlendirildiƒüi i√ßin Terminal G√ºnl√ºk√ß√ºs√º kullanƒ±lmadƒ±.</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} testi {2} ({3}s)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} testi {2} {3} ({4}s)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">Test √ßalƒ±≈ütƒ±rmasƒ± {0}. Toplam: {1} Ba≈üarƒ±sƒ±z: {2} Ge√ßti: {3} Atlandƒ±: {4}, S√ºre: {5}s</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: Bu anahtar parametreyle kullanƒ±lmaz.</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
index cf665bb868f..45805acdc6e 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
@@ -17,7 +17,7 @@
       </trans-unit>
       <trans-unit id="BuildFinished">
         <source>Build {0} in {1}s</source>
-        <target state="translated">Âú® {1} ‰∏≠ÁîüÊàê {0}</target>
+        <target state="translated">Âú® {1} ÁßíÂÜÖÁîüÊàê {0}</target>
         <note>
       Overall build summary
       {0}: BuildResult_X (below)
@@ -156,7 +156,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">ÈÄÇÁî®‰∫é {1} MSBuild ÁâàÊú¨ {0}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -1321,6 +1321,15 @@
         <target state="translated">MSBuild Êó•ÂøóÂíåË∞ÉËØï‰ø°ÊÅØÂ∞Ü‰Ωç‰∫é"{0}"</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: ÂøÖÈ°ª‰∏∫ÂäüËÉΩÂèØÁî®ÊÄßÂºÄÂÖ≥Êèê‰æõÂäüËÉΩÂêçÁß∞„ÄÇ</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: ÂøÖÈ°ª‰∏∫ getItem ÂºÄÂÖ≥Êèê‰æõÈ°πÂêçÁß∞„ÄÇ</target>
@@ -1337,6 +1346,15 @@
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: ÂøÖÈ°ª‰∏∫ getResultOutputFile ÂºÄÂÖ≥Êèê‰æõÊñá‰ª∂„ÄÇ</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1460,11 +1478,12 @@
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">Êó†Ê≥ïÂàõÂª∫ÊåáÂÆöÁöÑËÆ∞ÂΩïÂô®ÔºåÂ∞Ü‰∏ç‰ºö‰ΩøÁî®ÂÆÉ„ÄÇ{0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">Êó†Ê≥ïÂàõÂª∫ÊåáÂÆöÁöÑËÆ∞ÂΩïÂô®‚Äú{0}‚ÄùÔºåÂõ†Ê≠§Â∞Ü‰∏ç‰ºö‰ΩøÁî®ÂÆÉ„ÄÇ{1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1562,14 +1581,14 @@
       </trans-unit>
       <trans-unit id="RestoreComplete">
         <source>Restore complete ({0}s)</source>
-        <target state="translated">ËøòÂéüÂÆåÊàê({0})</target>
+        <target state="translated">ËøòÂéüÂÆåÊàê({0} Áßí)</target>
         <note>
       {0}: duration in seconds with 1 decimal point
     </note>
       </trans-unit>
       <trans-unit id="RestoreCompleteWithMessage">
         <source>Restore {0} in {1}s</source>
-        <target state="translated">Âú® {1} ‰∏≠ËøòÂéü {0}</target>
+        <target state="translated">Âú® {1} ÁßíÂÜÖËøòÂéü {0}</target>
         <note>
       Restore summary when finished with warning or error
       {0}: BuildResult_X (below)
@@ -1640,6 +1659,35 @@
         <target state="translated">Êú™‰ΩøÁî®ÁªàÁ´ØËÆ∞ÂΩïÂô®ÔºåÂõ†‰∏∫Ê≠£Âú®Â∞ÜËæìÂá∫ÈáçÂÆöÂêëÂà∞Êñá‰ª∂„ÄÇ</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} ÊµãËØï {2} ({3} Áßí)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} ÊµãËØï {2} {3} ({4} Áßí)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">ÊµãËØïËøêË°å {0}„ÄÇÊÄªËÆ°: {1} Â§±Ë¥•: {2} ÈÄöËøá: {3} Ë∑≥Ëøá: {4}, ÊåÅÁª≠Êó∂Èó¥: {5} Áßí</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: Ê≠§ÂºÄÂÖ≥‰∏çÈááÁî®‰ªª‰ΩïÂèÇÊï∞„ÄÇ</target>
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
index 2a4877909af..9d97b6ccfd6 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
@@ -156,7 +156,7 @@
       <trans-unit id="MSBuildVersionMessage">
         <source>MSBuild version {0} for {1}</source>
         <target state="translated">{1} ÁöÑ MSBuild ÁâàÊú¨ {0}</target>
-        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework", ".NET Core", or "Mono"</note>
+        <note>LOCALIZATION: {0} contains the DLL version number. {1} contains the name of a runtime, like ".NET Framework" or ".NET Core"</note>
       </trans-unit>
       <trans-unit id="CurrentDirectory">
         <source>Current directory = "{0}"</source>
@@ -573,11 +573,11 @@
         <target state="translated">  -logger:&lt;Ë®òÈåÑÂô®&gt;   ‰ΩøÁî®Ê≠§Ë®òÈåÑÂô®ÂèØË®òÈåÑ MSBuild ÁöÑ‰∫ã‰ª∂„ÄÇ
                      Ëã•Ë¶ÅÊåáÂÆöÂ§öÂÄãË®òÈåÑÂô®ÔºåË´ãÂêÑÂà•ÊåáÂÆöÊØèÂÄãË®òÈåÑÂô®„ÄÇ
                      &lt;Ë®òÈåÑÂô®&gt; Ë™ûÊ≥ïÁÇ∫:
-                       [&lt;class&gt;,]&lt;assembly&gt;[,&lt;options&gt;][;&lt;parameters&gt;]
+                       [&lt;È°ûÂà•&gt;,]&lt;ÁµÑ‰ª∂&gt;[,&lt;ÈÅ∏È†Ö&gt;][;&lt;ÂèÉÊï∏&gt;]
                      &lt;Ë®òÈåÑÂô®È°ûÂà•&gt; Ë™ûÊ≥ïÁÇ∫:
                        [&lt;‰∏ÄÈÉ®ÂàÜÊàñÂÆåÊï¥ÁöÑÂëΩÂêçÁ©∫Èñì&gt;.]&lt;Ë®òÈåÑÂô®È°ûÂà•ÂêçÁ®±&gt;
                      &lt;Ë®òÈåÑÂô®ÁµÑ‰ª∂&gt; Ë™ûÊ≥ïÁÇ∫:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;ÁµÑ‰ª∂ÂêçÁ®±&gt;[,&lt;strong name&gt;] | &lt;ÁµÑ‰ª∂Ê™îÊ°à&gt;}
                      Ë®òÈåÑÂô®ÈÅ∏È†ÖÊúÉÊåáÂÆö MSBuild Âª∫Á´ãË®òÈåÑÂô®ÁöÑÊñπÂºè„ÄÇ
                      &lt;Ë®òÈåÑÂô®ÂèÉÊï∏&gt; ÊòØÈÅ∏ÊìáÊÄßÂèÉÊï∏ÔºåÂÖ∂ÊúÉ‰æùÊÇ®Ëº∏ÂÖ•ÁöÑÂÖßÂÆπÔºå
                      ÂÆåÂÖ®‰∏ÄÊ®£Âú∞ÂÇ≥ÈÅûÂà∞Ë®òÈåÑÂô®„ÄÇ(Á∞°Áü≠ÂΩ¢Âºè: -l)
@@ -855,11 +855,11 @@
                      Ëã•Ë¶ÅÊåáÂÆöÂ§öÂÄãË®òÈåÑÂô®ÔºåË´ãÂêÑÂà•ÊåáÂÆöÊØèÂÄãË®òÈåÑÂô®„ÄÇ
                      (Á∞°Áü≠ÂΩ¢Âºè -dl)
                      &lt;Ë®òÈåÑÂô®&gt; Ë™ûÊ≥ïÁÇ∫:
-                       [&lt;class&gt;,]&lt;assembly&gt;[,&lt;options&gt;][;&lt;parameters&gt;]
+                       [&lt;È°ûÂà•&gt;,]&lt;ÁµÑ‰ª∂&gt;[,&lt;ÈÅ∏È†Ö&gt;][;&lt;ÂèÉÊï∏&gt;]
                      &lt;Ë®òÈåÑÂô®È°ûÂà•&gt; Ë™ûÊ≥ïÁÇ∫:
                        [&lt;‰∏ÄÈÉ®ÂàÜÊàñÂÆåÊï¥ÁöÑÂëΩÂêçÁ©∫Èñì&gt;.]&lt;Ë®òÈåÑÂô®È°ûÂà•ÂêçÁ®±&gt;
                      &lt;Ë®òÈåÑÂô®ÁµÑ‰ª∂&gt; Ë™ûÊ≥ïÁÇ∫:
-                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
+                       {&lt;ÁµÑ‰ª∂ÂêçÁ®±&gt;[,&lt;strong name&gt;] | &lt;ÁµÑ‰ª∂Ê™îÊ°à&gt;}
                      Ë®òÈåÑÂô®ÈÅ∏È†ÖÊúÉÊåáÂÆö MSBuild Âª∫Á´ãË®òÈåÑÂô®ÁöÑÊñπÂºè„ÄÇ
                      &lt;Ë®òÈåÑÂô®ÂèÉÊï∏&gt; ÊòØÈÅ∏ÊìáÊÄßÂèÉÊï∏ÔºåÂÖ∂ÊúÉ‰æùÊÇ®Ëº∏ÂÖ•ÁöÑÂÖßÂÆπÔºå
                      ÂÆåÂÖ®‰∏ÄÊ®£Âú∞ÂÇ≥ÈÅûÂà∞Ë®òÈåÑÂô®„ÄÇ(Á∞°Áü≠ÂΩ¢Âºè: -l)
@@ -1321,6 +1321,15 @@
         <target state="translated">MSBuild Ë®òÈåÑÂíåÂÅµÈåØÂ∑•ÂÖ∑Ë≥áË®äÂ∞á‰ΩçÊñº "{0}"</target>
         <note />
       </trans-unit>
+      <trans-unit id="MissingFeatureAvailabilityError">
+        <source>MSBUILD : error MSB1067: Must provide a feature name for the featureavailability switch.</source>
+        <target state="translated">MSBUILD : error MSB1067: ÂøÖÈ†àÁÇ∫ÂäüËÉΩÂèØÁî®ÊÄßÂàáÊèõÊèê‰æõÂäüËÉΩÂêçÁ®±„ÄÇ</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureavailability". The user must pass in an actual feature name
+      following the switch, as in "msbuild.exe -featureavailability:blah".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
       <trans-unit id="MissingGetItemError">
         <source>MSBUILD : error MSB1014: Must provide an item name for the getItem switch.</source>
         <target state="translated">MSBUILD : error MSB1014: ÂøÖÈ†àÊèê‰æõ getItem ÂàáÊèõÁöÑÈ†ÖÁõÆÂêçÁ®±„ÄÇ</target>
@@ -1337,6 +1346,15 @@
       {StrBegin="MSBUILD : error MSB1010: "}UE: This happens if the user does something like "msbuild.exe -getProperty". The user must pass in an actual property name
       following the switch, as in "msbuild.exe -getProperty:blah".
       LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="MissingGetResultFileError">
+        <source>MSBUILD : error MSB1068: Must provide a file for the getResultOutputFile switch.</source>
+        <target state="translated">MSBUILD : error MSB1068: ÂøÖÈ†àÊèê‰æõ getResultOutputFile ÂàáÊèõÁöÑÊ™îÊ°à„ÄÇ</target>
+        <note>
+      {StrBegin="MSBUILD : error MSB1068: "}UE: This happens if the user does something like "msbuild.exe -getResultOutputFile". The user must pass in an actual file
+      following the switch, as in "msbuild.exe -getTargetResult:blah -getResultOutputFile:blah.txt".
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
     </note>
       </trans-unit>
       <trans-unit id="MissingGetTargetResultError">
@@ -1460,11 +1478,12 @@
         <note>{StrBegin="MSBUILD : error MSB1062: "}LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:", "-warnnotaserror" and "-warnaserror" should not be localized.</note>
       </trans-unit>
       <trans-unit id="OptionalLoggerCreationMessage">
-        <source>The specified logger could not be created and will not be used. {0}</source>
-        <target state="translated">ÁÑ°Ê≥ïÂª∫Á´ãÊåáÂÆöÁöÑË®òÈåÑÂô®Ôºå‰∏î‰∏çÊúÉ‰ΩøÁî®„ÄÇ{0}</target>
+        <source>The specified logger "{0}" could not be created and will not be used. {1}</source>
+        <target state="translated">ÁÑ°Ê≥ïÂª∫Á´ãÊåáÂÆöÁöÑË®òÈåÑÂô® "{0}"ÔºåÂõ†Ê≠§Â∞á‰∏çÊúÉ‰ΩøÁî®ÂÆÉ„ÄÇ{1}</target>
         <note>
       UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
-      LOCALIZATION: {0} contains the exception message explaining why the
+      LOCALIZATION: {0} contains the logger description passed on the command line or in a
+      response file. {1} contains the exception message explaining why the
       logger could not be created -- this message comes from the CLR/FX and is localized.
     </note>
       </trans-unit>
@@ -1640,6 +1659,35 @@
         <target state="translated">Âõ†ÁÇ∫Ëº∏Âá∫Ê≠£ÈáçÊñ∞Â∞éÂêëËá≥Ê™îÊ°àÔºåÊâÄ‰ª•Êú™‰ΩøÁî®ÁµÇÁ´ØË®òÈåÑÂô®„ÄÇ</target>
         <note />
       </trans-unit>
+      <trans-unit id="TestProjectFinished_NoTF">
+        <source>{0}{1} test {2} ({3}s)</source>
+        <target state="translated">{0}{1} Ê∏¨Ë©¶ {2} ({3} Áßí)</target>
+        <note>
+      Project finished summary.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: BuildResult_{X}
+      {3}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestProjectFinished_WithTF">
+        <source>{0}{1} test {2} {3} ({4}s)</source>
+        <target state="translated">{0}{1} Ê∏¨Ë©¶ {2} {3} ({4} Áßí)</target>
+        <note>
+      Project finished summary including target framework information.
+      {0}: indentation - few spaces to visually indent row
+      {1}: project name
+      {2}: target framework
+      {3}: BuildResult_{X}
+      {4}: duration in seconds with 1 decimal point
+    </note>
+      </trans-unit>
+      <trans-unit id="TestSummary">
+        <source>Test run {0}. Total: {1} Failed: {2} Passed: {3} Skipped: {4}, Duration: {5}s</source>
+        <target state="translated">Ê∏¨Ë©¶ÂõûÂêà {0}„ÄÇÁ∏ΩË®à: {1} Â§±Êïó: {2} ÂÇ≥ÈÅû: {3} Ë∑≥ÈÅé: {4}, ÊúüÈñì: {5} Áßí</target>
+        <note>{0} string, localized result e.g. Failed surrounded by ANSI colors.
+{1-5} whole number</note>
+      </trans-unit>
       <trans-unit id="UnexpectedParametersError">
         <source>MSBUILD : error MSB1002: This switch does not take any parameters.</source>
         <target state="translated">MSBUILD : error MSB1002: ÈÄôÂÄãÂèÉÊï∏‰∏ç‰ΩøÁî®‰ªª‰ΩïÂèÉÊï∏„ÄÇ</target>
diff --git a/src/MSBuild/TerminalLogger/NodeStatus.cs b/src/MSBuild/TerminalLogger/NodeStatus.cs
index d199edc461c..3b3de635dee 100644
--- a/src/MSBuild/TerminalLogger/NodeStatus.cs
+++ b/src/MSBuild/TerminalLogger/NodeStatus.cs
@@ -1,6 +1,7 @@
 // Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
+using System;
 using System.Diagnostics;
 using Microsoft.Build.Shared;
 
@@ -13,17 +14,48 @@ internal class NodeStatus
 {
     public string Project { get; }
     public string? TargetFramework { get; }
+    public TerminalColor TargetPrefixColor { get; } = TerminalColor.Default;
+    public string? TargetPrefix { get; }
     public string Target { get; }
     public StopwatchAbstraction Stopwatch { get; }
 
+    /// <summary>
+    /// Status of a node that is currently doing work.
+    /// </summary>
+    /// <param name="project">The project that is written on left side.</param>
+    /// <param name="targetFramework">Target framework that is colorized and written on left side after project.</param>
+    /// <param name="target">The currently running work, usually the currently running target. Written on right.</param>
+    /// <param name="stopwatch">Duration of the current step. Written on right after target.</param>
     public NodeStatus(string project, string? targetFramework, string target, StopwatchAbstraction stopwatch)
     {
+#if DEBUG
+        if (target.Contains("\x1B"))
+        {
+            throw new ArgumentException("Target should not contain any escape codes, if you want to colorize target use the other constructor.");
+        }
+#endif
         Project = project;
         TargetFramework = targetFramework;
         Target = target;
         Stopwatch = stopwatch;
     }
 
+    /// <summary>
+    /// Status of a node that is currently doing work.
+    /// </summary>
+    /// <param name="project">The project that is written on left side.</param>
+    /// <param name="targetFramework">Target framework that is colorized and written on left side after project.</param>
+    /// <param name="targetPrefixColor">Color for the status of the currently running work written on right.</param>
+    /// <param name="targetPrefix">Colorized status for the currently running work, written on right, before target, and separated by 1 space from it.</param>
+    /// <param name="target">The currently running work, usually the currently runnig target. Written on right.</param>
+    /// <param name="stopwatch">Duration of the current step. Written on right after target.</param>
+    public NodeStatus(string project, string? targetFramework, TerminalColor targetPrefixColor, string targetPrefix, string target, StopwatchAbstraction stopwatch)
+        : this(project, targetFramework, target, stopwatch)
+    {
+        TargetPrefixColor = targetPrefixColor;
+        TargetPrefix = targetPrefix;
+    }
+
     /// <summary>
     /// Equality is based on the project, target framework, and target, but NOT the elapsed time.
     /// </summary>
@@ -31,7 +63,9 @@ public override bool Equals(object? obj) =>
         obj is NodeStatus status &&
         Project == status.Project &&
         TargetFramework == status.TargetFramework &&
-        Target == status.Target;
+        Target == status.Target &&
+        TargetPrefixColor == status.TargetPrefixColor &&
+        TargetPrefix == status.TargetPrefix;
 
     public override string ToString()
     {
diff --git a/src/MSBuild/TerminalLogger/NodesFrame.cs b/src/MSBuild/TerminalLogger/NodesFrame.cs
index 33fbf2c8d42..38c82c36f93 100644
--- a/src/MSBuild/TerminalLogger/NodesFrame.cs
+++ b/src/MSBuild/TerminalLogger/NodesFrame.cs
@@ -53,13 +53,21 @@ internal ReadOnlySpan<char> RenderNodeStatus(int i)
         string project = status.Project;
         string? targetFramework = status.TargetFramework;
         string target = status.Target;
+        string? targetPrefix = status.TargetPrefix;
+        TerminalColor targetPrefixColor = status.TargetPrefixColor;
 
-        int renderedWidth = Length(durationString, project, targetFramework, target);
+        var targetWithoutAnsiLength = !string.IsNullOrWhiteSpace(targetPrefix)
+            // +1 because we will join them by space in the final output.
+            ? targetPrefix!.Length + 1 + target.Length
+            : target.Length;
+
+        int renderedWidth = Length(durationString, project, targetFramework, targetWithoutAnsiLength);
 
         if (renderedWidth > Width)
         {
-            renderedWidth -= target.Length;
-            target = string.Empty;
+            renderedWidth -= targetWithoutAnsiLength;
+            targetPrefix = target = string.Empty;
+            targetWithoutAnsiLength = 0;
 
             if (renderedWidth > Width)
             {
@@ -74,13 +82,14 @@ internal ReadOnlySpan<char> RenderNodeStatus(int i)
             }
         }
 
-        return $"{TerminalLogger.Indentation}{project}{(targetFramework is null ? string.Empty : " ")}{AnsiCodes.Colorize(targetFramework, TerminalLogger.TargetFrameworkColor)} {AnsiCodes.SetCursorHorizontal(MaxColumn)}{AnsiCodes.MoveCursorBackward(target.Length + durationString.Length + 1)}{target} {durationString}".AsSpan();
+        var renderedTarget = !string.IsNullOrWhiteSpace(targetPrefix) ? $"{AnsiCodes.Colorize(targetPrefix, targetPrefixColor)} {target}" : target;
+        return $"{TerminalLogger.Indentation}{project}{(targetFramework is null ? string.Empty : " ")}{AnsiCodes.Colorize(targetFramework, TerminalLogger.TargetFrameworkColor)} {AnsiCodes.SetCursorHorizontal(MaxColumn)}{AnsiCodes.MoveCursorBackward(targetWithoutAnsiLength + durationString.Length + 1)}{renderedTarget} {durationString}".AsSpan();
 
-        static int Length(string durationString, string project, string? targetFramework, string target) =>
+        static int Length(string durationString, string project, string? targetFramework, int targetWithoutAnsiLength) =>
                 TerminalLogger.Indentation.Length +
                 project.Length + 1 +
                 (targetFramework?.Length ?? -1) + 1 +
-                target.Length + 1 +
+                targetWithoutAnsiLength + 1 +
                 durationString.Length;
     }
 
@@ -92,6 +101,9 @@ public string Render(NodesFrame previousFrame)
         StringBuilder sb = _renderBuilder;
         sb.Clear();
 
+        // Move cursor back to 1st line of nodes.
+        sb.AppendLine($"{AnsiCodes.CSI}{previousFrame.NodesCount + 1}{AnsiCodes.MoveUpToLineStart}");
+
         int i = 0;
         for (; i < NodesCount; i++)
         {
diff --git a/src/MSBuild/TerminalLogger/Project.cs b/src/MSBuild/TerminalLogger/Project.cs
index 3f027249782..959bab12960 100644
--- a/src/MSBuild/TerminalLogger/Project.cs
+++ b/src/MSBuild/TerminalLogger/Project.cs
@@ -46,6 +46,11 @@ public Project(string? targetFramework, StopwatchAbstraction? stopwatch)
     /// </summary>
     public string? TargetFramework { get; }
 
+    /// <summary>
+    /// True when the project has run target with name "_TestRunStart" defined in <see cref="TerminalLogger._testStartTarget"/>.
+    /// </summary>
+    public bool IsTestProject { get; set; }
+
     /// <summary>
     /// A lazily initialized list of build messages/warnings/errors raised during the build.
     /// </summary>
diff --git a/src/MSBuild/TerminalLogger/TerminalLogger.cs b/src/MSBuild/TerminalLogger/TerminalLogger.cs
index f317fd6c1b8..195ebb95789 100644
--- a/src/MSBuild/TerminalLogger/TerminalLogger.cs
+++ b/src/MSBuild/TerminalLogger/TerminalLogger.cs
@@ -8,6 +8,8 @@
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 using System.Text.RegularExpressions;
+using System.Diagnostics;
+
 #if NET7_0_OR_GREATER
 using System.Diagnostics.CodeAnalysis;
 #endif
@@ -138,6 +140,11 @@ public ProjectContext(BuildEventContext context)
     /// </summary>
     private bool _manualRefresh;
 
+    /// <summary>
+    /// True if we've logged the ".NET SDK is preview" message.
+    /// </summary>
+    private bool _loggedPreviewMessage;
+
     /// <summary>
     /// List of events the logger needs as parameters to the <see cref="ConfigurableForwardingLogger"/>.
     /// </summary>
@@ -166,6 +173,26 @@ public ProjectContext(BuildEventContext context)
     /// </summary>
     private static readonly char[] PathSeparators = { Path.DirectorySeparatorChar, Path.AltDirectorySeparatorChar };
 
+    /// <summary>
+    /// One summary per finished project test run.
+    /// </summary>
+    private List<TestSummary> _testRunSummaries = new();
+
+    /// <summary>
+    /// Name of target that identifies a project that has tests, and that they just started.
+    /// </summary>
+    private static string _testStartTarget = "_TestRunStart";
+
+    /// <summary>
+    /// Time of the oldest observed test target start.
+    /// </summary>
+    private DateTime? _testStartTime;
+
+    /// <summary>
+    /// Time of the most recently observed test target finished.
+    /// </summary>
+    private DateTime? _testEndTime;
+
     /// <summary>
     /// Default constructor, used by the MSBuild logger infra.
     /// </summary>
@@ -285,6 +312,27 @@ private void BuildFinished(object sender, BuildFinishedEventArgs e)
                     buildResult,
                     duration));
             }
+
+            if (_testRunSummaries.Any())
+            {
+                var total = _testRunSummaries.Sum(t => t.Total);
+                var failed = _testRunSummaries.Sum(t => t.Failed);
+                var passed = _testRunSummaries.Sum(t => t.Passed);
+                var skipped = _testRunSummaries.Sum(t => t.Skipped);
+                var testDuration = (_testStartTime != null && _testEndTime != null ? (_testEndTime - _testStartTime).Value.TotalSeconds : 0).ToString("F1");
+
+                var colorizedResult = _testRunSummaries.Any(t => t.Failed > 0) || _buildHasErrors
+                    ? AnsiCodes.Colorize(ResourceUtilities.GetResourceString("BuildResult_Failed"), TerminalColor.Red)
+                    : AnsiCodes.Colorize(ResourceUtilities.GetResourceString("BuildResult_Succeeded"), TerminalColor.Green);
+
+                Terminal.WriteLine(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("TestSummary",
+                    colorizedResult,
+                    total,
+                    failed,
+                    passed,
+                    skipped,
+                    testDuration));
+            }
         }
         finally
         {
@@ -296,9 +344,12 @@ private void BuildFinished(object sender, BuildFinishedEventArgs e)
             Terminal.EndUpdate();
         }
 
+        _testRunSummaries.Clear();
         _buildHasErrors = false;
         _buildHasWarnings = false;
         _restoreFailed = false;
+        _testStartTime = null;
+        _testEndTime = null;
     }
 
     /// <summary>
@@ -401,26 +452,50 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
                         _restoreFinished = true;
                     }
                     // If this was a notable project build, we print it as completed only if it's produced an output or warnings/error.
-                    else if (project.OutputPath is not null || project.BuildMessages is not null)
+                    // If this is a test project, print it always, so user can see either a success or failure, otherwise success is hidden
+                    // and it is hard to see if project finished, or did not run at all.
+                    else if (project.OutputPath is not null || project.BuildMessages is not null || project.IsTestProject)
                     {
                         // Show project build complete and its output
-
-                        if (string.IsNullOrEmpty(project.TargetFramework))
+                        if (project.IsTestProject)
                         {
-                            Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("ProjectFinished_NoTF",
-                                Indentation,
-                                projectFile,
-                                buildResult,
-                                duration));
+                            if (string.IsNullOrEmpty(project.TargetFramework))
+                            {
+                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("TestProjectFinished_NoTF",
+                                    Indentation,
+                                    projectFile,
+                                    buildResult,
+                                    duration));
+                            }
+                            else
+                            {
+                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("TestProjectFinished_WithTF",
+                                    Indentation,
+                                    projectFile,
+                                    AnsiCodes.Colorize(project.TargetFramework, TargetFrameworkColor),
+                                    buildResult,
+                                    duration));
+                            }
                         }
                         else
                         {
-                            Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("ProjectFinished_WithTF",
-                                Indentation,
-                                projectFile,
-                                AnsiCodes.Colorize(project.TargetFramework, TargetFrameworkColor),
-                                buildResult,
-                                duration));
+                            if (string.IsNullOrEmpty(project.TargetFramework))
+                            {
+                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("ProjectFinished_NoTF",
+                                    Indentation,
+                                    projectFile,
+                                    buildResult,
+                                    duration));
+                            }
+                            else
+                            {
+                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("ProjectFinished_WithTF",
+                                    Indentation,
+                                    projectFile,
+                                    AnsiCodes.Colorize(project.TargetFramework, TargetFrameworkColor),
+                                    buildResult,
+                                    duration));
+                            }
                         }
 
                         // Print the output path as a link if we have it.
@@ -498,7 +573,22 @@ private void TargetStarted(object sender, TargetStartedEventArgs e)
             project.Stopwatch.Start();
 
             string projectFile = Path.GetFileNameWithoutExtension(e.ProjectFile);
-            NodeStatus nodeStatus = new(projectFile, project.TargetFramework, e.TargetName, project.Stopwatch);
+
+            var isTestTarget = e.TargetName == _testStartTarget;
+
+            var targetName = isTestTarget ? "Testing" : e.TargetName;
+            if (isTestTarget)
+            {
+                // Use the minimal start time, so if we run tests in parallel, we can calculate duration
+                // as this start time, minus time when tests finished.
+                _testStartTime = _testStartTime == null
+                    ? e.Timestamp
+                    : e.Timestamp < _testStartTime
+                        ? e.Timestamp : _testStartTime;
+                project.IsTestProject = true;
+            }
+
+            NodeStatus nodeStatus = new(projectFile, project.TargetFramework, targetName, project.Stopwatch);
             UpdateNodeStatus(buildEventContext, nodeStatus);
         }
     }
@@ -551,6 +641,7 @@ private void MessageRaised(object sender, BuildMessageEventArgs e)
         string? message = e.Message;
         if (message is not null && e.Importance == MessageImportance.High)
         {
+            var hasProject = _projects.TryGetValue(new ProjectContext(buildEventContext), out Project? project);
             // Detect project output path by matching high-importance messages against the "$(MSBuildProjectName) -> ..."
             // pattern used by the CopyFilesToOutputDirectory target.
             int index = message.IndexOf(FilePathPattern, StringComparison.Ordinal);
@@ -558,11 +649,10 @@ private void MessageRaised(object sender, BuildMessageEventArgs e)
             {
                 var projectFileName = Path.GetFileName(e.ProjectFile.AsSpan());
                 if (!projectFileName.IsEmpty &&
-                    message.AsSpan().StartsWith(Path.GetFileNameWithoutExtension(projectFileName)) &&
-                    _projects.TryGetValue(new ProjectContext(buildEventContext), out Project? project))
+                    message.AsSpan().StartsWith(Path.GetFileNameWithoutExtension(projectFileName)) && hasProject)
                 {
                     ReadOnlyMemory<char> outputPath = e.Message.AsMemory().Slice(index + 4);
-                    project.OutputPath = outputPath;
+                    project!.OutputPath = outputPath;
                 }
             }
 
@@ -570,6 +660,62 @@ private void MessageRaised(object sender, BuildMessageEventArgs e)
             {
                 RenderImmediateMessage(message);
             }
+            else if (hasProject && project!.IsTestProject)
+            {
+                var node = _nodes[NodeIndexForContext(buildEventContext)];
+
+                // Consumes test update messages produced by VSTest and MSTest runner.
+                if (node != null && e is IExtendedBuildEventArgs extendedMessage)
+                {
+                    switch (extendedMessage.ExtendedType)
+                    {
+                        case "TLTESTPASSED":
+                            {
+                                var indicator = extendedMessage.ExtendedMetadata!["localizedResult"]!;
+                                var displayName = extendedMessage.ExtendedMetadata!["displayName"]!;
+
+                                var status = new NodeStatus(node.Project, node.TargetFramework, TerminalColor.Green, indicator, displayName, project.Stopwatch);
+                                UpdateNodeStatus(buildEventContext, status);
+                                break;
+                            }
+
+                        case "TLTESTSKIPPED":
+                            {
+                                var indicator = extendedMessage.ExtendedMetadata!["localizedResult"]!;
+                                var displayName = extendedMessage.ExtendedMetadata!["displayName"]!;
+
+                                var status = new NodeStatus(node.Project, node.TargetFramework, TerminalColor.Yellow, indicator, displayName, project.Stopwatch);
+                                UpdateNodeStatus(buildEventContext, status);
+                                break;
+                            }
+
+                        case "TLTESTFINISH":
+                            {
+                                _ = int.TryParse(extendedMessage.ExtendedMetadata!["total"]!, out int total);
+                                _ = int.TryParse(extendedMessage.ExtendedMetadata!["passed"]!, out int passed);
+                                _ = int.TryParse(extendedMessage.ExtendedMetadata!["skipped"]!, out int skipped);
+                                _ = int.TryParse(extendedMessage.ExtendedMetadata!["failed"]!, out int failed);
+
+                                _testRunSummaries.Add(new TestSummary(total, passed, skipped, failed));
+
+                                _testEndTime = _testEndTime == null
+                                        ? e.Timestamp
+                                        : e.Timestamp > _testEndTime
+                                            ? e.Timestamp : _testEndTime;
+                                break;
+                            }
+                    }
+                }
+            }
+            else if (e.Code == "NETSDK1057" && !_loggedPreviewMessage)
+            {
+                // The SDK will log the high-pri "not-a-warning" message NETSDK1057
+                // when it's a preview version up to MaxCPUCount times, but that's
+                // an implementation detail--the user cares about at most one.
+
+                RenderImmediateMessage(message);
+                _loggedPreviewMessage = true;
+            }
         }
     }
 
@@ -695,8 +841,6 @@ internal void DisplayNodes()
         Terminal.Write(AnsiCodes.HideCursor);
         try
         {
-            // Move cursor back to 1st line of nodes.
-            Terminal.WriteLine($"{AnsiCodes.CSI}{_currentFrame.NodesCount + 1}{AnsiCodes.MoveUpToLineStart}");
             Terminal.Write(rendered);
         }
         finally
diff --git a/src/MSBuild/TerminalLogger/TestSummary.cs b/src/MSBuild/TerminalLogger/TestSummary.cs
new file mode 100644
index 00000000000..dff316e37b8
--- /dev/null
+++ b/src/MSBuild/TerminalLogger/TestSummary.cs
@@ -0,0 +1,9 @@
+Ôªø// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+
+namespace Microsoft.Build.Logging.TerminalLogger
+{
+    internal readonly record struct TestSummary(int Total, int Passed, int Skipped, int Failed);
+}
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 0210df145df..7305abef033 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -15,6 +15,8 @@
 using System.Reflection;
 using System.Security;
 using System.Text;
+using System.Text.Json;
+using System.Text.Json.Nodes;
 using System.Text.RegularExpressions;
 using System.Threading;
 using Microsoft.Build.Collections;
@@ -211,9 +213,15 @@ private static void HandleConfigurationException(Exception ex)
         /// MSBuild no longer runs any arbitrary code (tasks or loggers) on the main thread, so it never needs the
         /// main thread to be in an STA. Accordingly, to avoid ambiguity, we explicitly use the [MTAThread] attribute.
         /// This doesn't actually do any work unless COM interop occurs for some reason.
+        /// We use the MultiDomain loader policy because we may create secondary AppDomains and need NGEN images
+        /// for our as well as Framework assemblies to be loaded domain neutral so their native images can be used.
+        /// See <see cref="NuGetFrameworkWrapper"/>.
         /// </remarks>
         /// <returns>0 on success, 1 on failure</returns>
         [MTAThread]
+#if FEATURE_APPDOMAIN
+        [LoaderOptimization(LoaderOptimization.MultiDomain)]
+#endif
 #pragma warning disable SA1111, SA1009 // Closing parenthesis should be on line of last parameter
         public static int Main(
 #if !FEATURE_GET_COMMANDLINE
@@ -301,11 +309,11 @@ private static bool CanRunServerBasedOnCommandLineSwitches(
             {
                 GatherAllSwitches(commandLine, out var switchesFromAutoResponseFile, out var switchesNotFromAutoResponseFile, out string fullCommandLine);
                 CommandLineSwitches commandLineSwitches = CombineSwitchesRespectingPriority(switchesFromAutoResponseFile, switchesNotFromAutoResponseFile, fullCommandLine);
-                if (CheckAndGatherProjectAutoResponseFile(switchesFromAutoResponseFile, commandLineSwitches, false, fullCommandLine, out string projectFile))
+                if (CheckAndGatherProjectAutoResponseFile(switchesFromAutoResponseFile, commandLineSwitches, false, fullCommandLine))
                 {
                     commandLineSwitches = CombineSwitchesRespectingPriority(switchesFromAutoResponseFile, switchesNotFromAutoResponseFile, fullCommandLine);
                 }
-
+                string projectFile = ProcessProjectSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project], commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.IgnoreProjectExtensions], Directory.GetFiles);
                 if (commandLineSwitches[CommandLineSwitches.ParameterlessSwitch.Help] ||
                     commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.NodeMode) ||
                     commandLineSwitches[CommandLineSwitches.ParameterlessSwitch.Version] ||
@@ -712,6 +720,7 @@ public static ExitType Execute(
                 string[] getProperty = Array.Empty<string>();
                 string[] getItem = Array.Empty<string>();
                 string[] getTargetResult = Array.Empty<string>();
+                string getResultOutputFile = string.Empty;
                 BuildResult result = null;
 #if FEATURE_REPORTFILEACCESSES
                 bool reportFileAccesses = false;
@@ -758,6 +767,7 @@ public static ExitType Execute(
                                             ref getProperty,
                                             ref getItem,
                                             ref getTargetResult,
+                                            ref getResultOutputFile,
                                             recursing: false,
 #if FEATURE_GET_COMMANDLINE
                                             commandLine);
@@ -814,7 +824,8 @@ public static ExitType Execute(
                             using (ProjectCollection collection = new(globalProperties, loggers, ToolsetDefinitionLocations.Default))
                             {
                                 Project project = collection.LoadProject(projectFile, globalProperties, toolsVersion);
-                                exitType = OutputPropertiesAfterEvaluation(getProperty, getItem, project);
+                                TextWriter output = getResultOutputFile.Length > 0 ? new StreamWriter(getResultOutputFile) : Console.Out;
+                                exitType = OutputPropertiesAfterEvaluation(getProperty, getItem, project, output);
                                 collection.LogBuildFinishedEvent(exitType == ExitType.Success);
                             }
                         }
@@ -876,7 +887,8 @@ public static ExitType Execute(
 
                     if (outputPropertiesItemsOrTargetResults && targets?.Length > 0 && result is not null)
                     {
-                        exitType = OutputBuildInformationInJson(result, getProperty, getItem, getTargetResult, loggers, exitType);
+                        TextWriter outputStream = getResultOutputFile.Length > 0 ? new StreamWriter(getResultOutputFile) : Console.Out;
+                        exitType = OutputBuildInformationInJson(result, getProperty, getItem, getTargetResult, loggers, exitType, outputStream);
                     }
 
                     if (!string.IsNullOrEmpty(timerOutputFilename))
@@ -1036,25 +1048,27 @@ public static ExitType Execute(
             return exitType;
         }
 
-        private static ExitType OutputPropertiesAfterEvaluation(string[] getProperty, string[] getItem, Project project)
+        private static ExitType OutputPropertiesAfterEvaluation(string[] getProperty, string[] getItem, Project project, TextWriter outputStream)
         {
             // Special case if the user requests exactly one property: skip json formatting
             if (getProperty.Length == 1 && getItem.Length == 0)
             {
-                Console.WriteLine(project.GetPropertyValue(getProperty[0]));
+                outputStream.WriteLine(project.GetPropertyValue(getProperty[0]));
             }
             else
             {
                 JsonOutputFormatter jsonOutputFormatter = new();
                 jsonOutputFormatter.AddPropertiesInJsonFormat(getProperty, property => project.GetPropertyValue(property));
                 jsonOutputFormatter.AddItemsInJsonFormat(getItem, project);
-                Console.WriteLine(jsonOutputFormatter.ToString());
+                outputStream.WriteLine(jsonOutputFormatter.ToString());
             }
 
+            outputStream.Flush();
+
             return ExitType.Success;
         }
 
-        private static ExitType OutputBuildInformationInJson(BuildResult result, string[] getProperty, string[] getItem, string[] getTargetResult, ILogger[] loggers, ExitType exitType)
+        private static ExitType OutputBuildInformationInJson(BuildResult result, string[] getProperty, string[] getItem, string[] getTargetResult, ILogger[] loggers, ExitType exitType, TextWriter outputStream)
         {
             ProjectInstance builtProject = result.ProjectStateAfterBuild;
 
@@ -1072,7 +1086,7 @@ private static ExitType OutputBuildInformationInJson(BuildResult result, string[
             // Special case if the user requests exactly one property: skip the json formatting
             else if (getProperty.Length == 1 && getItem.Length == 0 && getTargetResult.Length == 0)
             {
-                Console.WriteLine(builtProject.GetPropertyValue(getProperty[0]));
+                outputStream.WriteLine(builtProject.GetPropertyValue(getProperty[0]));
             }
             else
             {
@@ -1080,9 +1094,11 @@ private static ExitType OutputBuildInformationInJson(BuildResult result, string[
                 jsonOutputFormatter.AddPropertiesInJsonFormat(getProperty, property => builtProject.GetPropertyValue(property));
                 jsonOutputFormatter.AddItemInstancesInJsonFormat(getItem, builtProject);
                 jsonOutputFormatter.AddTargetResultsInJsonFormat(getTargetResult, result);
-                Console.WriteLine(jsonOutputFormatter.ToString());
+                outputStream.WriteLine(jsonOutputFormatter.ToString());
             }
 
+            outputStream.Flush();
+
             return exitType;
         }
 
@@ -1766,7 +1782,10 @@ private static BuildResult ExecuteRestore(string projectFile, string toolsVersio
             // Add/set a property with a random value to ensure that restore happens under a different evaluation context
             // If the evaluation context is not different, then projects won't be re-evaluated after restore
             // The initializer syntax can't be used just in case a user set this property to a value
-            restoreGlobalProperties["MSBuildRestoreSessionId"] = Guid.NewGuid().ToString("D");
+            restoreGlobalProperties[MSBuildConstants.MSBuildRestoreSessionId] = Guid.NewGuid().ToString("D");
+
+            // Add a property to indicate that a Restore is executing
+            restoreGlobalProperties[MSBuildConstants.MSBuildIsRestoring] = bool.TrueString;
 
             // Create a new request with a Restore target only and specify:
             //  - BuildRequestDataFlags.ClearCachesAfterBuild to ensure the projects will be reloaded from disk for subsequent builds
@@ -2411,6 +2430,7 @@ private static bool ProcessCommandLineSwitches(
             ref string[] getProperty,
             ref string[] getItem,
             ref string[] getTargetResult,
+            ref string getResultOutputFile,
             bool recursing,
             string commandLine)
         {
@@ -2435,19 +2455,8 @@ private static bool ProcessCommandLineSwitches(
             }
 #endif
 
-            bool shouldShowLogo = !commandLineSwitches[CommandLineSwitches.ParameterlessSwitch.NoLogo] &&
-                                  !commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.Preprocess) &&
-                                  !commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.GetProperty) &&
-                                  !commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.GetItem) &&
-                                  !commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.GetTargetResult);
-
-            // show copyright message if nologo switch is not set
-            // NOTE: we heed the nologo switch even if there are switch errors
-            if (!recursing && shouldShowLogo)
-            {
-                DisplayVersionMessage();
-            }
-
+            bool useTerminalLogger = ProcessTerminalLoggerConfiguration(commandLineSwitches, out string aggregatedTerminalLoggerParameters);
+            DisplayVersionMessageIfNeeded(recursing, useTerminalLogger, commandLineSwitches);
 
             // Idle priority would prevent the build from proceeding as the user does normal actions.
             // This switch is processed early to capture both the command line case (main node should
@@ -2495,9 +2504,14 @@ private static bool ProcessCommandLineSwitches(
                 {
                     ShowVersion();
                 }
+                // if featureavailability switch is set, just show the feature availability and quit (ignore the other switches)
+                else if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.FeatureAvailability))
+                {
+                    ShowFeatureAvailability(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.FeatureAvailability]);
+                }
                 else
                 {
-                    bool foundProjectAutoResponseFile = CheckAndGatherProjectAutoResponseFile(switchesFromAutoResponseFile, commandLineSwitches, recursing, commandLine, out projectFile);
+                    bool foundProjectAutoResponseFile = CheckAndGatherProjectAutoResponseFile(switchesFromAutoResponseFile, commandLineSwitches, recursing, commandLine);
 
                     if (foundProjectAutoResponseFile)
                     {
@@ -2546,10 +2560,13 @@ private static bool ProcessCommandLineSwitches(
                                                            ref getProperty,
                                                            ref getItem,
                                                            ref getTargetResult,
+                                                           ref getResultOutputFile,
                                                            recursing: true,
                                                            commandLine);
                     }
 
+                    projectFile = ProcessProjectSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project], commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.IgnoreProjectExtensions], Directory.GetFiles);
+
                     // figure out which targets we are building
                     targets = ProcessTargetSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Target]);
 
@@ -2557,7 +2574,10 @@ private static bool ProcessCommandLineSwitches(
                     getProperty = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetProperty] ?? Array.Empty<string>();
                     getItem = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetItem] ?? Array.Empty<string>();
                     getTargetResult = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetTargetResult] ?? Array.Empty<string>();
-                    if (getProperty.Length > 0 || getItem.Length > 0 || getTargetResult.Length > 0)
+                    getResultOutputFile = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetResultOutputFile].FirstOrDefault() ?? string.Empty;
+
+                    bool minimizeStdOutOutput = getProperty.Length + getItem.Length + getTargetResult.Length > 0 && getResultOutputFile.Length == 0;
+                    if (minimizeStdOutOutput)
                     {
                         commandLineSwitches.SetParameterizedSwitch(CommandLineSwitches.ParameterizedSwitch.Verbosity, "q", "q", true, true, true);
                     }
@@ -2626,8 +2646,6 @@ private static bool ProcessCommandLineSwitches(
 
                     outputResultsCache = ProcessOutputResultsCache(commandLineSwitches);
 
-                    bool useTerminalLogger = ProcessTerminalLoggerConfiguration(commandLineSwitches, out string aggregatedTerminalLoggerParameters);
-
                     // figure out which loggers are going to listen to build events
                     string[][] groupedFileLoggerParameters = commandLineSwitches.GetFileLoggerParameters();
 
@@ -2644,7 +2662,7 @@ private static bool ProcessCommandLineSwitches(
                         commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.BinaryLogger],
                         commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.ProfileEvaluation],
                         groupedFileLoggerParameters,
-                        getProperty.Length + getItem.Length + getTargetResult.Length > 0,
+                        minimizeStdOutOutput,
                         out distributedLoggerRecords,
                         out verbosity,
                         out originalVerbosity,
@@ -2906,18 +2924,43 @@ private static CommandLineSwitches CombineSwitchesRespectingPriority(CommandLine
             return commandLineSwitches;
         }
 
-        private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine, out string projectFile)
+        private static string GetProjectDirectory(string[] projectSwitchParameters)
         {
-            bool found = false;
+            string projectDirectory = ".";
+            ErrorUtilities.VerifyThrow(projectSwitchParameters.Length <= 1, "Expect exactly one project at a time.");
 
-            // figure out what project we are building
-            projectFile = ProcessProjectSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project], commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.IgnoreProjectExtensions], Directory.GetFiles);
+            if (projectSwitchParameters.Length == 1)
+            {
+                var projectFile = FileUtilities.FixFilePath(projectSwitchParameters[0]);
+
+                if (FileSystems.Default.DirectoryExists(projectFile))
+                {
+                    // the provided argument value is actually the directory
+                    projectDirectory = projectFile;
+                }
+                else
+                {
+                    InitializationException.VerifyThrow(FileSystems.Default.FileExists(projectFile), "ProjectNotFoundError", projectFile);
+                    projectDirectory = Path.GetDirectoryName(Path.GetFullPath(projectFile));
+                }
+            }
+
+            return projectDirectory;
+        }
+
+
+        /// <summary>
+        /// Identifies if there is rsp files near the project file 
+        /// </summary>
+        /// <returns>true if there autoresponse file was found</returns>
+        private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine)
+        {
+            bool found = false;
+           
+            var projectDirectory = GetProjectDirectory(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project]);
 
             if (!recursing && !commandLineSwitches[CommandLineSwitches.ParameterlessSwitch.NoAutoResponse])
             {
-                // gather any switches from an msbuild.rsp that is next to the project or solution file itself
-                string projectDirectory = Path.GetDirectoryName(Path.GetFullPath(projectFile));
-
                 // gather any switches from the first Directory.Build.rsp found in the project directory or above
                 string directoryResponseFile = FileUtilities.GetPathOfFileAbove(directoryResponseFileName, projectDirectory);
 
@@ -3371,7 +3414,7 @@ internal static string ProcessProjectSwitch(
                                  string[] projectsExtensionsToIgnore,
                                  DirectoryGetFiles getFiles)
         {
-            ErrorUtilities.VerifyThrow(parameters.Length <= 1, "It should not be possible to specify more than 1 project at a time.");
+            ErrorUtilities.VerifyThrow(parameters.Length <= 1, "Expect exactly one project at a time.");
             string projectFile = null;
 
             string projectDirectory = null;
@@ -4274,7 +4317,7 @@ private static bool CreateAndConfigureLogger(
             }
             catch (Exception e) when (loggerDescription.IsOptional)
             {
-                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword("OptionalLoggerCreationMessage", e.Message));
+                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword("OptionalLoggerCreationMessage", loggerDescription.Name, e.Message));
                 return false;
             }
 
@@ -4408,9 +4451,29 @@ private static void ThrowInvalidToolsVersionInitializationException(IEnumerable<
         /// <summary>
         /// Displays the application version message/logo.
         /// </summary>
-        private static void DisplayVersionMessage()
+        private static void DisplayVersionMessageIfNeeded(bool recursing, bool useTerminalLogger, CommandLineSwitches commandLineSwitches)
         {
-            Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword("MSBuildVersionMessage", ProjectCollection.DisplayVersion, NativeMethods.FrameworkName));
+            if (recursing)
+            {
+                return;
+            }
+
+            // Show the versioning information if the user has not disabled it or msbuild is not running in a mode
+            //  where it is not appropriate to show the versioning information (information querying mode that can be plugged into CLI scripts,
+            //  terminal logger mode, where we want to display only the most relevant info, while output is not meant for investigation).
+            // NOTE: response files are not reflected in this check. So enabling TL in response file will lead to version message still being shown.
+            bool shouldShowLogo = !commandLineSwitches[CommandLineSwitches.ParameterlessSwitch.NoLogo] &&
+                                  !commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.Preprocess) &&
+                                  !commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.GetProperty) &&
+                                  !commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.GetItem) &&
+                                  !commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.GetTargetResult) &&
+                                  !commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.FeatureAvailability) &&
+                                  !useTerminalLogger;
+
+            if (shouldShowLogo)
+            {
+                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword("MSBuildVersionMessage", ProjectCollection.DisplayVersion, NativeMethods.FrameworkName));
+            }
         }
 
         /// <summary>
@@ -4496,5 +4559,26 @@ private static void ShowVersion()
                 Console.Write(ProjectCollection.Version.ToString());
             }
         }
+
+        private static void ShowFeatureAvailability(string[] features)
+        {
+            if (features.Length == 1)
+            {
+                string featureName = features[0];
+                FeatureStatus availability = Features.CheckFeatureAvailability(featureName);
+                Console.WriteLine(availability);
+            }
+            else
+            {
+                var jsonNode = new JsonObject();
+                foreach (string featureName in features)
+                {
+                    jsonNode[featureName] = Features.CheckFeatureAvailability(featureName).ToString();
+                }
+
+                var options = new JsonSerializerOptions() { AllowTrailingCommas = false, WriteIndented = true };
+                Console.WriteLine(jsonNode.ToJsonString(options));
+            }
+        }
     }
 }
diff --git a/src/MSBuildTaskHost/MSBuildTaskHost.csproj b/src/MSBuildTaskHost/MSBuildTaskHost.csproj
index aa4ce2eac58..26ad0cf2151 100644
--- a/src/MSBuildTaskHost/MSBuildTaskHost.csproj
+++ b/src/MSBuildTaskHost/MSBuildTaskHost.csproj
@@ -2,7 +2,7 @@
 
   <!-- The .NET Core version of MSBuild doesn't support targeting .NET Framework 3.5.  So in that case, we import
        a .props file that prevents building the project from doing much of anything. -->
-  <Import Project="$(RepoRoot)eng\ProducesNoOutput.Settings.props" Condition="'$(MSBuildRuntimeType)' == 'Core' or '$(MonoBuild)' == 'true'" />
+  <Import Project="$(RepoRoot)eng\ProducesNoOutput.Settings.props" Condition="'$(MSBuildRuntimeType)' == 'Core'" />
 
   <PropertyGroup>
     <TargetFramework>net35</TargetFramework>
diff --git a/src/Package/DevDivPackage/DevDivPackage.csproj b/src/Package/DevDivPackage/DevDivPackage.csproj
index 41cbda82dc7..83f231e362d 100644
--- a/src/Package/DevDivPackage/DevDivPackage.csproj
+++ b/src/Package/DevDivPackage/DevDivPackage.csproj
@@ -7,6 +7,8 @@
     <PlatformTarget>x86</PlatformTarget>
     <DisableSemVer2>true</DisableSemVer2>
     <IsVisualStudioInsertionPackage>true</IsVisualStudioInsertionPackage>
+    <!-- VS insertion packages are not needed when doing a .NET product build. -->
+    <ExcludeFromDotNetBuild>true</ExcludeFromDotNetBuild>
   </PropertyGroup>
 
   <ItemGroup>
diff --git a/src/Package/Localization/Localization.csproj b/src/Package/Localization/Localization.csproj
index e1ecca1aab4..36e52455e6f 100644
--- a/src/Package/Localization/Localization.csproj
+++ b/src/Package/Localization/Localization.csproj
@@ -1,7 +1,6 @@
 Ôªø<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
-    <TargetFramework Condition="$(MonoBuild) != 'true'">$(LatestDotNetCoreForMSBuild)</TargetFramework>
-    <TargetFramework Condition="$(MonoBuild) == 'true'">net472</TargetFramework>
+    <TargetFramework>$(LatestDotNetCoreForMSBuild)</TargetFramework>
     <NuspecFile>Microsoft.Build.Localization.nuspec</NuspecFile>
     <IsShipping>false</IsShipping>
     <NoPackageAnalysis>true</NoPackageAnalysis>
@@ -11,7 +10,6 @@
     <ProjectReference Include="..\..\MSBuild\MSBuild.csproj" />
   </ItemGroup>
 
-  <Import Project="..\NuspecProject.targets" Condition="'$(MonoBuild)' != 'true'" />
-  <Import Project="$(RepoRoot)eng\ProducesNoOutput.Settings.props" Condition="'$(MonoBuild)' == 'true'" />
+  <Import Project="..\NuspecProject.targets" />
   
 </Project>
diff --git a/src/Package/MSBuild.VSSetup.Arm64/MSBuild.VSSetup.Arm64.csproj b/src/Package/MSBuild.VSSetup.Arm64/MSBuild.VSSetup.Arm64.csproj
index 297958b416d..2886ce40bc8 100644
--- a/src/Package/MSBuild.VSSetup.Arm64/MSBuild.VSSetup.Arm64.csproj
+++ b/src/Package/MSBuild.VSSetup.Arm64/MSBuild.VSSetup.Arm64.csproj
@@ -6,7 +6,7 @@
     <TargetVsixContainerName>Microsoft.Build.Arm64.vsix</TargetVsixContainerName>
     <VisualStudioInsertionComponent>Microsoft.Build.Arm64</VisualStudioInsertionComponent>
     <ShouldSkipProject>false</ShouldSkipProject>
-    <ShouldSkipProject Condition="'$(MonoBuild)' == 'true' or '$(MSBuildRuntimeType)' != 'Full'">true</ShouldSkipProject>
+    <ShouldSkipProject Condition="'$(MSBuildRuntimeType)' != 'Full'">true</ShouldSkipProject>
   </PropertyGroup>
 
   <ItemGroup>
diff --git a/src/Package/MSBuild.VSSetup/MSBuild.VSSetup.csproj b/src/Package/MSBuild.VSSetup/MSBuild.VSSetup.csproj
index f3b3f9d2431..fa17cd82f82 100644
--- a/src/Package/MSBuild.VSSetup/MSBuild.VSSetup.csproj
+++ b/src/Package/MSBuild.VSSetup/MSBuild.VSSetup.csproj
@@ -7,7 +7,7 @@
     <VisualStudioInsertionComponent>Microsoft.Build</VisualStudioInsertionComponent>
 
     <ShouldSkipProject>false</ShouldSkipProject>
-    <ShouldSkipProject Condition="'$(MonoBuild)' == 'true' or '$(MSBuildRuntimeType)' != 'Full'">true</ShouldSkipProject>
+    <ShouldSkipProject Condition="'$(MSBuildRuntimeType)' != 'Full'">true</ShouldSkipProject>
   </PropertyGroup>
 
   <ItemGroup>
diff --git a/src/Samples/ProjectCachePlugin/ProjectCachePlugin.csproj b/src/Samples/ProjectCachePlugin/ProjectCachePlugin.csproj
index 30b51c5f35e..5ba08499c68 100644
--- a/src/Samples/ProjectCachePlugin/ProjectCachePlugin.csproj
+++ b/src/Samples/ProjectCachePlugin/ProjectCachePlugin.csproj
@@ -6,7 +6,6 @@
 
     <TargetFrameworks>$(LatestDotNetCoreForMSBuild)</TargetFrameworks>
     <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(FullFrameworkTFM);$(LatestDotNetCoreForMSBuild)</TargetFrameworks>
-    <TargetFrameworks Condition="'$(MonoBuild)'=='true'">$(RuntimeOutputTargetFrameworks)</TargetFrameworks>
   </PropertyGroup>
   <ItemGroup>
     <ProjectReference Include="..\..\Build\Microsoft.Build.csproj" />
diff --git a/src/Shared/BuildEnvironmentHelper.cs b/src/Shared/BuildEnvironmentHelper.cs
index b2f5106d38d..2f3dce9f66b 100644
--- a/src/Shared/BuildEnvironmentHelper.cs
+++ b/src/Shared/BuildEnvironmentHelper.cs
@@ -120,6 +120,7 @@ private static BuildEnvironment Initialize()
                 BuildEnvironmentMode.None,
                 msbuildExePath,
                 runningTests: s_runningTests(),
+                runningInMSBuildExe: false,
                 runningInVisualStudio: false,
                 visualStudioPath: null);
         }
@@ -153,6 +154,7 @@ private static BuildEnvironment TryFromVisualStudioProcess()
                 BuildEnvironmentMode.VisualStudio,
                 msBuildExe,
                 runningTests: false,
+                runningInMSBuildExe: false,
                 runningInVisualStudio: true,
                 visualStudioPath: vsRoot);
         }
@@ -173,6 +175,7 @@ private static BuildEnvironment TryFromMSBuildProcess()
                     BuildEnvironmentMode.VisualStudio,
                     msBuildExe,
                     runningTests: false,
+                    runningInMSBuildExe: true,
                     runningInVisualStudio: false,
                     visualStudioPath: GetVsRootFromMSBuildAssembly(msBuildExe));
             }
@@ -182,6 +185,7 @@ private static BuildEnvironment TryFromMSBuildProcess()
                 BuildEnvironmentMode.Standalone,
                 msBuildExe,
                 runningTests: false,
+                runningInMSBuildExe: true,
                 runningInVisualStudio: false,
                 visualStudioPath: null);
         }
@@ -223,6 +227,7 @@ private static BuildEnvironment TryFromMSBuildAssembly()
                     BuildEnvironmentMode.Standalone,
                     msBuildPath,
                     runningTests: s_runningTests(),
+                    runningInMSBuildExe: false,
                     runningInVisualStudio: false,
                     visualStudioPath: null);
             }
@@ -244,6 +249,7 @@ private static BuildEnvironment TryFromMSBuildExeUnderVisualStudio(string msbuil
                         BuildEnvironmentMode.VisualStudio,
                         GetMSBuildExeFromVsRoot(visualStudioRoot),
                         runningTests: s_runningTests(),
+                        runningInMSBuildExe: false,
                         runningInVisualStudio: false,
                         visualStudioPath: visualStudioRoot);
             }
@@ -274,6 +280,7 @@ private static BuildEnvironment TryFromDevConsole()
                 BuildEnvironmentMode.VisualStudio,
                 GetMSBuildExeFromVsRoot(vsInstallDir),
                 runningTests: false,
+                runningInMSBuildExe: false,
                 runningInVisualStudio: false,
                 visualStudioPath: vsInstallDir);
         }
@@ -306,6 +313,7 @@ private static BuildEnvironment TryFromSetupApi()
                 BuildEnvironmentMode.VisualStudio,
                 GetMSBuildExeFromVsRoot(instances[0].Path),
                 runningTests: false,
+                runningInMSBuildExe: false,
                 runningInVisualStudio: false,
                 visualStudioPath: instances[0].Path);
         }
@@ -338,6 +346,7 @@ private static BuildEnvironment TryFromStandaloneMSBuildExe(string msBuildExePat
                     BuildEnvironmentMode.Standalone,
                     msBuildExePath,
                     runningTests: s_runningTests(),
+                    runningInMSBuildExe: false,
                     runningInVisualStudio: false,
                     visualStudioPath: null);
             }
@@ -527,13 +536,15 @@ internal enum BuildEnvironmentMode
     /// </summary>
     internal sealed class BuildEnvironment
     {
-        public BuildEnvironment(BuildEnvironmentMode mode, string currentMSBuildExePath, bool runningTests, bool runningInVisualStudio, string visualStudioPath)
+        public BuildEnvironment(BuildEnvironmentMode mode, string currentMSBuildExePath, bool runningTests, bool runningInMSBuildExe, bool runningInVisualStudio,
+                string visualStudioPath)
         {
             FileInfo currentMSBuildExeFile = null;
             DirectoryInfo currentToolsDirectory = null;
 
             Mode = mode;
             RunningTests = runningTests;
+            RunningInMSBuildExe = runningInMSBuildExe;
             RunningInVisualStudio = runningInVisualStudio;
             CurrentMSBuildExePath = currentMSBuildExePath;
             VisualStudioInstallRootDirectory = visualStudioPath;
@@ -620,6 +631,11 @@ NativeMethodsShared.ProcessorArchitectures.X64 or NativeMethodsShared.ProcessorA
         /// </summary>
         internal bool RunningTests { get; }
 
+        /// <summary>
+        /// Returns true when the entry point application is MSBuild.exe.
+        /// </summary>
+        internal bool RunningInMSBuildExe { get; }
+
         /// <summary>
         /// Returns true when the entry point application is Visual Studio.
         /// </summary>
diff --git a/src/Shared/CommunicationsUtilities.cs b/src/Shared/CommunicationsUtilities.cs
index b10887f23c3..314301eec05 100644
--- a/src/Shared/CommunicationsUtilities.cs
+++ b/src/Shared/CommunicationsUtilities.cs
@@ -240,23 +240,48 @@ internal static int NodeConnectionTimeout
             get { return GetIntegerVariableOrDefault("MSBUILDNODECONNECTIONTIMEOUT", DefaultNodeConnectionTimeout); }
         }
 
+#if NETFRAMEWORK
         /// <summary>
-        /// Get environment block
+        /// Get environment block.
         /// </summary>
         [DllImport("kernel32.dll", SetLastError = true, CharSet = CharSet.Unicode)]
         internal static extern unsafe char* GetEnvironmentStrings();
 
         /// <summary>
-        /// Free environment block
+        /// Free environment block.
         /// </summary>
         [DllImport("kernel32.dll", SetLastError = true, CharSet = CharSet.Unicode)]
         internal static extern unsafe bool FreeEnvironmentStrings(char* pStrings);
 
         /// <summary>
-        /// Copied from the BCL implementation to eliminate some expensive security asserts.
+        /// Set environment variable P/Invoke.
+        /// </summary>
+        [DllImport("kernel32.dll", EntryPoint = "SetEnvironmentVariable", SetLastError = true, CharSet = CharSet.Unicode)]
+        [return: MarshalAs(UnmanagedType.Bool)]
+        private static extern bool SetEnvironmentVariableNative(string name, string value);
+
+        /// <summary>
+        /// Sets an environment variable using P/Invoke to workaround the .NET Framework BCL implementation.
+        /// </summary>
+        /// <remarks>
+        /// .NET Framework implementation of SetEnvironmentVariable checks the length of the value and throws an exception if
+        /// it's greater than or equal to 32,767 characters. This limitation does not exist on modern Windows or .NET.
+        /// </remarks>
+        internal static void SetEnvironmentVariable(string name, string value)
+        {
+            if (!SetEnvironmentVariableNative(name, value))
+            {
+                throw Marshal.GetExceptionForHR(Marshal.GetHRForLastWin32Error());
+            }
+        }
+
+        /// <summary>
         /// Returns key value pairs of environment variables in a new dictionary
         /// with a case-insensitive key comparer.
         /// </summary>
+        /// <remarks>
+        /// Copied from the BCL implementation to eliminate some expensive security asserts on .NET Framework.
+        /// </remarks>
         internal static Dictionary<string, string> GetEnvironmentVariables()
         {
 #if !CLR2COMPATIBILITY
@@ -268,107 +293,121 @@ internal static Dictionary<string, string> GetEnvironmentVariables()
 
             Dictionary<string, string> table = new Dictionary<string, string>(200, StringComparer.OrdinalIgnoreCase); // Razzle has 150 environment variables
 
-            if (NativeMethodsShared.IsWindows)
+            unsafe
             {
-                unsafe
+                char* pEnvironmentBlock = null;
+
+                try
                 {
-                    char* pEnvironmentBlock = null;
+                    pEnvironmentBlock = GetEnvironmentStrings();
+                    if (pEnvironmentBlock == null)
+                    {
+                        throw new OutOfMemoryException();
+                    }
 
-                    try
+                    // Search for terminating \0\0 (two unicode \0's).
+                    char* pEnvironmentBlockEnd = pEnvironmentBlock;
+                    while (!(*pEnvironmentBlockEnd == '\0' && *(pEnvironmentBlockEnd + 1) == '\0'))
                     {
-                        pEnvironmentBlock = GetEnvironmentStrings();
-                        if (pEnvironmentBlock == null)
+                        pEnvironmentBlockEnd++;
+                    }
+                    long stringBlockLength = pEnvironmentBlockEnd - pEnvironmentBlock;
+
+                    // Copy strings out, parsing into pairs and inserting into the table.
+                    // The first few environment variable entries start with an '='!
+                    // The current working directory of every drive (except for those drives
+                    // you haven't cd'ed into in your DOS window) are stored in the
+                    // environment block (as =C:=pwd) and the program's exit code is
+                    // as well (=ExitCode=00000000)  Skip all that start with =.
+                    // Read docs about Environment Blocks on MSDN's CreateProcess page.
+
+                    // Format for GetEnvironmentStrings is:
+                    // (=HiddenVar=value\0 | Variable=value\0)* \0
+                    // See the description of Environment Blocks in MSDN's
+                    // CreateProcess page (null-terminated array of null-terminated strings).
+                    // Note the =HiddenVar's aren't always at the beginning.
+                    for (int i = 0; i < stringBlockLength; i++)
+                    {
+                        int startKey = i;
+
+                        // Skip to key
+                        // On some old OS, the environment block can be corrupted.
+                        // Some lines will not have '=', so we need to check for '\0'.
+                        while (*(pEnvironmentBlock + i) != '=' && *(pEnvironmentBlock + i) != '\0')
                         {
-                            throw new OutOfMemoryException();
+                            i++;
                         }
 
-                        // Search for terminating \0\0 (two unicode \0's).
-                        char* pEnvironmentBlockEnd = pEnvironmentBlock;
-                        while (!(*pEnvironmentBlockEnd == '\0' && *(pEnvironmentBlockEnd + 1) == '\0'))
+                        if (*(pEnvironmentBlock + i) == '\0')
                         {
-                            pEnvironmentBlockEnd++;
+                            continue;
                         }
-                        long stringBlockLength = pEnvironmentBlockEnd - pEnvironmentBlock;
-
-                        // Copy strings out, parsing into pairs and inserting into the table.
-                        // The first few environment variable entries start with an '='!
-                        // The current working directory of every drive (except for those drives
-                        // you haven't cd'ed into in your DOS window) are stored in the
-                        // environment block (as =C:=pwd) and the program's exit code is
-                        // as well (=ExitCode=00000000)  Skip all that start with =.
-                        // Read docs about Environment Blocks on MSDN's CreateProcess page.
-
-                        // Format for GetEnvironmentStrings is:
-                        // (=HiddenVar=value\0 | Variable=value\0)* \0
-                        // See the description of Environment Blocks in MSDN's
-                        // CreateProcess page (null-terminated array of null-terminated strings).
-                        // Note the =HiddenVar's aren't always at the beginning.
-                        for (int i = 0; i < stringBlockLength; i++)
-                        {
-                            int startKey = i;
 
-                            // Skip to key
-                            // On some old OS, the environment block can be corrupted.
-                            // Some lines will not have '=', so we need to check for '\0'.
-                            while (*(pEnvironmentBlock + i) != '=' && *(pEnvironmentBlock + i) != '\0')
+                        // Skip over environment variables starting with '='
+                        if (i - startKey == 0)
+                        {
+                            while (*(pEnvironmentBlock + i) != 0)
                             {
                                 i++;
                             }
 
-                            if (*(pEnvironmentBlock + i) == '\0')
-                            {
-                                continue;
-                            }
+                            continue;
+                        }
 
-                            // Skip over environment variables starting with '='
-                            if (i - startKey == 0)
-                            {
-                                while (*(pEnvironmentBlock + i) != 0)
-                                {
-                                    i++;
-                                }
+                        string key = new string(pEnvironmentBlock, startKey, i - startKey);
+                        i++;
 
-                                continue;
-                            }
+                        // skip over '='
+                        int startValue = i;
 
-                            string key = new string(pEnvironmentBlock, startKey, i - startKey);
+                        while (*(pEnvironmentBlock + i) != 0)
+                        {
+                            // Read to end of this entry
                             i++;
+                        }
 
-                            // skip over '='
-                            int startValue = i;
-
-                            while (*(pEnvironmentBlock + i) != 0)
-                            {
-                                // Read to end of this entry
-                                i++;
-                            }
-
-                            string value = new string(pEnvironmentBlock, startValue, i - startValue);
+                        string value = new string(pEnvironmentBlock, startValue, i - startValue);
 
-                            // skip over 0 handled by for loop's i++
-                            table[key] = value;
-                        }
+                        // skip over 0 handled by for loop's i++
+                        table[key] = value;
                     }
-                    finally
+                }
+                finally
+                {
+                    if (pEnvironmentBlock != null)
                     {
-                        if (pEnvironmentBlock != null)
-                        {
-                            FreeEnvironmentStrings(pEnvironmentBlock);
-                        }
+                        FreeEnvironmentStrings(pEnvironmentBlock);
                     }
                 }
             }
-            else
+
+            return table;
+        }
+
+#else // NETFRAMEWORK
+
+        /// <summary>
+        /// Sets an environment variable using <see cref="Environment.SetEnvironmentVariable(string,string)" />.
+        /// </summary>
+        internal static void SetEnvironmentVariable(string name, string value)
+            => Environment.SetEnvironmentVariable(name, value);
+
+        /// <summary>
+        /// Returns key value pairs of environment variables in a new dictionary
+        /// with a case-insensitive key comparer.
+        /// </summary>
+        internal static Dictionary<string, string> GetEnvironmentVariables()
+        {
+            var vars = Environment.GetEnvironmentVariables();
+
+            Dictionary<string, string> table = new Dictionary<string, string>(vars.Count, StringComparer.OrdinalIgnoreCase);
+            foreach (var key in vars.Keys)
             {
-                var vars = Environment.GetEnvironmentVariables();
-                foreach (var key in vars.Keys)
-                {
-                    table[(string)key] = (string)vars[key];
-                }
+                table[(string)key] = (string)vars[key];
             }
-
             return table;
         }
+#endif // NETFRAMEWORK
 
         /// <summary>
         /// Updates the environment to match the provided dictionary.
@@ -377,19 +416,23 @@ internal static void SetEnvironment(IDictionary<string, string> newEnvironment)
         {
             if (newEnvironment != null)
             {
-                // First, empty out any new variables
-                foreach (KeyValuePair<string, string> entry in CommunicationsUtilities.GetEnvironmentVariables())
+                // First, delete all no longer set variables
+                Dictionary<string, string> currentEnvironment = GetEnvironmentVariables();
+                foreach (KeyValuePair<string, string> entry in currentEnvironment)
                 {
                     if (!newEnvironment.ContainsKey(entry.Key))
                     {
-                        Environment.SetEnvironmentVariable(entry.Key, null);
+                        SetEnvironmentVariable(entry.Key, null);
                     }
                 }
 
-                // Then, make sure the old ones have their old values.
+                // Then, make sure the new ones have their new values.
                 foreach (KeyValuePair<string, string> entry in newEnvironment)
                 {
-                    Environment.SetEnvironmentVariable(entry.Key, entry.Value);
+                    if (!currentEnvironment.TryGetValue(entry.Key, out string currentValue) || currentValue != entry.Value)
+                    {
+                        SetEnvironmentVariable(entry.Key, entry.Value);
+                    }
                 }
             }
         }
@@ -426,7 +469,7 @@ internal static void WriteIntForHandshake(this PipeStream stream, int value)
         internal static void ReadEndOfHandshakeSignal(
             this PipeStream stream,
             bool isProvider
-#if NETCOREAPP2_1_OR_GREATER || MONO
+#if NETCOREAPP2_1_OR_GREATER
             , int timeout
 #endif
             )
@@ -436,7 +479,7 @@ bool isProvider
 #pragma warning disable SA1111, SA1009 // Closing parenthesis should be on line of last parameter
             int valueRead = stream.ReadIntForHandshake(
                 byteToAccept: null
-#if NETCOREAPP2_1_OR_GREATER || MONO
+#if NETCOREAPP2_1_OR_GREATER
             , timeout
 #endif
                 );
@@ -462,7 +505,7 @@ bool isProvider
         /// If specified, leading byte matches one in the supplied array if any, returns rejection byte and throws IOException.
         /// </summary>
         internal static int ReadIntForHandshake(this PipeStream stream, byte? byteToAccept
-#if NETCOREAPP2_1_OR_GREATER || MONO
+#if NETCOREAPP2_1_OR_GREATER
             , int timeout
 #endif
             )
@@ -470,7 +513,7 @@ internal static int ReadIntForHandshake(this PipeStream stream, byte? byteToAcce
         {
             byte[] bytes = new byte[4];
 
-#if NETCOREAPP2_1_OR_GREATER || MONO
+#if NETCOREAPP2_1_OR_GREATER
             if (!NativeMethodsShared.IsWindows)
             {
                 // Enforce a minimum timeout because the Windows code can pass
diff --git a/src/Shared/Constants.cs b/src/Shared/Constants.cs
index 0e596c6cf56..77978ac3749 100644
--- a/src/Shared/Constants.cs
+++ b/src/Shared/Constants.cs
@@ -69,6 +69,17 @@ internal static class MSBuildConstants
 
         internal const string MSBuildDummyGlobalPropertyHeader = "MSBuildProjectInstance";
 
+        /// <summary>
+        /// A property set during an implicit restore (/restore) or explicit restore (/t:restore) to ensure that the evaluations are not re-used during build
+        /// </summary>
+        internal const string MSBuildRestoreSessionId = nameof(MSBuildRestoreSessionId);
+
+        /// <summary>
+        /// A property set during an implicit restore (/restore) or explicit restore (/t:restore) to indicate that a restore is executing.
+        /// </summary>
+        internal const string MSBuildIsRestoring = nameof(MSBuildIsRestoring);
+
+
         /// <summary>
         /// The most current VSGeneralAssemblyVersion known to this version of MSBuild.
         /// </summary>
diff --git a/src/Shared/ErrorUtilities.cs b/src/Shared/ErrorUtilities.cs
index 58a982de12e..9bbd30e09c8 100644
--- a/src/Shared/ErrorUtilities.cs
+++ b/src/Shared/ErrorUtilities.cs
@@ -601,6 +601,32 @@ internal static void ThrowObjectDisposed(string objectName)
         {
             throw new ObjectDisposedException(objectName);
         }
+
+        /// <summary>
+        /// A utility that verifies the parameters provided to a standard ICollection<typeparamref name="T"/>.CopyTo call.
+        /// </summary>
+        /// <exception cref="ArgumentNullException">If <paramref name="array"/> is null.</exception>
+        /// <exception cref="ArgumentOutOfRangeException">If <paramref name="arrayIndex"/> falls outside of the bounds <paramref name="array"/>.</exception>
+        /// <exception cref="ArgumentException">If there is insufficient capacity to copy the collection contents into <paramref name="array"/>
+        /// when starting at <paramref name="arrayIndex"/>.</exception>
+        internal static void VerifyCollectionCopyToArguments<T>(
+            T[] array,
+            string arrayParameterName,
+            int arrayIndex,
+            string arrayIndexParameterName,
+            int requiredCapacity)
+        {
+            VerifyThrowArgumentNull(array, arrayParameterName);
+            VerifyThrowArgumentOutOfRange(arrayIndex >= 0 && arrayIndex < array.Length, arrayIndexParameterName);
+
+            int arrayCapacity = array.Length - arrayIndex;
+            if (requiredCapacity > arrayCapacity)
+            {
+                throw new ArgumentException(
+                    ResourceUtilities.GetResourceString("Shared.CollectionCopyToFailureProvidedArrayIsTooSmall"),
+                    arrayParameterName);
+            }
+        }
 #endif
     }
 }
diff --git a/src/Shared/FileMatcher.cs b/src/Shared/FileMatcher.cs
index e50a6b860d3..479bd5ac67a 100644
--- a/src/Shared/FileMatcher.cs
+++ b/src/Shared/FileMatcher.cs
@@ -1697,9 +1697,6 @@ internal static bool IsMatch(ReadOnlySpan<char> input, string pattern)
             // Store the information whether the tail was checked when a pattern "*?" occurred
             bool tailChecked = false;
 
-#if MONO    // MONO doesn't support local functions
-            Func<char, char, int, int, bool> CompareIgnoreCase = (inputChar, patternChar, iIndex, pIndex) =>
-#else
             // Function for comparing two characters, ignoring case
             // PERF NOTE:
             // Having a local function instead of a variable increases the speed by approx. 2 times.
@@ -1708,7 +1705,6 @@ internal static bool IsMatch(ReadOnlySpan<char> input, string pattern)
             // when we have to compare two non ASCII characters. Using just string.Compare for
             // character comparison, would reduce the speed by approx. 5 times.
             bool CompareIgnoreCase(ref ReadOnlySpan<char> input, int iIndex, int pIndex)
-#endif
             {
                 char inputChar = input[iIndex];
                 char patternChar = pattern[pIndex];
@@ -1728,9 +1724,6 @@ bool CompareIgnoreCase(ref ReadOnlySpan<char> input, int iIndex, int pIndex)
                 }
                 return MemoryExtensions.Equals(input.Slice(iIndex, 1), pattern.AsSpan(pIndex, 1), StringComparison.OrdinalIgnoreCase);
             }
-#if MONO
-            ; // The end of the CompareIgnoreCase anonymous function
-#endif
 
             while (inputIndex < inputLength)
             {
diff --git a/src/Shared/FrameworkLocationHelper.cs b/src/Shared/FrameworkLocationHelper.cs
index 3ff6eb90662..51d551eef38 100644
--- a/src/Shared/FrameworkLocationHelper.cs
+++ b/src/Shared/FrameworkLocationHelper.cs
@@ -873,12 +873,6 @@ internal static string FindDotNetFrameworkPath(
         /// </summary>
         internal static string GenerateProgramFiles32()
         {
-            // With Mono, all we look for in Files32 should be found in the below location
-            if (!NativeMethodsShared.IsWindows && NativeMethodsShared.IsMono)
-            {
-                return Path.Combine(NativeMethodsShared.FrameworkBasePath, "xbuild");
-            }
-
             // On a 64 bit machine we always want to use the program files x86.  If we are running as a 64 bit process then this variable will be set correctly
             // If we are on a 32 bit machine or running as a 32 bit process then this variable will be null and the programFiles variable will be correct.
             string programFilesX86 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86);
@@ -897,12 +891,6 @@ internal static string GenerateProgramFiles32()
         /// </summary>
         internal static string GenerateProgramFiles64()
         {
-            // With Mono, all we look for in Files32 should be found in the below location
-            if (!NativeMethodsShared.IsWindows && NativeMethodsShared.IsMono)
-            {
-                return Path.Combine(NativeMethodsShared.FrameworkBasePath, "xbuild");
-            }
-
             string programFilesX64;
             if (string.Equals(programFiles, programFiles32))
             {
diff --git a/src/Shared/NodeEndpointOutOfProcBase.cs b/src/Shared/NodeEndpointOutOfProcBase.cs
index 76705f4a6cb..6c12448b1ad 100644
--- a/src/Shared/NodeEndpointOutOfProcBase.cs
+++ b/src/Shared/NodeEndpointOutOfProcBase.cs
@@ -33,12 +33,12 @@ internal abstract class NodeEndpointOutOfProcBase : INodeEndpoint
     {
         #region Private Data
 
-#if NETCOREAPP2_1_OR_GREATER || MONO
+#if NETCOREAPP2_1_OR_GREATER
         /// <summary>
         /// The amount of time to wait for the client to connect to the host.
         /// </summary>
         private const int ClientConnectTimeout = 60000;
-#endif // NETCOREAPP2_1 || MONO
+#endif // NETCOREAPP2_1
 
         /// <summary>
         /// The size of the buffers to use for named pipes
@@ -212,51 +212,46 @@ internal void InternalConstruct(string pipeName = null)
             pipeName ??= NamedPipeUtil.GetPlatformSpecificPipeName();
 
 #if FEATURE_PIPE_SECURITY && FEATURE_NAMED_PIPE_SECURITY_CONSTRUCTOR
-            if (!NativeMethodsShared.IsMono)
-            {
-                SecurityIdentifier identifier = WindowsIdentity.GetCurrent().Owner;
-                PipeSecurity security = new PipeSecurity();
-
-                // Restrict access to just this account.  We set the owner specifically here, and on the
-                // pipe client side they will check the owner against this one - they must have identical
-                // SIDs or the client will reject this server.  This is used to avoid attacks where a
-                // hacked server creates a less restricted pipe in an attempt to lure us into using it and
-                // then sending build requests to the real pipe client (which is the MSBuild Build Manager.)
-                PipeAccessRule rule = new PipeAccessRule(identifier, PipeAccessRights.ReadWrite, AccessControlType.Allow);
-                security.AddAccessRule(rule);
-                security.SetOwner(identifier);
-
-                _pipeServer = new NamedPipeServerStream(
-                    pipeName,
-                    PipeDirection.InOut,
-                    1, // Only allow one connection at a time.
-                    PipeTransmissionMode.Byte,
-                    PipeOptions.Asynchronous | PipeOptions.WriteThrough
+            SecurityIdentifier identifier = WindowsIdentity.GetCurrent().Owner;
+            PipeSecurity security = new PipeSecurity();
+
+            // Restrict access to just this account.  We set the owner specifically here, and on the
+            // pipe client side they will check the owner against this one - they must have identical
+            // SIDs or the client will reject this server.  This is used to avoid attacks where a
+            // hacked server creates a less restricted pipe in an attempt to lure us into using it and
+            // then sending build requests to the real pipe client (which is the MSBuild Build Manager.)
+            PipeAccessRule rule = new PipeAccessRule(identifier, PipeAccessRights.ReadWrite, AccessControlType.Allow);
+            security.AddAccessRule(rule);
+            security.SetOwner(identifier);
+
+            _pipeServer = new NamedPipeServerStream(
+                pipeName,
+                PipeDirection.InOut,
+                1, // Only allow one connection at a time.
+                PipeTransmissionMode.Byte,
+                PipeOptions.Asynchronous | PipeOptions.WriteThrough
 #if FEATURE_PIPEOPTIONS_CURRENTUSERONLY
-                    | PipeOptions.CurrentUserOnly
-#endif
-                    ,
-                    PipeBufferSize, // Default input buffer
-                    PipeBufferSize,  // Default output buffer
-                    security,
-                    HandleInheritability.None);
-            }
-            else
+                | PipeOptions.CurrentUserOnly
 #endif
-            {
-                _pipeServer = new NamedPipeServerStream(
-                    pipeName,
-                    PipeDirection.InOut,
-                    1, // Only allow one connection at a time.
-                    PipeTransmissionMode.Byte,
-                    PipeOptions.Asynchronous | PipeOptions.WriteThrough
+                ,
+                PipeBufferSize, // Default input buffer
+                PipeBufferSize,  // Default output buffer
+                security,
+                HandleInheritability.None);
+#else
+            _pipeServer = new NamedPipeServerStream(
+                pipeName,
+                PipeDirection.InOut,
+                1, // Only allow one connection at a time.
+                PipeTransmissionMode.Byte,
+                PipeOptions.Asynchronous | PipeOptions.WriteThrough
 #if FEATURE_PIPEOPTIONS_CURRENTUSERONLY
-                    | PipeOptions.CurrentUserOnly
+                | PipeOptions.CurrentUserOnly
+#endif
+                ,
+                PipeBufferSize, // Default input buffer
+                PipeBufferSize);  // Default output buffer
 #endif
-                    ,
-                    PipeBufferSize, // Default input buffer
-                    PipeBufferSize);  // Default output buffer
-            }
         }
 
         #endregion
@@ -402,7 +397,7 @@ private void PacketPumpProc()
 #pragma warning disable SA1111, SA1009 // Closing parenthesis should be on line of last parameter
                             int handshakePart = _pipeServer.ReadIntForHandshake(
                                 byteToAccept: i == 0 ? (byte?)CommunicationsUtilities.handshakeVersion : null /* this will disconnect a < 16.8 host; it expects leading 00 or F5 or 06. 0x00 is a wildcard */
-#if NETCOREAPP2_1_OR_GREATER || MONO
+#if NETCOREAPP2_1_OR_GREATER
                             , ClientConnectTimeout /* wait a long time for the handshake from this side */
 #endif
                             );
@@ -420,7 +415,7 @@ private void PacketPumpProc()
                         if (gotValidConnection)
                         {
                             // To ensure that our handshake and theirs have the same number of bytes, receive and send a magic number indicating EOS.
-#if NETCOREAPP2_1_OR_GREATER || MONO
+#if NETCOREAPP2_1_OR_GREATER
                             _pipeServer.ReadEndOfHandshakeSignal(false, ClientConnectTimeout); /* wait a long time for the handshake from this side */
 #else
                             _pipeServer.ReadEndOfHandshakeSignal(false);
diff --git a/src/Shared/Resources/Strings.shared.resx b/src/Shared/Resources/Strings.shared.resx
index 9fb94751e2f..fc738f26816 100644
--- a/src/Shared/Resources/Strings.shared.resx
+++ b/src/Shared/Resources/Strings.shared.resx
@@ -1,20 +1,96 @@
 Ôªø<?xml version="1.0" encoding="utf-8"?>
 <root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
   <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
     <xsd:element name="root" msdata:IsDataSet="true">
       <xsd:complexType>
         <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" use="required" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
           <xsd:element name="data">
             <xsd:complexType>
               <xsd:sequence>
                 <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                 <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
               </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
-              <xsd:attribute name="UESanitized" type="xsd:boolean" msdata:Ordinal="3" />
-              <xsd:attribute name="Visibility" type="Visibility_Type" msdata:Ordinal="4" />
-              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="5" />
-              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="6" />
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
             </xsd:complexType>
           </xsd:element>
           <xsd:element name="resheader">
@@ -28,130 +104,123 @@
         </xsd:choice>
       </xsd:complexType>
     </xsd:element>
-    <xsd:simpleType name="Visibility_Type">
-      <xsd:restriction base="xsd:string">
-        <xsd:enumeration value="Public" />
-        <xsd:enumeration value="Obsolete" />
-        <xsd:enumeration value="Private_OM" />
-      </xsd:restriction>
-    </xsd:simpleType>
   </xsd:schema>
   <resheader name="resmimetype">
     <value>text/microsoft-resx</value>
   </resheader>
   <resheader name="version">
-    <value>1.3</value>
+    <value>2.0</value>
   </resheader>
   <resheader name="reader">
-    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <resheader name="writer">
-    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
-  <data name="BuildAborted" Visibility="Public">
+  <data name="BuildAborted" xml:space="preserve">
     <value>MSB4188: Build was canceled.</value>
     <comment>{StrBegin="MSB4188: "} Error when the build stops suddenly for some reason. For example, because a child node died.</comment>
   </data>
-  <data name="BuildEngineCallbacksInTaskHostUnsupported" Visibility="Public">
+  <data name="BuildEngineCallbacksInTaskHostUnsupported" xml:space="preserve">
     <value>MSB5022: The MSBuild task host does not support running tasks that perform IBuildEngine callbacks. If you wish to perform these operations, please run your task in the core MSBuild process instead.  A task will automatically execute in the task host if the UsingTask has been attributed with a "Runtime" or "Architecture" value, or the task invocation has been attributed with an "MSBuildRuntime" or "MSBuildArchitecture" value, that does not match the current runtime or architecture of MSBuild.</value>
     <comment>{StrBegin="MSB5022: "} "Runtime", "Architecture", "MSBuildRuntime", and "MSBuildArchitecture" are all attributes in the project file, and thus should not be localized.</comment>
   </data>
-  <data name="BuildStarted" UESanitized="false" Visibility="Public">
+  <data name="BuildStarted" xml:space="preserve">
     <value>Build started.</value>
   </data>
-  <data name="ConflictingTaskAssembly" Visibility="Public">
+  <data name="ConflictingTaskAssembly" xml:space="preserve">
     <value>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</value>
     <comment>{StrBegin="MSB4008: "}UE: This message is shown when the type/class of a task cannot be resolved uniquely from a single assembly.</comment>
   </data>
-  <data name="ExpectedEventToBeSerializable" Visibility="Public">
+  <data name="ExpectedEventToBeSerializable" xml:space="preserve">
     <value>Event type "{0}" was expected to be serializable using the .NET serializer. The event was not serializable and has been ignored.</value>
   </data>
-  <data name="DeprecatedEventSerialization" Visibility="Public">
+  <data name="DeprecatedEventSerialization" xml:space="preserve">
     <value>Usage of unsecure BinaryFormatter during serialization of custom event type '{0}'. This will be deprecated soon. Please use Extended*EventArgs instead. More info: https://aka.ms/msbuild/eventargs</value>
   </data>
-  <data name="FileLocation" Visibility="Public">
+  <data name="FileLocation" xml:space="preserve">
     <value>{0} ({1},{2})</value>
     <comment>A file location to be embedded in a string.</comment>
   </data>
-  <data name="ModifyingTaskHostEnvironmentHeader" Visibility="Public">
+  <data name="ModifyingTaskHostEnvironmentHeader" xml:space="preserve">
     <value>Making the following modifications to the environment received from the parent node before applying it to the task host:</value>
     <comment>Only ever used when MSBuild is run under a "secret" environment variable switch, MSBuildTaskHostUpdateEnvironmentAndLog=1</comment>
   </data>
-  <data name="ModifyingTaskHostEnvironmentVariable" Visibility="Public">
+  <data name="ModifyingTaskHostEnvironmentVariable" xml:space="preserve">
     <value>  Setting '{0}' to '{1}' rather than the parent environment's value, '{2}'.</value>
     <comment>Only ever used when MSBuild is run under a "secret" environment variable switch, MSBuildTaskHostUpdateEnvironmentAndLog=1</comment>
   </data>
-  <data name="InvalidProjectFile" Visibility="Public">
+  <data name="InvalidProjectFile" xml:space="preserve">
     <value>MSB4025: The project file could not be loaded. {0}</value>
     <comment>{StrBegin="MSB4025: "}UE: This message is shown when the project file given to the engine cannot be loaded because the filename/path is
     invalid, or due to lack of permissions, or incorrect XML. The project filename is not part of the message because it is
     provided separately to loggers.
     LOCALIZATION: {0} is a localized message from the CLR/FX explaining why the project is invalid.</comment>
   </data>
-  <data name="InvalidVerbosity" Visibility="Public">
+  <data name="InvalidVerbosity" xml:space="preserve">
     <value>MSB4103: "{0}" is not a valid logger verbosity level.</value>
     <comment>{StrBegin="MSB4103: "}</comment>
   </data>
-  <data name="InvalidLogFileFormat" Visibility="Public">
+  <data name="InvalidLogFileFormat" xml:space="preserve">
     <value>MSB4233: There was an exception while reading the log file: {0}</value>
     <comment>{StrBegin="MSB4233: "}This is shown when the Binary Logger can't read the log file.</comment>
   </data>
-  <data name="MissingProject" Visibility="Private_OM">
+  <data name="MissingProject" xml:space="preserve">
     <value>MSBuild is expecting a valid "{0}" object.</value>
   </data>
-  <data name="UnrecognizedToolsVersion" Visibility="Public">
+  <data name="UnrecognizedToolsVersion" xml:space="preserve">
     <value>MSB4132: The tools version "{0}" is unrecognized. Available tools versions are {1}.</value>
     <comment>{StrBegin="MSB4132: "}LOCALIZATION: {1} contains a comma separated list.</comment>
   </data>
-  <data name="NameInvalid" Visibility="Public">
+  <data name="NameInvalid" xml:space="preserve">
     <value>MSB5016: The name "{0}" contains an invalid character "{1}".</value>
     <comment>{StrBegin="MSB5016: "}</comment>
   </data>
-  <data name="Shared.CannotChangeItemSpecModifiers" Visibility="Private_OM">
+  <data name="Shared.CannotChangeItemSpecModifiers" xml:space="preserve">
     <value>"{0}" is a reserved item metadata, and cannot be modified or deleted.</value>
     <comment>UE: Tasks and OM users are not allowed to remove or change the value of the built-in metadata on items e.g. the meta-data "FullPath", "RelativeDir", etc. are reserved.</comment>
   </data>
-  <data name="Shared.CannotConvertStringToBool" Visibility="Public">
+  <data name="Shared.CannotConvertStringToBool" xml:space="preserve">
     <value>The string "{0}" cannot be converted to a boolean (true/false) value.</value>
   </data>
-  <data name="Shared.FailedCreatingTempFile" Visibility="Public">
+  <data name="Shared.FailedCreatingTempFile" xml:space="preserve">
     <value>MSB5003: Failed to create a temporary file. Temporary files folder is full or its path is incorrect. {0}</value>
     <comment>{StrBegin="MSB5003: "}</comment>
   </data>
-  <data name="Shared.FailedDeletingTempFile" Visibility="Public">
+  <data name="Shared.FailedDeletingTempFile" xml:space="preserve">
     <value>MSB5018: Failed to delete the temporary file "{0}". {1}</value>
     <comment>{StrBegin="MSB5018: "}</comment>
   </data>
-  <data name="Shared.InvalidFilespecForTransform" Visibility="Public">
+  <data name="Shared.InvalidFilespecForTransform" xml:space="preserve">
     <value>The item metadata "%({0})" cannot be applied to the path "{1}". {2}</value>
     <comment>UE: This message is shown when the user tries to perform path manipulations using one of the built-in item metadata e.g. %(RootDir), on an item-spec that's not a valid path. LOCALIZATION: "{2}" is a localized message from a CLR/FX exception.</comment>
   </data>
-  <data name="TaskNotMarshalByRef" Visibility="Public">
+  <data name="TaskNotMarshalByRef" xml:space="preserve">
     <value>MSB4077: The "{0}" task has been marked with the attribute LoadInSeparateAppDomain, but does not derive from MarshalByRefObject. Check that the task derives from MarshalByRefObject or AppDomainIsolatedTask.</value>
     <comment>{StrBegin="MSB4077: "}LOCALIZATION: &lt;LoadInSeparateAppDomain&gt;, &lt;MarshalByRefObject&gt;, &lt;AppDomainIsolatedTask&gt; should not be localized.</comment>
   </data>
-  <data name="FrameworkLocationHelper.UnsupportedFrameworkVersion" Visibility="Private_OM">
+  <data name="FrameworkLocationHelper.UnsupportedFrameworkVersion" xml:space="preserve">
     <value>.NET Framework version "{0}" is not supported. Please specify a value from the enumeration Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.</value>
   </data>
-  <data name="FrameworkLocationHelper.UnsupportedFrameworkVersionForWindowsSdk" Visibility="Private_OM">
+  <data name="FrameworkLocationHelper.UnsupportedFrameworkVersionForWindowsSdk" xml:space="preserve">
     <value>.NET Framework version "{0}" is not supported when explicitly targeting the Windows SDK, which is only supported on .NET 4.5 and later.  Please specify a value from the enumeration Microsoft.Build.Utilities.TargetDotNetFrameworkVersion that is Version45 or above.</value>
   </data>
-  <data name="FrameworkLocationHelper.UnsupportedVisualStudioVersion" Visibility="Private_OM">
+  <data name="FrameworkLocationHelper.UnsupportedVisualStudioVersion" xml:space="preserve">
     <value>Visual Studio version "{0}" is not supported.  Please specify a value from the enumeration Microsoft.Build.Utilities.VisualStudioVersion.</value>
   </data>
-  <data name="FrameworkLocationHelper.CouldNotGenerateReferenceAssemblyDirectory">
+  <data name="FrameworkLocationHelper.CouldNotGenerateReferenceAssemblyDirectory" xml:space="preserve">
     <value>When attempting to generate a reference assembly path from the path "{0}" and the framework moniker "{1}" there was an error. {2}</value>
     <comment>No Error code because this resource will be used in an exception. The error code is discarded if it is included</comment>
   </data>
-  <data name="DirectoryNotFound" Visibility="Public">
+  <data name="DirectoryNotFound" xml:space="preserve">
     <value>Could not find directory path: {0}</value>
     <comment>Directory must exist</comment>
   </data>
-  <data name="UnauthorizedAccess" Visibility="Public">
+  <data name="UnauthorizedAccess" xml:space="preserve">
     <value>You do not have access to: {0}</value>
     <comment>Directory must have access</comment>
   </data>
-  <data name="SubCategoryForSchemaValidationErrors" Visibility="Public">
+  <data name="SubCategoryForSchemaValidationErrors" xml:space="preserve">
     <value>Schema validation</value>
     <comment>
       UE: this fragment is used to describe errors that are caused by schema validation. For example, if a normal error is
@@ -160,124 +229,123 @@
       LOCALIZATION: This fragment needs to be localized.
     </comment>
   </data>
-  <data name="Shared.KillingProcess">
+  <data name="Shared.KillingProcess" xml:space="preserve">
     <value>MSB5002: Terminating the task executable "{0}" because it did not finish within the specified limit of {1} milliseconds.</value>
     <comment>{StrBegin="MSB5002: "}</comment>
   </data>
-  <data name="Shared.ParameterCannotBeNull" Visibility="Public">
+  <data name="Shared.ParameterCannotBeNull" xml:space="preserve">
     <value>Parameter "{0}" cannot be null.</value>
   </data>
-  <data name="Shared.ParameterCannotHaveInvalidPathChars" Visibility="Public">
+  <data name="Shared.ParameterCannotHaveInvalidPathChars" xml:space="preserve">
     <value>Parameter "{0}" with assigned value "{1}" cannot have invalid path or invalid file characters.</value>
   </data>
-  <data name="Shared.ParameterCannotHaveZeroLength" Visibility="Public">
+  <data name="Shared.ParameterCannotHaveZeroLength" xml:space="preserve">
     <value>Parameter "{0}" cannot have zero length.</value>
   </data>
-  <data name="Shared.ParametersMustHaveTheSameLength" Visibility="Public">
+  <data name="Shared.ParametersMustHaveTheSameLength" xml:space="preserve">
     <value>Parameters "{0}" and "{1}" must have the same number of elements.</value>
   </data>
-  <data name="Shared.TaskResourceNotFound" Visibility="Private_OM">
+  <data name="Shared.TaskResourceNotFound" xml:space="preserve">
     <value>The resource string "{0}" for the "{1}" task cannot be found. Confirm that the resource name "{0}" is correctly spelled, and the resource exists in the task's assembly.</value>
   </data>
-  <data name="Shared.TaskResourcesNotRegistered" Visibility="Private_OM">
+  <data name="Shared.TaskResourcesNotRegistered" xml:space="preserve">
     <value>The "{0}" task has not registered its resources. In order to use the "TaskLoggingHelper.FormatResourceString()" method this task needs to register its resources either during construction, or via the "TaskResources" property.</value>
     <comment>LOCALIZATION: "TaskLoggingHelper.FormatResourceString()" and "TaskResources" should not be localized.</comment>
   </data>
-  <data name="SolutionParseDuplicateProject" Visibility="Public">
+  <data name="SolutionParseDuplicateProject" xml:space="preserve">
     <value>MSB5004: The solution file has two projects named "{0}".</value>
     <comment>{StrBegin="MSB5004: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseInvalidProjectFileNameCharacters" Visibility="Public">
+  <data name="SolutionParseInvalidProjectFileNameCharacters" xml:space="preserve">
     <value>MSB5005: Error parsing project section for project "{0}". The project file name "{1}" contains invalid characters.</value>
     <comment>{StrBegin="MSB5005: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseInvalidProjectFileNameEmpty" Visibility="Public">
+  <data name="SolutionParseInvalidProjectFileNameEmpty" xml:space="preserve">
     <value>MSB5006: Error parsing project section for project "{0}". The project file name is empty.</value>
     <comment>{StrBegin="MSB5006: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseInvalidProjectSolutionConfigurationEntry" Visibility="Public">
+  <data name="SolutionParseInvalidProjectSolutionConfigurationEntry" xml:space="preserve">
     <value>MSB5007: Error parsing the project configuration section in solution file. The entry "{0}" is invalid.</value>
     <comment>{StrBegin="MSB5007: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseInvalidSolutionConfigurationEntry" Visibility="Public">
+  <data name="SolutionParseInvalidSolutionConfigurationEntry" xml:space="preserve">
     <value>MSB5008: Error parsing the solution configuration section in solution file. The entry "{0}" is invalid.</value>
     <comment>{StrBegin="MSB5008: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseNestedProjectErrorWithNameAndGuid" Visibility="Public">
+  <data name="SolutionParseNestedProjectErrorWithNameAndGuid" xml:space="preserve">
     <value>MSB5009: Error parsing the project "{0}" section with GUID: "{1}". It is nested under "{2}" but that project is not found in the solution.</value>
     <comment>{StrBegin="MSB5009: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseNestedProjectError" Visibility="Public">
+  <data name="SolutionParseNestedProjectError" xml:space="preserve">
     <value>MSB5009: Error parsing the nested project section in solution file.</value>
     <comment>{StrBegin="MSB5009: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseNestedProjectUndefinedError" Visibility="Public">
+  <data name="SolutionParseNestedProjectUndefinedError" xml:space="preserve">
     <value>MSB5023: Error parsing the nested project section in solution file. A project with the GUID "{0}" is listed as being nested under project "{1}", but does not exist in the solution.</value>
     <comment>{StrBegin="MSB5023: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseNoHeaderError" Visibility="Public">
+  <data name="SolutionParseNoHeaderError" xml:space="preserve">
     <value>MSB5010: No file format header found.</value>
     <comment>{StrBegin="MSB5010: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseProjectDepGuidError" Visibility="Public">
+  <data name="SolutionParseProjectDepGuidError" xml:space="preserve">
     <value>MSB5011: Parent project GUID not found in "{0}" project dependency section.</value>
     <comment>{StrBegin="MSB5011: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseProjectEofError" Visibility="Public">
+  <data name="SolutionParseProjectEofError" xml:space="preserve">
     <value>MSB5012: Unexpected end-of-file reached inside "{0}" project section.</value>
     <comment>{StrBegin="MSB5012: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseProjectError" Visibility="Public">
+  <data name="SolutionParseProjectError" xml:space="preserve">
     <value>MSB5013: Error parsing a project section.</value>
     <comment>{StrBegin="MSB5013: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseVersionMismatchError" Visibility="Public">
+  <data name="SolutionParseVersionMismatchError" xml:space="preserve">
     <value>MSB5014: File format version is not recognized.  MSBuild can only read solution files between versions {0}.0 and {1}.0, inclusive.</value>
     <comment>{StrBegin="MSB5014: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionParseWebProjectPropertiesError" Visibility="Public">
+  <data name="SolutionParseWebProjectPropertiesError" xml:space="preserve">
     <value>MSB5015: The properties could not be read from the WebsiteProperties section of the "{0}" project.</value>
     <comment>{StrBegin="MSB5015: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="UnrecognizedSolutionComment" Visibility="Public">
+  <data name="UnrecognizedSolutionComment" xml:space="preserve">
     <value>Unrecognized solution version "{0}", attempting to continue.</value>
   </data>
-  <data name="SubCategoryForSolutionParsingErrors" Visibility="Public">
+  <data name="SubCategoryForSolutionParsingErrors" xml:space="preserve">
     <value>Solution file</value>
     <comment>UE: this fragment is used to describe errors found while parsing solution files. For example, if a normal error is
       displayed like this: "MSBUILD : error MSB0000: This is an error.", then an error from solution parsing would look like this:
       "MSBUILD : Solution file error MSB0000: This is an error."
       LOCALIZATION: This fragment needs to be localized.</comment>
   </data>
-  <data name="Shared.InvalidProjectFile" Visibility="Public">
+  <data name="Shared.InvalidProjectFile" xml:space="preserve">
     <value>MSB5019: The project file is malformed: "{0}". {1}</value>
     <comment>{StrBegin="MSB5019: "}</comment>
   </data>
-  <data name="Shared.ProjectFileCouldNotBeLoaded" Visibility="Public">
+  <data name="Shared.ProjectFileCouldNotBeLoaded" xml:space="preserve">
     <value>MSB5020: Could not load the project file: "{0}". {1}</value>
     <comment>{StrBegin="MSB5020: "}</comment>
   </data>
-  <data name="Shared.KillingProcessByCancellation">
+  <data name="Shared.KillingProcessByCancellation" xml:space="preserve">
     <value>MSB5021: Terminating the task executable "{0}" and its child processes because the build was canceled.</value>
     <comment>{StrBegin="MSB5021: "}</comment>
   </data>
-  <data name="Shared.CanNotFindValidMSBuildLocation">
+  <data name="Shared.CanNotFindValidMSBuildLocation" xml:space="preserve">
     <value>MSB5024: Could not determine a valid location to MSBuild. Try running this process from the Developer Command Prompt for Visual Studio.</value>
     <comment>{StrBegin="MSB5024: "}</comment>
   </data>
-  <data name="Shared.PathTooLong">
+  <data name="Shared.PathTooLong" xml:space="preserve">
     <value>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</value>
-    <comment></comment>
   </data>
-  <data name="SolutionFilterJsonParsingError" Visibility="Public">
+  <data name="SolutionFilterJsonParsingError" xml:space="preserve">
     <value>MSB5025: Json in solution filter file "{0}" is incorrectly formatted.</value>
     <comment>{StrBegin="MSB5025: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionFilterMissingSolutionError" Visibility="Public">
+  <data name="SolutionFilterMissingSolutionError" xml:space="preserve">
     <value>MSB5026: The solution filter file at "{0}" specifies there will be a solution file at "{1}", but that file does not exist.</value>
     <comment>{StrBegin="MSB5026: "}UE: The solution filename is provided separately to loggers.</comment>
   </data>
-  <data name="SolutionFilterFilterContainsProjectNotInSolution" Visibility="Public">
+  <data name="SolutionFilterFilterContainsProjectNotInSolution" xml:space="preserve">
     <value>MSB5028: Solution filter file at "{0}" includes project "{1}" that is not in the solution file at "{2}".</value>
     <comment>{StrBegin="MSB5028: "}UE: The project filename is provided separately to loggers.</comment>
   </data>
@@ -286,29 +354,14 @@
     <comment>{StrBegin="MSB5029: "}UE: This is a generic message that is displayed when we find a project element that has a drive enumerating wildcard value for one of its
       attributes e.g. &lt;Compile Include="$(NotAlwaysDefined)\**\*.cs"&gt; -- if the property is undefined, the value of Include should not result in enumerating all files on drive.</comment>
   </data>
-  <data name="LoggingBeforeTaskInitialization" UESanitized="false" Visibility="Public">
+  <data name="LoggingBeforeTaskInitialization" xml:space="preserve">
     <value>MSB6005: Task attempted to log before it was initialized. Message was: {0}</value>
     <comment>{StrBegin="MSB6005: "}UE: This occurs if the task attempts to log something in its own constructor.</comment>
   </data>
-  <!--
-        The shared message bucket is: MSB5001 - MSB5999
-
-        Next message code should be MSB5030
-
-        Some unused codes which can also be reused (because their messages were deleted, and UE hasn't indexed the codes yet):
-            <none>
-
-        Retired codes which have shipped so cannot be reused
-            MSB5017
-
-        Don't forget to update this comment after using a new code.
-  -->
-  <!-- #################################################################################################-->
-  <!-- ############################## Collection-related strings #######################################-->
-  <!-- #################################################################################################-->
-  <!-- The OM_ prefix indicates at the point of use that there is no error code in the message;
-       these should not be used in an InvalidProjectFileException -->
-  <data name="OM_NotSupportedReadOnlyCollection">
+  <data name="OM_NotSupportedReadOnlyCollection" xml:space="preserve">
     <value>This collection is read-only.</value>
   </data>
-</root>
+  <data name="CollectionCopyToFailureProvidedArrayIsTooSmall" xml:space="preserve">
+    <value>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</value>
+  </data>
+</root>
\ No newline at end of file
diff --git a/src/Shared/Resources/xlf/Strings.shared.cs.xlf b/src/Shared/Resources/xlf/Strings.shared.cs.xlf
index cdffb07fb6f..1edd7bcb179 100644
--- a/src/Shared/Resources/xlf/Strings.shared.cs.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.cs.xlf
@@ -17,6 +17,11 @@
         <target state="translated">Vytv√°≈ôen√≠ sestaven√≠ bylo zah√°jeno.</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">Poƒçet element≈Ø v kolekci je vƒõt≈°√≠ ne≈æ dostupn√© m√≠sto v c√≠lov√©m poli (p≈ôi spu≈°tƒõn√≠ na zadan√©m indexu).</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: Bylo nalezeno konfliktn√≠ sestaven√≠ pro sestaven√≠ √∫lohy {0} v um√≠stƒõn√≠ {1}.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.de.xlf b/src/Shared/Resources/xlf/Strings.shared.de.xlf
index 9faa13d7602..ee1ab288105 100644
--- a/src/Shared/Resources/xlf/Strings.shared.de.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.de.xlf
@@ -17,6 +17,11 @@
         <target state="translated">Der Buildvorgang wurde gestartet.</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">Die Anzahl der Elemente in der Auflistung ist gr√∂√üer als der verf√ºgbare Speicherplatz im Zielarray (wenn am angegebenen Index begonnen wird).</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: Eine mit der Aufgabenassembly "{0}" in Konflikt stehende Assembly wurde in "{1}" gefunden.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.es.xlf b/src/Shared/Resources/xlf/Strings.shared.es.xlf
index dc91f2bd810..95cf2fbc390 100644
--- a/src/Shared/Resources/xlf/Strings.shared.es.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.es.xlf
@@ -17,6 +17,11 @@
         <target state="translated">Compilaci√≥n iniciada.</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">El n√∫mero de elementos de la colecci√≥n es mayor que el espacio disponible en la matriz de destino (a partir del √≠ndice especificado).</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: Se detect√≥ un ensamblado conflictivo para el ensamblado de tarea "{0}" en "{1}".</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.fr.xlf b/src/Shared/Resources/xlf/Strings.shared.fr.xlf
index c812aa833db..c498cd0cd39 100644
--- a/src/Shared/Resources/xlf/Strings.shared.fr.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.fr.xlf
@@ -17,6 +17,11 @@
         <target state="translated">La g√©n√©ration a d√©marr√©.</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">Le nombre d‚Äô√©l√©ments de la collection est sup√©rieur √† l‚Äôespace disponible dans le tableau de destination (lors du d√©marrage √† l‚Äôindex sp√©cifi√©).</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: un assembly en conflit avec l'assembly de t√¢che "{0}" a √©t√© trouv√© sur "{1}".</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.it.xlf b/src/Shared/Resources/xlf/Strings.shared.it.xlf
index 2ed5a530e64..a3c710638c9 100644
--- a/src/Shared/Resources/xlf/Strings.shared.it.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.it.xlf
@@ -17,6 +17,11 @@
         <target state="translated">Compilazione avviata.</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">Il numero di elementi nella raccolta √® maggiore dello spazio disponibile nella matrice di destinazione (a partire dall'indice specificato).</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: rilevato un assembly in conflitto per l'assembly dell'attivit√† "{0}" in "{1}".</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.ja.xlf b/src/Shared/Resources/xlf/Strings.shared.ja.xlf
index 0d17c4c2a44..5689a1f9504 100644
--- a/src/Shared/Resources/xlf/Strings.shared.ja.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.ja.xlf
@@ -17,6 +17,11 @@
         <target state="translated">„Éì„É´„Éâ„ÇíÈñãÂßã„Åó„Åæ„Åó„Åü„ÄÇ</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥ÂÜÖ„ÅÆË¶ÅÁ¥†„ÅÆÊï∞„Åå„ÄÅÂêåÊúüÂÖàÈÖçÂàóÂÜÖ„ÅÆ‰ΩøÁî®ÂèØËÉΩ„Å™È†òÂüü„ÇíË∂Ö„Åà„Å¶„ÅÑ„Åæ„Åô (ÊåáÂÆö„Åï„Çå„Åü„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅßÈñãÂßã„Åô„ÇãÂ†¥Âêà)„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: „Çø„Çπ„ÇØ „Ç¢„Çª„É≥„Éñ„É™ "{0}" „Å´ÂØæ„Åó„Å¶Á´∂Âêà„Åó„Å¶„ÅÑ„Çã„Ç¢„Çª„É≥„Éñ„É™„Åå "{1}" „ÅßË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü„ÄÇ</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.ko.xlf b/src/Shared/Resources/xlf/Strings.shared.ko.xlf
index e8bbabfd3e9..d3da7922151 100644
--- a/src/Shared/Resources/xlf/Strings.shared.ko.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.ko.xlf
@@ -17,6 +17,11 @@
         <target state="translated">ÎπåÎìúÎ•º ÏãúÏûëÌñàÏäµÎãàÎã§.</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">Ïª¨Î†âÏÖòÏùò ÏöîÏÜå ÏàòÍ∞Ä ÎåÄÏÉÅ Î∞∞Ïó¥ÏóêÏÑú ÏÇ¨Ïö© Í∞ÄÎä•Ìïú Í≥µÍ∞ÑÎ≥¥Îã§ ÌÅΩÎãàÎã§(ÏßÄÏ†ïÎêú Ïù∏Îç±Ïä§ÏóêÏÑú ÏãúÏûëÌï† Îïå).</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: ÏûëÏóÖ Ïñ¥ÏÖàÎ∏îÎ¶¨ "{0}"Í≥º(ÏôÄ) Ï∂©ÎèåÌïòÎäî Ïñ¥ÏÖàÎ∏îÎ¶¨Í∞Ä "{1}"Ïóê ÏûàÏäµÎãàÎã§.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.pl.xlf b/src/Shared/Resources/xlf/Strings.shared.pl.xlf
index 272e8877783..32da5c6782c 100644
--- a/src/Shared/Resources/xlf/Strings.shared.pl.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.pl.xlf
@@ -17,6 +17,11 @@
         <target state="translated">Kompilacja rozpoczƒô≈Ça siƒô.</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">Liczba element√≥w w kolekcji jest wiƒôksza ni≈º dostƒôpne miejsce w tablicy docelowej (zaczynajƒÖc od okre≈õlonego indeksu).</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: Zestaw, kt√≥ry wywo≈Çuje konflikt z zestawem zadania ‚Äû{0}‚Äù, zosta≈Ç znaleziony w ‚Äû{1}‚Äù.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.pt-BR.xlf b/src/Shared/Resources/xlf/Strings.shared.pt-BR.xlf
index 3b4308d3b6d..6be67780d46 100644
--- a/src/Shared/Resources/xlf/Strings.shared.pt-BR.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.pt-BR.xlf
@@ -17,6 +17,11 @@
         <target state="translated">Compila√ß√£o iniciada.</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">O n√∫mero de elementos na cole√ß√£o √© maior que o espa√ßo dispon√≠vel na matriz de destino (ao iniciar no √≠ndice especificado).</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: Foi encontrado um assembly conflitante no assembly da tarefa "{0}" em "{1}".</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.ru.xlf b/src/Shared/Resources/xlf/Strings.shared.ru.xlf
index eebaa4e6caa..92b45a030e4 100644
--- a/src/Shared/Resources/xlf/Strings.shared.ru.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.ru.xlf
@@ -17,6 +17,11 @@
         <target state="translated">–°–±–æ—Ä–∫–∞ –Ω–∞—á–∞—Ç–∞.</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≤ —Ü–µ–ª–µ–≤–æ–º –º–∞—Å—Å–∏–≤–µ (–ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞).</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: –≤ "{1}" –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–±–æ—Ä–∫–∞, –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∞—è —Å–æ —Å–±–æ—Ä–∫–æ–π –∑–∞–¥–∞—á–∏ "{0}".</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.tr.xlf b/src/Shared/Resources/xlf/Strings.shared.tr.xlf
index 775a8cc8718..e5631033254 100644
--- a/src/Shared/Resources/xlf/Strings.shared.tr.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.tr.xlf
@@ -17,6 +17,11 @@
         <target state="translated">Olu≈üturma ba≈ülatƒ±ldƒ±.</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">Koleksiyondaki √∂ƒüe sayƒ±sƒ± hedef dizideki kullanƒ±labilir bo≈üluƒüun boyutundan (belirtilen dizinden ba≈ülayarak) daha b√ºy√ºk.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: "{0}" g√∂rev derlemesi i√ßin "{1}" konumunda √ßakƒ±≈üan derleme bulundu.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.zh-Hans.xlf b/src/Shared/Resources/xlf/Strings.shared.zh-Hans.xlf
index 7e9f0b6897d..c40f0476018 100644
--- a/src/Shared/Resources/xlf/Strings.shared.zh-Hans.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.zh-Hans.xlf
@@ -17,6 +17,11 @@
         <target state="translated">Â∑≤ÂêØÂä®ÁîüÊàê„ÄÇ</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">ÈõÜÂêà‰∏≠ÁöÑÂÖÉÁ¥†Êï∞Â§ß‰∫éÁõÆÊ†áÈòµÂàó‰∏≠ÁöÑÂèØÁî®Á©∫Èó¥ (‰ªéÊåáÂÆöÁ¥¢ÂºïÂºÄÂßãÊó∂)„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: Âú®‚Äú{1}‚ÄùÂ§ÑÂèëÁé∞‰∫Ü‰∏é‰ªªÂä°Á®ãÂ∫èÈõÜ‚Äú{0}‚ÄùÂÜ≤Á™ÅÁöÑÁ®ãÂ∫èÈõÜ„ÄÇ</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.zh-Hant.xlf b/src/Shared/Resources/xlf/Strings.shared.zh-Hant.xlf
index 94fd6cd9fcc..4b995564ab6 100644
--- a/src/Shared/Resources/xlf/Strings.shared.zh-Hant.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.zh-Hant.xlf
@@ -17,6 +17,11 @@
         <target state="translated">Â∑≤Á∂ìÈñãÂßãÂª∫ÁΩÆ„ÄÇ</target>
         <note />
       </trans-unit>
+      <trans-unit id="CollectionCopyToFailureProvidedArrayIsTooSmall">
+        <source>The number of elements in the collection is greater than the available space in the destination array (when starting at the specified index).</source>
+        <target state="translated">ÈõÜÂêà‰∏≠ÁöÑÂÖÉÁ¥†Êï∏Â§ßÊñºÁõÆÊ®ôÈô£Âàó‰∏≠ÁöÑÂèØÁî®Á©∫Èñì (ÂæûÊåáÂÆöÁ¥¢ÂºïÈñãÂßãÊôÇ)„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="ConflictingTaskAssembly">
         <source>MSB4008: A conflicting assembly for the task assembly "{0}" has been found at "{1}".</source>
         <target state="translated">MSB4008: Â∑≤Âú® "{1}" ‰∏≠ÁôºÁèæÂ∑•‰ΩúÁµÑ‰ª∂ "{0}" ÁöÑË°ùÁ™ÅÁµÑ‰ª∂„ÄÇ</target>
diff --git a/src/Shared/UnitTests/AssemblyNameEx_Tests.cs b/src/Shared/UnitTests/AssemblyNameEx_Tests.cs
index 1114e941ff9..ec407e54d29 100644
--- a/src/Shared/UnitTests/AssemblyNameEx_Tests.cs
+++ b/src/Shared/UnitTests/AssemblyNameEx_Tests.cs
@@ -324,14 +324,10 @@ public void CompareBaseNameRealCase1()
         [Fact]
         public void CreateAssemblyNameExtensionWithNoSimpleName()
         {
-            // Mono does not throw on this string
-            if (!NativeMethodsShared.IsMono)
+            Assert.Throws<FileLoadException>(() =>
             {
-                Assert.Throws<FileLoadException>(() =>
-                {
-                    AssemblyNameExtension extension = new AssemblyNameExtension("Version=2.0.0.0, Culture=en, PublicKeyToken=b03f5f7f11d50a3a", true);
-                });
-            }
+                AssemblyNameExtension extension = new AssemblyNameExtension("Version=2.0.0.0, Culture=en, PublicKeyToken=b03f5f7f11d50a3a", true);
+            });
         }
 
         /// <summary>
@@ -340,16 +336,12 @@ public void CreateAssemblyNameExtensionWithNoSimpleName()
         [Fact]
         public void CreateAssemblyNameExtensionWithNoSimpleName2()
         {
-            // Mono does not throw on this string
-            if (!NativeMethodsShared.IsMono)
+            Assert.Throws<FileLoadException>(() =>
             {
-                Assert.Throws<FileLoadException>(() =>
-                {
-                    AssemblyNameExtension extension = new AssemblyNameExtension("Version=2.0.0.0, Culture=en, PublicKeyToken=b03f5f7f11d50a3a");
-                    AssemblyNameExtension extension2 = new AssemblyNameExtension("A, Version=2.0.0.0, Culture=en, PublicKeyToken=b03f5f7f11d50a3a");
-                    extension2.PartialNameCompare(extension);
-                });
-            }
+                AssemblyNameExtension extension = new AssemblyNameExtension("Version=2.0.0.0, Culture=en, PublicKeyToken=b03f5f7f11d50a3a");
+                AssemblyNameExtension extension2 = new AssemblyNameExtension("A, Version=2.0.0.0, Culture=en, PublicKeyToken=b03f5f7f11d50a3a");
+                extension2.PartialNameCompare(extension);
+            });
         }
 
         /// <summary>
diff --git a/src/Shared/UnitTests/CommunicationUtilities_Tests.cs b/src/Shared/UnitTests/CommunicationUtilities_Tests.cs
new file mode 100644
index 00000000000..84cfcd034b8
--- /dev/null
+++ b/src/Shared/UnitTests/CommunicationUtilities_Tests.cs
@@ -0,0 +1,66 @@
+// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.Collections;
+using System.Collections.Generic;
+using Shouldly;
+using Xunit;
+using Xunit.Abstractions;
+using CommunicationsUtilities = Microsoft.Build.Internal.CommunicationsUtilities;
+
+namespace Microsoft.Build.UnitTests
+{
+    public class CommunicationUtilitiesTests
+    {
+        /// <summary>
+        /// Verify our custom way of getting env vars gives the same results as the BCL.
+        /// </summary>
+        [Fact]
+        public void GetEnvVars()
+        {
+            IDictionary<string, string> envVars = CommunicationsUtilities.GetEnvironmentVariables();
+            IDictionary referenceVars = Environment.GetEnvironmentVariables();
+            IDictionary<string, string> referenceVars2 = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase);
+
+            foreach (DictionaryEntry item in referenceVars)
+            {
+                referenceVars2.Add((string)item.Key!, (string)item.Value!);
+            }
+
+            Helpers.AssertCollectionsValueEqual(envVars, referenceVars2);
+        }
+
+        /// <summary>
+        /// Verify that we correctly restore environment variables.
+        /// </summary>
+        [Fact]
+        public void RestoreEnvVars()
+        {
+            string testName1 = "_MSBUILD_TEST_ENV_VAR1";
+            string testName2 = "_MSBUILD_TEST_ENV_VAR2";
+
+            // A long value exceeding the former limit of 32,767 characters.
+            string testValue = new string('a', 1_000_000);
+
+            CommunicationsUtilities.SetEnvironmentVariable(testName1, testValue);
+            try
+            {
+                IDictionary<string, string> envVars = CommunicationsUtilities.GetEnvironmentVariables();
+
+                CommunicationsUtilities.SetEnvironmentVariable(testName1, null);
+                CommunicationsUtilities.SetEnvironmentVariable(testName2, testValue);
+
+                CommunicationsUtilities.SetEnvironment(envVars);
+
+                Environment.GetEnvironmentVariable(testName1).ShouldBe(testValue);
+                Environment.GetEnvironmentVariable(testName2).ShouldBe(null);
+            }
+            finally
+            {
+                CommunicationsUtilities.SetEnvironmentVariable(testName1, null);
+                CommunicationsUtilities.SetEnvironmentVariable(testName2, null);
+            }
+        }
+    }
+}
diff --git a/src/Shared/UnitTests/FileMatcher_Tests.cs b/src/Shared/UnitTests/FileMatcher_Tests.cs
index 5e5c6aca707..9576c8b5c78 100644
--- a/src/Shared/UnitTests/FileMatcher_Tests.cs
+++ b/src/Shared/UnitTests/FileMatcher_Tests.cs
@@ -325,7 +325,6 @@ public static IEnumerable<object[]> GetTestData()
                     }
                 };
 
-#if !MONO // https://github.com/mono/mono/issues/8441
                 yield return new object[]
                 {
                     new GetFilesComplexGlobbingMatchingInfo
@@ -361,7 +360,6 @@ public static IEnumerable<object[]> GetTestData()
                         ExpectNoMatches = NativeMethodsShared.IsLinux,
                     }
                 };
-#endif
 
                 yield return new object[]
                 {
diff --git a/src/Shared/UnitTests/StreamHelpers.cs b/src/Shared/UnitTests/StreamHelpers.cs
deleted file mode 100644
index f4150ee4723..00000000000
--- a/src/Shared/UnitTests/StreamHelpers.cs
+++ /dev/null
@@ -1,33 +0,0 @@
-// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-using System.IO;
-
-#nullable disable
-
-namespace Microsoft.Build.UnitTests
-{
-    internal sealed class StreamHelpers
-    {
-        /// <summary>
-        /// Take a string and convert it to a StreamReader.
-        /// </summary>
-        /// <param name="value"></param>
-        /// <returns></returns>
-        internal static StreamReader StringToStreamReader(string value)
-        {
-            MemoryStream m = new MemoryStream();
-#if FEATURE_ENCODING_DEFAULT
-            TextWriter w = new StreamWriter(m, System.Text.Encoding.Default);
-#else
-            TextWriter w = new StreamWriter(m, System.Text.Encoding.UTF8);
-#endif
-
-            w.Write(value);
-            w.Flush();
-            m.Seek(0, SeekOrigin.Begin);
-
-            return new StreamReader(m);
-        }
-    }
-}
diff --git a/src/Shared/UnitTests/TestAssemblyInfo.cs b/src/Shared/UnitTests/TestAssemblyInfo.cs
index 368eb99d6c6..08353749def 100644
--- a/src/Shared/UnitTests/TestAssemblyInfo.cs
+++ b/src/Shared/UnitTests/TestAssemblyInfo.cs
@@ -5,6 +5,7 @@
 using System.IO;
 using System.Linq;
 using System.Runtime.InteropServices;
+using System.Xml;
 using System.Xml.Linq;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.FileSystem;
@@ -103,7 +104,13 @@ private static void SetDotnetHostPath(TestEnvironment testEnvironment)
                 string potentialVersionsPropsPath = Path.Combine(currentFolder, "build", "Versions.props");
                 if (FileSystems.Default.FileExists(potentialVersionsPropsPath))
                 {
-                    var doc = XDocument.Load(potentialVersionsPropsPath);
+                    XDocument doc = null;
+                    var xrs = new XmlReaderSettings { DtdProcessing = DtdProcessing.Ignore, CloseInput = true, IgnoreWhitespace = true };
+                    using (XmlReader xr = XmlReader.Create(File.OpenRead(potentialVersionsPropsPath), xrs))
+                    {
+                        doc = XDocument.Load(xr);
+                    }
+
                     var ns = doc.Root.Name.Namespace;
                     var cliVersionElement = doc.Root.Elements(ns + "PropertyGroup").Elements(ns + "DotNetCliVersion").FirstOrDefault();
                     if (cliVersionElement != null)
diff --git a/src/StringTools.UnitTests/StringTools.UnitTests.net35.csproj b/src/StringTools.UnitTests/StringTools.UnitTests.net35.csproj
index 6b8d8eb14f0..acea1b5a025 100644
--- a/src/StringTools.UnitTests/StringTools.UnitTests.net35.csproj
+++ b/src/StringTools.UnitTests/StringTools.UnitTests.net35.csproj
@@ -2,7 +2,7 @@
 
   <!-- The .NET Core version of MSBuild doesn't support targeting .NET Framework 3.5.  So in that case, we import
        a .props file that prevents building the project from doing much of anything. -->
-  <Import Project="$(RepoRoot)eng\ProducesNoOutput.Settings.props" Condition="'$(MSBuildRuntimeType)' == 'Core' or '$(MonoBuild)' == 'true'" />
+  <Import Project="$(RepoRoot)eng\ProducesNoOutput.Settings.props" Condition="'$(MSBuildRuntimeType)' == 'Core'" />
 
   <PropertyGroup>
     <TargetFrameworks>$(FullFrameworkTFM)</TargetFrameworks>
diff --git a/src/StringTools.UnitTests/WeakStringCache_Tests.cs b/src/StringTools.UnitTests/WeakStringCache_Tests.cs
index 41990c59396..95c769a5fa7 100644
--- a/src/StringTools.UnitTests/WeakStringCache_Tests.cs
+++ b/src/StringTools.UnitTests/WeakStringCache_Tests.cs
@@ -120,10 +120,6 @@ private void AddStringsWithSameHashCode(int numberOfStrings)
         /// 2. The string is no longer retrievable after all strong GC refs are gone.
         /// 3. The cache completely removes the handle after calling Scavenge on it.
         /// </summary>
-        /// <remarks>
-        /// Disabled on MacOS Mono because it doesn't play well with conservative GC scanning.
-        /// https://www.mono-project.com/docs/advanced/garbage-collector/sgen/#precise-stack-marking
-        /// </remarks>
         [Fact]
         public void RetainsStringUntilCollected()
         {
@@ -161,10 +157,6 @@ public void RetainsStringUntilCollected()
         /// <summary>
         /// Same as RetainsStringUntilCollected but with multiple strings sharing the same hash code.
         /// </summary>
-        /// <remarks>
-        /// Disabled on MacOS Mono because it doesn't play well with conservative GC scanning.
-        /// https://www.mono-project.com/docs/advanced/garbage-collector/sgen/#precise-stack-marking
-        /// </remarks>
         [Fact]
         public void RetainsLastStringWithGivenHashCode()
         {
diff --git a/src/StringTools/StringTools.csproj b/src/StringTools/StringTools.csproj
index 238bd8a4ca1..2eabf9a73b7 100644
--- a/src/StringTools/StringTools.csproj
+++ b/src/StringTools/StringTools.csproj
@@ -1,7 +1,7 @@
 <Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <TargetFrameworks>$(LibraryTargetFrameworks)</TargetFrameworks>
-    <TargetFrameworks Condition="'$(MSBuildRuntimeType)' != 'Core' and '$(MonoBuild)' != 'true'">$(LibraryTargetFrameworks);net35</TargetFrameworks>
+    <TargetFrameworks Condition="'$(MSBuildRuntimeType)' != 'Core'">$(LibraryTargetFrameworks);net35</TargetFrameworks>
     <PlatformTarget>AnyCPU</PlatformTarget>
     <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
     <IsPackable>true</IsPackable>
diff --git a/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs b/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
index 43d8b0b2016..b72e6d93a16 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
@@ -3237,7 +3237,7 @@ public void ResolveToGACSpecificVersion()
         [Fact]
         public void ParentAssemblyResolvedFromAForGac()
         {
-            var parentReferenceFolders = new List<string>();
+            var parentReferenceFolders = new List<DirectoryWithParentAssembly>();
             var referenceList = new List<Reference>();
 
             var taskItem = new TaskItem("Microsoft.VisualStudio.Interopt, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");
@@ -3266,7 +3266,7 @@ public void ParentAssemblyResolvedFromAForGac()
             }
 
             Assert.Single(parentReferenceFolders);
-            Assert.Equal(reference2.ResolvedSearchPath, parentReferenceFolders[0]);
+            Assert.Equal(reference2.ResolvedSearchPath, parentReferenceFolders[0].Directory);
         }
 
         /// <summary>
@@ -8623,6 +8623,29 @@ public void SDKReferencesAreResolvedWithoutIO()
             rar._cache.IsDirty.ShouldBeFalse();
         }
 
+        [Fact]
+        public void LogsParentAssemblyForEveryConsideredAndRejectedSearchPath()
+        {
+            InitializeRARwithMockEngine(_output, out MockEngine mockEngine, out ResolveAssemblyReference rar);
+
+            rar.Assemblies = new ITaskItem[]
+            {
+                new TaskItem(@"C:\DirectoryTest\A.dll"),
+                new TaskItem("B"),
+            };
+
+            rar.SearchPaths = new string[]
+            {
+                "{RawFileName}",
+            };
+
+            Execute(rar).ShouldBeTrue();
+
+            mockEngine.AssertLogContains(rar.Log.FormatResourceString("ResolveAssemblyReference.SearchPathAddedByParentAssembly",
+                @"C:\DirectoryTest",
+                @"C:\DirectoryTest\A.dll"));
+        }
+
         [Fact]
         public void ManagedRuntimeVersionReaderSupportsWindowsRuntime()
         {
diff --git a/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs b/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs
index 6b025c4256d..fe46f88df33 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs
@@ -5,6 +5,7 @@
 using System.Collections;
 using System.Collections.Concurrent;
 using System.Collections.Generic;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using System.Runtime.Versioning;
 using Microsoft.Build.Framework;
@@ -50,126 +51,127 @@ public class ResolveAssemblyReferenceTestFixture : IDisposable
         internal static Dictionary<string, int> uniqueGetAssemblyName = null;
 
         internal static bool useFrameworkFileExists = false;
-        internal const string REDISTLIST = @"<FileList  Redist=""Microsoft-Windows-CLRCoreComp.4.0"" Name="".NET Framework 4"" RuntimeVersion=""4.0"" ToolsVersion=""12.0"">
-  <File AssemblyName=""Accessibility"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""CustomMarshalers"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""ISymWrapper"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.Build"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.Build.Conversion.v4.0"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.Build.Engine"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.Build.Framework"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.Build.Tasks.v4.0"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.Build.Utilities.v4.0"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.CSharp"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.JScript"" Version=""10.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.VisualBasic"" Version=""10.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.VisualBasic.Compatibility"" Version=""10.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.VisualBasic.Compatibility.Data"" Version=""10.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.VisualC"" Version=""10.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""Microsoft.VisualC.STLCLR"" Version=""2.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""mscorlib"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""PresentationBuildTasks"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""PresentationCore"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""PresentationFramework.Aero"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""PresentationFramework.Classic"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""PresentationFramework"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""PresentationFramework.Luna"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""PresentationFramework.Royale"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""ReachFramework"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""sysglobl"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Activities"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Activities.Core.Presentation"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Activities.DurableInstancing"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Activities.Presentation"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.AddIn.Contract"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.AddIn"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.ComponentModel.Composition"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.ComponentModel.DataAnnotations"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Configuration"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Configuration.Install"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Core"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Data.DataSetExtensions"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Data"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Data.Entity.Design"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Data.Entity"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Data.Linq"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Data.OracleClient"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Data.Services.Client"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Data.Services.Design"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Data.Services"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Data.SqlXml"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Deployment"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Design"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Device"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.DirectoryServices.AccountManagement"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.DirectoryServices"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.DirectoryServices.Protocols"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Drawing.Design"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Drawing"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Dynamic"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.EnterpriseServices"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.IdentityModel"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.IdentityModel.Selectors"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.IO.Log"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Management"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Management.Instrumentation"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Messaging"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Net"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Numerics"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Printing"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Runtime.DurableInstancing"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Runtime.Caching"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Runtime.Remoting"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Runtime.Serialization"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Runtime.Serialization.Formatters.Soap"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Security"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.ServiceModel.Activation"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.ServiceModel.Activities"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.ServiceModel.Channels"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.ServiceModel.Discovery"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.ServiceModel"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.ServiceModel.Routing"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.ServiceModel.Web"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.ServiceProcess"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Speech"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Transactions"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.Abstractions"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.ApplicationServices"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.DataVisualization.Design"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.DataVisualization"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.DynamicData.Design"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.DynamicData"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.Entity.Design"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.Entity"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.Extensions.Design"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.Extensions"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.Mobile"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.RegularExpressions"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.Routing"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Web.Services"" Version=""4.0.0.0"" PublicKeyToken=""b03f5f7f11d50a3a"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Windows.Forms.DataVisualization.Design"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Windows.Forms.DataVisualization"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Windows.Forms"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Windows.Input.Manipulations"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Windows.Presentation"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Workflow.Activities"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Workflow.ComponentModel"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Workflow.Runtime"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.WorkflowServices"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Xaml"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Xml"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""System.Xml.Linq"" Version=""4.0.0.0"" PublicKeyToken=""b77a5c561934e089"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""UIAutomationClient"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""UIAutomationClientsideProviders"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""UIAutomationProvider"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""UIAutomationTypes"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""WindowsBase"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""WindowsFormsIntegration"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-  <File AssemblyName=""XamlBuildTask"" Version=""4.0.0.0"" PublicKeyToken=""31bf3856ad364e35"" Culture=""neutral"" ProcessorArchitecture=""MSIL"" InGac=""true"" />
-</FileList>"
-            ;
+        internal const string REDISTLIST = """
+            <FileList  Redist="Microsoft-Windows-CLRCoreComp.4.0" Name=".NET Framework 4" RuntimeVersion="4.0" ToolsVersion="12.0">
+              <File AssemblyName="Accessibility" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="CustomMarshalers" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="ISymWrapper" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.Build" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.Build.Conversion.v4.0" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.Build.Engine" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.Build.Framework" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.Build.Tasks.v4.0" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.Build.Utilities.v4.0" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.CSharp" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.JScript" Version="10.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.VisualBasic" Version="10.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.VisualBasic.Compatibility" Version="10.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.VisualBasic.Compatibility.Data" Version="10.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.VisualC" Version="10.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="Microsoft.VisualC.STLCLR" Version="2.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="mscorlib" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="PresentationBuildTasks" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="PresentationCore" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="PresentationFramework.Aero" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="PresentationFramework.Classic" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="PresentationFramework" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="PresentationFramework.Luna" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="PresentationFramework.Royale" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="ReachFramework" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="sysglobl" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Activities" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Activities.Core.Presentation" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Activities.DurableInstancing" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Activities.Presentation" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.AddIn.Contract" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.AddIn" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.ComponentModel.Composition" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.ComponentModel.DataAnnotations" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Configuration" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Configuration.Install" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Core" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Data.DataSetExtensions" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Data" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Data.Entity.Design" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Data.Entity" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Data.Linq" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Data.OracleClient" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Data.Services.Client" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Data.Services.Design" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Data.Services" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Data.SqlXml" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Deployment" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Design" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Device" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.DirectoryServices.AccountManagement" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.DirectoryServices" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.DirectoryServices.Protocols" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Drawing.Design" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Drawing" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Dynamic" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.EnterpriseServices" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.IdentityModel" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.IdentityModel.Selectors" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.IO.Log" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Management" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Management.Instrumentation" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Messaging" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Net" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Numerics" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Printing" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Runtime.DurableInstancing" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Runtime.Caching" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Runtime.Remoting" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Runtime.Serialization" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Runtime.Serialization.Formatters.Soap" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Security" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.ServiceModel.Activation" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.ServiceModel.Activities" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.ServiceModel.Channels" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.ServiceModel.Discovery" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.ServiceModel" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.ServiceModel.Routing" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.ServiceModel.Web" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.ServiceProcess" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Speech" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Transactions" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.Abstractions" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.ApplicationServices" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.DataVisualization.Design" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.DataVisualization" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.DynamicData.Design" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.DynamicData" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.Entity.Design" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.Entity" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.Extensions.Design" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.Extensions" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.Mobile" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.RegularExpressions" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.Routing" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Web.Services" Version="4.0.0.0" PublicKeyToken="b03f5f7f11d50a3a" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Windows.Forms.DataVisualization.Design" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Windows.Forms.DataVisualization" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Windows.Forms" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Windows.Input.Manipulations" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Windows.Presentation" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Workflow.Activities" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Workflow.ComponentModel" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Workflow.Runtime" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.WorkflowServices" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Xaml" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Xml" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="System.Xml.Linq" Version="4.0.0.0" PublicKeyToken="b77a5c561934e089" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="UIAutomationClient" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="UIAutomationClientsideProviders" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="UIAutomationProvider" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="UIAutomationTypes" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="WindowsBase" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="WindowsFormsIntegration" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+              <File AssemblyName="XamlBuildTask" Version="4.0.0.0" PublicKeyToken="31bf3856ad364e35" Culture="neutral" ProcessorArchitecture="MSIL" InGac="true" />
+            </FileList>
+            """;
 
         protected readonly ITestOutputHelper _output;
 
@@ -613,7 +615,9 @@ internal void StopIOMonitoring()
             s_netstandardDllPath,
             @"C:\SystemRuntime\Regular.dll",
             s_dependsOnNuGet_ADllPath,
-            s_nugetCache_N_Lib_NDllPath
+            s_nugetCache_N_Lib_NDllPath,
+            @"C:\DirectoryTest\A.dll",
+            @"C:\DirectoryTest\B.dll",
         };
 
         /// <summary>
@@ -2482,6 +2486,19 @@ internal static AssemblyNameExtension[] GetDependencies(string path)
                 };
             }
 
+            if (String.Equals(path, @"C:\DirectoryTest\A.dll", StringComparison.OrdinalIgnoreCase))
+            {
+                return new AssemblyNameExtension[]
+                {
+                    GetAssemblyName(@"C:\DirectoryTest\B.dll")
+                };
+            }
+
+            if (String.Equals(path, @"C:\DirectoryTest\B.dll", StringComparison.OrdinalIgnoreCase))
+            {
+                return Array.Empty<AssemblyNameExtension>();
+            }
+
             // Use a default list.
             return new AssemblyNameExtension[]
             {
diff --git a/src/Tasks.UnitTests/AxImp_Tests.cs b/src/Tasks.UnitTests/AxImp_Tests.cs
index 932661cdbbd..52d433c32f9 100644
--- a/src/Tasks.UnitTests/AxImp_Tests.cs
+++ b/src/Tasks.UnitTests/AxImp_Tests.cs
@@ -70,7 +70,7 @@ public void GenerateSource()
         /// <summary>
         /// Tests the /nologo switch
         /// </summary>
-        [WindowsOnlyFact("The /nologo switch is not available on Mono.")]
+        [Fact]
         public void NoLogo()
         {
             var t = new ResolveComReference.AxImp();
diff --git a/src/Tasks.UnitTests/CommandLineGenerator_Tests.cs b/src/Tasks.UnitTests/CommandLineGenerator_Tests.cs
index 22c89a4872d..30f45e8d9fc 100644
--- a/src/Tasks.UnitTests/CommandLineGenerator_Tests.cs
+++ b/src/Tasks.UnitTests/CommandLineGenerator_Tests.cs
@@ -131,7 +131,6 @@ public void TemplateParametersAreCaseInsensitive()
 
         private CommandLineGenerator CreateGenerator()
         {
-#if !MONO
             Rule rule = XamlReader.Parse(testXamlFile) as Rule;
 
             Dictionary<string, Object> switchValues = new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase);
@@ -154,9 +153,6 @@ private CommandLineGenerator CreateGenerator()
 
             CommandLineGenerator generator = new CommandLineGenerator(rule, switchValues);
             return generator;
-#else
-            return new CommandLineGenerator(new Rule(), new Dictionary<string, object>());
-#endif
         }
 
         private sealed class TaskItem : ITaskItem
diff --git a/src/Tasks.UnitTests/Copy_Tests.cs b/src/Tasks.UnitTests/Copy_Tests.cs
index 1792dad790f..3c15516a43f 100644
--- a/src/Tasks.UnitTests/Copy_Tests.cs
+++ b/src/Tasks.UnitTests/Copy_Tests.cs
@@ -16,10 +16,11 @@
 using Microsoft.Build.Shared;
 using Microsoft.Build.Tasks;
 using Microsoft.Build.Utilities;
+
 using Shouldly;
+
 using Xunit;
 using Xunit.Abstractions;
-using Xunit.NetCore.Extensions;
 
 #nullable disable
 
@@ -27,6 +28,20 @@ namespace Microsoft.Build.UnitTests
 {
     public class Copy_Tests : IDisposable
     {
+        public static IEnumerable<object[]> GetDestinationExists() =>
+            new List<object[]>
+            {
+                new object[] { true },
+                new object[] { false },
+            };
+
+        public static IEnumerable<object[]> GetNullAndEmptyArrays() =>
+            new List<object[]>
+            {
+                new object[] { null },
+                new object[] { Array.Empty<ITaskItem>() },
+            };
+
         /// <summary>
         /// Gets data for testing with combinations of isUseHardLinks and isUseSymbolicLinks.
         /// Index 0 is the value for isUseHardLinks.
@@ -112,6 +127,356 @@ public void Dispose()
             Copy.RefreshInternalEnvironmentValues();
         }
 
+        [Fact]
+        public void CopyWithNoInput()
+        {
+            var task = new Copy { BuildEngine = new MockEngine(true), };
+            task.Execute().ShouldBeTrue();
+            (task.CopiedFiles == null || task.CopiedFiles.Length == 0).ShouldBeTrue();
+            (task.DestinationFiles == null || task.DestinationFiles.Length == 0).ShouldBeTrue();
+            task.WroteAtLeastOneFile.ShouldBeFalse();
+        }
+
+        [Fact]
+        public void CopyWithMatchingSourceFilesToDestinationFiles()
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var sourceFile = env.CreateFile("source.txt");
+
+                var task = new Copy
+                {
+                    BuildEngine = new MockEngine(true),
+                    SourceFiles = new ITaskItem[] { new TaskItem(sourceFile.Path) },
+                    DestinationFiles = new ITaskItem[] { new TaskItem("destination.txt") },
+                    RetryDelayMilliseconds = 1,
+                };
+                task.Execute().ShouldBeTrue();
+                task.CopiedFiles.ShouldNotBeNull();
+                task.CopiedFiles.Length.ShouldBe(1);
+                task.DestinationFiles.ShouldNotBeNull();
+                task.DestinationFiles.Length.ShouldBe(1);
+                task.WroteAtLeastOneFile.ShouldBeTrue();
+            }
+        }
+
+        [Theory]
+        [MemberData(nameof(GetDestinationExists))]
+        public void CopyWithSourceFilesToDestinationFolder(bool isDestinationExists)
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var sourceFile = env.CreateFile("source.txt");
+                var destinationFolder = env.CreateFolder(isDestinationExists);
+
+                var task = new Copy
+                {
+                    BuildEngine = new MockEngine(true),
+                    SourceFiles = new ITaskItem[] { new TaskItem(sourceFile.Path) },
+                    DestinationFolder = new TaskItem(destinationFolder.Path),
+                    RetryDelayMilliseconds = 1,
+                };
+                task.Execute().ShouldBeTrue();
+                task.CopiedFiles.ShouldNotBeNull();
+                task.CopiedFiles.Length.ShouldBe(1);
+                task.DestinationFiles.ShouldNotBeNull();
+                task.DestinationFiles.Length.ShouldBe(1);
+                task.WroteAtLeastOneFile.ShouldBeTrue();
+            }
+        }
+
+        [Theory]
+        [MemberData(nameof(GetDestinationExists))]
+        public void CopyWithSourceFoldersToDestinationFolder(bool isDestinationExists)
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var s0Folder = env.DefaultTestDirectory.CreateDirectory("source0");
+                s0Folder.CreateFile("00.txt");
+                s0Folder.CreateFile("01.txt");
+                var s0AFolder = s0Folder.CreateDirectory("a");
+                s0AFolder.CreateFile("a0.txt");
+                s0AFolder.CreateFile("a1.txt");
+                _ = s0Folder.CreateDirectory("b");
+                var s0CFolder = s0Folder.CreateDirectory("c");
+                s0CFolder.CreateFile("c0.txt");
+
+                var s1Folder = env.DefaultTestDirectory.CreateDirectory("source1");
+                s1Folder.CreateFile("10.txt");
+                s1Folder.CreateFile("11.txt");
+                var s1AFolder = s1Folder.CreateDirectory("a");
+                s1AFolder.CreateFile("a0.txt");
+                s1AFolder.CreateFile("a1.txt");
+                var s1BFolder = s1Folder.CreateDirectory("b");
+                s1BFolder.CreateFile("b0.txt");
+
+                var destinationFolder = env.CreateFolder(isDestinationExists);
+
+                var task = new Copy
+                {
+                    BuildEngine = new MockEngine(true),
+                    SourceFolders = new ITaskItem[] { new TaskItem(s0Folder.Path), new TaskItem(s1Folder.Path) },
+                    DestinationFolder = new TaskItem(destinationFolder.Path),
+                    RetryDelayMilliseconds = 1,
+                };
+                task.Execute().ShouldBeTrue();
+                task.CopiedFiles.ShouldNotBeNull();
+                task.CopiedFiles.Length.ShouldBe(10);
+                task.DestinationFiles.ShouldNotBeNull();
+                task.DestinationFiles.Length.ShouldBe(10);
+                task.WroteAtLeastOneFile.ShouldBeTrue();
+                Directory.Exists(Path.Combine(destinationFolder.Path, "source0")).ShouldBeTrue();
+                Directory.Exists(Path.Combine(destinationFolder.Path, "source1")).ShouldBeTrue();
+            }
+        }
+
+        [Fact]
+        public void CopyWithNoSource()
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var engine = new MockEngine(true);
+                var destinationFolder = env.CreateFolder(true);
+
+                var task = new Copy
+                {
+                    BuildEngine = engine,
+                    DestinationFolder = new TaskItem(destinationFolder.Path),
+                };
+                task.Execute().ShouldBeTrue();
+                task.CopiedFiles.ShouldNotBeNull();
+                task.CopiedFiles.Length.ShouldBe(0);
+                task.DestinationFiles.ShouldNotBeNull();
+                task.DestinationFiles.Length.ShouldBe(0);
+                task.WroteAtLeastOneFile.ShouldBeFalse();
+            }
+        }
+
+        [Theory]
+        [MemberData(nameof(GetDestinationExists))]
+        public void CopyWithMultipleSourceTypes(bool isDestinationExists)
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var engine = new MockEngine(true);
+                var sourceFile = env.CreateFile("source.txt");
+                var sourceFolder = env.DefaultTestDirectory.CreateDirectory("source");
+                sourceFolder.CreateFile("source.txt");
+                var aDirectory = sourceFolder.CreateDirectory("a");
+                aDirectory.CreateFile("a.txt");
+                sourceFolder.CreateDirectory("b");
+                var destinationFolder = env.CreateFolder(isDestinationExists);
+
+                var task = new Copy
+                {
+                    BuildEngine = engine,
+                    SourceFiles = new ITaskItem[] { new TaskItem(sourceFile.Path) },
+                    SourceFolders = new ITaskItem[] { new TaskItem(sourceFolder.Path) },
+                    DestinationFolder = new TaskItem(destinationFolder.Path),
+                };
+                task.Execute().ShouldBeTrue();
+                task.CopiedFiles.ShouldNotBeNull();
+                task.CopiedFiles.Length.ShouldBe(3);
+                task.DestinationFiles.ShouldNotBeNull();
+                task.DestinationFiles.Length.ShouldBe(3);
+                task.WroteAtLeastOneFile.ShouldBeTrue();
+            }
+        }
+
+        [Theory]
+        [MemberData(nameof(GetNullAndEmptyArrays))]
+        public void CopyWithEmptySourceFiles(ITaskItem[] sourceFiles)
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var engine = new MockEngine(true);
+                var destinationFolder = env.CreateFolder(true);
+
+                var task = new Copy
+                {
+                    BuildEngine = engine,
+                    SourceFiles = sourceFiles,
+                    DestinationFolder = new TaskItem(destinationFolder.Path),
+                };
+                task.Execute().ShouldBeTrue();
+                task.CopiedFiles.ShouldNotBeNull();
+                task.CopiedFiles.Length.ShouldBe(0);
+                task.DestinationFiles.ShouldNotBeNull();
+                task.DestinationFiles.Length.ShouldBe(0);
+                task.WroteAtLeastOneFile.ShouldBeFalse();
+            }
+        }
+
+        [Theory]
+        [MemberData(nameof(GetNullAndEmptyArrays))]
+        public void CopyWithEmptySourceFolders(ITaskItem[] sourceFolders)
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var engine = new MockEngine(true);
+                var destinationFolder = env.CreateFolder(true);
+
+                var task = new Copy
+                {
+                    BuildEngine = engine,
+                    SourceFolders = sourceFolders,
+                    DestinationFolder = new TaskItem(destinationFolder.Path),
+                };
+                task.Execute().ShouldBeTrue();
+                task.CopiedFiles.ShouldNotBeNull();
+                task.CopiedFiles.Length.ShouldBe(0);
+                task.DestinationFiles.ShouldNotBeNull();
+                task.DestinationFiles.Length.ShouldBe(0);
+                task.WroteAtLeastOneFile.ShouldBeFalse();
+            }
+        }
+
+        [Theory]
+        [MemberData(nameof(GetNullAndEmptyArrays))]
+        public void CopyWithNoDestination(ITaskItem[] destinationFiles)
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var engine = new MockEngine(true);
+                var sourceFile = env.CreateFile("source.txt");
+
+                var task = new Copy
+                {
+                    BuildEngine = engine,
+                    SourceFiles = new ITaskItem[] { new TaskItem(sourceFile.Path) },
+                    DestinationFiles = destinationFiles,
+                };
+                task.Execute().ShouldBeFalse();
+                // Copy.NeedsDestination (MSB3023) or General.TwoVectorsMustHaveSameLength (MSB3094)
+                engine.AssertLogContains(destinationFiles == null ? "MSB3023" : "MSB3094");
+                task.CopiedFiles.ShouldBeNull();
+                (task.DestinationFiles == null || task.DestinationFiles.Length == 0).ShouldBeTrue();
+                task.WroteAtLeastOneFile.ShouldBeFalse();
+            }
+        }
+
+        [Fact]
+        public void CopyWithMultipleDestinationTypes()
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var engine = new MockEngine(true);
+                var sourceFile = env.CreateFile("source.txt");
+                var destinationFolder = env.CreateFolder(true);
+
+                var task = new Copy
+                {
+                    BuildEngine = engine,
+                    SourceFiles = new ITaskItem[] { new TaskItem(sourceFile.Path) },
+                    DestinationFiles = new ITaskItem[] { new TaskItem("destination.txt") },
+                    DestinationFolder = new TaskItem(destinationFolder.Path),
+                };
+                task.Execute().ShouldBeFalse();
+                engine.AssertLogContains("MSB3022"); // Copy.ExactlyOneTypeOfDestination
+                task.CopiedFiles.ShouldBeNull();
+                task.DestinationFiles.ShouldNotBeNull();
+                task.WroteAtLeastOneFile.ShouldBeFalse();
+            }
+        }
+
+        [Fact]
+        public void CopyWithSourceFoldersAndDestinationFiles()
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var engine = new MockEngine(true);
+                var sourceFile = env.CreateFile("source.txt");
+                var sourceFolder = env.CreateFolder(true);
+
+                var task = new Copy
+                {
+                    BuildEngine = engine,
+                    SourceFiles = new ITaskItem[] { new TaskItem(sourceFile.Path) },
+                    SourceFolders = new ITaskItem[] { new TaskItem(sourceFolder.Path) },
+                    DestinationFiles = new ITaskItem[] { new TaskItem("destination0.txt"), new TaskItem("destination1.txt") },
+                };
+                task.Execute().ShouldBeFalse();
+                engine.AssertLogContains("MSB3896"); // Copy.IncompatibleParameters
+                task.CopiedFiles.ShouldBeNull();
+                task.DestinationFiles.ShouldNotBeNull();
+                task.WroteAtLeastOneFile.ShouldBeFalse();
+            }
+        }
+
+        [Fact]
+        public void CopyWithDifferentLengthSourceFilesToDestinationFiles()
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var engine = new MockEngine(true);
+                var sourceFile = env.CreateFile("source.txt");
+
+                var task = new Copy
+                {
+                    BuildEngine = engine,
+                    SourceFiles = new ITaskItem[] { new TaskItem(sourceFile.Path) },
+                    DestinationFiles = new ITaskItem[] { new TaskItem("destination0.txt"), new TaskItem("destination1.txt") },
+                };
+                task.Execute().ShouldBeFalse();
+                engine.AssertLogContains("MSB3094"); // General.TwoVectorsMustHaveSameLength
+                task.CopiedFiles.ShouldBeNull();
+                task.DestinationFiles.ShouldNotBeNull();
+                task.WroteAtLeastOneFile.ShouldBeFalse();
+            }
+        }
+
+        /// <summary>
+        /// Verifies that we error for retries less than 0
+        /// </summary>
+        [Fact]
+        public void CopyWithInvalidRetryCount()
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var engine = new MockEngine(true);
+                var sourceFile = env.CreateFile("source.txt");
+
+                var task = new Copy
+                {
+                    BuildEngine = engine,
+                    SourceFiles = new ITaskItem[] { new TaskItem(sourceFile.Path) },
+                    DestinationFiles = new ITaskItem[] { new TaskItem("destination.txt") },
+                    Retries = -1,
+                };
+                task.Execute().ShouldBeFalse();
+                engine.AssertLogContains("MSB3028"); // Copy.InvalidRetryCount
+                task.CopiedFiles.ShouldBeNull();
+                task.DestinationFiles.ShouldNotBeNull();
+                task.WroteAtLeastOneFile.ShouldBeFalse();
+            }
+        }
+
+        /// <summary>
+        /// Verifies that we error for retry delay less than 0
+        /// </summary>
+        [Fact]
+        public void CopyWithInvalidRetryDelay()
+        {
+            using (var env = TestEnvironment.Create())
+            {
+                var engine = new MockEngine(true);
+                var sourceFile = env.CreateFile("source.txt");
+
+                var task = new Copy
+                {
+                    BuildEngine = engine,
+                    SourceFiles = new ITaskItem[] { new TaskItem(sourceFile.Path) },
+                    DestinationFiles = new ITaskItem[] { new TaskItem("destination.txt") },
+                    RetryDelayMilliseconds = -1,
+                };
+                task.Execute().ShouldBeFalse();
+                engine.AssertLogContains("MSB3029"); // Copy.InvalidRetryDelay
+                task.CopiedFiles.ShouldBeNull();
+                task.DestinationFiles.ShouldNotBeNull();
+                task.WroteAtLeastOneFile.ShouldBeFalse();
+            }
+        }
+
         /// <summary>
         /// If OnlyCopyIfDifferent is set to "true" then we shouldn't copy over files that
         /// have the same date and time.
@@ -1898,6 +2263,30 @@ public void ExitGracefullyOnInvalidPathCharacters(bool isUseHardLinks, bool isUs
             ((MockEngine)t.BuildEngine).AssertLogDoesntContain("MSB3026"); // Didn't do retries
         }
 
+        /// <summary>
+        /// If the DestinationFolder parameter is given invalid path characters, make sure the task exits gracefully.
+        /// </summary>
+        [Theory]
+        [MemberData(nameof(GetHardLinksSymLinks))]
+        public void ExitGracefullyOnInvalidPathCharactersInDestinationFolder(bool isUseHardLinks, bool isUseSymbolicLinks)
+        {
+            var t = new Copy
+            {
+                RetryDelayMilliseconds = 1,  // speed up tests!
+                BuildEngine = new MockEngine(_testOutputHelper),
+                SourceFiles = new ITaskItem[] { new TaskItem("foo") },
+                DestinationFolder = new TaskItem("here | there"),
+                UseHardlinksIfPossible = isUseHardLinks,
+                UseSymboliclinksIfPossible = isUseSymbolicLinks,
+            };
+
+            bool result = t.Execute();
+
+            // Expect for there to have been no copies.
+            Assert.False(result);
+            ((MockEngine)t.BuildEngine).AssertLogDoesntContain("MSB3026"); // Didn't do retries
+        }
+
         /// <summary>
         /// Verifies that we error for retries less than 0
         /// </summary>
diff --git a/src/Tasks.UnitTests/Exec_Tests.cs b/src/Tasks.UnitTests/Exec_Tests.cs
index 088e68c81b0..38700fed179 100644
--- a/src/Tasks.UnitTests/Exec_Tests.cs
+++ b/src/Tasks.UnitTests/Exec_Tests.cs
@@ -191,16 +191,8 @@ public void TimeoutFailsEvenWhenExitCodeIsIgnored()
             // ToolTask does not log an error on timeout.
             mockEngine.Errors.ShouldBe(0);
 
-            if (NativeMethodsShared.IsMono)
-            {
-                const int STILL_ACTIVE = 259; // When Process.WaitForExit times out.
-                exec.ExitCode.ShouldBeOneOf(137, STILL_ACTIVE);
-            }
-            else
-            {
-                // On non-Windows the exit code of a killed process is 128 + SIGKILL = 137
-                exec.ExitCode.ShouldBe(NativeMethodsShared.IsWindows ? -1 : 137);
-            }
+            // On non-Windows the exit code of a killed process is 128 + SIGKILL = 137
+            exec.ExitCode.ShouldBe(NativeMethodsShared.IsWindows ? -1 : 137);
         }
 
         [UnixOnlyFact]
@@ -1033,6 +1025,25 @@ public void EndToEndMultilineExec_EscapeSpecialCharacters()
                 }
             }
         }
+
+        [Fact]
+        public void ConsoleOutputDoesNotTrimLeadingWhitespace()
+        {
+            string lineWithLeadingWhitespace = "    line with some leading whitespace";
+
+            using (var env = TestEnvironment.Create(_output))
+            {
+                var textFilePath = env.CreateFile("leading-whitespace.txt", lineWithLeadingWhitespace).Path;
+                Exec exec = PrepareExec(NativeMethodsShared.IsWindows ? $"type {textFilePath}" : $"cat {textFilePath}");
+                exec.ConsoleToMSBuild = true;
+
+                bool result = exec.Execute();
+
+                result.ShouldBeTrue();
+                exec.ConsoleOutput.Length.ShouldBe(1);
+                exec.ConsoleOutput[0].ItemSpec.ShouldBe(lineWithLeadingWhitespace);
+            }
+        }
     }
 
     internal sealed class ExecWrapper : Exec
diff --git a/src/Tasks.UnitTests/GenerateBindingRedirects_Tests.cs b/src/Tasks.UnitTests/GenerateBindingRedirects_Tests.cs
index a417cabd783..07b1ce57a0f 100644
--- a/src/Tasks.UnitTests/GenerateBindingRedirects_Tests.cs
+++ b/src/Tasks.UnitTests/GenerateBindingRedirects_Tests.cs
@@ -259,6 +259,22 @@ public void AppConfigInvalidIfDependentAssemblyNodeIsEmpty()
             redirectResults.Engine.AssertLogContains("MSB3835");
         }
 
+        [Fact]
+        public void AppConfigWhenFilePlacedInLocationWithGB18030Characters()
+        {
+            using (TestEnvironment env = TestEnvironment.Create())
+            {
+                TransientTestFolder rootTestFolder = env.CreateFolder(); 
+                TransientTestFolder testFolder = env.CreateFolder(Path.Combine(rootTestFolder.Path, "\uD873\uDD02\u9FA8\u82D8\u722B\u9EA4\u03C5\u33D1\uE038\u486B\u0033"));
+                string appConfigContents = WriteAppConfigRuntimeSection(string.Empty, testFolder);
+                string outputAppConfigFile = env.ExpectFile(".config").Path;
+
+                TaskItemMock redirect = new TaskItemMock("System, Version=10.0.0.0, Culture=Neutral, PublicKeyToken='b77a5c561934e089'", "40.0.0.0");
+
+                _ = Should.NotThrow(() => GenerateBindingRedirects(appConfigContents, outputAppConfigFile, redirect));
+            }
+        }
+
         [Fact]
         public void AppConfigFileNotSavedWhenIdentical()
         {
@@ -306,12 +322,11 @@ private BindingRedirectsExecutionResult GenerateBindingRedirects(string appConfi
             GenerateBindingRedirects bindingRedirects = new GenerateBindingRedirects
             {
                 BuildEngine = engine,
-                SuggestedRedirects = suggestedRedirects ?? System.Array.Empty<ITaskItem>(),
+                SuggestedRedirects = suggestedRedirects ?? Array.Empty<ITaskItem>(),
                 AppConfigFile = new TaskItem(appConfigFile),
                 OutputAppConfigFile = new TaskItem(outputAppConfig)
             };
 
-
             bool executionResult = bindingRedirects.Execute();
 
             return new BindingRedirectsExecutionResult
@@ -324,7 +339,9 @@ private BindingRedirectsExecutionResult GenerateBindingRedirects(string appConfi
             };
         }
 
-        private string WriteAppConfigRuntimeSection(string runtimeSection)
+        private string WriteAppConfigRuntimeSection(
+            string runtimeSection,
+            TransientTestFolder transientTestFolder = null)
         {
             string formatString =
 @"<configuration>
@@ -334,7 +351,7 @@ private string WriteAppConfigRuntimeSection(string runtimeSection)
 </configuration>";
             string appConfigContents = string.Format(formatString, runtimeSection);
 
-            string appConfigFile = _env.CreateFile(".config").Path;
+            string appConfigFile = _env.CreateFile(transientTestFolder ?? new TransientTestFolder(), ".config").Path;
             File.WriteAllText(appConfigFile, appConfigContents);
             return appConfigFile;
         }
diff --git a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
index 6b3d539cacf..2c1fca47574 100644
--- a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
+++ b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
@@ -25,6 +25,7 @@
     <ProjectReference Include="..\Tasks\Microsoft.Build.Tasks.csproj" />
     <ProjectReference Include="..\Utilities\Microsoft.Build.Utilities.csproj" />
     <ProjectReference Include="..\Xunit.NetCore.Extensions\Xunit.NetCore.Extensions.csproj" />
+    <ProjectReference Include="..\UnitTests.Shared\Microsoft.Build.UnitTests.Shared.csproj" />
     <ProjectReference Include="..\Samples\PortableTask\PortableTask.csproj" ReferenceOutputAssembly="false" Private="false" />
     <ProjectReference Include="..\Samples\Dependency\Dependency.csproj" ReferenceOutputAssembly="false" Private="false" />
   </ItemGroup>
@@ -46,28 +47,12 @@
     <Compile Include="..\Shared\UnitTests\EscapingUtilities_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\ErrorUtilities_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\PrintLineDebugger_Tests.cs" />
-    <Compile Include="..\Shared\UnitTests\MockEngine.cs" />
-    <Compile Include="..\Shared\UnitTests\MockLogger.cs" />
     <Compile Include="..\Shared\UnitTests\NativeMethodsShared_Tests.cs">
       <Link>NativeMethodsShared_Tests.cs</Link>
     </Compile>
-    <Compile Include="..\Shared\UnitTests\ObjectModelHelpers.cs" />
     <Compile Include="..\Shared\UnitTests\ResourceUtilities_Tests.cs" />
     <Compile Include="..\Shared\QuotingUtilities.cs" />
-    <Compile Include="..\Shared\UnitTests\EngineTestEnvironment.cs" />
-    <Compile Include="..\Shared\UnitTests\TestEnvironment.cs">
-      <Link>TestEnvironment.cs</Link>
-    </Compile>
     <Compile Include="..\Shared\ProcessExtensions.cs" />
-    <Compile Include="..\UnitTests.Shared\EnvironmentProvider.cs" />
-    <Compile Include="..\UnitTests.Shared\RunnerUtilities.cs" />
-    <Compile Include="..\UnitTests.Shared\DriveMapping.cs" />
-    <Compile Include="..\UnitTests.Shared\DummyMappedDrive.cs" />
-    <Compile Include="..\UnitTests.Shared\DummyMappedDriveUtils.cs" />
-    <Compile Include="..\Shared\UnitTests\LongPathSupportDisabledFactAttribute.cs">
-      <Link>Shared\LongPathSupportDisabledFactAttribute.cs</Link>
-    </Compile>
-    <Compile Include="..\UnitTests.Shared\RequiresSymbolicLinksFactAttribute.cs" />
 
     <EmbeddedResource Include="SampleResx" />
     <EmbeddedResource Include="AssemblyDependency\CacheFileSamples\Microsoft.VisualStudio.LanguageServices.Implementation.csprojAssemblyReference.cache" />
@@ -106,11 +91,6 @@
     <Compile Remove="XamlTestHelpers.cs" />
   </ItemGroup>
 
-  <ItemGroup Condition="'$(MonoBuild)' == 'true'">
-    <Compile Remove="LC_Tests.cs" />
-    <Compile Remove="SGen_Tests.cs" />
-  </ItemGroup>
-
   <ItemGroup Condition="$(TargetFrameworkIdentifier) != '.NETFramework'">
     <Compile Remove="Al_Tests.cs" />
     <Compile Remove="AppConfig_Tests.cs" />
diff --git a/src/Tasks.UnitTests/ProjectExtensionsImportTestBase.cs b/src/Tasks.UnitTests/ProjectExtensionsImportTestBase.cs
index a430f5c2993..30eae83deae 100644
--- a/src/Tasks.UnitTests/ProjectExtensionsImportTestBase.cs
+++ b/src/Tasks.UnitTests/ProjectExtensionsImportTestBase.cs
@@ -5,6 +5,7 @@
 using System.IO;
 using System.Linq;
 using Microsoft.Build.Evaluation;
+using Microsoft.Build.Shared;
 using Shouldly;
 using Xunit;
 
@@ -68,6 +69,57 @@ public void DoesNotImportProjectIfNotExist()
             project.GetPropertyValue(PropertyNameToSignalImportSucceeded).ShouldBeEmpty();
         }
 
+        [Fact]
+        public void DoesNotImportProjectIfRestoring()
+        {
+            ObjectModelHelpers.CreateFileInTempProjectDirectory(ImportProjectPath, BasicProjectImportContents);
+
+            Project project = ObjectModelHelpers.LoadProjectFileInTempProjectDirectory(ObjectModelHelpers.CreateFileInTempProjectDirectory(_projectRelativePath, $@"
+                <Project DefaultTargets=`Build` ToolsVersion=`msbuilddefaulttoolsversion`>
+                    <PropertyGroup>
+                        <{MSBuildConstants.MSBuildIsRestoring}>true</{MSBuildConstants.MSBuildIsRestoring}>
+                    </PropertyGroup>
+
+                    <Import Project=`$(MSBuildBinPath)\Microsoft.Common.props` />
+
+                    <Import Project=`$(MSBuildBinPath)\Microsoft.CSharp.targets` />
+                </Project>
+            "));
+
+            string projectExtensionsPath = project.GetPropertyValue("MSBuildProjectExtensionsPath");
+
+            projectExtensionsPath.ShouldNotBeNullOrWhiteSpace();
+            Directory.Exists(projectExtensionsPath).ShouldBeTrue();
+            project.GetPropertyValue(PropertyNameToEnableImport).ShouldBe(bool.FalseString, StringCompareShould.IgnoreCase);
+            project.GetPropertyValue(PropertyNameToSignalImportSucceeded).ShouldBeEmpty();
+        }
+
+        [Fact]
+        public void ImportsProjectIfRestoringAndExplicitlySet()
+        {
+            ObjectModelHelpers.CreateFileInTempProjectDirectory(ImportProjectPath, BasicProjectImportContents);
+
+            Project project = ObjectModelHelpers.LoadProjectFileInTempProjectDirectory(ObjectModelHelpers.CreateFileInTempProjectDirectory(_projectRelativePath, $@"
+                <Project DefaultTargets=`Build` ToolsVersion=`msbuilddefaulttoolsversion`>
+                    <PropertyGroup>
+                        <{PropertyNameToEnableImport}>true</{PropertyNameToEnableImport}>
+                        <{MSBuildConstants.MSBuildIsRestoring}>true</{MSBuildConstants.MSBuildIsRestoring}>
+                    </PropertyGroup>
+
+                    <Import Project=`$(MSBuildBinPath)\Microsoft.Common.props` />
+
+                    <Import Project=`$(MSBuildBinPath)\Microsoft.CSharp.targets` />
+                </Project>
+            "));
+
+            string projectExtensionsPath = project.GetPropertyValue("MSBuildProjectExtensionsPath");
+
+            projectExtensionsPath.ShouldNotBeNullOrWhiteSpace();
+            Directory.Exists(projectExtensionsPath).ShouldBeTrue();
+            project.GetPropertyValue(PropertyNameToEnableImport).ShouldBe(bool.TrueString, StringCompareShould.IgnoreCase);
+            project.GetPropertyValue(PropertyNameToSignalImportSucceeded).ShouldBe(bool.TrueString, StringCompareShould.IgnoreCase);
+        }
+
         /// <summary>
         /// Ensures that even if the MSBuildProjectExtensionsPath exists, the extensions are not imported if the functionality is disabled via the <see cref="PropertyNameToEnableImport"/>.
         /// </summary>
diff --git a/src/Tasks.UnitTests/ResourceHandling/GenerateResourceOutOfProc_Tests.cs b/src/Tasks.UnitTests/ResourceHandling/GenerateResourceOutOfProc_Tests.cs
index 4172d013c78..472d732a973 100644
--- a/src/Tasks.UnitTests/ResourceHandling/GenerateResourceOutOfProc_Tests.cs
+++ b/src/Tasks.UnitTests/ResourceHandling/GenerateResourceOutOfProc_Tests.cs
@@ -2567,8 +2567,6 @@ public References(ITestOutputHelper output)
         }
 
         [Fact]
-        // FIXME: mono: looks for csc.exe
-        // https://github.com/dotnet/msbuild/issues/677
         public void DontLockP2PReferenceWhenResolvingSystemTypes()
         {
             // This WriteLine is a hack.  On a slow machine, the Tasks unittest fails because remoting
@@ -2744,8 +2742,6 @@ public class Class1
         /// absolute path).  The fix was to use Assembly.LoadFrom instead.
         /// </summary>
         [Fact]
-        // FIXME: mono: looks for csc.exe
-        // https://github.com/dotnet/msbuild/issues/677
         public void ReferencedAssemblySpecifiedUsingRelativePath()
         {
             // This WriteLine is a hack.  On a slow machine, the Tasks unittest fails because remoting
diff --git a/src/Tasks.UnitTests/Unzip_Tests.cs b/src/Tasks.UnitTests/Unzip_Tests.cs
index 0f862db51ee..b53c19047be 100644
--- a/src/Tasks.UnitTests/Unzip_Tests.cs
+++ b/src/Tasks.UnitTests/Unzip_Tests.cs
@@ -197,7 +197,7 @@ public void LogsErrorIfReadOnlyFileCannotBeOverwitten()
 
                 unzip.Execute().ShouldBeFalse(_mockEngine.Log);
 
-                _mockEngine.Log.ShouldContain($"D6DFD219DACE48F8B86EFCDF98433333.txt{(NativeMethodsShared.IsMono ? "\"" : "'")} is denied", customMessage: _mockEngine.Log);
+                _mockEngine.Log.ShouldContain("D6DFD219DACE48F8B86EFCDF98433333.txt' is denied", customMessage: _mockEngine.Log);
             }
         }
 
diff --git a/src/Tasks.UnitTests/XslTransformation_Tests.cs b/src/Tasks.UnitTests/XslTransformation_Tests.cs
index e449c1e8dea..3c218f2ebe7 100644
--- a/src/Tasks.UnitTests/XslTransformation_Tests.cs
+++ b/src/Tasks.UnitTests/XslTransformation_Tests.cs
@@ -20,7 +20,6 @@
 
 namespace Microsoft.Build.UnitTests
 {
-#if !MONO
     /// <summary>
     /// These tests run. The temporary output folder for this test is Path.Combine(Path.GetTempPath(), DateTime.Now.Ticks.ToString())
     /// 1. When combination of (xml, xmlfile) x (xsl, xslfile).
@@ -1259,5 +1258,4 @@ private void CompileDoubleType(string outputFile)
 #endif
         #endregion
     }
-#endif
 }
diff --git a/src/Tasks/AssemblyDependency/AssemblyInformation.cs b/src/Tasks/AssemblyDependency/AssemblyInformation.cs
index 91785df5c86..1c5480263e2 100644
--- a/src/Tasks/AssemblyDependency/AssemblyInformation.cs
+++ b/src/Tasks/AssemblyDependency/AssemblyInformation.cs
@@ -18,7 +18,7 @@
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.FileSystem;
 using static Microsoft.Build.Shared.FileSystem.WindowsNative;
-#if FEATURE_ASSEMBLYLOADCONTEXT || MONO
+#if FEATURE_ASSEMBLYLOADCONTEXT
 using System.Reflection.PortableExecutable;
 using System.Reflection.Metadata;
 #endif
@@ -45,11 +45,11 @@ internal class AssemblyInformation : DisposableBase
         private readonly string _sourceFile;
         private FrameworkName _frameworkName;
 
-#if FEATURE_ASSEMBLYLOADCONTEXT || MONO
+#if FEATURE_ASSEMBLYLOADCONTEXT
         private bool _metadataRead;
 #endif
 
-#if !FEATURE_ASSEMBLYLOADCONTEXT && !MONO
+#if !FEATURE_ASSEMBLYLOADCONTEXT
         private static string s_targetFrameworkAttribute = "System.Runtime.Versioning.TargetFrameworkAttribute";
 #endif
 #if !FEATURE_ASSEMBLYLOADCONTEXT
@@ -380,20 +380,9 @@ private string GetStringCustomAttribute(IMetaDataImport2 import2, uint assemblyS
         /// </summary>
         private FrameworkName GetFrameworkName()
         {
-            // Disabling use of System.Reflection in case of MONO, because
-            // Assembly.GetCustomAttributes* for an attribute which belongs
-            // to an assembly that mono cannot find, causes a crash!
-            // Instead, opt for using PEReader and friends to get that info
-#if !FEATURE_ASSEMBLYLOADCONTEXT && !MONO
+#if !FEATURE_ASSEMBLYLOADCONTEXT
             if (!NativeMethodsShared.IsWindows)
             {
-                if (String.Equals(Environment.GetEnvironmentVariable("MONO29679"), "1", StringComparison.OrdinalIgnoreCase))
-                {
-                    // Getting custom attributes in CoreFx contract assemblies is busted
-                    // https://bugzilla.xamarin.com/show_bug.cgi?id=29679
-                    return null;
-                }
-
                 CustomAttributeData attr = null;
 
                 foreach (CustomAttributeData a in _assembly.GetCustomAttributesData())
@@ -442,7 +431,7 @@ private FrameworkName GetFrameworkName()
 #endif
         }
 
-#if FEATURE_ASSEMBLYLOADCONTEXT || MONO
+#if FEATURE_ASSEMBLYLOADCONTEXT
         /// <summary>
         /// Read everything from the assembly in a single stream.
         /// </summary>
@@ -579,9 +568,7 @@ private static AssemblyName GetAssemblyName(MetadataReader metadataReader, Assem
         }
 #endif
 
-        // Enabling this for MONO, because it's required by GetFrameworkName.
-        // More details are in the comment for that method
-#if FEATURE_ASSEMBLYLOADCONTEXT || MONO
+#if FEATURE_ASSEMBLYLOADCONTEXT
         // This method copied from DNX source: https://github.com/aspnet/dnx/blob/e0726f769aead073af2d8cd9db47b89e1745d574/src/Microsoft.Dnx.Tooling/Utils/LockFileUtils.cs#L385
         //  System.Reflection.Metadata 1.1 is expected to have an API that helps with this.
         /// <summary>
diff --git a/src/Tasks/AssemblyDependency/AssemblyResolution.cs b/src/Tasks/AssemblyDependency/AssemblyResolution.cs
index 74488931e7a..a5bf72a3616 100644
--- a/src/Tasks/AssemblyDependency/AssemblyResolution.cs
+++ b/src/Tasks/AssemblyDependency/AssemblyResolution.cs
@@ -12,6 +12,8 @@
 
 namespace Microsoft.Build.Tasks
 {
+    internal readonly record struct DirectoryWithParentAssembly(string Directory, string ParentAssembly);
+
     /// <summary>
     /// Utility class encapsulates steps to resolve assembly references.
     /// For example, this class has the code that will take:
@@ -203,7 +205,7 @@ public static Resolver[] CompileSearchPaths(
                 }
                 else
                 {
-                    resolvers[p] = new DirectoryResolver(searchPaths[p], getAssemblyName, fileExists, getRuntimeVersion, targetedRuntimeVersion);
+                    resolvers[p] = new DirectoryResolver(searchPaths[p], getAssemblyName, fileExists, getRuntimeVersion, targetedRuntimeVersion, null);
                 }
             }
             return resolvers;
@@ -213,16 +215,16 @@ public static Resolver[] CompileSearchPaths(
         /// Build a resolver array from a set of directories to resolve directly from.
         /// </summary>
         internal static Resolver[] CompileDirectories(
-            List<string> directories,
+            List<DirectoryWithParentAssembly> parentReferenceDirectories,
             FileExists fileExists,
             GetAssemblyName getAssemblyName,
             GetAssemblyRuntimeVersion getRuntimeVersion,
             Version targetedRuntimeVersion)
         {
-            var resolvers = new Resolver[directories.Count];
-            for (int i = 0; i < directories.Count; i++)
+            var resolvers = new Resolver[parentReferenceDirectories.Count];
+            for (int i = 0; i < parentReferenceDirectories.Count; i++)
             {
-                resolvers[i] = new DirectoryResolver(directories[i], getAssemblyName, fileExists, getRuntimeVersion, targetedRuntimeVersion);
+                resolvers[i] = new DirectoryResolver(parentReferenceDirectories[i].Directory, getAssemblyName, fileExists, getRuntimeVersion, targetedRuntimeVersion, parentReferenceDirectories[i].ParentAssembly);
             }
 
             return resolvers;
diff --git a/src/Tasks/AssemblyDependency/DirectoryResolver.cs b/src/Tasks/AssemblyDependency/DirectoryResolver.cs
index fedf7c18e38..67315cc0296 100644
--- a/src/Tasks/AssemblyDependency/DirectoryResolver.cs
+++ b/src/Tasks/AssemblyDependency/DirectoryResolver.cs
@@ -14,12 +14,18 @@ namespace Microsoft.Build.Tasks
     /// </summary>
     internal class DirectoryResolver : Resolver
     {
+        /// <summary>
+        /// The parent assembly that was used for the SearchPath.
+        /// </summary>
+        public readonly string parentAssembly;
+
         /// <summary>
         /// Construct.
         /// </summary>
-        public DirectoryResolver(string searchPathElement, GetAssemblyName getAssemblyName, FileExists fileExists, GetAssemblyRuntimeVersion getRuntimeVersion, Version targetedRuntimeVesion)
+        public DirectoryResolver(string searchPathElement, GetAssemblyName getAssemblyName, FileExists fileExists, GetAssemblyRuntimeVersion getRuntimeVersion, Version targetedRuntimeVesion, string parentAssembly)
             : base(searchPathElement, getAssemblyName, fileExists, getRuntimeVersion, targetedRuntimeVesion, System.Reflection.ProcessorArchitecture.None, false)
         {
+            this.parentAssembly = parentAssembly;
         }
 
         /// <inheritdoc/>
@@ -40,8 +46,27 @@ public override bool Resolve(
             foundPath = null;
             userRequestedSpecificFile = false;
 
-            // Resolve to the given path.
-            string resolvedPath = ResolveFromDirectory(assemblyName, isPrimaryProjectReference, wantSpecificVersion, executableExtensions, searchPathElement, assembliesConsideredAndRejected);
+            string resolvedPath;
+
+            if (parentAssembly != null)
+            {
+                var searchLocationsWithParentAssembly = new List<ResolutionSearchLocation>();
+
+                // Resolve to the given path.
+                resolvedPath = ResolveFromDirectory(assemblyName, isPrimaryProjectReference, wantSpecificVersion, executableExtensions, searchPathElement, searchLocationsWithParentAssembly);
+
+                foreach (var searchLocation in searchLocationsWithParentAssembly)
+                {
+                    searchLocation.ParentAssembly = parentAssembly;
+                }
+
+                assembliesConsideredAndRejected.AddRange(searchLocationsWithParentAssembly);
+            }
+            else
+            {
+                resolvedPath = ResolveFromDirectory(assemblyName, isPrimaryProjectReference, wantSpecificVersion, executableExtensions, searchPathElement, assembliesConsideredAndRejected);
+            }
+     
             if (resolvedPath != null)
             {
                 foundPath = resolvedPath;
diff --git a/src/Tasks/AssemblyDependency/GenerateBindingRedirects.cs b/src/Tasks/AssemblyDependency/GenerateBindingRedirects.cs
index c108bb142f0..99307761f8f 100644
--- a/src/Tasks/AssemblyDependency/GenerateBindingRedirects.cs
+++ b/src/Tasks/AssemblyDependency/GenerateBindingRedirects.cs
@@ -10,6 +10,7 @@
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.FileSystem;
 using System.IO;
+using System.Xml;
 
 #nullable disable
 
@@ -335,7 +336,12 @@ private XDocument LoadAppConfig(ITaskItem appConfigItem)
             }
             else
             {
-                document = XDocument.Load(appConfigItem.ItemSpec);
+                var xrs = new XmlReaderSettings { DtdProcessing = DtdProcessing.Ignore, CloseInput = true, IgnoreWhitespace = true };
+                using (XmlReader xr = XmlReader.Create(File.OpenRead(appConfigItem.ItemSpec), xrs))
+                {
+                    document = XDocument.Load(xr);
+                }
+
                 if (document.Root == null || document.Root.Name != "configuration")
                 {
                     Log.LogErrorWithCodeFromResources("GenerateBindingRedirects.MissingConfigurationNode");
diff --git a/src/Tasks/AssemblyDependency/ReferenceTable.cs b/src/Tasks/AssemblyDependency/ReferenceTable.cs
index e023707d985..f8cc28a2fa4 100644
--- a/src/Tasks/AssemblyDependency/ReferenceTable.cs
+++ b/src/Tasks/AssemblyDependency/ReferenceTable.cs
@@ -962,7 +962,7 @@ private void FindSatellites(
                 }
 
                 string[] subDirectories = _getDirectories(reference.DirectoryName, "*");
-                string sateliteFilename = subDirectories.Length > 0
+                string satelliteFilename = subDirectories.Length > 0
                     ? reference.FileNameWithoutExtension + ".resources.dll"
                     : string.Empty;
 
@@ -973,11 +973,11 @@ private void FindSatellites(
 
                     if (CultureInfoCache.IsValidCultureString(cultureName))
                     {
-                        string satelliteAssembly = Path.Combine(subDirectory, sateliteFilename);
+                        string satelliteAssembly = Path.Combine(subDirectory, satelliteFilename);
                         if (_fileExists(satelliteAssembly))
                         {
                             // This is valid satellite assembly.
-                            reference.AddSatelliteFile(Path.Combine(cultureName, sateliteFilename));
+                            reference.AddSatelliteFile(Path.Combine(cultureName, satelliteFilename));
                         }
                     }
                 }
@@ -1220,7 +1220,7 @@ private static bool IsPseudoAssembly(string name)
         /// The only time we do not want to do this is if the parent assembly came from the GAC or AssemblyFoldersEx then we want the assembly
         /// to be found using those resolvers so that our GAC and AssemblyFolders checks later on will work on those assemblies.
         /// </summary>
-        internal static void CalculateParentAssemblyDirectories(List<string> parentReferenceFolders, Reference parentReference)
+        internal static void CalculateParentAssemblyDirectories(List<DirectoryWithParentAssembly> parentReferenceFolders, Reference parentReference)
         {
             string parentReferenceFolder = parentReference.DirectoryName;
             string parentReferenceResolvedSearchPath = parentReference.ResolvedSearchPath;
@@ -1240,7 +1240,7 @@ internal static void CalculateParentAssemblyDirectories(List<string> parentRefer
             if (!parentReferencesAdded.Contains(parentReferenceFolder) && !parentReferenceResolvedFromGAC && !parentReferenceResolvedFromAssemblyFolders)
             {
                 parentReferencesAdded.Add(parentReferenceFolder);
-                parentReferenceFolders.Add(parentReferenceFolder);
+                parentReferenceFolders.Add(new (Directory: parentReferenceFolder, ParentAssembly: parentReference.FullPath));
             }
         }
 
@@ -1279,7 +1279,7 @@ private void ResolveReference(
             // First, look for the dependency in the parents' directories. Unless they are resolved from the GAC or assemblyFoldersEx then
             // we should make sure we use the GAC and assemblyFolders resolvers themserves rather than a directory resolver to find the reference.
             // This way we dont get assemblies pulled from the GAC or AssemblyFolders but dont have the marking that they were pulled form there.
-            var parentReferenceFolders = new List<string>();
+            var parentReferenceFolders = new List<DirectoryWithParentAssembly>();
             foreach (Reference parentReference in reference.GetDependees())
             {
                 CalculateParentAssemblyDirectories(parentReferenceFolders, parentReference);
@@ -1298,7 +1298,7 @@ private void ResolveReference(
             else
             {
                 // Do not probe near dependees if the reference is primary and resolved externally. If resolved externally, the search paths should have been specified in such a way to point to the assembly file.
-                if (assemblyName == null || !_externallyResolvedPrimaryReferences.Contains(assemblyName.Name))
+                if (parentReferenceFolders.Count > 0 && (assemblyName == null || !_externallyResolvedPrimaryReferences.Contains(assemblyName.Name)))
                 {
                     jaggedResolvers.Add(AssemblyResolution.CompileDirectories(parentReferenceFolders, _fileExists, _getAssemblyName, _getRuntimeVersion, _targetedRuntimeVersion));
                 }
diff --git a/src/Tasks/AssemblyDependency/ResolutionSearchLocation.cs b/src/Tasks/AssemblyDependency/ResolutionSearchLocation.cs
index e79d68ce21a..952e8612576 100644
--- a/src/Tasks/AssemblyDependency/ResolutionSearchLocation.cs
+++ b/src/Tasks/AssemblyDependency/ResolutionSearchLocation.cs
@@ -23,6 +23,11 @@ internal class ResolutionSearchLocation
         /// </summary>
         internal string SearchPath { get; set; }
 
+        /// <summary>
+        /// The parent assembly that was used for the SearchPath.
+        /// </summary>
+        internal string ParentAssembly { get; set; }
+
         /// <summary>
         /// The name of the assembly found at that location. Will be null if there was no assembly there.
         /// </summary>
diff --git a/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs b/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
index 381fa520766..75ea877da61 100644
--- a/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
+++ b/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
@@ -15,6 +15,7 @@
 using Microsoft.Build.Eventing;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
+using Microsoft.Build.Shared.FileSystem;
 using Microsoft.Build.Tasks.AssemblyDependency;
 using Microsoft.Build.Utilities;
 
@@ -102,6 +103,7 @@ private static class Strings
             public static string ResolvedFrom;
             public static string SearchedAssemblyFoldersEx;
             public static string SearchPath;
+            public static string SearchPathAddedByParentAssembly;
             public static string TargetedProcessorArchitectureDoesNotMatch;
             public static string UnificationByAppConfig;
             public static string UnificationByAutoUnify;
@@ -152,7 +154,8 @@ internal static void Initialize(TaskLoggingHelper log)
                 Resolved = GetResourceFourSpaces("ResolveAssemblyReference.Resolved");
                 ResolvedFrom = GetResourceFourSpaces("ResolveAssemblyReference.ResolvedFrom");
                 SearchedAssemblyFoldersEx = GetResourceEightSpaces("ResolveAssemblyReference.SearchedAssemblyFoldersEx");
-                SearchPath = EightSpaces + GetResource("ResolveAssemblyReference.SearchPath");
+                SearchPath = GetResourceEightSpaces("ResolveAssemblyReference.SearchPath");
+                SearchPathAddedByParentAssembly = GetResourceEightSpaces("ResolveAssemblyReference.SearchPathAddedByParentAssembly");
                 TargetedProcessorArchitectureDoesNotMatch = GetResourceEightSpaces("ResolveAssemblyReference.TargetedProcessorArchitectureDoesNotMatch");
                 UnificationByAppConfig = GetResourceFourSpaces("ResolveAssemblyReference.UnificationByAppConfig");
                 UnificationByAutoUnify = GetResourceFourSpaces("ResolveAssemblyReference.UnificationByAutoUnify");
@@ -1791,7 +1794,14 @@ private void LogAssembliesConsideredAndRejected(Reference reference, string fusi
                     if (lastSearchPath != location.SearchPath)
                     {
                         lastSearchPath = location.SearchPath;
-                        Log.LogMessage(importance, Strings.SearchPath, lastSearchPath);
+                        if (location.ParentAssembly != null)
+                        {
+                            Log.LogMessage(importance, Strings.SearchPathAddedByParentAssembly, lastSearchPath, location.ParentAssembly);
+                        }
+                        else
+                        {
+                            Log.LogMessage(importance, Strings.SearchPath, lastSearchPath);
+                        }                 
                         if (logAssemblyFoldersMinimal)
                         {
                             Log.LogMessage(importance, Strings.SearchedAssemblyFoldersEx);
@@ -2066,12 +2076,6 @@ internal void WriteStateFile()
             {
                 // Either the cache is dirty (we added or updated an item) or the number of items actually used is less than what
                 // we got by reading the state file prior to execution. Serialize the cache into the state file.
-                if (FailIfNotIncremental)
-                {
-                    Log.LogErrorFromResources("ResolveAssemblyReference.WritingCacheFile", _stateFile);
-                    return;
-                }
-
                 _cache.SerializeCache(_stateFile, Log);
             }
         }
@@ -3205,7 +3209,7 @@ public override bool Execute()
             return Execute(
                 p => FileUtilities.FileExistsNoThrow(p),
                 p => FileUtilities.DirectoryExistsNoThrow(p),
-                (p, searchPattern) => Directory.GetDirectories(p, searchPattern),
+                (p, searchPattern) => FileSystems.Default.EnumerateDirectories(p, searchPattern).ToArray(),
                 p => AssemblyNameExtension.GetAssemblyNameEx(p),
                 (string path, ConcurrentDictionary<string, AssemblyMetadata> assemblyMetadataCache, out AssemblyNameExtension[] dependencies, out string[] scatterFiles, out FrameworkNameVersioning frameworkName)
                     => AssemblyInformation.GetAssemblyMetadata(path, assemblyMetadataCache, out dependencies, out scatterFiles, out frameworkName),
diff --git a/src/Tasks/CodeTaskFactory.cs b/src/Tasks/CodeTaskFactory.cs
index 4c076939d98..73eb0403611 100644
--- a/src/Tasks/CodeTaskFactory.cs
+++ b/src/Tasks/CodeTaskFactory.cs
@@ -658,23 +658,6 @@ static string GetPathFromPartialAssemblyName(string partialName)
                 {
                     candidateAssemblyLocation = candidateAssembly.Location;
                 }
-                else if (NativeMethodsShared.IsMono)
-                {
-                    string path = Path.Combine(
-                        NativeMethodsShared.FrameworkCurrentPath,
-                        "Facades",
-                        Path.GetFileName(partialName));
-                    if (!FileSystems.Default.FileExists(path))
-                    {
-                        var newPath = path + ".dll";
-                        path = !FileSystems.Default.FileExists(newPath) ? path + ".exe" : newPath;
-                    }
-                    candidateAssembly = Assembly.UnsafeLoadFrom(path);
-                    if (candidateAssembly != null)
-                    {
-                        candidateAssemblyLocation = candidateAssembly.Location;
-                    }
-                }
 #pragma warning restore 618, 612
                 return candidateAssemblyLocation;
             }
diff --git a/src/Tasks/Copy.cs b/src/Tasks/Copy.cs
index cdb28ee4dc9..c51b3db6e91 100644
--- a/src/Tasks/Copy.cs
+++ b/src/Tasks/Copy.cs
@@ -8,6 +8,7 @@
 using System.Runtime.InteropServices;
 using System.Threading;
 using System.Threading.Tasks.Dataflow;
+
 using Microsoft.Build.Eventing;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
@@ -99,9 +100,10 @@ public Copy()
         /// </summary>
         private const int RetryDelayMillisecondsDefault = 1000;
 
-        [Required]
         public ITaskItem[] SourceFiles { get; set; }
 
+        public ITaskItem[] SourceFolders { get; set; }
+
         public ITaskItem DestinationFolder { get; set; }
 
         /// <summary>
@@ -402,7 +404,7 @@ internal bool Execute(
             int parallelism)
         {
             // If there are no source files then just return success.
-            if (SourceFiles == null || SourceFiles.Length == 0)
+            if (IsSourceSetEmpty())
             {
                 DestinationFiles = Array.Empty<ITaskItem>();
                 CopiedFiles = Array.Empty<ITaskItem>();
@@ -643,6 +645,11 @@ private bool CopyParallel(
             return success;
         }
 
+        private bool IsSourceSetEmpty()
+        {
+            return (SourceFiles == null || SourceFiles.Length == 0) && (SourceFolders == null || SourceFolders.Length == 0);
+        }
+
         /// <summary>
         /// Verify that the inputs are correct.
         /// </summary>
@@ -661,7 +668,7 @@ private bool ValidateInputs()
                 return false;
             }
 
-            // There must be a destinationFolder (either files or directory).
+            // There must be a destination (either files or directory).
             if (DestinationFiles == null && DestinationFolder == null)
             {
                 Log.LogErrorWithCodeFromResources("Copy.NeedsDestination", "DestinationFiles", "DestinationFolder");
@@ -675,6 +682,13 @@ private bool ValidateInputs()
                 return false;
             }
 
+            // SourceFolders and DestinationFiles can't be used together.
+            if (SourceFolders != null && DestinationFiles != null)
+            {
+                Log.LogErrorWithCodeFromResources("Copy.IncompatibleParameters", "SourceFolders", "DestinationFiles");
+                return false;
+            }
+
             // If the caller passed in DestinationFiles, then its length must match SourceFiles.
             if (DestinationFiles != null && DestinationFiles.Length != SourceFiles.Length)
             {
@@ -682,7 +696,6 @@ private bool ValidateInputs()
                 return false;
             }
 
-
             if (ErrorIfLinkFails && !UseHardlinksIfPossible && !UseSymboliclinksIfPossible)
             {
                 Log.LogErrorWithCodeFromResources("Copy.ErrorIfLinkFailsSetWithoutLinkOption");
@@ -694,40 +707,126 @@ private bool ValidateInputs()
 
         /// <summary>
         /// Set up our list of destination files.
+        /// For SourceFiles: Apply DestinationFolder to each SourceFiles item to create a DestinationFiles item.
+        /// For SourceFolders: With each SourceFolders item, get the files in the represented directory. Create both SourceFiles and DestinationFiles items.
         /// </summary>
         /// <returns>False if an error occurred, implying aborting the overall copy operation.</returns>
         private bool InitializeDestinationFiles()
         {
-            if (DestinationFiles == null)
+            bool isSuccess = true;
+
+            try
             {
                 // If the caller passed in DestinationFolder, convert it to DestinationFiles
-                DestinationFiles = new ITaskItem[SourceFiles.Length];
-
-                for (int i = 0; i < SourceFiles.Length; ++i)
+                if (DestinationFiles == null && SourceFiles != null)
                 {
-                    // Build the correct path.
-                    string destinationFile;
-                    try
+                    DestinationFiles = new ITaskItem[SourceFiles.Length];
+
+                    for (int i = 0; i < SourceFiles.Length; ++i)
                     {
-                        destinationFile = Path.Combine(DestinationFolder.ItemSpec, Path.GetFileName(SourceFiles[i].ItemSpec));
+                        // Build the correct path.
+                        if (!TryPathOperation(
+                                () => Path.Combine(DestinationFolder.ItemSpec, Path.GetFileName(SourceFiles[i].ItemSpec)),
+                                SourceFiles[i].ItemSpec,
+                                DestinationFolder.ItemSpec,
+                                out string destinationFile))
+                        {
+                            isSuccess = false;
+                            break;
+                        }
+
+                        // Initialize the destinationFolder item.
+                        // ItemSpec is unescaped, and the TaskItem constructor expects an escaped input, so we need to
+                        // make sure to re-escape it here.
+                        DestinationFiles[i] = new TaskItem(EscapingUtilities.Escape(destinationFile));
+
+                        // Copy meta-data from source to destinationFolder.
+                        SourceFiles[i].CopyMetadataTo(DestinationFiles[i]);
                     }
-                    catch (ArgumentException e)
+                }
+
+                if (isSuccess && SourceFolders != null && SourceFolders.Length > 0)
+                {
+                    var sourceFiles = SourceFiles != null ? new List<ITaskItem>(SourceFiles) : new List<ITaskItem>();
+                    var destinationFiles = DestinationFiles != null ? new List<ITaskItem>(DestinationFiles) : new List<ITaskItem>();
+
+                    foreach (ITaskItem sourceFolder in SourceFolders)
                     {
-                        Log.LogErrorWithCodeFromResources("Copy.Error", SourceFiles[i].ItemSpec, DestinationFolder.ItemSpec, e.Message);
-                        // Clear the outputs.
-                        DestinationFiles = Array.Empty<ITaskItem>();
-                        return false;
-                    }
+                        string src = FileUtilities.NormalizePath(sourceFolder.ItemSpec);
+                        string srcName = Path.GetFileName(src);
 
-                    // Initialize the destinationFolder item.
-                    // ItemSpec is unescaped, and the TaskItem constructor expects an escaped input, so we need to
-                    // make sure to re-escape it here.
-                    DestinationFiles[i] = new TaskItem(EscapingUtilities.Escape(destinationFile));
+                        (string[] filesInFolder, _, _) = FileMatcher.Default.GetFiles(src, "**");
 
-                    // Copy meta-data from source to destinationFolder.
-                    SourceFiles[i].CopyMetadataTo(DestinationFiles[i]);
+                        foreach (string file in filesInFolder)
+                        {
+                            if (!TryPathOperation(
+                                    () => Path.Combine(src, file),
+                                    sourceFolder.ItemSpec,
+                                    DestinationFolder.ItemSpec,
+                                    out string sourceFile))
+                            {
+                                isSuccess = false;
+                                break;
+                            }
+
+                            if (!TryPathOperation(
+                                    () => Path.Combine(DestinationFolder.ItemSpec, srcName, file),
+                                    sourceFolder.ItemSpec,
+                                    DestinationFolder.ItemSpec,
+                                    out string destinationFile))
+                            {
+                                isSuccess = false;
+                                break;
+                            }
+
+
+                            var item = new TaskItem(EscapingUtilities.Escape(sourceFile));
+                            sourceFolder.CopyMetadataTo(item);
+                            sourceFiles.Add(item);
+
+                            item = new TaskItem(EscapingUtilities.Escape(destinationFile));
+                            sourceFolder.CopyMetadataTo(item);
+                            destinationFiles.Add(item);
+                        }
+                    }
+
+                    SourceFiles = sourceFiles.ToArray();
+                    DestinationFiles = destinationFiles.ToArray();
                 }
             }
+            finally
+            {
+                if (!isSuccess)
+                {
+                    // Clear the outputs.
+                    DestinationFiles = Array.Empty<ITaskItem>();
+                }
+            }
+
+            return isSuccess;
+        }
+
+        /// <summary>
+        /// Tries the path operation. Logs a 'Copy.Error' if an exception is thrown.
+        /// </summary>
+        /// <param name="operation">The operation.</param>
+        /// <param name="src">The source to use for the log message.</param>
+        /// <param name="dest">The destination to use for the log message.</param>
+        /// <param name="resultPathOperation">The result of the path operation.</param>
+        /// <returns></returns>
+        private bool TryPathOperation(Func<string> operation, string src, string dest, out string resultPathOperation)
+        {
+            resultPathOperation = string.Empty;
+
+            try
+            {
+                resultPathOperation = operation();
+            }
+            catch (ArgumentException e)
+            {
+                Log.LogErrorWithCodeFromResources("Copy.Error", src, dest, e.Message);
+                return false;
+            }
 
             return true;
         }
@@ -926,20 +1025,9 @@ private bool DoCopyWithRetries(FileState sourceFileState, FileState destinationF
         private static string GetLockedFileMessage(string file)
         {
             string message = string.Empty;
-
-            try
-            {
-                if (NativeMethodsShared.IsWindows && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_4))
-                {
-                    var processes = LockCheck.GetProcessesLockingFile(file);
-                    message = !string.IsNullOrEmpty(processes)
-                        ? ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("Copy.FileLocked", processes)
-                        : String.Empty;
-                }
-            }
-            catch (Exception)
+            if (NativeMethodsShared.IsWindows)
             {
-                // Never throw if we can't get the processes locking the file.
+                message = LockCheck.GetLockedFileMessage(file);
             }
 
             return message;
diff --git a/src/Tasks/Delegate.cs b/src/Tasks/Delegate.cs
index b315d29426b..48711172264 100644
--- a/src/Tasks/Delegate.cs
+++ b/src/Tasks/Delegate.cs
@@ -14,13 +14,13 @@
 namespace Microsoft.Build.Tasks
 {
     /// <summary>
-    /// File.GetAttributes delegate
+    /// File.GetAttributes delegate.
     /// </summary>
     /// <param name="path">The path get attributes for.</param>
     internal delegate FileAttributes GetAttributes(string path);
 
     /// <summary>
-    /// File SetAttributes delegate
+    /// File SetAttributes delegate.
     /// </summary>
     /// <param name="path">The path to set attributes for.</param>
     /// <param name="attributes">The actual file attributes.</param>
@@ -37,7 +37,7 @@ namespace Microsoft.Build.Tasks
     internal delegate void SetLastWriteTime(string path, DateTime timestamp);
 
     /// <summary>
-    /// GetDirectories delegate
+    /// GetDirectories delegate.
     /// </summary>
     /// <param name="path">The path to get directories for.</param>
     /// <param name="pattern">The pattern to search for.</param>
diff --git a/src/Tasks/Exec.cs b/src/Tasks/Exec.cs
index 9faaa688874..f241972e4c3 100644
--- a/src/Tasks/Exec.cs
+++ b/src/Tasks/Exec.cs
@@ -250,29 +250,6 @@ private void CreateTemporaryBatchFile()
                     sw.WriteLine("#!/bin/sh");
                 }
 
-                if (NativeMethodsShared.IsUnixLike && NativeMethodsShared.IsMono)
-                {
-                    // Extract the command we are going to run. Note that the command name may
-                    // be preceded by whitespace
-                    var m = Regex.Match(Command, @"^\s*((?:(?:(?<!\\)[^\0 !$`&*()+])|(?:(?<=\\)[^\0]))+)(.*)");
-                    if (m.Success && m.Groups.Count > 1 && m.Groups[1].Captures.Count > 0)
-                    {
-                        string exe = m.Groups[1].Captures[0].ToString();
-                        string commandLine = (m.Groups.Count > 2 && m.Groups[2].Captures.Count > 0) ?
-                            m.Groups[2].Captures[0].Value : "";
-
-
-                        // If we are trying to run a .exe file, prepend mono as the file may
-                        // not be runnable
-                        if (exe.EndsWith(".exe", StringComparison.OrdinalIgnoreCase)
-                            || exe.EndsWith(".exe\"", StringComparison.OrdinalIgnoreCase)
-                            || exe.EndsWith(".exe'", StringComparison.OrdinalIgnoreCase))
-                        {
-                            Command = "mono " + FileUtilities.FixFilePath(exe) + commandLine;
-                        }
-                    }
-                }
-
                 sw.WriteLine(Command);
 
                 if (!NativeMethodsShared.IsUnixLike)
@@ -410,7 +387,10 @@ protected override void LogEventsFromTextOutput(string singleLine, MessageImport
 
             if (ConsoleToMSBuild)
             {
-                string trimmedTextLine = singleLine.Trim();
+                string trimmedTextLine = ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10) ?
+                    singleLine.TrimEnd() :
+                    singleLine.Trim();
+
                 if (trimmedTextLine.Length > 0)
                 {
                     // The lines read may be unescaped, so we need to escape them
diff --git a/src/Tasks/GenerateManifestBase.cs b/src/Tasks/GenerateManifestBase.cs
index 7fdafde410b..fe77d0e5f63 100644
--- a/src/Tasks/GenerateManifestBase.cs
+++ b/src/Tasks/GenerateManifestBase.cs
@@ -619,7 +619,13 @@ private bool WriteManifest()
             }
             catch (Exception ex)
             {
-                Log.LogErrorWithCodeFromResources("GenerateManifest.WriteOutputManifestFailed", OutputManifest.ItemSpec, ex.Message);
+                string lockedFileMessage = string.Empty;
+                if (NativeMethodsShared.IsWindows)
+                {
+                    lockedFileMessage = LockCheck.GetLockedFileMessage(OutputManifest.ItemSpec);
+                }
+                Log.LogErrorWithCodeFromResources("GenerateManifest.WriteOutputManifestFailed", OutputManifest.ItemSpec, ex.Message, lockedFileMessage);
+
                 return false;
             }
 
diff --git a/src/Tasks/LockCheck.cs b/src/Tasks/LockCheck.cs
index 3def6381e12..c2d068d33b1 100644
--- a/src/Tasks/LockCheck.cs
+++ b/src/Tasks/LockCheck.cs
@@ -7,6 +7,8 @@
 using System.Linq;
 using System.Runtime.InteropServices;
 using System.Runtime.Versioning;
+using Microsoft.Build.Framework;
+using Microsoft.Build.Shared;
 
 #nullable disable
 
@@ -244,6 +246,31 @@ internal static string GetProcessesLockingFile(string filePath)
             return string.Join(", ", GetLockingProcessInfos(filePath).Select(p => $"{p.ApplicationName} ({p.ProcessId})"));
         }
 
+        /// <summary>
+        /// Try to get a message to inform the user which processes have a lock on a given file.
+        /// </summary>
+        internal static string GetLockedFileMessage(string file)
+        {
+            string message = string.Empty;
+
+            try
+            {
+                if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_4))
+                {
+                    var processes = GetProcessesLockingFile(file);
+                    message = !string.IsNullOrEmpty(processes)
+                        ? ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("Task.FileLocked", processes)
+                        : String.Empty;
+                }
+            }
+            catch (Exception)
+            {
+                // Never throw if we can't get the processes locking the file.
+            }
+
+            return message;
+        }
+
         internal static IEnumerable<ProcessInfo> GetLockingProcessInfos(params string[] paths)
         {
             if (paths == null)
diff --git a/src/Tasks/ManifestUtil/PathUtil.cs b/src/Tasks/ManifestUtil/PathUtil.cs
index de99413b6bc..c3f0fe20f69 100644
--- a/src/Tasks/ManifestUtil/PathUtil.cs
+++ b/src/Tasks/ManifestUtil/PathUtil.cs
@@ -3,6 +3,7 @@
 
 using System;
 using System.IO;
+using System.Linq;
 using Microsoft.Build.Shared;
 
 #nullable disable
@@ -229,13 +230,6 @@ public static string Resolve(string path)
         }
 
         private static bool IsAsciiString(string str)
-        {
-            foreach (char c in str)
-            {
-                if (c > 127)
-                {  return false; }
-            }
-            return true;
-        }
+            => str.All(c => c <= 127);
     }
 }
diff --git a/src/Tasks/ManifestUtil/mansign2.cs b/src/Tasks/ManifestUtil/mansign2.cs
index da2308866d1..dfc7d8e46c2 100644
--- a/src/Tasks/ManifestUtil/mansign2.cs
+++ b/src/Tasks/ManifestUtil/mansign2.cs
@@ -814,13 +814,28 @@ private static string ObtainRFC3161Timestamp(string timeStampUrl, string signatu
 
                 try
                 {
-                    byte[] nonce = new byte[24];
+                    byte[] nonce = new byte[32];
 
                     using (RandomNumberGenerator rng = RandomNumberGenerator.Create())
                     {
                         rng.GetBytes(nonce);
                     }
 
+                    // Eventually, CryptEncodeObjectEx(...) is called on a CRYPT_TIMESTAMP_REQUEST with this nonce,
+                    // and CryptEncodeObjectEx(...) interprets the nonce as a little endian, DER-encoded integer value
+                    // (without tag and length), and may even strip leading bytes from the big endian representation
+                    // of the byte sequence to achieve proper integer DER encoding.
+                    //
+                    // If the nonce is changed after the client generates it, the timestamp server would receive
+                    // and return a nonce that does not agree with the client's original nonce.
+                    //
+                    // To ensure this does not happen, ensure that the most significant byte in the little
+                    // endian byte sequence is in the 0x01-0x7F range; clear that byte's most significant bit
+                    // and set that byte's least significant bit.
+ 
+                    nonce[nonce.Length - 1] &= 0x7f;
+                    nonce[nonce.Length - 1] |= 0x01;
+
                     Win32.CRYPT_TIMESTAMP_PARA para = new Win32.CRYPT_TIMESTAMP_PARA()
                     {
                         fRequestCerts = true,
diff --git a/src/Tasks/Microsoft.Build.Tasks.csproj b/src/Tasks/Microsoft.Build.Tasks.csproj
index d51513a7139..3012b0ef44e 100644
--- a/src/Tasks/Microsoft.Build.Tasks.csproj
+++ b/src/Tasks/Microsoft.Build.Tasks.csproj
@@ -11,7 +11,9 @@
     <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
     <RootNamespace>Microsoft.Build.Tasks</RootNamespace>
     <DefineConstants>$(DefineConstants);MICROSOFT_BUILD_TASKS</DefineConstants>
-    <CreateTlb>true</CreateTlb>
+    <!-- Do not create Tlbs when building in .NET product mode. The packages are not shipped to VS,
+         only their contents redisted within the SDK. -->
+    <CreateTlb Condition="'$(DotNetBuild)' != 'true'">true</CreateTlb>
     <IsPackable>true</IsPackable>
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which implements the commonly used tasks of MSBuild.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
@@ -224,12 +226,12 @@
     <Compile Include="FileIO\ReadLinesFromFile.cs" />
     <Compile Include="FileIO\WriteLinesToFile.cs" />
     <Compile Include="FindInList.cs" />
-    <Compile Include="FormatUrl.cs" Condition="'$(MonoBuild)' != 'true'" />
+    <Compile Include="FormatUrl.cs" />
     <Compile Include="FormatVersion.cs" />
-    <Compile Include="GenerateApplicationManifest.cs" Condition="'$(MonoBuild)' != 'true'" />
-    <Compile Include="GenerateDeploymentManifest.cs" Condition="'$(MonoBuild)' != 'true'" />
-    <Compile Include="GenerateLauncher.cs" Condition="'$(MonoBuild)' != 'true'" />
-    <Compile Include="GenerateManifestBase.cs" Condition="'$(MonoBuild)' != 'true'" />
+    <Compile Include="GenerateApplicationManifest.cs" />
+    <Compile Include="GenerateDeploymentManifest.cs" />
+    <Compile Include="GenerateLauncher.cs" />
+    <Compile Include="GenerateManifestBase.cs" />
     <Compile Include="GenerateResource.cs" />
     <Compile Include="GetAssemblyIdentity.cs" />
     <Compile Include="GetInstalledSDKLocations.cs" />
@@ -246,12 +248,12 @@
     <Compile Include="IVbcHostObject5.cs" />
     <Compile Include="IVbcHostObjectFreeThreaded.cs" />
     <Compile Include="InvalidParameterValueException.cs" />
-    <Compile Include="LC.cs" Condition="'$(MonoBuild)' != 'true'" />
+    <Compile Include="LC.cs" />
     <Compile Include="ListOperators\FindUnderPath.cs" />
     <Compile Include="ListOperators\RemoveDuplicates.cs" />
     <Compile Include="LockCheck.cs" />
     <Compile Include="MakeDir.cs" />
-    <Compile Include="ManifestUtil\*.cs" Exclude="ManifestUtil\CngLightup.cs" Condition="'$(MonoBuild)' != 'true'" />
+    <Compile Include="ManifestUtil\*.cs" Exclude="ManifestUtil\CngLightup.cs" />
     <Compile Include="Message.cs" />
     <Compile Include="Move.cs" />
     <Compile Include="MSBuild.cs" />
@@ -262,7 +264,7 @@
     <Compile Include="ResGenDependencies.cs" />
     <Compile Include="ResolveCodeAnalysisRuleSet.cs" />
     <Compile Include="ResolveKeySource.cs" />
-    <Compile Include="ResolveManifestFiles.cs" Condition="'$(MonoBuild)' != 'true'" />
+    <Compile Include="ResolveManifestFiles.cs" />
     <Compile Include="ResolveNonMSBuildProjectOutput.cs" />
     <Compile Include="ResolveProjectBase.cs" />
     <Compile Include="ResolveSDKReference.cs" />
@@ -272,8 +274,8 @@
     <Compile Include="RoslynCodeTaskFactory\RoslynCodeTaskFactoryCompilers.cs" />
     <Compile Include="RoslynCodeTaskFactory\RoslynCodeTaskFactoryTaskInfo.cs" />
     <Compile Include="SdkToolsPathUtility.cs" />
-    <Compile Include="SGen.cs" Condition="'$(MonoBuild)' != 'true'" />
-    <Compile Include="SignFile.cs" Condition="'$(MonoBuild)' != 'true'" />
+    <Compile Include="SGen.cs" />
+    <Compile Include="SignFile.cs" />
     <Compile Include="System.Design.cs" />
     <Compile Include="system.design\stronglytypedresourcebuilder.cs" />
     <Compile Include="TaskExtension.cs" />
@@ -304,13 +306,13 @@
     <Compile Include="Al.cs" />
     <Compile Include="AspNetCompiler.cs" />
     <Compile Include="GenerateBootstrapper.cs" />
-    <Compile Include="GenerateTrustInfo.cs" Condition="'$(MonoBuild)' != 'true'" />
+    <Compile Include="GenerateTrustInfo.cs" />
     <Compile Include="GetFrameworkSDKPath.cs" />
     <Compile Include="RegisterAssembly.cs" />
     <Compile Include="ResolveComReference.cs" />
-    <Compile Include="ResolveNativeReference.cs" Condition="'$(MonoBuild)' != 'true'" />
+    <Compile Include="ResolveNativeReference.cs" />
     <Compile Include="UnregisterAssembly.cs" />
-    <Compile Include="UpdateManifest.cs" Condition="'$(MonoBuild)' != 'true'" />
+    <Compile Include="UpdateManifest.cs" />
     <Compile Include="WinMDExp.cs" />
   </ItemGroup>
   <ItemGroup Condition="$(TargetFrameworkIdentifier) == '.NETFramework'">
@@ -675,7 +677,7 @@
   <!-- Tasks need to mimic redistributing the compilers, so add references to both full framework and .net core -->
   <ItemGroup>
     <!-- Reference this package to get binaries at runtime even when Arcade is not adding compiler references -->
-    <PackageReference Include="Microsoft.Net.Compilers.Toolset" ExcludeAssets="all" Condition="'$(UsingToolMicrosoftNetCompilers)' == 'false'" />
+    <PackageDownload Include="Microsoft.Net.Compilers.Toolset" Version="[$(MicrosoftNetCompilersToolsetVersion)]" />
   </ItemGroup>
 
   <ItemGroup Condition="'$(TargetFrameworkIdentifier)' != '.NETCoreApp'">
@@ -702,9 +704,6 @@
     <Content Include="$(NuGetPackageRoot)microsoft.net.compilers.toolset\$(MicrosoftNetCompilersToolsetVersion)\tasks\netcore\**\*" CopyToOutputDirectory="PreserveNewest" LinkBase="Roslyn" />
   </ItemGroup>
 
-  <ItemGroup Condition="'$(MonoBuild)' == 'true'">
-    <PackageReference Include="System.Reflection.Metadata" />
-  </ItemGroup>
   <ItemGroup>
     <!--
       Content items in this project are used to copy files to the output directory but we don't
diff --git a/src/Tasks/Microsoft.Common.CrossTargeting.targets b/src/Tasks/Microsoft.Common.CrossTargeting.targets
index 8d079e3f057..9850e8cc161 100644
--- a/src/Tasks/Microsoft.Common.CrossTargeting.targets
+++ b/src/Tasks/Microsoft.Common.CrossTargeting.targets
@@ -227,6 +227,13 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     build.
   -->
   <PropertyGroup>
+    <!--
+        Don't import project extensions during restore because NuGet restore generates them.  Importing them during restore will embed
+        the pre-restore files in the binary log and then NuGet won't be able to embed the generated one after restore.  If some other
+        project extension mechanism wants to import project extensions during restore, they need to explicitly set ImportProjectExtensionTargets
+    -->
+    <ImportProjectExtensionTargets Condition="$([MSBuild]::AreFeaturesEnabled('17.10')) And '$(ImportProjectExtensionTargets)' == '' And '$(MSBuildIsRestoring)' == 'true'">false</ImportProjectExtensionTargets>
+    
     <ImportProjectExtensionTargets Condition="'$(ImportProjectExtensionTargets)' == ''">true</ImportProjectExtensionTargets>
   </PropertyGroup>
 
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index c3d092cf024..3ee36c1eb46 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -323,7 +323,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <!-- Example, C:\MyProjects\MyProject\bin\Debug\MyAssembly.dll -->
     <TargetPath Condition=" '$(TargetPath)' == '' ">$(TargetDir)$(TargetFileName)</TargetPath>
 
-    <TargetRefPath Condition=" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' and ('$(ProduceReferenceAssemblyInOutDir)' == 'true' or '$([MSBuild]::AreFeaturesEnabled(17.0))' != 'true' ) ">$([MSBuild]::NormalizePath($(TargetDir), 'ref', $(TargetFileName)))</TargetRefPath>
+    <TargetRefPath Condition=" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' and '$(ProduceReferenceAssemblyInOutDir)' == 'true' ">$([MSBuild]::NormalizePath($(TargetDir), 'ref', $(TargetFileName)))</TargetRefPath>
     <TargetRefPath Condition=" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' ">$([MSBuild]::NormalizePath($(MSBuildProjectDirectory), $(IntermediateOutputPath), 'ref', $(TargetFileName)))</TargetRefPath>
 
     <!-- Example, C:\MyProjects\MyProject\ -->
@@ -544,7 +544,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <ProcessorArchitecture Condition="'$(ProcessorArchitecture)'==''">$(PROCESSOR_ARCHITECTURE)</ProcessorArchitecture>
   </PropertyGroup>
 
-  <!-- Sensible defaults for the most-commonly-desired MSBuildRuntime and MSBuildArchitecture values. The Core and Mono runtimes do not currently support specifying task architecture or runtime.
+  <!-- Sensible defaults for the most-commonly-desired MSBuildRuntime and MSBuildArchitecture values. The Core runtime does not currently support specifying task architecture or runtime.
        If support for out-of-proc task execution is added on other runtimes, make sure each task's logic is checked against the current state of support. -->
   <PropertyGroup Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' == 'Full'">
     <TargetFrameworkAsMSBuildRuntime Condition="'$(TargetFrameworkVersion)' == 'v2.0' or '$(TargetFrameworkVersion)' == 'v3.0' or '$(TargetFrameworkVersion)' == 'v3.5'">CLR2</TargetFrameworkAsMSBuildRuntime>
@@ -1374,6 +1374,18 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       <_Temp Remove="@(_Temp)" />
     </ItemGroup>
 
+    <!-- RESOURCE ITEMS -->
+    <AssignLinkMetadata Items="@(Resource)"
+                        Condition="'@(Resource)' != '' and '%(Resource.DefiningProjectFullPath)' != '$(MSBuildProjectFullPath)' and $([MSBuild]::AreFeaturesEnabled('17.10'))">
+      <Output TaskParameter="OutputItems" ItemName="_Temp" />
+    </AssignLinkMetadata>
+
+    <ItemGroup Condition="$([MSBuild]::AreFeaturesEnabled('17.10'))">
+      <Resource Remove="@(_Temp)" />
+      <Resource Include="@(_Temp)" />
+      <_Temp Remove="@(_Temp)" />
+    </ItemGroup>
+
   </Target>
 
   <!--
@@ -3787,6 +3799,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       <CoreCompileCache Include="@(Compile)" />
       <CoreCompileCache Include="@(ReferencePath)" />
       <CoreCompileCache Include="$(DefineConstants)" />
+      <CoreCompileCache Include="$(LangVersion)" />
+      <CoreCompileCache Include="$(Deterministic)" />
+      <CoreCompileCache Include="$(PathMap)" />
     </ItemGroup>
 
     <Hash
@@ -3936,6 +3951,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     -->
   <PropertyGroup>
     <CreateSatelliteAssembliesDependsOn>
+      $(CreateSatelliteAssembliesDependsOn);
       _GenerateSatelliteAssemblyInputs;
       ComputeIntermediateSatelliteAssemblies;
       GenerateSatelliteAssemblies
@@ -5027,7 +5043,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       This target enforces the dependency.
     -->
 
-    <MSBuildCopyContentTransitively Condition=" '$(MSBuildCopyContentTransitively)' == '' and $([MSBuild]::AreFeaturesEnabled('17.0'))">true</MSBuildCopyContentTransitively>
+    <MSBuildCopyContentTransitively Condition=" '$(MSBuildCopyContentTransitively)' == ''">true</MSBuildCopyContentTransitively>
 
     <_TargetsThatPrepareProjectReferences Condition=" '$(MSBuildCopyContentTransitively)' == 'true' ">
       AssignProjectConfiguration;
diff --git a/src/Tasks/Microsoft.Common.props b/src/Tasks/Microsoft.Common.props
index e3771628bdd..e322c4a2f1e 100644
--- a/src/Tasks/Microsoft.Common.props
+++ b/src/Tasks/Microsoft.Common.props
@@ -59,6 +59,14 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     -->
     <MSBuildProjectExtensionsPath Condition="'$([System.IO.Path]::IsPathRooted($(MSBuildProjectExtensionsPath)))' == 'false'">$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '$(MSBuildProjectExtensionsPath)'))</MSBuildProjectExtensionsPath>
     <MSBuildProjectExtensionsPath Condition="!HasTrailingSlash('$(MSBuildProjectExtensionsPath)')">$(MSBuildProjectExtensionsPath)\</MSBuildProjectExtensionsPath>
+
+    <!--
+        Don't import project extensions during restore because NuGet restore generates them.  Importing them during restore will embed
+        the pre-restore files in the binary log and then NuGet won't be able to embed the generated one after restore.  If some other
+        project extension mechanism wants to import project extensions during restore, they need to explicitly set ImportProjectExtensionProps
+    -->
+    <ImportProjectExtensionProps Condition="$([MSBuild]::AreFeaturesEnabled('17.10')) And '$(ImportProjectExtensionProps)' == '' And '$(MSBuildIsRestoring)' == 'true'">false</ImportProjectExtensionProps>
+    
     <ImportProjectExtensionProps Condition="'$(ImportProjectExtensionProps)' == ''">true</ImportProjectExtensionProps>
     <_InitialMSBuildProjectExtensionsPath Condition=" '$(ImportProjectExtensionProps)' == 'true' ">$(MSBuildProjectExtensionsPath)</_InitialMSBuildProjectExtensionsPath>
   </PropertyGroup>
@@ -134,4 +142,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <DisableLogTaskParameterItemMetadata_WriteLinesToFile_Lines>true</DisableLogTaskParameterItemMetadata_WriteLinesToFile_Lines>
   </PropertyGroup>
 
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Tasks/Microsoft.Common.targets b/src/Tasks/Microsoft.Common.targets
index 4e71065ca26..b61819797bf 100644
--- a/src/Tasks/Microsoft.Common.targets
+++ b/src/Tasks/Microsoft.Common.targets
@@ -29,6 +29,13 @@ Copyright (C) Microsoft Corporation. All rights reserved.
         management system can write out multiple files but the order of the import is alphabetic because MSBuild sorts the list.
   -->
   <PropertyGroup>
+    <!--
+        Don't import project extensions during restore because NuGet restore generates them.  Importing them during restore will embed
+        the pre-restore files in the binary log and then NuGet won't be able to embed the generated one after restore.  If some other
+        project extension mechanism wants to import project extensions during restore, they need to explicitly set ImportProjectExtensionTargets
+    -->
+    <ImportProjectExtensionTargets Condition="$([MSBuild]::AreFeaturesEnabled('17.10')) And '$(ImportProjectExtensionTargets)' == '' And '$(MSBuildIsRestoring)' == 'true'">false</ImportProjectExtensionTargets>
+    
     <ImportProjectExtensionTargets Condition="'$(ImportProjectExtensionTargets)' == ''">true</ImportProjectExtensionTargets>
   </PropertyGroup>
 
@@ -54,4 +61,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   <Import Project="$(CustomAfterDirectoryBuildTargets)" Condition="'$(CustomAfterDirectoryBuildTargets)' != ''" />
 
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Tasks/Resources/Strings.resx b/src/Tasks/Resources/Strings.resx
index 3ba788b9c76..a969d1dc8de 100644
--- a/src/Tasks/Resources/Strings.resx
+++ b/src/Tasks/Resources/Strings.resx
@@ -293,7 +293,7 @@
     <value>MSB3030: Could not copy the file "{0}" because it was not found.</value>
     <comment>{StrBegin="MSB3030: "} LOCALIZATION: {0} is a number.</comment>
   </data>
-  <data name="Copy.FileLocked">
+  <data name="Task.FileLocked">
     <value>The file is locked by: "{0}"</value>
   </data>
 
@@ -915,7 +915,7 @@
     <comment>{StrBegin="MSB3183: "}</comment>
   </data>
   <data name="GenerateManifest.WriteOutputManifestFailed">
-    <value>MSB3173: Unable to write manifest '{0}'. {1}</value>
+    <value>MSB3173: Unable to write manifest '{0}'. {1} {2}</value>
     <comment>{StrBegin="MSB3173: "}</comment>
   </data>
   <data name="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1713,6 +1713,10 @@
   <data name="ResolveAssemblyReference.SearchPath">
     <value>For SearchPath "{0}".</value>
   </data>
+  <data name="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+    <value>For SearchPath "{0}" (added by referencing assembly "{1}").</value>
+    <comment> {1} is the name of the parent assembly for which SearchPath was used.</comment>
+  </data>
   <data name="ResolveAssemblyReference.UnificationByAppConfig">
     <value>Using this version instead of original version "{0}" in "{2}" because of a binding redirect entry in the file "{1}".</value>
   </data>
@@ -1776,10 +1780,6 @@
     <value>Assembly file '{0}' could not be opened -- PE image doesn't contain managed metadata.</value>
     <comment></comment>
   </data>
-  <data name="ResolveAssemblyReference.WritingCacheFile">
-    <value>Updating assembly cache file "{0}".</value>
-    <comment></comment>
-  </data>
   <!--
         The ResolveComReference message bucket is: MSB3281 - MSB3320
 
@@ -2793,6 +2793,10 @@
     <value>MSB3895: Retrying on ERROR_ACCESS_DENIED because environment variable MSBUILDALWAYSRETRY=1</value>
     <comment>{StrBegin="MSB3895: "} LOCALIZATION: Do NOT translate MSBUILDALWAYSRETRY)</comment>
   </data>
+  <data name="Copy.IncompatibleParameters">
+    <value>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</value>
+    <comment>{StrBegin="MSB3896: "}</comment>
+  </data>
 
   <!--
         MSB3901 - MSB3910   Task: Telemetry
diff --git a/src/Tasks/Resources/xlf/Strings.cs.xlf b/src/Tasks/Resources/xlf/Strings.cs.xlf
index 162dd1ea684..b4fc18d7e3f 100644
--- a/src/Tasks/Resources/xlf/Strings.cs.xlf
+++ b/src/Tasks/Resources/xlf/Strings.cs.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: P≈ôi kop√≠rov√°n√≠ ‚Äû{1}‚Äú do ‚Äû{2}‚Äú do≈°lo k v√Ωjimce {0} a HR je {3}</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: V souboru projektu byl zad√°n jak parametr {0}, tak parametr {1}. Nelze je v≈°ak pou≈æ√≠t oba najednou. Zvolte pros√≠m jenom jeden z nich.</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: Ned√° se pou≈æ√≠t odkaz pro kop√≠rov√°n√≠ {0} do {1}.</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: Nelze zapsat manifest {0}. {1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: Nepovedlo se zapsat manifest {0}. {1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">Pro SearchPath ‚Äû{0}‚Äú (p≈ôid√°no odkazem na sestaven√≠ ‚Äû{1}‚Äú)</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">Byla uva≈æov√°na um√≠stƒõn√≠ AssemblyFoldersEx.</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">N√°zev redistribuƒçn√≠ho bal√≠ƒçku v elementu FileList v souboru seznamu redistribuƒçn√≠ho bal√≠ƒçku {0} je null nebo pr√°zdn√Ω. N√°zev redistribuƒçn√≠ho bal√≠ƒçku nesm√≠ b√Ωt null ani pr√°zdn√Ω.</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Aktualizuje se soubor mezipamƒõti sestaven√≠ ‚Äû{0}‚Äú.</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">Odkaz modelu COM {0} je definiƒçn√≠ sestaven√≠ ovl√°dac√≠ho prvku ActiveX {1}, ale kompil√°tor ho oznaƒçil p≈ô√≠znakem /link. S t√≠mto odkazem modelu COM se bude zach√°zet jako s odkazem a nebude propojen.</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: Nebyl zad√°n ve≈ôejn√Ω kl√≠ƒç nezbytn√Ω ke zpo≈ædƒõn√©mu podeps√°n√≠.</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">Soubor uzamkl(a): {0}.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: √öloha {0} se nepodporuje ve verzi MSBuildu pro .NET Core. Pou≈æijte pros√≠m verzi MSBuildu pro .NET Framework. Dal≈°√≠ podrobnosti najdete na str√°nce https://aka.ms/msbuild/MSB4803.</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: Objekt pro vytv√°≈ôen√≠ √∫loh {0} se ve verzi .NET Core n√°stroje MSBuild nepodporuje.</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">Soubor uzamkl(a): {0}.</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: Urƒçen√Ω typ k√≥du {0} nen√≠ platn√Ω. Podporovan√© jsou tyto typy k√≥du: {1}.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.de.xlf b/src/Tasks/Resources/xlf/Strings.de.xlf
index 58d7ba7e5dc..a185f1c58dc 100644
--- a/src/Tasks/Resources/xlf/Strings.de.xlf
+++ b/src/Tasks/Resources/xlf/Strings.de.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: Erhalt von {0} Kopieren von "{1}" zu "{2}" und HR ist {3}</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: Sowohl "{0}" als auch "{1}" wurden als Parameter in der Projektdatei angegeben, k√∂nnen aber nicht zusammen verwendet werden. W√§hlen Sie eins oder das andere aus.</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: Es konnte kein Link verwendet werden, um "{0}" in "{1}" zu kopieren.</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: Das Manifest "{0}" kann nicht geschrieben werden. {1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: Das Manifest ‚Äû{0}‚Äú kann nicht geschrieben werden. {1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">F√ºr SearchPath "{0}" (hinzugef√ºgt durch Verweis auf Assembly "{1}").</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">Ber√ºcksichtigte Speicherorte von AssemblyFoldersEx.</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">Der Redist-Name im FileList-Element der Redistributable-Listendatei "{0}" ist NULL oder leer. Vergewissern Sie sich, dass der Redist-Name nicht NULL oder leer ist.</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Aktualisiert Assemblycachedatei "{0}"</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">Der COM-Verweis "{0}" ist die Interopassembly f√ºr das ActiveX-Steuerelement "{1}". Entsprechend der Markierung ist der Verweis jedoch durch den Compiler mit dem /link-Flag verkn√ºpft. Der COM-Verweis wird als Verweis behandelt und nicht verkn√ºpft.</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: Der f√ºr die verz√∂gerte Signierung erforderliche √∂ffentliche Schl√ºssel wurde nicht angegeben.</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">Die Datei wird durch "{0}" gesperrt.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: Die Aufgabe "{0}" wird f√ºr die .NET Core-Version von MSBuild nicht unterst√ºtzt. Verwenden Sie die .NET Framework-Version von MSBuild. Weitere Informationen finden Sie unter https://aka.ms/msbuild/MSB4803.</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: Die Aufgabenfactory "{0}" wird f√ºr die .NET Core-Version von MSBuild nicht unterst√ºtzt.</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">Die Datei wird durch "{0}" gesperrt.</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: Der angegebene Codetyp "{0}" ist ung√ºltig. Unterst√ºtzte Codetypen: {1}.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.es.xlf b/src/Tasks/Resources/xlf/Strings.es.xlf
index 7715a0c317b..eef9d9a6a5e 100644
--- a/src/Tasks/Resources/xlf/Strings.es.xlf
+++ b/src/Tasks/Resources/xlf/Strings.es.xlf
@@ -118,7 +118,7 @@
       </trans-unit>
       <trans-unit id="AxTlbBaseTask.StrongNameUtils.NoPublicKeySpecified">
         <source>MSB3654: Delay signing requires that at least a public key be specified.  Please either supply a public key using the KeyFile or KeyContainer properties, or disable delay signing.</source>
-        <target state="translated">MSB3654: La firma retrasada requiere que se especifique al menos una clave p√∫blica.  Proporcione una clave p√∫blica mediante las propiedades KeyFile o KeyContainer, o deshabilite la firma retrasada.</target>
+        <target state="translated">MSB3654: La firma retardada requiere que se especifique al menos una clave p√∫blica.  Proporcione una clave p√∫blica mediante las propiedades KeyFile o KeyContainer, o deshabilite la firma retardada.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: Se obtuvo {0} al copiar "{1}" en "{2}" y HR es {3}</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: "{0}" y "{1}" se especificaron como par√°metros en el archivo de proyecto, pero no se pueden usar juntos. Elija una u otra.</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: No se puede usar un v√≠nculo para copiar "{0}" en "{1}".</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: No se puede escribir en el manifiesto '{0}'. {1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: No se puede escribir el manifiesto '{0}'. {1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">Para SearchPath "{0}" (agregado por el ensamblado de referencia "{1}").</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">Ubicaciones de AssemblyFoldersEx consideradas.</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">El archivo de lista de paquetes redistribuibles "{0}" tiene un nombre Redist NULL o vac√≠o en el elemento FileList. Aseg√∫rese de que el nombre Redist no sea NULL ni est√© vac√≠o.</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Actualizando el archivo de cach√© de ensamblado "{0}".</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">La referencia COM '{0}' es el ensamblado de interoperabilidad del control ActiveX '{1}' pero estaba marcada para su vinculaci√≥n por el compilador con la marca /link. Esta referencia COM se tratar√° como una referencia y no se vincular√°.</target>
@@ -2302,7 +2307,7 @@
       </trans-unit>
       <trans-unit id="ResolveComReference.LoadingDelaySignedAssemblyWithStrongNameVerificationEnabled">
         <source>MSB3295: Failed to load an assembly. Please make sure you have disabled strong name verification for your public key if you want to generate delay signed wrappers. {0}</source>
-        <target state="translated">MSB3295: No se pudo cargar un ensamblado. Aseg√∫rese de que deshabilit√≥ la comprobaci√≥n de nombres seguros para su clave p√∫blica si desea generar contenedores de firma con retraso. {0}</target>
+        <target state="translated">MSB3295: No se pudo cargar un ensamblado. Aseg√∫rese de que deshabilit√≥ la comprobaci√≥n de nombres seguros para su clave p√∫blica si desea generar contenedores de firma retardada. {0}</target>
         <note>{StrBegin="MSB3295: "}</note>
       </trans-unit>
       <trans-unit id="ResolveComReference.MissingOrUnknownComReferenceAttribute">
@@ -2511,9 +2516,14 @@
       </trans-unit>
       <trans-unit id="StrongNameUtils.NoPublicKeySpecified">
         <source>MSB3353: Public key necessary for delay signing was not specified.</source>
-        <target state="translated">MSB3353: No se especific√≥ la clave p√∫blica necesaria para la firma con retraso.</target>
+        <target state="translated">MSB3353: No se especific√≥ la clave p√∫blica necesaria para la firma retardada.</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">El archivo se ha bloqueado por: "{0}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: No se admite la tarea "{0}" en la versi√≥n de MSBuild de .NET Core. Use la versi√≥n de MSBuild de .NET Framework. Vea https://aka.ms/msbuild/MSB4803 para obtener m√°s informaci√≥n.</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: El generador de tareas "{0}" no se admite en la versi√≥n de .NET Core de MSBuild.</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">El archivo se ha bloqueado por: "{0}"</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: El tipo de c√≥digo especificado "{0}" no es v√°lido. Los tipos de c√≥digo admitidos son "{1}".</target>
diff --git a/src/Tasks/Resources/xlf/Strings.fr.xlf b/src/Tasks/Resources/xlf/Strings.fr.xlf
index d309c31905c..0a38e39c972 100644
--- a/src/Tasks/Resources/xlf/Strings.fr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.fr.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: Nous avons copi√© {0} ¬´{1}¬ª vers ¬´{2}¬ª et les ressources humaines sont {3}</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: ¬´¬†{0}¬†¬ª et ¬´¬†{1}¬†¬ª ont √©t√© sp√©cifi√©es comme param√®tres dans le Fichier projet, mais ne peuvent pas √™tre utilis√©s ensemble. Choisissez l‚Äôune ou l‚Äôautre.</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: impossible d'utiliser un lien pour copier "{0}" vers "{1}".</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: Impossible d'√©crire le manifeste '{0}'. {1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: impossible d‚Äô√©crire le manifeste ¬´¬†{0}¬†¬ª. {1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">Pour SearchPath ¬´¬†{0}¬†¬ª (ajout√© en r√©f√©ren√ßant l‚Äôassembly ¬´¬†{1}¬†¬ª).</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">Emplacements d'AssemblyFoldersEx envisag√©s.</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">Le fichier de liste de packages redistribuables "{0}" a un nom Redist vide ou ayant une valeur null dans l'√©l√©ment FileList. V√©rifiez que le nom Redist n'est pas vide ou qu'il n'a pas une valeur null.</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Mise √† jour du fichier de cache d‚Äôassembly ¬´{0}¬ª.</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">La r√©f√©rence COM '{0}' est l'assembly d'interop√©rabilit√© pour le contr√¥le ActiveX '{1}', mais elle a √©t√© marqu√©e comme √©tant li√©e au compilateur avec l'indicateur /link. Cette r√©f√©rence COM sera trait√©e comme une r√©f√©rence, mais ne sera pas li√©e.</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: La cl√© publique n√©cessaire √† la signature diff√©r√©e n'a pas √©t√© sp√©cifi√©e.</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">Le fichier est verrouill√© par¬†: "{0}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: La t√¢che "{0}" n'est pas prise en charge dans la version .NET Core de MSBuild. Utilisez la version du .NET Framework de MSBuild. Pour plus d'informations, consultez https://aka.ms/msbuild/MSB4803.</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: La fabrique de t√¢ches "{0}" n'est pas prise en charge dans la version .NET Core de MSBuild.</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">Le fichier est verrouill√© par¬†: "{0}"</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: Le type de code sp√©cifi√© ("{0}") n'est pas valide. Les types de code pris en charge sont "{1}".</target>
diff --git a/src/Tasks/Resources/xlf/Strings.it.xlf b/src/Tasks/Resources/xlf/Strings.it.xlf
index 49d2bb9524a..27b03e70d2e 100644
--- a/src/Tasks/Resources/xlf/Strings.it.xlf
+++ b/src/Tasks/Resources/xlf/Strings.it.xlf
@@ -123,12 +123,12 @@
       </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
-        <target state="translated">MSB3991: ‚Äú{0}‚Äù non √® impostato o √® vuoto. Quando {1} √® false, assicurarsi di impostare un valore non vuoto per "{0}".</target>
+        <target state="translated">MSB3991: '{0}' non √® impostato o √® vuoto. Quando {1} √® false, assicurarsi di impostare un valore non vuoto per '{0}'.</target>
         <note>{StrBegin="MSB3991: "}</note>
       </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullRootElementName">
         <source>MSB3992: '{0}' is not set. When {1} is true, make sure to set a value for '{0}'.</source>
-        <target state="translated">MSB3992: "{0}" non impostato. Quando {1} √® true, assicurarsi di impostare un valore per "{0}".</target>
+        <target state="translated">MSB3992: '{0}' non √® impostato. Quando {1} √® true, assicurarsi di impostare un valore per '{0}'.</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: Ottenuto {0} copiando "{1}" in "{2}" e HR √® {3}"</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: i parametri "{0}" e "{1}" sono stati specificati come parametri nel file di progetto, ma non possono essere usati insieme. Scegliere uno o l'altro.</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: non √® stato possibile usare un collegamento per copiare "{0}" in "{1}".</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: non √® possibile scrivere il manifesto '{0}'. {1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: non √® possibile scrivere il manifesto '{0}'. {1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">Per SearchPath "{0}" (aggiunto facendo riferimento all'assembly "{1}").</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">Percorsi AssemblyFoldersEx considerati.</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">Il file di elenco di pacchetti ridistribuibili "{0}" include un nome di Redist Null o vuoto nell'elemento FileList. Verificare che il nome di Redist non sia Null o vuoto.</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Aggiornamento del file della cache di assembly "{0}".</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">Il riferimento COM '{0}' √® l'assembly di interoperabilit√† per il controllo ActiveX '{1}', tuttavia √® stato contrassegnato dal compilatore con il flag /link per il collegamento. Il riferimento COM verr√† trattato come riferimento e non verr√† collegato.</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: chiave pubblica necessaria per la firma ritardata non specificata.</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">Il file √® bloccato da: "{0}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: l'attivit√† "{0}" non √® supportata nella versione .NET Core di MSBuild. Usare la versione .NET Framework di MSBuild. Per altri dettagli, vedere https://aka.ms/msbuild/MSB4803.</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: la factory delle attivit√† "{0}" non √® supportata nella versione .NET Core di MSBuild.</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">Il file √® bloccato da: "{0}"</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: il tipo di codice specificato "{0}" non √® valido. I tipi di codice supportati sono "{1}".</target>
diff --git a/src/Tasks/Resources/xlf/Strings.ja.xlf b/src/Tasks/Resources/xlf/Strings.ja.xlf
index c9cd6028fc9..855a8a09ef6 100644
--- a/src/Tasks/Resources/xlf/Strings.ja.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ja.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: "{1}" „Çí "{2}" „Å´„Ç≥„Éî„Éº‰∏≠„Å´ {0}„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇHR „ÅØ {3} „Åß„Åô</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: "{0}" „Å® "{1}" „ÅÆ‰∏°Êñπ„Åå„Éó„É≠„Ç∏„Çß„ÇØ„Éà „Éï„Ç°„Ç§„É´„ÅÆ„Éë„É©„É°„Éº„Çø„Éº„Å®„Åó„Å¶ÊåáÂÆö„Åï„Çå„Åæ„Åó„Åü„Åå„ÄÅ‰∏ÄÁ∑í„Å´‰ΩøÁî®„Åô„Çã„Åì„Å®„ÅØ„Åß„Åç„Åæ„Åõ„Çì„ÄÇ„Å©„Å°„Çâ„Åã‰∏ÄÊñπ„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: „É™„É≥„ÇØ„Çí‰ΩøÁî®„Åó„Å¶ "{0}" „Çí "{1}" „Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: „Éû„Éã„Éï„Çß„Çπ„Éà '{0}' „ÇíÊõ∏„ÅçËæº„ÇÅ„Åæ„Åõ„Çì„ÄÇ{1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: „Éû„Éã„Éï„Çß„Çπ„Éà '{0}' „ÇíÊõ∏„ÅçËæº„ÇÅ„Åæ„Åõ„Çì„ÄÇ{1}{2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">SearchPath "{0}" „ÅÆÂ†¥Âêà („Ç¢„Çª„É≥„Éñ„É™ "{1}" „ÇíÂèÇÁÖß„Åó„Å¶ËøΩÂä†)„ÄÇ</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">AssemblyFoldersEx „ÅÆÂ†¥ÊâÄ„ÅåËÄÉÊÖÆ„Åï„Çå„Åæ„Åó„Åü„ÄÇ</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">ÂÜçÈ†íÂ∏ÉÂèØËÉΩ„Éë„ÉÉ„Ç±„Éº„Ç∏ „É™„Çπ„Éà „Éï„Ç°„Ç§„É´ "{0}" „ÅÆ FileList Ë¶ÅÁ¥†„Å´ null „Åæ„Åü„ÅØÁ©∫„ÅÆÂÜçÈ†íÂ∏ÉÂèØËÉΩ„Éë„ÉÉ„Ç±„Éº„Ç∏Âêç„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÂÜçÈ†íÂ∏ÉÂèØËÉΩ„Éë„ÉÉ„Ç±„Éº„Ç∏Âêç„Åå null „Åæ„Åü„ÅØÁ©∫„Åß„Å™„ÅÑ„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">„Ç¢„Çª„É≥„Éñ„É™ „Ç≠„É£„ÉÉ„Ç∑„É• „Éï„Ç°„Ç§„É´ "{0}" „ÇíÊõ¥Êñ∞„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">COM ÂèÇÁÖß '{0}' „ÅØ ActiveX „Ç≥„É≥„Éà„É≠„Éº„É´ '{1}' „ÅÆÁõ∏‰∫íÈÅãÁî®„Ç¢„Çª„É≥„Éñ„É™„Åß„Åô„Åå„ÄÅ„Ç≥„É≥„Éë„Ç§„É©„Å´„Çà„Å£„Å¶ /link „Éï„É©„Ç∞„Åß„É™„É≥„ÇØ„Åï„Çå„Çã„Çà„ÅÜ„Å´Ë®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åì„ÅÆ COM ÂèÇÁÖß„ÅØÂèÇÁÖß„Å®„Åó„Å¶Âá¶ÁêÜ„Åï„Çå„ÄÅ„É™„É≥„ÇØ„Åï„Çå„Åæ„Åõ„Çì„ÄÇ</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: ÈÅÖÂª∂ÁΩ≤Âêç„Å´ÂøÖË¶Å„Å™ÂÖ¨Èñã„Ç≠„Éº„ÅØÊåáÂÆö„Åï„Çå„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">„Åì„ÅÆ„Éï„Ç°„Ç§„É´„ÅØ "{0}" „Å´„Çà„Å£„Å¶„É≠„ÉÉ„ÇØ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: „Çø„Çπ„ÇØ "{0}" „ÅØ .NET Core „Éê„Éº„Ç∏„Éß„É≥„ÅÆ MSBuild „Åß„ÅØ„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ.NET Framework „Éê„Éº„Ç∏„Éß„É≥„ÅÆ MSBuild „Çí„Åî‰ΩøÁî®„Åè„Å†„Åï„ÅÑ„ÄÇË©≥Á¥∞„Å´„Å§„ÅÑ„Å¶„ÅØ„ÄÅhttps://aka.ms/msbuild/MSB4803 „Çí„ÅîË¶ß„Åè„Å†„Åï„ÅÑ„ÄÇ</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: „Çø„Çπ„ÇØ „Éï„Ç°„ÇØ„Éà„É™ "{0}" „ÅØ MSBuild „ÅÆ .NET Core „Éê„Éº„Ç∏„Éß„É≥‰∏ä„Åß„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">„Åì„ÅÆ„Éï„Ç°„Ç§„É´„ÅØ "{0}" „Å´„Çà„Å£„Å¶„É≠„ÉÉ„ÇØ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: ÊåáÂÆö„Åï„Çå„Åü„Ç≥„Éº„Éâ„ÅÆÁ®ÆÈ°û "{0}" „ÅåÁÑ°Âäπ„Åß„Åô„ÄÇ„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Çã„Ç≥„Éº„Éâ„ÅÆÁ®ÆÈ°û„ÅØ "{1}" „Åß„Åô„ÄÇ</target>
diff --git a/src/Tasks/Resources/xlf/Strings.ko.xlf b/src/Tasks/Resources/xlf/Strings.ko.xlf
index 0ca9222197f..9e7d5d6eabc 100644
--- a/src/Tasks/Resources/xlf/Strings.ko.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ko.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: {0}ÏùÑ(Î•º) ‚Äú{1}‚Äù(Ïúº)Î°ú Î≥µÏÇ¨ÌïòÎäî ‚Äú{2}‚ÄùÏù¥(Í∞Ä) ÏûàÍ≥† HRÏùÄ {3}ÏûÖÎãàÎã§.</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: "{0}" Î∞è "{1}" Î™®Îëê ÌîÑÎ°úÏ†ùÌä∏ ÌååÏùºÏóêÏÑú Îß§Í∞ú Î≥ÄÏàòÎ°ú ÏßÄÏ†ïÎêòÏóàÏßÄÎßå Ìï®Íªò ÏÇ¨Ïö©Ìï† ÏàòÎäî ÏóÜÏäµÎãàÎã§. ÌïòÎÇò ÎòêÎäî Îã§Î•∏ Ìï≠Î™©ÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: ÎßÅÌÅ¨Î•º ÏÇ¨Ïö©ÌïòÏó¨ "{0}"ÏùÑ(Î•º) "{1}"Ïóê Î≥µÏÇ¨Ìï† Ïàò ÏóÜÏäµÎãàÎã§.</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: '{0}' Îß§ÎãàÌéòÏä§Ìä∏Î•º Ïì∏ Ïàò ÏóÜÏäµÎãàÎã§. {1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: '{0}' Îß§ÎãàÌéòÏä§Ìä∏Î•º Ïì∏ Ïàò ÏóÜÏäµÎãàÎã§. {1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">SearchPath "{0}"Ïùò Í≤ΩÏö∞(Ïñ¥ÏÖàÎ∏îÎ¶¨ "{1}"ÏùÑ(Î•º) Ï∞∏Ï°∞ÌïòÏó¨ Ï∂îÍ∞ÄÎê®).</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">AssemblyFoldersEx ÏúÑÏπòÎ°ú Í∞ÑÏ£ºÌñàÏäµÎãàÎã§.</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">Ïû¨Î∞∞Ìè¨ Í∞ÄÎä• Ìå®ÌÇ§ÏßÄ Î™©Î°ù ÌååÏùº "{0}"Ïùò FileList ÏöîÏÜåÏóê nullÏù¥Í±∞ÎÇò ÎπÑÏñ¥ ÏûàÎäî Ïû¨Î∞∞Ìè¨ Í∞ÄÎä• Ìå®ÌÇ§ÏßÄ Ïù¥Î¶ÑÏù¥ ÏûàÏäµÎãàÎã§. Ïû¨Î∞∞Ìè¨ Í∞ÄÎä• Ìå®ÌÇ§ÏßÄ Ïù¥Î¶ÑÏù¥ nullÏù¥Í±∞ÎÇò ÎπÑÏñ¥ ÏûàÏßÄ ÏïäÎèÑÎ°ù ÌïòÏÑ∏Ïöî.</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Ïñ¥ÏÖàÎ∏îÎ¶¨ Ï∫êÏãú ÌååÏùº "{0}"ÏùÑ(Î•º) ÏóÖÎç∞Ïù¥Ìä∏ÌïòÎäî Ï§ëÏûÖÎãàÎã§.</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">COM Ï∞∏Ï°∞ '{0}'ÏùÄ(Îäî) ActiveX Ïª®Ìä∏Î°§ '{1}'Ïóê ÎåÄÌïú interop Ïñ¥ÏÖàÎ∏îÎ¶¨Ïù¥ÏßÄÎßå /link ÌîåÎûòÍ∑∏Î°ú Ïª¥ÌååÏùºÎü¨Ïóê ÏùòÌï¥ ÎßÅÌÅ¨ÎêòÎèÑÎ°ù ÌëúÏãúÎêòÏñ¥ ÏûàÏäµÎãàÎã§. Ïù¥ COM Ï∞∏Ï°∞Îäî Ï∞∏Ï°∞Î°ú Í∞ÑÏ£ºÎêòÏßÄÎßå ÎßÅÌÅ¨ÎêòÏßÄ ÏïäÏäµÎãàÎã§.</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: ÏÑúÎ™Ö Ïó∞Í∏∞Ïóê ÌïÑÏöîÌïú Í≥µÍ∞ú ÌÇ§Î•º ÏßÄÏ†ïÌïòÏßÄ ÏïäÏïòÏäµÎãàÎã§.</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">ÌååÏùºÏù¥ "{0}"Ïóê ÏùòÌï¥ Ïû†Í≤® ÏûàÏäµÎãàÎã§.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: "{0}" ÏûëÏóÖÏùÄ MSBuildÏùò .NET Core Î≤ÑÏ†ÑÏóêÏÑú ÏßÄÏõêÎêòÏßÄ ÏïäÏäµÎãàÎã§. MSBuildÏùò .NET Framework Î≤ÑÏ†ÑÏùÑ ÏÇ¨Ïö©ÌïòÏÑ∏Ïöî. ÏûêÏÑ∏Ìïú ÎÇ¥Ïö©ÏùÄ https://aka.ms/msbuild/MSB4803ÏùÑ Ï∞∏Ï°∞ÌïòÏÑ∏Ïöî.</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: MSBuildÏùò .NET Core Î≤ÑÏ†ÑÏóêÏÑúÎäî "{0}" ÏûëÏóÖ Ìå©ÌÑ∞Î¶¨Í∞Ä ÏßÄÏõêÎêòÏßÄ ÏïäÏäµÎãàÎã§.</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">ÌååÏùºÏù¥ "{0}"Ïóê ÏùòÌï¥ Ïû†Í≤® ÏûàÏäµÎãàÎã§.</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: ÏßÄÏ†ïÌïú ÏΩîÎìú ÌòïÏãù "{0}"Ïù¥(Í∞Ä) ÏûòÎ™ªÎêòÏóàÏäµÎãàÎã§. ÏßÄÏõêÎêòÎäî ÏΩîÎìú ÌòïÏãùÏùÄ "{1}"ÏûÖÎãàÎã§.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.pl.xlf b/src/Tasks/Resources/xlf/Strings.pl.xlf
index a21fc7cd781..6f0ed65f8bc 100644
--- a/src/Tasks/Resources/xlf/Strings.pl.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pl.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: ‚ÄûMam {0} kopiowane z ‚Äû{1}‚Äù do ‚Äû{2}‚Äù, a HR to {3}‚Äù</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: parametry ‚Äû{0}‚Äù i ‚Äû{1}‚Äù zosta≈Çy okre≈õlone jako parametry w pliku projektu, ale nie mogƒÖ byƒá u≈ºywane razem. Wybierz jeden lub drugi.</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: Nie mo≈ºna u≈ºyƒá linku w celu skopiowania ≈õcie≈ºki ‚Äû{0}‚Äù do ≈õcie≈ºki ‚Äû{1}‚Äù.</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: Nie mo≈ºna zapisaƒá manifestu '{0}'. {1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: Nie mo≈ºna zapisaƒá manifestu ‚Äû{0}‚Äù. {1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">Dla elementu SearchPath ‚Äû{0}‚Äù (dodanego przez odwo≈Çanie do zestawu ‚Äû{1}‚Äù).</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">Wybrano lokalizacje klucza rejestru AssemblyFoldersEx.</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">Plik z listƒÖ pakiet√≥w redystrybucyjnych ‚Äû{0}‚Äù ma nazwƒô Redist r√≥wnƒÖ null lub pustƒÖ w elemencie FileList. Upewnij siƒô, ≈ºe nazwa Redist nie ma warto≈õci null ani nie jest pusta.</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Aktualizowanie pliku pamiƒôci podrƒôcznej zestawu ‚Äû{0}‚Äù.</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">Odwo≈Çanie COM ‚Äû{0}‚Äù jest zestawem miƒôdzyoperacyjnym dla kontrolki ActiveX ‚Äû{1}‚Äù, ale zosta≈Ço wybrane do po≈ÇƒÖczenia przez kompilator przy u≈ºyciu flagi /link. To odwo≈Çanie COM jest traktowane jako odwo≈Çanie i nie zostanie po≈ÇƒÖczone.</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: Klucz publiczny jest niezbƒôdny, poniewa≈º nie okre≈õlono znaku op√≥≈∫nienia.</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">Plik jest zablokowany przez: ‚Äû{0}‚Äù</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: Zadanie ‚Äû{0}‚Äù nie jest obs≈Çugiwane w wersji programu MSBuild dla platformy .NET Core. U≈ºyj wersji programu MSBuild dla platformy .NET Framework. Zobacz https://aka.ms/msbuild/MSB4803, aby uzyskaƒá wiƒôcej szczeg√≥≈Ç√≥w.</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: Fabryka zada≈Ñ ‚Äû{0}‚Äù nie jest obs≈Çugiwana przez wersjƒô programu MSBuild dla platformy .NET Core.</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">Plik jest zablokowany przez: ‚Äû{0}‚Äù</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: Okre≈õlony typ kodu ‚Äû{0}‚Äù jest nieprawid≈Çowy. Obs≈Çugiwane typy kodu: ‚Äû{1}‚Äù.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
index 2cbac98a44a..d6bccad1740 100644
--- a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: Recebi {0} copiando "{1}" para {2} e o RH √© {3}</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: "{0}" e "{1}" foram especificados como par√¢metros no arquivo de projeto, mas n√£o podem ser usados juntos. Escolha um ou outro.</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: N√£o foi poss√≠vel usar um link para copiar "{0}" para "{1}".</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: N√£o √© poss√≠vel gravar o manifesto "{0}". {1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: n√£o √© poss√≠vel gravar o manifesto "{0}". {1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">Para o SearchPath "{0}" (adicionado ao fazer refer√™ncia ao assembly "{1}").</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">Localiza√ß√µes de AssemblyFoldersEx consideradas.</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">O arquivo da lista de pacote redistribu√≠vel "{0}" tem um nome de Pacote Redistribu√≠vel nulo ou vazio no elemento FileList. Verifique se o Nome do Pacote Redistribu√≠vel n√£o √© nulo nem est√° vazio.</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Atualizando o arquivo de cache do assembly "{0}".</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">A Refer√™ncia COM "{0}" √© o assembly de interoperabilidade para o controle ActiveX "{1}", mas foi marcada para ser vinculada pelo compilador com o sinalizador /link. Essa refer√™ncia COM ser√° tratada como uma refer√™ncia e n√£o ser√° vinculada.</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: Chave p√∫blica necess√°ria, pois a assinatura atrasada n√£o foi especificada.</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">O arquivo √© bloqueado por: "{0}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: a tarefa "{0}" n√£o √© compat√≠vel com a vers√£o do .NET Core do MSBuild. Use a vers√£o do .NET Framework do MSBuild. Confira https://aka.ms/msbuild/MSB4803 para obter mais detalhes.</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: n√£o h√° suporte para a f√°brica de tarefas "{0}" na vers√£o .NET Core do MSBuild.</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">O arquivo √© bloqueado por: "{0}"</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: o tipo de c√≥digo especificado "{0}" √© inv√°lido. Os tipos de c√≥digo compat√≠veis s√£o "{1}".</target>
diff --git a/src/Tasks/Resources/xlf/Strings.ru.xlf b/src/Tasks/Resources/xlf/Strings.ru.xlf
index 9f27ce3a87d..13636f628c9 100644
--- a/src/Tasks/Resources/xlf/Strings.ru.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ru.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ {0} "{1}" –≤ "{2}" –∏ HR ‚Äî {3}</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: "{0}" –∏ "{1}" –±—ã–ª–∏ —É–∫–∞–∑–∞–Ω—ã –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ñ–∞–π–ª–µ –ø—Ä–æ–µ–∫—Ç–∞, –Ω–æ –Ω–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤—è–∑—å –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è "{0}" –≤ "{1}".</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –º–∞–Ω–∏—Ñ–µ—Å—Ç "{0}". {1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –º–∞–Ω–∏—Ñ–µ—Å—Ç "{0}". {1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">–î–ª—è SearchPath "{0}" (–¥–æ–±–∞–≤–ª–µ–Ω–æ –ø—É—Ç–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–±–æ—Ä–∫—É "{1}").</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω—ã —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è AssemblyFoldersEx.</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">–í —Ñ–∞–π–ª–µ —Å–ø–∏—Å–∫–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ "{0}" –∏–º—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ–º–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –≤ —ç–ª–µ–º–µ–Ω—Ç–µ FileList –∏–º–µ–µ—Ç –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ NULL. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–º—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ–º–æ–≥–æ –ø–∞–∫–µ—Ç–∞ (Redist Name) –Ω–µ –ø—É—Å—Ç–æ –∏ –Ω–µ —Ä–∞–≤–Ω–æ NULL.</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫—ç—à–∞ —Å–±–æ—Ä–∫–∏ "{0}".</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">COM-—Å—Å—ã–ª–∫–∞ "{0}" —è–≤–ª—è–µ—Ç—Å—è —Å–±–æ—Ä–∫–æ–π –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ ActiveX "{1}", –Ω–æ –±—ã–ª–∞ –ø–æ–º–µ—á–µ–Ω–∞ –Ω–∞ –∫–æ–º–ø–æ–Ω–æ–≤–∫—É –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º —Ñ–ª–∞–≥–æ–º /link. –≠—Ç–∞ COM-—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –∏ –Ω–µ –±—É–¥–µ—Ç —Å–∫–æ–º–ø–æ–Ω–æ–≤–∞–Ω–∞.</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: –ù–µ —É–∫–∞–∑–∞–Ω –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏.</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">"{0}" –±–ª–æ–∫–∏—Ä—É–µ—Ç —ç—Ç–æ—Ç —Ñ–∞–π–ª</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: –∑–∞–¥–∞—á–∞ "{0}" –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ MSBuild –≤–µ—Ä—Å–∏–∏ .NET Core. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ MSBuild –≤–µ—Ä—Å–∏–∏ .NET Framework. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è: https://aka.ms/msbuild/MSB4803.</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: —Ñ–∞–±—Ä–∏–∫–∞ –∑–∞–¥–∞—á "{0}" –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –≤–µ—Ä—Å–∏–∏ .NET¬†Core –¥–ª—è MSBuild.</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">"{0}" –±–ª–æ–∫–∏—Ä—É–µ—Ç —ç—Ç–æ—Ç —Ñ–∞–π–ª</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–∏–ø –∫–æ–¥–∞ "{0}" –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã –∫–æ–¥–∞: "{1}".</target>
diff --git a/src/Tasks/Resources/xlf/Strings.tr.xlf b/src/Tasks/Resources/xlf/Strings.tr.xlf
index 0b59127f2b0..80e916c9578 100644
--- a/src/Tasks/Resources/xlf/Strings.tr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.tr.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: {0} i√ßin {1} yolu {2} yoluna kopyalandƒ± ve HR: {3}</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: "{0}" ve "{1}" proje dosyasƒ±nda parametre olarak belirtilmi≈ü ancak birlikte kullanƒ±lamaz. L√ºtfen birini veya diƒüerini se√ßin.</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: "{0}" dosyasƒ±nƒ± "{1}" yoluna kopyalama baƒülantƒ±sƒ± kullanƒ±lamadƒ±.</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: '{0}' bildirimi yazƒ±lamƒ±yor. {1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: '{0}' bildirimi yazƒ±lamƒ±yor. {1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">"{0}" SearchPath i√ßin ("{1}" ba≈üvuru derlemesi tarafƒ±ndan eklendi).</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">AssemblyFoldersEx konumlarƒ± dikkate alƒ±ndƒ±.</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">"{0}" yeniden daƒüƒ±tƒ±m liste dosyasƒ±nƒ±n FileList √∂ƒüesindeki Redist adƒ± null veya bo≈ü. Redist adƒ±nƒ±n null veya bo≈ü olmadƒ±ƒüƒ±ndan emin olun.</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Derleme √∂nbelleƒüi dosyasƒ± "{0}" g√ºncelle≈ütiriliyor.</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">'{0}' COM Ba≈üvurusu, '{1}' ActiveX denetiminin birlikte √ßalƒ±≈üma b√ºt√ºnle≈ütirilmi≈ü kodu, ancak /link bayraƒüƒ±yla derleyici tarafƒ±ndan baƒülanmak √ºzere i≈üaretlenmi≈ü. Bu COM ba≈üvurusu, ba≈üvuru olarak deƒüerlendirilecek ve baƒülanmayacak.</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: Gecikmeli imzalama i√ßin gerekli olan ortak anahtar belirtilmemi≈ü.</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">Dosya ≈üunun tarafƒ±ndan kilitlendi: "{0}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: MSBuild‚Äôin .NET Core s√ºr√ºm√ºnde "{0}" g√∂revi desteklenmiyor. L√ºtfen MSBuild‚Äôin .NET Framework s√ºr√ºm√ºn√º kullanƒ±n. Daha ayrƒ±ntƒ±lƒ± bilgi i√ßin bkz. https://aka.ms/msbuild/MSB4803.</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: "{0}" g√∂rev fabrikasƒ±, MSBuild .NET Core s√ºr√ºm√ºnde desteklenmiyor.</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">Dosya ≈üunun tarafƒ±ndan kilitlendi: "{0}"</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: Belirtilen "{0}" kod t√ºr√º ge√ßersiz.  Desteklenen kod t√ºrleri ≈üunlardƒ±r: "{1}".</target>
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
index 8272b18a8a5..fb45fb03527 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: Â∞Ü "{1}" Â§çÂà∂Âà∞ "{2}" Êó∂Âá∫Áé∞ {0}ÔºåHR ‰∏∫ {3}</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: ‚Äú{0}‚ÄùÂíå‚Äú{1}‚ÄùÂùáË¢´ÊåáÂÆö‰∏∫È°πÁõÆÊñá‰ª∂‰∏≠ÁöÑÂèÇÊï∞Ôºå‰ΩÜ‰∏çËÉΩ‰∏ÄËµ∑‰ΩøÁî®„ÄÇËØ∑ÈÄâÊã©ÂÖ∂‰∏≠‰∏Ä‰∏™„ÄÇ</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: Êó†Ê≥ï‰ΩøÁî®ÈìæÊé•Â∞Ü‚Äú{0}‚ÄùÂ§çÂà∂Âà∞‚Äú{1}‚Äù„ÄÇ</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: Êó†Ê≥ïÂÜôÂÖ•Ê∏ÖÂçï‚Äú{0}‚Äù„ÄÇ{1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: Êó†Ê≥ïÂÜôÂÖ•Ê∏ÖÂçï‚Äú{0}‚Äù„ÄÇ{1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">ÂØπ‰∫é SearchPath‚Äú{0}‚Äù(ÈÄöËøáÂºïÁî®Á®ãÂ∫èÈõÜ‚Äú{1}‚ÄùÊ∑ªÂä†)„ÄÇ</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">Â∑≤ËÄÉËôë AssemblyFoldersEx ‰ΩçÁΩÆ„ÄÇ</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">ÂèØÂÜçÂèëË°åÁ®ãÂ∫èÂåÖÂàóË°®Êñá‰ª∂‚Äú{0}‚ÄùÂú® FileList ÂÖÉÁ¥†‰∏≠ÂÖ∑Êúâ null ÊàñÁ©∫ÁöÑÂèØÂÜçÂèëË°åÁ®ãÂ∫èÂåÖÂêçÁß∞„ÄÇËØ∑Á°Æ‰øùÂèØÂÜçÂèëË°åÁ®ãÂ∫èÂåÖÂêçÁß∞‰∏ç‰∏∫ null ÊàñÁ©∫ÂÄº„ÄÇ</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Ê≠£Âú®Êõ¥Êñ∞Á®ãÂ∫èÈõÜÁºìÂ≠òÊñá‰ª∂‚Äú{0}‚Äù„ÄÇ</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">COM ÂºïÁî®‚Äú{0}‚ÄùÊòØ ActiveX Êéß‰ª∂‚Äú{1}‚ÄùÁöÑ‰∫íÊìç‰ΩúÁ®ãÂ∫èÈõÜÔºå‰ΩÜÂê´Êúâ /link Ê†áÂøóÁöÑÁºñËØëÂô®Â∑≤Â∞ÜÂÖ∂Ê†á‰∏∫Â∑≤ÈìæÊé•„ÄÇÁ≥ªÁªü‰ºöÂ∞ÜÊ≠§ COM ÂºïÁî®ËßÜ‰∏∫ÂºïÁî®ÔºåÂπ∂‰∏î‰∏ç‰ºöÈìæÊé•ËØ•ÂºïÁî®„ÄÇ</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: Êú™ÊåáÂÆöÂª∂ËøüÁ≠æÂêçÊâÄÈúÄÁöÑÂÖ¨Èí•„ÄÇ</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">Êñá‰ª∂Ë¢´‚Äú{0}‚ÄùÈîÅÂÆö„ÄÇ</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: .NET Core ÁâàÊú¨ÁöÑ MSBuild ‰∏çÊîØÊåÅ‚Äú{0}‚Äù„ÄÇËØ∑‰ΩøÁî® .NET Framework ÁâàÊú¨ÁöÑ MSBuild„ÄÇÊúâÂÖ≥Êõ¥Â§öËØ¶ÁªÜ‰ø°ÊÅØÔºåËØ∑ÂèÇÈòÖ https://aka.ms/msbuild/MSB4803„ÄÇ</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: ‰ªªÂä°Â∑•ÂéÇ‚Äú{0}‚ÄùÂú® MSBuild ÁöÑ .NET Core ÁâàÊú¨‰∏ä‰∏çÂèóÊîØÊåÅ„ÄÇ</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">Êñá‰ª∂Ë¢´‚Äú{0}‚ÄùÈîÅÂÆö„ÄÇ</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: ÊåáÂÆöÁöÑ‰ª£Á†ÅÁ±ªÂûã‚Äú{0}‚ÄùÊó†Êïà„ÄÇÊîØÊåÅÁöÑ‰ª£Á†ÅÁ±ªÂûãÊòØ‚Äú{1}‚Äù„ÄÇ</target>
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
index ef2d07887fa..1ce29e770f5 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
@@ -196,6 +196,11 @@
         <target state="translated">MSB3894: ÊìÅÊúâ {0} Â∞á "{1}" Ë§áË£ΩËá≥ "{2}"Ôºå‰∏î HR ÁÇ∫ {3}</target>
         <note>{StrBegin="MSB3894: "} LOCALIZATION: {0} is exception.ToString(), {1} and {2} are paths, {3} is a number")</note>
       </trans-unit>
+      <trans-unit id="Copy.IncompatibleParameters">
+        <source>MSB3896: Both "{0}" and "{1}" were specified as parameters in the project file but cannot be used together. Please choose one or the other.</source>
+        <target state="translated">MSB3896: "{0}" Âíå "{1}" ÈÉΩÊåáÂÆöÁÇ∫Â∞àÊ°àÊ™î‰∏≠ÁöÑÂèÉÊï∏Ôºå‰ΩÜ‰∏çËÉΩ‰∏ÄËµ∑‰ΩøÁî®„ÄÇË´ãÈÅ∏ÊìáÂÖ∂‰∏≠‰∏ÄÂÄã„ÄÇ</target>
+        <note>{StrBegin="MSB3896: "}</note>
+      </trans-unit>
       <trans-unit id="Copy.LinkFailed">
         <source>MSB3893: Could not use a link to copy "{0}" to "{1}".</source>
         <target state="translated">MSB3893: ÁÑ°Ê≥ï‰ΩøÁî®ÈÄ£ÁµêÂ∞á "{0}" Ë§áË£ΩÂà∞ "{1}"„ÄÇ</target>
@@ -1055,8 +1060,8 @@
         <note>{StrBegin="MSB3183: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.WriteOutputManifestFailed">
-        <source>MSB3173: Unable to write manifest '{0}'. {1}</source>
-        <target state="translated">MSB3173: ÁÑ°Ê≥ïÂØ´ÂÖ•Ë≥áË®äÊ∏ÖÂñÆ '{0}'„ÄÇ{1}</target>
+        <source>MSB3173: Unable to write manifest '{0}'. {1} {2}</source>
+        <target state="translated">MSB3173: ÁÑ°Ê≥ïÂØ´ÂÖ•Ë≥áË®äÊ∏ÖÂñÆ '{0}'„ÄÇ{1} {2}</target>
         <note>{StrBegin="MSB3173: "}</note>
       </trans-unit>
       <trans-unit id="GenerateManifest.InvalidRequestedExecutionLevel">
@@ -1681,6 +1686,11 @@
       LOCALIZATION: Please don't localize "CopyLocal" this is an item meta-data name.
     </note>
       </trans-unit>
+      <trans-unit id="ResolveAssemblyReference.SearchPathAddedByParentAssembly">
+        <source>For SearchPath "{0}" (added by referencing assembly "{1}").</source>
+        <target state="translated">ÈáùÂ∞ç SearchPath "{0}" (Áî±ÂèÉËÄÉÁµÑ‰ª∂ "{1}" Êñ∞Â¢û)„ÄÇ</target>
+        <note> {1} is the name of the parent assembly for which SearchPath was used.</note>
+      </trans-unit>
       <trans-unit id="ResolveAssemblyReference.SearchedAssemblyFoldersEx">
         <source>Considered AssemblyFoldersEx locations.</source>
         <target state="translated">Â∑≤ËÄÉÊÖÆ AssemblyFoldersEx ‰ΩçÁΩÆ„ÄÇ</target>
@@ -2175,11 +2185,6 @@
         <target state="translated">ÂèØËΩâÊï£ÁôºÂ•ó‰ª∂Ê∏ÖÂñÆÊ™î "{0}" Âú® FileList È†ÖÁõÆ‰∏≠ÁöÑ Redist ÂêçÁ®±ÁÇ∫ null ÊàñÁ©∫ÁôΩ„ÄÇË´ãÁ¢∫Ë™ç Redist ÂêçÁ®±‰∏çÁÇ∫ null ÊàñÁ©∫ÁôΩ„ÄÇ</target>
         <note />
       </trans-unit>
-      <trans-unit id="ResolveAssemblyReference.WritingCacheFile">
-        <source>Updating assembly cache file "{0}".</source>
-        <target state="translated">Êõ¥Êñ∞ÁµÑ‰ª∂Âø´ÂèñÊ™îÊ°à "{0}"„ÄÇ</target>
-        <note />
-      </trans-unit>
       <trans-unit id="ResolveComReference.TreatingTlbOfActiveXAsNonEmbedded">
         <source>COM Reference '{0}' is the interop assembly for ActiveX control '{1}' but was marked to be linked by the compiler with the /link flag. This COM reference will be treated as a reference and will not be linked.</source>
         <target state="translated">COM ÂèÉËÄÉ '{0}' ÊòØ ActiveX ÊéßÂà∂È†Ö '{1}' ÁöÑ Interop ÁµÑ‰ª∂Ôºå‰ΩÜÊòØÊ®ôË®òÁÇ∫Ë¶ÅÁî±Á∑®Ë≠ØÂô®‰ª• /link ÊóóÊ®ôÈÄ£Áµê„ÄÇÈÄôÂÄã COM ÂèÉËÄÉÂ∞áË¢´Ë¶ñÁÇ∫ÂèÉËÄÉÔºå‰∏çÊúÉÈÄ≤Ë°åÈÄ£Áµê„ÄÇ</target>
@@ -2514,6 +2519,11 @@
         <target state="translated">MSB3353: Êú™ÊåáÂÆöÂª∂ÈÅ≤Á∞ΩÁΩ≤ÊâÄÈúÄÁöÑÂÖ¨ÈñãÈáëÈë∞„ÄÇ</target>
         <note>{StrBegin="MSB3353: "}</note>
       </trans-unit>
+      <trans-unit id="Task.FileLocked">
+        <source>The file is locked by: "{0}"</source>
+        <target state="translated">Ê™îÊ°àÈéñÂÆöËÄÖ: "{0}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="TaskRequiresFrameworkFailure">
         <source>MSB4803: The task "{0}" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild. See https://aka.ms/msbuild/MSB4803 for further details.</source>
         <target state="translated">MSB4803: MSBuild ÁöÑ .NET Core ÁâàÊú¨‰∏çÊîØÊè¥Â∑•‰Ωú "{0}"„ÄÇË´ã‰ΩøÁî® MSBuild ÁöÑ .NET Framework ÁâàÊú¨„ÄÇÂ¶ÇÈúÄÈÄ≤‰∏ÄÊ≠•ÁöÑË©≥Á¥∞Ë≥áÊñôÔºåË´ãÂèÉÈñ± https://aka.ms/msbuild/MSB4803„ÄÇ</target>
@@ -3399,11 +3409,6 @@
         <target state="translated">MSB4801: MSBuild ÁâàÁöÑ .NET Core ‰∏çÊîØÊè¥Â∑•‰ΩúËôïÁêÜÁ´ô "{0}"„ÄÇ</target>
         <note>{StrBegin="MSB4801: "}</note>
       </trans-unit>
-      <trans-unit id="Copy.FileLocked">
-        <source>The file is locked by: "{0}"</source>
-        <target state="translated">Ê™îÊ°àÈéñÂÆöËÄÖ: "{0}"</target>
-        <note />
-      </trans-unit>
       <trans-unit id="CodeTaskFactory.InvalidCodeType">
         <source>MSB3759: The specified code type "{0}" is invalid.  The supported code types are "{1}".</source>
         <target state="translated">MSB3759: ÊåáÂÆöÁöÑÁ®ãÂºèÁ¢ºÈ°ûÂûã "{0}" ÁÑ°Êïà„ÄÇ  ÊîØÊè¥ÁöÑÁ®ãÂºèÁ¢ºÈ°ûÂûãÁÇ∫ "{1}"„ÄÇ</target>
diff --git a/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs b/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs
index 374fa50852d..63d7fd5b8ae 100644
--- a/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs
+++ b/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs
@@ -80,12 +80,6 @@ public sealed class RoslynCodeTaskFactory : ITaskFactory
         /// </summary>
         private const string ReferenceAssemblyDirectoryName = "ref";
 
-
-        /// <summary>
-        /// Array of mono lib directories used to resolve references
-        /// </summary>
-        private static readonly string[] MonoLibDirs = GetMonoLibDirs();
-
         /// <summary>
         /// A cache of <see cref="RoslynCodeTaskFactoryTaskInfo"/> objects and their corresponding compiled assembly.  This cache ensures that two of the exact same code task
         /// declarations are not compiled multiple times.
@@ -573,7 +567,6 @@ internal bool TryResolveAssemblyReferences(TaskLoggingHelper log, RoslynCodeTask
                     Path.Combine(ThisAssemblyDirectoryLazy.Value, ReferenceAssemblyDirectoryName),
                     ThisAssemblyDirectoryLazy.Value,
                 }
-                .Concat(MonoLibDirs)
                 .FirstOrDefault(p => File.Exists(Path.Combine(p, assemblyFileName)));
 
                 if (resolvedDir != null)
@@ -788,20 +781,5 @@ private bool TryCompileInMemoryAssembly(IBuildEngine buildEngine, RoslynCodeTask
                 }
             }
         }
-
-        private static string[] GetMonoLibDirs()
-        {
-            if (NativeMethodsShared.IsMono)
-            {
-                string monoLibDir = Path.GetDirectoryName(typeof(object).Assembly.Location);
-                string monoLibFacadesDir = Path.Combine(monoLibDir, "Facades");
-
-                return new[] { monoLibDir, monoLibFacadesDir };
-            }
-            else
-            {
-                return Array.Empty<string>();
-            }
-        }
     }
 }
diff --git a/src/Tasks/SystemState.cs b/src/Tasks/SystemState.cs
index dd09094f7d1..cb7031ecb55 100644
--- a/src/Tasks/SystemState.cs
+++ b/src/Tasks/SystemState.cs
@@ -631,7 +631,7 @@ internal void SerializePrecomputedCache(string stateFile, TaskLoggingHelper log)
         /// </summary>
         /// <param name="path"></param>
         /// <param name="pattern"></param>
-        /// <returns></returns>
+        /// <returns>The list of directories from the specified path.</returns>
         private string[] GetDirectories(string path, string pattern)
         {
             // Only cache the *. pattern. This is by far the most common pattern
diff --git a/src/Tasks/TlbReference.cs b/src/Tasks/TlbReference.cs
index 9334ab87fbb..30acc7f8e38 100644
--- a/src/Tasks/TlbReference.cs
+++ b/src/Tasks/TlbReference.cs
@@ -254,11 +254,9 @@ internal bool GenerateWrapper(out ComReferenceWrapperInfo wrapperInfo)
                         case UtilitiesProcessorArchitecture.X86:
                             flags |= TypeLibImporterFlags.ImportAsX86;
                             break;
-#if !MONO
                         case UtilitiesProcessorArchitecture.ARM:
                             flags |= TypeLibImporterFlags.ImportAsArm;
                             break;
-#endif
                         default:
                             // Let the type importer decide.
                             break;
diff --git a/src/UnitTests.Shared/AssemblyInfo.cs b/src/UnitTests.Shared/AssemblyInfo.cs
new file mode 100644
index 00000000000..3b5d7bbb185
--- /dev/null
+++ b/src/UnitTests.Shared/AssemblyInfo.cs
@@ -0,0 +1,4 @@
+// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+global using NativeMethodsShared = Microsoft.Build.Framework.NativeMethods;
diff --git a/src/UnitTests.Shared/AssemblyResources.cs b/src/UnitTests.Shared/AssemblyResources.cs
deleted file mode 100644
index baa3ffd33ba..00000000000
--- a/src/UnitTests.Shared/AssemblyResources.cs
+++ /dev/null
@@ -1,23 +0,0 @@
-// Copyright (c) Microsoft. All rights reserved.
-// Licensed under the MIT license. See LICENSE file in the project root for full license information.
-
-using System;
-
-#nullable disable
-
-namespace Microsoft.Build.Shared
-{
-    /// <summary>
-    /// This class provides access to the assembly's resources.
-    /// </summary>
-    internal static class AssemblyResources
-    {
-        /// <summary>
-        /// Dummy
-        /// </summary>
-        internal static string GetString(string name)
-        {
-            return String.Empty;
-        }
-    }
-}
diff --git a/src/Shared/UnitTests/BuildEventArgsExtension.cs b/src/UnitTests.Shared/BuildEventArgsExtension.cs
similarity index 99%
rename from src/Shared/UnitTests/BuildEventArgsExtension.cs
rename to src/UnitTests.Shared/BuildEventArgsExtension.cs
index 4ccf2f47b5c..ad52cea6b50 100644
--- a/src/Shared/UnitTests/BuildEventArgsExtension.cs
+++ b/src/UnitTests.Shared/BuildEventArgsExtension.cs
@@ -13,7 +13,7 @@ namespace Microsoft.Build.UnitTests
     /// <summary>
     /// A class containing an extension to BuildEventArgs
     /// </summary>
-    internal static class BuildEventArgsExtension
+    public static class BuildEventArgsExtension
     {
         /// <summary>
         /// Extension method to help our tests without adding shipping code.
diff --git a/src/UnitTests.Shared/DummyMappedDriveUtils.cs b/src/UnitTests.Shared/DummyMappedDriveUtils.cs
index c2c28c8f0e5..90f596858d3 100644
--- a/src/UnitTests.Shared/DummyMappedDriveUtils.cs
+++ b/src/UnitTests.Shared/DummyMappedDriveUtils.cs
@@ -8,7 +8,7 @@
 
 namespace Microsoft.Build.UnitTests.Shared;
 
-internal static class DummyMappedDriveUtils
+public static class DummyMappedDriveUtils
 {
     public static string UpdatePathToMappedDrive(string path, char driveLetter)
     {
diff --git a/src/Shared/UnitTests/EngineTestEnvironment.cs b/src/UnitTests.Shared/EngineTestEnvironment.cs
similarity index 96%
rename from src/Shared/UnitTests/EngineTestEnvironment.cs
rename to src/UnitTests.Shared/EngineTestEnvironment.cs
index 87be4933bc4..12953a61178 100644
--- a/src/Shared/UnitTests/EngineTestEnvironment.cs
+++ b/src/UnitTests.Shared/EngineTestEnvironment.cs
@@ -30,7 +30,7 @@ public partial class TestEnvironment
 
         private sealed class ResetDefaultBuildManager
         {
-            internal static FieldInfo SingletonField;
+            public static FieldInfo SingletonField;
 
             public ResetDefaultBuildManager()
             {
@@ -132,13 +132,13 @@ public TransientTestProjectWithFiles(
             CreatedFiles = Helpers.CreateFilesInDirectory(TestRoot, files);
         }
 
-        internal MockLogger BuildProjectExpectFailure(IDictionary<string, string> globalProperties = null, string toolsVersion = null, bool validateLoggerRoundtrip = true)
+        public MockLogger BuildProjectExpectFailure(IDictionary<string, string> globalProperties = null, string toolsVersion = null, bool validateLoggerRoundtrip = true)
         {
             BuildProject(globalProperties, toolsVersion, out MockLogger logger, validateLoggerRoundtrip).ShouldBeFalse();
             return logger;
         }
 
-        internal MockLogger BuildProjectExpectSuccess(IDictionary<string, string> globalProperties = null, string toolsVersion = null, bool validateLoggerRoundtrip = true)
+        public MockLogger BuildProjectExpectSuccess(IDictionary<string, string> globalProperties = null, string toolsVersion = null, bool validateLoggerRoundtrip = true)
         {
             BuildProject(globalProperties, toolsVersion, out MockLogger logger, validateLoggerRoundtrip).ShouldBeTrue();
             return logger;
diff --git a/src/Shared/UnitTests/LongPathSupportDisabledFactAttribute.cs b/src/UnitTests.Shared/LongPathSupportDisabledFactAttribute.cs
similarity index 100%
rename from src/Shared/UnitTests/LongPathSupportDisabledFactAttribute.cs
rename to src/UnitTests.Shared/LongPathSupportDisabledFactAttribute.cs
diff --git a/src/UnitTests.Shared/Microsoft.Build.UnitTests.Shared.csproj b/src/UnitTests.Shared/Microsoft.Build.UnitTests.Shared.csproj
index 438cb91ff75..0bade6a09d5 100644
--- a/src/UnitTests.Shared/Microsoft.Build.UnitTests.Shared.csproj
+++ b/src/UnitTests.Shared/Microsoft.Build.UnitTests.Shared.csproj
@@ -1,69 +1,22 @@
-Ôªø<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build">
-  <Import Project="..\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
-    <ProjectGuid>{E1ADB824-2B34-4920-953F-746DFD6DB3C1}</ProjectGuid>
-    <OutputType>Library</OutputType>
-    <AppDesignerFolder>Properties</AppDesignerFolder>
-    <RootNamespace>Microsoft.Build.UnitTests.Shared</RootNamespace>
+    <TargetFrameworks>$(FullFrameworkTFM);$(LatestDotNetCoreForMSBuild)</TargetFrameworks>
     <AssemblyName>Microsoft.Build.UnitTests.Shared</AssemblyName>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
-    <DoNotLocalizeProject>true</DoNotLocalizeProject>
     <IsShipping>false</IsShipping>
+    <IsTestProject>false</IsTestProject>
+    <IsTestLibrary>true</IsTestLibrary>
   </PropertyGroup>
-  <!-- Default configurations to help VS understand the configurations -->
-  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' " />
-  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' " />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug-MONO|AnyCPU'" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release-MONO|AnyCPU'" />
-  <ItemGroup Condition="'$(NetCoreBuild)' != 'true'">
-    <Reference Include="System" />
-    <Reference Include="System.Core" />
-    <Reference Include="System.Xml" />
-  </ItemGroup>
-  <ItemGroup>
-    <Compile Include="..\Shared\BuildEnvironmentHelper.cs">
-      <Link>BuildEnvironmentHelper.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\Compat\SafeHandleZeroOrMinusOneIsInvalid.cs"  Condition="'$(NetCoreBuild)' == 'true'">
-      <Link>SafeHandleZeroOrMinusOneIsInvalid.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\Constants.cs">
-      <Link>Constants.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\ErrorUtilities.cs">
-      <Link>ErrorUtilities.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\EscapingUtilities.cs">
-      <Link>EscapingUtilities.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\ExceptionHandling.cs">
-      <Link>ExceptionHandling.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\FileUtilities.cs">
-      <Link>FileUtilities.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\FileUtilitiesRegex.cs">
-      <Link>FileUtilitiesRegex.cs</Link>
-    </Compile>
-    <Compile Include="..\Shared\ResourceUtilities.cs">
-      <Link>ResourceUtilities.cs</Link>
-    </Compile>
-    <Compile Include="AssemblyResources.cs" />
-    <Compile Include="RunnerUtilities.cs" />
-  </ItemGroup>
   <ItemGroup>
-    <ProjectReference Include="..\Utilities\Microsoft.Build.Utilities.csproj">
-      <Project>{828566ee-6f6a-4ef4-98b0-513f7df9c628}</Project>
-      <Name>Microsoft.Build.Utilities</Name>
-    </ProjectReference>
+    <!-- Implicit references to xunit.core and xunit.assert in test projects by Arcade
+         cause restore failures if PackageVersion is in the normal .props file. -->
+    <PackageReference Include="xunit.assert" VersionOverride="$(XUnitVersion)" />
+    <PackageReference Include="xunit.core" VersionOverride="$(XUnitVersion)" />
+    <PackageReference Include="Shouldly" />
   </ItemGroup>
   <ItemGroup>
-    <None Include="project.json" />
+    <ProjectReference Include="..\Build\Microsoft.Build.csproj" />
+    <ProjectReference Include="..\Utilities\Microsoft.Build.Utilities.csproj" />
+    <ProjectReference Include="..\Xunit.NetCore.Extensions\Xunit.NetCore.Extensions.csproj" />
   </ItemGroup>
-  <Import Project="..\dir.targets" />
 </Project>
diff --git a/src/Shared/UnitTests/MockEngine.cs b/src/UnitTests.Shared/MockEngine.cs
similarity index 95%
rename from src/Shared/UnitTests/MockEngine.cs
rename to src/UnitTests.Shared/MockEngine.cs
index a0dfb0c644e..2e3894d4562 100644
--- a/src/Shared/UnitTests/MockEngine.cs
+++ b/src/UnitTests.Shared/MockEngine.cs
@@ -32,7 +32,7 @@ namespace Microsoft.Build.UnitTests
      * is somewhat of a no-no for task assemblies.
      *
      **************************************************************************/
-    internal sealed class MockEngine : IBuildEngine7
+    public sealed class MockEngine : IBuildEngine7
     {
         private readonly object _lockObj = new object();  // Protects _log, _output
         private readonly ITestOutputHelper _output;
@@ -43,15 +43,15 @@ internal sealed class MockEngine : IBuildEngine7
         private readonly ConcurrentQueue<BuildErrorEventArgs> _errorEvents = new ConcurrentQueue<BuildErrorEventArgs>();
         private readonly ConcurrentQueue<BuildWarningEventArgs> _warningEvents = new ConcurrentQueue<BuildWarningEventArgs>();
 
-        internal MockEngine() : this(false)
+        public MockEngine() : this(false)
         {
         }
 
-        internal int Messages { get; set; }
+        public int Messages { get; set; }
 
-        internal int Warnings { get; set; }
+        public int Warnings { get; set; }
 
-        internal int Errors { get; set; }
+        public int Errors { get; set; }
 
         public bool AllowFailureWithoutError { get; set; } = false;
 
@@ -60,7 +60,7 @@ internal MockEngine() : this(false)
 
         public Dictionary<string, string> GlobalProperties { get; set; } = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase);
 
-        internal MockLogger MockLogger { get; }
+        public MockLogger MockLogger { get; }
 
         public MockEngine(bool logToConsole)
         {
@@ -192,7 +192,7 @@ public IReadOnlyDictionary<string, string> GetGlobalProperties()
 
         public int ColumnNumberOfTaskNode => 0;
 
-        internal string Log
+        public string Log
         {
             get
             {
@@ -373,7 +373,7 @@ public void UnloadAllProjects()
         /// <summary>
         /// Assert that the mock log in the engine doesn't contain a certain message based on a resource string and some parameters
         /// </summary>
-        internal void AssertLogDoesntContainMessageFromResource(GetStringDelegate getString, string resourceName, params string[] parameters)
+        public void AssertLogDoesntContainMessageFromResource(GetStringDelegate getString, string resourceName, params string[] parameters)
         {
             string resource = getString(resourceName);
             string stringToSearchFor = String.Format(resource, parameters);
@@ -383,7 +383,7 @@ internal void AssertLogDoesntContainMessageFromResource(GetStringDelegate getStr
         /// <summary>
         /// Assert that the mock log in the engine contains a certain message based on a resource string and some parameters
         /// </summary>
-        internal void AssertLogContainsMessageFromResource(GetStringDelegate getString, string resourceName, params string[] parameters)
+        public void AssertLogContainsMessageFromResource(GetStringDelegate getString, string resourceName, params string[] parameters)
         {
             string resource = getString(resourceName);
             string stringToSearchFor = String.Format(resource, parameters);
@@ -396,7 +396,7 @@ internal void AssertLogContainsMessageFromResource(GetStringDelegate getString,
         /// First check if the string is in the log string. If not
         /// than make sure it is also check the MockLogger
         /// </summary>
-        internal void AssertLogContains(string contains)
+        public void AssertLogContains(string contains)
         {
             // If we do not contain this string than pass it to
             // MockLogger. Since MockLogger is also registered as
@@ -426,7 +426,7 @@ internal void AssertLogContains(string contains)
         /// First check if the string is in the log string. If not
         /// than make sure it is also not in the MockLogger
         /// </summary>
-        internal void AssertLogDoesntContain(string contains)
+        public void AssertLogDoesntContain(string contains)
         {
             string logText;
             lock (_lockObj)
diff --git a/src/Shared/UnitTests/MockLogger.cs b/src/UnitTests.Shared/MockLogger.cs
similarity index 86%
rename from src/Shared/UnitTests/MockLogger.cs
rename to src/UnitTests.Shared/MockLogger.cs
index 38ac661d845..dab6b5e32d0 100644
--- a/src/Shared/UnitTests/MockLogger.cs
+++ b/src/UnitTests.Shared/MockLogger.cs
@@ -40,7 +40,7 @@ public sealed class MockLogger : ILogger
         /// Should the build finished event be logged in the log file. This is to work around the fact we have different
         /// localized strings between env and xmake for the build finished event.
         /// </summary>
-        internal bool LogBuildFinished { get; set; } = true;
+        public bool LogBuildFinished { get; set; } = true;
 
         /*
          * Method:  ErrorCount
@@ -48,7 +48,7 @@ public sealed class MockLogger : ILogger
          * The count of all errors seen so far.
          *
          */
-        internal int ErrorCount { get; private set; }
+        public int ErrorCount { get; private set; }
 
         /*
          * Method:  WarningCount
@@ -56,94 +56,94 @@ public sealed class MockLogger : ILogger
          * The count of all warnings seen so far.
          *
          */
-        internal int WarningCount { get; private set; }
+        public int WarningCount { get; private set; }
 
         /// <summary>
         /// Return the list of logged errors
         /// </summary>
-        internal List<BuildErrorEventArgs> Errors { get; } = new List<BuildErrorEventArgs>();
+        public List<BuildErrorEventArgs> Errors { get; } = new List<BuildErrorEventArgs>();
 
         /// <summary>
         /// Returns the list of logged warnings
         /// </summary>
-        internal List<BuildWarningEventArgs> Warnings { get; } = new List<BuildWarningEventArgs>();
+        public List<BuildWarningEventArgs> Warnings { get; } = new List<BuildWarningEventArgs>();
 
         /// <summary>
         /// When set to true, allows task crashes to be logged without causing an assert.
         /// </summary>
-        internal bool AllowTaskCrashes { get; set; }
+        public bool AllowTaskCrashes { get; set; }
 
         /// <summary>
         /// List of ExternalProjectStarted events
         /// </summary>
-        internal List<ExternalProjectStartedEventArgs> ExternalProjectStartedEvents { get; } = new List<ExternalProjectStartedEventArgs>();
+        public List<ExternalProjectStartedEventArgs> ExternalProjectStartedEvents { get; } = new List<ExternalProjectStartedEventArgs>();
 
         /// <summary>
         /// List of ExternalProjectFinished events
         /// </summary>
-        internal List<ExternalProjectFinishedEventArgs> ExternalProjectFinishedEvents { get; } = new List<ExternalProjectFinishedEventArgs>();
+        public List<ExternalProjectFinishedEventArgs> ExternalProjectFinishedEvents { get; } = new List<ExternalProjectFinishedEventArgs>();
 
         /// <summary>
         /// List of ProjectStarted events
         /// </summary>
-        internal List<ProjectEvaluationStartedEventArgs> EvaluationStartedEvents { get; } = new List<ProjectEvaluationStartedEventArgs>();
+        public List<ProjectEvaluationStartedEventArgs> EvaluationStartedEvents { get; } = new List<ProjectEvaluationStartedEventArgs>();
 
         /// <summary>
         /// List of ProjectFinished events
         /// </summary>
-        internal List<ProjectEvaluationFinishedEventArgs> EvaluationFinishedEvents { get; } = new List<ProjectEvaluationFinishedEventArgs>();
+        public List<ProjectEvaluationFinishedEventArgs> EvaluationFinishedEvents { get; } = new List<ProjectEvaluationFinishedEventArgs>();
 
         /// <summary>
         /// List of ProjectStarted events
         /// </summary>
-        internal List<ProjectStartedEventArgs> ProjectStartedEvents { get; } = new List<ProjectStartedEventArgs>();
+        public List<ProjectStartedEventArgs> ProjectStartedEvents { get; } = new List<ProjectStartedEventArgs>();
 
         /// <summary>
         /// List of ProjectFinished events
         /// </summary>
-        internal List<ProjectFinishedEventArgs> ProjectFinishedEvents { get; } = new List<ProjectFinishedEventArgs>();
+        public List<ProjectFinishedEventArgs> ProjectFinishedEvents { get; } = new List<ProjectFinishedEventArgs>();
 
         /// <summary>
         /// List of TargetStarted events
         /// </summary>
-        internal List<TargetStartedEventArgs> TargetStartedEvents { get; } = new List<TargetStartedEventArgs>();
+        public List<TargetStartedEventArgs> TargetStartedEvents { get; } = new List<TargetStartedEventArgs>();
 
         /// <summary>
         /// List of TargetFinished events
         /// </summary>
-        internal List<TargetFinishedEventArgs> TargetFinishedEvents { get; } = new List<TargetFinishedEventArgs>();
+        public List<TargetFinishedEventArgs> TargetFinishedEvents { get; } = new List<TargetFinishedEventArgs>();
 
         /// <summary>
         /// List of TaskStarted events
         /// </summary>
-        internal List<TaskStartedEventArgs> TaskStartedEvents { get; } = new List<TaskStartedEventArgs>();
+        public List<TaskStartedEventArgs> TaskStartedEvents { get; } = new List<TaskStartedEventArgs>();
 
         /// <summary>
         /// List of TaskFinished events
         /// </summary>
-        internal List<TaskFinishedEventArgs> TaskFinishedEvents { get; } = new List<TaskFinishedEventArgs>();
+        public List<TaskFinishedEventArgs> TaskFinishedEvents { get; } = new List<TaskFinishedEventArgs>();
 
         /// <summary>
         /// List of BuildMessage events
         /// </summary>
-        internal List<BuildMessageEventArgs> BuildMessageEvents { get; } = new List<BuildMessageEventArgs>();
+        public List<BuildMessageEventArgs> BuildMessageEvents { get; } = new List<BuildMessageEventArgs>();
 
         /// <summary>
         /// List of BuildStarted events, thought we expect there to only be one, a valid check is to make sure this list is length 1
         /// </summary>
-        internal List<BuildStartedEventArgs> BuildStartedEvents { get; } = new List<BuildStartedEventArgs>();
+        public List<BuildStartedEventArgs> BuildStartedEvents { get; } = new List<BuildStartedEventArgs>();
 
         /// <summary>
         /// List of BuildFinished events, thought we expect there to only be one, a valid check is to make sure this list is length 1
         /// </summary>
-        internal List<BuildFinishedEventArgs> BuildFinishedEvents { get; } = new List<BuildFinishedEventArgs>();
+        public List<BuildFinishedEventArgs> BuildFinishedEvents { get; } = new List<BuildFinishedEventArgs>();
 
         /// <summary>
         /// List of Telemetry events
         /// </summary>
-        internal List<TelemetryEventArgs> TelemetryEvents { get; } = new();
+        public List<TelemetryEventArgs> TelemetryEvents { get; } = new();
 
-        internal List<BuildEventArgs> AllBuildEvents { get; } = new List<BuildEventArgs>();
+        public List<BuildEventArgs> AllBuildEvents { get; } = new List<BuildEventArgs>();
 
         /*
          * Method:  FullLog
@@ -151,7 +151,7 @@ public sealed class MockLogger : ILogger
          * The raw concatenation of all messages, errors and warnings seen so far.
          *
          */
-        internal string FullLog
+        public string FullLog
         {
             get
             {
@@ -253,7 +253,7 @@ public MockLogger(ITestOutputHelper testOutputHelper = null, bool profileEvaluat
          * Receives build events and logs them the way we like.
          *
          */
-        internal void LoggerEventHandler(object sender, BuildEventArgs eventArgs)
+        public void LoggerEventHandler(object sender, BuildEventArgs eventArgs)
         {
             lock (_lockObj)
             {
@@ -398,7 +398,7 @@ internal void LoggerEventHandler(object sender, BuildEventArgs eventArgs)
             }
         }
 
-        internal void TelemetryEventHandler(object sender, BuildEventArgs eventArgs)
+        public void TelemetryEventHandler(object sender, BuildEventArgs eventArgs)
         {
             lock (_lockObj)
             {
@@ -442,14 +442,14 @@ private void PrintFullLog()
         /// Assert that the log file contains the given strings, in order.
         /// </summary>
         /// <param name="contains"></param>
-        internal void AssertLogContains(params string[] contains) => AssertLogContains(true, contains);
+        public void AssertLogContains(params string[] contains) => AssertLogContains(true, contains);
 
         /// <summary>
         /// Assert that the log file contains the given string, in order. Includes the option of case invariance
         /// </summary>
         /// <param name="isCaseSensitive">False if we do not care about case sensitivity</param>
         /// <param name="contains"></param>
-        internal void AssertLogContains(bool isCaseSensitive, params string[] contains)
+        public void AssertLogContains(bool isCaseSensitive, params string[] contains)
         {
             lock (_lockObj)
             {
@@ -508,7 +508,7 @@ internal void AssertLogContains(bool isCaseSensitive, params string[] contains)
         /// Assert that the log file does not contain the given string.
         /// </summary>
         /// <param name="contains"></param>
-        internal void AssertLogDoesntContain(string contains)
+        public void AssertLogDoesntContain(string contains)
         {
             lock (_lockObj)
             {
@@ -531,14 +531,14 @@ internal void AssertLogDoesntContain(string contains)
         /// <summary>
         /// Assert that no errors were logged
         /// </summary>
-        internal void AssertNoErrors() => Assert.Equal(0, ErrorCount);
+        public void AssertNoErrors() => Assert.Equal(0, ErrorCount);
 
         /// <summary>
         /// Assert that no warnings were logged
         /// </summary>
-        internal void AssertNoWarnings() => Assert.Equal(0, WarningCount);
+        public void AssertNoWarnings() => Assert.Equal(0, WarningCount);
 
-        internal void AssertMessageCount(string message, int expectedCount, bool regexSearch = true)
+        public void AssertMessageCount(string message, int expectedCount, bool regexSearch = true)
         {
             var matches = Regex.Matches(FullLog, regexSearch ? message : Regex.Escape(message));
             matches.Count.ShouldBe(expectedCount);
diff --git a/src/Shared/UnitTests/ObjectModelHelpers.cs b/src/UnitTests.Shared/ObjectModelHelpers.cs
similarity index 89%
rename from src/Shared/UnitTests/ObjectModelHelpers.cs
rename to src/UnitTests.Shared/ObjectModelHelpers.cs
index 5b6f8b43cec..a7609b3a908 100644
--- a/src/Shared/UnitTests/ObjectModelHelpers.cs
+++ b/src/UnitTests.Shared/ObjectModelHelpers.cs
@@ -38,7 +38,7 @@ namespace Microsoft.Build.UnitTests
      * Utility methods for unit tests that work through the object model.
      *
      */
-    internal static class ObjectModelHelpers
+    public static class ObjectModelHelpers
     {
         private const string msbuildNamespace = "http://schemas.microsoft.com/developer/msbuild/2003";
         private static string s_msbuildDefaultToolsVersion = MSBuildConstants.CurrentToolsVersion;
@@ -48,7 +48,7 @@ internal static class ObjectModelHelpers
         /// <summary>
         /// Return the current Visual Studio version
         /// </summary>
-        internal static string CurrentVisualStudioVersion
+        public static string CurrentVisualStudioVersion
         {
             get
             {
@@ -59,7 +59,7 @@ internal static string CurrentVisualStudioVersion
         /// <summary>
         /// Return the default tools version
         /// </summary>
-        internal static string MSBuildDefaultToolsVersion
+        public static string MSBuildDefaultToolsVersion
         {
             get
             {
@@ -70,7 +70,7 @@ internal static string MSBuildDefaultToolsVersion
         /// <summary>
         /// Return the current assembly version
         /// </summary>
-        internal static string MSBuildAssemblyVersion
+        public static string MSBuildAssemblyVersion
         {
             get
             {
@@ -103,7 +103,7 @@ private static bool IsBuiltInItemMetadataName(string metadataName)
         /// Gets an item list from the project and assert that it contains
         /// exactly one item with the supplied name.
         /// </summary>
-        internal static ProjectItem AssertSingleItem(Project p, string type, string itemInclude)
+        public static ProjectItem AssertSingleItem(Project p, string type, string itemInclude)
         {
             ProjectItem[] items = p.GetItems(type).ToArray();
             int count = 0;
@@ -118,7 +118,7 @@ internal static ProjectItem AssertSingleItem(Project p, string type, string item
             return items[0];
         }
 
-        internal static void AssertItemEvaluationFromProject(string projectContents, string[] inputFiles, string[] expectedInclude, Dictionary<string, string>[] expectedMetadataPerItem = null, bool normalizeSlashes = false, bool makeExpectedIncludeAbsolute = false)
+        public static void AssertItemEvaluationFromProject(string projectContents, string[] inputFiles, string[] expectedInclude, Dictionary<string, string>[] expectedMetadataPerItem = null, bool normalizeSlashes = false, bool makeExpectedIncludeAbsolute = false)
         {
             AssertItemEvaluationFromGenericItemEvaluator((p, c) =>
                 {
@@ -135,7 +135,7 @@ internal static void AssertItemEvaluationFromProject(string projectContents, str
             normalizeSlashes);
         }
 
-        internal static void AssertItemEvaluationFromGenericItemEvaluator(Func<string, ProjectCollection, IList<ITestItem>> itemEvaluator, string projectContents, string[] inputFiles, string[] expectedInclude, bool makeExpectedIncludeAbsolute = false, Dictionary<string, string>[] expectedMetadataPerItem = null, bool normalizeSlashes = false)
+        public static void AssertItemEvaluationFromGenericItemEvaluator(Func<string, ProjectCollection, IList<ITestItem>> itemEvaluator, string projectContents, string[] inputFiles, string[] expectedInclude, bool makeExpectedIncludeAbsolute = false, Dictionary<string, string>[] expectedMetadataPerItem = null, bool normalizeSlashes = false)
         {
             using (var env = TestEnvironment.Create())
             using (var collection = new ProjectCollection())
@@ -159,21 +159,21 @@ internal static void AssertItemEvaluationFromGenericItemEvaluator(Func<string, P
             }
         }
 
-        internal static void ShouldHaveSucceeded(this BuildResult result)
+        public static void ShouldHaveSucceeded(this BuildResult result)
         {
             result.OverallResult.ShouldBe(
                 BuildResultCode.Success,
                 customMessage: result.Exception is not null ? result.Exception.ToString() : string.Empty);
         }
 
-        internal static void ShouldHaveSucceeded(this GraphBuildResult result)
+        public static void ShouldHaveSucceeded(this GraphBuildResult result)
         {
             result.OverallResult.ShouldBe(
                 BuildResultCode.Success,
                 customMessage: result.Exception is not null ? result.Exception.ToString() : string.Empty);
         }
 
-        internal static void ShouldHaveFailed(this BuildResult result, string exceptionMessageSubstring = null)
+        public static void ShouldHaveFailed(this BuildResult result, string exceptionMessageSubstring = null)
         {
             result.OverallResult.ShouldBe(BuildResultCode.Failure);
 
@@ -183,7 +183,7 @@ internal static void ShouldHaveFailed(this BuildResult result, string exceptionM
             }
         }
 
-        internal static void ShouldHaveFailed(this GraphBuildResult result, string exceptionMessageSubstring = null)
+        public static void ShouldHaveFailed(this GraphBuildResult result, string exceptionMessageSubstring = null)
         {
             result.OverallResult.ShouldBe(BuildResultCode.Failure);
 
@@ -193,20 +193,20 @@ internal static void ShouldHaveFailed(this GraphBuildResult result, string excep
             }
         }
 
-        internal static string NormalizeSlashes(string path)
+        public static string NormalizeSlashes(string path)
         {
             return path.Replace('/', Path.DirectorySeparatorChar).Replace('\\', Path.DirectorySeparatorChar);
         }
 
         // todo Make IItem<M> public and add these new members to it.
-        internal interface ITestItem
+        public interface ITestItem
         {
             string EvaluatedInclude { get; }
             int DirectMetadataCount { get; }
             string GetMetadataValue(string key);
         }
 
-        internal sealed class ProjectItemTestItemAdapter : ITestItem
+        public sealed class ProjectItemTestItemAdapter : ITestItem
         {
             private readonly ProjectItem _projectInstance;
 
@@ -225,7 +225,7 @@ public static implicit operator ProjectItemTestItemAdapter(ProjectItem pi)
             }
         }
 
-        internal sealed class ProjectItemInstanceTestItemAdapter : ITestItem
+        public sealed class ProjectItemInstanceTestItemAdapter : ITestItem
         {
             private readonly ProjectItemInstance _projectInstance;
 
@@ -244,7 +244,7 @@ public static implicit operator ProjectItemInstanceTestItemAdapter(ProjectItemIn
             }
         }
 
-        internal static void AssertItems(string[] expectedItems, ICollection<ProjectItem> items, Dictionary<string, string> expectedDirectMetadata = null, bool normalizeSlashes = false)
+        public static void AssertItems(string[] expectedItems, ICollection<ProjectItem> items, Dictionary<string, string> expectedDirectMetadata = null, bool normalizeSlashes = false)
         {
             var converteditems = items.Select(i => (ITestItem)new ProjectItemTestItemAdapter(i)).ToList();
             AssertItems(expectedItems, converteditems, expectedDirectMetadata, normalizeSlashes);
@@ -253,7 +253,7 @@ internal static void AssertItems(string[] expectedItems, ICollection<ProjectItem
         /// <summary>
         /// Asserts that the list of items has the specified evaluated includes.
         /// </summary>
-        internal static void AssertItems(string[] expectedItems, IList<ITestItem> items, Dictionary<string, string> expectedDirectMetadata = null, bool normalizeSlashes = false)
+        public static void AssertItems(string[] expectedItems, IList<ITestItem> items, Dictionary<string, string> expectedDirectMetadata = null, bool normalizeSlashes = false)
         {
             if (expectedDirectMetadata == null)
             {
@@ -325,7 +325,7 @@ public static void AssertItems(string[] expectedItems, IList<ITestItem> items, D
         /// </summary>
         /// <param name="expectedItemsString"></param>
         /// <param name="actualItems"></param>
-        internal static void AssertItemsMatch(string expectedItemsString, ITaskItem[] actualItems)
+        public static void AssertItemsMatch(string expectedItemsString, ITaskItem[] actualItems)
         {
             AssertItemsMatch(expectedItemsString, actualItems, true);
         }
@@ -348,7 +348,7 @@ internal static void AssertItemsMatch(string expectedItemsString, ITaskItem[] ac
         /// <param name="expectedItemsString"></param>
         /// <param name="actualItems"></param>
         /// <param name="orderOfItemsShouldMatch"></param>
-        internal static void AssertItemsMatch(string expectedItemsString, ITaskItem[] actualItems, bool orderOfItemsShouldMatch)
+        public static void AssertItemsMatch(string expectedItemsString, ITaskItem[] actualItems, bool orderOfItemsShouldMatch)
         {
             List<ITaskItem> expectedItems = ParseExpectedItemsString(expectedItemsString);
 
@@ -454,18 +454,18 @@ internal static void AssertItemsMatch(string expectedItemsString, ITaskItem[] ac
             }
         }
 
-        internal static void AssertItemHasMetadata(Dictionary<string, string> expected, ProjectItem item)
+        public static void AssertItemHasMetadata(Dictionary<string, string> expected, ProjectItem item)
         {
             AssertItemHasMetadata(expected, new ProjectItemTestItemAdapter(item));
         }
 
-        internal static void AssertItemHasMetadata(string key, string value, ProjectItem item)
+        public static void AssertItemHasMetadata(string key, string value, ProjectItem item)
         {
             item.DirectMetadataCount.ShouldBe(1, customMessage: $"Expected 1 metadata, ({key}), got {item.DirectMetadataCount}");
             item.GetMetadataValue(key).ShouldBe(value);
         }
 
-        internal static void AssertItemHasMetadata(Dictionary<string, string> expected, ITestItem item)
+        public static void AssertItemHasMetadata(Dictionary<string, string> expected, ITestItem item)
         {
             expected ??= new Dictionary<string, string>();
 
@@ -480,7 +480,7 @@ internal static void AssertItemHasMetadata(Dictionary<string, string> expected,
         /// <summary>
         /// Used to compare the contents of two arrays.
         /// </summary>
-        internal static void AssertArrayContentsMatch(object[] expected, object[] actual)
+        public static void AssertArrayContentsMatch(object[] expected, object[] actual)
         {
             if (expected == null)
             {
@@ -560,7 +560,7 @@ private static List<ITaskItem> ParseExpectedItemsString(string expectedItemsStri
         /// Assert that a given file exists within the temp project directory.
         /// </summary>
         /// <param name="fileRelativePath"></param>
-        internal static void AssertFileExistsInTempProjectDirectory(string fileRelativePath)
+        public static void AssertFileExistsInTempProjectDirectory(string fileRelativePath)
         {
             AssertFileExistsInTempProjectDirectory(fileRelativePath, null);
         }
@@ -570,7 +570,7 @@ internal static void AssertFileExistsInTempProjectDirectory(string fileRelativeP
         /// </summary>
         /// <param name="fileRelativePath"></param>
         /// <param name="message">Can be null.</param>
-        internal static void AssertFileExistsInTempProjectDirectory(string fileRelativePath, string message)
+        public static void AssertFileExistsInTempProjectDirectory(string fileRelativePath, string message)
         {
             if (message == null)
             {
@@ -587,7 +587,7 @@ internal static void AssertFileExistsInTempProjectDirectory(string fileRelativeP
         /// </summary>
         /// <param name="projectFileContents"></param>
         /// <returns></returns>
-        internal static string CleanupFileContents(string projectFileContents)
+        public static string CleanupFileContents(string projectFileContents)
         {
             // Replace reverse-single-quotes with double-quotes.
             projectFileContents = projectFileContents.Replace("`", "\"");
@@ -609,7 +609,7 @@ public static string Cleanup(this string aString)
         /// Normalizes all the whitespace in an xml string so that two documents that
         /// differ only in whitespace can be easily compared to each other for sameness.
         /// </summary>
-        internal static string NormalizeXmlWhitespace(string xml)
+        public static string NormalizeXmlWhitespace(string xml)
         {
             XmlDocument xmldoc = new XmlDocument();
             xmldoc.LoadXml(xml);
@@ -639,7 +639,7 @@ internal static string NormalizeXmlWhitespace(string xml)
         /// </summary>
         /// <param name="xml"></param>
         /// <returns></returns>
-        internal static string CreateTempFileOnDisk(string fileContents, params object[] args)
+        public static string CreateTempFileOnDisk(string fileContents, params object[] args)
         {
             return CreateTempFileOnDiskNoFormat(string.Format(fileContents, args));
         }
@@ -649,7 +649,7 @@ internal static string CreateTempFileOnDisk(string fileContents, params object[]
         /// </summary>
         /// <param name="xml"></param>
         /// <returns></returns>
-        internal static string CreateTempFileOnDiskNoFormat(string fileContents)
+        public static string CreateTempFileOnDiskNoFormat(string fileContents)
         {
             string projectFilePath = FileUtilities.GetTemporaryFile();
 
@@ -658,7 +658,7 @@ internal static string CreateTempFileOnDiskNoFormat(string fileContents)
             return projectFilePath;
         }
 
-        internal static ProjectRootElement CreateInMemoryProjectRootElement(string projectContents, ProjectCollection collection = null, bool preserveFormatting = true)
+        public static ProjectRootElement CreateInMemoryProjectRootElement(string projectContents, ProjectCollection collection = null, bool preserveFormatting = true)
         {
             var cleanedProject = CleanupFileContents(projectContents);
 
@@ -673,7 +673,7 @@ internal static ProjectRootElement CreateInMemoryProjectRootElement(string proje
         /// </summary>
         /// <param name="xml">the project to be created in string format.</param>
         /// <returns>Returns created <see cref="Project"/>.</returns>
-        internal static Project CreateInMemoryProject(string xml)
+        public static Project CreateInMemoryProject(string xml)
         {
             return CreateInMemoryProject(xml, new ConsoleLogger());
         }
@@ -684,7 +684,7 @@ internal static Project CreateInMemoryProject(string xml)
         /// <param name="xml">the project to be created in string format.</param>
         /// <param name="loggers">The array of loggers to attach on project evaluation.</param>
         /// <returns>Returns created <see cref="Project"/>.</returns>
-        internal static Project CreateInMemoryProject(string xml, params ILogger[] loggers)
+        public static Project CreateInMemoryProject(string xml, params ILogger[] loggers)
         {
             return CreateInMemoryProject(new ProjectCollection(), xml, loggers);
         }
@@ -696,7 +696,7 @@ internal static Project CreateInMemoryProject(string xml, params ILogger[] logge
         /// <param name="xml">the project to be created in string format.</param>
         /// <param name="loggers">The array of loggers to attach on project evaluation. May be null.</param>
         /// <returns>Returns created <see cref="Project"/>.</returns>
-        internal static Project CreateInMemoryProject(ProjectCollection projectCollection, string xml, params ILogger[] loggers)
+        public static Project CreateInMemoryProject(ProjectCollection projectCollection, string xml, params ILogger[] loggers)
         {
             return CreateInMemoryProject(projectCollection, xml, null, loggers);
         }
@@ -709,7 +709,7 @@ internal static Project CreateInMemoryProject(ProjectCollection projectCollectio
         /// <param name="toolsVersion">The tools version to use on project creation. May be null.</param>
         /// <param name="loggers">The array of loggers to attach to project collection before evaluation. May be null.</param>
         /// <returns>Returns created <see cref="Project"/>.</returns>
-        internal static Project CreateInMemoryProject(
+        public static Project CreateInMemoryProject(
             ProjectCollection projectCollection,
             string xml,
             string toolsVersion /* may be null */,
@@ -745,7 +745,7 @@ internal static Project CreateInMemoryProject(
         /// <param name="testOutputHelper"><see cref="ITestOutputHelper"/> to log to.</param>
         /// <param name="loggerVerbosity">The required logging verbosity.</param>
         /// <returns>The <see cref="MockLogger"/> that was used during evaluation and build.</returns>
-        internal static MockLogger BuildProjectExpectSuccess(
+        public static MockLogger BuildProjectExpectSuccess(
             string projectContents,
             ITestOutputHelper testOutputHelper = null,
             LoggerVerbosity loggerVerbosity = LoggerVerbosity.Normal)
@@ -761,7 +761,7 @@ internal static MockLogger BuildProjectExpectSuccess(
         /// </summary>
         /// <param name="projectContents">The project file content in string format.</param>
         /// <param name="loggers">The array of loggers to use.</param>
-        internal static void BuildProjectExpectSuccess(
+        public static void BuildProjectExpectSuccess(
             string projectContents,
             params ILogger[] loggers)
         {
@@ -776,7 +776,7 @@ internal static void BuildProjectExpectSuccess(
         /// </summary>
         /// <param name="projectContents">The project file content in string format.</param>
         /// <returns>The <see cref="MockLogger"/> that was used during evaluation and build.</returns>
-        internal static MockLogger BuildProjectExpectFailure(string projectContents)
+        public static MockLogger BuildProjectExpectFailure(string projectContents)
         {
             MockLogger logger = new MockLogger();
             BuildProjectExpectFailure(projectContents, logger);
@@ -789,7 +789,7 @@ internal static MockLogger BuildProjectExpectFailure(string projectContents)
         /// </summary>
         /// <param name="projectContents">The project file content in string format.</param>
         /// <param name="loggers">The array of loggers to use.</param>
-        internal static void BuildProjectExpectFailure(
+        public static void BuildProjectExpectFailure(
             string projectContents,
             params ILogger[] loggers)
         {
@@ -804,7 +804,7 @@ internal static void BuildProjectExpectFailure(
         /// </summary>
         /// <param name="project"></param>
         /// <param name="newExpectedProjectContents"></param>
-        internal static void CompareProjectContents(
+        public static void CompareProjectContents(
             Project project,
             string newExpectedProjectContents)
         {
@@ -829,7 +829,7 @@ internal static void CompareProjectContents(
         /// <summary>
         /// Creates and returns a unique path under temp
         /// </summary>
-        internal static string TempProjectDir
+        public static string TempProjectDir
         {
             get
             {
@@ -847,7 +847,7 @@ internal static string TempProjectDir
         /// <summary>
         /// Deletes the directory %TEMP%\TempDirForMSBuildUnitTests, and all its contents.
         /// </summary>
-        internal static void DeleteTempProjectDirectory()
+        public static void DeleteTempProjectDirectory()
         {
             DeleteDirectory(TempProjectDir);
         }
@@ -855,7 +855,7 @@ internal static void DeleteTempProjectDirectory()
         /// <summary>
         /// Deletes the directory and all its contents.
         /// </summary>
-        internal static void DeleteDirectory(string dir)
+        public static void DeleteDirectory(string dir)
         {
             // Manually deleting all children, but intentionally leaving the
             // Temp project directory behind due to locking issues which were causing
@@ -894,7 +894,7 @@ internal static void DeleteDirectory(string dir)
         /// up the file contents (replacing single-back-quote with double-quote, etc.).
         /// Silently OVERWRITES existing file.
         /// </summary>
-        internal static string CreateFileInTempProjectDirectory(string fileRelativePath, string fileContents, Encoding encoding = null)
+        public static string CreateFileInTempProjectDirectory(string fileRelativePath, string fileContents, Encoding encoding = null)
         {
             Assert.False(string.IsNullOrEmpty(fileRelativePath));
             string fullFilePath = Path.Combine(TempProjectDir, fileRelativePath);
@@ -934,7 +934,7 @@ internal static string CreateFileInTempProjectDirectory(string fileRelativePath,
         /// </summary>
         /// <param name="projectFileRelativePath"></param>
         /// <returns></returns>
-        internal static void BuildTempProjectFileExpectSuccess(string projectFileRelativePath, MockLogger logger)
+        public static void BuildTempProjectFileExpectSuccess(string projectFileRelativePath, MockLogger logger)
         {
             BuildTempProjectFileWithTargetsExpectSuccess(projectFileRelativePath, null, null, logger);
         }
@@ -942,7 +942,7 @@ internal static void BuildTempProjectFileExpectSuccess(string projectFileRelativ
         /// <summary>
         /// Builds a project file from disk, and asserts if the build does not succeed.
         /// </summary>
-        internal static void BuildTempProjectFileWithTargetsExpectSuccess(string projectFileRelativePath, string[] targets, IDictionary<string, string> additionalProperties, MockLogger logger)
+        public static void BuildTempProjectFileWithTargetsExpectSuccess(string projectFileRelativePath, string[] targets, IDictionary<string, string> additionalProperties, MockLogger logger)
         {
             BuildTempProjectFileWithTargets(projectFileRelativePath, targets, additionalProperties, logger)
                 .ShouldBeTrue("Build failed.  See test output (Attachments in Azure Pipelines) for details");
@@ -951,7 +951,7 @@ internal static void BuildTempProjectFileWithTargetsExpectSuccess(string project
         /// <summary>
         /// Builds a project file from disk, and asserts if the build succeeds.
         /// </summary>
-        internal static void BuildTempProjectFileExpectFailure(string projectFileRelativePath, MockLogger logger)
+        public static void BuildTempProjectFileExpectFailure(string projectFileRelativePath, MockLogger logger)
         {
             BuildTempProjectFileWithTargets(projectFileRelativePath, null, null, logger)
                 .ShouldBeFalse("Build unexpectedly succeeded.  See test output (Attachments in Azure Pipelines) for details");
@@ -962,7 +962,7 @@ internal static void BuildTempProjectFileExpectFailure(string projectFileRelativ
         /// </summary>
         /// <param name="fileRelativePath"></param>
         /// <returns></returns>
-        internal static Project LoadProjectFileInTempProjectDirectory(string projectFileRelativePath)
+        public static Project LoadProjectFileInTempProjectDirectory(string projectFileRelativePath)
         {
             return LoadProjectFileInTempProjectDirectory(projectFileRelativePath, false /* don't touch project*/);
         }
@@ -972,7 +972,7 @@ internal static Project LoadProjectFileInTempProjectDirectory(string projectFile
         /// </summary>
         /// <param name="fileRelativePath"></param>
         /// <returns></returns>
-        internal static Project LoadProjectFileInTempProjectDirectory(string projectFileRelativePath, bool touchProject)
+        public static Project LoadProjectFileInTempProjectDirectory(string projectFileRelativePath, bool touchProject)
         {
             string projectFileFullPath = Path.Combine(TempProjectDir, projectFileRelativePath);
 
@@ -996,7 +996,7 @@ internal static Project LoadProjectFileInTempProjectDirectory(string projectFile
         /// <param name="additionalProperties">Can be null.</param>
         /// <param name="logger"></param>
         /// <returns></returns>
-        internal static bool BuildTempProjectFileWithTargets(
+        public static bool BuildTempProjectFileWithTargets(
             string projectFileRelativePath,
             string[] targets,
             IDictionary<string, string> globalProperties,
@@ -1036,7 +1036,7 @@ internal static bool BuildTempProjectFileWithTargets(
         /// Delete any files in the list that currently exist.
         /// </summary>
         /// <param name="files"></param>
-        internal static void DeleteTempFiles(string[] files)
+        public static void DeleteTempFiles(string[] files)
         {
             for (int i = 0; i < files.Length; i++)
             {
@@ -1050,7 +1050,7 @@ internal static void DeleteTempFiles(string[] files)
         /// <summary>
         /// Returns the requested number of temporary files.
         /// </summary>
-        internal static string[] GetTempFiles(int number)
+        public static string[] GetTempFiles(int number)
         {
             return GetTempFiles(number, DateTime.Now);
         }
@@ -1058,7 +1058,7 @@ internal static string[] GetTempFiles(int number)
         /// <summary>
         /// Returns the requested number of temporary files, with the requested write time.
         /// </summary>
-        internal static string[] GetTempFiles(int number, DateTime lastWriteTime)
+        public static string[] GetTempFiles(int number, DateTime lastWriteTime)
         {
             string[] files = new string[number];
 
@@ -1073,7 +1073,7 @@ internal static string[] GetTempFiles(int number, DateTime lastWriteTime)
         /// <summary>
         /// Get items of item type "i" with using the item xml fragment passed in
         /// </summary>
-        internal static IList<ProjectItem> GetItemsFromFragment(string fragment, bool allItems = false, bool ignoreCondition = false)
+        public static IList<ProjectItem> GetItemsFromFragment(string fragment, bool allItems = false, bool ignoreCondition = false)
         {
             string content = FormatProjectContentsWithItemGroupFragment(fragment);
 
@@ -1081,7 +1081,7 @@ internal static IList<ProjectItem> GetItemsFromFragment(string fragment, bool al
             return items;
         }
 
-        internal static string GetConcatenatedItemsOfType(this Project project, string itemType, string itemSeparator = ";")
+        public static string GetConcatenatedItemsOfType(this Project project, string itemType, string itemSeparator = ";")
         {
             return string.Join(itemSeparator, project.Items.Where(i => i.ItemType.Equals(itemType)).Select(i => i.EvaluatedInclude));
         }
@@ -1089,7 +1089,7 @@ internal static IList<ProjectItem> GetItemsFromFragment(string fragment, bool al
         /// <summary>
         /// Get the items of type "i" in the project provided
         /// </summary>
-        internal static IList<ProjectItem> GetItems(string content, bool allItems = false, bool ignoreCondition = false)
+        public static IList<ProjectItem> GetItems(string content, bool allItems = false, bool ignoreCondition = false)
         {
             var projectXml = ProjectRootElement.Create(XmlReader.Create(new StringReader(CleanupFileContents(content))));
             Project project = new Project(projectXml);
@@ -1101,7 +1101,7 @@ internal static IList<ProjectItem> GetItems(string content, bool allItems = fals
             return item;
         }
 
-        internal static string FormatProjectContentsWithItemGroupFragment(string fragment)
+        public static string FormatProjectContentsWithItemGroupFragment(string fragment)
         {
             return
                 $@"
@@ -1117,16 +1117,16 @@ internal static string FormatProjectContentsWithItemGroupFragment(string fragmen
     /// <summary>
     /// Various generic unit test helper methods
     /// </summary>
-    internal static partial class Helpers
+    public static partial class Helpers
     {
-        internal static string Format(this string s, params object[] formatItems)
+        public static string Format(this string s, params object[] formatItems)
         {
             ErrorUtilities.VerifyThrowArgumentNull(s, nameof(s));
 
             return string.Format(s, formatItems);
         }
 
-        internal static string GetOSPlatformAsString()
+        public static string GetOSPlatformAsString()
         {
             var currentPlatformString = string.Empty;
 
@@ -1153,7 +1153,7 @@ internal static string GetOSPlatformAsString()
         /// <summary>
         /// Returns the count of objects returned by an enumerator
         /// </summary>
-        internal static int Count(IEnumerable enumerable)
+        public static int Count(IEnumerable enumerable)
         {
             if (enumerable is ICollection c)
             {
@@ -1172,7 +1172,7 @@ internal static int Count(IEnumerable enumerable)
         /// <summary>
         /// Makes a temporary list out of an enumerable
         /// </summary>
-        internal static List<T> MakeList<T>(IEnumerable<T> enumerable)
+        public static List<T> MakeList<T>(IEnumerable<T> enumerable)
         {
             List<T> list = new List<T>();
             foreach (T item in enumerable)
@@ -1185,7 +1185,7 @@ internal static List<T> MakeList<T>(IEnumerable<T> enumerable)
         /// <summary>
         /// Gets the first element in the enumeration, or null if there are none
         /// </summary>
-        internal static T GetFirst<T>(IEnumerable<T> enumerable)
+        public static T GetFirst<T>(IEnumerable<T> enumerable)
             where T : class
         {
             T first = null;
@@ -1202,7 +1202,7 @@ internal static T GetFirst<T>(IEnumerable<T> enumerable)
         /// <summary>
         /// Gets the last element in the enumeration, or null if there are none
         /// </summary>
-        internal static T GetLast<T>(IEnumerable<T> enumerable)
+        public static T GetLast<T>(IEnumerable<T> enumerable)
             where T : class
         {
             T last = null;
@@ -1218,7 +1218,7 @@ internal static T GetLast<T>(IEnumerable<T> enumerable)
         /// <summary>
         /// Makes a temporary dictionary out of an enumerable of keyvaluepairs.
         /// </summary>
-        internal static Dictionary<string, V> MakeDictionary<V>(IEnumerable<KeyValuePair<string, V>> enumerable)
+        public static Dictionary<string, V> MakeDictionary<V>(IEnumerable<KeyValuePair<string, V>> enumerable)
         {
             Dictionary<string, V> dictionary = new Dictionary<string, V>(StringComparer.OrdinalIgnoreCase);
             foreach (KeyValuePair<string, V> item in enumerable)
@@ -1231,7 +1231,7 @@ internal static Dictionary<string, V> MakeDictionary<V>(IEnumerable<KeyValuePair
         /// <summary>
         /// Verify that the two lists are value identical
         /// </summary>
-        internal static void AssertListsValueEqual<T>(IList<T> one, IList<T> two)
+        public static void AssertListsValueEqual<T>(IList<T> one, IList<T> two)
         {
             Assert.Equal(one.Count, two.Count);
 
@@ -1244,7 +1244,7 @@ internal static void AssertListsValueEqual<T>(IList<T> one, IList<T> two)
         /// <summary>
         /// Verify that the two collections are value identical
         /// </summary>
-        internal static void AssertCollectionsValueEqual<T>(ICollection<T> one, ICollection<T> two)
+        public static void AssertCollectionsValueEqual<T>(ICollection<T> one, ICollection<T> two)
         {
             Assert.Equal(one.Count, two.Count);
 
@@ -1259,7 +1259,7 @@ internal static void AssertCollectionsValueEqual<T>(ICollection<T> one, ICollect
             }
         }
 
-        internal static void AssertDictionariesEqual<K, V>(IDictionary<K, V> x, IDictionary<K, V> y, Action<KeyValuePair<K, V>, KeyValuePair<K, V>> assertPairsEqual)
+        public static void AssertDictionariesEqual<K, V>(IDictionary<K, V> x, IDictionary<K, V> y, Action<KeyValuePair<K, V>, KeyValuePair<K, V>> assertPairsEqual)
         {
             if (x == null || y == null)
             {
@@ -1278,7 +1278,7 @@ internal static void AssertDictionariesEqual<K, V>(IDictionary<K, V> x, IDiction
             }
         }
 
-        internal static void AssertDictionariesEqual(IDictionary<string, string> x, IDictionary<string, string> y)
+        public static void AssertDictionariesEqual(IDictionary<string, string> x, IDictionary<string, string> y)
         {
             AssertDictionariesEqual(x, y,
                 (xPair, yPair) =>
@@ -1288,21 +1288,21 @@ internal static void AssertDictionariesEqual(IDictionary<string, string> x, IDic
                 });
         }
 
-        internal static void ShouldBeSameIgnoringOrder<K, V>(this IDictionary<K, V> a, IReadOnlyDictionary<K, V> b)
+        public static void ShouldBeSameIgnoringOrder<K, V>(this IDictionary<K, V> a, IReadOnlyDictionary<K, V> b)
         {
             a.ShouldBeSubsetOf(b);
             b.ShouldBeSubsetOf(a);
             a.Count.ShouldBe(b.Count);
         }
 
-        internal static void ShouldBeSameIgnoringOrder<K>(this IEnumerable<K> a, IEnumerable<K> b)
+        public static void ShouldBeSameIgnoringOrder<K>(this IEnumerable<K> a, IEnumerable<K> b)
         {
             a.ShouldBeSubsetOf(b);
             b.ShouldBeSubsetOf(a);
             a.Count().ShouldBe(b.Count());
         }
 
-        internal static void ShouldBeSetEquivalentTo<K>(this IEnumerable<K> a, IEnumerable<K> b)
+        public static void ShouldBeSetEquivalentTo<K>(this IEnumerable<K> a, IEnumerable<K> b)
         {
             a.ShouldBeSubsetOf(b);
             b.ShouldBeSubsetOf(a);
@@ -1311,7 +1311,7 @@ internal static void ShouldBeSetEquivalentTo<K>(this IEnumerable<K> a, IEnumerab
         /// <summary>
         /// Verify that the two enumerables are value identical
         /// </summary>
-        internal static void AssertEnumerationsValueEqual<T>(IEnumerable<T> one, IEnumerable<T> two)
+        public static void AssertEnumerationsValueEqual<T>(IEnumerable<T> one, IEnumerable<T> two)
         {
             List<T> listOne = new List<T>();
             List<T> listTwo = new List<T>();
@@ -1333,7 +1333,7 @@ internal static void AssertEnumerationsValueEqual<T>(IEnumerable<T> one, IEnumer
         /// Build a project with the provided content in memory.
         /// Assert that it succeeded, and return the mock logger with the output.
         /// </summary>
-        internal static MockLogger BuildProjectWithNewOMExpectSuccess(string content, Dictionary<string, string> globalProperties = null, MockLogger logger = null)
+        public static MockLogger BuildProjectWithNewOMExpectSuccess(string content, Dictionary<string, string> globalProperties = null, MockLogger logger = null)
         {
             BuildProjectWithNewOM(content, ref logger, out bool result, false, globalProperties);
             Assert.True(result);
@@ -1415,7 +1415,7 @@ public static BuildResult BuildProjectFileUsingBuildManager(
             }
         }
 
-        internal enum ExpectedBuildResult
+        public enum ExpectedBuildResult
         {
             // The build should fail with a logged error upon drive enumerationg wildcard detection and setting of environment variable.
             FailWithError,
@@ -1428,7 +1428,7 @@ internal enum ExpectedBuildResult
         /// <summary>
         /// Verify that a drive enumerating wildcard warning is logged or exception is thrown.
         /// </summary>
-        internal static void CleanContentsAndBuildTargetWithDriveEnumeratingWildcard(string content, string failOnDriveEnumerationEnvVar, string targetName, ExpectedBuildResult expectedBuildResult, ITestOutputHelper testOutput = null)
+        public static void CleanContentsAndBuildTargetWithDriveEnumeratingWildcard(string content, string failOnDriveEnumerationEnvVar, string targetName, ExpectedBuildResult expectedBuildResult, ITestOutputHelper testOutput = null)
         {
             using (var env = TestEnvironment.Create(testOutput))
             {
@@ -1444,14 +1444,14 @@ internal static void CleanContentsAndBuildTargetWithDriveEnumeratingWildcard(str
             }
         }
 
-        internal static void ResetStateForDriveEnumeratingWildcardTests(TestEnvironment env, string setEnvVar)
+        public static void ResetStateForDriveEnumeratingWildcardTests(TestEnvironment env, string setEnvVar)
         {
             ChangeWaves.ResetStateForTests();
             env.SetEnvironmentVariable("MSBUILDFAILONDRIVEENUMERATINGWILDCARD", setEnvVar);
             BuildEnvironmentHelper.ResetInstance_ForUnitTestsOnly();
         }
 
-        internal static void BuildTargetWithDriveEnumeratingWildcardUsingBuildManager(TestEnvironment env, string testProjectFile, string targetName, ExpectedBuildResult expectedBuildResult, ITestOutputHelper testOutput = null)
+        public static void BuildTargetWithDriveEnumeratingWildcardUsingBuildManager(TestEnvironment env, string testProjectFile, string targetName, ExpectedBuildResult expectedBuildResult, ITestOutputHelper testOutput = null)
         {
             try
             {
@@ -1522,7 +1522,7 @@ private static void VerifySuccessOfBuildAndTargetResults(BuildResult buildResult
         /// Build a project with the provided content in memory.
         /// Assert that it fails, and return the mock logger with the output.
         /// </summary>
-        internal static MockLogger BuildProjectWithNewOMExpectFailure(string content, bool allowTaskCrash, MockLogger logger = null)
+        public static MockLogger BuildProjectWithNewOMExpectFailure(string content, bool allowTaskCrash, MockLogger logger = null)
         {
             bool result;
             BuildProjectWithNewOM(content, ref logger, out result, allowTaskCrash);
@@ -1536,7 +1536,7 @@ internal static MockLogger BuildProjectWithNewOMExpectFailure(string content, bo
         /// </summary>
         /// <param name="newExpectedProjectContents"></param>
         /// <param name="newActualProjectContents"></param>
-        internal static void CompareProjectXml(string newExpectedProjectContents, string newActualProjectContents)
+        public static void CompareProjectXml(string newExpectedProjectContents, string newActualProjectContents)
         {
             // Replace single-quotes with double-quotes, and normalize whitespace.
             newExpectedProjectContents =
@@ -1559,7 +1559,7 @@ internal static void CompareProjectXml(string newExpectedProjectContents, string
         /// <summary>
         /// Verify that the saved project content matches the provided content
         /// </summary>
-        internal static void VerifyAssertProjectContent(string expected, Project project)
+        public static void VerifyAssertProjectContent(string expected, Project project)
         {
             VerifyAssertProjectContent(expected, project.Xml);
         }
@@ -1567,7 +1567,7 @@ internal static void VerifyAssertProjectContent(string expected, Project project
         /// <summary>
         /// Verify that the saved project content matches the provided content
         /// </summary>
-        internal static void VerifyAssertProjectContent(string expected, ProjectRootElement project, bool ignoreFirstLineOfActual = true)
+        public static void VerifyAssertProjectContent(string expected, ProjectRootElement project, bool ignoreFirstLineOfActual = true)
         {
             VerifyAssertLineByLine(expected, project.RawXml, ignoreFirstLineOfActual);
         }
@@ -1575,7 +1575,7 @@ internal static void VerifyAssertProjectContent(string expected, ProjectRootElem
         /// <summary>
         /// Verify that the expected content matches the actual content
         /// </summary>
-        internal static void VerifyAssertLineByLine(string expected, string actual)
+        public static void VerifyAssertLineByLine(string expected, string actual)
         {
             VerifyAssertLineByLine(expected, actual, false /* do not ignore first line */);
         }
@@ -1584,7 +1584,7 @@ internal static void VerifyAssertLineByLine(string expected, string actual)
         /// Write the given <see cref="projectContents"/> in a new temp directory and create the given <see cref="files"/> relative to the project
         /// </summary>
         /// <returns>the path to the temp root directory that contains the project and files</returns>
-        internal static string CreateProjectInTempDirectoryWithFiles(string projectContents, string[] files, out string createdProjectFile, out string[] createdFiles, string relativePathFromRootToProject = ".")
+        public static string CreateProjectInTempDirectoryWithFiles(string projectContents, string[] files, out string createdProjectFile, out string[] createdFiles, string relativePathFromRootToProject = ".")
         {
             var root = GetTempDirectoryWithGuid();
             Directory.CreateDirectory(root);
@@ -1609,7 +1609,7 @@ private static string GetTempDirectoryWithGuid()
         /// Creates a bunch of temporary files with the specified names and returns
         /// their full paths (so they can ultimately be cleaned up)
         /// </summary>
-        internal static string[] CreateFiles(params string[] files)
+        public static string[] CreateFiles(params string[] files)
         {
             string directory = GetTempDirectoryWithGuid();
             Directory.CreateDirectory(directory);
@@ -1621,7 +1621,7 @@ internal static string[] CreateFiles(params string[] files)
         /// Creates a bunch of temporary files in the given directory with the specified names and returns
         /// their full paths (so they can ultimately be cleaned up)
         /// </summary>
-        internal static string[] CreateFilesInDirectory(string rootDirectory, params string[] files)
+        public static string[] CreateFilesInDirectory(string rootDirectory, params string[] files)
         {
             if (files == null)
             {
@@ -1656,7 +1656,7 @@ internal static string[] CreateFilesInDirectory(string rootDirectory, params str
             return result;
         }
 
-        internal delegate TransientTestFile CreateProjectFileDelegate(
+        public delegate TransientTestFile CreateProjectFileDelegate(
             TestEnvironment env,
             int projectNumber,
             int[] projectReferences = null,
@@ -1664,7 +1664,7 @@ internal delegate TransientTestFile CreateProjectFileDelegate(
             string defaultTargets = null,
             string extraContent = null);
 
-        internal static TransientTestFile CreateProjectFile(
+        public static TransientTestFile CreateProjectFile(
             TestEnvironment env,
             int projectNumber,
             int[] projectReferences = null,
@@ -1699,6 +1699,8 @@ internal static TransientTestFile CreateProjectFile(
 
             sb.Append("</ItemGroup>");
 
+            // Ensure there is at least one valid target in the project
+            sb.Append("<Target Name='Build'/>");
 
             foreach (var defaultTarget in (defaultTargets ?? string.Empty).Split(MSBuildConstants.SemicolonChar, StringSplitOptions.RemoveEmptyEntries))
             {
@@ -1712,7 +1714,7 @@ internal static TransientTestFile CreateProjectFile(
             return env.CreateFile(projectNumber + ".proj", sb.ToString());
         }
 
-        internal static ProjectGraph CreateProjectGraph(
+        public static ProjectGraph CreateProjectGraph(
             TestEnvironment env,
             // direct dependencies that the kvp.key node has on the nodes represented by kvp.value
             IDictionary<int, int[]> dependencyEdges,
@@ -1823,7 +1825,7 @@ private static string[] SplitPathIntoFragments(string path)
         /// Deletes a bunch of files, including their containing directories
         /// if they become empty
         /// </summary>
-        internal static void DeleteFiles(params string[] paths)
+        public static void DeleteFiles(params string[] paths)
         {
             // When we delete the file directory which has the sub folder/file firstly, it will not be deleted since not empty.
             // So sort paths descendingly by file directory length, it will delete sub folder/file at first.
@@ -1848,7 +1850,7 @@ internal static void DeleteFiles(params string[] paths)
         /// Given two methods accepting no parameters and returning none, verifies they
         /// both throw, and throw the same exception type.
         /// </summary>
-        internal static void VerifyAssertThrowsSameWay(Action method1, Action method2)
+        public static void VerifyAssertThrowsSameWay(Action method1, Action method2)
         {
             Exception ex1 = null;
             Exception ex2 = null;
@@ -1886,7 +1888,7 @@ internal static void VerifyAssertThrowsSameWay(Action method1, Action method2)
         /// <summary>
         /// Verify method throws invalid operation exception.
         /// </summary>
-        internal static void VerifyAssertThrowsInvalidOperation(Action method)
+        public static void VerifyAssertThrowsInvalidOperation(Action method)
         {
             Assert.Throws<InvalidOperationException>(method);
         }
@@ -1894,7 +1896,7 @@ internal static void VerifyAssertThrowsInvalidOperation(Action method)
         /// <summary>
         /// Verify that the expected content matches the actual content
         /// </summary>
-        internal static void VerifyAssertLineByLine(string expected, string actual, bool ignoreFirstLineOfActual, ITestOutputHelper testOutput = null)
+        public static void VerifyAssertLineByLine(string expected, string actual, bool ignoreFirstLineOfActual, ITestOutputHelper testOutput = null)
         {
             Action<string> LogLine = testOutput == null ? (Action<string>)Console.WriteLine : testOutput.WriteLine;
 
@@ -1953,7 +1955,7 @@ internal static void VerifyAssertLineByLine(string expected, string actual, bool
         /// <summary>
         /// Clear the dirty flag of a ProjectRootElement by saving to a dummy writer.
         /// </summary>
-        internal static void ClearDirtyFlag(ProjectRootElement project)
+        public static void ClearDirtyFlag(ProjectRootElement project)
         {
             project.Save(new StringWriter());
             Assert.False(project.HasUnsavedChanges);
@@ -1963,7 +1965,7 @@ internal static void ClearDirtyFlag(ProjectRootElement project)
         /// Gets a command that can be used by an Exec task to sleep for the specified amount of time.
         /// </summary>
         /// <param name="timeSpan">A <see cref="TimeSpan"/> representing the amount of time to sleep.</param>
-        internal static string GetSleepCommand(TimeSpan timeSpan)
+        public static string GetSleepCommand(TimeSpan timeSpan)
         {
             return string.Format(
                 GetSleepCommandTemplate(),
@@ -1975,7 +1977,7 @@ internal static string GetSleepCommand(TimeSpan timeSpan)
         /// <summary>
         /// Gets a command template that can be used by an Exec task to sleep for the specified amount of time. The string has to be formatted with the number of seconds to sleep
         /// </summary>
-        internal static string GetSleepCommandTemplate()
+        public static string GetSleepCommandTemplate()
         {
             return
                 NativeMethodsShared.IsWindows
@@ -1997,12 +1999,12 @@ private static string[] SplitIntoLines(string content)
         /// Used for file matching tests
         /// MSBuild does not accept forward slashes on rooted paths, so those are returned unchanged
         /// </summary>
-        internal static string ToForwardSlash(string path) =>
+        public static string ToForwardSlash(string path) =>
             Path.IsPathRooted(path)
                 ? path
                 : path.ToSlash();
 
-        internal sealed class ElementLocationComparerIgnoringType : IEqualityComparer<ElementLocation>
+        public sealed class ElementLocationComparerIgnoringType : IEqualityComparer<ElementLocation>
         {
             public bool Equals(ElementLocation x, ElementLocation y)
             {
@@ -2030,7 +2032,7 @@ public int GetHashCode(ElementLocation obj)
             }
         }
 
-        internal sealed class BuildManagerSession : IDisposable
+        public sealed class BuildManagerSession : IDisposable
         {
             private readonly TestEnvironment _env;
             private readonly BuildManager _buildManager;
@@ -2118,7 +2120,7 @@ public void Dispose()
             }
         }
 
-        internal sealed class LoggingDirectoryCacheFactory : IDirectoryCacheFactory
+        public sealed class LoggingDirectoryCacheFactory : IDirectoryCacheFactory
         {
             public List<LoggingDirectoryCache> DirectoryCaches { get; } = new();
 
@@ -2130,9 +2132,9 @@ public IDirectoryCache GetDirectoryCacheForEvaluation(int evaluationId)
             }
         }
 
-        internal sealed class LoggingDirectoryCache : IDirectoryCache
+        public sealed class LoggingDirectoryCache : IDirectoryCache
         {
-            internal int EvaluationId { get; }
+            public int EvaluationId { get; }
 
             public ConcurrentDictionary<string, int> ExistenceChecks { get; } = new();
             public ConcurrentDictionary<string, int> Enumerations { get; } = new();
@@ -2177,7 +2179,7 @@ private void IncrementEnumerations(string path)
             }
         }
 
-        internal sealed class LoggingFileSystem : MSBuildFileSystemBase
+        public sealed class LoggingFileSystem : MSBuildFileSystemBase
         {
             private int _fileSystemCalls;
 
diff --git a/src/Tasks.UnitTests/StreamHelpers.cs b/src/UnitTests.Shared/StreamHelpers.cs
similarity index 59%
rename from src/Tasks.UnitTests/StreamHelpers.cs
rename to src/UnitTests.Shared/StreamHelpers.cs
index b28c8a5c319..e28bf080fd3 100644
--- a/src/Tasks.UnitTests/StreamHelpers.cs
+++ b/src/UnitTests.Shared/StreamHelpers.cs
@@ -7,15 +7,36 @@
 
 namespace Microsoft.Build.UnitTests
 {
-    internal sealed class StreamHelpers
+    public sealed class StreamHelpers
     {
+        /// <summary>
+        /// Take a string and convert it to a StreamReader.
+        /// </summary>
+        /// <param name="value"></param>
+        /// <returns></returns>
+        public static StreamReader StringToStreamReader(string value)
+        {
+            MemoryStream m = new MemoryStream();
+#if FEATURE_ENCODING_DEFAULT
+            TextWriter w = new StreamWriter(m, System.Text.Encoding.Default);
+#else
+            TextWriter w = new StreamWriter(m, System.Text.Encoding.UTF8);
+#endif
+
+            w.Write(value);
+            w.Flush();
+            m.Seek(0, SeekOrigin.Begin);
+
+            return new StreamReader(m);
+        }
+
         /*
          * Method:  StringToStream (overload)
          *
          * Take a string and convert it into a Stream.
          * Use the default encoding which means this machine's ANSI codepage.
          */
-        internal static Stream StringToStream(string value)
+        public static Stream StringToStream(string value)
         {
 #if FEATURE_ENCODING_DEFAULT
             return StringToStream(value, System.Text.Encoding.Default); // We want this to be Default which is ANSI
@@ -30,7 +51,7 @@ internal static Stream StringToStream(string value)
          * Take a string and convert it into a Stream.
          * Takes an alternate encoding type
          */
-        internal static Stream StringToStream(string value, System.Text.Encoding encoding)
+        public static Stream StringToStream(string value, System.Text.Encoding encoding)
         {
             MemoryStream m = new MemoryStream();
             TextWriter w = new StreamWriter(m, encoding); // HIGHCHAR: StringToStream helper accepts encoding from caller.
diff --git a/src/Shared/UnitTests/TestData/GlobbingTestData.cs b/src/UnitTests.Shared/TestData/GlobbingTestData.cs
similarity index 100%
rename from src/Shared/UnitTests/TestData/GlobbingTestData.cs
rename to src/UnitTests.Shared/TestData/GlobbingTestData.cs
diff --git a/src/Shared/UnitTests/TestEnvironment.cs b/src/UnitTests.Shared/TestEnvironment.cs
similarity index 100%
rename from src/Shared/UnitTests/TestEnvironment.cs
rename to src/UnitTests.Shared/TestEnvironment.cs
diff --git a/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj b/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
index 3cdbee08cb6..3f86257bcfc 100644
--- a/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
+++ b/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
@@ -19,6 +19,7 @@
     <ProjectReference Include="..\Framework\Microsoft.Build.Framework.csproj" />
     <ProjectReference Include="..\MSBuild\MSBuild.csproj" ReferenceOutputAssembly="false" OutputItemType="ReferenceCopyLocalPaths" />
     <ProjectReference Include="..\Xunit.NetCore.Extensions\Xunit.NetCore.Extensions.csproj" />
+    <ProjectReference Include="..\UnitTests.Shared\Microsoft.Build.UnitTests.Shared.csproj" />
   </ItemGroup>
 
   <ItemGroup>
@@ -26,13 +27,7 @@
     <Compile Include="..\Shared\UnitTests\ErrorUtilities_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\PrintLineDebugger_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\NativeMethodsShared_Tests.cs" />
-    <Compile Include="..\Shared\UnitTests\MockLogger.cs" />
-    <Compile Include="..\Shared\UnitTests\ObjectModelHelpers.cs" />
     <Compile Include="..\Shared\UnitTests\ResourceUtilities_Tests.cs" />
-    <Compile Include="..\Shared\UnitTests\EngineTestEnvironment.cs" />
-    <Compile Include="..\Shared\UnitTests\TestEnvironment.cs">
-      <Link>TestEnvironment.cs</Link>
-    </Compile>
     <Compile Include="..\Shared\StringExtensions.cs" />
     <Compile Include="..\Build\BackEnd\Node\NativeMethods.cs">
       <Link>NativeMethods.cs</Link>
diff --git a/src/Utilities.UnitTests/MockEngine.cs b/src/Utilities.UnitTests/MockEngine.cs
index 8b6c48c541e..0d283df9558 100644
--- a/src/Utilities.UnitTests/MockEngine.cs
+++ b/src/Utilities.UnitTests/MockEngine.cs
@@ -27,7 +27,7 @@ namespace Microsoft.Build.UnitTests
      * is somewhat of a no-no for task assemblies.
      *
      **************************************************************************/
-    internal sealed class MockEngine : IBuildEngine3
+    internal sealed class MockEngine3 : IBuildEngine3
     {
         private StringBuilder _log = new StringBuilder();
 
diff --git a/src/Utilities.UnitTests/TaskLoggingHelper_Tests.cs b/src/Utilities.UnitTests/TaskLoggingHelper_Tests.cs
index 33c2cab46f3..b96ccfd0dde 100644
--- a/src/Utilities.UnitTests/TaskLoggingHelper_Tests.cs
+++ b/src/Utilities.UnitTests/TaskLoggingHelper_Tests.cs
@@ -89,7 +89,7 @@ public void CheckMessageCode()
         [Fact]
         public void CheckMessageFromStreamParsesErrorsAndMessagesCorrectly()
         {
-            IBuildEngine2 mockEngine = new MockEngine();
+            IBuildEngine2 mockEngine = new MockEngine3();
             Task t = new MockTask();
             t.BuildEngine = mockEngine;
 
@@ -109,7 +109,7 @@ public void CheckMessageFromStreamParsesErrorsAndMessagesCorrectly()
         [Fact]
         public void LogCommandLine()
         {
-            MockEngine mockEngine = new MockEngine();
+            MockEngine3 mockEngine = new MockEngine3();
             Task t = new MockTask();
             t.BuildEngine = mockEngine;
 
@@ -124,7 +124,7 @@ public void LogCommandLine()
         [Fact]
         public void LogMessageWithUnmatchedCurly()
         {
-            MockEngine mockEngine = new MockEngine();
+            MockEngine3 mockEngine = new MockEngine3();
             Task t = new MockTask();
             t.BuildEngine = mockEngine;
 
@@ -144,7 +144,7 @@ public void LogMessageWithUnmatchedCurly()
         [Fact]
         public void LogFromResources()
         {
-            MockEngine mockEngine = new MockEngine();
+            MockEngine3 mockEngine = new MockEngine3();
             Task t = new MockTask();
             t.BuildEngine = mockEngine;
 
@@ -183,7 +183,7 @@ nor is this
                 // This closes the reader
                 File.WriteAllText(file, contents);
 
-                MockEngine mockEngine = new MockEngine();
+                MockEngine3 mockEngine = new MockEngine3();
                 Task t = new MockTask();
                 t.BuildEngine = mockEngine;
                 t.Log.LogMessagesFromFile(file, MessageImportance.High);
@@ -192,7 +192,7 @@ nor is this
                 mockEngine.Warnings.ShouldBe(1);
                 mockEngine.Messages.ShouldBe(3);
 
-                mockEngine = new MockEngine();
+                mockEngine = new MockEngine3();
                 t = new MockTask();
                 t.BuildEngine = mockEngine;
                 t.Log.LogMessagesFromFile(file);
@@ -238,7 +238,7 @@ public void TestLogFromException()
             string message = "exception message";
             string stackTrace = "TaskLoggingHelperTests.TestLogFromException";
 
-            MockEngine engine = new MockEngine();
+            MockEngine3 engine = new MockEngine3();
             MockTask task = new MockTask();
             task.BuildEngine = engine;
 
@@ -297,7 +297,7 @@ public void TestLogFromExceptionWithAggregateException()
                 new InvalidOperationException("The operation was invalid"),
                 new IOException("An I/O error occurred"));
 
-            MockEngine engine = new MockEngine();
+            MockEngine3 engine = new MockEngine3();
             MockTask task = new MockTask
             {
                 BuildEngine = engine
diff --git a/src/Utilities.UnitTests/ToolLocationHelper_Tests.cs b/src/Utilities.UnitTests/ToolLocationHelper_Tests.cs
index bb98a4a196f..e8ae9db9ba2 100644
--- a/src/Utilities.UnitTests/ToolLocationHelper_Tests.cs
+++ b/src/Utilities.UnitTests/ToolLocationHelper_Tests.cs
@@ -2683,17 +2683,8 @@ private void CheckGetPathToReferenceAssemblies(TestEnvironment env, string custo
             string asmPath = CreateNewFrameworkAndGetAssembliesPath(env, frameworkName, frameworkVersionWithV, customFrameworkDir);
 
             var stdLibPaths = getPathToReferenceAssemblies(frameworkName, frameworkVersion, frameworkProfile, customFrameworkDir, fallbackSearchPaths);
-            if (NativeMethodsShared.IsMono)
-            {
-                stdLibPaths.Count.ShouldBe(2);
-                stdLibPaths[0].ShouldBe(Path.Combine(customFrameworkDir, frameworkName, frameworkVersionWithV) + Path.DirectorySeparatorChar, stdLibPaths[0]);
-                stdLibPaths[1].ShouldBe(asmPath + Path.DirectorySeparatorChar);
-            }
-            else
-            {
-                stdLibPaths.Count.ShouldBe(1);
-                stdLibPaths[0].ShouldBe(Path.Combine(customFrameworkDir, frameworkName, frameworkVersionWithV) + Path.DirectorySeparatorChar, stdLibPaths[0]);
-            }
+            stdLibPaths.Count.ShouldBe(1);
+            stdLibPaths[0].ShouldBe(Path.Combine(customFrameworkDir, frameworkName, frameworkVersionWithV) + Path.DirectorySeparatorChar, stdLibPaths[0]);
         }
 
         [Fact]
@@ -2726,22 +2717,11 @@ public void GetPathToReferenceAssembliesWithNullTargetFrameworkFallbackSearchPat
 
         private static string CreateNewFrameworkAndGetAssembliesPath(TestEnvironment env, string frameworkName, string frameworkVersion, string rootDir)
         {
-            string frameworkListXml;
-            if (NativeMethodsShared.IsMono)
-            {
-                // Mono uses an extra attribute to point to the location of the corresponding
-                // assemblies
-                frameworkListXml = @"<?xml version=""1.0"" encoding=""utf-8""?>
-                    <FileList  Name=""{0}"" TargetFrameworkDirectory=""..\assemblies"" />";
-            }
-            else
-            {
-                frameworkListXml = @"<?xml version=""1.0"" encoding=""utf-8""?>
-                    <FileList  Name=""{0}""/>";
-            }
+            string frameworkListXml = @"<?xml version=""1.0"" encoding=""utf-8""?>
+                <FileList  Name=""{0}""/>";
 
             string redistPath = Path.Combine(rootDir, frameworkName, frameworkVersion, "RedistList");
-            string asmPath = Path.Combine(rootDir, frameworkName, frameworkVersion, NativeMethodsShared.IsMono ? "assemblies" : string.Empty);
+            string asmPath = Path.Combine(rootDir, frameworkName, frameworkVersion);
 
             env.CreateFolder(redistPath);
             env.CreateFolder(asmPath);
diff --git a/src/Utilities.UnitTests/ToolTask_Tests.cs b/src/Utilities.UnitTests/ToolTask_Tests.cs
index 1c359273b56..9e12dd8430b 100644
--- a/src/Utilities.UnitTests/ToolTask_Tests.cs
+++ b/src/Utilities.UnitTests/ToolTask_Tests.cs
@@ -124,7 +124,7 @@ public void Regress_Mutation_UserSuppliedToolPathIsLogged()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 t.ToolPath = NativeMethodsShared.IsWindows ? @"C:\MyAlternatePath" : "/MyAlternatePath";
 
@@ -140,7 +140,7 @@ public void Regress_Mutation_MissingExecutableIsLogged()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 t.ToolPath = NativeMethodsShared.IsWindows ? @"C:\MyAlternatePath" : "/MyAlternatePath";
 
@@ -156,7 +156,7 @@ public void Regress_Mutation_WarnIfCommandLineTooLong()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
 
                 // "cmd.exe" croaks big-time when given a very long command-line.  It pops up a message box on
@@ -182,7 +182,7 @@ public void HandleExecutionErrorsWhenToolDoesntLogError()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 t.MockCommandLineCommands = NativeMethodsShared.IsWindows ? "/C garbagegarbagegarbagegarbage.exe" : "-c garbagegarbagegarbagegarbage.exe";
 
@@ -207,7 +207,7 @@ public void HandleExecutionErrorsWhenToolLogsError()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 t.MockCommandLineCommands = NativeMethodsShared.IsWindows
                                                 ? "/C echo Main.cs(17,20): error CS0168: The variable 'foo' is declared but never used"
@@ -233,7 +233,7 @@ public void HandleExecutionErrorsWhenToolLogsError()
         public void DoNotFormatTaskCommandOrMessage()
         {
             MyTool t = new MyTool();
-            MockEngine engine = new MockEngine();
+            MockEngine3 engine = new MockEngine3();
             t.BuildEngine = engine;
             // Unmatched curly would crash if they did
             t.MockCommandLineCommands = NativeMethodsShared.IsWindows
@@ -252,7 +252,7 @@ public void DoNotErrorWhenTextSentToStandardError()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 t.MockCommandLineCommands = NativeMethodsShared.IsWindows
                                                 ? "/C Echo 'Who made you king anyways' 1>&2"
@@ -275,7 +275,7 @@ public void DoNotErrorWhenTextSentToStandardOutput()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 t.LogStandardErrorAsError = true;
                 t.MockCommandLineCommands = NativeMethodsShared.IsWindows
@@ -299,7 +299,7 @@ public void ErrorWhenTextSentToStandardError()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 t.LogStandardErrorAsError = true;
                 t.MockCommandLineCommands = NativeMethodsShared.IsWindows
@@ -324,7 +324,7 @@ public void ToolExeWinsOverToolName()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 t.FullToolName = NativeMethodsShared.IsWindows ? "c:\\baz\\foo.exe" : "/baz/foo.exe";
 
@@ -345,7 +345,7 @@ public void ToolExeIsFoundOnToolPath()
             string copyName = NativeMethodsShared.IsWindows ? "xcopy.exe" : "cp";
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 t.FullToolName = shellName;
                 string systemPath = NativeMethodsShared.IsUnixLike ? "/bin" : Environment.GetFolderPath(Environment.SpecialFolder.System);
@@ -372,7 +372,7 @@ public void TaskNotFoundOnPath()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 t.FullToolName = "doesnotexist.exe";
 
@@ -392,7 +392,7 @@ public void TaskFoundOnPath()
         {
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 string toolName = NativeMethodsShared.IsWindows ? "cmd.exe" : "sh";
                 t.FullToolName = toolName;
@@ -418,7 +418,7 @@ public void OverrideStdOutImportanceToLow()
 
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 engine.MinimumMessageImportance = MessageImportance.High;
 
                 t.BuildEngine = engine;
@@ -446,7 +446,7 @@ public void OverrideStdOutImportanceToHigh()
 
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 engine.MinimumMessageImportance = MessageImportance.High;
 
                 t.BuildEngine = engine;
@@ -480,7 +480,7 @@ public void ToolTaskCanChangeCanonicalErrorFormat()
 
             using (MyTool t = new MyTool())
             {
-                MockEngine engine = new MockEngine();
+                MockEngine3 engine = new MockEngine3();
                 t.BuildEngine = engine;
                 // The command we're giving is the command to spew the contents of the temp
                 // file we created above.
@@ -510,7 +510,7 @@ public void ToolTaskCanChangeCanonicalErrorFormat()
         public void EnvironmentVariablesToToolTask()
         {
             MyTool task = new MyTool();
-            task.BuildEngine = new MockEngine();
+            task.BuildEngine = new MockEngine3();
             string userVarName = NativeMethodsShared.IsWindows ? "username" : "user";
             task.EnvironmentVariables = new[] { "a=b", "c=d", userVarName + "=x" /* built-in */, "path=" /* blank value */};
             bool result = task.Execute();
@@ -541,7 +541,7 @@ public void EnvironmentVariablesToToolTask()
         public void EnvironmentVariablesToToolTaskEqualsSign()
         {
             MyTool task = new MyTool();
-            task.BuildEngine = new MockEngine();
+            task.BuildEngine = new MockEngine3();
             task.EnvironmentVariables = new[] { "a=b=c" };
             bool result = task.Execute();
 
@@ -556,7 +556,7 @@ public void EnvironmentVariablesToToolTaskEqualsSign()
         public void EnvironmentVariablesToToolTaskInvalid1()
         {
             MyTool task = new MyTool();
-            task.BuildEngine = new MockEngine();
+            task.BuildEngine = new MockEngine3();
             task.EnvironmentVariables = new[] { "x" };
             bool result = task.Execute();
 
@@ -571,7 +571,7 @@ public void EnvironmentVariablesToToolTaskInvalid1()
         public void EnvironmentVariablesToToolTaskInvalid2()
         {
             MyTool task = new MyTool();
-            task.BuildEngine = new MockEngine();
+            task.BuildEngine = new MockEngine3();
             task.EnvironmentVariables = new[] { "" };
             bool result = task.Execute();
 
@@ -586,7 +586,7 @@ public void EnvironmentVariablesToToolTaskInvalid2()
         public void EnvironmentVariablesToToolTaskInvalid3()
         {
             MyTool task = new MyTool();
-            task.BuildEngine = new MockEngine();
+            task.BuildEngine = new MockEngine3();
             task.EnvironmentVariables = new[] { "=a;b=c" };
             bool result = task.Execute();
 
@@ -601,7 +601,7 @@ public void EnvironmentVariablesToToolTaskInvalid3()
         public void EnvironmentVariablesToToolTaskNotSet()
         {
             MyTool task = new MyTool();
-            task.BuildEngine = new MockEngine();
+            task.BuildEngine = new MockEngine3();
             task.EnvironmentVariables = null;
             bool result = task.Execute();
 
@@ -633,7 +633,7 @@ public void ToolPathIsFoundWhenDirectoryExistsWithNameOfTool()
 
                     MyTool task = new MyTool
                     {
-                        BuildEngine = new MockEngine(),
+                        BuildEngine = new MockEngine3(),
                         FullToolName = toolName,
                     };
                     bool result = task.Execute();
@@ -683,7 +683,7 @@ public void GetProcessStartInfoCanOverrideEnvironmentVariables()
             MyTool task = new MyTool();
             task.DoProcessStartInfoMutation = (p) => p.Environment.Remove("a");
 
-            task.BuildEngine = new MockEngine();
+            task.BuildEngine = new MockEngine3();
             task.EnvironmentVariables = new[] { "a=b" };
             bool result = task.Execute();
 
@@ -695,7 +695,7 @@ public void GetProcessStartInfoCanOverrideEnvironmentVariables()
         public void VisualBasicLikeEscapedQuotesInCommandAreNotMadeForwardSlashes()
         {
             MyTool t = new MyTool();
-            MockEngine engine = new MockEngine();
+            MockEngine3 engine = new MockEngine3();
             t.BuildEngine = engine;
             t.MockCommandLineCommands = NativeMethodsShared.IsWindows
                                             ? "/C echo \"hello \\\"world\\\"\""
@@ -779,7 +779,7 @@ public void ToolTaskCanUseUnicode(string environmentVariableName, string environ
 
             var output = testEnvironment.ExpectFile();
 
-            MockEngine engine = new MockEngine();
+            MockEngine3 engine = new MockEngine3();
 
             var task = new ToolTaskThatNeedsUnicode
             {
@@ -846,7 +846,7 @@ public void SetsTerminationTimeoutCorrectly(int timeout, bool isInvalidValid)
             // Task under test:
             var task = new ToolTaskSetsTerminationTimeout
             {
-                BuildEngine = new MockEngine()
+                BuildEngine = new MockEngine3()
             };
 
             task.TerminationTimeout = timeout;
@@ -874,7 +874,7 @@ public void ToolTaskThatTimeoutAndRetry(int repeats, int initialDelay, int follo
         {
             using var env = TestEnvironment.Create(_output);
 
-            MockEngine engine = new();
+            MockEngine3 engine = new();
 
             // Task under test:
             var task = new ToolTaskThatSleeps
diff --git a/src/Utilities.UnitTests/TrackedDependencies/FileTrackerTests.cs b/src/Utilities.UnitTests/TrackedDependencies/FileTrackerTests.cs
index d9db9e78b7b..3d09fe07dd1 100644
--- a/src/Utilities.UnitTests/TrackedDependencies/FileTrackerTests.cs
+++ b/src/Utilities.UnitTests/TrackedDependencies/FileTrackerTests.cs
@@ -318,7 +318,7 @@ static void Main(string[] args)
                 codeFile = FileUtilities.GetTemporaryFileName();
                 File.WriteAllText(codeFile, codeContent);
                 Csc csc = new Csc();
-                csc.BuildEngine = new MockEngine();
+                csc.BuildEngine = new MockEngine3();
                 csc.Sources = new ITaskItem[] { new TaskItem(codeFile) };
                 csc.OutputAssembly = new TaskItem(outputFile);
                 csc.Execute();
@@ -423,7 +423,7 @@ public void FileTrackerFindStrInIncludeDuplicates()
                 string codeContent = @"using System.IO; class X { static void Main() { File.ReadAllText(@""" + inputPath + @"""); File.ReadAllText(@""" + inputPath + @"""); }}";
                 File.WriteAllText(codeFile, codeContent);
                 Csc csc = new Csc();
-                csc.BuildEngine = new MockEngine();
+                csc.BuildEngine = new MockEngine3();
                 csc.Sources = new[] { new TaskItem(codeFile) };
                 csc.OutputAssembly = new TaskItem(outputFile);
                 csc.Execute();
@@ -484,7 +484,7 @@ static void Main()
 
                 File.WriteAllText(codeFile, codeContent);
                 Csc csc = new Csc();
-                csc.BuildEngine = new MockEngine();
+                csc.BuildEngine = new MockEngine3();
                 csc.Sources = new[] { new TaskItem(codeFile) };
                 csc.OutputAssembly = new TaskItem(outputFile);
                 bool success = csc.Execute();
@@ -2272,7 +2272,7 @@ static void Main(string[] args)
                 string codeFile = Path.Combine(testDir, "Program.cs");
                 File.WriteAllText(codeFile, codeContent);
                 Csc csc = new Csc();
-                csc.BuildEngine = new MockEngine();
+                csc.BuildEngine = new MockEngine3();
                 csc.Sources = new ITaskItem[] { new TaskItem(codeFile) };
                 csc.OutputAssembly = new TaskItem(outputFile);
                 csc.Platform = "x86";
diff --git a/src/Utilities/ToolLocationHelper.cs b/src/Utilities/ToolLocationHelper.cs
index 61d80f07220..a4f1f9295aa 100644
--- a/src/Utilities/ToolLocationHelper.cs
+++ b/src/Utilities/ToolLocationHelper.cs
@@ -2346,15 +2346,6 @@ private static IList<string> GetPathAndChainReferenceAssemblyLocations(string ta
                                 break;
                             }
                             referencePaths.Add(path);
-                            if (NativeMethodsShared.IsMono)
-                            {
-                                // On Mono, some directories contain Facades subdirectory with valid assemblies
-                                var facades = Path.Combine(path, "Facades");
-                                if (FileSystems.Default.DirectoryExists(Path.Combine(path, "Facades")))
-                                {
-                                    referencePaths.Add(facades);
-                                }
-                            }
                         }
                         else if (path == null)
                         {
@@ -3121,15 +3112,13 @@ internal static string ChainReferenceAssemblyPath(string targetFrameworkDirector
             // If the redist list does not exist then the entire chain is incorrect.
             if (!FileSystems.Default.FileExists(redistFilePath))
             {
-                // Under MONO a directory may chain to one that has no redist list
-                var chainReference = NativeMethodsShared.IsMono ? string.Empty : null;
                 lock (s_locker)
                 {
-                    s_chainedReferenceAssemblyPath[path] = chainReference;
-                    s_cachedTargetFrameworkDisplayNames[path] = chainReference;
+                    s_chainedReferenceAssemblyPath[path] = null;
+                    s_cachedTargetFrameworkDisplayNames[path] = null;
                 }
 
-                return chainReference;
+                return null;
             }
 
             string includeFramework = null;
@@ -3163,13 +3152,6 @@ internal static string ChainReferenceAssemblyPath(string targetFrameworkDirector
                                         displayName = reader.Value;
                                         continue;
                                     }
-
-                                    // Mono may redirect this to another place
-                                    if (NativeMethodsShared.IsMono && string.Equals(reader.Name, "TargetFrameworkDirectory", StringComparison.OrdinalIgnoreCase))
-                                    {
-                                        // The new folder is relative to the place where the FrameworkList.
-                                        redirectPath = Path.GetFullPath(Path.Combine(redistListFolder, FileUtilities.FixFilePath(reader.Value)));
-                                    }
                                 }
                                 while (reader.MoveToNextAttribute());
                                 reader.MoveToElement();
diff --git a/src/Utilities/ToolTask.cs b/src/Utilities/ToolTask.cs
index 3a8ff43f237..a4be487c4ee 100644
--- a/src/Utilities/ToolTask.cs
+++ b/src/Utilities/ToolTask.cs
@@ -658,6 +658,19 @@ protected virtual ProcessStartInfo GetProcessStartInfo(
             return startInfo;
         }
 
+        /// <summary>
+        /// We expect tasks to override this method if they need information about the tool process or its process events during task execution.
+        /// Implementation should make sure that the task is started in this method.
+        /// Starts the process during task execution. 
+        /// </summary>
+        /// <param name="proc">Fully populated <see cref="Process"/> instance representing the tool process to be started.</param>
+        /// <returns>A started process. This could be <paramref name="proc"/> or another <see cref="Process"/> instance.</returns>
+        protected virtual Process StartToolProcess(Process proc)
+        {
+            proc.Start();
+            return proc;
+        }
+
         /// <summary>
         /// Writes out a temporary response file and shell-executes the tool requested.  Enables concurrent
         /// logging of the output of the tool.
@@ -714,7 +727,7 @@ protected virtual int ExecuteTool(
                 ExitCode = -1;
 
                 // Start the process
-                proc.Start();
+                proc = StartToolProcess(proc);
 
                 // Close the input stream. This is done to prevent commands from
                 // blocking the build waiting for input from the user.
