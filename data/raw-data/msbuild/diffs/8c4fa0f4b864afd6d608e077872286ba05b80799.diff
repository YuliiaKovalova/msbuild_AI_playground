diff --git a/eng/BootStrapMsBuild.targets b/eng/BootStrapMsBuild.targets
index 6a2ef49e48e..d4330ba658d 100644
--- a/eng/BootStrapMsBuild.targets
+++ b/eng/BootStrapMsBuild.targets
@@ -8,7 +8,7 @@
 
   <PropertyGroup>
     <BootstrapDependsOn Condition="$(TargetFramework.StartsWith('net4'))">BootstrapFull</BootstrapDependsOn>
-    <BootstrapDependsOn Condition="!$(TargetFramework.StartsWith('net4'))">BootstrapNetCore;BootstrapFull</BootstrapDependsOn>
+    <BootstrapDependsOn Condition="!$(TargetFramework.StartsWith('net4'))">BootstrapNetCore</BootstrapDependsOn>
 
     <!-- Needed to ensure that RuntimeTargetsCopyLocalItems is populated for full framework -->
     <DisableRuntimeTargets>false</DisableRuntimeTargets>
diff --git a/src/Directory.BeforeCommon.targets b/src/Directory.BeforeCommon.targets
index 10f4321b686..679662e58d6 100644
--- a/src/Directory.BeforeCommon.targets
+++ b/src/Directory.BeforeCommon.targets
@@ -102,6 +102,10 @@
     <DocumentationFile/>
   </PropertyGroup>
 
+  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Full'">
+    <DefineConstants>$(DefineConstants);BOOTSTRAP_FULL_IS_AVAILABLE_FOR_RUNTIME</DefineConstants>
+  </PropertyGroup>
+
   <PropertyGroup>
     <!--
       For some reason at the moment our $(DocumentationFile) property does not contain the TFM.  I can't figure out why...
diff --git a/src/Tasks.UnitTests/ResolveAssemblyReference_CustomCultureTests.cs b/src/Tasks.UnitTests/ResolveAssemblyReference_CustomCultureTests.cs
index a25d7afc52f..e816f8cc44c 100644
--- a/src/Tasks.UnitTests/ResolveAssemblyReference_CustomCultureTests.cs
+++ b/src/Tasks.UnitTests/ResolveAssemblyReference_CustomCultureTests.cs
@@ -34,13 +34,8 @@ public void E2EScenarioTests(
             bool isYueCultureExpected = false,
             bool isEuyCultureExpected = false)
         {
-            // Skip test if running in .NET Core SDK (relevant for VS .NetFramework only)
-            var extensionsPath = Environment.GetEnvironmentVariable("MSBuildExtensionsPath");
-            if (!string.IsNullOrEmpty(extensionsPath) && extensionsPath.Contains(Path.Combine("core", "sdk")))
-            {
-                return;
-            }
-
+ // Skip test if running in .NET Core SDK (relevant for VS .NetFramework only)
+#if BOOTSTRAP_FULL_IS_AVAILABLE_FOR_RUNTIME
             using (TestEnvironment env = TestEnvironment.Create())
             {
                 env.SetEnvironmentVariable("MSBUILDENABLECUSTOMCULTURES", enableCustomCulture ? "1" : "");
@@ -59,6 +54,7 @@ public void E2EScenarioTests(
                 VerifyCustomCulture(enableCustomCulture, isYueCultureExpected, "yue", projBOutputPath);
                 VerifyCustomCulture(enableCustomCulture, isEuyCultureExpected, "euy", projBOutputPath);
             }
+#endif
         }
 
         private void SetupProjectB(TestEnvironment env, string testAssetsPath, string solutionPath, string projBOutputPath, string customCultureExclusions)
