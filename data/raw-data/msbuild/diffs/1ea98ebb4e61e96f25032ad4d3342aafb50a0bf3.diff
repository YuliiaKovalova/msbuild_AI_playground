diff --git a/src/Build/Logging/FancyLogger/ANSIBuilder.cs b/src/Build/Logging/FancyLogger/ANSIBuilder.cs
index a7f271c23db..a94c154ec50 100644
--- a/src/Build/Logging/FancyLogger/ANSIBuilder.cs
+++ b/src/Build/Logging/FancyLogger/ANSIBuilder.cs
@@ -18,15 +18,20 @@ public static string ANSIRemove(string text)
         public static int ANSIBreakpoint(string text, int position)
         {
             if (position >= text.Length) return text.Length;
-            // Get substring
-            string substring = text.Substring(0, position);
-            string substringWithoutANSI = ANSIRemove(substring);
-            // Get length difference
-            int difference = substring.Length - substringWithoutANSI.Length;
-            int newPosition = position + difference;
-            // If new position is not inside the string
-            if (newPosition > text.Length) return text.Length;
-            return newPosition;
+            // Create new array of positions
+            int[] nonAnsiIndices = new int[text.Length];
+            for (int i = 0; i < text.Length; i++)
+            {
+                // TODO: Figure how to do with spans for greater efficiency
+                nonAnsiIndices[i] = ANSIRemove(text.Substring(0, i)).Length - 1;
+            }
+            // Breakpoint (default at last)
+            int breakpoint = text.Length;
+            for (int i = 0; i < text.Length; i++)
+            {
+                if (nonAnsiIndices[i] == position - 1) breakpoint = i;
+            }
+            return breakpoint;
         }
 
         public static List<string> ANSIWrap(string text, int position)
@@ -88,7 +93,7 @@ public static string SpaceBetween(string leftText, string rightText, int width)
                 if (leftNoFormatString.Length + rightNoFormatString.Length > Console.BufferWidth) return leftText + rightText;
                 int space = Console.BufferWidth - (leftNoFormatString.Length + rightNoFormatString.Length);
                 result += leftText;
-                result += new string(' ', space);
+                result += new string(' ', space - 1);
                 result += rightText;
                 return result;
             }
diff --git a/src/Build/Logging/FancyLogger/FancyLogger.cs b/src/Build/Logging/FancyLogger/FancyLogger.cs
index 366b60cda21..bca12100227 100644
--- a/src/Build/Logging/FancyLogger/FancyLogger.cs
+++ b/src/Build/Logging/FancyLogger/FancyLogger.cs
@@ -28,12 +28,12 @@ public FancyLogger()
         public void Initialize(IEventSource eventSource)
         {
             // Register for different events
-            // - Started
+            // Started
             eventSource.BuildStarted += new BuildStartedEventHandler(eventSource_BuildStarted);
             eventSource.ProjectStarted += new ProjectStartedEventHandler(eventSource_ProjectStarted);
             eventSource.TargetStarted += new TargetStartedEventHandler(eventSource_TargetStarted);
             eventSource.TaskStarted += new TaskStartedEventHandler(eventSource_TaskStarted);
-            // - Finished
+            // Finished
             eventSource.BuildFinished += new BuildFinishedEventHandler(eventSource_BuildFinished);
             eventSource.ProjectFinished += new ProjectFinishedEventHandler(eventSource_ProjectFinished);
             eventSource.TargetFinished += new TargetFinishedEventHandler(eventSource_TargetFinished);
@@ -47,7 +47,8 @@ public void Initialize(IEventSource eventSource)
             // Initialize FancyLoggerBuffer
             FancyLoggerBuffer.Initialize();
             // TODO: Fix. First line does not appear at top. Leaving empty line for now
-            FancyLoggerBuffer.WriteNewLine("");
+            FancyLoggerBuffer.WriteNewLine(string.Empty);
+            // FancyLoggerBuffer.WriteNewLine("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.");
             FancyLoggerBuffer.Render();
         }
 
