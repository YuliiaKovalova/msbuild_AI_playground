diff --git a/src/MSBuild/MSBuild.csproj b/src/MSBuild/MSBuild.csproj
index 1c3842942f3..a25d19298d8 100644
--- a/src/MSBuild/MSBuild.csproj
+++ b/src/MSBuild/MSBuild.csproj
@@ -336,8 +336,8 @@
     </Task>
   </UsingTask>
 
-  <Target Name="ValidateMSBuildPackageDependencyVersions" BeforeTargets="AfterBuild" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'" >
-    <ValidateMSBuildPackageDependencyVersions AppConfig="@(AppConfigWithTargetPath)" AssemblyPath="$(OutputPath)%(_TargetFrameworks.Identity)" />
+  <Target Name="ValidateMSBuildPackageDependencyVersions" AfterTargets="PrepareForBuild" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'" >
+    <ValidateMSBuildPackageDependencyVersions AppConfig="@(AppConfigWithTargetPath)" AssemblyPath="$(OutputPath)" />
   </Target>
 
 </Project>
diff --git a/src/MSBuild/ValidateMSBuildPackageDependencyVersions.cs b/src/MSBuild/ValidateMSBuildPackageDependencyVersions.cs
index 34f96b18b97..cdab495c6d0 100644
--- a/src/MSBuild/ValidateMSBuildPackageDependencyVersions.cs
+++ b/src/MSBuild/ValidateMSBuildPackageDependencyVersions.cs
@@ -38,8 +38,10 @@ public override bool Execute()
                     string assemblyVersion = AssemblyName.GetAssemblyName(path).Version.ToString();
                     if (!version.Equals(assemblyVersion))
                     {
-                        // It is unusual to want to redirect down, but in this case it's ok: 4.0.3.0 forwards to 4.0.0.0 in the GAC, so this just removes the need to redistribute a file
-                        // and makes that resolution faster. Still verify that the versions are exactly as in this comment, as that may change.
+                        // Ensure that the binding redirect is to the GAC version, but
+                        // we still ship the version we explicitly reference to let
+                        // API consumers bind to it at runtime.
+                        // See https://github.com/dotnet/msbuild/issues/6976.
                         if (String.Equals(name, "System.ValueTuple", StringComparison.OrdinalIgnoreCase) && String.Equals(version, "4.0.0.0") && String.Equals(assemblyVersion, "4.0.3.0"))
                         {
                             foundSystemValueTuple = true;
