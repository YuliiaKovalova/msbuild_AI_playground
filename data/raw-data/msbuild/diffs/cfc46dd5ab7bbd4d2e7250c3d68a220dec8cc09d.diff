diff --git a/documentation/Contributions/MSBuild-overview.md b/documentation/Contributions/MSBuild-overview.md
index 7be80a3cd0c..73e6079d632 100644
--- a/documentation/Contributions/MSBuild-overview.md
+++ b/documentation/Contributions/MSBuild-overview.md
@@ -8,7 +8,7 @@ MSBuild implements an actual language (... MSBuildian?). For syntax it uses XML.
 
 MSBuild has two data structures:
 - [properties](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-properties): single valued, scalars. Like `string foo` in C#
-- [items](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-items): multi valued, vectors. Like `string[] foo` in C#.
+- [items](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-items): multi valued, arrays. Like `string[] foo` in C#. Except that each array has a name called an `item-type`, and each element may not only have a value, but also have associated key-value pairs known as metadata.
 
 Typewise, everything is a string in MSBuild.
 
@@ -28,7 +28,7 @@ Evaluation does not execute the targets in a project. It only interprets and sto
 
 The second phase of msbuild interpretation is target execution. This happens in the [TargetBuilder](https://github.com/dotnet/msbuild/blob/bd00d6cba24d41efd6f54699c3fdbefb9f5034a1/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs#L100). The `TargetBuilder` uses a stack to execute targets. The initial state is the state contained inside a given `ProjectInstance`. So targets execute in a stack based manner and mutate the global state inside a `ProjectInstance`.
 
-What's the difference between `Project` and `ProjectInstance`? Sad story, but they are duplicates. `Project` objects are specialized in introspecting / analyzing MSBuild code and also in providing high level project editing operations. `ProjectInstance` objects are  read only. So the objects in the `Project` tree point back to their corresponding `ProjectRootElement` AST elements. The objects in the `ProjectInstance` tree do not point back to the `ProjectRootElement` elements (so they have a much smaller memory footprint). For example, the `Project` tree is used by Visual Studio to analyze msbuild projects, and to reflect UI changes all the way down to the XML elements. The `TargetBuilder` only works with the lighter weight `ProjectInstance` tree, since it only needs to read state.
+What's the difference between `Project` and `ProjectInstance`? While both represent evaluated projects, they are intended for different use cases. `Project` objects are specialized in introspecting / analyzing MSBuild code and also in providing high level project editing operations. `ProjectInstance` objects are  read only. So the objects in the `Project` tree point back to their corresponding `ProjectRootElement` AST elements. The objects in the `ProjectInstance` tree do not point back to the `ProjectRootElement` elements (so they have a much smaller memory footprint). For example, the `Project` tree is used by Visual Studio to analyze msbuild projects, and to reflect UI changes all the way down to the XML elements. The `TargetBuilder` only works with the lighter weight `ProjectInstance` tree, since it only needs to read state.
 
 # MSBuild APIs and components
 - `Project` / `ProjectInstance`: entrypoint APIs for working with MSBuild evaluations.
diff --git a/documentation/wiki/Contributions/README.md b/documentation/wiki/Contributions/README.md
new file mode 100644
index 00000000000..08307044761
--- /dev/null
+++ b/documentation/wiki/Contributions/README.md
@@ -0,0 +1,5 @@
+# Contributed documentation
+
+This directory has documentation that was contributed by developers or users that hasn't been fully vetted for accuracy and correctness.
+
+Explanations in this folder may be slightly or subtly wrong, but can still be very informative for developing an understanding of MSBuild or a specific problem.
diff --git a/documentation/wiki/Home.md b/documentation/wiki/Home.md
new file mode 100644
index 00000000000..045b52e4338
--- /dev/null
+++ b/documentation/wiki/Home.md
@@ -0,0 +1,24 @@
+# Getting Started
+
+ * [What is MSBuild?](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild)
+ * Building Testing and Debugging
+   * [Full Framework MSBuild](Building-Testing-and-Debugging-on-Full-Framework-MSBuild.md)
+   * [.Net Core MSBuild](Building-Testing-and-Debugging-on-.Net-Core-MSBuild.md)
+   * [Mono MSBuild](Building-Testing-and-Debugging-on-Mono-MSBuild.md)
+
+# Resources
+ * [MSBuild Resources](MSBuild-Resources.md)
+ * [Contributed documentation](Contributions/README.md)
+ * [MSBuild Tips & Tricks](MSBuild-Tips-&-Tricks.md)
+ * [Binary log](Binary-Log.md)
+ * [Providing Binary Logs for investigation](Providing-Binary-Logs.md)
+ * [Contributing Code](Contributing-Code.md)
+ * [Target Maps](Target-Maps.md)
+ * Tasks
+   * [ResolveAssemblyReference](ResolveAssemblyReference.md)
+ * Problems?
+   * [Rebuilding when nothing changed](Rebuilding-when-nothing-changed.md)
+   * [Something's wrong in my build](Something's-wrong-in-my-build.md)
+   * [Microsoft.Build.Framework](Microsoft.Build.Framework.md)
+     *  Some gotchas around the Microsoft.Build.Framework project/assembly.
+
