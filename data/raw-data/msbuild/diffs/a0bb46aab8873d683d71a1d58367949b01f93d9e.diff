diff --git a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
index 30c76c3b851..798daec3ad3 100644
--- a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
+++ b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
@@ -16,6 +16,8 @@
 
   <ItemGroup>
     <PackageReference Include="Shouldly" />
+    <PackageReference Include="Verify.Xunit" />
+
     <ProjectReference Include="..\Build\Microsoft.Build.csproj" />
     <ProjectReference Include="..\Framework\Microsoft.Build.Framework.csproj" />
     <ProjectReference Include="..\MSBuild\MSBuild.csproj" />
diff --git a/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs b/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
index 64ac383d4c2..967dfe65a42 100644
--- a/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
+++ b/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
@@ -17,16 +17,31 @@
 using System.IO;
 #endif
 using Shouldly;
+using VerifyTests;
+using VerifyXunit;
 using Xunit;
 
+using static VerifyXunit.Verifier;
+
 #nullable disable
 
 namespace Microsoft.Build.Tasks.UnitTests
 {
+    [UsesVerify]
     public class RoslynCodeTaskFactory_Tests
     {
         private const string TaskName = "MyInlineTask";
 
+        private readonly VerifySettings _verifySettings;
+
+        public RoslynCodeTaskFactory_Tests()
+        {
+            UseProjectRelativeDirectory("TaskFactorySource");
+            
+            _verifySettings = new();
+            _verifySettings.ScrubLinesContaining("Runtime Version:");
+        }
+
         [Fact]
         public void InlineTaskWithAssemblyPlatformAgnostic()
         {
@@ -204,60 +219,11 @@ public void RoslynCodeTaskFactory_ReuseCompilation()
         public void VisualBasicFragment()
         {
             const string fragment = "Dim x = 0";
-            string expectedSourceCode = $@"'------------------------------------------------------------------------------
-' <auto-generated>
-'     This code was generated by a tool." +
-#if NETFRAMEWORK
-@"
-'     Runtime Version:4.0.30319.42000" +
-#endif
-@$"
-'
-'     Changes to this file may cause incorrect behavior and will be lost if
-'     the code is regenerated.
-' </auto-generated>
-'------------------------------------------------------------------------------
-
-Option Strict Off
-Option Explicit On
-
-Imports Microsoft.Build.Framework
-Imports Microsoft.Build.Utilities
-Imports System
-Imports System.Collections
-Imports System.Collections.Generic
-Imports System.IO
-Imports System.Linq
-Imports System.Text
-
-Namespace InlineCode
-
-    Public Class {TaskName}
-        Inherits Microsoft.Build.Utilities.Task
-
-        Private _Success As Boolean = true
-
-        Public Overridable Property Success() As Boolean
-            Get
-                Return _Success
-            End Get
-            Set
-                _Success = value
-            End Set
-        End Property
-
-        Public Overrides Function Execute() As Boolean
-{fragment}
-            Return Success
-        End Function
-    End Class
-End Namespace
-";
 
             TryLoadTaskBodyAndExpectSuccess(
                 taskBody: $"<Code Language=\"VB\">{fragment}</Code>",
                 expectedCodeLanguage: "VB",
-                expectedSourceCode: expectedSourceCode,
+                verifySource: true,
                 expectedCodeType: RoslynCodeTaskFactoryCodeType.Fragment);
         }
 
@@ -275,115 +241,10 @@ public void VisualBasicFragmentWithProperties()
 
             const string fragment = @"Dim x = 0";
 
-            string expectedSourceCode = $@"'------------------------------------------------------------------------------
-' <auto-generated>
-'     This code was generated by a tool.
-" +
-#if NETFRAMEWORK
-@"'     Runtime Version:4.0.30319.42000
-" +
-#endif
-@$"'
-'     Changes to this file may cause incorrect behavior and will be lost if
-'     the code is regenerated.
-' </auto-generated>
-'------------------------------------------------------------------------------
-
-Option Strict Off
-Option Explicit On
-
-Imports Microsoft.Build.Framework
-Imports Microsoft.Build.Utilities
-Imports System
-Imports System.Collections
-Imports System.Collections.Generic
-Imports System.IO
-Imports System.Linq
-Imports System.Text
-
-Namespace InlineCode
-
-    Public Class {TaskName}
-        Inherits Microsoft.Build.Utilities.Task
-
-        Private _Parameter1 As String
-
-        Public Overridable Property Parameter1() As String
-            Get
-                Return _Parameter1
-            End Get
-            Set
-                _Parameter1 = value
-            End Set
-        End Property
-
-        Private _Parameter2 As String
-
-        Public Overridable Property Parameter2() As String
-            Get
-                Return _Parameter2
-            End Get
-            Set
-                _Parameter2 = value
-            End Set
-        End Property
-
-        Private _Parameter3 As String
-
-        Public Overridable Property Parameter3() As String
-            Get
-                Return _Parameter3
-            End Get
-            Set
-                _Parameter3 = value
-            End Set
-        End Property
-
-        Private _Parameter4 As Microsoft.Build.Framework.ITaskItem
-
-        Public Overridable Property Parameter4() As Microsoft.Build.Framework.ITaskItem
-            Get
-                Return _Parameter4
-            End Get
-            Set
-                _Parameter4 = value
-            End Set
-        End Property
-
-        Private _Parameter5() As Microsoft.Build.Framework.ITaskItem
-
-        Public Overridable Property Parameter5() As Microsoft.Build.Framework.ITaskItem()
-            Get
-                Return _Parameter5
-            End Get
-            Set
-                _Parameter5 = value
-            End Set
-        End Property
-
-        Private _Success As Boolean = true
-
-        Public Overridable Property Success() As Boolean
-            Get
-                Return _Success
-            End Get
-            Set
-                _Success = value
-            End Set
-        End Property
-
-        Public Overrides Function Execute() As Boolean
-{fragment}
-            Return Success
-        End Function
-    End Class
-End Namespace
-";
-
             TryLoadTaskBodyAndExpectSuccess(
                 taskBody: $"<Code Language=\"VB\">{fragment}</Code>",
                 expectedCodeLanguage: "VB",
-                expectedSourceCode: expectedSourceCode,
+                verifySource: true,
                 expectedCodeType: RoslynCodeTaskFactoryCodeType.Fragment,
                 parameters: parameters);
         }
@@ -396,45 +257,10 @@ public void VisualBasicMethod()
             Return True
         End Function";
 
-            string expectedSourceCode = $@"'------------------------------------------------------------------------------
-' <auto-generated>
-'     This code was generated by a tool.
-" +
-#if NETFRAMEWORK
-@"'     Runtime Version:4.0.30319.42000
-" +
-#endif
-@$"'
-'     Changes to this file may cause incorrect behavior and will be lost if
-'     the code is regenerated.
-' </auto-generated>
-'------------------------------------------------------------------------------
-
-Option Strict Off
-Option Explicit On
-
-Imports Microsoft.Build.Framework
-Imports Microsoft.Build.Utilities
-Imports System
-Imports System.Collections
-Imports System.Collections.Generic
-Imports System.IO
-Imports System.Linq
-Imports System.Text
-
-Namespace InlineCode
-
-    Public Class {TaskName}
-        Inherits Microsoft.Build.Utilities.Task
-
-{method}
-    End Class
-End Namespace
-";
             TryLoadTaskBodyAndExpectSuccess(
                 taskBody: $"<Code Language=\"VB\" Type=\"Method\">{method}</Code>",
                 expectedCodeLanguage: "VB",
-                expectedSourceCode: expectedSourceCode,
+                verifySource: true,
                 expectedCodeType: RoslynCodeTaskFactoryCodeType.Method);
         }
 
@@ -497,7 +323,7 @@ public override bool Execute()
 
             TryLoadTaskBodyAndExpectSuccess(
                 $"<Code Type=\"Class\">{taskClassSourceCode}</Code>",
-                expectedSourceCode: taskClassSourceCode,
+                verifySource: true,
                 expectedCodeType: RoslynCodeTaskFactoryCodeType.Class,
                 expectedCodeLanguage: "CS");
         }
@@ -506,52 +332,8 @@ public override bool Execute()
         public void CSharpFragment()
         {
             const string fragment = "int x = 0;";
-            string expectedSourceCode = $@"//------------------------------------------------------------------------------
-// <auto-generated>
-//     This code was generated by a tool.
-" +
-#if NETFRAMEWORK
-@"//     Runtime Version:4.0.30319.42000
-" +
-#endif
-$@"//
-//     Changes to this file may cause incorrect behavior and will be lost if
-//     the code is regenerated.
-// </auto-generated>
-//------------------------------------------------------------------------------
-
-namespace InlineCode {{
-    using Microsoft.Build.Framework;
-    using Microsoft.Build.Utilities;
-    using System;
-    using System.Collections;
-    using System.Collections.Generic;
-    using System.IO;
-    using System.Linq;
-    using System.Text;
-
-
-    public class {TaskName} : Microsoft.Build.Utilities.Task {{
-
-        private bool _Success = true;
-
-        public virtual bool Success {{
-            get {{
-                return _Success;
-            }}
-            set {{
-                _Success = value;
-            }}
-        }}
-
-        public override bool Execute() {{
-{fragment}
-            return Success;
-        }}
-    }}
-}}
-";
-            TryLoadTaskBodyAndExpectSuccess(taskBody: $"<Code>{fragment}</Code>", expectedSourceCode: expectedSourceCode);
+
+            TryLoadTaskBodyAndExpectSuccess(taskBody: $"<Code>{fragment}</Code>", verifySource: true);
         }
 
         [Fact]
@@ -568,110 +350,9 @@ public void CSharpFragmentWithProperties()
 
             const string fragment = @"int x = 0;";
 
-            string expectedSourceCode = $@"//------------------------------------------------------------------------------
-// <auto-generated>
-//     This code was generated by a tool.
-" +
-#if NETFRAMEWORK
-@"//     Runtime Version:4.0.30319.42000
-" +
-#endif
-$@"//
-//     Changes to this file may cause incorrect behavior and will be lost if
-//     the code is regenerated.
-// </auto-generated>
-//------------------------------------------------------------------------------
-
-namespace InlineCode {{
-    using Microsoft.Build.Framework;
-    using Microsoft.Build.Utilities;
-    using System;
-    using System.Collections;
-    using System.Collections.Generic;
-    using System.IO;
-    using System.Linq;
-    using System.Text;
-
-
-    public class {TaskName} : Microsoft.Build.Utilities.Task {{
-
-        private string _Parameter1;
-
-        public virtual string Parameter1 {{
-            get {{
-                return _Parameter1;
-            }}
-            set {{
-                _Parameter1 = value;
-            }}
-        }}
-
-        private string _Parameter2;
-
-        public virtual string Parameter2 {{
-            get {{
-                return _Parameter2;
-            }}
-            set {{
-                _Parameter2 = value;
-            }}
-        }}
-
-        private string _Parameter3;
-
-        public virtual string Parameter3 {{
-            get {{
-                return _Parameter3;
-            }}
-            set {{
-                _Parameter3 = value;
-            }}
-        }}
-
-        private Microsoft.Build.Framework.ITaskItem _Parameter4;
-
-        public virtual Microsoft.Build.Framework.ITaskItem Parameter4 {{
-            get {{
-                return _Parameter4;
-            }}
-            set {{
-                _Parameter4 = value;
-            }}
-        }}
-
-        private Microsoft.Build.Framework.ITaskItem[] _Parameter5;
-
-        public virtual Microsoft.Build.Framework.ITaskItem[] Parameter5 {{
-            get {{
-                return _Parameter5;
-            }}
-            set {{
-                _Parameter5 = value;
-            }}
-        }}
-
-        private bool _Success = true;
-
-        public virtual bool Success {{
-            get {{
-                return _Success;
-            }}
-            set {{
-                _Success = value;
-            }}
-        }}
-
-        public override bool Execute() {{
-{fragment}
-            return Success;
-        }}
-    }}
-}}
-";
-
             TryLoadTaskBodyAndExpectSuccess(
                 taskBody: $"<Code>{fragment}</Code>",
-                expectedSourceCode: expectedSourceCode,
+                verifySource: true,
                 expectedCodeType: RoslynCodeTaskFactoryCodeType.Fragment,
                 parameters: parameters);
         }
@@ -681,40 +362,9 @@ public void CSharpMethod()
         {
             const string method = @"public override bool Execute() { int x = 0; return true; }";
 
-            string expectedSourceCode = $@"//------------------------------------------------------------------------------
-// <auto-generated>
-//     This code was generated by a tool.
-" +
-#if NETFRAMEWORK
-@"//     Runtime Version:4.0.30319.42000
-" +
-#endif
-@$"//
-//     Changes to this file may cause incorrect behavior and will be lost if
-//     the code is regenerated.
-// </auto-generated>
-//------------------------------------------------------------------------------
-
-namespace InlineCode {{
-    using Microsoft.Build.Framework;
-    using Microsoft.Build.Utilities;
-    using System;
-    using System.Collections;
-    using System.Collections.Generic;
-    using System.IO;
-    using System.Linq;
-    using System.Text;
-
-
-    public class MyInlineTask : Microsoft.Build.Utilities.Task {{
-
-{method}
-    }}
-}}
-";
             TryLoadTaskBodyAndExpectSuccess(
                 taskBody: $"<Code Type=\"Method\">{method}</Code>",
-                expectedSourceCode: expectedSourceCode,
+                verifySource: true,
                 expectedCodeType: RoslynCodeTaskFactoryCodeType.Method);
         }
 
@@ -742,7 +392,7 @@ public override bool Execute()
 
                 TryLoadTaskBodyAndExpectSuccess(
                     $"<Code Source=\"{file.Path}\" />",
-                    expectedSourceCode: taskClassSourceCode,
+                    verifySource: true,
                     expectedCodeType: RoslynCodeTaskFactoryCodeType.Class,
                     expectedCodeLanguage: "CS");
             }
@@ -752,58 +402,14 @@ public override bool Execute()
         public void CSharpFragmentSourceCodeFromFile()
         {
             const string sourceCodeFileContents = "int x = 0;";
-            const string expectedSourceCode = @"//------------------------------------------------------------------------------
-// <auto-generated>
-//     This code was generated by a tool.
-" +
-#if NETFRAMEWORK
-@"//     Runtime Version:4.0.30319.42000
-" +
-#endif
-                                              $@"//
-//     Changes to this file may cause incorrect behavior and will be lost if
-//     the code is regenerated.
-// </auto-generated>
-//------------------------------------------------------------------------------
-
-namespace InlineCode {{
-    using Microsoft.Build.Framework;
-    using Microsoft.Build.Utilities;
-    using System;
-    using System.Collections;
-    using System.Collections.Generic;
-    using System.IO;
-    using System.Linq;
-    using System.Text;
-
-
-    public class {TaskName} : Microsoft.Build.Utilities.Task {{
-
-        private bool _Success = true;
-
-        public virtual bool Success {{
-            get {{
-                return _Success;
-            }}
-            set {{
-                _Success = value;
-            }}
-        }}
-
-        public override bool Execute() {{
-{sourceCodeFileContents}
-            return Success;
-        }}
-    }}
-}}
-";
+
             using (TestEnvironment testEnvironment = TestEnvironment.Create())
             {
                 TransientTestFile file = testEnvironment.CreateFile(fileName: "CSharpFragmentSourceCodeFromFile.tmp", contents: sourceCodeFileContents);
 
                 TryLoadTaskBodyAndExpectSuccess(
                     $"<Code Source=\"{file.Path}\" Type=\"Fragment\"/>",
-                    expectedSourceCode: expectedSourceCode,
+                    verifySource: true,
                     expectedCodeType: RoslynCodeTaskFactoryCodeType.Fragment);
             }
         }
@@ -812,44 +418,14 @@ public override bool Execute() {{
         public void CSharpMethodSourceCodeFromFile()
         {
             const string sourceCodeFileContents = @"public override bool Execute() { int x = 0; return true; }";
-            const string expectedSourceCode = @"//------------------------------------------------------------------------------
-// <auto-generated>
-//     This code was generated by a tool.
-" +
-#if NETFRAMEWORK
-@"//     Runtime Version:4.0.30319.42000
-" +
-#endif
-                                              @$"//
-//     Changes to this file may cause incorrect behavior and will be lost if
-//     the code is regenerated.
-// </auto-generated>
-//------------------------------------------------------------------------------
-
-namespace InlineCode {{
-    using Microsoft.Build.Framework;
-    using Microsoft.Build.Utilities;
-    using System;
-    using System.Collections;
-    using System.Collections.Generic;
-    using System.IO;
-    using System.Linq;
-    using System.Text;
-
-
-    public class MyInlineTask : Microsoft.Build.Utilities.Task {{
 
-{sourceCodeFileContents}
-    }}
-}}
-";
             using (TestEnvironment testEnvironment = TestEnvironment.Create())
             {
                 TransientTestFile file = testEnvironment.CreateFile(fileName: "CSharpMethodSourceCodeFromFile.tmp", contents: sourceCodeFileContents);
 
                 TryLoadTaskBodyAndExpectSuccess(
                     $"<Code Source=\"{file.Path}\" Type=\"Method\"/>",
-                    expectedSourceCode: expectedSourceCode,
+                    verifySource: true,
                     expectedCodeType: RoslynCodeTaskFactoryCodeType.Method);
             }
         }
@@ -1022,7 +598,7 @@ public void SourceCodeFromFile()
 
                 TryLoadTaskBodyAndExpectSuccess(
                     $"<Code Source=\"{file.Path}\"/>",
-                    expectedSourceCode: sourceCodeFileContents,
+                    verifySource: true,
                     expectedCodeType: RoslynCodeTaskFactoryCodeType.Class);
             }
         }
@@ -1140,7 +716,7 @@ private void TryLoadTaskBodyAndExpectSuccess(
             ISet<string> expectedNamespaces = null,
             string expectedCodeLanguage = null,
             RoslynCodeTaskFactoryCodeType? expectedCodeType = null,
-            string expectedSourceCode = null,
+            bool verifySource = false,
             IReadOnlyList<string> expectedWarningMessages = null)
         {
             MockEngine buildEngine = new MockEngine();
@@ -1190,18 +766,10 @@ private void TryLoadTaskBodyAndExpectSuccess(
                 taskInfo.CodeType.ShouldBe(expectedCodeType.Value);
             }
 
-            if (expectedSourceCode != null)
+            if (verifySource)
             {
-                NormalizeRuntime(taskInfo.SourceCode)
-                    .ShouldBe(NormalizeRuntime(expectedSourceCode), StringCompareShould.IgnoreLineEndings);
+                Verify(taskInfo.SourceCode, _verifySettings).GetAwaiter().GetResult();
             }
         }
-
-        private static readonly Regex RuntimeVersionLine = new Regex("Runtime Version:.*");
-
-        private static string NormalizeRuntime(string input)
-        {
-            return RuntimeVersionLine.Replace(input, "Runtime Version:SOMETHING");
-        }
     }
 }
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpClass.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpClass.verified.txt
new file mode 100644
index 00000000000..ba355ca9bee
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpClass.verified.txt
@@ -0,0 +1,13 @@
+﻿namespace InlineTask
+{
+    using Microsoft.Build.Utilities;
+
+    public class HelloWorld : Task
+    {
+        public override bool Execute()
+        {
+            Log.LogMessage("Hello, world!");
+            return !Log.HasLoggedErrors;
+        }
+    }
+}
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpClassSourceCodeFromFile.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpClassSourceCodeFromFile.verified.txt
new file mode 100644
index 00000000000..ba355ca9bee
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpClassSourceCodeFromFile.verified.txt
@@ -0,0 +1,13 @@
+﻿namespace InlineTask
+{
+    using Microsoft.Build.Utilities;
+
+    public class HelloWorld : Task
+    {
+        public override bool Execute()
+        {
+            Log.LogMessage("Hello, world!");
+            return !Log.HasLoggedErrors;
+        }
+    }
+}
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpFragment.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpFragment.verified.txt
new file mode 100644
index 00000000000..7e93fa00ffe
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpFragment.verified.txt
@@ -0,0 +1,39 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace InlineCode {
+    using Microsoft.Build.Framework;
+    using Microsoft.Build.Utilities;
+    using System;
+    using System.Collections;
+    using System.Collections.Generic;
+    using System.IO;
+    using System.Linq;
+    using System.Text;
+    
+    
+    public class MyInlineTask : Microsoft.Build.Utilities.Task {
+        
+        private bool _Success = true;
+        
+        public virtual bool Success {
+            get {
+                return _Success;
+            }
+            set {
+                _Success = value;
+            }
+        }
+        
+        public override bool Execute() {
+int x = 0;
+            return Success;
+        }
+    }
+}
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpFragmentSourceCodeFromFile.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpFragmentSourceCodeFromFile.verified.txt
new file mode 100644
index 00000000000..7e93fa00ffe
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpFragmentSourceCodeFromFile.verified.txt
@@ -0,0 +1,39 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace InlineCode {
+    using Microsoft.Build.Framework;
+    using Microsoft.Build.Utilities;
+    using System;
+    using System.Collections;
+    using System.Collections.Generic;
+    using System.IO;
+    using System.Linq;
+    using System.Text;
+    
+    
+    public class MyInlineTask : Microsoft.Build.Utilities.Task {
+        
+        private bool _Success = true;
+        
+        public virtual bool Success {
+            get {
+                return _Success;
+            }
+            set {
+                _Success = value;
+            }
+        }
+        
+        public override bool Execute() {
+int x = 0;
+            return Success;
+        }
+    }
+}
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpFragmentWithProperties.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpFragmentWithProperties.verified.txt
new file mode 100644
index 00000000000..7918a5a0a17
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpFragmentWithProperties.verified.txt
@@ -0,0 +1,94 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace InlineCode {
+    using Microsoft.Build.Framework;
+    using Microsoft.Build.Utilities;
+    using System;
+    using System.Collections;
+    using System.Collections.Generic;
+    using System.IO;
+    using System.Linq;
+    using System.Text;
+    
+    
+    public class MyInlineTask : Microsoft.Build.Utilities.Task {
+        
+        private string _Parameter1;
+        
+        public virtual string Parameter1 {
+            get {
+                return _Parameter1;
+            }
+            set {
+                _Parameter1 = value;
+            }
+        }
+        
+        private string _Parameter2;
+        
+        public virtual string Parameter2 {
+            get {
+                return _Parameter2;
+            }
+            set {
+                _Parameter2 = value;
+            }
+        }
+        
+        private string _Parameter3;
+        
+        public virtual string Parameter3 {
+            get {
+                return _Parameter3;
+            }
+            set {
+                _Parameter3 = value;
+            }
+        }
+        
+        private Microsoft.Build.Framework.ITaskItem _Parameter4;
+        
+        public virtual Microsoft.Build.Framework.ITaskItem Parameter4 {
+            get {
+                return _Parameter4;
+            }
+            set {
+                _Parameter4 = value;
+            }
+        }
+        
+        private Microsoft.Build.Framework.ITaskItem[] _Parameter5;
+        
+        public virtual Microsoft.Build.Framework.ITaskItem[] Parameter5 {
+            get {
+                return _Parameter5;
+            }
+            set {
+                _Parameter5 = value;
+            }
+        }
+        
+        private bool _Success = true;
+        
+        public virtual bool Success {
+            get {
+                return _Success;
+            }
+            set {
+                _Success = value;
+            }
+        }
+        
+        public override bool Execute() {
+int x = 0;
+            return Success;
+        }
+    }
+}
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpMethod.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpMethod.verified.txt
new file mode 100644
index 00000000000..ba1ea298db4
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpMethod.verified.txt
@@ -0,0 +1,25 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace InlineCode {
+    using Microsoft.Build.Framework;
+    using Microsoft.Build.Utilities;
+    using System;
+    using System.Collections;
+    using System.Collections.Generic;
+    using System.IO;
+    using System.Linq;
+    using System.Text;
+    
+    
+    public class MyInlineTask : Microsoft.Build.Utilities.Task {
+        
+public override bool Execute() { int x = 0; return true; }
+    }
+}
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpMethodSourceCodeFromFile.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpMethodSourceCodeFromFile.verified.txt
new file mode 100644
index 00000000000..ba1ea298db4
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.CSharpMethodSourceCodeFromFile.verified.txt
@@ -0,0 +1,25 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace InlineCode {
+    using Microsoft.Build.Framework;
+    using Microsoft.Build.Utilities;
+    using System;
+    using System.Collections;
+    using System.Collections.Generic;
+    using System.IO;
+    using System.Linq;
+    using System.Text;
+    
+    
+    public class MyInlineTask : Microsoft.Build.Utilities.Task {
+        
+public override bool Execute() { int x = 0; return true; }
+    }
+}
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.SourceCodeFromFile.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.SourceCodeFromFile.verified.txt
new file mode 100644
index 00000000000..4358c4b04fb
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.SourceCodeFromFile.verified.txt
@@ -0,0 +1,3 @@
+﻿
+1F214E27A13F432B9397F1733BC55929
+9111DC29B0064E6994A68CFE465404D4
\ No newline at end of file
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.VisualBasicFragment.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.VisualBasicFragment.verified.txt
new file mode 100644
index 00000000000..bf543b2ca95
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.VisualBasicFragment.verified.txt
@@ -0,0 +1,43 @@
+﻿'------------------------------------------------------------------------------
+' <auto-generated>
+'     This code was generated by a tool.
+'
+'     Changes to this file may cause incorrect behavior and will be lost if
+'     the code is regenerated.
+' </auto-generated>
+'------------------------------------------------------------------------------
+
+Option Strict Off
+Option Explicit On
+
+Imports Microsoft.Build.Framework
+Imports Microsoft.Build.Utilities
+Imports System
+Imports System.Collections
+Imports System.Collections.Generic
+Imports System.IO
+Imports System.Linq
+Imports System.Text
+
+Namespace InlineCode
+    
+    Public Class MyInlineTask
+        Inherits Microsoft.Build.Utilities.Task
+        
+        Private _Success As Boolean = true
+        
+        Public Overridable Property Success() As Boolean
+            Get
+                Return _Success
+            End Get
+            Set
+                _Success = value
+            End Set
+        End Property
+        
+        Public Overrides Function Execute() As Boolean
+Dim x = 0
+            Return Success
+        End Function
+    End Class
+End Namespace
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.VisualBasicFragmentWithProperties.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.VisualBasicFragmentWithProperties.verified.txt
new file mode 100644
index 00000000000..c5506e9fb3e
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.VisualBasicFragmentWithProperties.verified.txt
@@ -0,0 +1,98 @@
+﻿'------------------------------------------------------------------------------
+' <auto-generated>
+'     This code was generated by a tool.
+'
+'     Changes to this file may cause incorrect behavior and will be lost if
+'     the code is regenerated.
+' </auto-generated>
+'------------------------------------------------------------------------------
+
+Option Strict Off
+Option Explicit On
+
+Imports Microsoft.Build.Framework
+Imports Microsoft.Build.Utilities
+Imports System
+Imports System.Collections
+Imports System.Collections.Generic
+Imports System.IO
+Imports System.Linq
+Imports System.Text
+
+Namespace InlineCode
+    
+    Public Class MyInlineTask
+        Inherits Microsoft.Build.Utilities.Task
+        
+        Private _Parameter1 As String
+        
+        Public Overridable Property Parameter1() As String
+            Get
+                Return _Parameter1
+            End Get
+            Set
+                _Parameter1 = value
+            End Set
+        End Property
+        
+        Private _Parameter2 As String
+        
+        Public Overridable Property Parameter2() As String
+            Get
+                Return _Parameter2
+            End Get
+            Set
+                _Parameter2 = value
+            End Set
+        End Property
+        
+        Private _Parameter3 As String
+        
+        Public Overridable Property Parameter3() As String
+            Get
+                Return _Parameter3
+            End Get
+            Set
+                _Parameter3 = value
+            End Set
+        End Property
+        
+        Private _Parameter4 As Microsoft.Build.Framework.ITaskItem
+        
+        Public Overridable Property Parameter4() As Microsoft.Build.Framework.ITaskItem
+            Get
+                Return _Parameter4
+            End Get
+            Set
+                _Parameter4 = value
+            End Set
+        End Property
+        
+        Private _Parameter5() As Microsoft.Build.Framework.ITaskItem
+        
+        Public Overridable Property Parameter5() As Microsoft.Build.Framework.ITaskItem()
+            Get
+                Return _Parameter5
+            End Get
+            Set
+                _Parameter5 = value
+            End Set
+        End Property
+        
+        Private _Success As Boolean = true
+        
+        Public Overridable Property Success() As Boolean
+            Get
+                Return _Success
+            End Get
+            Set
+                _Success = value
+            End Set
+        End Property
+        
+        Public Overrides Function Execute() As Boolean
+Dim x = 0
+            Return Success
+        End Function
+    End Class
+End Namespace
diff --git a/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.VisualBasicMethod.verified.txt b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.VisualBasicMethod.verified.txt
new file mode 100644
index 00000000000..47677c28919
--- /dev/null
+++ b/src/Tasks.UnitTests/TaskFactorySource/RoslynCodeTaskFactory_Tests.VisualBasicMethod.verified.txt
@@ -0,0 +1,32 @@
+﻿'------------------------------------------------------------------------------
+' <auto-generated>
+'     This code was generated by a tool.
+'
+'     Changes to this file may cause incorrect behavior and will be lost if
+'     the code is regenerated.
+' </auto-generated>
+'------------------------------------------------------------------------------
+
+Option Strict Off
+Option Explicit On
+
+Imports Microsoft.Build.Framework
+Imports Microsoft.Build.Utilities
+Imports System
+Imports System.Collections
+Imports System.Collections.Generic
+Imports System.IO
+Imports System.Linq
+Imports System.Text
+
+Namespace InlineCode
+    
+    Public Class MyInlineTask
+        Inherits Microsoft.Build.Utilities.Task
+        
+Public Overrides Function Execute() As Boolean
+            Dim x = 0
+            Return True
+        End Function
+    End Class
+End Namespace
