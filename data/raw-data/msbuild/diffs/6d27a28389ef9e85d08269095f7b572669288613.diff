diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index af19a40875c..684d45c86ed 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -2178,14 +2178,15 @@ private void HandleResourceRequest(int node, ResourceRequest request)
         {
             if (request.IsAcquire)
             {
-                var coresAcquired = _scheduler.RequestCores(request.NumCores);
+                var coresAcquired = _scheduler.RequestCores(request.BlockedRequestId, request.NumCores);
                 var response = new ResourceResponse(request.BlockedRequestId, coresAcquired ?? -1);
 
                 _nodeManager.SendData(node, response);
             }
             else
             {
-                _scheduler.ReleaseCores(request.NumCores);
+                IEnumerable<ScheduleResponse> response = _scheduler.ReleaseCores(request.BlockedRequestId, request.NumCores);
+                PerformSchedulingActions(response);
                 // No response needed.
             }
         }
diff --git a/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
index 0fcef27b0ff..6e473729003 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
@@ -496,7 +496,7 @@ public void ExitMSBuildCallbackState()
         public int? RequestCores(int requestedCores)
         {
             VerifyIsNotZombie();
-            RaiseResourceRequest(new ResourceRequest(_requestEntry.Request.GlobalRequestId, requestedCores));
+            RaiseResourceRequest(new ResourceRequest(true, _requestEntry.Request.GlobalRequestId, requestedCores));
 
             WaitHandle[] handles = new WaitHandle[] { _terminateEvent, _continueWithResourcesEvent };
 
@@ -518,7 +518,7 @@ public void ExitMSBuildCallbackState()
         public void ReleaseCores(int coresToRelease)
         {
             VerifyIsNotZombie();
-            RaiseResourceRequest(new ResourceRequest(coresToRelease));
+            RaiseResourceRequest(new ResourceRequest(false, _requestEntry.Request.GlobalRequestId, coresToRelease));
         }
 
         #endregion
diff --git a/src/Build/BackEnd/Components/Scheduler/IScheduler.cs b/src/Build/BackEnd/Components/Scheduler/IScheduler.cs
index cc84d585988..d58fc3ffd72 100644
--- a/src/Build/BackEnd/Components/Scheduler/IScheduler.cs
+++ b/src/Build/BackEnd/Components/Scheduler/IScheduler.cs
@@ -72,11 +72,11 @@ internal interface IScheduler : IBuildComponent
         /// <summary>
         /// Requests CPU resources.
         /// </summary>
-        int? RequestCores(int requestCores);
+        int? RequestCores(int requestId, int requestedCores);
 
         /// <summary>
         /// Returns CPU resources.
         /// </summary>
-        void ReleaseCores(int coresToRelease);
+        List<ScheduleResponse> ReleaseCores(int requestId, int coresToRelease);
     }
 }
diff --git a/src/Build/BackEnd/Shared/ResourceRequest.cs b/src/Build/BackEnd/Shared/ResourceRequest.cs
index 17556c5c87b..b114bc7d546 100644
--- a/src/Build/BackEnd/Shared/ResourceRequest.cs
+++ b/src/Build/BackEnd/Shared/ResourceRequest.cs
@@ -27,21 +27,12 @@ internal ResourceRequest(ITranslator translator)
         }
 
         /// <summary>
-        /// Acquire
+        /// Constructor
         /// </summary>
-        internal ResourceRequest(int blockedGlobalRequestId, int numCores)
+        internal ResourceRequest(bool acquire, int blockedGlobalRequestId, int numCores)
         {
+            _isAcquire = acquire;
             _blockedGlobalRequestId = blockedGlobalRequestId;
-            _isAcquire = true;
-            _numCores = numCores;
-        }
-
-        /// <summary>
-        /// Release
-        /// </summary>
-        internal ResourceRequest(int numCores)
-        {
-            _isAcquire = false;
             _numCores = numCores;
         }
 
