diff --git a/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
index ab53a1f9a78..f0619f743ec 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
@@ -1126,14 +1126,8 @@ private async Task<BuildResult> BuildProject()
             }
 
             // We consider this the entrypoint for the project build for purposes of BuildCheck processing 
-            IBuildCheckManager buildCheckManager = null;
-
-            if (!isRestore)
-            {
-                buildCheckManager = (_componentHost.GetComponent(BuildComponentType.BuildCheck) as IBuildCheckManagerProvider)!.Instance;
-                buildCheckManager.isRestore = false;
-                buildCheckManager.SetDataSource(BuildCheckDataSource.BuildExecution);
-            }
+            IBuildCheckManager buildCheckManager = isRestore ? null : (_componentHost.GetComponent(BuildComponentType.BuildCheck) as IBuildCheckManagerProvider)!.Instance;
+            buildCheckManager?.SetDataSource(BuildCheckDataSource.BuildExecution);
 
             ErrorUtilities.VerifyThrow(_targetBuilder != null, "Target builder is null");
 
@@ -1183,6 +1177,7 @@ private async Task<BuildResult> BuildProject()
                         BuildCheckDataSource.BuildExecution,
                         _requestEntry.Request.ParentBuildEventContext);
                 }
+
             }
 
             _projectLoggingContext = _nodeLoggingContext.LogProjectStarted(_requestEntry);
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
index 5a538f41745..0b6b50102f8 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
@@ -26,58 +26,60 @@ public void Initialize(IEventSource eventSource)
 
     private void EventSource_AnyEventRaised(object sender, BuildEventArgs e)
     {
-        if (!buildCheckManager.isRestore)
+        if (buildCheckManager.isRestore)
         {
-            if (e is ProjectEvaluationFinishedEventArgs projectEvaluationFinishedEventArgs)
-            {
-                if (projectEvaluationFinishedEventArgs.ProjectFile?.EndsWith(".metaproj") ?? false)
-                {
-                    return;
-                }
+            return;
+        }
 
-                try
-                {
-                    buildCheckManager.ProcessEvaluationFinishedEventArgs(
-                        loggingContextFactory.CreateLoggingContext(e.BuildEventContext!),
-                        projectEvaluationFinishedEventArgs);
-                }
-                catch (Exception exception)
-                {
-                    Debugger.Launch();
-                    Console.WriteLine(exception);
-                    throw;
-                }
+        if (e is ProjectEvaluationFinishedEventArgs projectEvaluationFinishedEventArgs)
+        {
+            if (projectEvaluationFinishedEventArgs.ProjectFile?.EndsWith(".metaproj") ?? false)
+            {
+                return;
+            }
 
-                buildCheckManager.EndProjectEvaluation(BuildCheckDataSource.EventArgs, e.BuildEventContext!);
+            try
+            {
+                buildCheckManager.ProcessEvaluationFinishedEventArgs(
+                    loggingContextFactory.CreateLoggingContext(e.BuildEventContext!),
+                    projectEvaluationFinishedEventArgs);
             }
-            else if (e is ProjectEvaluationStartedEventArgs projectEvaluationStartedEventArgs)
+            catch (Exception exception)
             {
-                if (projectEvaluationStartedEventArgs.ProjectFile?.EndsWith(".metaproj") ?? false)
-                {
-                    return;
-                }
-
-                buildCheckManager.StartProjectEvaluation(BuildCheckDataSource.EventArgs, e.BuildEventContext!,
-                    projectEvaluationStartedEventArgs.ProjectFile!);
+                Debugger.Launch();
+                Console.WriteLine(exception);
+                throw;
             }
-            else if (e is ProjectStartedEventArgs projectStartedEvent)
+
+            buildCheckManager.EndProjectEvaluation(BuildCheckDataSource.EventArgs, e.BuildEventContext!);
+        }
+        else if (e is ProjectEvaluationStartedEventArgs projectEvaluationStartedEventArgs)
+        {
+            if (projectEvaluationStartedEventArgs.ProjectFile?.EndsWith(".metaproj") ?? false)
             {
-                buildCheckManager.StartProjectRequest(BuildCheckDataSource.EventArgs, e.BuildEventContext!);
+                return;
             }
-            else if (e is ProjectFinishedEventArgs projectFinishedEventArgs)
+
+            buildCheckManager.StartProjectEvaluation(BuildCheckDataSource.EventArgs, e.BuildEventContext!,
+                projectEvaluationStartedEventArgs.ProjectFile!);
+        }
+        else if (e is ProjectStartedEventArgs projectStartedEvent)
+        {
+            buildCheckManager.StartProjectRequest(BuildCheckDataSource.EventArgs, e.BuildEventContext!);
+        }
+        else if (e is ProjectFinishedEventArgs projectFinishedEventArgs)
+        {
+            buildCheckManager.EndProjectRequest(BuildCheckDataSource.EventArgs, e.BuildEventContext!);
+        }
+        else if (e is BuildCheckEventArgs buildCheckBuildEventArgs)
+        {
+            if (buildCheckBuildEventArgs is BuildCheckTracingEventArgs tracingEventArgs)
             {
-                buildCheckManager.EndProjectRequest(BuildCheckDataSource.EventArgs, e.BuildEventContext!);
+                _stats.Merge(tracingEventArgs.TracingData, (span1, span2) => span1 + span2);
             }
-            else if (e is BuildCheckEventArgs buildCheckBuildEventArgs)
+            else if (buildCheckBuildEventArgs is BuildCheckAcquisitionEventArgs acquisitionEventArgs)
             {
-                if (buildCheckBuildEventArgs is BuildCheckTracingEventArgs tracingEventArgs)
-                {
-                    _stats.Merge(tracingEventArgs.TracingData, (span1, span2) => span1 + span2);
-                }
-                else if (buildCheckBuildEventArgs is BuildCheckAcquisitionEventArgs acquisitionEventArgs)
-                {
-                    buildCheckManager.ProcessAnalyzerAcquisition(acquisitionEventArgs.ToAnalyzerAcquisitionData());
-                }
+                buildCheckManager.ProcessAnalyzerAcquisition(acquisitionEventArgs.ToAnalyzerAcquisitionData());
             }
         }
     }
