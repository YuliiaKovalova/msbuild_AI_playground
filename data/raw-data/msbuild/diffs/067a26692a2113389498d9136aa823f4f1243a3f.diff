diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 06087262aa1..85b45c681a2 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -179,7 +179,7 @@ public class BuildManager : INodePacketHandler, IBuildComponentHost, IDisposable
         /// <summary>
         /// The last BuildParameters used for building.
         /// </summary>
-        private BuildParameters _previousBuildParameters = null;
+        private bool? _previousLowPriority = null;
 
         /// <summary>
         /// Mapping of unnamed project instances to the file names assigned to them.
@@ -416,15 +416,15 @@ public void BeginBuild(BuildParameters parameters, IEnumerable<DeferredBuildMess
         /// <exception cref="InvalidOperationException">Thrown if a build is already in progress.</exception>
         public void BeginBuild(BuildParameters parameters)
         {
-            if (_previousBuildParameters != null)
+            if (_previousLowPriority != null)
             {
-                if (parameters.LowPriority != _previousBuildParameters.LowPriority)
+                if (parameters.LowPriority != _previousLowPriority)
                 {
                     _nodeManager?.ShutdownConnectedNodes(parameters.EnableNodeReuse);
                }
             }
 
-            _previousBuildParameters = parameters;
+            _previousLowPriority = parameters.LowPriority;
 
             lock (_syncLock)
             {
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 5ae40eeba7a..d061a7c22c9 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -2065,11 +2065,10 @@ string commandLine
             }
 
 
-            // Honor the low priority flag, we place our selves below normal priority and let sub processes inherit
-            // that priority. Idle priority would prevent the build from proceeding as the user does normal actions.
-            // This switch is processed early because if the main node sets this switch after initialization, it
-            // remains normal priority (as intended for Visual Studio). This ensures that child processes still
-            // switch to low priority as intended.
+            // Idle priority would prevent the build from proceeding as the user does normal actions.
+            // This switch is processed early to capture both the command line case (main node should
+            // also be low priority) and the Visual Studio case in which the main node starts and stays
+            // at normal priority (not through XMake.cs) but worker nodes still need to honor this switch.
             if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.LowPriority))
             {
                 lowPriority = ProcessBooleanSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.LowPriority], defaultValue: true, resourceName: "InvalidLowPriorityValue");
