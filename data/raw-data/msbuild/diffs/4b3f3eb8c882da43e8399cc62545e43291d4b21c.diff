diff --git a/src/Shared/Constants.cs b/src/Shared/Constants.cs
index eea2401dca9..a0f5302d621 100644
--- a/src/Shared/Constants.cs
+++ b/src/Shared/Constants.cs
@@ -171,6 +171,11 @@ internal static class ItemMetadataNames
         /// The output path for a given item.
         /// </summary>
         internal const string targetPath = "TargetPath";
+
+        /// <summary>
+        /// The user-specified override for TargetPath. See the AssignTargetPath task.
+        /// </summary>
+        internal const string targetPathOverride = "TargetPathOverride";
         internal const string dependentUpon = "DependentUpon";
         internal const string msbuildSourceProjectFile = "MSBuildSourceProjectFile";
         internal const string msbuildSourceTargetName = "MSBuildSourceTargetName";
diff --git a/src/Tasks.UnitTests/AssignTargetPath_Tests.cs b/src/Tasks.UnitTests/AssignTargetPath_Tests.cs
index 1b6c9bbb5f5..494541d746c 100644
--- a/src/Tasks.UnitTests/AssignTargetPath_Tests.cs
+++ b/src/Tasks.UnitTests/AssignTargetPath_Tests.cs
@@ -1,12 +1,12 @@
 // Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
+using System.Collections.Generic;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Tasks;
 using Microsoft.Build.Utilities;
 using Shouldly;
-using System.Collections.Generic;
 using Xunit;
 
 namespace Microsoft.Build.UnitTests
@@ -85,12 +85,12 @@ public void InConeButAbsolute()
         [InlineData(@"some\dir\to\file.txt")]
         [InlineData("file.txt")]
         [InlineData("file")]
-        public void TargetPathAlreadySet(string targetPath)
+        public void TargetPathOverrideSet(string targetPath)
         {
             AssignTargetPath t = new AssignTargetPath();
             t.BuildEngine = new MockEngine();
             Dictionary<string, string> metaData = new Dictionary<string, string>();
-            metaData.Add("TargetPath", targetPath);
+            metaData.Add("TargetPathOverride", targetPath);
             t.Files = new ITaskItem[]
                           {
                               new TaskItem(
diff --git a/src/Tasks/AssignTargetPath.cs b/src/Tasks/AssignTargetPath.cs
index 438bcecabd5..05fdb020778 100644
--- a/src/Tasks/AssignTargetPath.cs
+++ b/src/Tasks/AssignTargetPath.cs
@@ -72,9 +72,9 @@ public override bool Execute()
                 for (int i = 0; i < Files.Length; ++i)
                 {
                     AssignedFiles[i] = new TaskItem(Files[i]);
-                    string targetPath = Files[i].GetMetadata(ItemMetadataNames.targetPath);
+                    string targetPath = Files[i].GetMetadata(ItemMetadataNames.targetPathOverride);
 
-                    // If TargetPath is already set, copy it over.
+                    // TargetPathOverride takes priority.
                     // https://github.com/dotnet/msbuild/issues/2795
                     if (!string.IsNullOrEmpty(targetPath))
                     {
