diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
index 5bdc559ec8a..9dec46e98d0 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
@@ -117,7 +117,7 @@ protected void ShutdownAllNodes(bool nodeReuse, NodeContextTerminateDelegate ter
             // For all processes in the list, send signal to terminate if able to connect
             foreach (Process nodeProcess in nodeProcesses)
             {
-                // A 2013 comment suggested some nodes take this long to respond, so a smaller timeout would miss nodes.
+                // A 2013 comment suggested some nodes take 30 ms to respond, so a smaller timeout would miss nodes, but more recent (2020) logs indicate it can rise into the low forties.
                 int timeout = 50;
 
                 // Attempt to connect to the process with the handshake without low priority.
@@ -197,8 +197,7 @@ protected NodeContext GetNode(string msbuildLocation, string commandLineArgs, in
                     _processesToIgnore.Add(nodeLookupKey);
 
                     // Attempt to connect to each process in turn.
-                    int timeout = 50; // Experimentally derived. Seems to generally be less than thirty but can rise to the low forties.
-                    Stream nodeStream = NamedPipeUtil.TryConnectToProcess(nodeProcess.Id, timeout, hostHandshake);
+                    Stream nodeStream = NamedPipeUtil.TryConnectToProcess(nodeProcess.Id, 0 /* poll, don't wait for connections */, hostHandshake);
                     if (nodeStream != null)
                     {
                         // Connection successful, use this node.
