diff --git a/src/Build/Logging/FancyLogger/FancyLogger.cs b/src/Build/Logging/FancyLogger/FancyLogger.cs
index 19238214324..a0ac45a106f 100644
--- a/src/Build/Logging/FancyLogger/FancyLogger.cs
+++ b/src/Build/Logging/FancyLogger/FancyLogger.cs
@@ -10,14 +10,10 @@ namespace Microsoft.Build.Logging.FancyLogger
     public class FancyLogger : ILogger
     {   
         private Dictionary<int, FancyLoggerProjectNode> projects = new Dictionary<int, FancyLoggerProjectNode>();
-
         private bool Succeeded;
-
-        private float existingTasks = 1;
-        private float completedTasks = 0;
-
         public string Parameters {  get; set; }
-
+        public float StartedProjects = 0;
+        public float FinishedProjects = 0;
         public LoggerVerbosity Verbosity { get; set; }
 
         public FancyLogger()
@@ -61,6 +57,7 @@ void eventSource_BuildFinished(object sender, BuildFinishedEventArgs e)
         // Project
         void eventSource_ProjectStarted(object sender, ProjectStartedEventArgs e)
         {
+            StartedProjects++;
             // Get project id
             int id = e.BuildEventContext!.ProjectInstanceId;
             // If id already exists...
@@ -70,6 +67,15 @@ void eventSource_ProjectStarted(object sender, ProjectStartedEventArgs e)
             projects[id] = node;
             // Log
             node.Log();
+            // Update footer
+            if (StartedProjects > 0)
+            {
+                FancyLoggerBuffer.FooterText = ANSIBuilder.Alignment.SpaceBetween(
+                    $"Finished projects: {ANSIBuilder.Graphics.ProgressBar(FinishedProjects/StartedProjects)} {FinishedProjects}/{StartedProjects}",
+                    ANSIBuilder.Formatting.Italic(ANSIBuilder.Formatting.Dim("[Up][Down] Scroll")),
+                    Console.BufferWidth
+                );
+            }
         }
         void eventSource_ProjectFinished(object sender, ProjectFinishedEventArgs e)
         {
@@ -79,6 +85,16 @@ void eventSource_ProjectFinished(object sender, ProjectFinishedEventArgs e)
             // Update line
             node.Finished = true;
             node.Log();
+            // Update footer
+            FinishedProjects++;
+            if (StartedProjects > 0)
+            {
+                FancyLoggerBuffer.FooterText = ANSIBuilder.Alignment.SpaceBetween(
+                    $"Finished projects: {ANSIBuilder.Graphics.ProgressBar(FinishedProjects / StartedProjects)} {FinishedProjects}/{StartedProjects}",
+                    ANSIBuilder.Formatting.Italic(ANSIBuilder.Formatting.Dim("[Up][Down] Scroll")),
+                    Console.BufferWidth
+                );
+            }
         }
         // Target
         void eventSource_TargetStarted(object sender, TargetStartedEventArgs e)
@@ -110,12 +126,10 @@ void eventSource_TaskStarted(object sender, TaskStartedEventArgs e)
             // Update
             node.AddTask(e);
             node.Log();
-            existingTasks++;
         }
 
         void eventSource_TaskFinished(object sender, TaskFinishedEventArgs e)
         {
-            completedTasks++;
         }
 
         void eventSource_MessageRaised(object sender, BuildMessageEventArgs e)
diff --git a/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs b/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs
index 25280e06101..ca59c2d8fb1 100644
--- a/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs
+++ b/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs
@@ -33,6 +33,7 @@ public class FancyLoggerBuffer
         private static List<FancyLoggerBufferLine> Lines = new();
         private static int TopLineIndex = 0;
         private static bool AutoScrollEnabled = true;
+        public static string FooterText = string.Empty;
         public static void Initialize()
         {
             // Use alternate buffer
@@ -93,9 +94,8 @@ public static void Render()
                 ANSIBuilder.Cursor.Home() +
                 ANSIBuilder.Eraser.LineCursorToEnd() + ANSIBuilder.Formatting.Inverse(ANSIBuilder.Alignment.Center("MSBuild - Build in progress")) +
                 // Write footer
-                ANSIBuilder.Eraser.LineCursorToEnd() + ANSIBuilder.Cursor.Position(Console.BufferHeight - 1, 0) +
-                // TODO: Remove and replace with actual footer
-                new string('-', Console.BufferWidth) + '\n' + "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
+                ANSIBuilder.Cursor.Position(Console.BufferHeight - 1, 0) + ANSIBuilder.Eraser.LineCursorToEnd() +
+                new string('-', Console.BufferWidth) + '\n' + FooterText
             );
             // Write lines
             for (int i = 0; i < Console.BufferHeight - 3; i++)
