diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index d606941d061..8ee31d404bf 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -562,13 +562,7 @@ public void BeginBuild(BuildParameters parameters)
 #if FEATURE_REPORTFILEACCESSES
                 if (_buildParameters.ReportFileAccesses)
                 {
-                    // To properly report file access, we need to disable the in-proc node which won't be detoured.
-                    _buildParameters.DisableInProcNode = true;
-
-                    // Node reuse must be disabled as future builds will not be able to listen to events raised by detours.
-                    _buildParameters.EnableNodeReuse = false;
-
-                    _componentFactories.ReplaceFactory(BuildComponentType.NodeLauncher, DetouredNodeLauncherFactory.CreateComponent);
+                    EnableDetouredNodeLauncher();
                 }
 #endif
 
@@ -723,6 +717,25 @@ void InitializeCaches()
             }
         }
 
+#if FEATURE_REPORTFILEACCESSES
+        /// <summary>
+        /// Configure the build to use I/O tracking for nodes.
+        /// </summary>
+        /// <remarks>
+        /// Must be a separate method to avoid loading the BuildXL assembly when not opted in.
+        /// </remarks>
+        private void EnableDetouredNodeLauncher()
+        {
+            // To properly report file access, we need to disable the in-proc node which won't be detoured.
+            _buildParameters.DisableInProcNode = true;
+
+            // Node reuse must be disabled as future builds will not be able to listen to events raised by detours.
+            _buildParameters.EnableNodeReuse = false;
+
+            _componentFactories.ReplaceFactory(BuildComponentType.NodeLauncher, DetouredNodeLauncher.CreateComponent);
+        }
+#endif
+
         private static void AttachDebugger()
         {
             if (Debugger.IsAttached)
diff --git a/src/Build/BackEnd/Components/Communications/DetouredNodeLauncher.cs b/src/Build/BackEnd/Components/Communications/DetouredNodeLauncher.cs
index d54085ab5f2..3898f68b376 100644
--- a/src/Build/BackEnd/Components/Communications/DetouredNodeLauncher.cs
+++ b/src/Build/BackEnd/Components/Communications/DetouredNodeLauncher.cs
@@ -27,6 +27,12 @@ internal sealed class DetouredNodeLauncher : INodeLauncher, IBuildComponent
 
         private IFileAccessManager _fileAccessManager;
 
+        public static IBuildComponent CreateComponent(BuildComponentType type)
+        {
+            ErrorUtilities.VerifyThrowArgumentOutOfRange(type == BuildComponentType.NodeLauncher, nameof(type));
+            return new DetouredNodeLauncher();
+        }
+
         public void InitializeComponent(IBuildComponentHost host)
         {
             _fileAccessManager = (IFileAccessManager)host.GetComponent(BuildComponentType.FileAccessManager);
diff --git a/src/Build/BackEnd/Components/Communications/DetouredNodeLauncherFactory.cs b/src/Build/BackEnd/Components/Communications/DetouredNodeLauncherFactory.cs
deleted file mode 100644
index d9a24df5eab..00000000000
--- a/src/Build/BackEnd/Components/Communications/DetouredNodeLauncherFactory.cs
+++ /dev/null
@@ -1,29 +0,0 @@
-ï»¿// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-#if FEATURE_REPORTFILEACCESSES
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
-using Microsoft.Build.Shared;
-
-namespace Microsoft.Build.BackEnd
-{
-    /// <summary>
-    /// Factory for creating the DetouredNodeLauncher
-    /// </summary>
-    /// <remarks>
-    /// Must be a separate class to avoid loading the BuildXL assemblies when not opted in.
-    /// </remarks>
-    internal static class DetouredNodeLauncherFactory
-    {
-        public static IBuildComponent CreateComponent(BuildComponentType type)
-        {
-            ErrorUtilities.VerifyThrowArgumentOutOfRange(type == BuildComponentType.NodeLauncher, nameof(type));
-            return new DetouredNodeLauncher();
-        }
-    }
-}
-#endif
diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index ae5563da13f..9a5b1175b0e 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -155,7 +155,6 @@
     <Compile Include="BackEnd\Components\ProjectCache\*.cs" />
     <Compile Include="BackEnd\Components\Communications\CurrentHost.cs" />
     <Compile Include="BackEnd\Components\Communications\DetouredNodeLauncher.cs" />
-    <Compile Include="BackEnd\Components\Communications\DetouredNodeLauncherFactory.cs" />
     <Compile Include="BackEnd\Components\Communications\SerializationContractInitializer.cs" />
     <Compile Include="BackEnd\Components\Communications\ServerNodeEndpointOutOfProc.cs" />
     <Compile Include="BackEnd\Components\FileAccesses\IFileAccessManager.cs" />
