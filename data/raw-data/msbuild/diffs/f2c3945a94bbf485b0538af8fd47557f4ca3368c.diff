diff --git a/src/Tasks.UnitTests/Exec_Tests.cs b/src/Tasks.UnitTests/Exec_Tests.cs
index df8ac22edce..4d6a8089424 100644
--- a/src/Tasks.UnitTests/Exec_Tests.cs
+++ b/src/Tasks.UnitTests/Exec_Tests.cs
@@ -103,8 +103,8 @@ public void ExitCodeCausesFailure()
         [Fact]
         public void Timeout()
         {
-            // On non-Windows the exit code of a killed process is SIGTERM (143)
-            int expectedExitCode = NativeMethodsShared.IsWindows ? -1 : 143;
+            // On non-Windows the exit code of a killed process is SIGKILL (137)
+            int expectedExitCode = NativeMethodsShared.IsWindows ? -1 : 137;
 
             Exec exec = PrepareExec(NativeMethodsShared.IsWindows ? ":foo \n goto foo" : "while true; do sleep 1; done");
             exec.Timeout = 5;
@@ -141,13 +141,13 @@ public void TimeoutFailsEvenWhenExitCodeIsIgnored()
                 // The standard check for SIGTERM fails intermittently on macOS Mono
                 // https://github.com/dotnet/msbuild/issues/5506
                 // To avoid test flakiness, allow 259 even though I can't justify it.
-                exec.ExitCode.ShouldBeOneOf(143, 259);
+                exec.ExitCode.ShouldBeOneOf(137, 259);
             }
             else
             {
-                // On non-Windows the exit code of a killed process is generally 128 + SIGTERM = 143
+                // On non-Windows the exit code of a killed process is generally 128 + SIGKILL = 137
                 // though this isn't 100% guaranteed, see https://unix.stackexchange.com/a/99134
-                exec.ExitCode.ShouldBe(NativeMethodsShared.IsWindows ? -1 : 143);
+                exec.ExitCode.ShouldBe(NativeMethodsShared.IsWindows ? -1 : 137);
             }
         }
 
