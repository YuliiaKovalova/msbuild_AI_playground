diff --git a/src/Tasks.UnitTests/GetSDKReference_Tests.cs b/src/Tasks.UnitTests/GetSDKReference_Tests.cs
index 45a14294e1c..72fd7969515 100644
--- a/src/Tasks.UnitTests/GetSDKReference_Tests.cs
+++ b/src/Tasks.UnitTests/GetSDKReference_Tests.cs
@@ -491,14 +491,14 @@ public void VerifyNoCopyWhenReferenceOnlyIsTrue()
             ITaskItem item1 = new TaskItem(_sdkDirectory);
             item1.SetMetadata("ExpandReferenceAssemblies", "true");
             item1.SetMetadata("TargetedSDKConfiguration", "Retail");
-            item1.SetMetadata("TargetedSDKArchitecture", "X86");
+            item1.SetMetadata("TargetedSDKArchitecture", "x86");
             item1.SetMetadata("CopyLocalExpandedReferenceAssemblies", "false");
             item1.SetMetadata("OriginalItemSpec", "SDKWithManifest, Version=2.0");
 
             ITaskItem item2 = new TaskItem(_sdkDirectory);
             item2.SetMetadata("ExpandReferenceAssemblies", "true");
             item2.SetMetadata("TargetedSDKConfiguration", "Retail");
-            item2.SetMetadata("TargetedSDKArchitecture", "X86");
+            item2.SetMetadata("TargetedSDKArchitecture", "x86");
             item2.SetMetadata("CopyLocalExpandedReferenceAssemblies", "false");
             item2.SetMetadata("OriginalItemSpec", "SDKWithManifest, Version=2.0");
             item2.SetMetadata("RuntimeReferenceOnly", "true");
diff --git a/src/Tasks/GetSDKReferenceFiles.cs b/src/Tasks/GetSDKReferenceFiles.cs
index dfff444d9f0..be3a086ce46 100644
--- a/src/Tasks/GetSDKReferenceFiles.cs
+++ b/src/Tasks/GetSDKReferenceFiles.cs
@@ -1226,8 +1226,9 @@ internal class SDKInfo : ITranslatable
 
             internal SDKInfo()
             {
-                pathToReferenceMetadata = new();
-                directoryToFileList = new();
+                IEqualityComparer<string> comparer = FileUtilities.PathComparison == StringComparison.Ordinal ? StringComparer.Ordinal : StringComparer.OrdinalIgnoreCase;
+                pathToReferenceMetadata = new(comparer);
+                directoryToFileList = new(comparer);
                 hash = 0;
             }
 
@@ -1287,8 +1288,7 @@ private static void TranslateConcurrentDictionary<T>(ITranslator translator, ref
         {
             int count = dictionary.Count;
             translator.Translate(ref count);
-            string[] keys = dictionary.Keys.ToArray();
-            if (keys.Length == 0)
+            if (translator.Mode == TranslationDirection.ReadFromStream)
             {
                 for (int i = 0; i < count; i++)
                 {
@@ -1301,10 +1301,11 @@ private static void TranslateConcurrentDictionary<T>(ITranslator translator, ref
             }
             else
             {
-                for (int i = 0; i < count; i++)
+                foreach (KeyValuePair<string, T> kvp in dictionary)
                 {
-                    translator.Translate(ref keys[i]);
-                    T value = dictionary[keys[i]];
+                    string key = kvp.Key;
+                    translator.Translate(ref key);
+                    T value = kvp.Value;
                     objTranslator(translator, ref value);
                 }
             }
