diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
index 9d7adfb26a6..5c1eade7722 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
@@ -1055,7 +1055,7 @@ private bool ProcessBodyBytesRead(int bytesRead, int packetLength, NodePacketTyp
                 return true;
             }
 
-            private bool ReadAndRoutePacket(NodePacketType packetType, byte [] packetData, int packetLength)
+            private bool ReadAndRoutePacket(NodePacketType packetType, byte[] packetData, int packetLength)
             {
                 try
                 {
diff --git a/src/Deprecated/Engine/Engine/Engine.cs b/src/Deprecated/Engine/Engine/Engine.cs
index fa138a85c81..5bf70ff039d 100644
--- a/src/Deprecated/Engine/Engine/Engine.cs
+++ b/src/Deprecated/Engine/Engine/Engine.cs
@@ -2275,7 +2275,7 @@ public bool BuildProjectFiles
             BuildPropertyGroup[] globalPropertiesPerProject,
             IDictionary[] targetOutputsPerProject,
             BuildSettings buildFlags,
-            string [] toolsVersions
+            string[] toolsVersions
         )
         {
             // Verify the arguments to the API
@@ -2305,7 +2305,7 @@ internal bool PostProjectEvaluationRequests
             BuildPropertyGroup[] globalPropertiesPerProject,
             IDictionary[] targetOutputsPerProject,
             BuildSettings buildFlags,
-            string [] toolVersions
+            string[] toolVersions
         )
         {
             string currentDirectory = Environment.CurrentDirectory;
@@ -2726,7 +2726,7 @@ internal Project GetMatchingProject
             string projectFullPath,
             BuildPropertyGroup globalPropertiesToUse,
             string toolsVersion,
-            string [] targetNames,
+            string[] targetNames,
             BuildEventContext buildEventContext,
             bool toolsVersionPeekedFromProjectFile
             )
@@ -2977,9 +2977,9 @@ internal TaskExecutionContext GetTaskOutputUpdates()
         internal NodeStatus RequestStatus(int requestId)
         {
             // Find out the list of the inprogress waiting targets
-            List<BuildRequest []> outstandingRequests = new List<BuildRequest []>();
-            int [] handleIds = NodeManager.TaskExecutionModule.GetWaitingTaskData(outstandingRequests);
-            Target [] waitingTargets = EngineCallback.GetListOfTargets(handleIds);
+            List<BuildRequest[]> outstandingRequests = new List<BuildRequest[]>();
+            int[] handleIds = NodeManager.TaskExecutionModule.GetWaitingTaskData(outstandingRequests);
+            Target[] waitingTargets = EngineCallback.GetListOfTargets(handleIds);
 
             // Find out the list of targets waiting due to dependency or onerror call but not actively in progress
             List<Project> inProgressProject = cacheOfBuildingProjects.GetInProgressProjects();
diff --git a/src/Deprecated/Engine/Engine/EngineLoggingServicesOutProc.cs b/src/Deprecated/Engine/Engine/EngineLoggingServicesOutProc.cs
index da04f14f2d0..1d23e1d9b5e 100644
--- a/src/Deprecated/Engine/Engine/EngineLoggingServicesOutProc.cs
+++ b/src/Deprecated/Engine/Engine/EngineLoggingServicesOutProc.cs
@@ -83,7 +83,7 @@ override internal bool ProcessPostedLoggingEvents()
                 // If there are event - post them to the parent
                 if (current != 0)
                 {
-                    NodeLoggingEvent [] trimmedEventArray = new NodeLoggingEvent[current];
+                    NodeLoggingEvent[] trimmedEventArray = new NodeLoggingEvent[current];
                     Array.Copy(eventArray, trimmedEventArray, current);
                     parentNode.PostLoggingMessagesToHost(trimmedEventArray);
                     current = 0;
diff --git a/src/Deprecated/Engine/Engine/EngineProxy.cs b/src/Deprecated/Engine/Engine/EngineProxy.cs
index 9ce4307122e..859d3d211d0 100644
--- a/src/Deprecated/Engine/Engine/EngineProxy.cs
+++ b/src/Deprecated/Engine/Engine/EngineProxy.cs
@@ -515,7 +515,7 @@ public BuildEngineResult BuildProjectFilesInParallel
             (
             string[] projectFileNames,
             string[] targetNames,
-            IDictionary [] globalProperties,
+            IDictionary[] globalProperties,
             IList<string>[] removeGlobalProperties,
             string[] toolsVersions,
             bool returnTargetOutputs
diff --git a/src/Deprecated/Engine/Engine/SchedulerRecord.cs b/src/Deprecated/Engine/Engine/SchedulerRecord.cs
index b97261cb00a..596dfda0649 100644
--- a/src/Deprecated/Engine/Engine/SchedulerRecord.cs
+++ b/src/Deprecated/Engine/Engine/SchedulerRecord.cs
@@ -22,7 +22,7 @@ internal ScheduleRecord
             int evaluationNode,
             string projectName,
             string toolsVersion,
-            string [] targetsBuild
+            string[] targetsBuild
         )
         {
             this.recordKey = recordKey;
diff --git a/src/Deprecated/Engine/Engine/TaskExecutionModule.cs b/src/Deprecated/Engine/Engine/TaskExecutionModule.cs
index 54915eebb4d..7aaf2830064 100644
--- a/src/Deprecated/Engine/Engine/TaskExecutionModule.cs
+++ b/src/Deprecated/Engine/Engine/TaskExecutionModule.cs
@@ -182,7 +182,7 @@ virtual internal bool BuildProjectFile
             IDictionary[] globalPropertiesPerProject,
             IDictionary[] targetOutputsPerProject,
             EngineLoggingServices loggingServices,
-            string [] toolsVersions,
+            string[] toolsVersions,
             bool useResultsCache,
             bool unloadProjectsOnCompletion,
             BuildEventContext taskContext
@@ -499,13 +499,13 @@ internal long LastTaskActivity()
             return DateTime.Now.Ticks;
         }
 
-        internal int[] GetWaitingTaskData(List<BuildRequest []> outstandingRequests)
+        internal int[] GetWaitingTaskData(List<BuildRequest[]> outstandingRequests)
         {
             if (moduleMode != TaskExecutionModuleMode.SingleProcMode)
             {
                 return workerThread.GetWaitingTasksData(outstandingRequests);
             }
-            return new int [0];
+            return new int[0];
         }
 
         internal void Shutdown()
diff --git a/src/Deprecated/Engine/Engine/TaskWorkerThread.cs b/src/Deprecated/Engine/Engine/TaskWorkerThread.cs
index 37efbc5c0c2..df8283580d0 100644
--- a/src/Deprecated/Engine/Engine/TaskWorkerThread.cs
+++ b/src/Deprecated/Engine/Engine/TaskWorkerThread.cs
@@ -254,7 +254,7 @@ private bool WaitAnyFast(NodeLoopExecutionMode executionMode, out int index)
         /// </summary>
         /// <param name="executionMode">Current execution mode</param>
         /// <returns>Array of handles to wait on</returns>
-        private WaitHandle [] GetHandlesArray( NodeLoopExecutionMode executionMode )
+        private WaitHandle[] GetHandlesArray( NodeLoopExecutionMode executionMode )
         {
             WaitHandle[] waitHandles = null;
 
@@ -307,7 +307,7 @@ private void NodeActionLoop
         (
             NodeLoopExecutionMode executionMode,
             int handleId,
-            BuildResult [] buildResults
+            BuildResult[] buildResults
         )
         {
             // Create an array of event to the node thread responds
@@ -499,7 +499,7 @@ internal void WaitForResults
         (
             int handleId,
             BuildResult[] buildResults,
-            BuildRequest [] buildRequests
+            BuildRequest[] buildRequests
         )
         {
             TaskWorkerThread workerThread = GetWorkerThreadForHandleId(handleId);
@@ -519,7 +519,7 @@ BuildRequest [] buildRequests
         }
 
 
-        internal int [] GetWaitingTasksData(List<BuildRequest[]> outstandingRequests)
+        internal int[] GetWaitingTasksData(List<BuildRequest[]> outstandingRequests)
         {
             int[] waitingTasksArray;
             lock (waitingTasks)
diff --git a/src/Deprecated/Engine/Introspector/NodeStatus.cs b/src/Deprecated/Engine/Introspector/NodeStatus.cs
index f615afc8dc9..c301902723d 100644
--- a/src/Deprecated/Engine/Introspector/NodeStatus.cs
+++ b/src/Deprecated/Engine/Introspector/NodeStatus.cs
@@ -179,7 +179,7 @@ internal int QueueDepth
         /// <summary>
         /// The state of the targets which are in progress on the node
         /// </summary>
-        internal TargetInProgessState [] StateOfInProgressTargets
+        internal TargetInProgessState[] StateOfInProgressTargets
         {
             get
             {
diff --git a/src/Deprecated/Engine/Introspector/TargetInProgressState.cs b/src/Deprecated/Engine/Introspector/TargetInProgressState.cs
index 114ac3532b9..32d36a88223 100644
--- a/src/Deprecated/Engine/Introspector/TargetInProgressState.cs
+++ b/src/Deprecated/Engine/Introspector/TargetInProgressState.cs
@@ -27,7 +27,7 @@ internal TargetInProgessState
             Target target, 
             List<ProjectBuildState> waitingBuildStates,
             ProjectBuildState initiatingRequest,
-            BuildRequest [] outstandingBuildRequests,
+            BuildRequest[] outstandingBuildRequests,
             string projectName
         )
         {
@@ -306,7 +306,7 @@ ProjectBuildState projectBuildState
         BuildRequest[] outstandingBuildRequests;
         // Mapping between list of build requests waiting on the current target and targets
         // from which these build reuquests originated
-        TargetIdWrapper [] parentTargetsForBuildRequests;
+        TargetIdWrapper[] parentTargetsForBuildRequests;
         // Name of the project containing the target (only used for logging)
         string projectName;
         // Set to true if the target had a been requested by host (direct requests from host only occur on
diff --git a/src/Deprecated/Engine/LocalProvider/LocalCallDescriptor.cs b/src/Deprecated/Engine/LocalProvider/LocalCallDescriptor.cs
index 01f0f7a78e2..cd46a1a3371 100644
--- a/src/Deprecated/Engine/LocalProvider/LocalCallDescriptor.cs
+++ b/src/Deprecated/Engine/LocalProvider/LocalCallDescriptor.cs
@@ -266,7 +266,7 @@ internal LocalCallDescriptorForPostBuildRequests()
         {
         }
 
-        internal LocalCallDescriptorForPostBuildRequests(BuildRequest [] buildRequests)
+        internal LocalCallDescriptorForPostBuildRequests(BuildRequest[] buildRequests)
             :base(LocalCallType.PostBuildRequests)
         {
             this.buildRequests = buildRequests;
diff --git a/src/Deprecated/Engine/Logging/ConsoleLogger.cs b/src/Deprecated/Engine/Logging/ConsoleLogger.cs
index e772b01690a..aeb3b11dbe0 100644
--- a/src/Deprecated/Engine/Logging/ConsoleLogger.cs
+++ b/src/Deprecated/Engine/Logging/ConsoleLogger.cs
@@ -111,7 +111,7 @@ private void InitializeBaseConsoleLogger()
                 bool useMPLogger = false;
                 if (!string.IsNullOrEmpty(parameters))
                 {
-                    string [] parameterComponents = parameters.Split(BaseConsoleLogger.parameterDelimiters);
+                    string[] parameterComponents = parameters.Split(BaseConsoleLogger.parameterDelimiters);
                     for (int param = 0; param < parameterComponents.Length; param++)
                     {
                         if (parameterComponents[param].Length > 0)
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index ae95d608193..47dbc0cae32 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -210,7 +210,7 @@ private static void HandleConfigurationException(Exception ex)
         [MTAThread]
         public static int Main(
 #if !FEATURE_GET_COMMANDLINE
-            string [] args
+            string[] args
 #endif
             )
         {
@@ -480,7 +480,7 @@ public static ExitType Execute(
 #if FEATURE_GET_COMMANDLINE
             string commandLine
 #else
-            string [] commandLine
+            string[] commandLine
 #endif
             )
         {
@@ -1613,7 +1613,7 @@ private static void GatherAllSwitches(
 #if FEATURE_GET_COMMANDLINE
             string commandLine,
 #else
-            string [] commandLine,
+            string[] commandLine,
 #endif
             out CommandLineSwitches switchesFromAutoResponseFile, out CommandLineSwitches switchesNotFromAutoResponseFile)
         {
diff --git a/src/Tasks/CombineXmlElements.cs b/src/Tasks/CombineXmlElements.cs
index 214207b1b6e..4ea4b446c82 100644
--- a/src/Tasks/CombineXmlElements.cs
+++ b/src/Tasks/CombineXmlElements.cs
@@ -19,7 +19,7 @@ public class CombineXmlElements : TaskExtension
         /// <summary>
         /// The XML elements to include as children of the root element
         /// </summary>
-        public ITaskItem [] XmlElements { get; set; }
+        public ITaskItem[] XmlElements { get; set; }
 
         /// <summary>
         /// The generated XML
