diff --git a/src/Build/Instance/TaskFactories/AssemblyTaskFactory.cs b/src/Build/Instance/TaskFactories/AssemblyTaskFactory.cs
index 081f0030206..df336e05523 100644
--- a/src/Build/Instance/TaskFactories/AssemblyTaskFactory.cs
+++ b/src/Build/Instance/TaskFactories/AssemblyTaskFactory.cs
@@ -297,7 +297,7 @@ string taskProjectFile
                 // If the user requested a task host but provided us with an assembly name rather than an assembly file, pretend they didn't.
                 // Finding the path to the assembly file the runtime would load without actually loading the assembly would likely be a bug farm.
                 // Also, this should be a very unusual case.
-                _typeInformation = _typeLoader.Load(taskName, loadInfo, taskHostFactoryExplicitlyRequested && (loadInfo.AssemblyFile is not null || loadInfo.AssemblyName.StartsWith("Microsoft.Build")), out TypeLoader.TaskRuntimeInformation runtimeInformation);
+                _typeInformation = _typeLoader.Load(taskName, loadInfo, taskHostFactoryExplicitlyRequested && (loadInfo.AssemblyFile is not null || loadInfo.AssemblyName.StartsWith("Microsoft.Build")), out TaskRuntimeInformation runtimeInformation);
                 _taskHostFactoryExplicitlyRequested = runtimeInformation.TaskHostNeeded;
                 if (runtimeInformation.Architecture is not null)
                 {
@@ -305,6 +305,12 @@ string taskProjectFile
                     taskFactoryIdentityParameters[XMakeAttributes.architecture] = runtimeInformation.Architecture;
                     _factoryIdentityParameters = taskFactoryIdentityParameters;
                 }
+                if (runtimeInformation.Runtime is not null)
+                {
+                    taskFactoryIdentityParameters ??= new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase);
+                    taskFactoryIdentityParameters[XMakeAttributes.runtime] = runtimeInformation.Runtime;
+                    _factoryIdentityParameters = taskFactoryIdentityParameters;
+                }
 
                 // If the user specifically requests a code task factory, and the type wasn't already loaded, we need a way to verify that it really found a matching type. Properties is an array, so it should never be null,
                 // though it could be an empty array.
diff --git a/src/Shared/Resources/Strings.shared.resx b/src/Shared/Resources/Strings.shared.resx
index 4a2ab0dd185..71d77481bbc 100644
--- a/src/Shared/Resources/Strings.shared.resx
+++ b/src/Shared/Resources/Strings.shared.resx
@@ -278,10 +278,18 @@
     <value>MSB5028: Solution filter file at "{0}" includes project "{1}" that is not in the solution file at "{2}".</value>
     <comment>{StrBegin="MSB5028: "}UE: The project filename is provided separately to loggers.</comment>
   </data>
+  <data name="Shared.CurrentRuntimeDoesNotMatchTask">
+    <value>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</value>
+    <comment>{StrBegin="MSB5029: "}</comment>
+  </data>
+  <data name="Shared.32BitTaskOnCore">
+    <value>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</value>
+    <comment>{StrBegin="MSB5030: "}</comment>
+  </data>
   <!--
         The shared message bucket is: MSB5001 - MSB5999
 
-        Next message code should be MSB5029
+        Next message code should be MSB5031
 
         Some unused codes which can also be reused (because their messages were deleted, and UE hasn't indexed the codes yet):
             <none>
diff --git a/src/Shared/Resources/xlf/Strings.shared.cs.xlf b/src/Shared/Resources/xlf/Strings.shared.cs.xlf
index 80de31cf354..885b89ae0e3 100644
--- a/src/Shared/Resources/xlf/Strings.shared.cs.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.cs.xlf
@@ -60,6 +60,16 @@
         <target state="translated">Nástroj MSBuild očekává platný objekt {0}.</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">Cesta: {0} překračuje maximální limit pro cestu k OS. Plně kvalifikovaný název souboru musí být kratší než {1} znaků.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.de.xlf b/src/Shared/Resources/xlf/Strings.shared.de.xlf
index 28e73b49c1a..b61d8bbb241 100644
--- a/src/Shared/Resources/xlf/Strings.shared.de.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.de.xlf
@@ -60,6 +60,16 @@
         <target state="translated">MSBuild erwartet ein gültiges {0}-Objekt.</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">Der Pfad "{0}" überschreitet das maximale Pfadlimit des Betriebssystems. Der vollqualifizierte Dateiname muss weniger als {1} Zeichen umfassen.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.es.xlf b/src/Shared/Resources/xlf/Strings.shared.es.xlf
index 332d51f7961..8a72bd1795e 100644
--- a/src/Shared/Resources/xlf/Strings.shared.es.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.es.xlf
@@ -60,6 +60,16 @@
         <target state="translated">MSBuild espera un objeto "{0}" válido.</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">La ruta de acceso {0} supera el límite máximo para la ruta de acceso del sistema operativo. El nombre de archivo completo debe ser inferior a {1} caracteres.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.fr.xlf b/src/Shared/Resources/xlf/Strings.shared.fr.xlf
index 98d0ecd2344..7ac8f07f5f3 100644
--- a/src/Shared/Resources/xlf/Strings.shared.fr.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.fr.xlf
@@ -60,6 +60,16 @@
         <target state="translated">MSBuild attend un objet "{0}" valide.</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">Le chemin {0} dépasse la limite maximale de chemin du système d'exploitation. Le nom du fichier qualifié complet doit contenir moins de {1} caractères.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.it.xlf b/src/Shared/Resources/xlf/Strings.shared.it.xlf
index 31c10bd56ca..fd5368b449c 100644
--- a/src/Shared/Resources/xlf/Strings.shared.it.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.it.xlf
@@ -60,6 +60,16 @@
         <target state="translated">MSBuild prevede un oggetto "{0}" valido.</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">Il percorso {0} supera il limite massimo dei percorsi del sistema operativo. Il nome completo del file deve essere composto da meno di {1}.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.ja.xlf b/src/Shared/Resources/xlf/Strings.shared.ja.xlf
index 762d7780a9b..fd774cde7ec 100644
--- a/src/Shared/Resources/xlf/Strings.shared.ja.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.ja.xlf
@@ -60,6 +60,16 @@
         <target state="translated">MSBuild は有効な "{0}" オブジェクトを必要としています。</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">パス: {0} は OS のパスの上限を越えています。完全修飾のファイル名は {1} 文字以下にする必要があります。</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.ko.xlf b/src/Shared/Resources/xlf/Strings.shared.ko.xlf
index 7cd5d631a66..a4e1c2b365b 100644
--- a/src/Shared/Resources/xlf/Strings.shared.ko.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.ko.xlf
@@ -60,6 +60,16 @@
         <target state="translated">MSBuild에 올바른 "{0}" 개체가 필요합니다.</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">경로: {0}은(는) OS 최대 경로 제한을 초과합니다. 정규화된 파일 이름은 {1}자 이하여야 합니다.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.pl.xlf b/src/Shared/Resources/xlf/Strings.shared.pl.xlf
index 3755284c24a..328277ac4cf 100644
--- a/src/Shared/Resources/xlf/Strings.shared.pl.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.pl.xlf
@@ -60,6 +60,16 @@
         <target state="translated">Program MSBuild oczekuje prawidłowego obiektu „{0}”.</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">Ścieżka: {0} przekracza limit maksymalnej długości ścieżki w systemie operacyjnym. W pełni kwalifikowana nazwa pliku musi się składać z mniej niż {1} znaków.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.pt-BR.xlf b/src/Shared/Resources/xlf/Strings.shared.pt-BR.xlf
index 6fd1b77903b..2ce21e0b3db 100644
--- a/src/Shared/Resources/xlf/Strings.shared.pt-BR.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.pt-BR.xlf
@@ -60,6 +60,16 @@
         <target state="translated">O MSBuild está esperando um objeto "{0}" válido.</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">Caminho: {0} excede o limite máximo do caminho do SO. O nome do arquivo totalmente qualificado deve ter menos de {1} caracteres.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.ru.xlf b/src/Shared/Resources/xlf/Strings.shared.ru.xlf
index 3570539b1f8..b2b9a2dc50d 100644
--- a/src/Shared/Resources/xlf/Strings.shared.ru.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.ru.xlf
@@ -60,6 +60,16 @@
         <target state="translated">Для MSBuild требуется допустимый объект "{0}".</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">Длина пути {0} превышает максимально допустимую в ОС. Символов в полном имени файла должно быть не больше {1}.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.tr.xlf b/src/Shared/Resources/xlf/Strings.shared.tr.xlf
index d6831788b90..b8b3070ab8e 100644
--- a/src/Shared/Resources/xlf/Strings.shared.tr.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.tr.xlf
@@ -60,6 +60,16 @@
         <target state="translated">MSBuild, geçerli bir "{0}" nesnesi bekliyor.</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">Yol: {0}, işletim sisteminin en yüksek yol sınırını aşıyor. Tam dosya adı en fazla {1} karakter olmalıdır.</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.zh-Hans.xlf b/src/Shared/Resources/xlf/Strings.shared.zh-Hans.xlf
index b5468e75bcb..401dc34df3a 100644
--- a/src/Shared/Resources/xlf/Strings.shared.zh-Hans.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.zh-Hans.xlf
@@ -60,6 +60,16 @@
         <target state="translated">MSBuild 需要有效的“{0}”对象。</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">路径: {0} 超过 OS 最大路径限制。完全限定的文件名必须少于 {1} 个字符。</target>
diff --git a/src/Shared/Resources/xlf/Strings.shared.zh-Hant.xlf b/src/Shared/Resources/xlf/Strings.shared.zh-Hant.xlf
index 893e286184a..32c0a650160 100644
--- a/src/Shared/Resources/xlf/Strings.shared.zh-Hant.xlf
+++ b/src/Shared/Resources/xlf/Strings.shared.zh-Hant.xlf
@@ -60,6 +60,16 @@
         <target state="translated">MSBuild 需要有效的 "{0}" 物件。</target>
         <note />
       </trans-unit>
+      <trans-unit id="Shared.32BitTaskOnCore">
+        <source>MSB5030: .NET Core MSBuild does not support 32-bit tasks.</source>
+        <target state="new">MSB5030: .NET Core MSBuild does not support 32-bit tasks.</target>
+        <note>{StrBegin="MSB5030: "}</note>
+      </trans-unit>
+      <trans-unit id="Shared.CurrentRuntimeDoesNotMatchTask">
+        <source>MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</source>
+        <target state="new">MSB5029: The '{0}' task was built for {1}, but MSBuild in use targets {2}. MSBuild does not support building tasks across frameworks.</target>
+        <note>{StrBegin="MSB5029: "}</note>
+      </trans-unit>
       <trans-unit id="Shared.PathTooLong">
         <source>Path: {0} exceeds the OS max path limit. The fully qualified file name must be less than {1} characters.</source>
         <target state="translated">路徑: {0} 超過 OS 路徑上限。完整檔案名稱必須少於 {1} 個字元。</target>
diff --git a/src/Shared/TypeLoader.cs b/src/Shared/TypeLoader.cs
index a9e0d7de8ad..a151f0405ca 100644
--- a/src/Shared/TypeLoader.cs
+++ b/src/Shared/TypeLoader.cs
@@ -14,17 +14,24 @@
 using System.Reflection.Metadata.Ecma335;
 using System.Reflection.PortableExecutable;
 using System.Runtime.InteropServices;
+using System.Runtime.Versioning;
 #if !NETFRAMEWORK
 using System.Runtime.Loader;
 #endif
 using System.Threading;
-using Microsoft.Build.BackEnd;
 using Microsoft.Build.Framework;
 
 #nullable disable
 
 namespace Microsoft.Build.Shared
 {
+    internal struct TaskRuntimeInformation
+    {
+        public bool TaskHostNeeded;
+        public string Architecture;
+        public string Runtime;
+    }
+
     /// <summary>
     /// This class is used to load types from their assemblies.
     /// </summary>
@@ -321,14 +328,74 @@ internal TypeInformation GetLoadedTypeByTypeName(string typeName, bool taskHostF
                 ErrorUtilities.VerifyThrowArgumentNull(typeName, nameof(typeName));
 
                 runtimeInformation = new() { TaskHostNeeded = taskHostFactoryExplicitlyRequested };
-                if (!taskHostFactoryExplicitlyRequested && _assemblyLoadInfo.AssemblyFile is not null)
+                if (_assemblyLoadInfo.AssemblyFile is not null)
                 {
-                    ProcessorArchitecture taskArch = AssemblyName.GetAssemblyName(_assemblyLoadInfo.AssemblyFile).ProcessorArchitecture;
-                    bool msbuildIs64Bit = RuntimeInformation.ProcessArchitecture == Architecture.X64;
-                    runtimeInformation.TaskHostNeeded = msbuildIs64Bit ? Required32Bit(taskArch) : Required64Bit(taskArch);
-                    if (runtimeInformation.TaskHostNeeded)
+                    using (FileStream stream = File.OpenRead(_assemblyLoadInfo.AssemblyFile))
+                    using (PEReader reader = new(stream))
                     {
-                        runtimeInformation.Architecture = msbuildIs64Bit ? "x86" : "x64";
+                        MetadataReader metadataReader = reader.GetMetadataReader();
+                        AssemblyDefinition assemblyDef = metadataReader.GetAssemblyDefinition();
+                        string targetFramework = null;
+                        foreach (CustomAttributeHandle attrHandle in assemblyDef.GetCustomAttributes())
+                        {
+                            CustomAttribute attr = metadataReader.GetCustomAttribute(attrHandle);
+                            if (attr.Constructor.Kind == HandleKind.MemberReference && metadataReader.GetString(metadataReader.GetTypeReference((TypeReferenceHandle)metadataReader.GetMemberReference((MemberReferenceHandle)attr.Constructor).Parent).Name).Equals("TargetFrameworkAttribute"))
+                            {
+                                BlobReader blobReader = metadataReader.GetBlobReader(attr.Value);
+                                blobReader.ReadInt16();
+                                targetFramework = blobReader.ReadSerializedString();
+                                break;
+                            }
+                        }
+
+                        Attribute msbuildFramework = Assembly.GetExecutingAssembly().GetCustomAttribute(typeof(TargetFrameworkAttribute));
+                        bool netcoremsbuild = msbuildFramework is not null && msbuildFramework is TargetFrameworkAttribute tfa && !tfa.FrameworkDisplayName.Contains("Framework");
+                        if (targetFramework is not null)
+                        {
+                            if (netcoremsbuild)
+                            {
+                                if (targetFramework.Contains("Framework"))
+                                {
+                                    runtimeInformation.Runtime = targetFramework.Contains("4.") ?
+                                        XMakeAttributes.MSBuildRuntimeValues.clr4 :
+                                        XMakeAttributes.MSBuildRuntimeValues.clr2;
+                                }
+                            }
+                            else
+                            {
+                                if (!targetFramework.Contains("Framework"))
+                                {
+                                    runtimeInformation.Runtime = XMakeAttributes.MSBuildRuntimeValues.net;
+                                }
+                            }
+                        }
+
+                        if (runtimeInformation.Runtime is not null)
+                        {
+                            ErrorUtilities.ThrowArgument("Shared.CurrentRuntimeDoesNotMatchTask", typeName, netcoremsbuild ? ".NET Framework" : ".NET Core", netcoremsbuild ? ".NET Core" : ".NET Framework");
+                        }
+
+                        bool msbuildIs64Bit = RuntimeInformation.ProcessArchitecture == Architecture.X64;
+                        Machine machineArch = reader.PEHeaders.CoffHeader.Machine;
+                        if (msbuildIs64Bit && Required32Bit(machineArch))
+                        {
+                            runtimeInformation.Architecture = XMakeAttributes.MSBuildArchitectureValues.x86;
+                        }
+                        else if (!msbuildIs64Bit && Required64Bit(machineArch))
+                        {
+                            runtimeInformation.Architecture = XMakeAttributes.MSBuildArchitectureValues.x64;
+                        }
+
+                        if (netcoremsbuild && runtimeInformation.Architecture == XMakeAttributes.MSBuildArchitectureValues.x86)
+                        {
+                            // Don't support automatic architecture correction on core for some reason?
+                            ErrorUtilities.ThrowArgument("Shared.32BitTaskOnCore");
+                        }
+
+                        if (runtimeInformation.Architecture is not null || runtimeInformation.Runtime is not null)
+                        {
+                            runtimeInformation.TaskHostNeeded = true;
+                        }
                     }
                 }
 
@@ -341,14 +408,14 @@ internal TypeInformation GetLoadedTypeByTypeName(string typeName, bool taskHostF
                 return typeInfo;
             }
 
-            private bool Required32Bit(ProcessorArchitecture arch)
+            private bool Required32Bit(Machine arch)
             {
-                return arch == ProcessorArchitecture.X86 || arch == ProcessorArchitecture.Arm;
+                return arch == Machine.AM33 || arch == Machine.Arm || arch == Machine.ArmThumb2 || arch == Machine.I386 || arch == Machine.Alpha || arch == Machine.M32R;
             }
 
-            private bool Required64Bit(ProcessorArchitecture arch)
+            private bool Required64Bit(Machine arch)
             {
-                return arch == ProcessorArchitecture.IA64 || arch == ProcessorArchitecture.Amd64;
+                return arch == Machine.Amd64 || arch == Machine.Arm64 || arch == Machine.IA64 || arch == Machine.Alpha64;
             }
 
             /// <summary>
@@ -758,11 +825,5 @@ public string GetTypeFromSpecification(MetadataReader reader, object genericCont
                 return new SignatureDecoder<string, object>(Instance, reader, genericContext).DecodeType(ref sigReader);
             }
         }
-
-        internal struct TaskRuntimeInformation
-        {
-            public string Architecture;
-            public bool TaskHostNeeded;
-        }
     }
 }
