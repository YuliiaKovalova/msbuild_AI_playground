diff --git a/src/Build.UnitTests/BackEnd/LogWarningReturnHasLoggedError.cs b/src/Build.UnitTests/BackEnd/LogWarningReturnHasLoggedError.cs
new file mode 100644
index 00000000000..f2462d2901c
--- /dev/null
+++ b/src/Build.UnitTests/BackEnd/LogWarningReturnHasLoggedError.cs
@@ -0,0 +1,28 @@
+ï»¿// Copyright (c) Microsoft. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+
+using Microsoft.Build.Framework;
+using Microsoft.Build.Utilities;
+namespace Microsoft.Build.UnitTests
+{
+    /// <summary>
+    /// This task was created for https://github.com/microsoft/msbuild/issues/2036
+    /// </summary>
+    public class LogWarningReturnHasLoggedError : Task
+    {
+        [Required]
+        public string WarningCode { get; set; }
+
+        /// <summary>
+        /// Log a warning and return whether or not the TaskLoggingHelper knows it was turned into an error.
+        /// </summary>
+        /// <returns></returns>
+        public override bool Execute()
+        {
+            Log.LogWarning(null, WarningCode, null, null, 0, 0, 0, 0, "Warning Logged!", null);
+
+            // This is what tasks should return by default.
+            return !Log.HasLoggedErrors;
+        }
+    }
+}
diff --git a/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs b/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs
index eb56df3a007..7d39bdfcc22 100644
--- a/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs
+++ b/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs
@@ -272,6 +272,28 @@ private string GetTestProject(bool? treatAllWarningsAsErrors = null, string warn
             </Project>";
         }
 
+        [Fact]
+        public void WarningsAsErrors_ExpectTaskFailureWhenLoggingWarningAsError()
+        {
+            using (TestEnvironment env = TestEnvironment.Create(_output))
+            {
+                TransientTestProjectWithFiles proj = env.CreateTestProjectWithFiles($@"
+                <Project>
+                    <UsingTask TaskName = ""LogWarningReturnHasLoggedError"" AssemblyName=""Microsoft.Build.Engine.UnitTests""/>
+                    <PropertyGroup>
+                        <MSBuildWarningsAsErrors>MSB1234</MSBuildWarningsAsErrors>
+                    </PropertyGroup>
+                    <Target Name='Build'>
+                        <LogWarningReturnHasLoggedError WarningCode=""MSB1234""/>
+                    </Target>
+                </Project>");
+
+                MockLogger logger = proj.BuildProjectExpectFailure();
+
+                logger.AssertLogContains("Build FAILED");
+            }
+        }
+
         [Fact]
         public void TaskReturnsFailureButDoesNotLogError_ShouldCauseBuildFailure()
         {
