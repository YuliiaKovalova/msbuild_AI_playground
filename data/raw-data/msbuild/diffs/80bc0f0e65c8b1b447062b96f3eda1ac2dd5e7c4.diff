diff --git a/src/Tasks.UnitTests/AssignCulture_Tests.cs b/src/Tasks.UnitTests/AssignCulture_Tests.cs
index a49b4196d8c..b34919a8556 100644
--- a/src/Tasks.UnitTests/AssignCulture_Tests.cs
+++ b/src/Tasks.UnitTests/AssignCulture_Tests.cs
@@ -300,8 +300,11 @@ private static void TestValidCulture(string culture)
         [InlineData("@")]
         [InlineData("\U0001F4A5")]
         [InlineData("xx")]
+        [InlineData("xxx")]
         [InlineData("yy")]
+        [InlineData("yyy")]
         [InlineData("zz")]
+        [InlineData("zzz")]
         public void InvalidCulture(string culture)
         {
             AssignCulture t = new AssignCulture();
diff --git a/src/Tasks/CultureInfoCache.cs b/src/Tasks/CultureInfoCache.cs
index 93449f12cea..3fc4c546e15 100644
--- a/src/Tasks/CultureInfoCache.cs
+++ b/src/Tasks/CultureInfoCache.cs
@@ -27,7 +27,9 @@ internal static bool IsValidCultureString(string name)
             try
             {
                 var culture = CultureInfo.GetCultureInfo(name);
-                return culture.LCID != LocaleCustomUnspecified || culture.ThreeLetterISOLanguageName.Length == 3;
+                // On .NET Core, unknown cultures don't have a ThreeLetterISOLanguageName (empty string)
+                // On .NET Framework, unknown cultures have a ThreeLetterISOLanguageName but their NativeName is Unknown Language (...)
+                return culture.LCID != LocaleCustomUnspecified || (culture.ThreeLetterISOLanguageName.Length == 3 && culture.NativeName != $"Unknown Language ({name})");
             }
             catch (CultureNotFoundException)
             {
