diff --git a/src/Build/Construction/ProjectElement.cs b/src/Build/Construction/ProjectElement.cs
index 2bd5e6478d3..8327feda09e 100644
--- a/src/Build/Construction/ProjectElement.cs
+++ b/src/Build/Construction/ProjectElement.cs
@@ -282,13 +282,6 @@ internal set
         /// </summary>
         public ElementLocation LabelLocation => GetAttributeLocation(XMakeAttributes.label);
 
-
-        /// <summary>
-        /// Location of the "Condition" attribute on this element, if any.
-        /// If there is no such attribute, returns null.
-        /// </summary>
-        public virtual ElementLocation SdkOptionsLocation => GetAttributeLocation(XMakeAttributes.sdkOptions);
-
         /// <summary>
         /// Location of the corresponding Xml element.
         /// May not be correct if file is not saved, or 
diff --git a/src/Build/Construction/ProjectImportElement.cs b/src/Build/Construction/ProjectImportElement.cs
index 199d9eeeed0..fd845c90b44 100644
--- a/src/Build/Construction/ProjectImportElement.cs
+++ b/src/Build/Construction/ProjectImportElement.cs
@@ -127,6 +127,11 @@ public string SdkOptions
         /// </summary>
         public ElementLocation SdkLocation => GetAttributeLocation(XMakeAttributes.sdk);
 
+        /// <summary>
+        /// Location of the Options attribute
+        /// </summary>
+        public ElementLocation SdkOptionsLocation => GetAttributeLocation(XMakeAttributes.sdkOptions);
+
         /// <summary>
         /// Gets the <see cref="ImplicitImportLocation"/> of the import.  This indicates if the import was implicitly
         /// added because of the <see cref="ProjectRootElement.Sdk"/> attribute and the location where the project was
diff --git a/src/Build/Evaluation/ProjectParser.cs b/src/Build/Evaluation/ProjectParser.cs
index 186ed1ddf4c..88bb7aa971a 100644
--- a/src/Build/Evaluation/ProjectParser.cs
+++ b/src/Build/Evaluation/ProjectParser.cs
@@ -41,7 +41,7 @@ internal class ProjectParser
         /// <summary>
         /// Valid attributes on import element
         /// </summary>
-        private static readonly HashSet<string> ValidAttributesOnImport = new HashSet<string> { XMakeAttributes.condition, XMakeAttributes.label, XMakeAttributes.project, XMakeAttributes.sdk, XMakeAttributes.sdkVersion, XMakeAttributes.sdkMinimumVersion };
+        private static readonly HashSet<string> ValidAttributesOnImport = new HashSet<string> { XMakeAttributes.condition, XMakeAttributes.label, XMakeAttributes.project, XMakeAttributes.sdk, XMakeAttributes.sdkVersion, XMakeAttributes.sdkMinimumVersion, XMakeAttributes.sdkOptions };
 
         /// <summary>
         /// Valid attributes on usingtask element
diff --git a/src/Build/PublicAPI/net/PublicAPI.Shipped.txt b/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
index 7b51af24c2f..2f186dac84a 100644
--- a/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
+++ b/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
@@ -263,6 +263,9 @@ Microsoft.Build.Construction.ProjectImportElement.ProjectLocation.get -> Microso
 Microsoft.Build.Construction.ProjectImportElement.Sdk.get -> string
 Microsoft.Build.Construction.ProjectImportElement.Sdk.set -> void
 Microsoft.Build.Construction.ProjectImportElement.SdkLocation.get -> Microsoft.Build.Construction.ElementLocation
+Microsoft.Build.Construction.ProjectImportElement.SdkOptions.get -> string
+Microsoft.Build.Construction.ProjectImportElement.SdkOptions.set -> void
+Microsoft.Build.Construction.ProjectImportElement.SdkOptionsLocation.get -> Microsoft.Build.Construction.ElementLocation
 Microsoft.Build.Construction.ProjectImportElement.Version.get -> string
 Microsoft.Build.Construction.ProjectImportElement.Version.set -> void
 Microsoft.Build.Construction.ProjectImportGroupElement
@@ -1819,4 +1822,4 @@ virtual Microsoft.Build.Logging.ConfigurableForwardingLogger.Shutdown() -> void
 virtual Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
 virtual Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
 virtual Microsoft.Build.Logging.ConsoleLogger.Shutdown() -> void
-virtual Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.Disconnected(Microsoft.Build.Evaluation.ProjectCollection collection) -> void
\ No newline at end of file
+virtual Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.Disconnected(Microsoft.Build.Evaluation.ProjectCollection collection) -> void
diff --git a/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt
index eb03a4d60f0..4e5e9a88530 100644
--- a/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ b/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt
@@ -263,6 +263,9 @@ Microsoft.Build.Construction.ProjectImportElement.ProjectLocation.get -> Microso
 Microsoft.Build.Construction.ProjectImportElement.Sdk.get -> string
 Microsoft.Build.Construction.ProjectImportElement.Sdk.set -> void
 Microsoft.Build.Construction.ProjectImportElement.SdkLocation.get -> Microsoft.Build.Construction.ElementLocation
+Microsoft.Build.Construction.ProjectImportElement.SdkOptions.get -> string
+Microsoft.Build.Construction.ProjectImportElement.SdkOptions.set -> void
+Microsoft.Build.Construction.ProjectImportElement.SdkOptionsLocation.get -> Microsoft.Build.Construction.ElementLocation
 Microsoft.Build.Construction.ProjectImportElement.Version.get -> string
 Microsoft.Build.Construction.ProjectImportElement.Version.set -> void
 Microsoft.Build.Construction.ProjectImportGroupElement
@@ -1816,4 +1819,4 @@ virtual Microsoft.Build.Logging.ConfigurableForwardingLogger.Shutdown() -> void
 virtual Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
 virtual Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
 virtual Microsoft.Build.Logging.ConsoleLogger.Shutdown() -> void
-virtual Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.Disconnected(Microsoft.Build.Evaluation.ProjectCollection collection) -> void
\ No newline at end of file
+virtual Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.Disconnected(Microsoft.Build.Evaluation.ProjectCollection collection) -> void
diff --git a/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt b/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt
index 4ba35aaf1b9..0d7ecf7d69e 100644
--- a/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt
+++ b/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt
@@ -434,6 +434,8 @@ Microsoft.Build.Framework.SdkResolver
 Microsoft.Build.Framework.SdkResolver.SdkResolver() -> void
 Microsoft.Build.Framework.SdkResolverContext
 Microsoft.Build.Framework.SdkResolverContext.SdkResolverContext() -> void
+Microsoft.Build.Framework.SdkResolverContext2
+Microsoft.Build.Framework.SdkResolverContext2.SdkResolverContext2() -> void
 Microsoft.Build.Framework.SdkResult
 Microsoft.Build.Framework.SdkResult.SdkResult() -> void
 Microsoft.Build.Framework.SdkResultFactory
@@ -899,6 +901,8 @@ virtual Microsoft.Build.Framework.SdkResolverContext.SolutionFilePath.get -> str
 virtual Microsoft.Build.Framework.SdkResolverContext.SolutionFilePath.set -> void
 virtual Microsoft.Build.Framework.SdkResolverContext.State.get -> object
 virtual Microsoft.Build.Framework.SdkResolverContext.State.set -> void
+virtual Microsoft.Build.Framework.SdkResolverContext2.Options.get -> string
+virtual Microsoft.Build.Framework.SdkResolverContext2.Options.set -> void
 virtual Microsoft.Build.Framework.SdkResult.AdditionalPaths.get -> System.Collections.Generic.IList<string>
 virtual Microsoft.Build.Framework.SdkResult.AdditionalPaths.set -> void
 virtual Microsoft.Build.Framework.SdkResult.ItemsToAdd.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem>
diff --git a/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt
index 49f59b81603..b04b45e4273 100644
--- a/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ b/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt
@@ -434,6 +434,8 @@ Microsoft.Build.Framework.SdkResolver
 Microsoft.Build.Framework.SdkResolver.SdkResolver() -> void
 Microsoft.Build.Framework.SdkResolverContext
 Microsoft.Build.Framework.SdkResolverContext.SdkResolverContext() -> void
+Microsoft.Build.Framework.SdkResolverContext2
+Microsoft.Build.Framework.SdkResolverContext2.SdkResolverContext2() -> void
 Microsoft.Build.Framework.SdkResult
 Microsoft.Build.Framework.SdkResult.SdkResult() -> void
 Microsoft.Build.Framework.SdkResultFactory
@@ -614,6 +616,8 @@ virtual Microsoft.Build.Framework.SdkResolverContext.SolutionFilePath.get -> str
 virtual Microsoft.Build.Framework.SdkResolverContext.SolutionFilePath.set -> void
 virtual Microsoft.Build.Framework.SdkResolverContext.State.get -> object
 virtual Microsoft.Build.Framework.SdkResolverContext.State.set -> void
+virtual Microsoft.Build.Framework.SdkResolverContext2.Options.get -> string
+virtual Microsoft.Build.Framework.SdkResolverContext2.Options.set -> void
 virtual Microsoft.Build.Framework.SdkResult.AdditionalPaths.get -> System.Collections.Generic.IList<string>
 virtual Microsoft.Build.Framework.SdkResult.AdditionalPaths.set -> void
 virtual Microsoft.Build.Framework.SdkResult.ItemsToAdd.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem>
diff --git a/src/Framework/SdkResolverContext2.cs b/src/Framework/Sdk/SdkResolverContext2.cs
similarity index 100%
rename from src/Framework/SdkResolverContext2.cs
rename to src/Framework/Sdk/SdkResolverContext2.cs
