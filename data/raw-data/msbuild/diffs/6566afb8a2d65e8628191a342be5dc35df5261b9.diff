diff --git a/Directory.Build.props b/Directory.Build.props
index dee0ac77c19..822fcaae8fe 100644
--- a/Directory.Build.props
+++ b/Directory.Build.props
@@ -72,8 +72,9 @@
     <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
   </PropertyGroup>
 
+  <!-- Disable SDK supplied netanalyzers as we reference them from nugets instead -->
   <PropertyGroup>
-    <EnableAnalyzers>true</EnableAnalyzers>
+    <EnableNetAnalyzers>false</EnableNetAnalyzers>
   </PropertyGroup>
   
 </Project>
diff --git a/eng/Common.globalconfig b/eng/Common.globalconfig
index 555b27b6841..01487487b99 100644
--- a/eng/Common.globalconfig
+++ b/eng/Common.globalconfig
@@ -6,7 +6,7 @@ is_global = true
 
 
 # Analyzer threw an exception
-dotnet_diagnostic.AD0001.severity = warning
+dotnet_diagnostic.AD0001.severity = suggestion
 
 # Ensure minimum API surface is respected
 dotnet_diagnostic.BCL0001.severity = warning
@@ -282,7 +282,7 @@ dotnet_diagnostic.CA1824.severity = warning
 dotnet_diagnostic.CA1825.severity = suggestion
 
 # Do not use Count() or LongCount() when Any() can be used
-dotnet_diagnostic.CA1827.severity = warning
+dotnet_diagnostic.CA1827.severity = suggestion
 
 # Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
 dotnet_diagnostic.CA1828.severity = warning
@@ -533,19 +533,19 @@ dotnet_diagnostic.CA3012.severity = none
 dotnet_diagnostic.CA3061.severity = warning
 
 # Insecure DTD processing in XML
-dotnet_diagnostic.CA3075.severity = warning
+dotnet_diagnostic.CA3075.severity = suggestion
 
 # Insecure XSLT script processing.
-dotnet_diagnostic.CA3076.severity = warning
+dotnet_diagnostic.CA3076.severity = suggestion
 
 # Insecure Processing in API Design, XmlDocument and XmlTextReader
-dotnet_diagnostic.CA3077.severity = warning
+dotnet_diagnostic.CA3077.severity = suggestion
 
 # Mark Verb Handlers With Validate Antiforgery Token
 dotnet_diagnostic.CA3147.severity = warning
 
 # Do Not Use Weak Cryptographic Algorithms
-dotnet_diagnostic.CA5350.severity = warning
+dotnet_diagnostic.CA5350.severity = suggestion
 
 # Do Not Use Broken Cryptographic Algorithms
 dotnet_diagnostic.CA5351.severity = warning
@@ -629,7 +629,7 @@ dotnet_diagnostic.CA5382.severity = none
 dotnet_diagnostic.CA5383.severity = none
 
 # Do Not Use Digital Signature Algorithm (DSA)
-dotnet_diagnostic.CA5384.severity = warning
+dotnet_diagnostic.CA5384.severity = suggestion
 
 # Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size
 dotnet_diagnostic.CA5385.severity = warning
@@ -695,7 +695,7 @@ dotnet_diagnostic.IL3000.severity = none
 dotnet_diagnostic.IL3001.severity = none
 
 # XML comments
-dotnet_diagnostic.SA0001.severity = warning
+dotnet_diagnostic.SA0001.severity = suggestion
 
 dotnet_diagnostic.SA1000.severity = none
 
@@ -733,11 +733,17 @@ dotnet_diagnostic.SA1012.severity = suggestion
 # Closing brace should be preceded by a space
 dotnet_diagnostic.SA1013.severity = suggestion
 
+# Opening generic brackets should not be preceded by a space
+dotnet_diagnostic.SA1014.severity = suggestion
+
 # Closing generic bracket should not be followed by a space
 dotnet_diagnostic.SA1015.severity = suggestion
 
 dotnet_diagnostic.SA1019.severity = none
 
+# Increment symbol '++' should not be preceded by a space
+dotnet_diagnostic.SA1020.severity = suggestion
+
 # Negative sign should be preceded by a space
 dotnet_diagnostic.SA1021.severity = suggestion
 
@@ -884,9 +890,15 @@ dotnet_diagnostic.SA1214.severity = suggestion
 # Using static directives should be placed at the correct location
 dotnet_diagnostic.SA1216.severity = suggestion
 
+# The using static directives within a C# code file are not sorted alphabetically by full type name.
+dotnet_diagnostic.SA1217.severity = suggestion
+
 # Element should begin with an uppercase letter
 dotnet_diagnostic.SA1300.severity = suggestion
 
+# Interface names should begin with I
+dotnet_diagnostic.SA1302.severity = suggestion
+
 # Const field names should begin with upper-case letter
 dotnet_diagnostic.SA1303.severity = suggestion
 
diff --git a/eng/dependabot/Packages.props b/eng/dependabot/Packages.props
index b0a121aea92..7a00fe98d2f 100644
--- a/eng/dependabot/Packages.props
+++ b/eng/dependabot/Packages.props
@@ -11,20 +11,20 @@
     <PackageReference Update="BenchmarkDotNet" Version="0.13.1" />
     <PackageReference Update="LargeAddressAware" Version="1.0.5" />
     <PackageReference Update="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.3" />
-    <PackageReference Update="Microsoft.CodeQuality.Analyzers" Version="3.3.2" PrivateAssets="all" />
     <PackageReference Update="Microsoft.VisualStudio.SDK.EmbedInteropTypes" Version="15.0.36" />
     <PackageReference Update="Microsoft.VisualStudio.Setup.Configuration.Interop" Version="3.0.4492" />
     <PackageReference Update="PdbGit" Version="3.0.41" />
     <PackageReference Update="Shouldly" Version="3.0.0" />
-    <PackageReference Update="StyleCop.Analyzers" Version="1.2.0-beta.164" PrivateAssets="all" />
   </ItemGroup>
 
   <ItemGroup Condition="'$(DotNetBuildFromSource)' != 'true'">
     <GlobalPackageReference Include="Microsoft.CodeAnalysis.BannedApiAnalyzers" Version="3.3.3" />
+	<GlobalPackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="6.0.0" PrivateAssets="all" />
+	<GlobalPackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.164" PrivateAssets="all"/>
   </ItemGroup>
 
   <ItemGroup>
     <GlobalPackageReference Include="Microsoft.VisualStudio.SDK.EmbedInteropTypes" Version="15.0.36" PrivateAssets="All" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'" />
-  </ItemGroup>
+  </ItemGroup>  
 
 </Project>
