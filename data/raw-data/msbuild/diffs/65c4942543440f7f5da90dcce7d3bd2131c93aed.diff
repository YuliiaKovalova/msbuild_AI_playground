diff --git a/src/Build/Evaluation/Evaluator.cs b/src/Build/Evaluation/Evaluator.cs
index 2ffe263f1e7..5d006a452e2 100644
--- a/src/Build/Evaluation/Evaluator.cs
+++ b/src/Build/Evaluation/Evaluator.cs
@@ -268,7 +268,7 @@ private Evaluator(
             _streamImports.Add(string.Empty);
 
             // Create a FileMatcher for the given project being evaluated, evaluation context, and evaluation ID.
-            IDirectoryCache directoryCache = project.GetDirectoryCacheForEvaluation(_evaluationLoggingContext.BuildEventContext.EvaluationId);
+            IDirectoryCache directoryCache = project?.GetDirectoryCacheForEvaluation(_evaluationLoggingContext.BuildEventContext.EvaluationId);
             IFileSystem fileSystem = directoryCache is not null
                 ? new DirectoryCacheFileSystemWrapper(evaluationContext.FileSystem, directoryCache)
                 : evaluationContext.FileSystem;
diff --git a/src/Shared/FileMatcher.cs b/src/Shared/FileMatcher.cs
index 57f7ef82d9d..466ece84f00 100644
--- a/src/Shared/FileMatcher.cs
+++ b/src/Shared/FileMatcher.cs
@@ -1715,7 +1715,7 @@ bool CompareIgnoreCase(ref ReadOnlySpan<char> input, int iIndex, int pIndex)
 #endif
             {
                 char inputChar = input[iIndex];
-                char patternChar = pattern[iIndex];
+                char patternChar = pattern[pIndex];
 
                 // We will mostly be comparing ASCII characters, check English letters first.
                 char inputCharLower = (char)(inputChar | 0x20);
@@ -1770,7 +1770,7 @@ bool CompareIgnoreCase(ref ReadOnlySpan<char> input, int iIndex, int pIndex)
                                     break;
                                 }
                                 // If the tail doesn't match, we can safely return e.g. ("aaa", "*b")
-                                if (!CompareIgnoreCase(ref input, patternTailIndex, inputTailIndex) &&
+                                if (!CompareIgnoreCase(ref input, inputTailIndex, patternTailIndex) &&
                                     pattern[patternTailIndex] != '?')
                                 {
                                     return false;
