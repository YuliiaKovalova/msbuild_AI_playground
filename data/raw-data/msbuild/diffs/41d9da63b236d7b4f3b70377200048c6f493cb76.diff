diff --git a/src/Build/Logging/FileLogger.cs b/src/Build/Logging/FileLogger.cs
index 96527226118..180d58a2a08 100644
--- a/src/Build/Logging/FileLogger.cs
+++ b/src/Build/Logging/FileLogger.cs
@@ -40,7 +40,7 @@ public FileLogger()
         {
             WriteHandler = Write;
 
-            if (EncodingUtilities.GetExternalOverridenUILanguageIfSupportableWithEncoding() != null)
+            if (EncodingUtilities.GetExternalOverriddenUILanguageIfSupportableWithEncoding() != null)
             {
                 _encoding = Encoding.UTF8;
             }
diff --git a/src/Framework/EncodingUtilities.cs b/src/Framework/EncodingUtilities.cs
index 67fdcdd971c..20475ca62b7 100644
--- a/src/Framework/EncodingUtilities.cs
+++ b/src/Framework/EncodingUtilities.cs
@@ -262,8 +262,13 @@ internal static Encoding BatchFileEncoding(string contents, string encodingSpeci
         /// The custom language that was set by the user for an 'external' tool besides MSBuild.
         /// Returns <see langword="null"/> if none are set.
         /// </returns>
-        public static CultureInfo GetExternalOverridenUILanguageIfSupportableWithEncoding()
+        public static CultureInfo GetExternalOverriddenUILanguageIfSupportableWithEncoding()
         {
+            if (string.Equals(Environment.GetEnvironmentVariable("MSBUILDDISABLEDYNAMICUTFENCODING"), "true", StringComparison.OrdinalIgnoreCase))
+            {
+                return null;
+            }
+
             CultureInfo externalLanguageSetting = GetExternalOverriddenUILanguage();
             if (externalLanguageSetting != null)
             {
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 3663ba46305..15ccab46b32 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1676,7 +1676,7 @@ internal static void SetConsoleUI()
             Thread thisThread = Thread.CurrentThread;
 
             // Eliminate the complex script cultures from the language selection.
-            var desiredCulture = EncodingUtilities.GetExternalOverridenUILanguageIfSupportableWithEncoding() ?? CultureInfo.CurrentUICulture.GetConsoleFallbackUICulture();
+            var desiredCulture = EncodingUtilities.GetExternalOverriddenUILanguageIfSupportableWithEncoding() ?? CultureInfo.CurrentUICulture.GetConsoleFallbackUICulture();
             thisThread.CurrentUICulture = desiredCulture;
 
             // For full framework, both the above and below must be set. This is not true in core, but it is a no op in core.
