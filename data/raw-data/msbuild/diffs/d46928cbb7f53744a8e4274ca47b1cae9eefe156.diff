diff --git a/src/Build.UnitTests/Construction/ProjectRootElement_Tests.cs b/src/Build.UnitTests/Construction/ProjectRootElement_Tests.cs
index f456dcb2c07..4b2523f3b45 100644
--- a/src/Build.UnitTests/Construction/ProjectRootElement_Tests.cs
+++ b/src/Build.UnitTests/Construction/ProjectRootElement_Tests.cs
@@ -5,6 +5,7 @@
 using System;
 using System.Text;
 using Microsoft.Build.Construction;
+using Microsoft.Build.Evaluation;
 using Xunit;
 
 #nullable disable
@@ -120,7 +121,7 @@ public void ProjectLoadedStrippingCommentsAndWhiteSpaceIsReadOnly()
         [Fact]
         public void CreateNotDirtyCannotBeDirtied()
         {
-            var projectRootElement = ProjectRootElement.CreateNotDirty();
+            var projectRootElement = ProjectRootElement.CreateNotDirty(ProjectCollection.GlobalProjectCollection.ProjectRootElementCache);
             var versionBeforeMarkDirty = projectRootElement.Version;
 
             projectRootElement.MarkDirty("test", "test");
diff --git a/src/Build/Construction/ProjectRootElement.cs b/src/Build/Construction/ProjectRootElement.cs
index 63675c5b01c..29d67fc1f07 100644
--- a/src/Build/Construction/ProjectRootElement.cs
+++ b/src/Build/Construction/ProjectRootElement.cs
@@ -725,11 +725,11 @@ internal string LastDirtyReason
         /// The ProjectRootElement will not be marked dirty.
         /// Uses the global project collection.
         /// </summary>
-        internal static ProjectRootElement CreateNotDirty()
+        internal static ProjectRootElement CreateNotDirty(ProjectRootElementCacheBase projectRootElementCache)
         {
-            ErrorUtilities.VerifyThrowArgumentNull(ProjectCollection.GlobalProjectCollection);
+            ErrorUtilities.VerifyThrowArgumentNull(projectRootElementCache);
 
-            return new ProjectRootElement(ProjectCollection.GlobalProjectCollection.ProjectRootElementCache, Project.DefaultNewProjectTemplateOptions, true);
+            return new ProjectRootElement(projectRootElementCache, Project.DefaultNewProjectTemplateOptions, true);
         }
 
         /// <summary>
diff --git a/src/Build/Evaluation/Evaluator.cs b/src/Build/Evaluation/Evaluator.cs
index c69ca5b2455..90c45cbe0af 100644
--- a/src/Build/Evaluation/Evaluator.cs
+++ b/src/Build/Evaluation/Evaluator.cs
@@ -1917,7 +1917,7 @@ private ProjectRootElement CreateProjectForSdkResult(SdkResult sdkResult)
 
             ProjectRootElement InnerCreate(string _, ProjectRootElementCacheBase __)
             {
-                ProjectRootElement project = ProjectRootElement.CreateNotDirty();
+                ProjectRootElement project = ProjectRootElement.CreateNotDirty(_projectRootElementCache);
                 project.FullPath = projectPath;
 
                 if (sdkResult.PropertiesToAdd?.Any() == true)
