diff --git a/.editorconfig b/.editorconfig
index 5311eb964aa..322d4a2e39e 100644
--- a/.editorconfig
+++ b/.editorconfig
@@ -202,3 +202,1096 @@ end_of_line = crlf
 [src/**/*.{cs,vb}]
 # IDE0005: Remove unnecessary usings/imports
 dotnet_diagnostic.IDE0005.severity = warning
+
+
+# Microsoft.Analyzers.ManagedCodeAnalysis
+# Description: Microsoft.Analyzers.ManagedCodeAnalysis
+
+
+# Analyzer threw an exception
+dotnet_diagnostic.AD0001.severity = suggestion
+
+# Ensure minimum API surface is respected
+dotnet_diagnostic.BCL0001.severity = warning
+
+# AppContext default value expected to be true
+dotnet_diagnostic.BCL0010.severity = warning
+
+# AppContext default value defined in if statement with incorrect pattern
+dotnet_diagnostic.BCL0011.severity = warning
+
+# AppContext default value defined in if statement at root of switch case
+dotnet_diagnostic.BCL0012.severity = warning
+
+# Invalid P/Invoke call
+dotnet_diagnostic.BCL0015.severity = none
+
+# Invalid SR.Format call
+dotnet_diagnostic.BCL0020.severity = warning
+
+# Do not declare static members on generic types
+dotnet_diagnostic.CA1000.severity = none
+
+# Types that own disposable fields should be disposable
+dotnet_diagnostic.CA1001.severity = none
+
+# Do not expose generic lists
+dotnet_diagnostic.CA1002.severity = none
+
+# Use generic event handler instances
+dotnet_diagnostic.CA1003.severity = none
+
+# Avoid excessive parameters on generic types
+dotnet_diagnostic.CA1005.severity = none
+
+# Enums should have zero value
+dotnet_diagnostic.CA1008.severity = none
+
+# Generic interface should also be implemented
+dotnet_diagnostic.CA1010.severity = none
+
+# Abstract types should not have constructors
+dotnet_diagnostic.CA1012.severity = none
+
+# Mark assemblies with CLSCompliant
+dotnet_diagnostic.CA1014.severity = none
+
+# Mark assemblies with assembly version
+dotnet_diagnostic.CA1016.severity = none
+
+# Mark assemblies with ComVisible
+dotnet_diagnostic.CA1017.severity = none
+
+# Mark attributes with AttributeUsageAttribute
+dotnet_diagnostic.CA1018.severity = warning
+
+# Define accessors for attribute arguments
+dotnet_diagnostic.CA1019.severity = none
+
+# Use properties where appropriate
+dotnet_diagnostic.CA1024.severity = none
+
+# Mark enums with FlagsAttribute
+dotnet_diagnostic.CA1027.severity = none
+
+# Enum Storage should be Int32
+dotnet_diagnostic.CA1028.severity = none
+
+# Use events where appropriate
+dotnet_diagnostic.CA1030.severity = none
+
+# Do not catch general exception types
+dotnet_diagnostic.CA1031.severity = none
+
+dotnet_diagnostic.CA1032.severity = none
+
+# Interface methods should be callable by child types
+dotnet_diagnostic.CA1033.severity = none
+
+dotnet_diagnostic.CA1034.severity = none
+
+# Override methods on comparable types
+dotnet_diagnostic.CA1036.severity = none
+
+# Avoid empty interfaces
+dotnet_diagnostic.CA1040.severity = none
+
+# Provide ObsoleteAttribute message
+dotnet_diagnostic.CA1041.severity = none
+
+# Use Integral Or String Argument For Indexers
+dotnet_diagnostic.CA1043.severity = none
+
+# Properties should not be write only
+dotnet_diagnostic.CA1044.severity = none
+
+# Do not overload equality operator on reference types
+dotnet_diagnostic.CA1046.severity = none
+
+# Do not declare protected member in sealed type
+dotnet_diagnostic.CA1047.severity = warning
+
+# Declare types in namespaces
+dotnet_diagnostic.CA1050.severity = suggestion
+
+# Do not declare visible instance fields
+dotnet_diagnostic.CA1051.severity = none
+
+# Static holder types should be Static or NotInheritable
+dotnet_diagnostic.CA1052.severity = none
+
+# Uri parameters should not be strings
+dotnet_diagnostic.CA1054.severity = none
+
+# Uri return values should not be strings
+dotnet_diagnostic.CA1055.severity = none
+
+# Uri properties should not be strings
+dotnet_diagnostic.CA1056.severity = none
+
+# Types should not extend certain base types
+dotnet_diagnostic.CA1058.severity = none
+
+# Do not hide base class methods
+dotnet_diagnostic.CA1061.severity = none
+
+# Validate arguments of public methods
+dotnet_diagnostic.CA1062.severity = none
+
+# Implement IDisposable Correctly
+dotnet_diagnostic.CA1063.severity = none
+
+# Exceptions should be public
+dotnet_diagnostic.CA1064.severity = none
+
+# Do not raise exceptions in unexpected locations
+dotnet_diagnostic.CA1065.severity = none
+
+# Implement IEquatable when overriding Object.Equals
+dotnet_diagnostic.CA1066.severity = none
+
+# Override Object.Equals(object) when implementing IEquatable<T>
+dotnet_diagnostic.CA1067.severity = none
+
+# CancellationToken parameters must come last
+dotnet_diagnostic.CA1068.severity = none
+
+# Enums values should not be duplicated
+dotnet_diagnostic.CA1069.severity = none
+
+# Do not declare event fields as virtual
+dotnet_diagnostic.CA1070.severity = suggestion
+
+# Avoid using cref tags with a prefix
+dotnet_diagnostic.CA1200.severity = suggestion
+
+# Do not pass literals as localized parameters
+dotnet_diagnostic.CA1303.severity = none
+
+# Specify CultureInfo
+dotnet_diagnostic.CA1304.severity = none
+
+# Specify IFormatProvider
+dotnet_diagnostic.CA1305.severity = none
+
+# Specify StringComparison
+dotnet_diagnostic.CA1307.severity = none
+
+# Normalize strings to uppercase
+dotnet_diagnostic.CA1308.severity = none
+
+# Use ordinal stringcomparison
+dotnet_diagnostic.CA1309.severity = none
+
+# P/Invokes should not be visible
+dotnet_diagnostic.CA1401.severity = warning
+
+# Do not use 'OutAttribute' on string parameters for P/Invokes
+dotnet_diagnostic.CA1417.severity = warning
+
+# Avoid excessive complexity
+dotnet_diagnostic.CA1502.severity = none
+
+# Avoid unmaintainable code
+dotnet_diagnostic.CA1505.severity = none
+
+# Avoid excessive class coupling
+dotnet_diagnostic.CA1506.severity = none
+
+# Use nameof to express symbol names
+dotnet_diagnostic.CA1507.severity = suggestion
+
+# Avoid dead conditional code
+dotnet_diagnostic.CA1508.severity = none
+
+# Invalid entry in code metrics rule specification file
+dotnet_diagnostic.CA1509.severity = none
+
+# Do not name enum values 'Reserved'
+dotnet_diagnostic.CA1700.severity = none
+
+dotnet_diagnostic.CA1707.severity = none
+
+# Identifiers should have correct suffix
+dotnet_diagnostic.CA1710.severity = none
+
+# Identifiers should not have incorrect suffix
+dotnet_diagnostic.CA1711.severity = none
+
+# Do not prefix enum values with type name
+dotnet_diagnostic.CA1712.severity = none
+
+dotnet_diagnostic.CA1714.severity = none
+
+# Identifiers should have correct prefix
+dotnet_diagnostic.CA1715.severity = none
+
+# Identifiers should not match keywords
+dotnet_diagnostic.CA1716.severity = none
+
+dotnet_diagnostic.CA1717.severity = none
+
+# Identifier contains type name
+dotnet_diagnostic.CA1720.severity = none
+
+# Property names should not match get methods
+dotnet_diagnostic.CA1721.severity = none
+
+# Type names should not match namespaces
+dotnet_diagnostic.CA1724.severity = none
+
+# Review unused parameters
+dotnet_diagnostic.CA1801.severity = none
+
+# Use literals where appropriate
+dotnet_diagnostic.CA1802.severity = suggestion
+
+# Do not initialize unnecessarily
+dotnet_diagnostic.CA1805.severity = suggestion
+
+dotnet_diagnostic.CA1806.severity = none
+
+# Initialize reference type static fields inline
+dotnet_diagnostic.CA1810.severity = suggestion
+
+# Avoid uninstantiated internal classes
+dotnet_diagnostic.CA1812.severity = none
+
+dotnet_diagnostic.CA1814.severity = none
+
+dotnet_diagnostic.CA1815.severity = none
+
+# Dispose methods should call SuppressFinalize
+dotnet_diagnostic.CA1816.severity = none
+
+dotnet_diagnostic.CA1819.severity = none
+
+# Test for empty strings using string length
+dotnet_diagnostic.CA1820.severity = none
+
+# Remove empty Finalizers
+dotnet_diagnostic.CA1821.severity = warning
+
+# Mark members as static
+dotnet_diagnostic.CA1822.severity = none
+
+# Avoid unused private fields
+dotnet_diagnostic.CA1823.severity = suggestion
+
+# Mark assemblies with NeutralResourcesLanguageAttribute
+dotnet_diagnostic.CA1824.severity = warning
+
+# Avoid zero-length array allocations.
+dotnet_diagnostic.CA1825.severity = suggestion
+
+# Do not use Count() or LongCount() when Any() can be used
+dotnet_diagnostic.CA1827.severity = warning
+
+# Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
+dotnet_diagnostic.CA1828.severity = warning
+
+# Use Length/Count property instead of Count() when available
+dotnet_diagnostic.CA1829.severity = suggestion
+
+# Prefer strongly-typed Append and Insert method overloads on StringBuilder.
+dotnet_diagnostic.CA1830.severity = warning
+
+# Use AsSpan or AsMemory instead of Range-based indexers when appropriate
+dotnet_diagnostic.CA1831.severity = warning
+
+# Use AsSpan or AsMemory instead of Range-based indexers when appropriate
+dotnet_diagnostic.CA1832.severity = warning
+
+# Use AsSpan or AsMemory instead of Range-based indexers when appropriate
+dotnet_diagnostic.CA1833.severity = warning
+
+# Consider using 'StringBuilder.Append(char)' when applicable.
+dotnet_diagnostic.CA1834.severity = suggestion
+
+# Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
+dotnet_diagnostic.CA1835.severity = suggestion
+
+# Prefer IsEmpty over Count
+dotnet_diagnostic.CA1836.severity = suggestion
+
+# Use 'Environment.ProcessId'
+dotnet_diagnostic.CA1837.severity = suggestion
+
+# Avoid 'StringBuilder' parameters for P/Invokes
+dotnet_diagnostic.CA1838.severity = suggestion
+
+# Dispose objects before losing scope
+dotnet_diagnostic.CA2000.severity = none
+
+# Do not lock on objects with weak identity
+dotnet_diagnostic.CA2002.severity = none
+
+# Consider calling ConfigureAwait on the awaited task
+dotnet_diagnostic.CA2007.severity = suggestion
+
+# Do not create tasks without passing a TaskScheduler
+dotnet_diagnostic.CA2008.severity = suggestion
+
+# Do not call ToImmutableCollection on an ImmutableCollection value
+dotnet_diagnostic.CA2009.severity = warning
+
+# Avoid infinite recursion
+dotnet_diagnostic.CA2011.severity = warning
+
+# Use ValueTasks correctly
+dotnet_diagnostic.CA2012.severity = warning
+
+# Do not use ReferenceEquals with value types
+dotnet_diagnostic.CA2013.severity = warning
+
+# Do not use stackalloc in loops.
+dotnet_diagnostic.CA2014.severity = warning
+
+# Do not define finalizers for types derived from MemoryManager<T>
+dotnet_diagnostic.CA2015.severity = warning
+
+# Forward the 'CancellationToken' parameter to methods that take one
+dotnet_diagnostic.CA2016.severity = suggestion
+
+# Review SQL queries for security vulnerabilities
+dotnet_diagnostic.CA2100.severity = none
+
+# Specify marshaling for P/Invoke string arguments
+dotnet_diagnostic.CA2101.severity = none
+
+# Review visible event handlers
+dotnet_diagnostic.CA2109.severity = none
+
+# Seal methods that satisfy private interfaces
+dotnet_diagnostic.CA2119.severity = none
+
+# Do Not Catch Corrupted State Exceptions
+dotnet_diagnostic.CA2153.severity = none
+
+# Do not raise reserved exception types
+dotnet_diagnostic.CA2201.severity = none
+
+# Instantiate argument exceptions correctly
+dotnet_diagnostic.CA2208.severity = suggestion
+
+# Non-constant fields should not be visible
+dotnet_diagnostic.CA2211.severity = none
+
+# Disposable fields should be disposed
+dotnet_diagnostic.CA2213.severity = none
+
+# Dispose methods should call base class dispose
+dotnet_diagnostic.CA2215.severity = none
+
+# Disposable types should declare finalizer
+dotnet_diagnostic.CA2216.severity = none
+
+dotnet_diagnostic.CA2219.severity = none
+
+# Override Equals on overloading operator equals
+dotnet_diagnostic.CA2224.severity = none
+
+# Operator overloads have named alternates
+dotnet_diagnostic.CA2225.severity = none
+
+# Operators should have symmetrical overloads
+dotnet_diagnostic.CA2226.severity = none
+
+# Collection properties should be read only
+dotnet_diagnostic.CA2227.severity = none
+
+# Overload operator equals on overriding value type Equals
+dotnet_diagnostic.CA2231.severity = none
+
+# Pass system uri objects instead of strings
+dotnet_diagnostic.CA2234.severity = none
+
+# Mark all non-serializable fields
+dotnet_diagnostic.CA2235.severity = none
+
+# Provide correct arguments to formatting methods
+dotnet_diagnostic.CA2241.severity = suggestion
+
+# Test for NaN correctly
+dotnet_diagnostic.CA2242.severity = warning
+
+# Attribute string literals should parse correctly
+dotnet_diagnostic.CA2243.severity = none
+
+# Do not duplicate indexed element initializations
+dotnet_diagnostic.CA2244.severity = none
+
+# Do not assign a property to itself.
+dotnet_diagnostic.CA2245.severity = warning
+
+# Assigning symbol and its member in the same statement.
+dotnet_diagnostic.CA2246.severity = none
+
+# Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum.
+dotnet_diagnostic.CA2247.severity = warning
+
+# Provide correct 'enum' argument to 'Enum.HasFlag'
+dotnet_diagnostic.CA2248.severity = warning
+
+# Consider using 'string.Contains' instead of 'string.IndexOf'
+dotnet_diagnostic.CA2249.severity = suggestion
+
+# Do not use insecure deserializer BinaryFormatter
+dotnet_diagnostic.CA2300.severity = none
+
+# Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
+dotnet_diagnostic.CA2301.severity = none
+
+# Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
+dotnet_diagnostic.CA2302.severity = none
+
+# Do not use insecure deserializer LosFormatter
+dotnet_diagnostic.CA2305.severity = none
+
+# Do not use insecure deserializer NetDataContractSerializer
+dotnet_diagnostic.CA2310.severity = none
+
+# Do not deserialize without first setting NetDataContractSerializer.Binder
+dotnet_diagnostic.CA2311.severity = none
+
+# Ensure NetDataContractSerializer.Binder is set before deserializing
+dotnet_diagnostic.CA2312.severity = none
+
+# Do not use insecure deserializer ObjectStateFormatter
+dotnet_diagnostic.CA2315.severity = none
+
+# Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
+dotnet_diagnostic.CA2321.severity = none
+
+# Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
+dotnet_diagnostic.CA2322.severity = none
+
+# Do not use TypeNameHandling values other than None
+dotnet_diagnostic.CA2326.severity = none
+
+# Do not use DataTable.ReadXml() with untrusted data
+dotnet_diagnostic.CA2350.severity = none
+
+# Do not use DataSet.ReadXml() with untrusted data
+dotnet_diagnostic.CA2351.severity = none
+
+# Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
+dotnet_diagnostic.CA2352.severity = none
+
+# Unsafe DataSet or DataTable in serializable type
+dotnet_diagnostic.CA2353.severity = none
+
+# Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
+dotnet_diagnostic.CA2354.severity = none
+
+# Unsafe DataSet or DataTable type found in deserializable object graph
+dotnet_diagnostic.CA2355.severity = none
+
+# Unsafe DataSet or DataTable type in web deserializable object graph
+dotnet_diagnostic.CA2356.severity = none
+
+# Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data
+dotnet_diagnostic.CA2361.severity = none
+
+# Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks
+dotnet_diagnostic.CA2362.severity = none
+
+# Review code for SQL injection vulnerabilities
+dotnet_diagnostic.CA3001.severity = none
+
+# Review code for XSS vulnerabilities
+dotnet_diagnostic.CA3002.severity = none
+
+# Review code for file path injection vulnerabilities
+dotnet_diagnostic.CA3003.severity = none
+
+# Review code for information disclosure vulnerabilities
+dotnet_diagnostic.CA3004.severity = none
+
+# Review code for LDAP injection vulnerabilities
+dotnet_diagnostic.CA3005.severity = none
+
+# Review code for process command injection vulnerabilities
+dotnet_diagnostic.CA3006.severity = none
+
+# Review code for open redirect vulnerabilities
+dotnet_diagnostic.CA3007.severity = none
+
+# Review code for XPath injection vulnerabilities
+dotnet_diagnostic.CA3008.severity = none
+
+# Review code for XML injection vulnerabilities
+dotnet_diagnostic.CA3009.severity = none
+
+# Review code for XAML injection vulnerabilities
+dotnet_diagnostic.CA3010.severity = none
+
+# Review code for DLL injection vulnerabilities
+dotnet_diagnostic.CA3011.severity = none
+
+# Review code for regex injection vulnerabilities
+dotnet_diagnostic.CA3012.severity = none
+
+# Do Not Add Schema By URL
+dotnet_diagnostic.CA3061.severity = warning
+
+# Insecure DTD processing in XML
+dotnet_diagnostic.CA3075.severity = warning
+
+# Insecure XSLT script processing.
+dotnet_diagnostic.CA3076.severity = warning
+
+# Insecure Processing in API Design, XmlDocument and XmlTextReader
+dotnet_diagnostic.CA3077.severity = warning
+
+# Mark Verb Handlers With Validate Antiforgery Token
+dotnet_diagnostic.CA3147.severity = warning
+
+# Do Not Use Weak Cryptographic Algorithms
+dotnet_diagnostic.CA5350.severity = warning
+
+# Do Not Use Broken Cryptographic Algorithms
+dotnet_diagnostic.CA5351.severity = warning
+
+# Review cipher mode usage with cryptography experts
+dotnet_diagnostic.CA5358.severity = none
+
+# Do Not Disable Certificate Validation
+dotnet_diagnostic.CA5359.severity = warning
+
+# Do Not Call Dangerous Methods In Deserialization
+dotnet_diagnostic.CA5360.severity = warning
+
+# Do Not Disable SChannel Use of Strong Crypto
+dotnet_diagnostic.CA5361.severity = warning
+
+# Potential reference cycle in deserialized object graph
+dotnet_diagnostic.CA5362.severity = none
+
+# Do Not Disable Request Validation
+dotnet_diagnostic.CA5363.severity = warning
+
+# Do Not Use Deprecated Security Protocols
+dotnet_diagnostic.CA5364.severity = warning
+
+# Do Not Disable HTTP Header Checking
+dotnet_diagnostic.CA5365.severity = warning
+
+# Use XmlReader For DataSet Read Xml
+dotnet_diagnostic.CA5366.severity = none
+
+# Do Not Serialize Types With Pointer Fields
+dotnet_diagnostic.CA5367.severity = none
+
+# Set ViewStateUserKey For Classes Derived From Page
+dotnet_diagnostic.CA5368.severity = warning
+
+# Use XmlReader For Deserialize
+dotnet_diagnostic.CA5369.severity = none
+
+# Use XmlReader For Validating Reader
+dotnet_diagnostic.CA5370.severity = warning
+
+# Use XmlReader For Schema Read
+dotnet_diagnostic.CA5371.severity = none
+
+# Use XmlReader For XPathDocument
+dotnet_diagnostic.CA5372.severity = none
+
+# Do not use obsolete key derivation function
+dotnet_diagnostic.CA5373.severity = warning
+
+# Do Not Use XslTransform
+dotnet_diagnostic.CA5374.severity = warning
+
+# Do Not Use Account Shared Access Signature
+dotnet_diagnostic.CA5375.severity = none
+
+# Use SharedAccessProtocol HttpsOnly
+dotnet_diagnostic.CA5376.severity = warning
+
+# Use Container Level Access Policy
+dotnet_diagnostic.CA5377.severity = warning
+
+# Do not disable ServicePointManagerSecurityProtocols
+dotnet_diagnostic.CA5378.severity = warning
+
+# Do Not Use Weak Key Derivation Function Algorithm
+dotnet_diagnostic.CA5379.severity = warning
+
+# Do Not Add Certificates To Root Store
+dotnet_diagnostic.CA5380.severity = warning
+
+# Ensure Certificates Are Not Added To Root Store
+dotnet_diagnostic.CA5381.severity = warning
+
+# Use Secure Cookies In ASP.Net Core
+dotnet_diagnostic.CA5382.severity = none
+
+# Ensure Use Secure Cookies In ASP.Net Core
+dotnet_diagnostic.CA5383.severity = none
+
+# Do Not Use Digital Signature Algorithm (DSA)
+dotnet_diagnostic.CA5384.severity = warning
+
+# Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size
+dotnet_diagnostic.CA5385.severity = warning
+
+# Avoid hardcoding SecurityProtocolType value
+dotnet_diagnostic.CA5386.severity = none
+
+# Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
+dotnet_diagnostic.CA5387.severity = none
+
+# Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
+dotnet_diagnostic.CA5388.severity = none
+
+# Do Not Add Archive Item's Path To The Target File System Path
+dotnet_diagnostic.CA5389.severity = none
+
+# Do not hard-code encryption key
+dotnet_diagnostic.CA5390.severity = none
+
+# Use antiforgery tokens in ASP.NET Core MVC controllers
+dotnet_diagnostic.CA5391.severity = none
+
+# Use DefaultDllImportSearchPaths attribute for P/Invokes
+dotnet_diagnostic.CA5392.severity = none
+
+# Do not use unsafe DllImportSearchPath value
+dotnet_diagnostic.CA5393.severity = none
+
+# Do not use insecure randomness
+dotnet_diagnostic.CA5394.severity = none
+
+# Miss HttpVerb attribute for action methods
+dotnet_diagnostic.CA5395.severity = none
+
+# Set HttpOnly to true for HttpCookie
+dotnet_diagnostic.CA5396.severity = none
+
+# Do not use deprecated SslProtocols values
+dotnet_diagnostic.CA5397.severity = none
+
+# Avoid hardcoded SslProtocols values
+dotnet_diagnostic.CA5398.severity = none
+
+# HttpClients should enable certificate revocation list checks
+dotnet_diagnostic.CA5399.severity = none
+
+# Ensure HttpClient certificate revocation list check is not disabled
+dotnet_diagnostic.CA5400.severity = none
+
+# Do not use CreateEncryptor with non-default IV
+dotnet_diagnostic.CA5401.severity = none
+
+# Use CreateEncryptor with the default IV
+dotnet_diagnostic.CA5402.severity = none
+
+# Do not hard-code certificate
+dotnet_diagnostic.CA5403.severity = none
+
+# Avoid using accessing Assembly file path when publishing as a single-file
+dotnet_diagnostic.IL3000.severity = none
+
+# Avoid using accessing Assembly file path when publishing as a single-file
+dotnet_diagnostic.IL3001.severity = none
+
+# XML comments
+dotnet_diagnostic.SA0001.severity = suggestion
+
+dotnet_diagnostic.SA1000.severity = none
+
+dotnet_diagnostic.SA1001.severity = none
+
+# Semicolons should not be preceded by a space
+dotnet_diagnostic.SA1002.severity = suggestion
+
+dotnet_diagnostic.SA1003.severity = none
+
+# Documentation line should begin with a space
+dotnet_diagnostic.SA1004.severity = suggestion
+
+# Single line comment should begin with a space
+dotnet_diagnostic.SA1005.severity = suggestion
+
+# Region should not be preceded by a space
+dotnet_diagnostic.SA1006.severity = suggestion
+
+# Opening parenthesis should not be preceded by a space
+dotnet_diagnostic.SA1008.severity = suggestion
+
+# Closing parenthesis should not be followed by a space
+dotnet_diagnostic.SA1009.severity = suggestion
+
+# Opening square brackets should not be preceded by a space
+dotnet_diagnostic.SA1010.severity = suggestion
+
+# Closing square bracket should be followed by a space
+dotnet_diagnostic.SA1011.severity = suggestion
+
+# Opening brace should be followed by a space
+dotnet_diagnostic.SA1012.severity = suggestion
+
+# Closing brace should be preceded by a space
+dotnet_diagnostic.SA1013.severity = suggestion
+
+# Closing generic bracket should not be followed by a space
+dotnet_diagnostic.SA1015.severity = suggestion
+
+dotnet_diagnostic.SA1019.severity = none
+
+# Negative sign should be preceded by a space
+dotnet_diagnostic.SA1021.severity = suggestion
+
+# Dereference symbol '*' should not be preceded by a space."
+dotnet_diagnostic.SA1023.severity = suggestion
+
+# Colon should be followed by a space
+dotnet_diagnostic.SA1024.severity = suggestion
+
+# Code should not contain multiple whitespace characters in a row
+dotnet_diagnostic.SA1025.severity = suggestion
+
+dotnet_diagnostic.SA1026.severity = none
+
+dotnet_diagnostic.SA1027.severity = none
+
+dotnet_diagnostic.SA1028.severity = none
+
+# Do not prefix calls with base unless local implementation exists
+dotnet_diagnostic.SA1100.severity = suggestion
+
+dotnet_diagnostic.SA1101.severity = none
+
+dotnet_diagnostic.SA1102.severity = suggestion
+
+# Code should not contain empty statements
+dotnet_diagnostic.SA1106.severity = suggestion
+
+# Code should not contain multiple statements on one line
+dotnet_diagnostic.SA1107.severity = suggestion
+
+dotnet_diagnostic.SA1108.severity = none
+
+# Opening parenthesis or bracket should be on declaration line
+dotnet_diagnostic.SA1110.severity = suggestion
+
+# Closing parenthesis should be on line of last parameter
+dotnet_diagnostic.SA1111.severity = suggestion
+
+dotnet_diagnostic.SA1112.severity = none
+
+dotnet_diagnostic.SA1113.severity = none
+
+# Parameter list should follow declaration
+dotnet_diagnostic.SA1114.severity = suggestion
+
+dotnet_diagnostic.SA1115.severity = none
+
+# Split parameters should start on line after declaration
+dotnet_diagnostic.SA1116.severity = suggestion
+
+# Parameters should be on same line or separate lines
+dotnet_diagnostic.SA1117.severity = suggestion
+
+dotnet_diagnostic.SA1118.severity = none
+
+dotnet_diagnostic.SA1119.severity = none
+
+# Comments should contain text
+dotnet_diagnostic.SA1120.severity = suggestion
+
+dotnet_diagnostic.SA1121.severity = none
+
+# Use string.Empty for empty strings
+dotnet_diagnostic.SA1122.severity = suggestion
+
+# Region should not be located within a code element
+dotnet_diagnostic.SA1123.severity = suggestion
+
+dotnet_diagnostic.SA1124.severity = none
+
+# Use shorthand for nullable types
+dotnet_diagnostic.SA1125.severity = suggestion
+
+# Generic type constraints should be on their own line
+dotnet_diagnostic.SA1127.severity = suggestion
+
+# Put constructor initializers on their own line
+dotnet_diagnostic.SA1128.severity = suggestion
+
+dotnet_diagnostic.SA1129.severity = none
+
+# Use lambda syntax
+dotnet_diagnostic.SA1130.severity = suggestion
+
+# Constant values should appear on the right-hand side of comparisons
+dotnet_diagnostic.SA1131.severity = suggestion
+
+# Do not combine fields
+dotnet_diagnostic.SA1132.severity = suggestion
+
+# Do not combine attributes
+dotnet_diagnostic.SA1133.severity = suggestion
+
+# Each attribute should be placed on its own line of code
+dotnet_diagnostic.SA1134.severity = suggestion
+
+# Using directive should be qualified
+dotnet_diagnostic.SA1135.severity = suggestion
+
+# Enum values should be on separate lines
+dotnet_diagnostic.SA1136.severity = suggestion
+
+# Elements should have the same indentation
+dotnet_diagnostic.SA1137.severity = suggestion
+
+dotnet_diagnostic.SA1139.severity = none
+
+dotnet_diagnostic.SA1200.severity = none
+
+# Elements should appear in the correct order
+dotnet_diagnostic.SA1201.severity = suggestion
+
+# Elements should be ordered by access
+dotnet_diagnostic.SA1202.severity = suggestion
+
+# Constants should appear before fields
+dotnet_diagnostic.SA1203.severity = suggestion
+
+# Static elements should appear before instance elements
+dotnet_diagnostic.SA1204.severity = suggestion
+
+dotnet_diagnostic.SA1205.severity = none
+
+dotnet_diagnostic.SA1206.severity = none
+
+# Using directive ordering
+dotnet_diagnostic.SA1208.severity = suggestion
+
+# Using alias directives should be placed after all using namespace directives
+dotnet_diagnostic.SA1209.severity = suggestion
+
+# Using directives should be ordered alphabetically by the namespaces
+dotnet_diagnostic.SA1210.severity = suggestion
+
+# Using alias directive ordering
+dotnet_diagnostic.SA1211.severity = suggestion
+
+dotnet_diagnostic.SA1212.severity = none
+
+# Readonly fields should appear before non-readonly fields
+dotnet_diagnostic.SA1214.severity = suggestion
+
+# Using static directives should be placed at the correct location
+dotnet_diagnostic.SA1216.severity = suggestion
+
+# Element should begin with an uppercase letter
+dotnet_diagnostic.SA1300.severity = suggestion
+
+# Const field names should begin with upper-case letter
+dotnet_diagnostic.SA1303.severity = suggestion
+
+# Non-private readonly fields should begin with upper-case letter
+dotnet_diagnostic.SA1304.severity = suggestion
+
+# Field should begin with lower-case letter
+dotnet_diagnostic.SA1306.severity = suggestion
+
+dotnet_diagnostic.SA1307.severity = none
+
+# Field should not begin with the prefix 's_'
+dotnet_diagnostic.SA1308.severity = suggestion
+
+dotnet_diagnostic.SA1309.severity = none
+
+dotnet_diagnostic.SA1310.severity = none
+
+# Static readonly fields should begin with upper-case letter
+dotnet_diagnostic.SA1311.severity = suggestion
+
+# Variable should begin with lower-case letter
+dotnet_diagnostic.SA1312.severity = suggestion
+
+# Parameter should begin with lower-case letter
+dotnet_diagnostic.SA1313.severity = suggestion
+
+dotnet_diagnostic.SA1314.severity = none
+
+# Tuple element names should use correct casing
+dotnet_diagnostic.SA1316.severity = suggestion
+
+dotnet_diagnostic.SA1400.severity = none
+
+# Fields should be private
+dotnet_diagnostic.SA1401.severity = suggestion
+
+# File may only contain a single type
+dotnet_diagnostic.SA1402.severity = suggestion
+
+# File may only contain a single namespace
+dotnet_diagnostic.SA1403.severity = suggestion
+
+# Code analysis suppression should have justification
+dotnet_diagnostic.SA1404.severity = suggestion
+
+# Debug.Assert should provide message text
+dotnet_diagnostic.SA1405.severity = suggestion
+
+# Arithmetic expressions should declare precedence
+dotnet_diagnostic.SA1407.severity = suggestion
+
+# Conditional expressions should declare precedence
+dotnet_diagnostic.SA1408.severity = suggestion
+
+dotnet_diagnostic.SA1410.severity = none
+
+dotnet_diagnostic.SA1411.severity = none
+
+# Use trailing comma in multi-line initializers
+dotnet_diagnostic.SA1413.severity = suggestion
+
+# Tuple types in signatures should have element names
+dotnet_diagnostic.SA1414.severity = suggestion
+
+# Braces for multi-line statements should not share line
+dotnet_diagnostic.SA1500.severity = suggestion
+
+# Statement should not be on a single line
+dotnet_diagnostic.SA1501.severity = suggestion
+
+# Element should not be on a single line
+dotnet_diagnostic.SA1502.severity = suggestion
+
+# Braces should not be omitted
+dotnet_diagnostic.SA1503.severity = suggestion
+
+# All accessors should be single-line or multi-line
+dotnet_diagnostic.SA1504.severity = suggestion
+
+# An opening brace should not be followed by a blank line
+dotnet_diagnostic.SA1505.severity = suggestion
+
+# Element documentation headers should not be followed by blank line
+dotnet_diagnostic.SA1506.severity = suggestion
+
+# Code should not contain multiple blank lines in a row
+dotnet_diagnostic.SA1507.severity = suggestion
+
+# A closing brace should not be preceded by a blank line
+dotnet_diagnostic.SA1508.severity = suggestion
+
+# Opening braces should not be preceded by blank line
+dotnet_diagnostic.SA1509.severity = suggestion
+
+# 'else' statement should not be preceded by a blank line
+dotnet_diagnostic.SA1510.severity = suggestion
+
+# Single-line comments should not be followed by blank line
+dotnet_diagnostic.SA1512.severity = suggestion
+
+# Closing brace should be followed by blank line
+dotnet_diagnostic.SA1513.severity = suggestion
+
+# Element documentation header should be preceded by blank line
+dotnet_diagnostic.SA1514.severity = suggestion
+
+# Single-line comment should be preceded by blank line
+dotnet_diagnostic.SA1515.severity = suggestion
+
+# Elements should be separated by blank line
+dotnet_diagnostic.SA1516.severity = suggestion
+
+dotnet_diagnostic.SA1517.severity = none
+
+# Code should not contain blank lines at the end of the file
+dotnet_diagnostic.SA1518.severity = suggestion
+
+# Braces should not be omitted from multi-line child statement
+dotnet_diagnostic.SA1519.severity = suggestion
+
+# Use braces consistently
+dotnet_diagnostic.SA1520.severity = suggestion
+
+dotnet_diagnostic.SA1600.severity = none
+
+# Partial elements should be documented
+dotnet_diagnostic.SA1601.severity = suggestion
+
+# Enumeration items should be documented
+dotnet_diagnostic.SA1602.severity = suggestion
+
+# Element documentation should have summary
+dotnet_diagnostic.SA1604.severity = suggestion
+
+# Partial element documentation should have summary
+dotnet_diagnostic.SA1605.severity = suggestion
+
+# Element documentation should have summary text
+dotnet_diagnostic.SA1606.severity = suggestion
+
+# Element documentation should not have default summary
+dotnet_diagnostic.SA1608.severity = suggestion
+
+# Property documentation should have value text
+dotnet_diagnostic.SA1610.severity = suggestion
+
+# The documentation for parameter 'message' is missing
+dotnet_diagnostic.SA1611.severity = suggestion
+
+# The parameter documentation is at incorrect position
+dotnet_diagnostic.SA1612.severity = suggestion
+
+# Element parameter documentation should have text
+dotnet_diagnostic.SA1614.severity = suggestion
+
+dotnet_diagnostic.SA1615.severity = none
+
+# Element return value documentation should have text
+dotnet_diagnostic.SA1616.severity = suggestion
+
+dotnet_diagnostic.SA1617.severity = none
+
+# The documentation for type parameter is missing
+dotnet_diagnostic.SA1618.severity = suggestion
+
+# The documentation for type parameter is missing
+dotnet_diagnostic.SA1619.severity = suggestion
+
+# Generic type parameter documentation should have text
+dotnet_diagnostic.SA1622.severity = suggestion
+
+# Property documentation text
+dotnet_diagnostic.SA1623.severity = suggestion
+
+# Because the property only contains a visible get accessor, the documentation summary text should begin with 'Gets'
+dotnet_diagnostic.SA1624.severity = suggestion
+
+dotnet_diagnostic.SA1625.severity = none
+
+# Single-line comments should not use documentation style slashes
+dotnet_diagnostic.SA1626.severity = suggestion
+
+# The documentation text within the \'exception\' tag should not be empty
+dotnet_diagnostic.SA1627.severity = suggestion
+
+# Documentation text should end with a period
+dotnet_diagnostic.SA1629.severity = suggestion
+
+# File should have header
+dotnet_diagnostic.SA1633.severity = suggestion
+
+# Constructor summary documentation should begin with standard text
+dotnet_diagnostic.SA1642.severity = suggestion
+
+# Destructor summary documentation should begin with standard text
+dotnet_diagnostic.SA1643.severity = suggestion
+
+# File name should match first type name
+dotnet_diagnostic.SA1649.severity = suggestion
+
+dotnet_diagnostic.SA1652.severity = none
+
+# Do not use equality check to check for collection size.
+dotnet_diagnostic.xUnit2013.severity = none
diff --git a/Directory.Build.props b/Directory.Build.props
index 93150ee88bd..dee0ac77c19 100644
--- a/Directory.Build.props
+++ b/Directory.Build.props
@@ -71,8 +71,6 @@
 
     <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
   </PropertyGroup>
-  
-  <Import Project="$(RepositoryEngineeringDir)Analyzers.props" />
 
   <PropertyGroup>
     <EnableAnalyzers>true</EnableAnalyzers>
diff --git a/eng/Analyzers.props b/eng/Analyzers.props
deleted file mode 100644
index 2a523c21b2c..00000000000
--- a/eng/Analyzers.props
+++ /dev/null
@@ -1,7 +0,0 @@
-<Project>
-  <PropertyGroup>
-    <CodeAnalysisRuleset>$(MSBuildThisFileDirectory)CodeAnalysis.ruleset</CodeAnalysisRuleset>
-    <!-- Disable analyzers in sourcebuild -->
-    <EnableAnalyzers Condition="'$(DotNetBuildFromSource)' == 'true'">false</EnableAnalyzers>
-  </PropertyGroup>
-</Project>
diff --git a/eng/CodeAnalysis.ruleset b/eng/CodeAnalysis.ruleset
deleted file mode 100644
index 2078c42fe6c..00000000000
--- a/eng/CodeAnalysis.ruleset
+++ /dev/null
@@ -1,389 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<RuleSet Name="Microsoft.Analyzers.ManagedCodeAnalysis" Description="Microsoft.Analyzers.ManagedCodeAnalysis" ToolsVersion="16.0">
-  <Rules AnalyzerId="Microsoft.DotNet.CodeAnalysis" RuleNamespace="Microsoft.DotNet.CodeAnalysis.Analyzers"> 
-    <Rule Id="BCL0001" Action="Warning" />         <!-- Ensure minimum API surface is respected --> 
-    <Rule Id="BCL0010" Action="Warning" />         <!-- AppContext default value expected to be true --> 
-    <Rule Id="BCL0011" Action="Warning" />         <!-- AppContext default value defined in if statement with incorrect pattern --> 
-    <Rule Id="BCL0012" Action="Warning" />         <!-- AppContext default value defined in if statement at root of switch case --> 
-    <Rule Id="BCL0015" Action="None" />            <!-- Invalid P/Invoke call --> 
-    <Rule Id="BCL0020" Action="Warning" />         <!-- Invalid SR.Format call --> 
-  </Rules> 
-  <Rules AnalyzerId="Microsoft.CodeAnalysis.NetAnalyzers" RuleNamespace="Microsoft.CodeAnalysis.NetAnalyzers"> 
-    <Rule Id="CA1000" Action="None" />             <!-- Do not declare static members on generic types --> 
-    <Rule Id="CA1001" Action="None" />             <!-- Types that own disposable fields should be disposable --> 
-    <Rule Id="CA1002" Action="None" />             <!-- Do not expose generic lists --> 
-    <Rule Id="CA1003" Action="None" />             <!-- Use generic event handler instances --> 
-    <Rule Id="CA1005" Action="None" />             <!-- Avoid excessive parameters on generic types --> 
-    <Rule Id="CA1008" Action="None" />             <!-- Enums should have zero value --> 
-    <Rule Id="CA1010" Action="None" />             <!-- Generic interface should also be implemented --> 
-    <Rule Id="CA1012" Action="None" />             <!-- Abstract types should not have constructors --> 
-    <Rule Id="CA1014" Action="None" />             <!-- Mark assemblies with CLSCompliant --> 
-    <Rule Id="CA1016" Action="None" />             <!-- Mark assemblies with assembly version --> 
-    <Rule Id="CA1017" Action="None" />             <!-- Mark assemblies with ComVisible --> 
-    <Rule Id="CA1018" Action="Warning" />          <!-- Mark attributes with AttributeUsageAttribute --> 
-    <Rule Id="CA1019" Action="None" />             <!-- Define accessors for attribute arguments --> 
-    <Rule Id="CA1024" Action="None" />             <!-- Use properties where appropriate --> 
-    <Rule Id="CA1027" Action="None" />             <!-- Mark enums with FlagsAttribute --> 
-    <Rule Id="CA1028" Action="None" />             <!-- Enum Storage should be Int32 --> 
-    <Rule Id="CA1030" Action="None" />             <!-- Use events where appropriate --> 
-    <Rule Id="CA1031" Action="None" />             <!-- Do not catch general exception types --> 
-    <Rule Id="CA1032" Action="None" />
-    <Rule Id="CA1033" Action="None" />             <!-- Interface methods should be callable by child types --> 
-    <Rule Id="CA1034" Action="None" />
-    <Rule Id="CA1036" Action="None" />             <!-- Override methods on comparable types --> 
-    <Rule Id="CA1040" Action="None" />             <!-- Avoid empty interfaces --> 
-    <Rule Id="CA1041" Action="None" />             <!-- Provide ObsoleteAttribute message --> 
-    <Rule Id="CA1043" Action="None" />             <!-- Use Integral Or String Argument For Indexers --> 
-    <Rule Id="CA1044" Action="None" />             <!-- Properties should not be write only --> 
-    <Rule Id="CA1046" Action="None" />             <!-- Do not overload equality operator on reference types --> 
-    <Rule Id="CA1047" Action="Warning" />          <!-- Do not declare protected member in sealed type --> 
-    <Rule Id="CA1050" Action="Info" />             <!-- Declare types in namespaces --> 
-    <Rule Id="CA1051" Action="None" />             <!-- Do not declare visible instance fields --> 
-    <Rule Id="CA1052" Action="None" />             <!-- Static holder types should be Static or NotInheritable --> 
-    <Rule Id="CA1054" Action="None" />             <!-- Uri parameters should not be strings --> 
-    <Rule Id="CA1055" Action="None" />             <!-- Uri return values should not be strings --> 
-    <Rule Id="CA1056" Action="None" />             <!-- Uri properties should not be strings --> 
-    <Rule Id="CA1058" Action="None" />             <!-- Types should not extend certain base types --> 
-    <Rule Id="CA1061" Action="None" />             <!-- Do not hide base class methods --> 
-    <Rule Id="CA1062" Action="None" />             <!-- Validate arguments of public methods --> 
-    <Rule Id="CA1063" Action="None" />             <!-- Implement IDisposable Correctly --> 
-    <Rule Id="CA1064" Action="None" />             <!-- Exceptions should be public --> 
-    <Rule Id="CA1065" Action="None" />             <!-- Do not raise exceptions in unexpected locations --> 
-    <Rule Id="CA1066" Action="None" />             <!-- Implement IEquatable when overriding Object.Equals --> 
-    <Rule Id="CA1067" Action="None" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> --> 
-    <Rule Id="CA1068" Action="None" />             <!-- CancellationToken parameters must come last --> 
-    <Rule Id="CA1069" Action="None" />             <!-- Enums values should not be duplicated --> 
-    <Rule Id="CA1070" Action="Info" />             <!-- Do not declare event fields as virtual --> 
-    <Rule Id="CA1200" Action="Info" />             <!-- Avoid using cref tags with a prefix --> 
-    <Rule Id="CA1303" Action="None" />             <!-- Do not pass literals as localized parameters --> 
-    <Rule Id="CA1304" Action="None" />             <!-- Specify CultureInfo --> 
-    <Rule Id="CA1305" Action="None" />             <!-- Specify IFormatProvider --> 
-    <Rule Id="CA1307" Action="None" />             <!-- Specify StringComparison --> 
-    <Rule Id="CA1308" Action="None" />             <!-- Normalize strings to uppercase --> 
-    <Rule Id="CA1309" Action="None" />             <!-- Use ordinal stringcomparison --> 
-    <Rule Id="CA1401" Action="Warning" />          <!-- P/Invokes should not be visible --> 
-    <Rule Id="CA1417" Action="Warning" />          <!-- Do not use 'OutAttribute' on string parameters for P/Invokes --> 
-    <Rule Id="CA1502" Action="None" />             <!-- Avoid excessive complexity --> 
-    <Rule Id="CA1505" Action="None" />             <!-- Avoid unmaintainable code --> 
-    <Rule Id="CA1506" Action="None" />             <!-- Avoid excessive class coupling --> 
-    <Rule Id="CA1507" Action="Info" />             <!-- Use nameof to express symbol names --> 
-    <Rule Id="CA1508" Action="None" />             <!-- Avoid dead conditional code --> 
-    <Rule Id="CA1509" Action="None" />             <!-- Invalid entry in code metrics rule specification file --> 
-    <Rule Id="CA1700" Action="None" />             <!-- Do not name enum values 'Reserved' --> 
-    <Rule Id="CA1707" Action="None" />
-    <Rule Id="CA1710" Action="None" />             <!-- Identifiers should have correct suffix --> 
-    <Rule Id="CA1711" Action="None" />             <!-- Identifiers should not have incorrect suffix --> 
-    <Rule Id="CA1712" Action="None" />             <!-- Do not prefix enum values with type name --> 
-    <Rule Id="CA1714" Action="None" />
-    <Rule Id="CA1715" Action="None" />             <!-- Identifiers should have correct prefix --> 
-    <Rule Id="CA1716" Action="None" />             <!-- Identifiers should not match keywords --> 
-    <Rule Id="CA1717" Action="None" />
-    <Rule Id="CA1720" Action="None" />             <!-- Identifier contains type name --> 
-    <Rule Id="CA1721" Action="None" />             <!-- Property names should not match get methods --> 
-    <Rule Id="CA1724" Action="None" />             <!-- Type names should not match namespaces --> 
-    <Rule Id="CA1801" Action="None" />             <!-- Review unused parameters --> 
-    <Rule Id="CA1802" Action="Info" />             <!-- Use literals where appropriate --> 
-    <Rule Id="CA1805" Action="Info" />             <!-- Do not initialize unnecessarily --> 
-    <Rule Id="CA1806" Action="None" />
-    <Rule Id="CA1810" Action="Info" />             <!-- Initialize reference type static fields inline --> 
-    <Rule Id="CA1812" Action="None" />             <!-- Avoid uninstantiated internal classes --> 
-    <Rule Id="CA1814" Action="None" />
-    <Rule Id="CA1815" Action="None" />
-    <Rule Id="CA1816" Action="None" />             <!-- Dispose methods should call SuppressFinalize --> 
-    <Rule Id="CA1819" Action="None" />
-    <Rule Id="CA1820" Action="None" />             <!-- Test for empty strings using string length --> 
-    <Rule Id="CA1821" Action="Warning" />          <!-- Remove empty Finalizers --> 
-    <Rule Id="CA1822" Action="None" />             <!-- Mark members as static --> 
-    <Rule Id="CA1823" Action="Info" />             <!-- Avoid unused private fields --> 
-    <Rule Id="CA1824" Action="Warning" />          <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->
-    <Rule Id="CA1825" Action="Info" />             <!-- Avoid zero-length array allocations. --> 
-    <Rule Id="CA1827" Action="Warning" />          <!-- Do not use Count() or LongCount() when Any() can be used --> 
-    <Rule Id="CA1828" Action="Warning" />          <!-- Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used --> 
-    <Rule Id="CA1829" Action="Info" />             <!-- Use Length/Count property instead of Count() when available --> 
-    <Rule Id="CA1830" Action="Warning" />          <!-- Prefer strongly-typed Append and Insert method overloads on StringBuilder. --> 
-    <Rule Id="CA1831" Action="Warning" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> 
-    <Rule Id="CA1832" Action="Warning" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> 
-    <Rule Id="CA1833" Action="Warning" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> 
-    <Rule Id="CA1834" Action="Info" />             <!-- Consider using 'StringBuilder.Append(char)' when applicable. --> 
-    <Rule Id="CA1835" Action="Info" />             <!-- Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync' --> 
-    <Rule Id="CA1836" Action="Info" />             <!-- Prefer IsEmpty over Count --> 
-    <Rule Id="CA1837" Action="Info" />             <!-- Use 'Environment.ProcessId' -->  
-    <Rule Id="CA1838" Action="Info" />             <!-- Avoid 'StringBuilder' parameters for P/Invokes --> 
-    <Rule Id="CA2000" Action="None" />             <!-- Dispose objects before losing scope --> 
-    <Rule Id="CA2002" Action="None" />             <!-- Do not lock on objects with weak identity --> 
-    <Rule Id="CA2007" Action="Info" />             <!-- Consider calling ConfigureAwait on the awaited task --> 
-    <Rule Id="CA2008" Action="Info" />             <!-- Do not create tasks without passing a TaskScheduler --> 
-    <Rule Id="CA2009" Action="Warning" />          <!-- Do not call ToImmutableCollection on an ImmutableCollection value --> 
-    <Rule Id="CA2011" Action="Warning" />          <!-- Avoid infinite recursion --> 
-    <Rule Id="CA2012" Action="Warning" />          <!-- Use ValueTasks correctly --> 
-    <Rule Id="CA2013" Action="Warning" />          <!-- Do not use ReferenceEquals with value types --> 
-    <Rule Id="CA2014" Action="Warning" />          <!-- Do not use stackalloc in loops. --> 
-    <Rule Id="CA2015" Action="Warning" />          <!-- Do not define finalizers for types derived from MemoryManager<T> --> 
-    <Rule Id="CA2016" Action="Info" />             <!-- Forward the 'CancellationToken' parameter to methods that take one --> 
-    <Rule Id="CA2100" Action="None" />             <!-- Review SQL queries for security vulnerabilities --> 
-    <Rule Id="CA2101" Action="None" />             <!-- Specify marshaling for P/Invoke string arguments --> 
-    <Rule Id="CA2109" Action="None" />             <!-- Review visible event handlers --> 
-    <Rule Id="CA2119" Action="None" />             <!-- Seal methods that satisfy private interfaces --> 
-    <Rule Id="CA2153" Action="None" />             <!-- Do Not Catch Corrupted State Exceptions --> 
-    <Rule Id="CA2201" Action="None" />             <!-- Do not raise reserved exception types --> 
-    <Rule Id="CA2208" Action="Info" />             <!-- Instantiate argument exceptions correctly --> 
-    <Rule Id="CA2211" Action="None" />             <!-- Non-constant fields should not be visible --> 
-    <Rule Id="CA2213" Action="None" />             <!-- Disposable fields should be disposed --> 
-    <Rule Id="CA2215" Action="None" />             <!-- Dispose methods should call base class dispose --> 
-    <Rule Id="CA2216" Action="None" />             <!-- Disposable types should declare finalizer --> 
-    <Rule Id="CA2219" Action="None" />
-    <Rule Id="CA2224" Action="None" />             <!-- Override Equals on overloading operator equals --> 
-    <Rule Id="CA2225" Action="None" />             <!-- Operator overloads have named alternates --> 
-    <Rule Id="CA2226" Action="None" />             <!-- Operators should have symmetrical overloads --> 
-    <Rule Id="CA2227" Action="None" />             <!-- Collection properties should be read only --> 
-    <Rule Id="CA2231" Action="None" />             <!-- Overload operator equals on overriding value type Equals --> 
-    <Rule Id="CA2234" Action="None" />             <!-- Pass system uri objects instead of strings --> 
-    <Rule Id="CA2235" Action="None" />             <!-- Mark all non-serializable fields --> 
-    <Rule Id="CA2241" Action="Info" />             <!-- Provide correct arguments to formatting methods --> 
-    <Rule Id="CA2242" Action="Warning" />          <!-- Test for NaN correctly --> 
-    <Rule Id="CA2243" Action="None" />             <!-- Attribute string literals should parse correctly --> 
-    <Rule Id="CA2244" Action="None" />             <!-- Do not duplicate indexed element initializations --> 
-    <Rule Id="CA2245" Action="Warning" />          <!-- Do not assign a property to itself. --> 
-    <Rule Id="CA2246" Action="None" />             <!-- Assigning symbol and its member in the same statement. --> 
-    <Rule Id="CA2247" Action="Warning" />          <!-- Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum. --> 
-    <Rule Id="CA2248" Action="Warning" />          <!-- Provide correct 'enum' argument to 'Enum.HasFlag' --> 
-    <Rule Id="CA2249" Action="Info" />             <!-- Consider using 'string.Contains' instead of 'string.IndexOf' --> 
-    <Rule Id="CA2300" Action="None" />             <!-- Do not use insecure deserializer BinaryFormatter --> 
-    <Rule Id="CA2301" Action="None" />             <!-- Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder --> 
-    <Rule Id="CA2302" Action="None" />             <!-- Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize --> 
-    <Rule Id="CA2305" Action="None" />             <!-- Do not use insecure deserializer LosFormatter --> 
-    <Rule Id="CA2310" Action="None" />             <!-- Do not use insecure deserializer NetDataContractSerializer --> 
-    <Rule Id="CA2311" Action="None" />             <!-- Do not deserialize without first setting NetDataContractSerializer.Binder --> 
-    <Rule Id="CA2312" Action="None" />             <!-- Ensure NetDataContractSerializer.Binder is set before deserializing --> 
-    <Rule Id="CA2315" Action="None" />             <!-- Do not use insecure deserializer ObjectStateFormatter --> 
-    <Rule Id="CA2321" Action="None" />             <!-- Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver --> 
-    <Rule Id="CA2322" Action="None" />             <!-- Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing --> 
-    <Rule Id="CA2326" Action="None" />             <!-- Do not use TypeNameHandling values other than None --> 
-    <Rule Id="CA2350" Action="None" />             <!-- Do not use DataTable.ReadXml() with untrusted data --> 
-    <Rule Id="CA2351" Action="None" />             <!-- Do not use DataSet.ReadXml() with untrusted data --> 
-    <Rule Id="CA2352" Action="None" />             <!-- Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks --> 
-    <Rule Id="CA2353" Action="None" />             <!-- Unsafe DataSet or DataTable in serializable type --> 
-    <Rule Id="CA2354" Action="None" />             <!-- Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks --> 
-    <Rule Id="CA2355" Action="None" />             <!-- Unsafe DataSet or DataTable type found in deserializable object graph --> 
-    <Rule Id="CA2356" Action="None" />             <!-- Unsafe DataSet or DataTable type in web deserializable object graph --> 
-    <Rule Id="CA2361" Action="None" />             <!-- Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data --> 
-    <Rule Id="CA2362" Action="None" />             <!-- Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks --> 
-    <Rule Id="CA3001" Action="None" />             <!-- Review code for SQL injection vulnerabilities --> 
-    <Rule Id="CA3002" Action="None" />             <!-- Review code for XSS vulnerabilities --> 
-    <Rule Id="CA3003" Action="None" />             <!-- Review code for file path injection vulnerabilities --> 
-    <Rule Id="CA3004" Action="None" />             <!-- Review code for information disclosure vulnerabilities --> 
-    <Rule Id="CA3005" Action="None" />             <!-- Review code for LDAP injection vulnerabilities --> 
-    <Rule Id="CA3006" Action="None" />             <!-- Review code for process command injection vulnerabilities --> 
-    <Rule Id="CA3007" Action="None" />             <!-- Review code for open redirect vulnerabilities --> 
-    <Rule Id="CA3008" Action="None" />             <!-- Review code for XPath injection vulnerabilities --> 
-    <Rule Id="CA3009" Action="None" />             <!-- Review code for XML injection vulnerabilities --> 
-    <Rule Id="CA3010" Action="None" />             <!-- Review code for XAML injection vulnerabilities --> 
-    <Rule Id="CA3011" Action="None" />             <!-- Review code for DLL injection vulnerabilities --> 
-    <Rule Id="CA3012" Action="None" />             <!-- Review code for regex injection vulnerabilities --> 
-    <Rule Id="CA3061" Action="Warning" />          <!-- Do Not Add Schema By URL --> 
-    <Rule Id="CA3075" Action="Warning" />          <!-- Insecure DTD processing in XML --> 
-    <Rule Id="CA3076" Action="Warning" />          <!-- Insecure XSLT script processing. --> 
-    <Rule Id="CA3077" Action="Warning" />          <!-- Insecure Processing in API Design, XmlDocument and XmlTextReader --> 
-    <Rule Id="CA3147" Action="Warning" />          <!-- Mark Verb Handlers With Validate Antiforgery Token --> 
-    <Rule Id="CA5350" Action="Warning" />          <!-- Do Not Use Weak Cryptographic Algorithms --> 
-    <Rule Id="CA5351" Action="Warning" />          <!-- Do Not Use Broken Cryptographic Algorithms --> 
-    <Rule Id="CA5358" Action="None" />             <!-- Review cipher mode usage with cryptography experts --> 
-    <Rule Id="CA5359" Action="Warning" />          <!-- Do Not Disable Certificate Validation --> 
-    <Rule Id="CA5360" Action="Warning" />          <!-- Do Not Call Dangerous Methods In Deserialization --> 
-    <Rule Id="CA5361" Action="Warning" />          <!-- Do Not Disable SChannel Use of Strong Crypto --> 
-    <Rule Id="CA5362" Action="None" />             <!-- Potential reference cycle in deserialized object graph --> 
-    <Rule Id="CA5363" Action="Warning" />          <!-- Do Not Disable Request Validation --> 
-    <Rule Id="CA5364" Action="Warning" />          <!-- Do Not Use Deprecated Security Protocols --> 
-    <Rule Id="CA5365" Action="Warning" />          <!-- Do Not Disable HTTP Header Checking --> 
-    <Rule Id="CA5366" Action="None" />             <!-- Use XmlReader For DataSet Read Xml --> 
-    <Rule Id="CA5367" Action="None" />             <!-- Do Not Serialize Types With Pointer Fields --> 
-    <Rule Id="CA5368" Action="Warning" />          <!-- Set ViewStateUserKey For Classes Derived From Page --> 
-    <Rule Id="CA5369" Action="None" />             <!-- Use XmlReader For Deserialize --> 
-    <Rule Id="CA5370" Action="Warning" />          <!-- Use XmlReader For Validating Reader --> 
-    <Rule Id="CA5371" Action="None" />             <!-- Use XmlReader For Schema Read --> 
-    <Rule Id="CA5372" Action="None" />             <!-- Use XmlReader For XPathDocument --> 
-    <Rule Id="CA5373" Action="Warning" />          <!-- Do not use obsolete key derivation function --> 
-    <Rule Id="CA5374" Action="Warning" />          <!-- Do Not Use XslTransform --> 
-    <Rule Id="CA5375" Action="None" />             <!-- Do Not Use Account Shared Access Signature --> 
-    <Rule Id="CA5376" Action="Warning" />          <!-- Use SharedAccessProtocol HttpsOnly --> 
-    <Rule Id="CA5377" Action="Warning" />          <!-- Use Container Level Access Policy --> 
-    <Rule Id="CA5378" Action="Warning" />          <!-- Do not disable ServicePointManagerSecurityProtocols --> 
-    <Rule Id="CA5379" Action="Warning" />          <!-- Do Not Use Weak Key Derivation Function Algorithm --> 
-    <Rule Id="CA5380" Action="Warning" />          <!-- Do Not Add Certificates To Root Store --> 
-    <Rule Id="CA5381" Action="Warning" />          <!-- Ensure Certificates Are Not Added To Root Store --> 
-    <Rule Id="CA5382" Action="None" />             <!-- Use Secure Cookies In ASP.Net Core --> 
-    <Rule Id="CA5383" Action="None" />             <!-- Ensure Use Secure Cookies In ASP.Net Core --> 
-    <Rule Id="CA5384" Action="Warning" />          <!-- Do Not Use Digital Signature Algorithm (DSA) --> 
-    <Rule Id="CA5385" Action="Warning" />          <!-- Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size --> 
-    <Rule Id="CA5386" Action="None" />             <!-- Avoid hardcoding SecurityProtocolType value --> 
-    <Rule Id="CA5387" Action="None" />             <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count --> 
-    <Rule Id="CA5388" Action="None" />             <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function --> 
-    <Rule Id="CA5389" Action="None" />             <!-- Do Not Add Archive Item's Path To The Target File System Path --> 
-    <Rule Id="CA5390" Action="None" />             <!-- Do not hard-code encryption key --> 
-    <Rule Id="CA5391" Action="None" />             <!-- Use antiforgery tokens in ASP.NET Core MVC controllers --> 
-    <Rule Id="CA5392" Action="None" />             <!-- Use DefaultDllImportSearchPaths attribute for P/Invokes --> 
-    <Rule Id="CA5393" Action="None" />             <!-- Do not use unsafe DllImportSearchPath value --> 
-    <Rule Id="CA5394" Action="None" />             <!-- Do not use insecure randomness --> 
-    <Rule Id="CA5395" Action="None" />             <!-- Miss HttpVerb attribute for action methods --> 
-    <Rule Id="CA5396" Action="None" />             <!-- Set HttpOnly to true for HttpCookie --> 
-    <Rule Id="CA5397" Action="None" />             <!-- Do not use deprecated SslProtocols values --> 
-    <Rule Id="CA5398" Action="None" />             <!-- Avoid hardcoded SslProtocols values --> 
-    <Rule Id="CA5399" Action="None" />             <!-- HttpClients should enable certificate revocation list checks --> 
-    <Rule Id="CA5400" Action="None" />             <!-- Ensure HttpClient certificate revocation list check is not disabled --> 
-    <Rule Id="CA5401" Action="None" />             <!-- Do not use CreateEncryptor with non-default IV --> 
-    <Rule Id="CA5402" Action="None" />             <!-- Use CreateEncryptor with the default IV  --> 
-    <Rule Id="CA5403" Action="None" />             <!-- Do not hard-code certificate --> 
-    <Rule Id="IL3000" Action="None" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> 
-    <Rule Id="IL3001" Action="None" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> 
-  </Rules> 
-  <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers"> 
-    <Rule Id="AD0001" Action="Info" /> <!-- Analyzer threw an exception --> 
-    <Rule Id="SA0001" Action="Info" /> <!-- XML comments --> 
-    <Rule Id="SA1000" Action="None" />
-    <Rule Id="SA1001" Action="None" />
-    <Rule Id="SA1002" Action="Info" /> <!-- Semicolons should not be preceded by a space --> 
-    <Rule Id="SA1003" Action="None" />
-    <Rule Id="SA1004" Action="Info" /> <!-- Documentation line should begin with a space --> 
-    <Rule Id="SA1005" Action="Info" /> <!-- Single line comment should begin with a space -->
-    <Rule Id="SA1006" Action="Info" /> <!-- Region should not be preceded by a space -->
-    <Rule Id="SA1008" Action="Info" /> <!-- Opening parenthesis should not be preceded by a space --> 
-    <Rule Id="SA1009" Action="Info" /> <!-- Closing parenthesis should not be followed by a space --> 
-    <Rule Id="SA1010" Action="Info" /> <!-- Opening square brackets should not be preceded by a space --> 
-    <Rule Id="SA1011" Action="Info" /> <!-- Closing square bracket should be followed by a space --> 
-    <Rule Id="SA1012" Action="Info" /> <!-- Opening brace should be followed by a space --> 
-    <Rule Id="SA1013" Action="Info" /> <!-- Closing brace should be preceded by a space --> 
-    <Rule Id="SA1015" Action="Info" /> <!-- Closing generic bracket should not be followed by a space --> 
-    <Rule Id="SA1019" Action="None" />
-    <Rule Id="SA1021" Action="Info" /> <!-- Negative sign should be preceded by a space --> 
-    <Rule Id="SA1023" Action="Info" /> <!-- Dereference symbol '*' should not be preceded by a space." --> 
-    <Rule Id="SA1024" Action="Info" /> <!-- Colon should be followed by a space --> 
-    <Rule Id="SA1025" Action="Info" /> <!-- Code should not contain multiple whitespace characters in a row --> 
-    <Rule Id="SA1026" Action="None" />
-    <Rule Id="SA1027" Action="None" />
-    <Rule Id="SA1028" Action="None" />
-    <Rule Id="SA1100" Action="Info" /> <!-- Do not prefix calls with base unless local implementation exists --> 
-    <Rule Id="SA1101" Action="None" />
-    <Rule Id="SA1102" Action="Info" />
-    <Rule Id="SA1106" Action="Info" /> <!-- Code should not contain empty statements --> 
-    <Rule Id="SA1107" Action="Info" /> <!-- Code should not contain multiple statements on one line --> 
-    <Rule Id="SA1108" Action="None" />
-    <Rule Id="SA1110" Action="Info" /> <!-- Opening parenthesis or bracket should be on declaration line --> 
-    <Rule Id="SA1111" Action="Info" /> <!-- Closing parenthesis should be on line of last parameter --> 
-    <Rule Id="SA1112" Action="None" />
-    <Rule Id="SA1113" Action="None" />
-    <Rule Id="SA1114" Action="Info" /> <!-- Parameter list should follow declaration --> 
-    <Rule Id="SA1115" Action="None" />
-    <Rule Id="SA1116" Action="Info" /> <!-- Split parameters should start on line after declaration --> 
-    <Rule Id="SA1117" Action="Info" /> <!-- Parameters should be on same line or separate lines --> 
-    <Rule Id="SA1118" Action="None" />
-    <Rule Id="SA1119" Action="None" />
-    <Rule Id="SA1120" Action="Info" /> <!-- Comments should contain text --> 
-    <Rule Id="SA1121" Action="None" />
-    <Rule Id="SA1122" Action="Info" /> <!-- Use string.Empty for empty strings --> 
-    <Rule Id="SA1123" Action="Info" /> <!-- Region should not be located within a code element --> 
-    <Rule Id="SA1124" Action="None" />
-    <Rule Id="SA1125" Action="Info" /> <!-- Use shorthand for nullable types --> 
-    <Rule Id="SA1127" Action="Info" /> <!-- Generic type constraints should be on their own line --> 
-    <Rule Id="SA1128" Action="Info" /> <!-- Put constructor initializers on their own line --> 
-    <Rule Id="SA1129" Action="None" />
-    <Rule Id="SA1130" Action="Info" /> <!-- Use lambda syntax --> 
-    <Rule Id="SA1131" Action="Info" /> <!-- Constant values should appear on the right-hand side of comparisons --> 
-    <Rule Id="SA1132" Action="Info" /> <!-- Do not combine fields --> 
-    <Rule Id="SA1133" Action="Info" /> <!-- Do not combine attributes --> 
-    <Rule Id="SA1134" Action="Info" /> <!-- Each attribute should be placed on its own line of code --> 
-    <Rule Id="SA1135" Action="Info" /> <!-- Using directive should be qualified --> 
-    <Rule Id="SA1136" Action="Info" /> <!-- Enum values should be on separate lines --> 
-    <Rule Id="SA1137" Action="Info" /> <!-- Elements should have the same indentation --> 
-    <Rule Id="SA1139" Action="None" />
-    <Rule Id="SA1200" Action="None" />
-    <Rule Id="SA1201" Action="Info" /> <!-- Elements should appear in the correct order --> 
-    <Rule Id="SA1202" Action="Info" /> <!-- Elements should be ordered by access --> 
-    <Rule Id="SA1203" Action="Info" /> <!-- Constants should appear before fields --> 
-    <Rule Id="SA1204" Action="Info" /> <!-- Static elements should appear before instance elements --> 
-    <Rule Id="SA1205" Action="None" />
-    <Rule Id="SA1206" Action="None" />
-    <Rule Id="SA1208" Action="Info" /> <!-- Using directive ordering --> 
-    <Rule Id="SA1209" Action="Info" /> <!-- Using alias directives should be placed after all using namespace directives --> 
-    <Rule Id="SA1210" Action="Info" /> <!-- Using directives should be ordered alphabetically by the namespaces --> 
-    <Rule Id="SA1211" Action="Info" /> <!-- Using alias directive ordering --> 
-    <Rule Id="SA1212" Action="None" />
-    <Rule Id="SA1214" Action="Info" /> <!-- Readonly fields should appear before non-readonly fields --> 
-    <Rule Id="SA1216" Action="Info" /> <!-- Using static directives should be placed at the correct location --> 
-    <Rule Id="SA1300" Action="Info" /> <!-- Element should begin with an uppercase letter --> 
-    <Rule Id="SA1303" Action="Info" /> <!-- Const field names should begin with upper-case letter --> 
-    <Rule Id="SA1304" Action="Info" /> <!-- Non-private readonly fields should begin with upper-case letter --> 
-    <Rule Id="SA1306" Action="Info" /> <!-- Field should begin with lower-case letter --> 
-    <Rule Id="SA1307" Action="None" />
-    <Rule Id="SA1308" Action="Info" /> <!-- Field should not begin with the prefix 's_' --> 
-    <Rule Id="SA1309" Action="None" />
-    <Rule Id="SA1310" Action="None" />
-    <Rule Id="SA1311" Action="Info" /> <!-- Static readonly fields should begin with upper-case letter --> 
-    <Rule Id="SA1312" Action="Info" /> <!-- Variable should begin with lower-case letter --> 
-    <Rule Id="SA1313" Action="Info" /> <!-- Parameter should begin with lower-case letter --> 
-    <Rule Id="SA1314" Action="None" />
-    <Rule Id="SA1316" Action="Info" /> <!-- Tuple element names should use correct casing --> 
-    <Rule Id="SA1400" Action="None" />
-    <Rule Id="SA1401" Action="Info" /> <!-- Fields should be private --> 
-    <Rule Id="SA1402" Action="Info" /> <!-- File may only contain a single type --> 
-    <Rule Id="SA1403" Action="Info" /> <!-- File may only contain a single namespace --> 
-    <Rule Id="SA1404" Action="Info" /> <!-- Code analysis suppression should have justification --> 
-    <Rule Id="SA1405" Action="Info" /> <!-- Debug.Assert should provide message text --> 
-    <Rule Id="SA1407" Action="Info" /> <!-- Arithmetic expressions should declare precedence --> 
-    <Rule Id="SA1408" Action="Info" /> <!-- Conditional expressions should declare precedence --> 
-    <Rule Id="SA1410" Action="None" />
-    <Rule Id="SA1411" Action="None" />
-    <Rule Id="SA1413" Action="Info" /> <!-- Use trailing comma in multi-line initializers --> 
-    <Rule Id="SA1414" Action="Info" /> <!-- Tuple types in signatures should have element names --> 
-    <Rule Id="SA1500" Action="Info" /> <!-- Braces for multi-line statements should not share line --> 
-    <Rule Id="SA1501" Action="Info" /> <!-- Statement should not be on a single line --> 
-    <Rule Id="SA1502" Action="Info" /> <!-- Element should not be on a single line --> 
-    <Rule Id="SA1503" Action="Info" /> <!-- Braces should not be omitted --> 
-    <Rule Id="SA1504" Action="Info" /> <!-- All accessors should be single-line or multi-line --> 
-    <Rule Id="SA1505" Action="Info" /> <!-- An opening brace should not be followed by a blank line --> 
-    <Rule Id="SA1506" Action="Info" /> <!-- Element documentation headers should not be followed by blank line --> 
-    <Rule Id="SA1507" Action="Info" /> <!-- Code should not contain multiple blank lines in a row --> 
-    <Rule Id="SA1508" Action="Info" /> <!-- A closing brace should not be preceded by a blank line --> 
-    <Rule Id="SA1509" Action="Info" /> <!-- Opening braces should not be preceded by blank line --> 
-    <Rule Id="SA1510" Action="Info" /> <!-- 'else' statement should not be preceded by a blank line --> 
-    <Rule Id="SA1512" Action="Info" /> <!-- Single-line comments should not be followed by blank line --> 
-    <Rule Id="SA1513" Action="Info" /> <!-- Closing brace should be followed by blank line --> 
-    <Rule Id="SA1514" Action="Info" /> <!-- Element documentation header should be preceded by blank line --> 
-    <Rule Id="SA1515" Action="Info" /> <!-- Single-line comment should be preceded by blank line --> 
-    <Rule Id="SA1516" Action="Info" /> <!-- Elements should be separated by blank line --> 
-    <Rule Id="SA1517" Action="None" />
-    <Rule Id="SA1518" Action="Info" /> <!-- Code should not contain blank lines at the end of the file -->
-    <Rule Id="SA1519" Action="Info" /> <!-- Braces should not be omitted from multi-line child statement --> 
-    <Rule Id="SA1520" Action="Info" /> <!-- Use braces consistently --> 
-    <Rule Id="SA1600" Action="None" />
-    <Rule Id="SA1601" Action="Info" /> <!-- Partial elements should be documented --> 
-    <Rule Id="SA1602" Action="Info" /> <!-- Enumeration items should be documented --> 
-    <Rule Id="SA1604" Action="Info" /> <!-- Element documentation should have summary --> 
-    <Rule Id="SA1605" Action="Info" /> <!-- Partial element documentation should have summary --> 
-    <Rule Id="SA1606" Action="Info" /> <!-- Element documentation should have summary text --> 
-    <Rule Id="SA1608" Action="Info" /> <!-- Element documentation should not have default summary --> 
-    <Rule Id="SA1610" Action="Info" /> <!-- Property documentation should have value text --> 
-    <Rule Id="SA1611" Action="Info" /> <!-- The documentation for parameter 'message' is missing --> 
-    <Rule Id="SA1612" Action="Info" /> <!-- The parameter documentation is at incorrect position --> 
-    <Rule Id="SA1614" Action="Info" /> <!-- Element parameter documentation should have text --> 
-    <Rule Id="SA1615" Action="None" />
-    <Rule Id="SA1616" Action="Info" /> <!-- Element return value documentation should have text --> 
-    <Rule Id="SA1617" Action="None" />
-    <Rule Id="SA1618" Action="Info" /> <!-- The documentation for type parameter is missing --> 
-    <Rule Id="SA1619" Action="Info" /> <!-- The documentation for type parameter is missing --> 
-    <Rule Id="SA1622" Action="Info" /> <!-- Generic type parameter documentation should have text --> 
-    <Rule Id="SA1623" Action="Info" /> <!-- Property documentation text --> 
-    <Rule Id="SA1624" Action="Info" /> <!-- Because the property only contains a visible get accessor, the documentation summary text should begin with 'Gets' --> 
-    <Rule Id="SA1625" Action="None" />
-    <Rule Id="SA1626" Action="Info" /> <!-- Single-line comments should not use documentation style slashes --> 
-    <Rule Id="SA1627" Action="Info" /> <!-- The documentation text within the \'exception\' tag should not be empty --> 
-    <Rule Id="SA1629" Action="Info" /> <!-- Documentation text should end with a period --> 
-    <Rule Id="SA1633" Action="Info" /> <!-- File should have header --> 
-    <Rule Id="SA1642" Action="Info" /> <!-- Constructor summary documentation should begin with standard text --> 
-    <Rule Id="SA1643" Action="Info" /> <!-- Destructor summary documentation should begin with standard text --> 
-    <Rule Id="SA1649" Action="Info" /> <!-- File name should match first type name --> 
-    <Rule Id="SA1652" Action="None" />
-  </Rules> 
-  <Rules AnalyzerId="xunit.analyzers" RuleNamespace="xunit.analyzers"> 
-    <Rule Id="xUnit2013" Action="None" /> <!-- Do not use equality check to check for collection size. --> 
-  </Rules> 
-</RuleSet> 
