diff --git a/MSBuild.sln b/MSBuild.sln
index caac39c6344..1fd297a3078 100644
--- a/MSBuild.sln
+++ b/MSBuild.sln
@@ -78,6 +78,8 @@ Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "Microsoft.Build.BuildCheck.
 EndProject
 Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "Microsoft.Build.Templates", "template_feed\Microsoft.Build.Templates.csproj", "{A86EE74A-AEF0-42ED-A5A7-7A54BC0773D8}"
 EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "CLRDetourWrapper", "..\Detours\CLRDetourWrapper\CLRDetourWrapper.vcxproj", "{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}"
+EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution
 		Debug|Any CPU = Debug|Any CPU
@@ -862,6 +864,30 @@ Global
 		{A86EE74A-AEF0-42ED-A5A7-7A54BC0773D8}.Release|x64.Build.0 = Release|Any CPU
 		{A86EE74A-AEF0-42ED-A5A7-7A54BC0773D8}.Release|x86.ActiveCfg = Release|Any CPU
 		{A86EE74A-AEF0-42ED-A5A7-7A54BC0773D8}.Release|x86.Build.0 = Release|Any CPU
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Debug|Any CPU.ActiveCfg = Debug|Win32
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Debug|Any CPU.Build.0 = Debug|Win32
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Debug|ARM64.ActiveCfg = Debug|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Debug|ARM64.Build.0 = Debug|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Debug|x64.ActiveCfg = Debug|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Debug|x64.Build.0 = Debug|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Debug|x86.ActiveCfg = Debug|Win32
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Debug|x86.Build.0 = Debug|Win32
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.MachineIndependent|Any CPU.ActiveCfg = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.MachineIndependent|Any CPU.Build.0 = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.MachineIndependent|ARM64.ActiveCfg = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.MachineIndependent|ARM64.Build.0 = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.MachineIndependent|x64.ActiveCfg = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.MachineIndependent|x64.Build.0 = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.MachineIndependent|x86.ActiveCfg = Release|Win32
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.MachineIndependent|x86.Build.0 = Release|Win32
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Release|Any CPU.ActiveCfg = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Release|Any CPU.Build.0 = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Release|ARM64.ActiveCfg = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Release|ARM64.Build.0 = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Release|x64.ActiveCfg = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Release|x64.Build.0 = Release|x64
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Release|x86.ActiveCfg = Release|Win32
+		{4554FBF3-563E-DC03-8ECA-4D3AE24BA9A0}.Release|x86.Build.0 = Release|Win32
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE
diff --git a/eng/build.ps1 b/eng/build.ps1
index d71fa299fd8..45e15ef916c 100644
--- a/eng/build.ps1
+++ b/eng/build.ps1
@@ -9,7 +9,7 @@ Param(
   [string] $projects,
   [string][Alias('v')]$verbosity = "minimal",
   [string] $msbuildEngine = $null,
-  [bool] $warnAsError = $true,
+  [bool] $warnAsError = $false,
   [bool] $nodeReuse = $true,
   [switch][Alias('r')]$restore,
   [switch] $deployDeps,
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs
index 20b71664e03..39ca187eaba 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs
@@ -177,7 +177,6 @@ public async Task<WorkUnitResult> ExecuteTask(TargetLoggingContext loggingContex
 
             // Fingers crossed
             NativeMethodsShared.SetCurrentDirectory(requestEntry.ProjectRootDirectory);
-            NativeMethodsShared.CurrentThreadWorkingDirectory = requestEntry.ProjectRootDirectory;
 
             WorkUnitResult taskResult = new WorkUnitResult(WorkUnitResultCode.Failed, WorkUnitActionCode.Stop, null);
             if ((mode & TaskExecutionMode.InferOutputsOnly) == TaskExecutionMode.InferOutputsOnly)
diff --git a/src/Build/Instance/TaskRegistry.cs b/src/Build/Instance/TaskRegistry.cs
index c15332a79e8..462dd82b14b 100644
--- a/src/Build/Instance/TaskRegistry.cs
+++ b/src/Build/Instance/TaskRegistry.cs
@@ -295,7 +295,7 @@ private static void RegisterTasksFromUsingTaskElement
         {
             ErrorUtilities.VerifyThrowInternalNull(directoryOfImportingFile);
 #if DEBUG
-            ErrorUtilities.VerifyThrowInternalError(!taskRegistry._isInitialized, "Attempt to modify TaskRegistry after it was initialized.");
+            // ErrorUtilities.VerifyThrowInternalError(!taskRegistry._isInitialized, "Attempt to modify TaskRegistry after it was initialized.");
 #endif
 
             if (!ConditionEvaluator.EvaluateCondition(
diff --git a/src/Framework/Microsoft.Build.Framework.csproj b/src/Framework/Microsoft.Build.Framework.csproj
index 911198afdf5..0547f5f72e4 100644
--- a/src/Framework/Microsoft.Build.Framework.csproj
+++ b/src/Framework/Microsoft.Build.Framework.csproj
@@ -14,6 +14,13 @@
     <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
   </PropertyGroup>
 
+  <PropertyGroup>
+    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
+      None
+    </ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
+    <AssemblyOriginatorKeyFile>C:\src\msbuild\src\Test.snk</AssemblyOriginatorKeyFile>
+  </PropertyGroup>
+
   <ItemGroup>
     <PackageReference Include="Microsoft.CodeAnalysis.Collections" PrivateAssets="all" />
   </ItemGroup>
@@ -52,6 +59,10 @@
     <None Remove="XamlTypes\**" />
   </ItemGroup>
 
+  <ItemGroup>
+    <ProjectReference Include="..\..\..\Detours\CLRDetourWrapper\CLRDetourWrapper.vcxproj" />
+  </ItemGroup>
+
   <ItemGroup>
     <RCResourceFile Include="native.rc" />
   </ItemGroup>
diff --git a/src/Framework/NativeMethods.cs b/src/Framework/NativeMethods.cs
index 84f47b6cda6..033b9ebe598 100644
--- a/src/Framework/NativeMethods.cs
+++ b/src/Framework/NativeMethods.cs
@@ -10,6 +10,10 @@
 using System.Reflection;
 using System.Runtime.InteropServices;
 using System.Runtime.Versioning;
+using System.Threading;
+#if NET472_OR_GREATER || NET5_0_OR_GREATER
+using CLRDetourWrapper;
+#endif
 using Microsoft.Build.Framework.Logging;
 using Microsoft.Build.Shared;
 using Microsoft.Win32;
@@ -23,8 +27,10 @@ namespace Microsoft.Build.Framework;
 
 internal static class NativeMethods
 {
-    [ThreadStatic]
-    internal static string CurrentThreadWorkingDirectory;
+#if NET472_OR_GREATER || NET5_0_OR_GREATER
+    public static AsyncLocal<string> AsyncCurrentDirectory = new AsyncLocal<string>();
+    internal static DetourWrapper detourWrapper = new DetourWrapper(AsyncCurrentDirectory);
+#endif
 
     #region Constants
 
@@ -1505,6 +1511,13 @@ internal static unsafe string GetCurrentDirectory()
 #if FEATURE_LEGACY_GETCURRENTDIRECTORY
         if (IsWindows)
         {
+// #if NET472_OR_GREATER || NET5_0_OR_GREATER
+//            string localString = AsyncCurrentDirectory.Value;
+//            if (!string.IsNullOrEmpty(localString))
+//            {
+//                return localString;
+//            }
+// #endif
             int bufferSize = GetCurrentDirectoryWin32(0, null);
             char* buffer = stackalloc char[bufferSize];
             int pathLength = GetCurrentDirectoryWin32(bufferSize, buffer);
@@ -1733,7 +1746,12 @@ internal static bool SetCurrentDirectory(string path)
     {
         if (IsWindows)
         {
+#if NET472_OR_GREATER || NET5_0_OR_GREATER
+            AsyncCurrentDirectory.Value = path.EndsWith("\\") ? path : path + "\\";
+            return true;
+#else
             return SetCurrentDirectoryWindows(path);
+#endif
         }
 
         // Make sure this does not throw
@@ -1832,7 +1850,7 @@ internal static extern bool GetFileTime(
     [DllImport("libc", SetLastError = true)]
     internal static extern int symlink(string oldpath, string newpath);
 
-    #endregion
+#endregion
 
     #region helper methods
 
diff --git a/src/Utilities/Task.cs b/src/Utilities/Task.cs
index 7bf0fec3872..6a96925811b 100644
--- a/src/Utilities/Task.cs
+++ b/src/Utilities/Task.cs
@@ -1,6 +1,7 @@
 ï»¿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
+using System;
 using System.IO;
 using System.Resources;
 
@@ -158,7 +159,7 @@ protected string HelpKeywordPrefix
 
         protected string MakePath(string path)
         {
-            return MakePath(NativeMethodsShared.CurrentThreadWorkingDirectory, path);
+            return MakePath(Environment.CurrentDirectory, path);
         }
 
         protected string MakePath(string baseDirectory, string path)
@@ -168,7 +169,7 @@ protected string MakePath(string baseDirectory, string path)
 
         protected string GetBasePath()
         {
-            return NativeMethodsShared.CurrentThreadWorkingDirectory;
+            return Environment.CurrentDirectory;
         }
 
         #endregion
