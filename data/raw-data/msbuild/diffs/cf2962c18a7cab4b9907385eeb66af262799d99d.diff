diff --git a/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs b/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs
index 96edd2f319a..1922000b7c7 100644
--- a/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs
@@ -33,8 +33,8 @@ public void Dispose()
         }
 
         /// <summary>
-        /// If we pass in an item spec can be normalized down to something under the max path, it should still work and not
-        /// throw a path too long exception or file not found exception
+        /// If we pass in an item spec that is over the max path but it can be normalized down to something under the max path, we should still work and not
+        /// throw a path too long exception
         /// </summary>
         [Fact]
         public void ProjectItemSpecTooLong()
diff --git a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/MSBuild.cs b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/MSBuild.cs
index 7f70cee318f..b072bdbe462 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/MSBuild.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/MSBuild.cs
@@ -550,7 +550,7 @@ internal static async Task<bool> ExecuteTargets(
                 if (projects[i] != null)
                 {
                     // Retrieve projectDirectory only the first time.  It never changes anyway.
-                    string projectPath = FileUtilities.GetFullPathNoThrow(projects[i].ItemSpec);
+                    string projectPath = FileUtilities.AttemptToShortenPath(projects[i].ItemSpec);
                     projectDirectory[i] = Path.GetDirectoryName(projectPath);
                     projectNames[i] = projects[i].ItemSpec;
                     toolsVersions[i] = toolsVersion;
diff --git a/src/Tasks.UnitTests/MSBuild_Tests.cs b/src/Tasks.UnitTests/MSBuild_Tests.cs
index 46a4de15cb9..9a17e9b848f 100644
--- a/src/Tasks.UnitTests/MSBuild_Tests.cs
+++ b/src/Tasks.UnitTests/MSBuild_Tests.cs
@@ -35,8 +35,8 @@ public void Dispose()
         }
 
         /// <summary>
-        /// If we pass in an item spec that can be normalized down to something under the max path, it should still work and not
-        /// throw a path too long exception or file not found exception
+        /// If we pass in an item spec that is over the max path but it can be normalized down to something under the max path, we should still work and not
+        /// throw a path too long exception
         /// </summary>
         [Fact]
         public void ProjectItemSpecTooLong()
