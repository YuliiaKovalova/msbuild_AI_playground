diff --git a/src/MSBuild/CommandLineSwitches.cs b/src/MSBuild/CommandLineSwitches.cs
index a7d5cf0df1f..ca064d32cc4 100644
--- a/src/MSBuild/CommandLineSwitches.cs
+++ b/src/MSBuild/CommandLineSwitches.cs
@@ -381,19 +381,16 @@ internal static bool IsParameterizedSwitch(
         internal static IEnumerable<string> GetParameterizedSwitchResourceIds()
         {
             HashSet<string> parameterizedSwitchResourceIds = new HashSet<string>();
-            foreach(ParameterizedSwitchInfo parameterizedSwitch in s_parameterizedSwitchesMap)
+            foreach (ParameterizedSwitchInfo parameterizedSwitch in s_parameterizedSwitchesMap)
             {
                 string resourceId = parameterizedSwitch.resourceId;
-                if (!string.IsNullOrEmpty(resourceId) && !parameterizedSwitchResourceIds.Contains(resourceId))
+                if (!string.IsNullOrEmpty(resourceId) && parameterizedSwitchResourceIds.Add(resourceId))
                 {
-                    parameterizedSwitchResourceIds.Add(resourceId);
                     yield return resourceId;
                 }
             }
         }
 
-        private static void forreach(ParameterizedSwitchInfo parameterizedSwitchInfo, object parameterizedSwitch, in ParameterizedSwitchInfo[] s_parameterizedSwitchesMap) => throw new NotImplementedException();
-
         /// <summary>
         /// Get the distinct parameterless switchs map resource ids.
         /// </summary>
@@ -404,9 +401,8 @@ internal static IEnumerable<string> GetParameterlessSwitchResourceIds()
             foreach (ParameterlessSwitchInfo parameterlessSwitch in s_parameterlessSwitchesMap)
             {
                 string resourceId = parameterlessSwitch.resourceId;
-                if (!parameterlessSwitchResourceIds.Contains(resourceId) && !string.IsNullOrEmpty(resourceId))
+                if (parameterlessSwitchResourceIds.Add(resourceId) && !string.IsNullOrEmpty(resourceId))
                 {
-                    parameterlessSwitchResourceIds.Add(resourceId);
                     yield return resourceId;
                 }
             }
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index d5b3e6985a8..4ae48d51476 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -4483,13 +4483,8 @@ private static void ShowHelpMessage()
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_3_SwitchesHeader"));
             foreach (string parameterizedSwitchRsouceId in CommandLineSwitches.GetParameterizedSwitchResourceIds())
             {
-                {
-                    Console.WriteLine(AssemblyResources.GetString(parameterizedSwitchRsouceId));
-                }
+                Console.WriteLine(AssemblyResources.GetString(parameterizedSwitchRsouceId));
             }
-#if FEATURE_NODE_REUSE // Do not advertise the switch when feature is off, even though we won't fail to parse it for compatibility with existing build scripts
-            Console.WriteLine(AssemblyResources.GetString("HelpMessage_24_NodeReuse"));
-#endif
             foreach (string parameterlessSwitchRsouceId in CommandLineSwitches.GetParameterlessSwitchResourceIds())
             {
                 Console.WriteLine(AssemblyResources.GetString(parameterlessSwitchRsouceId));
