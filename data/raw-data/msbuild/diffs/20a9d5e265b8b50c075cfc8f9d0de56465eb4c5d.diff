diff --git a/eng/SourceBuild.props b/eng/SourceBuild.props
index d0989ae9c8b..0bc1c2b8324 100644
--- a/eng/SourceBuild.props
+++ b/eng/SourceBuild.props
@@ -8,6 +8,8 @@
   <Target Name="ConfigureInnerBuildArgs" BeforeTargets="GetSourceBuildCommandConfiguration">
     <PropertyGroup>
       <InnerBuildArgs>$(InnerBuildArgs) /p:Projects="$(InnerSourceBuildRepoRoot)\MSBuild.SourceBuild.slnf"</InnerBuildArgs>
+      <!-- Disable package validation as source build filters out target frameworks. -->
+      <InnerBuildArgs>$(InnerBuildArgs) /p:EnablePackageValidation=false</InnerBuildArgs>
     </PropertyGroup>
   </Target>
 
diff --git a/eng/Versions.props b/eng/Versions.props
index 73361ce2ec4..902ab5b6c43 100644
--- a/eng/Versions.props
+++ b/eng/Versions.props
@@ -3,6 +3,7 @@
 <Project>
   <PropertyGroup>
     <VersionPrefix>17.5.0</VersionPrefix>
+    <PackageValidationBaselineVersion>17.4.0</PackageValidationBaselineVersion>
     <AssemblyVersion>15.1.0.0</AssemblyVersion>
     <PreReleaseVersionLabel>preview</PreReleaseVersionLabel>
     <DotNetUseShippingVersions>true</DotNetUseShippingVersions>
diff --git a/eng/dependabot/Packages.props b/eng/dependabot/Packages.props
index 91689e572b6..dc823e73741 100644
--- a/eng/dependabot/Packages.props
+++ b/eng/dependabot/Packages.props
@@ -16,9 +16,6 @@
     <PackageReference Update="LargeAddressAware" Version="1.0.5" />
     <PackageReference Update="LargeAddressAware" Condition="'$(LargeAddressAwareVersion)' != ''" Version="$(LargeAddressAwareVersion)" />
 
-    <PackageReference Update="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.3" />
-    <PackageReference Update="Microsoft.CodeAnalysis.PublicApiAnalyzers" Condition="'$(MicrosoftCodeAnalysisPublicApiAnalyzersVersion)' != ''" Version="$(MicrosoftCodeAnalysisPublicApiAnalyzersVersion)" />
-
     <PackageReference Update="Microsoft.VisualStudio.SDK.EmbedInteropTypes" Version="15.0.36" />
     <PackageReference Update="Microsoft.VisualStudio.SDK.EmbedInteropTypes" Condition="'$(MicrosoftVisualStudioSDKEmbedInteropTypesVersion)' != ''" Version="$(MicrosoftVisualStudioSDKEmbedInteropTypesVersion)" />
 
diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index 7ec2ec46738..6e13af19356 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -20,6 +20,7 @@
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is used to create, edit, and evaluate MSBuild projects.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
     <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">full</ApplyNgenOptimization>
+    <EnablePackageValidation>true</EnablePackageValidation>
 
     <!-- Do not generate a warning that our 'stable' package should not have a prerelease dependency. -->
     <NoWarn>$(NoWarn);NU5104</NoWarn>
diff --git a/src/Build/PublicAPI/net/PublicAPI.Shipped.txt b/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
deleted file mode 100644
index b006f76520c..00000000000
--- a/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,1836 +0,0 @@
-abstract Microsoft.Build.Construction.ElementLocation.Column.get -> int
-abstract Microsoft.Build.Construction.ElementLocation.File.get -> string
-abstract Microsoft.Build.Construction.ElementLocation.Line.get -> int
-abstract Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty.get -> bool
-abstract Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty.get -> bool
-abstract Microsoft.Build.Evaluation.ProjectProperty.IsImported.get -> bool
-abstract Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty.get -> bool
-abstract Microsoft.Build.Evaluation.ProjectProperty.Name.get -> string
-abstract Microsoft.Build.Evaluation.ProjectProperty.Predecessor.get -> Microsoft.Build.Evaluation.ProjectProperty
-abstract Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue.get -> string
-abstract Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue.set -> void
-abstract Microsoft.Build.Evaluation.ProjectProperty.Xml.get -> Microsoft.Build.Construction.ProjectPropertyElement
-abstract Microsoft.Build.Execution.ProjectTargetInstanceChild.Condition.get -> string
-abstract Microsoft.Build.Execution.ProjectTargetInstanceChild.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.Execution.ProjectTargetInstanceChild.Location.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.Execution.ProjectTaskInstanceChild.Condition.get -> string
-abstract Microsoft.Build.Execution.ProjectTaskInstanceChild.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.Execution.ProjectTaskInstanceChild.Location.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.Execution.ProjectTaskInstanceChild.TaskParameterLocation.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.HasLoggedErrors.get -> bool
-abstract Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.HasLoggedErrors.set -> void
-abstract Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.LogError(string error) -> void
-abstract Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.LogMessage(string message, Microsoft.Build.Framework.MessageImportance? messageImportance = null) -> void
-abstract Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.LogWarning(string warning) -> void
-abstract Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.BeginBuildAsync(Microsoft.Build.Experimental.ProjectCache.CacheContext context, Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
-abstract Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.EndBuildAsync(Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
-abstract Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.GetCacheResultAsync(Microsoft.Build.Execution.BuildRequestData buildRequest, Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.Build.Experimental.ProjectCache.CacheResult>
-abstract Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.GetLoadedProjects(string filePath) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Project>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement child) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.Count.get -> int
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement factory, Microsoft.Build.Construction.ProjectElementContainer parent) -> Microsoft.Build.Construction.ProjectElementContainer
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.FirstChild.get -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.LastChild.get -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.RemoveChild(Microsoft.Build.Construction.ProjectElement child) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.Attributes.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.ObjectModelRemoting.XmlAttributeLink>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ContainingProject.get -> Microsoft.Build.Construction.ProjectRootElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement owner) -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ElementName.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ExpressedAsAttribute.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ExpressedAsAttribute.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributeLocation(string attributeName) -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributeValue(string attributeName, bool nullIfNotExists) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.Location.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.NextSibling.get -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.OuterElement.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.Parent.get -> Microsoft.Build.Construction.ProjectElementContainer
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.PreviousSibling.get -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.PureText.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.SetOrRemoveAttribute(string name, string value, bool clearAttributeCache, string reason, string param) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.Content.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.Content.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.GetSubElement(string name) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.SetSubElement(string name, string value) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink.ImplicitImportLocation.get -> Microsoft.Build.Construction.ImplicitImportLocation
-abstract Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink.OriginalElement.get -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.GetMetadata(string name) -> Microsoft.Build.Evaluation.ProjectMetadata
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.GetMetadataValue(string name) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.ItemType.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.Project.get -> Microsoft.Build.Evaluation.Project
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.SetMetadataValue(string name, string unevaluatedValue) -> Microsoft.Build.Evaluation.ProjectMetadata
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink.ChangeItemType(string newType) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.ChangeItemType(string newItemType) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.DirectMetadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.EvaluatedInclude.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.GetMetadata(string name) -> Microsoft.Build.Evaluation.ProjectMetadata
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.GetMetadataValue(string name) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.HasMetadata(string name) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.MetadataCollection.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.Project.get -> Microsoft.Build.Evaluation.Project
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.RemoveMetadata(string name) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.Rename(string name) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.SetMetadataValue(string name, string unevaluatedValue, bool propagateMetadataToSiblingItems) -> Microsoft.Build.Evaluation.ProjectMetadata
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.Xml.get -> Microsoft.Build.Construction.ProjectItemElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.AddItem(string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.AddItemFast(string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.AllEvaluatedItemDefinitionMetadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.AllEvaluatedItems.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.AllEvaluatedProperties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ConditionedProperties.get -> System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<string>>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings settings, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> Microsoft.Build.Execution.ProjectInstance
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.DisableMarkDirty.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.DisableMarkDirty.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ExpandString(string unexpandedValue) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetAllGlobs(Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetAllGlobs(string itemType, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem item, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemProvenance(string itemToMatch, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemProvenance(string itemToMatch, string itemType, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItems(string itemType) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemsByEvaluatedInclude(string evaluatedInclude) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemsIgnoringCondition(string itemType) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetLogicalProject() -> System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetProperty(string name) -> Microsoft.Build.Evaluation.ProjectProperty
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetPropertyValue(string name) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Imports.get -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ImportsIncludingDuplicates.get -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.IsBuildEnabled.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.IsBuildEnabled.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.IsDirty.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ItemDefinitions.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Evaluation.ProjectItemDefinition>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ItemsIgnoringCondition.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ItemTypes.get -> System.Collections.Generic.ICollection<string>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.LastEvaluationId.get -> int
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.MarkDirty() -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ReevaluateIfNecessary(Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveGlobalProperty(string name) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveItem(Microsoft.Build.Evaluation.ProjectItem item) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveItems(System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectItem> items) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty property) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SaveLogicalProject(System.IO.TextWriter writer) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SetGlobalProperty(string name, string escapedValue) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SetProperty(string name, string unevaluatedValue) -> Microsoft.Build.Evaluation.ProjectProperty
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SkipEvaluation.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SkipEvaluation.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SubToolsetVersion.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Targets.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectTargetInstance>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ThrowInsteadOfSplittingItemElement.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ThrowInsteadOfSplittingItemElement.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ToolsVersion.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Unload() -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Xml.get -> Microsoft.Build.Construction.ProjectRootElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink.ChangeName(string newName) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink.Value.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink.Value.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.EvaluatedValueEscaped.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.Parent.get -> object
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.Predecessor.get -> Microsoft.Build.Evaluation.ProjectMetadata
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.Xml.get -> Microsoft.Build.Construction.ProjectMetadataElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink.ChangeName(string newName) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink.Value.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink.Value.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.EvaluatedIncludeEscaped.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsEnvironmentProperty.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsGlobalProperty.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsImported.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsReservedProperty.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Name.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Predecessor.get -> Microsoft.Build.Evaluation.ProjectProperty
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Project.get -> Microsoft.Build.Evaluation.Project
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.UnevaluatedValue.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.UnevaluatedValue.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Xml.get -> Microsoft.Build.Construction.ProjectPropertyElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateChooseElement() -> Microsoft.Build.Construction.ProjectChooseElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateImportElement(string project) -> Microsoft.Build.Construction.ProjectImportElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateImportGroupElement() -> Microsoft.Build.Construction.ProjectImportGroupElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemDefinitionElement(string itemType) -> Microsoft.Build.Construction.ProjectItemDefinitionElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemDefinitionGroupElement() -> Microsoft.Build.Construction.ProjectItemDefinitionGroupElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemElement(string itemType) -> Microsoft.Build.Construction.ProjectItemElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemElement(string itemType, string include) -> Microsoft.Build.Construction.ProjectItemElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemGroupElement() -> Microsoft.Build.Construction.ProjectItemGroupElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateMetadataElement(string name) -> Microsoft.Build.Construction.ProjectMetadataElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateMetadataElement(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectMetadataElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateOnErrorElement(string executeTargets) -> Microsoft.Build.Construction.ProjectOnErrorElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateOtherwiseElement() -> Microsoft.Build.Construction.ProjectOtherwiseElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateOutputElement(string taskParameter, string itemType, string propertyName) -> Microsoft.Build.Construction.ProjectOutputElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateProjectExtensionsElement() -> Microsoft.Build.Construction.ProjectExtensionsElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateProjectSdkElement(string sdkName, string sdkVersion) -> Microsoft.Build.Construction.ProjectSdkElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreatePropertyElement(string name) -> Microsoft.Build.Construction.ProjectPropertyElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreatePropertyGroupElement() -> Microsoft.Build.Construction.ProjectPropertyGroupElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateTargetElement(string name) -> Microsoft.Build.Construction.ProjectTargetElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateTaskElement(string name) -> Microsoft.Build.Construction.ProjectTaskElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskBodyElement(string evaluate, string body) -> Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskElement(string taskName, string assemblyFile, string assemblyName, string runtime, string architecture) -> Microsoft.Build.Construction.ProjectUsingTaskElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskParameterElement(string name, string output, string required, string parameterType) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskParameterGroupElement() -> Microsoft.Build.Construction.UsingTaskParameterGroupElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateWhenElement(string condition) -> Microsoft.Build.Construction.ProjectWhenElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.DirectoryPath.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Encoding.get -> System.Text.Encoding
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.FullPath.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.FullPath.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.HasUnsavedChanges.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.LastWriteTimeWhenRead.get -> System.DateTime
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.MarkDirty(string reason, string param) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.PreserveFormatting.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ProjectFileLocation.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.RawXml.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ReloadFrom(string path, bool throwIfUnsavedChanges, bool preserveFormatting) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ReloadFrom(System.Xml.XmlReader reader, bool throwIfUnsavedChanges, bool preserveFormatting) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Save(System.IO.TextWriter writer) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Save(System.Text.Encoding saveEncoding) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.TimeLastChanged.get -> System.DateTime
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Version.get -> int
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink.Name.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink.Name.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink.Returns.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.GetParameter(string name) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.ParameterLocations.get -> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Microsoft.Build.Construction.ElementLocation>>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.Parameters.get -> System.Collections.Generic.IDictionary<string, string>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.RemoveAllParameters() -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.RemoveParameter(string name) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.SetParameter(string name, string unevaluatedValue) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink.TaskBody.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink.TaskBody.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink.Name.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink.Name.set -> void
-const Microsoft.Build.Evaluation.MatchOnMetadataConstants.MatchOnMetadataOptionsDefaultValue = Microsoft.Build.Evaluation.MatchOnMetadataOptions.CaseSensitive -> Microsoft.Build.Evaluation.MatchOnMetadataOptions
-Microsoft.Build.BackEnd.SdkResolution.SdkResolverException
-Microsoft.Build.BackEnd.SdkResolution.SdkResolverException.Resolver.get -> Microsoft.Build.Framework.SdkResolver
-Microsoft.Build.BackEnd.SdkResolution.SdkResolverException.Sdk.get -> Microsoft.Build.Framework.SdkReference
-Microsoft.Build.BackEnd.SdkResolution.SdkResolverException.SdkResolverException(string resourceName, Microsoft.Build.Framework.SdkResolver resolver, Microsoft.Build.Framework.SdkReference sdk, System.Exception innerException, params string[] args) -> void
-Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ElementLocation.ElementLocation() -> void
-Microsoft.Build.Construction.ElementLocation.LocationString.get -> string
-Microsoft.Build.Construction.ImplicitImportLocation
-Microsoft.Build.Construction.ImplicitImportLocation.Bottom = 2 -> Microsoft.Build.Construction.ImplicitImportLocation
-Microsoft.Build.Construction.ImplicitImportLocation.None = 0 -> Microsoft.Build.Construction.ImplicitImportLocation
-Microsoft.Build.Construction.ImplicitImportLocation.Top = 1 -> Microsoft.Build.Construction.ImplicitImportLocation
-Microsoft.Build.Construction.ProjectChooseElement
-Microsoft.Build.Construction.ProjectChooseElement.OtherwiseElement.get -> Microsoft.Build.Construction.ProjectOtherwiseElement
-Microsoft.Build.Construction.ProjectChooseElement.WhenElements.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectWhenElement>
-Microsoft.Build.Construction.ProjectConfigurationInSolution
-Microsoft.Build.Construction.ProjectConfigurationInSolution.ConfigurationName.get -> string
-Microsoft.Build.Construction.ProjectConfigurationInSolution.FullName.get -> string
-Microsoft.Build.Construction.ProjectConfigurationInSolution.IncludeInBuild.get -> bool
-Microsoft.Build.Construction.ProjectConfigurationInSolution.PlatformName.get -> string
-Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElement.AllParents.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElementContainer>
-Microsoft.Build.Construction.ProjectElement.Clone() -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElement.ContainingProject.get -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Construction.ProjectElement.ElementName.get -> string
-Microsoft.Build.Construction.ProjectElement.Label.get -> string
-Microsoft.Build.Construction.ProjectElement.Label.set -> void
-Microsoft.Build.Construction.ProjectElement.LabelLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectElement.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectElement.NextSibling.get -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElement.OuterElement.get -> string
-Microsoft.Build.Construction.ProjectElement.Parent.get -> Microsoft.Build.Construction.ProjectElementContainer
-Microsoft.Build.Construction.ProjectElement.PreviousSibling.get -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElementContainer
-Microsoft.Build.Construction.ProjectElementContainer.AllChildren.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>
-Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement child) -> void
-Microsoft.Build.Construction.ProjectElementContainer.Children.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement>
-Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement>
-Microsoft.Build.Construction.ProjectElementContainer.Count.get -> int
-Microsoft.Build.Construction.ProjectElementContainer.FirstChild.get -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference) -> void
-Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference) -> void
-Microsoft.Build.Construction.ProjectElementContainer.LastChild.get -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement child) -> void
-Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren() -> void
-Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement child) -> void
-Microsoft.Build.Construction.ProjectExtensionsElement
-Microsoft.Build.Construction.ProjectExtensionsElement.Content.get -> string
-Microsoft.Build.Construction.ProjectExtensionsElement.Content.set -> void
-Microsoft.Build.Construction.ProjectExtensionsElement.this[string name].get -> string
-Microsoft.Build.Construction.ProjectExtensionsElement.this[string name].set -> void
-Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.Construction.ProjectImportElement.ImplicitImportLocation.get -> Microsoft.Build.Construction.ImplicitImportLocation
-Microsoft.Build.Construction.ProjectImportElement.MinimumVersion.get -> string
-Microsoft.Build.Construction.ProjectImportElement.MinimumVersion.set -> void
-Microsoft.Build.Construction.ProjectImportElement.OriginalElement.get -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectImportElement.Project.get -> string
-Microsoft.Build.Construction.ProjectImportElement.Project.set -> void
-Microsoft.Build.Construction.ProjectImportElement.ProjectLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectImportElement.Sdk.get -> string
-Microsoft.Build.Construction.ProjectImportElement.Sdk.set -> void
-Microsoft.Build.Construction.ProjectImportElement.SdkLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectImportElement.Version.get -> string
-Microsoft.Build.Construction.ProjectImportElement.Version.set -> void
-Microsoft.Build.Construction.ProjectImportGroupElement
-Microsoft.Build.Construction.ProjectImportGroupElement.AddImport(string project) -> Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.Construction.ProjectImportGroupElement.Imports.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectImportElement>
-Microsoft.Build.Construction.ProjectInSolution
-Microsoft.Build.Construction.ProjectInSolution.AbsolutePath.get -> string
-Microsoft.Build.Construction.ProjectInSolution.Dependencies.get -> System.Collections.Generic.IReadOnlyList<string>
-Microsoft.Build.Construction.ProjectInSolution.ParentProjectGuid.get -> string
-Microsoft.Build.Construction.ProjectInSolution.ProjectConfigurations.get -> System.Collections.Generic.IReadOnlyDictionary<string, Microsoft.Build.Construction.ProjectConfigurationInSolution>
-Microsoft.Build.Construction.ProjectInSolution.ProjectGuid.get -> string
-Microsoft.Build.Construction.ProjectInSolution.ProjectName.get -> string
-Microsoft.Build.Construction.ProjectInSolution.ProjectType.get -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.ProjectInSolution.ProjectType.set -> void
-Microsoft.Build.Construction.ProjectInSolution.RelativePath.get -> string
-Microsoft.Build.Construction.ProjectItemDefinitionElement
-Microsoft.Build.Construction.ProjectItemDefinitionElement.AddMetadata(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectItemDefinitionElement.AddMetadata(string name, string unevaluatedValue, bool expressAsAttribute) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectItemDefinitionElement.ItemType.get -> string
-Microsoft.Build.Construction.ProjectItemDefinitionElement.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectMetadataElement>
-Microsoft.Build.Construction.ProjectItemDefinitionGroupElement
-Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.AddItemDefinition(string itemType) -> Microsoft.Build.Construction.ProjectItemDefinitionElement
-Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.ItemDefinitions.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemDefinitionElement>
-Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectItemElement.AddMetadata(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectItemElement.AddMetadata(string name, string unevaluatedValue, bool expressAsAttribute) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectItemElement.Exclude.get -> string
-Microsoft.Build.Construction.ProjectItemElement.Exclude.set -> void
-Microsoft.Build.Construction.ProjectItemElement.ExcludeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.HasMetadata.get -> bool
-Microsoft.Build.Construction.ProjectItemElement.Include.get -> string
-Microsoft.Build.Construction.ProjectItemElement.Include.set -> void
-Microsoft.Build.Construction.ProjectItemElement.IncludeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.ItemType.get -> string
-Microsoft.Build.Construction.ProjectItemElement.ItemType.set -> void
-Microsoft.Build.Construction.ProjectItemElement.KeepDuplicates.get -> string
-Microsoft.Build.Construction.ProjectItemElement.KeepDuplicates.set -> void
-Microsoft.Build.Construction.ProjectItemElement.KeepDuplicatesLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.KeepMetadata.get -> string
-Microsoft.Build.Construction.ProjectItemElement.KeepMetadata.set -> void
-Microsoft.Build.Construction.ProjectItemElement.KeepMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadata.get -> string
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadata.set -> void
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadataOptions.get -> string
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadataOptions.set -> void
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadataOptionsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectMetadataElement>
-Microsoft.Build.Construction.ProjectItemElement.Remove.get -> string
-Microsoft.Build.Construction.ProjectItemElement.Remove.set -> void
-Microsoft.Build.Construction.ProjectItemElement.RemoveLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.RemoveMetadata.get -> string
-Microsoft.Build.Construction.ProjectItemElement.RemoveMetadata.set -> void
-Microsoft.Build.Construction.ProjectItemElement.RemoveMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.Update.get -> string
-Microsoft.Build.Construction.ProjectItemElement.Update.set -> void
-Microsoft.Build.Construction.ProjectItemElement.UpdateLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemGroupElement
-Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(string itemType, string include) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(string itemType, string include, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectItemGroupElement.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemElement>
-Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectMetadataElement.ExpressedAsAttribute.get -> bool
-Microsoft.Build.Construction.ProjectMetadataElement.ExpressedAsAttribute.set -> void
-Microsoft.Build.Construction.ProjectMetadataElement.Name.get -> string
-Microsoft.Build.Construction.ProjectMetadataElement.Name.set -> void
-Microsoft.Build.Construction.ProjectMetadataElement.Value.get -> string
-Microsoft.Build.Construction.ProjectMetadataElement.Value.set -> void
-Microsoft.Build.Construction.ProjectOnErrorElement
-Microsoft.Build.Construction.ProjectOnErrorElement.ExecuteTargetsAttribute.get -> string
-Microsoft.Build.Construction.ProjectOnErrorElement.ExecuteTargetsAttribute.set -> void
-Microsoft.Build.Construction.ProjectOnErrorElement.ExecuteTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectOtherwiseElement
-Microsoft.Build.Construction.ProjectOtherwiseElement.ChooseElements.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectChooseElement>
-Microsoft.Build.Construction.ProjectOtherwiseElement.ItemGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemGroupElement>
-Microsoft.Build.Construction.ProjectOtherwiseElement.PropertyGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyGroupElement>
-Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectOutputElement.IsOutputItem.get -> bool
-Microsoft.Build.Construction.ProjectOutputElement.IsOutputProperty.get -> bool
-Microsoft.Build.Construction.ProjectOutputElement.ItemType.get -> string
-Microsoft.Build.Construction.ProjectOutputElement.ItemType.set -> void
-Microsoft.Build.Construction.ProjectOutputElement.ItemTypeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectOutputElement.PropertyName.get -> string
-Microsoft.Build.Construction.ProjectOutputElement.PropertyName.set -> void
-Microsoft.Build.Construction.ProjectOutputElement.PropertyNameLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectOutputElement.TaskParameter.get -> string
-Microsoft.Build.Construction.ProjectOutputElement.TaskParameter.set -> void
-Microsoft.Build.Construction.ProjectOutputElement.TaskParameterLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.Construction.ProjectPropertyElement.Name.get -> string
-Microsoft.Build.Construction.ProjectPropertyElement.Name.set -> void
-Microsoft.Build.Construction.ProjectPropertyElement.Value.get -> string
-Microsoft.Build.Construction.ProjectPropertyElement.Value.set -> void
-Microsoft.Build.Construction.ProjectPropertyGroupElement
-Microsoft.Build.Construction.ProjectPropertyGroupElement.AddProperty(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.Construction.ProjectPropertyGroupElement.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyElement>
-Microsoft.Build.Construction.ProjectPropertyGroupElement.PropertiesReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyElement>
-Microsoft.Build.Construction.ProjectPropertyGroupElement.SetProperty(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Construction.ProjectRootElement.AddImport(string project) -> Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.Construction.ProjectRootElement.AddImportGroup() -> Microsoft.Build.Construction.ProjectImportGroupElement
-Microsoft.Build.Construction.ProjectRootElement.AddItem(string itemType, string include) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectRootElement.AddItem(string itemType, string include, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectRootElement.AddItemDefinition(string itemType) -> Microsoft.Build.Construction.ProjectItemDefinitionElement
-Microsoft.Build.Construction.ProjectRootElement.AddItemDefinitionGroup() -> Microsoft.Build.Construction.ProjectItemDefinitionGroupElement
-Microsoft.Build.Construction.ProjectRootElement.AddItemGroup() -> Microsoft.Build.Construction.ProjectItemGroupElement
-Microsoft.Build.Construction.ProjectRootElement.AddProperty(string name, string value) -> Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.Construction.ProjectRootElement.AddPropertyGroup() -> Microsoft.Build.Construction.ProjectPropertyGroupElement
-Microsoft.Build.Construction.ProjectRootElement.AddTarget(string name) -> Microsoft.Build.Construction.ProjectTargetElement
-Microsoft.Build.Construction.ProjectRootElement.AddUsingTask(string name, string assemblyFile, string assemblyName) -> Microsoft.Build.Construction.ProjectUsingTaskElement
-Microsoft.Build.Construction.ProjectRootElement.ChooseElements.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectChooseElement>
-Microsoft.Build.Construction.ProjectRootElement.CreateChooseElement() -> Microsoft.Build.Construction.ProjectChooseElement
-Microsoft.Build.Construction.ProjectRootElement.CreateImportElement(string project) -> Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.Construction.ProjectRootElement.CreateImportGroupElement() -> Microsoft.Build.Construction.ProjectImportGroupElement
-Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionElement(string itemType) -> Microsoft.Build.Construction.ProjectItemDefinitionElement
-Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionGroupElement() -> Microsoft.Build.Construction.ProjectItemDefinitionGroupElement
-Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(string itemType) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(string itemType, string include) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectRootElement.CreateItemGroupElement() -> Microsoft.Build.Construction.ProjectItemGroupElement
-Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(string name) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectRootElement.CreateOnErrorElement(string executeTargets) -> Microsoft.Build.Construction.ProjectOnErrorElement
-Microsoft.Build.Construction.ProjectRootElement.CreateOtherwiseElement() -> Microsoft.Build.Construction.ProjectOtherwiseElement
-Microsoft.Build.Construction.ProjectRootElement.CreateOutputElement(string taskParameter, string itemType, string propertyName) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectRootElement.CreateProjectExtensionsElement() -> Microsoft.Build.Construction.ProjectExtensionsElement
-Microsoft.Build.Construction.ProjectRootElement.CreateProjectSdkElement(string sdkName, string sdkVersion) -> Microsoft.Build.Construction.ProjectSdkElement
-Microsoft.Build.Construction.ProjectRootElement.CreatePropertyElement(string name) -> Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.Construction.ProjectRootElement.CreatePropertyGroupElement() -> Microsoft.Build.Construction.ProjectPropertyGroupElement
-Microsoft.Build.Construction.ProjectRootElement.CreateTargetElement(string name) -> Microsoft.Build.Construction.ProjectTargetElement
-Microsoft.Build.Construction.ProjectRootElement.CreateTaskElement(string name) -> Microsoft.Build.Construction.ProjectTaskElement
-Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskBodyElement(string evaluate, string body) -> Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskElement(string taskName, string assemblyFile, string assemblyName) -> Microsoft.Build.Construction.ProjectUsingTaskElement
-Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskElement(string taskName, string assemblyFile, string assemblyName, string runtime, string architecture) -> Microsoft.Build.Construction.ProjectUsingTaskElement
-Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterElement(string name, string output, string required, string parameterType) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterGroupElement() -> Microsoft.Build.Construction.UsingTaskParameterGroupElement
-Microsoft.Build.Construction.ProjectRootElement.CreateWhenElement(string condition) -> Microsoft.Build.Construction.ProjectWhenElement
-Microsoft.Build.Construction.ProjectRootElement.DeepClone() -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Construction.ProjectRootElement.DefaultTargets.get -> string
-Microsoft.Build.Construction.ProjectRootElement.DefaultTargets.set -> void
-Microsoft.Build.Construction.ProjectRootElement.DefaultTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.DirectoryPath.get -> string
-Microsoft.Build.Construction.ProjectRootElement.Encoding.get -> System.Text.Encoding
-Microsoft.Build.Construction.ProjectRootElement.EscapedFullPath.get -> string
-Microsoft.Build.Construction.ProjectRootElement.FullPath.get -> string
-Microsoft.Build.Construction.ProjectRootElement.FullPath.set -> void
-Microsoft.Build.Construction.ProjectRootElement.HasUnsavedChanges.get -> bool
-Microsoft.Build.Construction.ProjectRootElement.ImportGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectImportGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.ImportGroupsReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectImportGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.Imports.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectImportElement>
-Microsoft.Build.Construction.ProjectRootElement.InitialTargets.get -> string
-Microsoft.Build.Construction.ProjectRootElement.InitialTargets.set -> void
-Microsoft.Build.Construction.ProjectRootElement.InitialTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemDefinitionGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroupsReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemDefinitionGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.ItemDefinitions.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemDefinitionElement>
-Microsoft.Build.Construction.ProjectRootElement.ItemGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.ItemGroupsReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemElement>
-Microsoft.Build.Construction.ProjectRootElement.LastWriteTimeWhenRead.get -> System.DateTime
-Microsoft.Build.Construction.ProjectRootElement.PreserveFormatting.get -> bool
-Microsoft.Build.Construction.ProjectRootElement.ProjectFileLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyElement>
-Microsoft.Build.Construction.ProjectRootElement.PropertyGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.PropertyGroupsReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.RawXml.get -> string
-Microsoft.Build.Construction.ProjectRootElement.Reload(bool throwIfUnsavedChanges = true, bool? preserveFormatting = null) -> void
-Microsoft.Build.Construction.ProjectRootElement.ReloadFrom(string path, bool throwIfUnsavedChanges = true, bool? preserveFormatting = null) -> void
-Microsoft.Build.Construction.ProjectRootElement.ReloadFrom(System.Xml.XmlReader reader, bool throwIfUnsavedChanges = true, bool? preserveFormatting = null) -> void
-Microsoft.Build.Construction.ProjectRootElement.Save() -> void
-Microsoft.Build.Construction.ProjectRootElement.Save(string path) -> void
-Microsoft.Build.Construction.ProjectRootElement.Save(string path, System.Text.Encoding encoding) -> void
-Microsoft.Build.Construction.ProjectRootElement.Save(System.IO.TextWriter writer) -> void
-Microsoft.Build.Construction.ProjectRootElement.Save(System.Text.Encoding saveEncoding) -> void
-Microsoft.Build.Construction.ProjectRootElement.Sdk.get -> string
-Microsoft.Build.Construction.ProjectRootElement.Sdk.set -> void
-Microsoft.Build.Construction.ProjectRootElement.SdkLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.Targets.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectTargetElement>
-Microsoft.Build.Construction.ProjectRootElement.TimeLastChanged.get -> System.DateTime
-Microsoft.Build.Construction.ProjectRootElement.ToolsVersion.get -> string
-Microsoft.Build.Construction.ProjectRootElement.ToolsVersion.set -> void
-Microsoft.Build.Construction.ProjectRootElement.ToolsVersionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalProperty.get -> string
-Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalProperty.set -> void
-Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalPropertyLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.UsingTasks.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectUsingTaskElement>
-Microsoft.Build.Construction.ProjectRootElement.Version.get -> int
-Microsoft.Build.Construction.ProjectSdkElement
-Microsoft.Build.Construction.ProjectSdkElement.MinimumVersion.get -> string
-Microsoft.Build.Construction.ProjectSdkElement.MinimumVersion.set -> void
-Microsoft.Build.Construction.ProjectSdkElement.Name.get -> string
-Microsoft.Build.Construction.ProjectSdkElement.Name.set -> void
-Microsoft.Build.Construction.ProjectSdkElement.Version.get -> string
-Microsoft.Build.Construction.ProjectSdkElement.Version.set -> void
-Microsoft.Build.Construction.ProjectTargetElement
-Microsoft.Build.Construction.ProjectTargetElement.AddItemGroup() -> Microsoft.Build.Construction.ProjectItemGroupElement
-Microsoft.Build.Construction.ProjectTargetElement.AddPropertyGroup() -> Microsoft.Build.Construction.ProjectPropertyGroupElement
-Microsoft.Build.Construction.ProjectTargetElement.AddTask(string taskName) -> Microsoft.Build.Construction.ProjectTaskElement
-Microsoft.Build.Construction.ProjectTargetElement.AfterTargets.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.AfterTargets.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.AfterTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.BeforeTargets.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.BeforeTargets.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.BeforeTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.DependsOnTargets.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.DependsOnTargets.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.DependsOnTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.Inputs.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.Inputs.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.InputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.ItemGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemGroupElement>
-Microsoft.Build.Construction.ProjectTargetElement.KeepDuplicateOutputs.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.KeepDuplicateOutputs.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.KeepDuplicateOutputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.Name.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.Name.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.NameLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.OnErrors.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectOnErrorElement>
-Microsoft.Build.Construction.ProjectTargetElement.Outputs.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.Outputs.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.OutputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.PropertyGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyGroupElement>
-Microsoft.Build.Construction.ProjectTargetElement.Returns.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.Returns.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.ReturnsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.Tasks.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectTaskElement>
-Microsoft.Build.Construction.ProjectTaskElement
-Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(string taskParameter, string itemType) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(string taskParameter, string itemType, string condition) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(string taskParameter, string propertyName) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(string taskParameter, string propertyName, string condition) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError.get -> string
-Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError.set -> void
-Microsoft.Build.Construction.ProjectTaskElement.ContinueOnErrorLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTaskElement.GetParameter(string name) -> string
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture.get -> string
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture.set -> void
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitectureLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime.get -> string
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime.set -> void
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntimeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTaskElement.Name.get -> string
-Microsoft.Build.Construction.ProjectTaskElement.Outputs.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectOutputElement>
-Microsoft.Build.Construction.ProjectTaskElement.ParameterLocations.get -> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Microsoft.Build.Construction.ElementLocation>>
-Microsoft.Build.Construction.ProjectTaskElement.Parameters.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters() -> void
-Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter(string name) -> void
-Microsoft.Build.Construction.ProjectTaskElement.SetParameter(string name, string unevaluatedValue) -> void
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Evaluate.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Evaluate.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement.EvaluateLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement.TaskBody.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement.TaskBody.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement
-Microsoft.Build.Construction.ProjectUsingTaskElement.AddParameterGroup() -> Microsoft.Build.Construction.UsingTaskParameterGroupElement
-Microsoft.Build.Construction.ProjectUsingTaskElement.AddUsingTaskBody(string evaluate, string taskBody) -> Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-Microsoft.Build.Construction.ProjectUsingTaskElement.Architecture.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.Architecture.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.ArchitectureLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyFile.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyFile.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyFileLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyName.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyName.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyNameLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.Override.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.Override.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.OverrideLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.ParameterGroup.get -> Microsoft.Build.Construction.UsingTaskParameterGroupElement
-Microsoft.Build.Construction.ProjectUsingTaskElement.Runtime.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.Runtime.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.RuntimeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskBody.get -> Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskFactory.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskFactory.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskFactoryLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskName.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskName.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskNameLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Name.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Name.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Output.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Output.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.OutputLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterType.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterType.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterTypeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Required.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Required.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.RequiredLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectWhenElement
-Microsoft.Build.Construction.ProjectWhenElement.ChooseElements.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectChooseElement>
-Microsoft.Build.Construction.ProjectWhenElement.ItemGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemGroupElement>
-Microsoft.Build.Construction.ProjectWhenElement.PropertyGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyGroupElement>
-Microsoft.Build.Construction.SolutionConfigurationInSolution
-Microsoft.Build.Construction.SolutionConfigurationInSolution.ConfigurationName.get -> string
-Microsoft.Build.Construction.SolutionConfigurationInSolution.FullName.get -> string
-Microsoft.Build.Construction.SolutionConfigurationInSolution.PlatformName.get -> string
-Microsoft.Build.Construction.SolutionFile
-Microsoft.Build.Construction.SolutionFile.GetDefaultConfigurationName() -> string
-Microsoft.Build.Construction.SolutionFile.GetDefaultPlatformName() -> string
-Microsoft.Build.Construction.SolutionFile.ProjectsByGuid.get -> System.Collections.Generic.IReadOnlyDictionary<string, Microsoft.Build.Construction.ProjectInSolution>
-Microsoft.Build.Construction.SolutionFile.ProjectsInOrder.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Build.Construction.ProjectInSolution>
-Microsoft.Build.Construction.SolutionFile.SolutionConfigurations.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Build.Construction.SolutionConfigurationInSolution>
-Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.EtpSubProject = 5 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.KnownToBeMSBuildFormat = 1 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.SharedProject = 6 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.SolutionFolder = 2 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.Unknown = 0 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.WebDeploymentProject = 4 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.WebProject = 3 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.UsingTaskParameterGroupElement
-Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(string name) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(string name, string output, string required, string parameterType) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-Microsoft.Build.Construction.UsingTaskParameterGroupElement.Parameters.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectUsingTaskParameterElement>
-Microsoft.Build.Definition.ProjectOptions
-Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.get -> Microsoft.Build.FileSystem.IDirectoryCacheFactory
-Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.set -> void
-Microsoft.Build.Definition.ProjectOptions.EvaluationContext.get -> Microsoft.Build.Evaluation.Context.EvaluationContext
-Microsoft.Build.Definition.ProjectOptions.EvaluationContext.set -> void
-Microsoft.Build.Definition.ProjectOptions.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Definition.ProjectOptions.GlobalProperties.set -> void
-Microsoft.Build.Definition.ProjectOptions.LoadSettings.get -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Definition.ProjectOptions.LoadSettings.set -> void
-Microsoft.Build.Definition.ProjectOptions.ProjectCollection.get -> Microsoft.Build.Evaluation.ProjectCollection
-Microsoft.Build.Definition.ProjectOptions.ProjectCollection.set -> void
-Microsoft.Build.Definition.ProjectOptions.ProjectOptions() -> void
-Microsoft.Build.Definition.ProjectOptions.SubToolsetVersion.get -> string
-Microsoft.Build.Definition.ProjectOptions.SubToolsetVersion.set -> void
-Microsoft.Build.Definition.ProjectOptions.ToolsVersion.get -> string
-Microsoft.Build.Definition.ProjectOptions.ToolsVersion.set -> void
-Microsoft.Build.Evaluation.Context.EvaluationContext
-Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy
-Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy.Isolated = 1 -> Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy
-Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy.Shared = 0 -> Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy
-Microsoft.Build.Evaluation.GlobResult
-Microsoft.Build.Evaluation.GlobResult.Excludes.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.Evaluation.GlobResult.GlobResult(Microsoft.Build.Construction.ProjectItemElement itemElement, System.Collections.Generic.IEnumerable<string> includeGlobStrings, Microsoft.Build.Globbing.IMSBuildGlob globWithGaps, System.Collections.Generic.IEnumerable<string> excludeFragmentStrings, System.Collections.Generic.IEnumerable<string> removeFragmentStrings) -> void
-Microsoft.Build.Evaluation.GlobResult.IncludeGlobs.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.Evaluation.GlobResult.ItemElement.get -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Evaluation.GlobResult.MsBuildGlob.get -> Microsoft.Build.Globbing.IMSBuildGlob
-Microsoft.Build.Evaluation.GlobResult.MsBuildGlob.set -> void
-Microsoft.Build.Evaluation.GlobResult.Removes.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.Evaluation.GlobResult.Removes.set -> void
-Microsoft.Build.Evaluation.MatchOnMetadataConstants
-Microsoft.Build.Evaluation.MatchOnMetadataOptions
-Microsoft.Build.Evaluation.MatchOnMetadataOptions.CaseInsensitive = 1 -> Microsoft.Build.Evaluation.MatchOnMetadataOptions
-Microsoft.Build.Evaluation.MatchOnMetadataOptions.CaseSensitive = 0 -> Microsoft.Build.Evaluation.MatchOnMetadataOptions
-Microsoft.Build.Evaluation.MatchOnMetadataOptions.PathLike = 2 -> Microsoft.Build.Evaluation.MatchOnMetadataOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions.IncludeAllOptions = -1 -> Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions.IncludeToolsVersion = 2 -> Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions.IncludeXmlDeclaration = 1 -> Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions.IncludeXmlNamespace = 4 -> Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions.None = 0 -> Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.Operation.Exclude = 1 -> Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.Operation.Include = 0 -> Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.Operation.Remove = 3 -> Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.Operation.Update = 2 -> Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.Project.AddItem(string itemType, string unevaluatedInclude) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.AddItem(string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.AddItemFast(string itemType, string unevaluatedInclude) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.AddItemFast(string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-Microsoft.Build.Evaluation.Project.AllEvaluatedItems.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.AllEvaluatedProperties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>
-Microsoft.Build.Evaluation.Project.Build() -> bool
-Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger logger) -> bool
-Microsoft.Build.Evaluation.Project.Build(string target) -> bool
-Microsoft.Build.Evaluation.Project.Build(string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Evaluation.Project.Build(string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Evaluation.Project.Build(string[] targets) -> bool
-Microsoft.Build.Evaluation.Project.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Evaluation.Project.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Evaluation.Project.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> bool
-Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Evaluation.Project.ConditionedProperties.get -> System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<string>>
-Microsoft.Build.Evaluation.Project.CreateProjectInstance() -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings settings) -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings settings, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Evaluation.Project.DirectoryPath.get -> string
-Microsoft.Build.Evaluation.Project.DisableMarkDirty.get -> bool
-Microsoft.Build.Evaluation.Project.DisableMarkDirty.set -> void
-Microsoft.Build.Evaluation.Project.EvaluationCounter.get -> int
-Microsoft.Build.Evaluation.Project.ExpandString(string unexpandedValue) -> string
-Microsoft.Build.Evaluation.Project.FullPath.get -> string
-Microsoft.Build.Evaluation.Project.FullPath.set -> void
-Microsoft.Build.Evaluation.Project.GetAllGlobs() -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-Microsoft.Build.Evaluation.Project.GetAllGlobs(Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-Microsoft.Build.Evaluation.Project.GetAllGlobs(string itemType) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-Microsoft.Build.Evaluation.Project.GetAllGlobs(string itemType, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem item) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem item, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(string itemToMatch) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(string itemToMatch, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(string itemToMatch, string itemType) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(string itemToMatch, string itemType, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItems(string itemType) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(string evaluatedInclude) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(string itemType) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.GetLogicalProject() -> System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>
-Microsoft.Build.Evaluation.Project.GetProperty(string name) -> Microsoft.Build.Evaluation.ProjectProperty
-Microsoft.Build.Evaluation.Project.GetPropertyValue(string name) -> string
-Microsoft.Build.Evaluation.Project.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Evaluation.Project.Imports.get -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>
-Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates.get -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>
-Microsoft.Build.Evaluation.Project.IsBuildEnabled.get -> bool
-Microsoft.Build.Evaluation.Project.IsBuildEnabled.set -> void
-Microsoft.Build.Evaluation.Project.IsDirty.get -> bool
-Microsoft.Build.Evaluation.Project.ItemDefinitions.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Evaluation.ProjectItemDefinition>
-Microsoft.Build.Evaluation.Project.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.ItemTypes.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Evaluation.Project.LastEvaluationId.get -> int
-Microsoft.Build.Evaluation.Project.MarkDirty() -> void
-Microsoft.Build.Evaluation.Project.Project() -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) -> void
-Microsoft.Build.Evaluation.Project.Project(string projectFile) -> void
-Microsoft.Build.Evaluation.Project.Project(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
-Microsoft.Build.Evaluation.Project.Project(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Evaluation.Project.Project(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.Project(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Xml.XmlReader xmlReader) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.ProjectCollection.get -> Microsoft.Build.Evaluation.ProjectCollection
-Microsoft.Build.Evaluation.Project.ProjectFileLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Evaluation.Project.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>
-Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary() -> void
-Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> void
-Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(string name) -> bool
-Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem item) -> bool
-Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectItem> items) -> void
-Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty property) -> bool
-Microsoft.Build.Evaluation.Project.Save() -> void
-Microsoft.Build.Evaluation.Project.Save(string path) -> void
-Microsoft.Build.Evaluation.Project.Save(string path, System.Text.Encoding encoding) -> void
-Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter writer) -> void
-Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding encoding) -> void
-Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter writer) -> void
-Microsoft.Build.Evaluation.Project.SetGlobalProperty(string name, string escapedValue) -> bool
-Microsoft.Build.Evaluation.Project.SetProperty(string name, string unevaluatedValue) -> Microsoft.Build.Evaluation.ProjectProperty
-Microsoft.Build.Evaluation.Project.SkipEvaluation.get -> bool
-Microsoft.Build.Evaluation.Project.SkipEvaluation.set -> void
-Microsoft.Build.Evaluation.Project.SubToolsetVersion.get -> string
-Microsoft.Build.Evaluation.Project.Targets.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectTargetInstance>
-Microsoft.Build.Evaluation.Project.ThrowInsteadOfSplittingItemElement.get -> bool
-Microsoft.Build.Evaluation.Project.ThrowInsteadOfSplittingItemElement.set -> void
-Microsoft.Build.Evaluation.Project.ToolsVersion.get -> string
-Microsoft.Build.Evaluation.Project.Xml.get -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Evaluation.ProjectChangedEventArgs
-Microsoft.Build.Evaluation.ProjectChangedEventArgs.Project.get -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection
-Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset toolset) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(string toolsVersion) -> bool
-Microsoft.Build.Evaluation.ProjectCollection.Count.get -> int
-Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion.get -> string
-Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty.get -> bool
-Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.Dispose() -> void
-Microsoft.Build.Evaluation.ProjectCollection.GetEffectiveToolsVersion(string explicitToolsVersion, string toolsVersionFromProject) -> string
-Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(string name) -> Microsoft.Build.Execution.ProjectPropertyInstance
-Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(string fullPath) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Project>
-Microsoft.Build.Evaluation.ProjectCollection.GetToolset(string toolsVersion) -> Microsoft.Build.Evaluation.Toolset
-Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Evaluation.ProjectCollection.HostServices.get -> Microsoft.Build.Execution.HostServices
-Microsoft.Build.Evaluation.ProjectCollection.HostServices.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled.get -> bool
-Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Project>
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(string fileName) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(string fileName, string toolsVersion) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(string fileName, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader xmlReader) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader xmlReader, string toolsVersion) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.Loggers.get -> System.Collections.Generic.ICollection<Microsoft.Build.Framework.ILogger>
-Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents.get -> bool
-Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded -> Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler
-Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler
-Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs
-Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.ProjectAddedToProjectCollectionEventArgs(Microsoft.Build.Construction.ProjectRootElement element) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.ProjectRootElement.get -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged -> System.EventHandler<Microsoft.Build.Evaluation.ProjectChangedEventArgs>
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection() -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetLocations) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(System.Collections.Generic.IDictionary<string, string> globalProperties) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations, int maxNodeCount, bool onlyLogCriticalEvents) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations, int maxNodeCount, bool onlyLogCriticalEvents, bool loadProjectsReadOnly) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged -> System.EventHandler<Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs>
-Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged -> System.EventHandler<Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs>
-Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> void
-Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(Microsoft.Build.Framework.ILogger logger) -> void
-Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> void
-Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets() -> void
-Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(string name) -> bool
-Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(string toolsVersion) -> bool
-Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(string name, string value) -> void
-Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation.get -> bool
-Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations.get -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ProjectCollection.Toolsets.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Toolset>
-Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement projectRootElement) -> bool
-Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects() -> void
-Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement projectRootElement) -> void
-Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project project) -> void
-Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers() -> void
-Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs
-Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs.Changed.get -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.DefaultToolsVersion = 0 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.DisableMarkDirty = 7 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.GlobalProperties = 3 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.HostServices = 6 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.IsBuildEnabled = 4 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.Loggers = 2 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.OnlyLogCriticalEvents = 5 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.SkipEvaluation = 8 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.Toolsets = 1 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectItem
-Microsoft.Build.Evaluation.ProjectItem.DirectMetadata.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
-Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount.get -> int
-Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude.get -> string
-Microsoft.Build.Evaluation.ProjectItem.GetMetadata(string name) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(string name) -> string
-Microsoft.Build.Evaluation.ProjectItem.HasMetadata(string name) -> bool
-Microsoft.Build.Evaluation.ProjectItem.IsImported.get -> bool
-Microsoft.Build.Evaluation.ProjectItem.ItemType.get -> string
-Microsoft.Build.Evaluation.ProjectItem.ItemType.set -> void
-Microsoft.Build.Evaluation.ProjectItem.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-Microsoft.Build.Evaluation.ProjectItem.MetadataCount.get -> int
-Microsoft.Build.Evaluation.ProjectItem.Project.get -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(string name) -> bool
-Microsoft.Build.Evaluation.ProjectItem.Rename(string name) -> void
-Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(string name, string unevaluatedValue) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(string name, string unevaluatedValue, bool propagateMetadataToSiblingItems) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude.get -> string
-Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude.set -> void
-Microsoft.Build.Evaluation.ProjectItem.Xml.get -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Evaluation.ProjectItemDefinition
-Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(string name) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(string name) -> string
-Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType.get -> string
-Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
-Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount.get -> int
-Microsoft.Build.Evaluation.ProjectItemDefinition.Project.get -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(string name, string unevaluatedValue) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.Default = 0 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.DoNotEvaluateElementsWithFalseCondition = 32 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.FailOnUnresolvedSdk = 256 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreEmptyImports = 16 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreInvalidImports = 64 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreMissingImports = 1 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.ProfileEvaluation = 128 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.RecordDuplicateButNotCircularImports = 2 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements = 8 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.RejectCircularImports = 4 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue.get -> string
-Microsoft.Build.Evaluation.ProjectMetadata.IsImported.get -> bool
-Microsoft.Build.Evaluation.ProjectMetadata.ItemType.get -> string
-Microsoft.Build.Evaluation.ProjectMetadata.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Evaluation.ProjectMetadata.Name.get -> string
-Microsoft.Build.Evaluation.ProjectMetadata.Predecessor.get -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectMetadata.Project.get -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue.get -> string
-Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue.set -> void
-Microsoft.Build.Evaluation.ProjectMetadata.Xml.get -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Evaluation.ProjectProperty
-Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue.get -> string
-Microsoft.Build.Evaluation.ProjectProperty.Project.get -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs
-Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.ProjectXml.get -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.Reason.get -> string
-Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.Provenance.Glob = 2 -> Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.Provenance.Inconclusive = 4 -> Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.Provenance.StringLiteral = 1 -> Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.Provenance.Undefined = 0 -> Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.ProvenanceResult
-Microsoft.Build.Evaluation.ProvenanceResult.ItemElement.get -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Evaluation.ProvenanceResult.Occurrences.get -> int
-Microsoft.Build.Evaluation.ProvenanceResult.Operation.get -> Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.ProvenanceResult.Provenance.get -> Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.ProvenanceResult.ProvenanceResult(Microsoft.Build.Construction.ProjectItemElement itemElement, Microsoft.Build.Evaluation.Operation operation, Microsoft.Build.Evaluation.Provenance provenance, int occurrences) -> void
-Microsoft.Build.Evaluation.ResolvedImport
-Microsoft.Build.Evaluation.ResolvedImport.ImportedProject.get -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Evaluation.ResolvedImport.ImportingElement.get -> Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.Evaluation.ResolvedImport.IsImported.get -> bool
-Microsoft.Build.Evaluation.ResolvedImport.ResolvedImport() -> void
-Microsoft.Build.Evaluation.ResolvedImport.SdkResult.get -> Microsoft.Build.Framework.SdkResult
-Microsoft.Build.Evaluation.SubToolset
-Microsoft.Build.Evaluation.SubToolset.Properties.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectPropertyInstance>
-Microsoft.Build.Evaluation.SubToolset.SubToolsetVersion.get -> string
-Microsoft.Build.Evaluation.Toolset
-Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion.get -> string
-Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion() -> string
-Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(System.Collections.Generic.IDictionary<string, string> overrideGlobalProperties, int solutionVersion) -> string
-Microsoft.Build.Evaluation.Toolset.GetProperty(string propertyName, string subToolsetVersion) -> Microsoft.Build.Execution.ProjectPropertyInstance
-Microsoft.Build.Evaluation.Toolset.Properties.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectPropertyInstance>
-Microsoft.Build.Evaluation.Toolset.SubToolsets.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Evaluation.SubToolset>
-Microsoft.Build.Evaluation.Toolset.Toolset(string toolsVersion, string toolsPath, Microsoft.Build.Evaluation.ProjectCollection projectCollection, string msbuildOverrideTasksPath) -> void
-Microsoft.Build.Evaluation.Toolset.Toolset(string toolsVersion, string toolsPath, System.Collections.Generic.IDictionary<string, string> buildProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection, string msbuildOverrideTasksPath) -> void
-Microsoft.Build.Evaluation.Toolset.Toolset(string toolsVersion, string toolsPath, System.Collections.Generic.IDictionary<string, string> buildProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection, System.Collections.Generic.IDictionary<string, Microsoft.Build.Evaluation.SubToolset> subToolsets, string msbuildOverrideTasksPath) -> void
-Microsoft.Build.Evaluation.Toolset.ToolsPath.get -> string
-Microsoft.Build.Evaluation.Toolset.ToolsVersion.get -> string
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations.ConfigurationFile = 1 -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Default = Microsoft.Build.Evaluation.ToolsetDefinitionLocations.ConfigurationFile | Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Registry -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Local = 4 -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations.None = 0 -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Registry = 2 -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Exceptions.BuildAbortedException
-Microsoft.Build.Exceptions.BuildAbortedException.BuildAbortedException() -> void
-Microsoft.Build.Exceptions.BuildAbortedException.BuildAbortedException(string message) -> void
-Microsoft.Build.Exceptions.BuildAbortedException.BuildAbortedException(string message, System.Exception innerException) -> void
-Microsoft.Build.Exceptions.BuildAbortedException.BuildAbortedException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-Microsoft.Build.Exceptions.BuildAbortedException.ErrorCode.get -> string
-Microsoft.Build.Exceptions.CircularDependencyException
-Microsoft.Build.Exceptions.CircularDependencyException.CircularDependencyException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-Microsoft.Build.Exceptions.InternalLoggerException
-Microsoft.Build.Exceptions.InternalLoggerException.BuildEventArgs.get -> Microsoft.Build.Framework.BuildEventArgs
-Microsoft.Build.Exceptions.InternalLoggerException.ErrorCode.get -> string
-Microsoft.Build.Exceptions.InternalLoggerException.HelpKeyword.get -> string
-Microsoft.Build.Exceptions.InternalLoggerException.InitializationException.get -> bool
-Microsoft.Build.Exceptions.InternalLoggerException.InternalLoggerException() -> void
-Microsoft.Build.Exceptions.InternalLoggerException.InternalLoggerException(string message) -> void
-Microsoft.Build.Exceptions.InternalLoggerException.InternalLoggerException(string message, System.Exception innerException) -> void
-Microsoft.Build.Exceptions.InvalidProjectFileException
-Microsoft.Build.Exceptions.InvalidProjectFileException.BaseMessage.get -> string
-Microsoft.Build.Exceptions.InvalidProjectFileException.ColumnNumber.get -> int
-Microsoft.Build.Exceptions.InvalidProjectFileException.EndColumnNumber.get -> int
-Microsoft.Build.Exceptions.InvalidProjectFileException.EndLineNumber.get -> int
-Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorCode.get -> string
-Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorSubcategory.get -> string
-Microsoft.Build.Exceptions.InvalidProjectFileException.HasBeenLogged.get -> bool
-Microsoft.Build.Exceptions.InvalidProjectFileException.HelpKeyword.get -> string
-Microsoft.Build.Exceptions.InvalidProjectFileException.InvalidProjectFileException() -> void
-Microsoft.Build.Exceptions.InvalidProjectFileException.InvalidProjectFileException(string message) -> void
-Microsoft.Build.Exceptions.InvalidProjectFileException.InvalidProjectFileException(string message, System.Exception innerException) -> void
-Microsoft.Build.Exceptions.InvalidProjectFileException.InvalidProjectFileException(string projectFile, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string errorSubcategory, string errorCode, string helpKeyword) -> void
-Microsoft.Build.Exceptions.InvalidProjectFileException.LineNumber.get -> int
-Microsoft.Build.Exceptions.InvalidProjectFileException.ProjectFile.get -> string
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.ErrorCode.get -> string
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException() -> void
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message) -> void
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message, string errorCode) -> void
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message, string errorCode, System.Exception innerException) -> void
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message, System.Exception innerException) -> void
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-Microsoft.Build.Execution.BuildManager
-Microsoft.Build.Execution.BuildManager.BeginBuild(Microsoft.Build.Execution.BuildParameters parameters) -> void
-Microsoft.Build.Execution.BuildManager.BeginBuild(Microsoft.Build.Execution.BuildParameters parameters, System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.BuildManager.DeferredBuildMessage> deferredBuildMessages) -> void
-Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters parameters, Microsoft.Build.Execution.BuildRequestData requestData) -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters parameters, Microsoft.Build.Graph.GraphBuildRequestData requestData) -> Microsoft.Build.Graph.GraphBuildResult
-Microsoft.Build.Execution.BuildManager.BuildManager() -> void
-Microsoft.Build.Execution.BuildManager.BuildManager(string hostName) -> void
-Microsoft.Build.Execution.BuildManager.BuildRequest(Microsoft.Build.Execution.BuildRequestData requestData) -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Execution.BuildManager.BuildRequest(Microsoft.Build.Graph.GraphBuildRequestData requestData) -> Microsoft.Build.Graph.GraphBuildResult
-Microsoft.Build.Execution.BuildManager.CancelAllSubmissions() -> void
-Microsoft.Build.Execution.BuildManager.DeferredBuildMessage
-Microsoft.Build.Execution.BuildManager.DeferredBuildMessage.DeferredBuildMessage() -> void
-Microsoft.Build.Execution.BuildManager.DeferredBuildMessage.DeferredBuildMessage(string text, Microsoft.Build.Framework.MessageImportance importance) -> void
-Microsoft.Build.Execution.BuildManager.DeferredBuildMessage.Importance.get -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Execution.BuildManager.DeferredBuildMessage.Text.get -> string
-Microsoft.Build.Execution.BuildManager.Dispose() -> void
-Microsoft.Build.Execution.BuildManager.EndBuild() -> void
-Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild(Microsoft.Build.Evaluation.Project project) -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData requestData) -> Microsoft.Build.Execution.BuildSubmission
-Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Graph.GraphBuildRequestData requestData) -> Microsoft.Build.Graph.GraphBuildSubmission
-Microsoft.Build.Execution.BuildManager.ResetCaches() -> void
-Microsoft.Build.Execution.BuildManager.ShutdownAllNodes() -> void
-Microsoft.Build.Execution.BuildManager.~BuildManager() -> void
-Microsoft.Build.Execution.BuildParameters
-Microsoft.Build.Execution.BuildParameters.AllowFailureWithoutError.get -> bool
-Microsoft.Build.Execution.BuildParameters.AllowFailureWithoutError.set -> void
-Microsoft.Build.Execution.BuildParameters.BuildParameters() -> void
-Microsoft.Build.Execution.BuildParameters.BuildParameters(Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Execution.BuildParameters.BuildProcessEnvironment.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Execution.BuildParameters.BuildThreadPriority.get -> System.Threading.ThreadPriority
-Microsoft.Build.Execution.BuildParameters.BuildThreadPriority.set -> void
-Microsoft.Build.Execution.BuildParameters.Clone() -> Microsoft.Build.Execution.BuildParameters
-Microsoft.Build.Execution.BuildParameters.Culture.get -> System.Globalization.CultureInfo
-Microsoft.Build.Execution.BuildParameters.Culture.set -> void
-Microsoft.Build.Execution.BuildParameters.DefaultToolsVersion.get -> string
-Microsoft.Build.Execution.BuildParameters.DefaultToolsVersion.set -> void
-Microsoft.Build.Execution.BuildParameters.DetailedSummary.get -> bool
-Microsoft.Build.Execution.BuildParameters.DetailedSummary.set -> void
-Microsoft.Build.Execution.BuildParameters.DisableInProcNode.get -> bool
-Microsoft.Build.Execution.BuildParameters.DisableInProcNode.set -> void
-Microsoft.Build.Execution.BuildParameters.DiscardBuildResults.get -> bool
-Microsoft.Build.Execution.BuildParameters.DiscardBuildResults.set -> void
-Microsoft.Build.Execution.BuildParameters.EnableNodeReuse.get -> bool
-Microsoft.Build.Execution.BuildParameters.EnableNodeReuse.set -> void
-Microsoft.Build.Execution.BuildParameters.EnvironmentProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Execution.BuildParameters.ForwardingLoggers.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
-Microsoft.Build.Execution.BuildParameters.ForwardingLoggers.set -> void
-Microsoft.Build.Execution.BuildParameters.GetToolset(string toolsVersion) -> Microsoft.Build.Evaluation.Toolset
-Microsoft.Build.Execution.BuildParameters.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Execution.BuildParameters.GlobalProperties.set -> void
-Microsoft.Build.Execution.BuildParameters.HostServices.get -> Microsoft.Build.Execution.HostServices
-Microsoft.Build.Execution.BuildParameters.HostServices.set -> void
-Microsoft.Build.Execution.BuildParameters.InputResultsCacheFiles.get -> string[]
-Microsoft.Build.Execution.BuildParameters.InputResultsCacheFiles.set -> void
-Microsoft.Build.Execution.BuildParameters.Interactive.get -> bool
-Microsoft.Build.Execution.BuildParameters.Interactive.set -> void
-Microsoft.Build.Execution.BuildParameters.IsolateProjects.get -> bool
-Microsoft.Build.Execution.BuildParameters.IsolateProjects.set -> void
-Microsoft.Build.Execution.BuildParameters.LegacyThreadingSemantics.get -> bool
-Microsoft.Build.Execution.BuildParameters.LegacyThreadingSemantics.set -> void
-Microsoft.Build.Execution.BuildParameters.Loggers.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger>
-Microsoft.Build.Execution.BuildParameters.Loggers.set -> void
-Microsoft.Build.Execution.BuildParameters.LogInitialPropertiesAndItems.get -> bool
-Microsoft.Build.Execution.BuildParameters.LogInitialPropertiesAndItems.set -> void
-Microsoft.Build.Execution.BuildParameters.LogTaskInputs.get -> bool
-Microsoft.Build.Execution.BuildParameters.LogTaskInputs.set -> void
-Microsoft.Build.Execution.BuildParameters.LowPriority.get -> bool
-Microsoft.Build.Execution.BuildParameters.LowPriority.set -> void
-Microsoft.Build.Execution.BuildParameters.MaxNodeCount.get -> int
-Microsoft.Build.Execution.BuildParameters.MaxNodeCount.set -> void
-Microsoft.Build.Execution.BuildParameters.MemoryUseLimit.get -> int
-Microsoft.Build.Execution.BuildParameters.MemoryUseLimit.set -> void
-Microsoft.Build.Execution.BuildParameters.NodeExeLocation.get -> string
-Microsoft.Build.Execution.BuildParameters.NodeExeLocation.set -> void
-Microsoft.Build.Execution.BuildParameters.OnlyLogCriticalEvents.get -> bool
-Microsoft.Build.Execution.BuildParameters.OnlyLogCriticalEvents.set -> void
-Microsoft.Build.Execution.BuildParameters.OutputResultsCacheFile.get -> string
-Microsoft.Build.Execution.BuildParameters.OutputResultsCacheFile.set -> void
-Microsoft.Build.Execution.BuildParameters.ProjectCacheDescriptor.get -> Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
-Microsoft.Build.Execution.BuildParameters.ProjectCacheDescriptor.set -> void
-Microsoft.Build.Execution.BuildParameters.ProjectLoadSettings.get -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Execution.BuildParameters.ProjectLoadSettings.set -> void
-Microsoft.Build.Execution.BuildParameters.ResetCaches.get -> bool
-Microsoft.Build.Execution.BuildParameters.ResetCaches.set -> void
-Microsoft.Build.Execution.BuildParameters.SaveOperatingEnvironment.get -> bool
-Microsoft.Build.Execution.BuildParameters.SaveOperatingEnvironment.set -> void
-Microsoft.Build.Execution.BuildParameters.ShutdownInProcNodeOnBuildFinish.get -> bool
-Microsoft.Build.Execution.BuildParameters.ShutdownInProcNodeOnBuildFinish.set -> void
-Microsoft.Build.Execution.BuildParameters.ToolsetDefinitionLocations.get -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Execution.BuildParameters.ToolsetDefinitionLocations.set -> void
-Microsoft.Build.Execution.BuildParameters.Toolsets.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Toolset>
-Microsoft.Build.Execution.BuildParameters.UICulture.get -> System.Globalization.CultureInfo
-Microsoft.Build.Execution.BuildParameters.UICulture.set -> void
-Microsoft.Build.Execution.BuildParameters.UseSynchronousLogging.get -> bool
-Microsoft.Build.Execution.BuildParameters.UseSynchronousLogging.set -> void
-Microsoft.Build.Execution.BuildParameters.WarningsAsErrors.get -> System.Collections.Generic.ISet<string>
-Microsoft.Build.Execution.BuildParameters.WarningsAsErrors.set -> void
-Microsoft.Build.Execution.BuildParameters.WarningsAsMessages.get -> System.Collections.Generic.ISet<string>
-Microsoft.Build.Execution.BuildParameters.WarningsAsMessages.set -> void
-Microsoft.Build.Execution.BuildParameters.WarningsNotAsErrors.get -> System.Collections.Generic.ISet<string>
-Microsoft.Build.Execution.BuildParameters.WarningsNotAsErrors.set -> void
-Microsoft.Build.Execution.BuildRequestData
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(Microsoft.Build.Execution.ProjectInstance projectInstance, string[] targetsToBuild) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(Microsoft.Build.Execution.ProjectInstance projectInstance, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(Microsoft.Build.Execution.ProjectInstance projectInstance, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(Microsoft.Build.Execution.ProjectInstance projectInstance, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, System.Collections.Generic.IEnumerable<string> propertiesToTransfer) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(Microsoft.Build.Execution.ProjectInstance projectInstance, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, System.Collections.Generic.IEnumerable<string> propertiesToTransfer, Microsoft.Build.Execution.RequestedProjectState requestedProjectState) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(string projectFullPath, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(string projectFullPath, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(string projectFullPath, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, Microsoft.Build.Execution.RequestedProjectState requestedProjectState) -> void
-Microsoft.Build.Execution.BuildRequestData.ExplicitlySpecifiedToolsVersion.get -> string
-Microsoft.Build.Execution.BuildRequestData.Flags.get -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestData.GlobalProperties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyInstance>
-Microsoft.Build.Execution.BuildRequestData.HostServices.get -> Microsoft.Build.Execution.HostServices
-Microsoft.Build.Execution.BuildRequestData.ProjectFullPath.get -> string
-Microsoft.Build.Execution.BuildRequestData.ProjectInstance.get -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.BuildRequestData.PropertiesToTransfer.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.Execution.BuildRequestData.RequestedProjectState.get -> Microsoft.Build.Execution.RequestedProjectState
-Microsoft.Build.Execution.BuildRequestData.TargetNames.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.ClearCachesAfterBuild = 8 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.FailOnUnresolvedSdk = 128 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState = 4 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreMissingEmptyAndInvalidImports = 64 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.None = 0 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild = 2 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.ProvideSubsetOfStateAfterBuild = 32 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance = 1 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.SkipNonexistentTargets = 16 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Execution.BuildResult.AddResultsForTarget(string target, Microsoft.Build.Execution.TargetResult result) -> void
-Microsoft.Build.Execution.BuildResult.BuildResult() -> void
-Microsoft.Build.Execution.BuildResult.CircularDependency.get -> bool
-Microsoft.Build.Execution.BuildResult.ConfigurationId.get -> int
-Microsoft.Build.Execution.BuildResult.Exception.get -> System.Exception
-Microsoft.Build.Execution.BuildResult.GlobalRequestId.get -> int
-Microsoft.Build.Execution.BuildResult.HasResultsForTarget(string target) -> bool
-Microsoft.Build.Execution.BuildResult.MergeResults(Microsoft.Build.Execution.BuildResult results) -> void
-Microsoft.Build.Execution.BuildResult.NodeRequestId.get -> int
-Microsoft.Build.Execution.BuildResult.OverallResult.get -> Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Execution.BuildResult.ParentGlobalRequestId.get -> int
-Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild.get -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild.set -> void
-Microsoft.Build.Execution.BuildResult.ResultsByTarget.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.TargetResult>
-Microsoft.Build.Execution.BuildResult.SubmissionId.get -> int
-Microsoft.Build.Execution.BuildResult.this[string target].get -> Microsoft.Build.Execution.ITargetResult
-Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Execution.BuildResultCode.Failure = 1 -> Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Execution.BuildResultCode.Success = 0 -> Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Execution.BuildSubmission
-Microsoft.Build.Execution.BuildSubmission.AsyncContext.get -> object
-Microsoft.Build.Execution.BuildSubmission.BuildManager.get -> Microsoft.Build.Execution.BuildManager
-Microsoft.Build.Execution.BuildSubmission.BuildResult.get -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Execution.BuildSubmission.BuildResult.set -> void
-Microsoft.Build.Execution.BuildSubmission.Execute() -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback callback, object context) -> void
-Microsoft.Build.Execution.BuildSubmission.IsCompleted.get -> bool
-Microsoft.Build.Execution.BuildSubmission.SubmissionId.get -> int
-Microsoft.Build.Execution.BuildSubmission.WaitHandle.get -> System.Threading.WaitHandle
-Microsoft.Build.Execution.BuildSubmissionCompleteCallback
-Microsoft.Build.Execution.HostServices
-Microsoft.Build.Execution.HostServices.GetHostObject(string projectFile, string targetName, string taskName) -> Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.Execution.HostServices.GetNodeAffinity(string projectFile) -> Microsoft.Build.Execution.NodeAffinity
-Microsoft.Build.Execution.HostServices.HostServices() -> void
-Microsoft.Build.Execution.HostServices.OnRenameProject(string oldFullPath, string newFullPath) -> void
-Microsoft.Build.Execution.HostServices.RegisterHostObject(string projectFile, string targetName, string taskName, Microsoft.Build.Framework.ITaskHost hostObject) -> void
-Microsoft.Build.Execution.HostServices.RegisterHostObject(string projectFile, string targetName, string taskName, string monikerName) -> void
-Microsoft.Build.Execution.HostServices.SetNodeAffinity(string projectFile, Microsoft.Build.Execution.NodeAffinity nodeAffinity) -> void
-Microsoft.Build.Execution.HostServices.UnregisterProject(string projectFullPath) -> void
-Microsoft.Build.Execution.ITargetResult
-Microsoft.Build.Execution.ITargetResult.Exception.get -> System.Exception
-Microsoft.Build.Execution.ITargetResult.Items.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Execution.ITargetResult.ResultCode.get -> Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Execution.NodeAffinity
-Microsoft.Build.Execution.NodeAffinity.Any = 2 -> Microsoft.Build.Execution.NodeAffinity
-Microsoft.Build.Execution.NodeAffinity.InProc = 0 -> Microsoft.Build.Execution.NodeAffinity
-Microsoft.Build.Execution.NodeAffinity.OutOfProc = 1 -> Microsoft.Build.Execution.NodeAffinity
-Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.NodeEngineShutdownReason.BuildComplete = 0 -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.NodeEngineShutdownReason.BuildCompleteReuse = 1 -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.NodeEngineShutdownReason.ConnectionFailed = 2 -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.NodeEngineShutdownReason.Error = 3 -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.OutOfProcNode
-Microsoft.Build.Execution.OutOfProcNode.OutOfProcNode() -> void
-Microsoft.Build.Execution.OutOfProcNode.Run(bool enableReuse, bool lowPriority, out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.OutOfProcNode.Run(bool enableReuse, out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.OutOfProcNode.Run(out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.ProjectInstance.AddItem(string itemType, string evaluatedInclude) -> Microsoft.Build.Execution.ProjectItemInstance
-Microsoft.Build.Execution.ProjectInstance.AddItem(string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> Microsoft.Build.Execution.ProjectItemInstance
-Microsoft.Build.Execution.ProjectInstance.Build() -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, out System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.TargetResult> targetOutputs) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, out System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.TargetResult> targetOutputs) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.DeepCopy() -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.ProjectInstance.DeepCopy(bool isImmutable) -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.ProjectInstance.DefaultTargets.get -> System.Collections.Generic.List<string>
-Microsoft.Build.Execution.ProjectInstance.Directory.get -> string
-Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(string condition) -> bool
-Microsoft.Build.Execution.ProjectInstance.EvaluatedItemElements.get -> System.Collections.Generic.List<Microsoft.Build.Construction.ProjectItemElement>
-Microsoft.Build.Execution.ProjectInstance.EvaluationId.get -> int
-Microsoft.Build.Execution.ProjectInstance.EvaluationId.set -> void
-Microsoft.Build.Execution.ProjectInstance.ExpandString(string unexpandedValue) -> string
-Microsoft.Build.Execution.ProjectInstance.FilteredCopy(Microsoft.Build.Execution.RequestedProjectState filter) -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.ProjectInstance.FullPath.get -> string
-Microsoft.Build.Execution.ProjectInstance.GetItems(string itemType) -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance>
-Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) -> System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectItemInstance>
-Microsoft.Build.Execution.ProjectInstance.GetProperty(string name) -> Microsoft.Build.Execution.ProjectPropertyInstance
-Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(string name) -> string
-Microsoft.Build.Execution.ProjectInstance.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Execution.ProjectInstance.ImportPaths.get -> System.Collections.Generic.IReadOnlyList<string>
-Microsoft.Build.Execution.ProjectInstance.ImportPathsIncludingDuplicates.get -> System.Collections.Generic.IReadOnlyList<string>
-Microsoft.Build.Execution.ProjectInstance.InitialTargets.get -> System.Collections.Generic.List<string>
-Microsoft.Build.Execution.ProjectInstance.IsImmutable.get -> bool
-Microsoft.Build.Execution.ProjectInstance.ItemDefinitions.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectItemDefinitionInstance>
-Microsoft.Build.Execution.ProjectInstance.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance>
-Microsoft.Build.Execution.ProjectInstance.ItemTypes.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(Microsoft.Build.Construction.ProjectRootElement xml) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(Microsoft.Build.Evaluation.Project project, Microsoft.Build.Execution.ProjectInstanceSettings settings) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(string projectFile) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Execution.ProjectInstance.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyInstance>
-Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance item) -> bool
-Microsoft.Build.Execution.ProjectInstance.RemoveProperty(string name) -> bool
-Microsoft.Build.Execution.ProjectInstance.SetProperty(string name, string evaluatedValue) -> Microsoft.Build.Execution.ProjectPropertyInstance
-Microsoft.Build.Execution.ProjectInstance.Targets.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectTargetInstance>
-Microsoft.Build.Execution.ProjectInstance.ToolsVersion.get -> string
-Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement() -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Execution.ProjectInstance.TranslateEntireState.get -> bool
-Microsoft.Build.Execution.ProjectInstance.TranslateEntireState.set -> void
-Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance projectState) -> void
-Microsoft.Build.Execution.ProjectInstanceSettings
-Microsoft.Build.Execution.ProjectInstanceSettings.Immutable = 1 -> Microsoft.Build.Execution.ProjectInstanceSettings
-Microsoft.Build.Execution.ProjectInstanceSettings.ImmutableWithFastItemLookup = 3 -> Microsoft.Build.Execution.ProjectInstanceSettings
-Microsoft.Build.Execution.ProjectInstanceSettings.None = 0 -> Microsoft.Build.Execution.ProjectInstanceSettings
-Microsoft.Build.Execution.ProjectItemDefinitionInstance
-Microsoft.Build.Execution.ProjectItemDefinitionInstance.GetMetadata(string name) -> Microsoft.Build.Execution.ProjectMetadataInstance
-Microsoft.Build.Execution.ProjectItemDefinitionInstance.ItemType.get -> string
-Microsoft.Build.Execution.ProjectItemDefinitionInstance.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectMetadataInstance>
-Microsoft.Build.Execution.ProjectItemDefinitionInstance.MetadataCount.get -> int
-Microsoft.Build.Execution.ProjectItemDefinitionInstance.MetadataNames.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.Execution.ProjectItemGroupTaskInstance
-Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance>
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Condition.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Exclude.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.ExcludeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Include.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.IncludeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.ItemType.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepDuplicates.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepDuplicatesLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepMetadata.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.MatchOnMetadata.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.MatchOnMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.MatchOnMetadataOptions.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.MatchOnMetadataOptionsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance>
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Remove.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.RemoveLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.RemoveMetadata.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.RemoveMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Condition.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Value.get -> string
-Microsoft.Build.Execution.ProjectItemInstance
-Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount.get -> int
-Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude.get -> string
-Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude.set -> void
-Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(string name) -> Microsoft.Build.Execution.ProjectMetadataInstance
-Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(string name) -> string
-Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(string name) -> bool
-Microsoft.Build.Execution.ProjectItemInstance.ItemType.get -> string
-Microsoft.Build.Execution.ProjectItemInstance.Metadata.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectMetadataInstance>
-Microsoft.Build.Execution.ProjectItemInstance.MetadataCount.get -> int
-Microsoft.Build.Execution.ProjectItemInstance.MetadataNames.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Execution.ProjectItemInstance.Project.get -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(string metadataName) -> void
-Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(string name, string evaluatedValue) -> Microsoft.Build.Execution.ProjectMetadataInstance
-Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadataDictionary) -> void
-Microsoft.Build.Execution.ProjectMetadataInstance
-Microsoft.Build.Execution.ProjectMetadataInstance.DeepClone() -> Microsoft.Build.Execution.ProjectMetadataInstance
-Microsoft.Build.Execution.ProjectMetadataInstance.EvaluatedValue.get -> string
-Microsoft.Build.Execution.ProjectMetadataInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectOnErrorInstance
-Microsoft.Build.Execution.ProjectOnErrorInstance.ExecuteTargets.get -> string
-Microsoft.Build.Execution.ProjectOnErrorInstance.ExecuteTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance
-Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance>
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Condition.get -> string
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Value.get -> string
-Microsoft.Build.Execution.ProjectPropertyInstance
-Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue.get -> string
-Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue.set -> void
-Microsoft.Build.Execution.ProjectPropertyInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance
-Microsoft.Build.Execution.ProjectTargetInstance.AfterTargets.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.AfterTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.BeforeTargets.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.BeforeTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.Children.get -> System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectTargetInstanceChild>
-Microsoft.Build.Execution.ProjectTargetInstance.Condition.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.FullPath.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.Inputs.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.InputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren.get -> System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectOnErrorInstance>
-Microsoft.Build.Execution.ProjectTargetInstance.Outputs.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.OutputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.Returns.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.ReturnsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.Tasks.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectTaskInstance>
-Microsoft.Build.Execution.ProjectTargetInstanceChild
-Microsoft.Build.Execution.ProjectTargetInstanceChild.FullPath.get -> string
-Microsoft.Build.Execution.ProjectTargetInstanceChild.ProjectTargetInstanceChild() -> void
-Microsoft.Build.Execution.ProjectTaskInstance
-Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError.get -> string
-Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnErrorLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTaskInstance.MSBuildArchitecture.get -> string
-Microsoft.Build.Execution.ProjectTaskInstance.MSBuildArchitectureLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTaskInstance.MSBuildRuntime.get -> string
-Microsoft.Build.Execution.ProjectTaskInstance.MSBuildRuntimeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTaskInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectTaskInstance.Outputs.get -> System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectTaskInstanceChild>
-Microsoft.Build.Execution.ProjectTaskInstance.Parameters.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Execution.ProjectTaskInstanceChild
-Microsoft.Build.Execution.ProjectTaskInstanceChild.ProjectTaskInstanceChild() -> void
-Microsoft.Build.Execution.ProjectTaskOutputItemInstance
-Microsoft.Build.Execution.ProjectTaskOutputItemInstance.ItemType.get -> string
-Microsoft.Build.Execution.ProjectTaskOutputItemInstance.ItemTypeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTaskOutputItemInstance.TaskParameter.get -> string
-Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance
-Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.PropertyName.get -> string
-Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.PropertyNameLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.TaskParameter.get -> string
-Microsoft.Build.Execution.RequestedProjectState
-Microsoft.Build.Execution.RequestedProjectState.ItemFilters.get -> System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<string>>
-Microsoft.Build.Execution.RequestedProjectState.ItemFilters.set -> void
-Microsoft.Build.Execution.RequestedProjectState.PropertyFilters.get -> System.Collections.Generic.List<string>
-Microsoft.Build.Execution.RequestedProjectState.PropertyFilters.set -> void
-Microsoft.Build.Execution.RequestedProjectState.RequestedProjectState() -> void
-Microsoft.Build.Execution.TargetResult
-Microsoft.Build.Execution.TargetResult.Exception.get -> System.Exception
-Microsoft.Build.Execution.TargetResult.Items.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Execution.TargetResult.ResultCode.get -> Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Execution.TargetResultCode.Failure = 2 -> Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Execution.TargetResultCode.Skipped = 0 -> Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Execution.TargetResultCode.Success = 1 -> Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Experimental.ProjectCache.CacheContext
-Microsoft.Build.Experimental.ProjectCache.CacheContext.CacheContext(System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings, Microsoft.Build.FileSystem.MSBuildFileSystemBase fileSystem, Microsoft.Build.Graph.ProjectGraph graph = null, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> graphEntryPoints = null) -> void
-Microsoft.Build.Experimental.ProjectCache.CacheContext.FileSystem.get -> Microsoft.Build.FileSystem.MSBuildFileSystemBase
-Microsoft.Build.Experimental.ProjectCache.CacheContext.Graph.get -> Microsoft.Build.Graph.ProjectGraph
-Microsoft.Build.Experimental.ProjectCache.CacheContext.GraphEntryPoints.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint>
-Microsoft.Build.Experimental.ProjectCache.CacheContext.MSBuildExePath.get -> string
-Microsoft.Build.Experimental.ProjectCache.CacheContext.PluginSettings.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
-Microsoft.Build.Experimental.ProjectCache.CacheResult
-Microsoft.Build.Experimental.ProjectCache.CacheResult.BuildResult.get -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Experimental.ProjectCache.CacheResult.ProxyTargets.get -> Microsoft.Build.Experimental.ProjectCache.ProxyTargets
-Microsoft.Build.Experimental.ProjectCache.CacheResult.ResultType.get -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.CacheResultType.CacheHit = 1 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.CacheResultType.CacheMiss = 2 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.CacheResultType.CacheNotApplicable = 3 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.CacheResultType.None = 0 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase
-Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.PluginLoggerBase() -> void
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.PluginTargetResult() -> void
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.PluginTargetResult(string targetName, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Framework.ITaskItem2> taskItems, Microsoft.Build.Execution.BuildResultCode resultCode) -> void
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.ResultCode.get -> Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.TargetName.get -> string
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.TaskItems.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Framework.ITaskItem2>
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.PluginAssemblyPath.get -> string
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.PluginInstance.get -> Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.PluginSettings.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheException
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheException.ErrorCode.get -> string
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheException.HasBeenLoggedByProjectCache.get -> bool
-Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase
-Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.ProjectCachePluginBase() -> void
-Microsoft.Build.Experimental.ProjectCache.ProxyTargets
-Microsoft.Build.Experimental.ProjectCache.ProxyTargets.ProxyTargets(System.Collections.Generic.IReadOnlyDictionary<string, string> proxyTargetToRealTargetMap) -> void
-Microsoft.Build.Experimental.ProjectCache.ProxyTargets.ProxyTargetToRealTargetMap.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
-Microsoft.Build.FileSystem.FindPredicate
-Microsoft.Build.FileSystem.FindTransform<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache
-Microsoft.Build.FileSystem.IDirectoryCache.DirectoryExists(string path) -> bool
-Microsoft.Build.FileSystem.IDirectoryCache.EnumerateDirectories<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache.EnumerateFiles<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache.FileExists(string path) -> bool
-Microsoft.Build.FileSystem.IDirectoryCacheFactory
-Microsoft.Build.FileSystem.IDirectoryCacheFactory.GetDirectoryCacheForEvaluation(int evaluationId) -> Microsoft.Build.FileSystem.IDirectoryCache
-Microsoft.Build.FileSystem.MSBuildFileSystemBase
-Microsoft.Build.FileSystem.MSBuildFileSystemBase.MSBuildFileSystemBase() -> void
-Microsoft.Build.Globbing.CompositeGlob
-Microsoft.Build.Globbing.CompositeGlob.CompositeGlob(params Microsoft.Build.Globbing.IMSBuildGlob[] globs) -> void
-Microsoft.Build.Globbing.CompositeGlob.CompositeGlob(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> void
-Microsoft.Build.Globbing.CompositeGlob.Globs.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob>
-Microsoft.Build.Globbing.CompositeGlob.IsMatch(string stringToMatch) -> bool
-Microsoft.Build.Globbing.Extensions.MSBuildGlobExtensions
-Microsoft.Build.Globbing.IMSBuildGlob
-Microsoft.Build.Globbing.IMSBuildGlob.IsMatch(string stringToMatch) -> bool
-Microsoft.Build.Globbing.MSBuildGlob
-Microsoft.Build.Globbing.MSBuildGlob.FilenamePart.get -> string
-Microsoft.Build.Globbing.MSBuildGlob.FixedDirectoryPart.get -> string
-Microsoft.Build.Globbing.MSBuildGlob.IsLegal.get -> bool
-Microsoft.Build.Globbing.MSBuildGlob.IsMatch(string stringToMatch) -> bool
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfo(string stringToMatch) -> Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult.FilenamePartMatchGroup.get -> string
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult.FixedDirectoryPartMatchGroup.get -> string
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult.IsMatch.get -> bool
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult.MatchInfoResult() -> void
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult.WildcardDirectoryPartMatchGroup.get -> string
-Microsoft.Build.Globbing.MSBuildGlob.WildcardDirectoryPart.get -> string
-Microsoft.Build.Globbing.MSBuildGlobWithGaps
-Microsoft.Build.Globbing.MSBuildGlobWithGaps.Gaps.get -> Microsoft.Build.Globbing.IMSBuildGlob
-Microsoft.Build.Globbing.MSBuildGlobWithGaps.IsMatch(string stringToMatch) -> bool
-Microsoft.Build.Globbing.MSBuildGlobWithGaps.MainGlob.get -> Microsoft.Build.Globbing.IMSBuildGlob
-Microsoft.Build.Globbing.MSBuildGlobWithGaps.MSBuildGlobWithGaps(Microsoft.Build.Globbing.IMSBuildGlob mainGlob, params Microsoft.Build.Globbing.IMSBuildGlob[] gaps) -> void
-Microsoft.Build.Globbing.MSBuildGlobWithGaps.MSBuildGlobWithGaps(Microsoft.Build.Globbing.IMSBuildGlob mainGlob, System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> gaps) -> void
-Microsoft.Build.Graph.GraphBuildOptions
-Microsoft.Build.Graph.GraphBuildOptions.Build.get -> bool
-Microsoft.Build.Graph.GraphBuildOptions.Build.init -> void
-Microsoft.Build.Graph.GraphBuildRequestData
-Microsoft.Build.Graph.GraphBuildRequestData.Flags.get -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildOptions.get -> Microsoft.Build.Graph.GraphBuildOptions
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraphEntryPoint projectGraphEntryPoint, System.Collections.Generic.ICollection<string> targetsToBuild) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraphEntryPoint projectGraphEntryPoint, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraphEntryPoint projectGraphEntryPoint, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(string projectFullPath, System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(string projectFullPath, System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> projectGraphEntryPoints, System.Collections.Generic.ICollection<string> targetsToBuild) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> projectGraphEntryPoints, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> projectGraphEntryPoints, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> projectGraphEntryPoints, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, Microsoft.Build.Graph.GraphBuildOptions graphBuildOptions) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.HostServices.get -> Microsoft.Build.Execution.HostServices
-Microsoft.Build.Graph.GraphBuildRequestData.ProjectGraph.get -> Microsoft.Build.Graph.ProjectGraph
-Microsoft.Build.Graph.GraphBuildRequestData.ProjectGraphEntryPoints.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint>
-Microsoft.Build.Graph.GraphBuildRequestData.TargetNames.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Graph.GraphBuildResult
-Microsoft.Build.Graph.GraphBuildResult.CircularDependency.get -> bool
-Microsoft.Build.Graph.GraphBuildResult.Exception.get -> System.Exception
-Microsoft.Build.Graph.GraphBuildResult.OverallResult.get -> Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Graph.GraphBuildResult.ResultsByNode.get -> System.Collections.Generic.IReadOnlyDictionary<Microsoft.Build.Graph.ProjectGraphNode, Microsoft.Build.Execution.BuildResult>
-Microsoft.Build.Graph.GraphBuildResult.SubmissionId.get -> int
-Microsoft.Build.Graph.GraphBuildResult.this[Microsoft.Build.Graph.ProjectGraphNode node].get -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Graph.GraphBuildSubmission
-Microsoft.Build.Graph.GraphBuildSubmission.AsyncContext.get -> object
-Microsoft.Build.Graph.GraphBuildSubmission.BuildManager.get -> Microsoft.Build.Execution.BuildManager
-Microsoft.Build.Graph.GraphBuildSubmission.BuildResult.get -> Microsoft.Build.Graph.GraphBuildResult
-Microsoft.Build.Graph.GraphBuildSubmission.Execute() -> Microsoft.Build.Graph.GraphBuildResult
-Microsoft.Build.Graph.GraphBuildSubmission.ExecuteAsync(Microsoft.Build.Graph.GraphBuildSubmissionCompleteCallback callback, object context) -> void
-Microsoft.Build.Graph.GraphBuildSubmission.IsCompleted.get -> bool
-Microsoft.Build.Graph.GraphBuildSubmission.SubmissionId.get -> int
-Microsoft.Build.Graph.GraphBuildSubmission.WaitHandle.get -> System.Threading.WaitHandle
-Microsoft.Build.Graph.GraphBuildSubmissionCompleteCallback
-Microsoft.Build.Graph.ProjectGraph
-Microsoft.Build.Graph.ProjectGraph.ConstructionMetrics.get -> Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics
-Microsoft.Build.Graph.ProjectGraph.EntryPointNodes.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraph.GetTargetLists(System.Collections.Generic.ICollection<string> entryProjectTargets) -> System.Collections.Generic.IReadOnlyDictionary<Microsoft.Build.Graph.ProjectGraphNode, System.Collections.Immutable.ImmutableList<string>>
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics.ConstructionTime.get -> System.TimeSpan
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics.EdgeCount.get -> int
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics.GraphConstructionMetrics() -> void
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics.GraphConstructionMetrics(System.TimeSpan constructionTime, int nodeCount, int edgeCount) -> void
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics.NodeCount.get -> int
-Microsoft.Build.Graph.ProjectGraph.GraphRoots.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(string entryProjectFile) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(string entryProjectFile, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(string entryProjectFile, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(string entryProjectFile, System.Collections.Generic.IDictionary<string, string> globalProperties) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(string entryProjectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory, int degreeOfParallelism, System.Threading.CancellationToken cancellationToken) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory, System.Threading.CancellationToken cancellationToken) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<string> entryProjectFiles) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<string> entryProjectFiles, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<string> entryProjectFiles, System.Collections.Generic.IDictionary<string, string> globalProperties) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<string> entryProjectFiles, System.Collections.Generic.IDictionary<string, string> globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc
-Microsoft.Build.Graph.ProjectGraph.ProjectNodes.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraph.ProjectNodesTopologicallySorted.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraphEntryPoint
-Microsoft.Build.Graph.ProjectGraphEntryPoint.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Graph.ProjectGraphEntryPoint.ProjectFile.get -> string
-Microsoft.Build.Graph.ProjectGraphEntryPoint.ProjectGraphEntryPoint() -> void
-Microsoft.Build.Graph.ProjectGraphEntryPoint.ProjectGraphEntryPoint(string projectFile) -> void
-Microsoft.Build.Graph.ProjectGraphEntryPoint.ProjectGraphEntryPoint(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties) -> void
-Microsoft.Build.Graph.ProjectGraphNode
-Microsoft.Build.Graph.ProjectGraphNode.ProjectInstance.get -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Graph.ProjectGraphNode.ProjectReferences.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraphNode.ReferencingProjects.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Logging.BinaryLogger
-Microsoft.Build.Logging.BinaryLogger.BinaryLogger() -> void
-Microsoft.Build.Logging.BinaryLogger.CollectProjectImports.get -> Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
-Microsoft.Build.Logging.BinaryLogger.CollectProjectImports.set -> void
-Microsoft.Build.Logging.BinaryLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.Logging.BinaryLogger.Parameters.get -> string
-Microsoft.Build.Logging.BinaryLogger.Parameters.set -> void
-Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
-Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode.Embed = 1 -> Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
-Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode.None = 0 -> Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
-Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode.ZipFile = 2 -> Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
-Microsoft.Build.Logging.BinaryLogger.Shutdown() -> void
-Microsoft.Build.Logging.BinaryLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.BinaryLogger.Verbosity.set -> void
-Microsoft.Build.Logging.BinaryLogReplayEventSource
-Microsoft.Build.Logging.BinaryLogReplayEventSource.BinaryLogReplayEventSource() -> void
-Microsoft.Build.Logging.BinaryLogReplayEventSource.Replay(string sourceFilePath) -> void
-Microsoft.Build.Logging.BinaryLogReplayEventSource.Replay(string sourceFilePath, System.Threading.CancellationToken cancellationToken) -> void
-Microsoft.Build.Logging.BuildEventArgsReader
-Microsoft.Build.Logging.BuildEventArgsReader.BuildEventArgsReader(System.IO.BinaryReader binaryReader, int fileFormatVersion) -> void
-Microsoft.Build.Logging.BuildEventArgsReader.Dispose() -> void
-Microsoft.Build.Logging.BuildEventArgsReader.Read() -> Microsoft.Build.Framework.BuildEventArgs
-Microsoft.Build.Logging.ColorResetter
-Microsoft.Build.Logging.ColorSetter
-Microsoft.Build.Logging.ConfigurableForwardingLogger
-Microsoft.Build.Logging.ConfigurableForwardingLogger.BuildEventRedirector.get -> Microsoft.Build.Framework.IEventRedirector
-Microsoft.Build.Logging.ConfigurableForwardingLogger.BuildEventRedirector.set -> void
-Microsoft.Build.Logging.ConfigurableForwardingLogger.ConfigurableForwardingLogger() -> void
-Microsoft.Build.Logging.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-Microsoft.Build.Logging.ConfigurableForwardingLogger.NodeId.get -> int
-Microsoft.Build.Logging.ConfigurableForwardingLogger.NodeId.set -> void
-Microsoft.Build.Logging.ConfigurableForwardingLogger.Parameters.get -> string
-Microsoft.Build.Logging.ConfigurableForwardingLogger.Parameters.set -> void
-Microsoft.Build.Logging.ConfigurableForwardingLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.ConfigurableForwardingLogger.Verbosity.set -> void
-Microsoft.Build.Logging.ConsoleLogger
-Microsoft.Build.Logging.ConsoleLogger.ApplyParameter(string parameterName, string parameterValue) -> void
-Microsoft.Build.Logging.ConsoleLogger.BuildFinishedHandler(object sender, Microsoft.Build.Framework.BuildFinishedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.BuildStartedHandler(object sender, Microsoft.Build.Framework.BuildStartedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.ConsoleLogger() -> void
-Microsoft.Build.Logging.ConsoleLogger.ConsoleLogger(Microsoft.Build.Framework.LoggerVerbosity verbosity) -> void
-Microsoft.Build.Logging.ConsoleLogger.ConsoleLogger(Microsoft.Build.Framework.LoggerVerbosity verbosity, Microsoft.Build.Logging.WriteHandler write, Microsoft.Build.Logging.ColorSetter colorSet, Microsoft.Build.Logging.ColorResetter colorReset) -> void
-Microsoft.Build.Logging.ConsoleLogger.CustomEventHandler(object sender, Microsoft.Build.Framework.CustomBuildEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.ErrorHandler(object sender, Microsoft.Build.Framework.BuildErrorEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.MessageHandler(object sender, Microsoft.Build.Framework.BuildMessageEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.Parameters.get -> string
-Microsoft.Build.Logging.ConsoleLogger.Parameters.set -> void
-Microsoft.Build.Logging.ConsoleLogger.ProjectFinishedHandler(object sender, Microsoft.Build.Framework.ProjectFinishedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.ProjectStartedHandler(object sender, Microsoft.Build.Framework.ProjectStartedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.ShowSummary.get -> bool
-Microsoft.Build.Logging.ConsoleLogger.ShowSummary.set -> void
-Microsoft.Build.Logging.ConsoleLogger.SkipProjectStartedText.get -> bool
-Microsoft.Build.Logging.ConsoleLogger.SkipProjectStartedText.set -> void
-Microsoft.Build.Logging.ConsoleLogger.TargetFinishedHandler(object sender, Microsoft.Build.Framework.TargetFinishedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.TargetStartedHandler(object sender, Microsoft.Build.Framework.TargetStartedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.TaskFinishedHandler(object sender, Microsoft.Build.Framework.TaskFinishedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.TaskStartedHandler(object sender, Microsoft.Build.Framework.TaskStartedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.ConsoleLogger.Verbosity.set -> void
-Microsoft.Build.Logging.ConsoleLogger.WarningHandler(object sender, Microsoft.Build.Framework.BuildWarningEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.WriteHandler.get -> Microsoft.Build.Logging.WriteHandler
-Microsoft.Build.Logging.ConsoleLogger.WriteHandler.set -> void
-Microsoft.Build.Logging.DistributedFileLogger
-Microsoft.Build.Logging.DistributedFileLogger.BuildEventRedirector.get -> Microsoft.Build.Framework.IEventRedirector
-Microsoft.Build.Logging.DistributedFileLogger.BuildEventRedirector.set -> void
-Microsoft.Build.Logging.DistributedFileLogger.DistributedFileLogger() -> void
-Microsoft.Build.Logging.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.Logging.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-Microsoft.Build.Logging.DistributedFileLogger.NodeId.get -> int
-Microsoft.Build.Logging.DistributedFileLogger.NodeId.set -> void
-Microsoft.Build.Logging.DistributedFileLogger.Parameters.get -> string
-Microsoft.Build.Logging.DistributedFileLogger.Parameters.set -> void
-Microsoft.Build.Logging.DistributedFileLogger.Shutdown() -> void
-Microsoft.Build.Logging.DistributedFileLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.DistributedFileLogger.Verbosity.set -> void
-Microsoft.Build.Logging.EventArgsDispatcher
-Microsoft.Build.Logging.EventArgsDispatcher.AnyEventRaised -> Microsoft.Build.Framework.AnyEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.BuildFinished -> Microsoft.Build.Framework.BuildFinishedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.BuildStarted -> Microsoft.Build.Framework.BuildStartedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.CustomEventRaised -> Microsoft.Build.Framework.CustomBuildEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.Dispatch(Microsoft.Build.Framework.BuildEventArgs buildEvent) -> void
-Microsoft.Build.Logging.EventArgsDispatcher.ErrorRaised -> Microsoft.Build.Framework.BuildErrorEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.EventArgsDispatcher() -> void
-Microsoft.Build.Logging.EventArgsDispatcher.MessageRaised -> Microsoft.Build.Framework.BuildMessageEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.ProjectFinished -> Microsoft.Build.Framework.ProjectFinishedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.ProjectStarted -> Microsoft.Build.Framework.ProjectStartedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.StatusEventRaised -> Microsoft.Build.Framework.BuildStatusEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.TargetFinished -> Microsoft.Build.Framework.TargetFinishedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.TargetStarted -> Microsoft.Build.Framework.TargetStartedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.TaskFinished -> Microsoft.Build.Framework.TaskFinishedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.TaskStarted -> Microsoft.Build.Framework.TaskStartedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.WarningRaised -> Microsoft.Build.Framework.BuildWarningEventHandler
-Microsoft.Build.Logging.FileLogger
-Microsoft.Build.Logging.FileLogger.FileLogger() -> void
-Microsoft.Build.Logging.ForwardingLoggerRecord
-Microsoft.Build.Logging.ForwardingLoggerRecord.CentralLogger.get -> Microsoft.Build.Framework.ILogger
-Microsoft.Build.Logging.ForwardingLoggerRecord.ForwardingLoggerDescription.get -> Microsoft.Build.Logging.LoggerDescription
-Microsoft.Build.Logging.ForwardingLoggerRecord.ForwardingLoggerRecord(Microsoft.Build.Framework.ILogger centralLogger, Microsoft.Build.Logging.LoggerDescription forwardingLoggerDescription) -> void
-Microsoft.Build.Logging.LoggerDescription
-Microsoft.Build.Logging.LoggerDescription.CreateLogger() -> Microsoft.Build.Framework.ILogger
-Microsoft.Build.Logging.LoggerDescription.IsOptional.get -> bool
-Microsoft.Build.Logging.LoggerDescription.LoggerDescription(string loggerClassName, string loggerAssemblyName, string loggerAssemblyFile, string loggerSwitchParameters, Microsoft.Build.Framework.LoggerVerbosity verbosity) -> void
-Microsoft.Build.Logging.LoggerDescription.LoggerDescription(string loggerClassName, string loggerAssemblyName, string loggerAssemblyFile, string loggerSwitchParameters, Microsoft.Build.Framework.LoggerVerbosity verbosity, bool isOptional) -> void
-Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters.get -> string
-Microsoft.Build.Logging.LoggerDescription.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.ProfilerLogger
-Microsoft.Build.Logging.ProfilerLogger.FileToLog.get -> string
-Microsoft.Build.Logging.ProfilerLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.Logging.ProfilerLogger.Parameters.get -> string
-Microsoft.Build.Logging.ProfilerLogger.Parameters.set -> void
-Microsoft.Build.Logging.ProfilerLogger.ProfilerLogger(string fileToLog) -> void
-Microsoft.Build.Logging.ProfilerLogger.Shutdown() -> void
-Microsoft.Build.Logging.ProfilerLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.ProfilerLogger.Verbosity.set -> void
-Microsoft.Build.Logging.WriteHandler
-Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider
-Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.ExternalProjectsProvider() -> void
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Collection.get -> Microsoft.Build.Evaluation.ProjectCollection
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.Construction.ProjectImportElement importingElement, Microsoft.Build.Construction.ProjectRootElement importedProject, int versionEvaluated, Microsoft.Build.Framework.SdkResult sdkResult, bool isImported) -> Microsoft.Build.Evaluation.ResolvedImport
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectChooseElementLink link) -> Microsoft.Build.Construction.ProjectChooseElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink link) -> Microsoft.Build.Construction.ProjectExtensionsElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink link) -> Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectImportGroupElementLink link) -> Microsoft.Build.Construction.ProjectImportGroupElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionElementLink link) -> Microsoft.Build.Construction.ProjectItemDefinitionElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionGroupElementLink link) -> Microsoft.Build.Construction.ProjectItemDefinitionGroupElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink link, Microsoft.Build.Evaluation.Project project = null) -> Microsoft.Build.Evaluation.ProjectItemDefinition
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink link) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemGroupElementLink link) -> Microsoft.Build.Construction.ProjectItemGroupElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemLink link, Microsoft.Build.Evaluation.Project project = null, Microsoft.Build.Construction.ProjectItemElement xml = null) -> Microsoft.Build.Evaluation.ProjectItem
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectLink link) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink link) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink link, object parent = null) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectOnErrorElementLink link) -> Microsoft.Build.Construction.ProjectOnErrorElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectOtherwiseElementLink link) -> Microsoft.Build.Construction.ProjectOtherwiseElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectOutputElementLink link) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink link) -> Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectPropertyGroupElementLink link) -> Microsoft.Build.Construction.ProjectPropertyGroupElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink link, Microsoft.Build.Evaluation.Project project = null) -> Microsoft.Build.Evaluation.ProjectProperty
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink link) -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectSdkElementLink link) -> Microsoft.Build.Construction.ProjectSdkElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink link) -> Microsoft.Build.Construction.ProjectTargetElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink link) -> Microsoft.Build.Construction.ProjectTaskElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink link) -> Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskElementLink link) -> Microsoft.Build.Construction.ProjectUsingTaskElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink link) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectWhenElementLink link) -> Microsoft.Build.Construction.ProjectWhenElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.UsingTaskParameterGroupElementLink link) -> Microsoft.Build.Construction.UsingTaskParameterGroupElement
-Microsoft.Build.ObjectModelRemoting.ProjectChooseElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectChooseElementLink.ProjectChooseElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink
-Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.ProjectElementContainerLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ProjectElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.ProjectExtensionsElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink.ProjectImportElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectImportGroupElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectImportGroupElementLink.ProjectImportGroupElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionElementLink.ProjectItemDefinitionElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionGroupElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionGroupElementLink.ProjectItemDefinitionGroupElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.ProjectItemDefinitionLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink.ProjectItemElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemGroupElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemGroupElementLink.ProjectItemGroupElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemLink.ProjectItemLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectLink
-Microsoft.Build.ObjectModelRemoting.ProjectLink.ProjectLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink.ProjectMetadataElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink
-Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.ProjectMetadataLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectOnErrorElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectOnErrorElementLink.ProjectOnErrorElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectOtherwiseElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectOtherwiseElementLink.ProjectOtherwiseElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectOutputElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectOutputElementLink.ProjectOutputElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink.ProjectPropertyElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyGroupElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyGroupElementLink.ProjectPropertyGroupElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.ProjectPropertyLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ProjectRootElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectSdkElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectSdkElementLink.ProjectSdkElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink.ProjectTargetElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.ProjectTaskElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink.ProjectUsingTaskBodyElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskElementLink.ProjectUsingTaskElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink.ProjectUsingTaskParameterElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectWhenElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectWhenElementLink.ProjectWhenElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.UsingTaskParameterGroupElementLink
-Microsoft.Build.ObjectModelRemoting.UsingTaskParameterGroupElementLink.UsingTaskParameterGroupElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.LocalName.get -> string
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.NamespaceURI.get -> string
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.Value.get -> string
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.XmlAttributeLink() -> void
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.XmlAttributeLink(string localName, string value, string namespaceUri) -> void
-override Microsoft.Build.Construction.ElementLocation.Equals(object obj) -> bool
-override Microsoft.Build.Construction.ElementLocation.GetHashCode() -> int
-override Microsoft.Build.Construction.ElementLocation.ToString() -> string
-override Microsoft.Build.Construction.ProjectChooseElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectChooseElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectChooseElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.ProjectExtensionsElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectExtensionsElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectExtensionsElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.ProjectExtensionsElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-override Microsoft.Build.Construction.ProjectItemElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-override Microsoft.Build.Construction.ProjectItemGroupElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-override Microsoft.Build.Construction.ProjectOtherwiseElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectOtherwiseElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectOtherwiseElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.ProjectRootElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectRootElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectRootElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.ProjectTargetElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-override Microsoft.Build.Construction.ProjectTaskElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-override Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectUsingTaskBodyElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.UsingTaskParameterGroupElement.Condition.get -> string
-override Microsoft.Build.Construction.UsingTaskParameterGroupElement.Condition.set -> void
-override Microsoft.Build.Construction.UsingTaskParameterGroupElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Exceptions.BuildAbortedException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.Exceptions.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.Exceptions.InvalidProjectFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.Exceptions.InvalidProjectFileException.Message.get -> string
-override Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectItemGroupTaskInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectItemInstance.ToString() -> string
-override Microsoft.Build.Execution.ProjectMetadataInstance.ToString() -> string
-override Microsoft.Build.Execution.ProjectOnErrorInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectOnErrorInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectOnErrorInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectPropertyInstance.ToString() -> string
-override Microsoft.Build.Execution.ProjectTaskInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectTaskInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputItemInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectTaskOutputItemInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputItemInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputItemInstance.TaskParameterLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.TaskParameterLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-override Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-override Microsoft.Build.Logging.FileLogger.Shutdown() -> void
-static Microsoft.Build.Construction.ProjectRootElement.Create() -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.NewProjectFileOptions projectFileOptions) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions projectFileOptions) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(string path) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(string path, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader xmlReader) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader xmlReader, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader xmlReader, Microsoft.Build.Evaluation.ProjectCollection projectCollection, bool preserveFormatting) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Open(string path) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Open(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Open(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection, bool? preserveFormatting) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.TryOpen(string path) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.TryOpen(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.TryOpen(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection, bool? preserveFormatting) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.SolutionFile.Parse(string solutionFile) -> Microsoft.Build.Construction.SolutionFile
-static Microsoft.Build.Evaluation.Context.EvaluationContext.Create(Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy policy) -> Microsoft.Build.Evaluation.Context.EvaluationContext
-static Microsoft.Build.Evaluation.Context.EvaluationContext.Create(Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy policy, Microsoft.Build.FileSystem.MSBuildFileSystemBase fileSystem) -> Microsoft.Build.Evaluation.Context.EvaluationContext
-static Microsoft.Build.Evaluation.Project.FromFile(string file, Microsoft.Build.Definition.ProjectOptions options) -> Microsoft.Build.Evaluation.Project
-static Microsoft.Build.Evaluation.Project.FromProjectRootElement(Microsoft.Build.Construction.ProjectRootElement rootElement, Microsoft.Build.Definition.ProjectOptions options) -> Microsoft.Build.Evaluation.Project
-static Microsoft.Build.Evaluation.Project.FromXmlReader(System.Xml.XmlReader reader, Microsoft.Build.Definition.ProjectOptions options) -> Microsoft.Build.Evaluation.Project
-static Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem item) -> string
-static Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition item) -> string
-static Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem item, string name) -> string
-static Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) -> string
-static Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata metadatum) -> string
-static Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty property) -> string
-static Microsoft.Build.Evaluation.ProjectCollection.DisplayVersion.get -> string
-static Microsoft.Build.Evaluation.ProjectCollection.Escape(string unescapedString) -> string
-static Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection.get -> Microsoft.Build.Evaluation.ProjectCollection
-static Microsoft.Build.Evaluation.ProjectCollection.Unescape(string escapedString) -> string
-static Microsoft.Build.Evaluation.ProjectCollection.Version.get -> System.Version
-static Microsoft.Build.Execution.BuildManager.DefaultBuildManager.get -> Microsoft.Build.Execution.BuildManager
-static Microsoft.Build.Execution.ProjectInstance.FromFile(string file, Microsoft.Build.Definition.ProjectOptions options) -> Microsoft.Build.Execution.ProjectInstance
-static Microsoft.Build.Execution.ProjectInstance.FromProjectRootElement(Microsoft.Build.Construction.ProjectRootElement rootElement, Microsoft.Build.Definition.ProjectOptions options) -> Microsoft.Build.Execution.ProjectInstance
-static Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance item) -> string
-static Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance item) -> string
-static Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) -> string
-static Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance item, string name) -> string
-static Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance metadatum) -> string
-static Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance property) -> string
-static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateCacheHit(Microsoft.Build.Execution.BuildResult buildResult) -> Microsoft.Build.Experimental.ProjectCache.CacheResult
-static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateCacheHit(Microsoft.Build.Experimental.ProjectCache.ProxyTargets proxyTargets) -> Microsoft.Build.Experimental.ProjectCache.CacheResult
-static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateCacheHit(System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Experimental.ProjectCache.PluginTargetResult> targetResults) -> Microsoft.Build.Experimental.ProjectCache.CacheResult
-static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateNonCacheHit(Microsoft.Build.Experimental.ProjectCache.CacheResultType resultType) -> Microsoft.Build.Experimental.ProjectCache.CacheResult
-static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.FromAssemblyPath(string pluginAssemblyPath, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings = null) -> Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
-static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.FromInstance(Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase pluginInstance, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings = null) -> Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
-static Microsoft.Build.Globbing.CompositeGlob.Create(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> Microsoft.Build.Globbing.IMSBuildGlob
-static Microsoft.Build.Globbing.Extensions.MSBuildGlobExtensions.GetParsedGlobs(this Microsoft.Build.Globbing.IMSBuildGlob glob) -> System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.MSBuildGlob>
-static Microsoft.Build.Globbing.MSBuildGlob.Parse(string fileSpec) -> Microsoft.Build.Globbing.MSBuildGlob
-static Microsoft.Build.Globbing.MSBuildGlob.Parse(string globRoot, string fileSpec) -> Microsoft.Build.Globbing.MSBuildGlob
-static Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.SetExternalProjectsProvider(Microsoft.Build.Evaluation.ProjectCollection collection, Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider link) -> void
-static Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Get(Microsoft.Build.Evaluation.ProjectCollection collection) -> Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory
-static Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.GetLink(object obj) -> object
-static Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.GetLocalProjects(Microsoft.Build.Evaluation.ProjectCollection collection, string projectFile = null) -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Evaluation.Project>
-static Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.IsLocal(object obj) -> bool
-static Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.AddInitialChild(Microsoft.Build.Construction.ProjectElementContainer xml, Microsoft.Build.Construction.ProjectElement child) -> void
-static Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.DeepClone(Microsoft.Build.Construction.ProjectElementContainer xml, Microsoft.Build.Construction.ProjectRootElement factory, Microsoft.Build.Construction.ProjectElementContainer parent) -> Microsoft.Build.Construction.ProjectElementContainer
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectElement xml, Microsoft.Build.Construction.ProjectRootElement owner) -> Microsoft.Build.Construction.ProjectElement
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributeLocation(Microsoft.Build.Construction.ProjectElement xml, string attributeName) -> Microsoft.Build.Construction.ElementLocation
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributes(Microsoft.Build.Construction.ProjectElement xml) -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.ObjectModelRemoting.XmlAttributeLink>
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributeValue(Microsoft.Build.Construction.ProjectElement xml, string attributeName, bool nullIfNotExists) -> string
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetExpressedAsAttribute(Microsoft.Build.Construction.ProjectElement xml) -> bool
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetPureText(Microsoft.Build.Construction.ProjectElement xml) -> string
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.MarkDirty(Microsoft.Build.Construction.ProjectElement xml, string reason, string param) -> void
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.SetExpressedAsAttribute(Microsoft.Build.Construction.ProjectElement xml, bool value) -> void
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.SetOrRemoveAttribute(Microsoft.Build.Construction.ProjectElement xml, string name, string value, bool clearAttributeCache, string reason, string param) -> void
-static Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.GetEvaluatedValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata metadata) -> string
-static Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.GetParent(Microsoft.Build.Evaluation.ProjectMetadata metadata) -> object
-static Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.GetEvaluatedValueEscaped(Microsoft.Build.Evaluation.ProjectProperty property) -> string
-virtual Microsoft.Build.Construction.ProjectElement.Condition.get -> string
-virtual Microsoft.Build.Construction.ProjectElement.Condition.set -> void
-virtual Microsoft.Build.Construction.ProjectElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-virtual Microsoft.Build.Construction.ProjectElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-virtual Microsoft.Build.Construction.ProjectElementContainer.DeepCopyFrom(Microsoft.Build.Construction.ProjectElementContainer element) -> void
-virtual Microsoft.Build.Evaluation.ProjectCollection.Dispose(bool disposing) -> void
-virtual Microsoft.Build.Execution.ProjectPropertyInstance.IsImmutable.get -> bool
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.DirectoryExists(string path) -> bool
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.EnumerateDirectories(string path, string searchPattern = "*", System.IO.SearchOption searchOption = System.IO.SearchOption.TopDirectoryOnly) -> System.Collections.Generic.IEnumerable<string>
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.EnumerateFiles(string path, string searchPattern = "*", System.IO.SearchOption searchOption = System.IO.SearchOption.TopDirectoryOnly) -> System.Collections.Generic.IEnumerable<string>
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.EnumerateFileSystemEntries(string path, string searchPattern = "*", System.IO.SearchOption searchOption = System.IO.SearchOption.TopDirectoryOnly) -> System.Collections.Generic.IEnumerable<string>
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.FileExists(string path) -> bool
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.FileOrDirectoryExists(string path) -> bool
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.GetAttributes(string path) -> System.IO.FileAttributes
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.GetFileStream(string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share) -> System.IO.Stream
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.GetLastWriteTimeUtc(string path) -> System.DateTime
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.ReadFile(string path) -> System.IO.TextReader
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.ReadFileAllBytes(string path) -> byte[]
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.ReadFileAllText(string path) -> string
-virtual Microsoft.Build.Logging.ConfigurableForwardingLogger.ForwardToCentralLogger(Microsoft.Build.Framework.BuildEventArgs e) -> void
-virtual Microsoft.Build.Logging.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-virtual Microsoft.Build.Logging.ConfigurableForwardingLogger.Shutdown() -> void
-virtual Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-virtual Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-virtual Microsoft.Build.Logging.ConsoleLogger.Shutdown() -> void
-virtual Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.Disconnected(Microsoft.Build.Evaluation.ProjectCollection collection) -> void
diff --git a/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt b/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
deleted file mode 100644
index 57af35851fb..00000000000
--- a/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
+++ /dev/null
@@ -1,24 +0,0 @@
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations, int maxNodeCount, bool onlyLogCriticalEvents, bool loadProjectsReadOnly, bool useAsynchronousLogging, bool reuseProjectRootElementCache) -> void
-Microsoft.Build.Experimental.MSBuildClient
-Microsoft.Build.Experimental.MSBuildClient.Execute(System.Threading.CancellationToken cancellationToken) -> Microsoft.Build.Experimental.MSBuildClientExitResult
-Microsoft.Build.Experimental.MSBuildClient.MSBuildClient(string commandLine, string msbuildLocation) -> void
-Microsoft.Build.Experimental.MSBuildClientExitResult
-Microsoft.Build.Experimental.MSBuildClientExitResult.MSBuildAppExitTypeString.get -> string
-Microsoft.Build.Experimental.MSBuildClientExitResult.MSBuildAppExitTypeString.set -> void
-Microsoft.Build.Experimental.MSBuildClientExitResult.MSBuildClientExitResult() -> void
-Microsoft.Build.Experimental.MSBuildClientExitResult.MSBuildClientExitType.get -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitResult.MSBuildClientExitType.set -> void
-Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitType.LaunchError = 3 -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitType.ServerBusy = 1 -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitType.Success = 0 -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitType.UnableToConnect = 2 -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitType.Unexpected = 4 -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.OutOfProcServerNode
-Microsoft.Build.Experimental.OutOfProcServerNode.BuildCallback
-Microsoft.Build.Experimental.OutOfProcServerNode.OutOfProcServerNode(Microsoft.Build.Experimental.OutOfProcServerNode.BuildCallback buildFunction) -> void
-Microsoft.Build.Experimental.OutOfProcServerNode.Run(out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
-static Microsoft.Build.Experimental.MSBuildClient.ShutdownServer(System.Threading.CancellationToken cancellationToken) -> bool
-virtual Microsoft.Build.ObjectModelRemoting.ProjectLink.GlobalPropertiesContains(string key) -> bool
-virtual Microsoft.Build.ObjectModelRemoting.ProjectLink.GlobalPropertiesCount() -> int
-virtual Microsoft.Build.ObjectModelRemoting.ProjectLink.GlobalPropertiesEnumerable() -> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>
diff --git a/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt
deleted file mode 100644
index 38f8853c43d..00000000000
--- a/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,1836 +0,0 @@
-abstract Microsoft.Build.Construction.ElementLocation.Column.get -> int
-abstract Microsoft.Build.Construction.ElementLocation.File.get -> string
-abstract Microsoft.Build.Construction.ElementLocation.Line.get -> int
-abstract Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty.get -> bool
-abstract Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty.get -> bool
-abstract Microsoft.Build.Evaluation.ProjectProperty.IsImported.get -> bool
-abstract Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty.get -> bool
-abstract Microsoft.Build.Evaluation.ProjectProperty.Name.get -> string
-abstract Microsoft.Build.Evaluation.ProjectProperty.Predecessor.get -> Microsoft.Build.Evaluation.ProjectProperty
-abstract Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue.get -> string
-abstract Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue.set -> void
-abstract Microsoft.Build.Evaluation.ProjectProperty.Xml.get -> Microsoft.Build.Construction.ProjectPropertyElement
-abstract Microsoft.Build.Execution.ProjectTargetInstanceChild.Condition.get -> string
-abstract Microsoft.Build.Execution.ProjectTargetInstanceChild.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.Execution.ProjectTargetInstanceChild.Location.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.Execution.ProjectTaskInstanceChild.Condition.get -> string
-abstract Microsoft.Build.Execution.ProjectTaskInstanceChild.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.Execution.ProjectTaskInstanceChild.Location.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.Execution.ProjectTaskInstanceChild.TaskParameterLocation.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.HasLoggedErrors.get -> bool
-abstract Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.HasLoggedErrors.set -> void
-abstract Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.LogError(string error) -> void
-abstract Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.LogMessage(string message, Microsoft.Build.Framework.MessageImportance? messageImportance = null) -> void
-abstract Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.LogWarning(string warning) -> void
-abstract Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.BeginBuildAsync(Microsoft.Build.Experimental.ProjectCache.CacheContext context, Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
-abstract Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.EndBuildAsync(Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
-abstract Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.GetCacheResultAsync(Microsoft.Build.Execution.BuildRequestData buildRequest, Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase logger, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.Build.Experimental.ProjectCache.CacheResult>
-abstract Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.GetLoadedProjects(string filePath) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Project>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement child) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.Count.get -> int
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement factory, Microsoft.Build.Construction.ProjectElementContainer parent) -> Microsoft.Build.Construction.ProjectElementContainer
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.FirstChild.get -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.LastChild.get -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.RemoveChild(Microsoft.Build.Construction.ProjectElement child) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.Attributes.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.ObjectModelRemoting.XmlAttributeLink>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ContainingProject.get -> Microsoft.Build.Construction.ProjectRootElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement owner) -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ElementName.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ExpressedAsAttribute.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ExpressedAsAttribute.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributeLocation(string attributeName) -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributeValue(string attributeName, bool nullIfNotExists) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.Location.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.NextSibling.get -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.OuterElement.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.Parent.get -> Microsoft.Build.Construction.ProjectElementContainer
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.PreviousSibling.get -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.PureText.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectElementLink.SetOrRemoveAttribute(string name, string value, bool clearAttributeCache, string reason, string param) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.Content.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.Content.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.GetSubElement(string name) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.SetSubElement(string name, string value) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink.ImplicitImportLocation.get -> Microsoft.Build.Construction.ImplicitImportLocation
-abstract Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink.OriginalElement.get -> Microsoft.Build.Construction.ProjectElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.GetMetadata(string name) -> Microsoft.Build.Evaluation.ProjectMetadata
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.GetMetadataValue(string name) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.ItemType.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.Project.get -> Microsoft.Build.Evaluation.Project
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.SetMetadataValue(string name, string unevaluatedValue) -> Microsoft.Build.Evaluation.ProjectMetadata
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink.ChangeItemType(string newType) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.ChangeItemType(string newItemType) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.DirectMetadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.EvaluatedInclude.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.GetMetadata(string name) -> Microsoft.Build.Evaluation.ProjectMetadata
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.GetMetadataValue(string name) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.HasMetadata(string name) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.MetadataCollection.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.Project.get -> Microsoft.Build.Evaluation.Project
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.RemoveMetadata(string name) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.Rename(string name) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.SetMetadataValue(string name, string unevaluatedValue, bool propagateMetadataToSiblingItems) -> Microsoft.Build.Evaluation.ProjectMetadata
-abstract Microsoft.Build.ObjectModelRemoting.ProjectItemLink.Xml.get -> Microsoft.Build.Construction.ProjectItemElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.AddItem(string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.AddItemFast(string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.AllEvaluatedItemDefinitionMetadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.AllEvaluatedItems.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.AllEvaluatedProperties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ConditionedProperties.get -> System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<string>>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings settings, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> Microsoft.Build.Execution.ProjectInstance
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.DisableMarkDirty.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.DisableMarkDirty.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ExpandString(string unexpandedValue) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetAllGlobs(Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetAllGlobs(string itemType, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem item, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemProvenance(string itemToMatch, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemProvenance(string itemToMatch, string itemType, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItems(string itemType) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemsByEvaluatedInclude(string evaluatedInclude) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemsIgnoringCondition(string itemType) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetLogicalProject() -> System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetProperty(string name) -> Microsoft.Build.Evaluation.ProjectProperty
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GetPropertyValue(string name) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Imports.get -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ImportsIncludingDuplicates.get -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.IsBuildEnabled.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.IsBuildEnabled.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.IsDirty.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ItemDefinitions.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Evaluation.ProjectItemDefinition>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ItemsIgnoringCondition.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ItemTypes.get -> System.Collections.Generic.ICollection<string>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.LastEvaluationId.get -> int
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.MarkDirty() -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ReevaluateIfNecessary(Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveGlobalProperty(string name) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveItem(Microsoft.Build.Evaluation.ProjectItem item) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveItems(System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectItem> items) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty property) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SaveLogicalProject(System.IO.TextWriter writer) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SetGlobalProperty(string name, string escapedValue) -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SetProperty(string name, string unevaluatedValue) -> Microsoft.Build.Evaluation.ProjectProperty
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SkipEvaluation.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SkipEvaluation.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.SubToolsetVersion.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Targets.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectTargetInstance>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ThrowInsteadOfSplittingItemElement.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ThrowInsteadOfSplittingItemElement.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.ToolsVersion.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Unload() -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectLink.Xml.get -> Microsoft.Build.Construction.ProjectRootElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink.ChangeName(string newName) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink.Value.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink.Value.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.EvaluatedValueEscaped.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.Parent.get -> object
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.Predecessor.get -> Microsoft.Build.Evaluation.ProjectMetadata
-abstract Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.Xml.get -> Microsoft.Build.Construction.ProjectMetadataElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink.ChangeName(string newName) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink.Value.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink.Value.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.EvaluatedIncludeEscaped.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsEnvironmentProperty.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsGlobalProperty.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsImported.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsReservedProperty.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Name.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Predecessor.get -> Microsoft.Build.Evaluation.ProjectProperty
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Project.get -> Microsoft.Build.Evaluation.Project
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.UnevaluatedValue.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.UnevaluatedValue.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Xml.get -> Microsoft.Build.Construction.ProjectPropertyElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateChooseElement() -> Microsoft.Build.Construction.ProjectChooseElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateImportElement(string project) -> Microsoft.Build.Construction.ProjectImportElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateImportGroupElement() -> Microsoft.Build.Construction.ProjectImportGroupElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemDefinitionElement(string itemType) -> Microsoft.Build.Construction.ProjectItemDefinitionElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemDefinitionGroupElement() -> Microsoft.Build.Construction.ProjectItemDefinitionGroupElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemElement(string itemType) -> Microsoft.Build.Construction.ProjectItemElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemElement(string itemType, string include) -> Microsoft.Build.Construction.ProjectItemElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemGroupElement() -> Microsoft.Build.Construction.ProjectItemGroupElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateMetadataElement(string name) -> Microsoft.Build.Construction.ProjectMetadataElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateMetadataElement(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectMetadataElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateOnErrorElement(string executeTargets) -> Microsoft.Build.Construction.ProjectOnErrorElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateOtherwiseElement() -> Microsoft.Build.Construction.ProjectOtherwiseElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateOutputElement(string taskParameter, string itemType, string propertyName) -> Microsoft.Build.Construction.ProjectOutputElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateProjectExtensionsElement() -> Microsoft.Build.Construction.ProjectExtensionsElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateProjectSdkElement(string sdkName, string sdkVersion) -> Microsoft.Build.Construction.ProjectSdkElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreatePropertyElement(string name) -> Microsoft.Build.Construction.ProjectPropertyElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreatePropertyGroupElement() -> Microsoft.Build.Construction.ProjectPropertyGroupElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateTargetElement(string name) -> Microsoft.Build.Construction.ProjectTargetElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateTaskElement(string name) -> Microsoft.Build.Construction.ProjectTaskElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskBodyElement(string evaluate, string body) -> Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskElement(string taskName, string assemblyFile, string assemblyName, string runtime, string architecture) -> Microsoft.Build.Construction.ProjectUsingTaskElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskParameterElement(string name, string output, string required, string parameterType) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskParameterGroupElement() -> Microsoft.Build.Construction.UsingTaskParameterGroupElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateWhenElement(string condition) -> Microsoft.Build.Construction.ProjectWhenElement
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.DirectoryPath.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Encoding.get -> System.Text.Encoding
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.FullPath.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.FullPath.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.HasUnsavedChanges.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.LastWriteTimeWhenRead.get -> System.DateTime
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.MarkDirty(string reason, string param) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.PreserveFormatting.get -> bool
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ProjectFileLocation.get -> Microsoft.Build.Construction.ElementLocation
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.RawXml.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ReloadFrom(string path, bool throwIfUnsavedChanges, bool preserveFormatting) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ReloadFrom(System.Xml.XmlReader reader, bool throwIfUnsavedChanges, bool preserveFormatting) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Save(System.IO.TextWriter writer) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Save(System.Text.Encoding saveEncoding) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.TimeLastChanged.get -> System.DateTime
-abstract Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Version.get -> int
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink.Name.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink.Name.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink.Returns.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.GetParameter(string name) -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.ParameterLocations.get -> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Microsoft.Build.Construction.ElementLocation>>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.Parameters.get -> System.Collections.Generic.IDictionary<string, string>
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.RemoveAllParameters() -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.RemoveParameter(string name) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.SetParameter(string name, string unevaluatedValue) -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink.TaskBody.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink.TaskBody.set -> void
-abstract Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink.Name.get -> string
-abstract Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink.Name.set -> void
-const Microsoft.Build.Evaluation.MatchOnMetadataConstants.MatchOnMetadataOptionsDefaultValue = Microsoft.Build.Evaluation.MatchOnMetadataOptions.CaseSensitive -> Microsoft.Build.Evaluation.MatchOnMetadataOptions
-Microsoft.Build.BackEnd.SdkResolution.SdkResolverException
-Microsoft.Build.BackEnd.SdkResolution.SdkResolverException.Resolver.get -> Microsoft.Build.Framework.SdkResolver
-Microsoft.Build.BackEnd.SdkResolution.SdkResolverException.Sdk.get -> Microsoft.Build.Framework.SdkReference
-Microsoft.Build.BackEnd.SdkResolution.SdkResolverException.SdkResolverException(string resourceName, Microsoft.Build.Framework.SdkResolver resolver, Microsoft.Build.Framework.SdkReference sdk, System.Exception innerException, params string[] args) -> void
-Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ElementLocation.ElementLocation() -> void
-Microsoft.Build.Construction.ElementLocation.LocationString.get -> string
-Microsoft.Build.Construction.ImplicitImportLocation
-Microsoft.Build.Construction.ImplicitImportLocation.Bottom = 2 -> Microsoft.Build.Construction.ImplicitImportLocation
-Microsoft.Build.Construction.ImplicitImportLocation.None = 0 -> Microsoft.Build.Construction.ImplicitImportLocation
-Microsoft.Build.Construction.ImplicitImportLocation.Top = 1 -> Microsoft.Build.Construction.ImplicitImportLocation
-Microsoft.Build.Construction.ProjectChooseElement
-Microsoft.Build.Construction.ProjectChooseElement.OtherwiseElement.get -> Microsoft.Build.Construction.ProjectOtherwiseElement
-Microsoft.Build.Construction.ProjectChooseElement.WhenElements.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectWhenElement>
-Microsoft.Build.Construction.ProjectConfigurationInSolution
-Microsoft.Build.Construction.ProjectConfigurationInSolution.ConfigurationName.get -> string
-Microsoft.Build.Construction.ProjectConfigurationInSolution.FullName.get -> string
-Microsoft.Build.Construction.ProjectConfigurationInSolution.IncludeInBuild.get -> bool
-Microsoft.Build.Construction.ProjectConfigurationInSolution.PlatformName.get -> string
-Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElement.AllParents.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElementContainer>
-Microsoft.Build.Construction.ProjectElement.Clone() -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElement.ContainingProject.get -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Construction.ProjectElement.ElementName.get -> string
-Microsoft.Build.Construction.ProjectElement.Label.get -> string
-Microsoft.Build.Construction.ProjectElement.Label.set -> void
-Microsoft.Build.Construction.ProjectElement.LabelLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectElement.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectElement.NextSibling.get -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElement.OuterElement.get -> string
-Microsoft.Build.Construction.ProjectElement.Parent.get -> Microsoft.Build.Construction.ProjectElementContainer
-Microsoft.Build.Construction.ProjectElement.PreviousSibling.get -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElementContainer
-Microsoft.Build.Construction.ProjectElementContainer.AllChildren.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>
-Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement child) -> void
-Microsoft.Build.Construction.ProjectElementContainer.Children.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement>
-Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement>
-Microsoft.Build.Construction.ProjectElementContainer.Count.get -> int
-Microsoft.Build.Construction.ProjectElementContainer.FirstChild.get -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference) -> void
-Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference) -> void
-Microsoft.Build.Construction.ProjectElementContainer.LastChild.get -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement child) -> void
-Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren() -> void
-Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement child) -> void
-Microsoft.Build.Construction.ProjectExtensionsElement
-Microsoft.Build.Construction.ProjectExtensionsElement.Content.get -> string
-Microsoft.Build.Construction.ProjectExtensionsElement.Content.set -> void
-Microsoft.Build.Construction.ProjectExtensionsElement.this[string name].get -> string
-Microsoft.Build.Construction.ProjectExtensionsElement.this[string name].set -> void
-Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.Construction.ProjectImportElement.ImplicitImportLocation.get -> Microsoft.Build.Construction.ImplicitImportLocation
-Microsoft.Build.Construction.ProjectImportElement.MinimumVersion.get -> string
-Microsoft.Build.Construction.ProjectImportElement.MinimumVersion.set -> void
-Microsoft.Build.Construction.ProjectImportElement.OriginalElement.get -> Microsoft.Build.Construction.ProjectElement
-Microsoft.Build.Construction.ProjectImportElement.Project.get -> string
-Microsoft.Build.Construction.ProjectImportElement.Project.set -> void
-Microsoft.Build.Construction.ProjectImportElement.ProjectLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectImportElement.Sdk.get -> string
-Microsoft.Build.Construction.ProjectImportElement.Sdk.set -> void
-Microsoft.Build.Construction.ProjectImportElement.SdkLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectImportElement.Version.get -> string
-Microsoft.Build.Construction.ProjectImportElement.Version.set -> void
-Microsoft.Build.Construction.ProjectImportGroupElement
-Microsoft.Build.Construction.ProjectImportGroupElement.AddImport(string project) -> Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.Construction.ProjectImportGroupElement.Imports.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectImportElement>
-Microsoft.Build.Construction.ProjectInSolution
-Microsoft.Build.Construction.ProjectInSolution.AbsolutePath.get -> string
-Microsoft.Build.Construction.ProjectInSolution.Dependencies.get -> System.Collections.Generic.IReadOnlyList<string>
-Microsoft.Build.Construction.ProjectInSolution.ParentProjectGuid.get -> string
-Microsoft.Build.Construction.ProjectInSolution.ProjectConfigurations.get -> System.Collections.Generic.IReadOnlyDictionary<string, Microsoft.Build.Construction.ProjectConfigurationInSolution>
-Microsoft.Build.Construction.ProjectInSolution.ProjectGuid.get -> string
-Microsoft.Build.Construction.ProjectInSolution.ProjectName.get -> string
-Microsoft.Build.Construction.ProjectInSolution.ProjectType.get -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.ProjectInSolution.ProjectType.set -> void
-Microsoft.Build.Construction.ProjectInSolution.RelativePath.get -> string
-Microsoft.Build.Construction.ProjectItemDefinitionElement
-Microsoft.Build.Construction.ProjectItemDefinitionElement.AddMetadata(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectItemDefinitionElement.AddMetadata(string name, string unevaluatedValue, bool expressAsAttribute) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectItemDefinitionElement.ItemType.get -> string
-Microsoft.Build.Construction.ProjectItemDefinitionElement.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectMetadataElement>
-Microsoft.Build.Construction.ProjectItemDefinitionGroupElement
-Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.AddItemDefinition(string itemType) -> Microsoft.Build.Construction.ProjectItemDefinitionElement
-Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.ItemDefinitions.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemDefinitionElement>
-Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectItemElement.AddMetadata(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectItemElement.AddMetadata(string name, string unevaluatedValue, bool expressAsAttribute) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectItemElement.Exclude.get -> string
-Microsoft.Build.Construction.ProjectItemElement.Exclude.set -> void
-Microsoft.Build.Construction.ProjectItemElement.ExcludeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.HasMetadata.get -> bool
-Microsoft.Build.Construction.ProjectItemElement.Include.get -> string
-Microsoft.Build.Construction.ProjectItemElement.Include.set -> void
-Microsoft.Build.Construction.ProjectItemElement.IncludeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.ItemType.get -> string
-Microsoft.Build.Construction.ProjectItemElement.ItemType.set -> void
-Microsoft.Build.Construction.ProjectItemElement.KeepDuplicates.get -> string
-Microsoft.Build.Construction.ProjectItemElement.KeepDuplicates.set -> void
-Microsoft.Build.Construction.ProjectItemElement.KeepDuplicatesLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.KeepMetadata.get -> string
-Microsoft.Build.Construction.ProjectItemElement.KeepMetadata.set -> void
-Microsoft.Build.Construction.ProjectItemElement.KeepMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadata.get -> string
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadata.set -> void
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadataOptions.get -> string
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadataOptions.set -> void
-Microsoft.Build.Construction.ProjectItemElement.MatchOnMetadataOptionsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectMetadataElement>
-Microsoft.Build.Construction.ProjectItemElement.Remove.get -> string
-Microsoft.Build.Construction.ProjectItemElement.Remove.set -> void
-Microsoft.Build.Construction.ProjectItemElement.RemoveLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.RemoveMetadata.get -> string
-Microsoft.Build.Construction.ProjectItemElement.RemoveMetadata.set -> void
-Microsoft.Build.Construction.ProjectItemElement.RemoveMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemElement.Update.get -> string
-Microsoft.Build.Construction.ProjectItemElement.Update.set -> void
-Microsoft.Build.Construction.ProjectItemElement.UpdateLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectItemGroupElement
-Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(string itemType, string include) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(string itemType, string include, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectItemGroupElement.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemElement>
-Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectMetadataElement.ExpressedAsAttribute.get -> bool
-Microsoft.Build.Construction.ProjectMetadataElement.ExpressedAsAttribute.set -> void
-Microsoft.Build.Construction.ProjectMetadataElement.Name.get -> string
-Microsoft.Build.Construction.ProjectMetadataElement.Name.set -> void
-Microsoft.Build.Construction.ProjectMetadataElement.Value.get -> string
-Microsoft.Build.Construction.ProjectMetadataElement.Value.set -> void
-Microsoft.Build.Construction.ProjectOnErrorElement
-Microsoft.Build.Construction.ProjectOnErrorElement.ExecuteTargetsAttribute.get -> string
-Microsoft.Build.Construction.ProjectOnErrorElement.ExecuteTargetsAttribute.set -> void
-Microsoft.Build.Construction.ProjectOnErrorElement.ExecuteTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectOtherwiseElement
-Microsoft.Build.Construction.ProjectOtherwiseElement.ChooseElements.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectChooseElement>
-Microsoft.Build.Construction.ProjectOtherwiseElement.ItemGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemGroupElement>
-Microsoft.Build.Construction.ProjectOtherwiseElement.PropertyGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyGroupElement>
-Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectOutputElement.IsOutputItem.get -> bool
-Microsoft.Build.Construction.ProjectOutputElement.IsOutputProperty.get -> bool
-Microsoft.Build.Construction.ProjectOutputElement.ItemType.get -> string
-Microsoft.Build.Construction.ProjectOutputElement.ItemType.set -> void
-Microsoft.Build.Construction.ProjectOutputElement.ItemTypeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectOutputElement.PropertyName.get -> string
-Microsoft.Build.Construction.ProjectOutputElement.PropertyName.set -> void
-Microsoft.Build.Construction.ProjectOutputElement.PropertyNameLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectOutputElement.TaskParameter.get -> string
-Microsoft.Build.Construction.ProjectOutputElement.TaskParameter.set -> void
-Microsoft.Build.Construction.ProjectOutputElement.TaskParameterLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.Construction.ProjectPropertyElement.Name.get -> string
-Microsoft.Build.Construction.ProjectPropertyElement.Name.set -> void
-Microsoft.Build.Construction.ProjectPropertyElement.Value.get -> string
-Microsoft.Build.Construction.ProjectPropertyElement.Value.set -> void
-Microsoft.Build.Construction.ProjectPropertyGroupElement
-Microsoft.Build.Construction.ProjectPropertyGroupElement.AddProperty(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.Construction.ProjectPropertyGroupElement.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyElement>
-Microsoft.Build.Construction.ProjectPropertyGroupElement.PropertiesReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyElement>
-Microsoft.Build.Construction.ProjectPropertyGroupElement.SetProperty(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Construction.ProjectRootElement.AddImport(string project) -> Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.Construction.ProjectRootElement.AddImportGroup() -> Microsoft.Build.Construction.ProjectImportGroupElement
-Microsoft.Build.Construction.ProjectRootElement.AddItem(string itemType, string include) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectRootElement.AddItem(string itemType, string include, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectRootElement.AddItemDefinition(string itemType) -> Microsoft.Build.Construction.ProjectItemDefinitionElement
-Microsoft.Build.Construction.ProjectRootElement.AddItemDefinitionGroup() -> Microsoft.Build.Construction.ProjectItemDefinitionGroupElement
-Microsoft.Build.Construction.ProjectRootElement.AddItemGroup() -> Microsoft.Build.Construction.ProjectItemGroupElement
-Microsoft.Build.Construction.ProjectRootElement.AddProperty(string name, string value) -> Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.Construction.ProjectRootElement.AddPropertyGroup() -> Microsoft.Build.Construction.ProjectPropertyGroupElement
-Microsoft.Build.Construction.ProjectRootElement.AddTarget(string name) -> Microsoft.Build.Construction.ProjectTargetElement
-Microsoft.Build.Construction.ProjectRootElement.AddUsingTask(string name, string assemblyFile, string assemblyName) -> Microsoft.Build.Construction.ProjectUsingTaskElement
-Microsoft.Build.Construction.ProjectRootElement.ChooseElements.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectChooseElement>
-Microsoft.Build.Construction.ProjectRootElement.CreateChooseElement() -> Microsoft.Build.Construction.ProjectChooseElement
-Microsoft.Build.Construction.ProjectRootElement.CreateImportElement(string project) -> Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.Construction.ProjectRootElement.CreateImportGroupElement() -> Microsoft.Build.Construction.ProjectImportGroupElement
-Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionElement(string itemType) -> Microsoft.Build.Construction.ProjectItemDefinitionElement
-Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionGroupElement() -> Microsoft.Build.Construction.ProjectItemDefinitionGroupElement
-Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(string itemType) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(string itemType, string include) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Construction.ProjectRootElement.CreateItemGroupElement() -> Microsoft.Build.Construction.ProjectItemGroupElement
-Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(string name) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(string name, string unevaluatedValue) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Construction.ProjectRootElement.CreateOnErrorElement(string executeTargets) -> Microsoft.Build.Construction.ProjectOnErrorElement
-Microsoft.Build.Construction.ProjectRootElement.CreateOtherwiseElement() -> Microsoft.Build.Construction.ProjectOtherwiseElement
-Microsoft.Build.Construction.ProjectRootElement.CreateOutputElement(string taskParameter, string itemType, string propertyName) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectRootElement.CreateProjectExtensionsElement() -> Microsoft.Build.Construction.ProjectExtensionsElement
-Microsoft.Build.Construction.ProjectRootElement.CreateProjectSdkElement(string sdkName, string sdkVersion) -> Microsoft.Build.Construction.ProjectSdkElement
-Microsoft.Build.Construction.ProjectRootElement.CreatePropertyElement(string name) -> Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.Construction.ProjectRootElement.CreatePropertyGroupElement() -> Microsoft.Build.Construction.ProjectPropertyGroupElement
-Microsoft.Build.Construction.ProjectRootElement.CreateTargetElement(string name) -> Microsoft.Build.Construction.ProjectTargetElement
-Microsoft.Build.Construction.ProjectRootElement.CreateTaskElement(string name) -> Microsoft.Build.Construction.ProjectTaskElement
-Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskBodyElement(string evaluate, string body) -> Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskElement(string taskName, string assemblyFile, string assemblyName) -> Microsoft.Build.Construction.ProjectUsingTaskElement
-Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskElement(string taskName, string assemblyFile, string assemblyName, string runtime, string architecture) -> Microsoft.Build.Construction.ProjectUsingTaskElement
-Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterElement(string name, string output, string required, string parameterType) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterGroupElement() -> Microsoft.Build.Construction.UsingTaskParameterGroupElement
-Microsoft.Build.Construction.ProjectRootElement.CreateWhenElement(string condition) -> Microsoft.Build.Construction.ProjectWhenElement
-Microsoft.Build.Construction.ProjectRootElement.DeepClone() -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Construction.ProjectRootElement.DefaultTargets.get -> string
-Microsoft.Build.Construction.ProjectRootElement.DefaultTargets.set -> void
-Microsoft.Build.Construction.ProjectRootElement.DefaultTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.DirectoryPath.get -> string
-Microsoft.Build.Construction.ProjectRootElement.Encoding.get -> System.Text.Encoding
-Microsoft.Build.Construction.ProjectRootElement.EscapedFullPath.get -> string
-Microsoft.Build.Construction.ProjectRootElement.FullPath.get -> string
-Microsoft.Build.Construction.ProjectRootElement.FullPath.set -> void
-Microsoft.Build.Construction.ProjectRootElement.HasUnsavedChanges.get -> bool
-Microsoft.Build.Construction.ProjectRootElement.ImportGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectImportGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.ImportGroupsReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectImportGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.Imports.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectImportElement>
-Microsoft.Build.Construction.ProjectRootElement.InitialTargets.get -> string
-Microsoft.Build.Construction.ProjectRootElement.InitialTargets.set -> void
-Microsoft.Build.Construction.ProjectRootElement.InitialTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemDefinitionGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroupsReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemDefinitionGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.ItemDefinitions.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemDefinitionElement>
-Microsoft.Build.Construction.ProjectRootElement.ItemGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.ItemGroupsReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemElement>
-Microsoft.Build.Construction.ProjectRootElement.LastWriteTimeWhenRead.get -> System.DateTime
-Microsoft.Build.Construction.ProjectRootElement.PreserveFormatting.get -> bool
-Microsoft.Build.Construction.ProjectRootElement.ProjectFileLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyElement>
-Microsoft.Build.Construction.ProjectRootElement.PropertyGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.PropertyGroupsReversed.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyGroupElement>
-Microsoft.Build.Construction.ProjectRootElement.RawXml.get -> string
-Microsoft.Build.Construction.ProjectRootElement.Reload(bool throwIfUnsavedChanges = true, bool? preserveFormatting = null) -> void
-Microsoft.Build.Construction.ProjectRootElement.ReloadFrom(string path, bool throwIfUnsavedChanges = true, bool? preserveFormatting = null) -> void
-Microsoft.Build.Construction.ProjectRootElement.ReloadFrom(System.Xml.XmlReader reader, bool throwIfUnsavedChanges = true, bool? preserveFormatting = null) -> void
-Microsoft.Build.Construction.ProjectRootElement.Save() -> void
-Microsoft.Build.Construction.ProjectRootElement.Save(string path) -> void
-Microsoft.Build.Construction.ProjectRootElement.Save(string path, System.Text.Encoding encoding) -> void
-Microsoft.Build.Construction.ProjectRootElement.Save(System.IO.TextWriter writer) -> void
-Microsoft.Build.Construction.ProjectRootElement.Save(System.Text.Encoding saveEncoding) -> void
-Microsoft.Build.Construction.ProjectRootElement.Sdk.get -> string
-Microsoft.Build.Construction.ProjectRootElement.Sdk.set -> void
-Microsoft.Build.Construction.ProjectRootElement.SdkLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.Targets.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectTargetElement>
-Microsoft.Build.Construction.ProjectRootElement.TimeLastChanged.get -> System.DateTime
-Microsoft.Build.Construction.ProjectRootElement.ToolsVersion.get -> string
-Microsoft.Build.Construction.ProjectRootElement.ToolsVersion.set -> void
-Microsoft.Build.Construction.ProjectRootElement.ToolsVersionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalProperty.get -> string
-Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalProperty.set -> void
-Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalPropertyLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectRootElement.UsingTasks.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectUsingTaskElement>
-Microsoft.Build.Construction.ProjectRootElement.Version.get -> int
-Microsoft.Build.Construction.ProjectSdkElement
-Microsoft.Build.Construction.ProjectSdkElement.MinimumVersion.get -> string
-Microsoft.Build.Construction.ProjectSdkElement.MinimumVersion.set -> void
-Microsoft.Build.Construction.ProjectSdkElement.Name.get -> string
-Microsoft.Build.Construction.ProjectSdkElement.Name.set -> void
-Microsoft.Build.Construction.ProjectSdkElement.Version.get -> string
-Microsoft.Build.Construction.ProjectSdkElement.Version.set -> void
-Microsoft.Build.Construction.ProjectTargetElement
-Microsoft.Build.Construction.ProjectTargetElement.AddItemGroup() -> Microsoft.Build.Construction.ProjectItemGroupElement
-Microsoft.Build.Construction.ProjectTargetElement.AddPropertyGroup() -> Microsoft.Build.Construction.ProjectPropertyGroupElement
-Microsoft.Build.Construction.ProjectTargetElement.AddTask(string taskName) -> Microsoft.Build.Construction.ProjectTaskElement
-Microsoft.Build.Construction.ProjectTargetElement.AfterTargets.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.AfterTargets.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.AfterTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.BeforeTargets.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.BeforeTargets.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.BeforeTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.DependsOnTargets.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.DependsOnTargets.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.DependsOnTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.Inputs.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.Inputs.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.InputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.ItemGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemGroupElement>
-Microsoft.Build.Construction.ProjectTargetElement.KeepDuplicateOutputs.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.KeepDuplicateOutputs.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.KeepDuplicateOutputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.Name.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.Name.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.NameLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.OnErrors.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectOnErrorElement>
-Microsoft.Build.Construction.ProjectTargetElement.Outputs.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.Outputs.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.OutputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.PropertyGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyGroupElement>
-Microsoft.Build.Construction.ProjectTargetElement.Returns.get -> string
-Microsoft.Build.Construction.ProjectTargetElement.Returns.set -> void
-Microsoft.Build.Construction.ProjectTargetElement.ReturnsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTargetElement.Tasks.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectTaskElement>
-Microsoft.Build.Construction.ProjectTaskElement
-Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(string taskParameter, string itemType) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(string taskParameter, string itemType, string condition) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(string taskParameter, string propertyName) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(string taskParameter, string propertyName, string condition) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError.get -> string
-Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError.set -> void
-Microsoft.Build.Construction.ProjectTaskElement.ContinueOnErrorLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTaskElement.GetParameter(string name) -> string
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture.get -> string
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture.set -> void
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitectureLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime.get -> string
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime.set -> void
-Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntimeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectTaskElement.Name.get -> string
-Microsoft.Build.Construction.ProjectTaskElement.Outputs.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectOutputElement>
-Microsoft.Build.Construction.ProjectTaskElement.ParameterLocations.get -> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Microsoft.Build.Construction.ElementLocation>>
-Microsoft.Build.Construction.ProjectTaskElement.Parameters.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters() -> void
-Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter(string name) -> void
-Microsoft.Build.Construction.ProjectTaskElement.SetParameter(string name, string unevaluatedValue) -> void
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Evaluate.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Evaluate.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement.EvaluateLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement.TaskBody.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskBodyElement.TaskBody.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement
-Microsoft.Build.Construction.ProjectUsingTaskElement.AddParameterGroup() -> Microsoft.Build.Construction.UsingTaskParameterGroupElement
-Microsoft.Build.Construction.ProjectUsingTaskElement.AddUsingTaskBody(string evaluate, string taskBody) -> Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-Microsoft.Build.Construction.ProjectUsingTaskElement.Architecture.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.Architecture.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.ArchitectureLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyFile.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyFile.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyFileLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyName.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyName.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyNameLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.Override.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.Override.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.OverrideLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.ParameterGroup.get -> Microsoft.Build.Construction.UsingTaskParameterGroupElement
-Microsoft.Build.Construction.ProjectUsingTaskElement.Runtime.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.Runtime.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.RuntimeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskBody.get -> Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskFactory.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskFactory.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskFactoryLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskName.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskName.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskElement.TaskNameLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Name.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Name.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Output.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Output.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.OutputLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterType.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterType.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterTypeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Required.get -> string
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Required.set -> void
-Microsoft.Build.Construction.ProjectUsingTaskParameterElement.RequiredLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Construction.ProjectWhenElement
-Microsoft.Build.Construction.ProjectWhenElement.ChooseElements.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectChooseElement>
-Microsoft.Build.Construction.ProjectWhenElement.ItemGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemGroupElement>
-Microsoft.Build.Construction.ProjectWhenElement.PropertyGroups.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectPropertyGroupElement>
-Microsoft.Build.Construction.SolutionConfigurationInSolution
-Microsoft.Build.Construction.SolutionConfigurationInSolution.ConfigurationName.get -> string
-Microsoft.Build.Construction.SolutionConfigurationInSolution.FullName.get -> string
-Microsoft.Build.Construction.SolutionConfigurationInSolution.PlatformName.get -> string
-Microsoft.Build.Construction.SolutionFile
-Microsoft.Build.Construction.SolutionFile.GetDefaultConfigurationName() -> string
-Microsoft.Build.Construction.SolutionFile.GetDefaultPlatformName() -> string
-Microsoft.Build.Construction.SolutionFile.ProjectsByGuid.get -> System.Collections.Generic.IReadOnlyDictionary<string, Microsoft.Build.Construction.ProjectInSolution>
-Microsoft.Build.Construction.SolutionFile.ProjectsInOrder.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Build.Construction.ProjectInSolution>
-Microsoft.Build.Construction.SolutionFile.SolutionConfigurations.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Build.Construction.SolutionConfigurationInSolution>
-Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.EtpSubProject = 5 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.KnownToBeMSBuildFormat = 1 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.SharedProject = 6 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.SolutionFolder = 2 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.Unknown = 0 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.WebDeploymentProject = 4 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.SolutionProjectType.WebProject = 3 -> Microsoft.Build.Construction.SolutionProjectType
-Microsoft.Build.Construction.UsingTaskParameterGroupElement
-Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(string name) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(string name, string output, string required, string parameterType) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-Microsoft.Build.Construction.UsingTaskParameterGroupElement.Parameters.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectUsingTaskParameterElement>
-Microsoft.Build.Definition.ProjectOptions
-Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.get -> Microsoft.Build.FileSystem.IDirectoryCacheFactory
-Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.set -> void
-Microsoft.Build.Definition.ProjectOptions.EvaluationContext.get -> Microsoft.Build.Evaluation.Context.EvaluationContext
-Microsoft.Build.Definition.ProjectOptions.EvaluationContext.set -> void
-Microsoft.Build.Definition.ProjectOptions.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Definition.ProjectOptions.GlobalProperties.set -> void
-Microsoft.Build.Definition.ProjectOptions.LoadSettings.get -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Definition.ProjectOptions.LoadSettings.set -> void
-Microsoft.Build.Definition.ProjectOptions.ProjectCollection.get -> Microsoft.Build.Evaluation.ProjectCollection
-Microsoft.Build.Definition.ProjectOptions.ProjectCollection.set -> void
-Microsoft.Build.Definition.ProjectOptions.ProjectOptions() -> void
-Microsoft.Build.Definition.ProjectOptions.SubToolsetVersion.get -> string
-Microsoft.Build.Definition.ProjectOptions.SubToolsetVersion.set -> void
-Microsoft.Build.Definition.ProjectOptions.ToolsVersion.get -> string
-Microsoft.Build.Definition.ProjectOptions.ToolsVersion.set -> void
-Microsoft.Build.Evaluation.Context.EvaluationContext
-Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy
-Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy.Isolated = 1 -> Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy
-Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy.Shared = 0 -> Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy
-Microsoft.Build.Evaluation.GlobResult
-Microsoft.Build.Evaluation.GlobResult.Excludes.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.Evaluation.GlobResult.GlobResult(Microsoft.Build.Construction.ProjectItemElement itemElement, System.Collections.Generic.IEnumerable<string> includeGlobStrings, Microsoft.Build.Globbing.IMSBuildGlob globWithGaps, System.Collections.Generic.IEnumerable<string> excludeFragmentStrings, System.Collections.Generic.IEnumerable<string> removeFragmentStrings) -> void
-Microsoft.Build.Evaluation.GlobResult.IncludeGlobs.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.Evaluation.GlobResult.ItemElement.get -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Evaluation.GlobResult.MsBuildGlob.get -> Microsoft.Build.Globbing.IMSBuildGlob
-Microsoft.Build.Evaluation.GlobResult.MsBuildGlob.set -> void
-Microsoft.Build.Evaluation.GlobResult.Removes.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.Evaluation.GlobResult.Removes.set -> void
-Microsoft.Build.Evaluation.MatchOnMetadataConstants
-Microsoft.Build.Evaluation.MatchOnMetadataOptions
-Microsoft.Build.Evaluation.MatchOnMetadataOptions.CaseInsensitive = 1 -> Microsoft.Build.Evaluation.MatchOnMetadataOptions
-Microsoft.Build.Evaluation.MatchOnMetadataOptions.CaseSensitive = 0 -> Microsoft.Build.Evaluation.MatchOnMetadataOptions
-Microsoft.Build.Evaluation.MatchOnMetadataOptions.PathLike = 2 -> Microsoft.Build.Evaluation.MatchOnMetadataOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions.IncludeAllOptions = -1 -> Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions.IncludeToolsVersion = 2 -> Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions.IncludeXmlDeclaration = 1 -> Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions.IncludeXmlNamespace = 4 -> Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.NewProjectFileOptions.None = 0 -> Microsoft.Build.Evaluation.NewProjectFileOptions
-Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.Operation.Exclude = 1 -> Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.Operation.Include = 0 -> Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.Operation.Remove = 3 -> Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.Operation.Update = 2 -> Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.Project.AddItem(string itemType, string unevaluatedInclude) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.AddItem(string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.AddItemFast(string itemType, string unevaluatedInclude) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.AddItemFast(string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-Microsoft.Build.Evaluation.Project.AllEvaluatedItems.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.AllEvaluatedProperties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>
-Microsoft.Build.Evaluation.Project.Build() -> bool
-Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger logger) -> bool
-Microsoft.Build.Evaluation.Project.Build(string target) -> bool
-Microsoft.Build.Evaluation.Project.Build(string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Evaluation.Project.Build(string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Evaluation.Project.Build(string[] targets) -> bool
-Microsoft.Build.Evaluation.Project.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Evaluation.Project.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Evaluation.Project.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> bool
-Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Evaluation.Project.ConditionedProperties.get -> System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<string>>
-Microsoft.Build.Evaluation.Project.CreateProjectInstance() -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings settings) -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings settings, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Evaluation.Project.DirectoryPath.get -> string
-Microsoft.Build.Evaluation.Project.DisableMarkDirty.get -> bool
-Microsoft.Build.Evaluation.Project.DisableMarkDirty.set -> void
-Microsoft.Build.Evaluation.Project.EvaluationCounter.get -> int
-Microsoft.Build.Evaluation.Project.ExpandString(string unexpandedValue) -> string
-Microsoft.Build.Evaluation.Project.FullPath.get -> string
-Microsoft.Build.Evaluation.Project.FullPath.set -> void
-Microsoft.Build.Evaluation.Project.GetAllGlobs() -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-Microsoft.Build.Evaluation.Project.GetAllGlobs(Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-Microsoft.Build.Evaluation.Project.GetAllGlobs(string itemType) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-Microsoft.Build.Evaluation.Project.GetAllGlobs(string itemType, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.GlobResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem item) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem item, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(string itemToMatch) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(string itemToMatch, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(string itemToMatch, string itemType) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItemProvenance(string itemToMatch, string itemType, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> System.Collections.Generic.List<Microsoft.Build.Evaluation.ProvenanceResult>
-Microsoft.Build.Evaluation.Project.GetItems(string itemType) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(string evaluatedInclude) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(string itemType) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.GetLogicalProject() -> System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>
-Microsoft.Build.Evaluation.Project.GetProperty(string name) -> Microsoft.Build.Evaluation.ProjectProperty
-Microsoft.Build.Evaluation.Project.GetPropertyValue(string name) -> string
-Microsoft.Build.Evaluation.Project.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Evaluation.Project.Imports.get -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>
-Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates.get -> System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>
-Microsoft.Build.Evaluation.Project.IsBuildEnabled.get -> bool
-Microsoft.Build.Evaluation.Project.IsBuildEnabled.set -> void
-Microsoft.Build.Evaluation.Project.IsDirty.get -> bool
-Microsoft.Build.Evaluation.Project.ItemDefinitions.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Evaluation.ProjectItemDefinition>
-Microsoft.Build.Evaluation.Project.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
-Microsoft.Build.Evaluation.Project.ItemTypes.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Evaluation.Project.LastEvaluationId.get -> int
-Microsoft.Build.Evaluation.Project.MarkDirty() -> void
-Microsoft.Build.Evaluation.Project.Project() -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) -> void
-Microsoft.Build.Evaluation.Project.Project(string projectFile) -> void
-Microsoft.Build.Evaluation.Project.Project(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
-Microsoft.Build.Evaluation.Project.Project(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Evaluation.Project.Project(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.Project(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Xml.XmlReader xmlReader) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.Project(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) -> void
-Microsoft.Build.Evaluation.Project.ProjectCollection.get -> Microsoft.Build.Evaluation.ProjectCollection
-Microsoft.Build.Evaluation.Project.ProjectFileLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Evaluation.Project.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>
-Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary() -> void
-Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) -> void
-Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(string name) -> bool
-Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem item) -> bool
-Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectItem> items) -> void
-Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty property) -> bool
-Microsoft.Build.Evaluation.Project.Save() -> void
-Microsoft.Build.Evaluation.Project.Save(string path) -> void
-Microsoft.Build.Evaluation.Project.Save(string path, System.Text.Encoding encoding) -> void
-Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter writer) -> void
-Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding encoding) -> void
-Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter writer) -> void
-Microsoft.Build.Evaluation.Project.SetGlobalProperty(string name, string escapedValue) -> bool
-Microsoft.Build.Evaluation.Project.SetProperty(string name, string unevaluatedValue) -> Microsoft.Build.Evaluation.ProjectProperty
-Microsoft.Build.Evaluation.Project.SkipEvaluation.get -> bool
-Microsoft.Build.Evaluation.Project.SkipEvaluation.set -> void
-Microsoft.Build.Evaluation.Project.SubToolsetVersion.get -> string
-Microsoft.Build.Evaluation.Project.Targets.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectTargetInstance>
-Microsoft.Build.Evaluation.Project.ThrowInsteadOfSplittingItemElement.get -> bool
-Microsoft.Build.Evaluation.Project.ThrowInsteadOfSplittingItemElement.set -> void
-Microsoft.Build.Evaluation.Project.ToolsVersion.get -> string
-Microsoft.Build.Evaluation.Project.Xml.get -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Evaluation.ProjectChangedEventArgs
-Microsoft.Build.Evaluation.ProjectChangedEventArgs.Project.get -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection
-Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset toolset) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(string toolsVersion) -> bool
-Microsoft.Build.Evaluation.ProjectCollection.Count.get -> int
-Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion.get -> string
-Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty.get -> bool
-Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.Dispose() -> void
-Microsoft.Build.Evaluation.ProjectCollection.GetEffectiveToolsVersion(string explicitToolsVersion, string toolsVersionFromProject) -> string
-Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(string name) -> Microsoft.Build.Execution.ProjectPropertyInstance
-Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(string fullPath) -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Project>
-Microsoft.Build.Evaluation.ProjectCollection.GetToolset(string toolsVersion) -> Microsoft.Build.Evaluation.Toolset
-Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Evaluation.ProjectCollection.HostServices.get -> Microsoft.Build.Execution.HostServices
-Microsoft.Build.Evaluation.ProjectCollection.HostServices.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled.get -> bool
-Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Project>
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(string fileName) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(string fileName, string toolsVersion) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(string fileName, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader xmlReader) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader xmlReader, string toolsVersion) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectCollection.Loggers.get -> System.Collections.Generic.ICollection<Microsoft.Build.Framework.ILogger>
-Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents.get -> bool
-Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded -> Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler
-Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler
-Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs
-Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.ProjectAddedToProjectCollectionEventArgs(Microsoft.Build.Construction.ProjectRootElement element) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.ProjectRootElement.get -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged -> System.EventHandler<Microsoft.Build.Evaluation.ProjectChangedEventArgs>
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection() -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetLocations) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(System.Collections.Generic.IDictionary<string, string> globalProperties) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations, int maxNodeCount, bool onlyLogCriticalEvents) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations, int maxNodeCount, bool onlyLogCriticalEvents, bool loadProjectsReadOnly) -> void
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged -> System.EventHandler<Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs>
-Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged -> System.EventHandler<Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs>
-Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> void
-Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(Microsoft.Build.Framework.ILogger logger) -> void
-Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> void
-Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets() -> void
-Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(string name) -> bool
-Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(string toolsVersion) -> bool
-Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(string name, string value) -> void
-Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation.get -> bool
-Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation.set -> void
-Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations.get -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ProjectCollection.Toolsets.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Toolset>
-Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement projectRootElement) -> bool
-Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects() -> void
-Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement projectRootElement) -> void
-Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project project) -> void
-Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers() -> void
-Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs
-Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs.Changed.get -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.DefaultToolsVersion = 0 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.DisableMarkDirty = 7 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.GlobalProperties = 3 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.HostServices = 6 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.IsBuildEnabled = 4 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.Loggers = 2 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.OnlyLogCriticalEvents = 5 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.SkipEvaluation = 8 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectCollectionChangedState.Toolsets = 1 -> Microsoft.Build.Evaluation.ProjectCollectionChangedState
-Microsoft.Build.Evaluation.ProjectItem
-Microsoft.Build.Evaluation.ProjectItem.DirectMetadata.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
-Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount.get -> int
-Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude.get -> string
-Microsoft.Build.Evaluation.ProjectItem.GetMetadata(string name) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(string name) -> string
-Microsoft.Build.Evaluation.ProjectItem.HasMetadata(string name) -> bool
-Microsoft.Build.Evaluation.ProjectItem.IsImported.get -> bool
-Microsoft.Build.Evaluation.ProjectItem.ItemType.get -> string
-Microsoft.Build.Evaluation.ProjectItem.ItemType.set -> void
-Microsoft.Build.Evaluation.ProjectItem.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
-Microsoft.Build.Evaluation.ProjectItem.MetadataCount.get -> int
-Microsoft.Build.Evaluation.ProjectItem.Project.get -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(string name) -> bool
-Microsoft.Build.Evaluation.ProjectItem.Rename(string name) -> void
-Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(string name, string unevaluatedValue) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(string name, string unevaluatedValue, bool propagateMetadataToSiblingItems) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude.get -> string
-Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude.set -> void
-Microsoft.Build.Evaluation.ProjectItem.Xml.get -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Evaluation.ProjectItemDefinition
-Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(string name) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(string name) -> string
-Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType.get -> string
-Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
-Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount.get -> int
-Microsoft.Build.Evaluation.ProjectItemDefinition.Project.get -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(string name, string unevaluatedValue) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.Default = 0 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.DoNotEvaluateElementsWithFalseCondition = 32 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.FailOnUnresolvedSdk = 256 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreEmptyImports = 16 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreInvalidImports = 64 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreMissingImports = 1 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.ProfileEvaluation = 128 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.RecordDuplicateButNotCircularImports = 2 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements = 8 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectLoadSettings.RejectCircularImports = 4 -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue.get -> string
-Microsoft.Build.Evaluation.ProjectMetadata.IsImported.get -> bool
-Microsoft.Build.Evaluation.ProjectMetadata.ItemType.get -> string
-Microsoft.Build.Evaluation.ProjectMetadata.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Evaluation.ProjectMetadata.Name.get -> string
-Microsoft.Build.Evaluation.ProjectMetadata.Predecessor.get -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.Evaluation.ProjectMetadata.Project.get -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue.get -> string
-Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue.set -> void
-Microsoft.Build.Evaluation.ProjectMetadata.Xml.get -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.Evaluation.ProjectProperty
-Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue.get -> string
-Microsoft.Build.Evaluation.ProjectProperty.Project.get -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs
-Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.ProjectXml.get -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.Reason.get -> string
-Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.Provenance.Glob = 2 -> Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.Provenance.Inconclusive = 4 -> Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.Provenance.StringLiteral = 1 -> Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.Provenance.Undefined = 0 -> Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.ProvenanceResult
-Microsoft.Build.Evaluation.ProvenanceResult.ItemElement.get -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.Evaluation.ProvenanceResult.Occurrences.get -> int
-Microsoft.Build.Evaluation.ProvenanceResult.Operation.get -> Microsoft.Build.Evaluation.Operation
-Microsoft.Build.Evaluation.ProvenanceResult.Provenance.get -> Microsoft.Build.Evaluation.Provenance
-Microsoft.Build.Evaluation.ProvenanceResult.ProvenanceResult(Microsoft.Build.Construction.ProjectItemElement itemElement, Microsoft.Build.Evaluation.Operation operation, Microsoft.Build.Evaluation.Provenance provenance, int occurrences) -> void
-Microsoft.Build.Evaluation.ResolvedImport
-Microsoft.Build.Evaluation.ResolvedImport.ImportedProject.get -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Evaluation.ResolvedImport.ImportingElement.get -> Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.Evaluation.ResolvedImport.IsImported.get -> bool
-Microsoft.Build.Evaluation.ResolvedImport.ResolvedImport() -> void
-Microsoft.Build.Evaluation.ResolvedImport.SdkResult.get -> Microsoft.Build.Framework.SdkResult
-Microsoft.Build.Evaluation.SubToolset
-Microsoft.Build.Evaluation.SubToolset.Properties.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectPropertyInstance>
-Microsoft.Build.Evaluation.SubToolset.SubToolsetVersion.get -> string
-Microsoft.Build.Evaluation.Toolset
-Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion.get -> string
-Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion() -> string
-Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(System.Collections.Generic.IDictionary<string, string> overrideGlobalProperties, int solutionVersion) -> string
-Microsoft.Build.Evaluation.Toolset.GetProperty(string propertyName, string subToolsetVersion) -> Microsoft.Build.Execution.ProjectPropertyInstance
-Microsoft.Build.Evaluation.Toolset.Properties.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectPropertyInstance>
-Microsoft.Build.Evaluation.Toolset.SubToolsets.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Evaluation.SubToolset>
-Microsoft.Build.Evaluation.Toolset.Toolset(string toolsVersion, string toolsPath, Microsoft.Build.Evaluation.ProjectCollection projectCollection, string msbuildOverrideTasksPath) -> void
-Microsoft.Build.Evaluation.Toolset.Toolset(string toolsVersion, string toolsPath, System.Collections.Generic.IDictionary<string, string> buildProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection, string msbuildOverrideTasksPath) -> void
-Microsoft.Build.Evaluation.Toolset.Toolset(string toolsVersion, string toolsPath, System.Collections.Generic.IDictionary<string, string> buildProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection, System.Collections.Generic.IDictionary<string, Microsoft.Build.Evaluation.SubToolset> subToolsets, string msbuildOverrideTasksPath) -> void
-Microsoft.Build.Evaluation.Toolset.ToolsPath.get -> string
-Microsoft.Build.Evaluation.Toolset.ToolsVersion.get -> string
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations.ConfigurationFile = 1 -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Default = 4 -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Local = 4 -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations.None = 0 -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Registry = 2 -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Exceptions.BuildAbortedException
-Microsoft.Build.Exceptions.BuildAbortedException.BuildAbortedException() -> void
-Microsoft.Build.Exceptions.BuildAbortedException.BuildAbortedException(string message) -> void
-Microsoft.Build.Exceptions.BuildAbortedException.BuildAbortedException(string message, System.Exception innerException) -> void
-Microsoft.Build.Exceptions.BuildAbortedException.BuildAbortedException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-Microsoft.Build.Exceptions.BuildAbortedException.ErrorCode.get -> string
-Microsoft.Build.Exceptions.CircularDependencyException
-Microsoft.Build.Exceptions.CircularDependencyException.CircularDependencyException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-Microsoft.Build.Exceptions.InternalLoggerException
-Microsoft.Build.Exceptions.InternalLoggerException.BuildEventArgs.get -> Microsoft.Build.Framework.BuildEventArgs
-Microsoft.Build.Exceptions.InternalLoggerException.ErrorCode.get -> string
-Microsoft.Build.Exceptions.InternalLoggerException.HelpKeyword.get -> string
-Microsoft.Build.Exceptions.InternalLoggerException.InitializationException.get -> bool
-Microsoft.Build.Exceptions.InternalLoggerException.InternalLoggerException() -> void
-Microsoft.Build.Exceptions.InternalLoggerException.InternalLoggerException(string message) -> void
-Microsoft.Build.Exceptions.InternalLoggerException.InternalLoggerException(string message, System.Exception innerException) -> void
-Microsoft.Build.Exceptions.InvalidProjectFileException
-Microsoft.Build.Exceptions.InvalidProjectFileException.BaseMessage.get -> string
-Microsoft.Build.Exceptions.InvalidProjectFileException.ColumnNumber.get -> int
-Microsoft.Build.Exceptions.InvalidProjectFileException.EndColumnNumber.get -> int
-Microsoft.Build.Exceptions.InvalidProjectFileException.EndLineNumber.get -> int
-Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorCode.get -> string
-Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorSubcategory.get -> string
-Microsoft.Build.Exceptions.InvalidProjectFileException.HasBeenLogged.get -> bool
-Microsoft.Build.Exceptions.InvalidProjectFileException.HelpKeyword.get -> string
-Microsoft.Build.Exceptions.InvalidProjectFileException.InvalidProjectFileException() -> void
-Microsoft.Build.Exceptions.InvalidProjectFileException.InvalidProjectFileException(string message) -> void
-Microsoft.Build.Exceptions.InvalidProjectFileException.InvalidProjectFileException(string message, System.Exception innerException) -> void
-Microsoft.Build.Exceptions.InvalidProjectFileException.InvalidProjectFileException(string projectFile, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string errorSubcategory, string errorCode, string helpKeyword) -> void
-Microsoft.Build.Exceptions.InvalidProjectFileException.LineNumber.get -> int
-Microsoft.Build.Exceptions.InvalidProjectFileException.ProjectFile.get -> string
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.ErrorCode.get -> string
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException() -> void
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message) -> void
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message, string errorCode) -> void
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message, string errorCode, System.Exception innerException) -> void
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message, System.Exception innerException) -> void
-Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-Microsoft.Build.Execution.BuildManager
-Microsoft.Build.Execution.BuildManager.BeginBuild(Microsoft.Build.Execution.BuildParameters parameters) -> void
-Microsoft.Build.Execution.BuildManager.BeginBuild(Microsoft.Build.Execution.BuildParameters parameters, System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.BuildManager.DeferredBuildMessage> deferredBuildMessages) -> void
-Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters parameters, Microsoft.Build.Execution.BuildRequestData requestData) -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters parameters, Microsoft.Build.Graph.GraphBuildRequestData requestData) -> Microsoft.Build.Graph.GraphBuildResult
-Microsoft.Build.Execution.BuildManager.BuildManager() -> void
-Microsoft.Build.Execution.BuildManager.BuildManager(string hostName) -> void
-Microsoft.Build.Execution.BuildManager.BuildRequest(Microsoft.Build.Execution.BuildRequestData requestData) -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Execution.BuildManager.BuildRequest(Microsoft.Build.Graph.GraphBuildRequestData requestData) -> Microsoft.Build.Graph.GraphBuildResult
-Microsoft.Build.Execution.BuildManager.CancelAllSubmissions() -> void
-Microsoft.Build.Execution.BuildManager.DeferredBuildMessage
-Microsoft.Build.Execution.BuildManager.DeferredBuildMessage.DeferredBuildMessage() -> void
-Microsoft.Build.Execution.BuildManager.DeferredBuildMessage.DeferredBuildMessage(string text, Microsoft.Build.Framework.MessageImportance importance) -> void
-Microsoft.Build.Execution.BuildManager.DeferredBuildMessage.Importance.get -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Execution.BuildManager.DeferredBuildMessage.Text.get -> string
-Microsoft.Build.Execution.BuildManager.Dispose() -> void
-Microsoft.Build.Execution.BuildManager.EndBuild() -> void
-Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild(Microsoft.Build.Evaluation.Project project) -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData requestData) -> Microsoft.Build.Execution.BuildSubmission
-Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Graph.GraphBuildRequestData requestData) -> Microsoft.Build.Graph.GraphBuildSubmission
-Microsoft.Build.Execution.BuildManager.ResetCaches() -> void
-Microsoft.Build.Execution.BuildManager.ShutdownAllNodes() -> void
-Microsoft.Build.Execution.BuildManager.~BuildManager() -> void
-Microsoft.Build.Execution.BuildParameters
-Microsoft.Build.Execution.BuildParameters.AllowFailureWithoutError.get -> bool
-Microsoft.Build.Execution.BuildParameters.AllowFailureWithoutError.set -> void
-Microsoft.Build.Execution.BuildParameters.BuildParameters() -> void
-Microsoft.Build.Execution.BuildParameters.BuildParameters(Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Execution.BuildParameters.BuildProcessEnvironment.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Execution.BuildParameters.BuildThreadPriority.get -> System.Threading.ThreadPriority
-Microsoft.Build.Execution.BuildParameters.BuildThreadPriority.set -> void
-Microsoft.Build.Execution.BuildParameters.Clone() -> Microsoft.Build.Execution.BuildParameters
-Microsoft.Build.Execution.BuildParameters.Culture.get -> System.Globalization.CultureInfo
-Microsoft.Build.Execution.BuildParameters.Culture.set -> void
-Microsoft.Build.Execution.BuildParameters.DefaultToolsVersion.get -> string
-Microsoft.Build.Execution.BuildParameters.DefaultToolsVersion.set -> void
-Microsoft.Build.Execution.BuildParameters.DetailedSummary.get -> bool
-Microsoft.Build.Execution.BuildParameters.DetailedSummary.set -> void
-Microsoft.Build.Execution.BuildParameters.DisableInProcNode.get -> bool
-Microsoft.Build.Execution.BuildParameters.DisableInProcNode.set -> void
-Microsoft.Build.Execution.BuildParameters.DiscardBuildResults.get -> bool
-Microsoft.Build.Execution.BuildParameters.DiscardBuildResults.set -> void
-Microsoft.Build.Execution.BuildParameters.EnableNodeReuse.get -> bool
-Microsoft.Build.Execution.BuildParameters.EnableNodeReuse.set -> void
-Microsoft.Build.Execution.BuildParameters.EnvironmentProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Execution.BuildParameters.ForwardingLoggers.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
-Microsoft.Build.Execution.BuildParameters.ForwardingLoggers.set -> void
-Microsoft.Build.Execution.BuildParameters.GetToolset(string toolsVersion) -> Microsoft.Build.Evaluation.Toolset
-Microsoft.Build.Execution.BuildParameters.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Execution.BuildParameters.GlobalProperties.set -> void
-Microsoft.Build.Execution.BuildParameters.HostServices.get -> Microsoft.Build.Execution.HostServices
-Microsoft.Build.Execution.BuildParameters.HostServices.set -> void
-Microsoft.Build.Execution.BuildParameters.InputResultsCacheFiles.get -> string[]
-Microsoft.Build.Execution.BuildParameters.InputResultsCacheFiles.set -> void
-Microsoft.Build.Execution.BuildParameters.Interactive.get -> bool
-Microsoft.Build.Execution.BuildParameters.Interactive.set -> void
-Microsoft.Build.Execution.BuildParameters.IsolateProjects.get -> bool
-Microsoft.Build.Execution.BuildParameters.IsolateProjects.set -> void
-Microsoft.Build.Execution.BuildParameters.LegacyThreadingSemantics.get -> bool
-Microsoft.Build.Execution.BuildParameters.LegacyThreadingSemantics.set -> void
-Microsoft.Build.Execution.BuildParameters.Loggers.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger>
-Microsoft.Build.Execution.BuildParameters.Loggers.set -> void
-Microsoft.Build.Execution.BuildParameters.LogInitialPropertiesAndItems.get -> bool
-Microsoft.Build.Execution.BuildParameters.LogInitialPropertiesAndItems.set -> void
-Microsoft.Build.Execution.BuildParameters.LogTaskInputs.get -> bool
-Microsoft.Build.Execution.BuildParameters.LogTaskInputs.set -> void
-Microsoft.Build.Execution.BuildParameters.LowPriority.get -> bool
-Microsoft.Build.Execution.BuildParameters.LowPriority.set -> void
-Microsoft.Build.Execution.BuildParameters.MaxNodeCount.get -> int
-Microsoft.Build.Execution.BuildParameters.MaxNodeCount.set -> void
-Microsoft.Build.Execution.BuildParameters.MemoryUseLimit.get -> int
-Microsoft.Build.Execution.BuildParameters.MemoryUseLimit.set -> void
-Microsoft.Build.Execution.BuildParameters.NodeExeLocation.get -> string
-Microsoft.Build.Execution.BuildParameters.NodeExeLocation.set -> void
-Microsoft.Build.Execution.BuildParameters.OnlyLogCriticalEvents.get -> bool
-Microsoft.Build.Execution.BuildParameters.OnlyLogCriticalEvents.set -> void
-Microsoft.Build.Execution.BuildParameters.OutputResultsCacheFile.get -> string
-Microsoft.Build.Execution.BuildParameters.OutputResultsCacheFile.set -> void
-Microsoft.Build.Execution.BuildParameters.ProjectCacheDescriptor.get -> Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
-Microsoft.Build.Execution.BuildParameters.ProjectCacheDescriptor.set -> void
-Microsoft.Build.Execution.BuildParameters.ProjectLoadSettings.get -> Microsoft.Build.Evaluation.ProjectLoadSettings
-Microsoft.Build.Execution.BuildParameters.ProjectLoadSettings.set -> void
-Microsoft.Build.Execution.BuildParameters.ResetCaches.get -> bool
-Microsoft.Build.Execution.BuildParameters.ResetCaches.set -> void
-Microsoft.Build.Execution.BuildParameters.SaveOperatingEnvironment.get -> bool
-Microsoft.Build.Execution.BuildParameters.SaveOperatingEnvironment.set -> void
-Microsoft.Build.Execution.BuildParameters.ShutdownInProcNodeOnBuildFinish.get -> bool
-Microsoft.Build.Execution.BuildParameters.ShutdownInProcNodeOnBuildFinish.set -> void
-Microsoft.Build.Execution.BuildParameters.ToolsetDefinitionLocations.get -> Microsoft.Build.Evaluation.ToolsetDefinitionLocations
-Microsoft.Build.Execution.BuildParameters.ToolsetDefinitionLocations.set -> void
-Microsoft.Build.Execution.BuildParameters.Toolsets.get -> System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.Toolset>
-Microsoft.Build.Execution.BuildParameters.UICulture.get -> System.Globalization.CultureInfo
-Microsoft.Build.Execution.BuildParameters.UICulture.set -> void
-Microsoft.Build.Execution.BuildParameters.UseSynchronousLogging.get -> bool
-Microsoft.Build.Execution.BuildParameters.UseSynchronousLogging.set -> void
-Microsoft.Build.Execution.BuildParameters.WarningsAsErrors.get -> System.Collections.Generic.ISet<string>
-Microsoft.Build.Execution.BuildParameters.WarningsAsErrors.set -> void
-Microsoft.Build.Execution.BuildParameters.WarningsAsMessages.get -> System.Collections.Generic.ISet<string>
-Microsoft.Build.Execution.BuildParameters.WarningsAsMessages.set -> void
-Microsoft.Build.Execution.BuildParameters.WarningsNotAsErrors.get -> System.Collections.Generic.ISet<string>
-Microsoft.Build.Execution.BuildParameters.WarningsNotAsErrors.set -> void
-Microsoft.Build.Execution.BuildRequestData
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(Microsoft.Build.Execution.ProjectInstance projectInstance, string[] targetsToBuild) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(Microsoft.Build.Execution.ProjectInstance projectInstance, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(Microsoft.Build.Execution.ProjectInstance projectInstance, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(Microsoft.Build.Execution.ProjectInstance projectInstance, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, System.Collections.Generic.IEnumerable<string> propertiesToTransfer) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(Microsoft.Build.Execution.ProjectInstance projectInstance, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, System.Collections.Generic.IEnumerable<string> propertiesToTransfer, Microsoft.Build.Execution.RequestedProjectState requestedProjectState) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(string projectFullPath, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(string projectFullPath, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Execution.BuildRequestData.BuildRequestData(string projectFullPath, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string[] targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, Microsoft.Build.Execution.RequestedProjectState requestedProjectState) -> void
-Microsoft.Build.Execution.BuildRequestData.ExplicitlySpecifiedToolsVersion.get -> string
-Microsoft.Build.Execution.BuildRequestData.Flags.get -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestData.GlobalProperties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyInstance>
-Microsoft.Build.Execution.BuildRequestData.HostServices.get -> Microsoft.Build.Execution.HostServices
-Microsoft.Build.Execution.BuildRequestData.ProjectFullPath.get -> string
-Microsoft.Build.Execution.BuildRequestData.ProjectInstance.get -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.BuildRequestData.PropertiesToTransfer.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.Execution.BuildRequestData.RequestedProjectState.get -> Microsoft.Build.Execution.RequestedProjectState
-Microsoft.Build.Execution.BuildRequestData.TargetNames.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.ClearCachesAfterBuild = 8 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.FailOnUnresolvedSdk = 128 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState = 4 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreMissingEmptyAndInvalidImports = 64 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.None = 0 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild = 2 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.ProvideSubsetOfStateAfterBuild = 32 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance = 1 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildRequestDataFlags.SkipNonexistentTargets = 16 -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Execution.BuildResult.AddResultsForTarget(string target, Microsoft.Build.Execution.TargetResult result) -> void
-Microsoft.Build.Execution.BuildResult.BuildResult() -> void
-Microsoft.Build.Execution.BuildResult.CircularDependency.get -> bool
-Microsoft.Build.Execution.BuildResult.ConfigurationId.get -> int
-Microsoft.Build.Execution.BuildResult.Exception.get -> System.Exception
-Microsoft.Build.Execution.BuildResult.GlobalRequestId.get -> int
-Microsoft.Build.Execution.BuildResult.HasResultsForTarget(string target) -> bool
-Microsoft.Build.Execution.BuildResult.MergeResults(Microsoft.Build.Execution.BuildResult results) -> void
-Microsoft.Build.Execution.BuildResult.NodeRequestId.get -> int
-Microsoft.Build.Execution.BuildResult.OverallResult.get -> Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Execution.BuildResult.ParentGlobalRequestId.get -> int
-Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild.get -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild.set -> void
-Microsoft.Build.Execution.BuildResult.ResultsByTarget.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.TargetResult>
-Microsoft.Build.Execution.BuildResult.SubmissionId.get -> int
-Microsoft.Build.Execution.BuildResult.this[string target].get -> Microsoft.Build.Execution.ITargetResult
-Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Execution.BuildResultCode.Failure = 1 -> Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Execution.BuildResultCode.Success = 0 -> Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Execution.BuildSubmission
-Microsoft.Build.Execution.BuildSubmission.AsyncContext.get -> object
-Microsoft.Build.Execution.BuildSubmission.BuildManager.get -> Microsoft.Build.Execution.BuildManager
-Microsoft.Build.Execution.BuildSubmission.BuildResult.get -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Execution.BuildSubmission.BuildResult.set -> void
-Microsoft.Build.Execution.BuildSubmission.Execute() -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback callback, object context) -> void
-Microsoft.Build.Execution.BuildSubmission.IsCompleted.get -> bool
-Microsoft.Build.Execution.BuildSubmission.SubmissionId.get -> int
-Microsoft.Build.Execution.BuildSubmission.WaitHandle.get -> System.Threading.WaitHandle
-Microsoft.Build.Execution.BuildSubmissionCompleteCallback
-Microsoft.Build.Execution.HostServices
-Microsoft.Build.Execution.HostServices.GetHostObject(string projectFile, string targetName, string taskName) -> Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.Execution.HostServices.GetNodeAffinity(string projectFile) -> Microsoft.Build.Execution.NodeAffinity
-Microsoft.Build.Execution.HostServices.HostServices() -> void
-Microsoft.Build.Execution.HostServices.OnRenameProject(string oldFullPath, string newFullPath) -> void
-Microsoft.Build.Execution.HostServices.RegisterHostObject(string projectFile, string targetName, string taskName, Microsoft.Build.Framework.ITaskHost hostObject) -> void
-Microsoft.Build.Execution.HostServices.RegisterHostObject(string projectFile, string targetName, string taskName, string monikerName) -> void
-Microsoft.Build.Execution.HostServices.SetNodeAffinity(string projectFile, Microsoft.Build.Execution.NodeAffinity nodeAffinity) -> void
-Microsoft.Build.Execution.HostServices.UnregisterProject(string projectFullPath) -> void
-Microsoft.Build.Execution.ITargetResult
-Microsoft.Build.Execution.ITargetResult.Exception.get -> System.Exception
-Microsoft.Build.Execution.ITargetResult.Items.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Execution.ITargetResult.ResultCode.get -> Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Execution.NodeAffinity
-Microsoft.Build.Execution.NodeAffinity.Any = 2 -> Microsoft.Build.Execution.NodeAffinity
-Microsoft.Build.Execution.NodeAffinity.InProc = 0 -> Microsoft.Build.Execution.NodeAffinity
-Microsoft.Build.Execution.NodeAffinity.OutOfProc = 1 -> Microsoft.Build.Execution.NodeAffinity
-Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.NodeEngineShutdownReason.BuildComplete = 0 -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.NodeEngineShutdownReason.BuildCompleteReuse = 1 -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.NodeEngineShutdownReason.ConnectionFailed = 2 -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.NodeEngineShutdownReason.Error = 3 -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.OutOfProcNode
-Microsoft.Build.Execution.OutOfProcNode.OutOfProcNode() -> void
-Microsoft.Build.Execution.OutOfProcNode.Run(bool enableReuse, bool lowPriority, out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.OutOfProcNode.Run(bool enableReuse, out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.OutOfProcNode.Run(out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.ProjectInstance.AddItem(string itemType, string evaluatedInclude) -> Microsoft.Build.Execution.ProjectItemInstance
-Microsoft.Build.Execution.ProjectInstance.AddItem(string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> Microsoft.Build.Execution.ProjectItemInstance
-Microsoft.Build.Execution.ProjectInstance.Build() -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, out System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.TargetResult> targetOutputs) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, out System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.TargetResult> targetOutputs) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers) -> bool
-Microsoft.Build.Execution.ProjectInstance.DeepCopy() -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.ProjectInstance.DeepCopy(bool isImmutable) -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.ProjectInstance.DefaultTargets.get -> System.Collections.Generic.List<string>
-Microsoft.Build.Execution.ProjectInstance.Directory.get -> string
-Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(string condition) -> bool
-Microsoft.Build.Execution.ProjectInstance.EvaluatedItemElements.get -> System.Collections.Generic.List<Microsoft.Build.Construction.ProjectItemElement>
-Microsoft.Build.Execution.ProjectInstance.EvaluationId.get -> int
-Microsoft.Build.Execution.ProjectInstance.EvaluationId.set -> void
-Microsoft.Build.Execution.ProjectInstance.ExpandString(string unexpandedValue) -> string
-Microsoft.Build.Execution.ProjectInstance.FilteredCopy(Microsoft.Build.Execution.RequestedProjectState filter) -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.ProjectInstance.FullPath.get -> string
-Microsoft.Build.Execution.ProjectInstance.GetItems(string itemType) -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance>
-Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) -> System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectItemInstance>
-Microsoft.Build.Execution.ProjectInstance.GetProperty(string name) -> Microsoft.Build.Execution.ProjectPropertyInstance
-Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(string name) -> string
-Microsoft.Build.Execution.ProjectInstance.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Execution.ProjectInstance.ImportPaths.get -> System.Collections.Generic.IReadOnlyList<string>
-Microsoft.Build.Execution.ProjectInstance.ImportPathsIncludingDuplicates.get -> System.Collections.Generic.IReadOnlyList<string>
-Microsoft.Build.Execution.ProjectInstance.InitialTargets.get -> System.Collections.Generic.List<string>
-Microsoft.Build.Execution.ProjectInstance.IsImmutable.get -> bool
-Microsoft.Build.Execution.ProjectInstance.ItemDefinitions.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectItemDefinitionInstance>
-Microsoft.Build.Execution.ProjectInstance.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance>
-Microsoft.Build.Execution.ProjectInstance.ItemTypes.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(Microsoft.Build.Construction.ProjectRootElement xml) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(Microsoft.Build.Evaluation.Project project, Microsoft.Build.Execution.ProjectInstanceSettings settings) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(string projectFile) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Execution.ProjectInstance.ProjectInstance(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Execution.ProjectInstance.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyInstance>
-Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance item) -> bool
-Microsoft.Build.Execution.ProjectInstance.RemoveProperty(string name) -> bool
-Microsoft.Build.Execution.ProjectInstance.SetProperty(string name, string evaluatedValue) -> Microsoft.Build.Execution.ProjectPropertyInstance
-Microsoft.Build.Execution.ProjectInstance.Targets.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Execution.ProjectTargetInstance>
-Microsoft.Build.Execution.ProjectInstance.ToolsVersion.get -> string
-Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement() -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Execution.ProjectInstance.TranslateEntireState.get -> bool
-Microsoft.Build.Execution.ProjectInstance.TranslateEntireState.set -> void
-Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance projectState) -> void
-Microsoft.Build.Execution.ProjectInstanceSettings
-Microsoft.Build.Execution.ProjectInstanceSettings.Immutable = 1 -> Microsoft.Build.Execution.ProjectInstanceSettings
-Microsoft.Build.Execution.ProjectInstanceSettings.ImmutableWithFastItemLookup = 3 -> Microsoft.Build.Execution.ProjectInstanceSettings
-Microsoft.Build.Execution.ProjectInstanceSettings.None = 0 -> Microsoft.Build.Execution.ProjectInstanceSettings
-Microsoft.Build.Execution.ProjectItemDefinitionInstance
-Microsoft.Build.Execution.ProjectItemDefinitionInstance.GetMetadata(string name) -> Microsoft.Build.Execution.ProjectMetadataInstance
-Microsoft.Build.Execution.ProjectItemDefinitionInstance.ItemType.get -> string
-Microsoft.Build.Execution.ProjectItemDefinitionInstance.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectMetadataInstance>
-Microsoft.Build.Execution.ProjectItemDefinitionInstance.MetadataCount.get -> int
-Microsoft.Build.Execution.ProjectItemDefinitionInstance.MetadataNames.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.Execution.ProjectItemGroupTaskInstance
-Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance>
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Condition.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Exclude.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.ExcludeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Include.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.IncludeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.ItemType.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepDuplicates.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepDuplicatesLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepMetadata.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.MatchOnMetadata.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.MatchOnMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.MatchOnMetadataOptions.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.MatchOnMetadataOptionsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Metadata.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance>
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Remove.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.RemoveLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.RemoveMetadata.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.RemoveMetadataLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Condition.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Value.get -> string
-Microsoft.Build.Execution.ProjectItemInstance
-Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount.get -> int
-Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude.get -> string
-Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude.set -> void
-Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(string name) -> Microsoft.Build.Execution.ProjectMetadataInstance
-Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(string name) -> string
-Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(string name) -> bool
-Microsoft.Build.Execution.ProjectItemInstance.ItemType.get -> string
-Microsoft.Build.Execution.ProjectItemInstance.Metadata.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectMetadataInstance>
-Microsoft.Build.Execution.ProjectItemInstance.MetadataCount.get -> int
-Microsoft.Build.Execution.ProjectItemInstance.MetadataNames.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Execution.ProjectItemInstance.Project.get -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(string metadataName) -> void
-Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(string name, string evaluatedValue) -> Microsoft.Build.Execution.ProjectMetadataInstance
-Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadataDictionary) -> void
-Microsoft.Build.Execution.ProjectMetadataInstance
-Microsoft.Build.Execution.ProjectMetadataInstance.DeepClone() -> Microsoft.Build.Execution.ProjectMetadataInstance
-Microsoft.Build.Execution.ProjectMetadataInstance.EvaluatedValue.get -> string
-Microsoft.Build.Execution.ProjectMetadataInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectOnErrorInstance
-Microsoft.Build.Execution.ProjectOnErrorInstance.ExecuteTargets.get -> string
-Microsoft.Build.Execution.ProjectOnErrorInstance.ExecuteTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance
-Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Properties.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance>
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Condition.get -> string
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Value.get -> string
-Microsoft.Build.Execution.ProjectPropertyInstance
-Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue.get -> string
-Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue.set -> void
-Microsoft.Build.Execution.ProjectPropertyInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance
-Microsoft.Build.Execution.ProjectTargetInstance.AfterTargets.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.AfterTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.BeforeTargets.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.BeforeTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.Children.get -> System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectTargetInstanceChild>
-Microsoft.Build.Execution.ProjectTargetInstance.Condition.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargetsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.FullPath.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.Inputs.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.InputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren.get -> System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectOnErrorInstance>
-Microsoft.Build.Execution.ProjectTargetInstance.Outputs.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.OutputsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.Returns.get -> string
-Microsoft.Build.Execution.ProjectTargetInstance.ReturnsLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTargetInstance.Tasks.get -> System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectTaskInstance>
-Microsoft.Build.Execution.ProjectTargetInstanceChild
-Microsoft.Build.Execution.ProjectTargetInstanceChild.FullPath.get -> string
-Microsoft.Build.Execution.ProjectTargetInstanceChild.ProjectTargetInstanceChild() -> void
-Microsoft.Build.Execution.ProjectTaskInstance
-Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError.get -> string
-Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnErrorLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTaskInstance.MSBuildArchitecture.get -> string
-Microsoft.Build.Execution.ProjectTaskInstance.MSBuildArchitectureLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTaskInstance.MSBuildRuntime.get -> string
-Microsoft.Build.Execution.ProjectTaskInstance.MSBuildRuntimeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTaskInstance.Name.get -> string
-Microsoft.Build.Execution.ProjectTaskInstance.Outputs.get -> System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectTaskInstanceChild>
-Microsoft.Build.Execution.ProjectTaskInstance.Parameters.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Execution.ProjectTaskInstanceChild
-Microsoft.Build.Execution.ProjectTaskInstanceChild.ProjectTaskInstanceChild() -> void
-Microsoft.Build.Execution.ProjectTaskOutputItemInstance
-Microsoft.Build.Execution.ProjectTaskOutputItemInstance.ItemType.get -> string
-Microsoft.Build.Execution.ProjectTaskOutputItemInstance.ItemTypeLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTaskOutputItemInstance.TaskParameter.get -> string
-Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance
-Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.PropertyName.get -> string
-Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.PropertyNameLocation.get -> Microsoft.Build.Construction.ElementLocation
-Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.TaskParameter.get -> string
-Microsoft.Build.Execution.RequestedProjectState
-Microsoft.Build.Execution.RequestedProjectState.ItemFilters.get -> System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<string>>
-Microsoft.Build.Execution.RequestedProjectState.ItemFilters.set -> void
-Microsoft.Build.Execution.RequestedProjectState.PropertyFilters.get -> System.Collections.Generic.List<string>
-Microsoft.Build.Execution.RequestedProjectState.PropertyFilters.set -> void
-Microsoft.Build.Execution.RequestedProjectState.RequestedProjectState() -> void
-Microsoft.Build.Execution.TargetResult
-Microsoft.Build.Execution.TargetResult.Exception.get -> System.Exception
-Microsoft.Build.Execution.TargetResult.Items.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Execution.TargetResult.ResultCode.get -> Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Execution.TargetResultCode.Failure = 2 -> Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Execution.TargetResultCode.Skipped = 0 -> Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Execution.TargetResultCode.Success = 1 -> Microsoft.Build.Execution.TargetResultCode
-Microsoft.Build.Experimental.ProjectCache.CacheContext
-Microsoft.Build.Experimental.ProjectCache.CacheContext.CacheContext(System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings, Microsoft.Build.FileSystem.MSBuildFileSystemBase fileSystem, Microsoft.Build.Graph.ProjectGraph graph = null, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> graphEntryPoints = null) -> void
-Microsoft.Build.Experimental.ProjectCache.CacheContext.FileSystem.get -> Microsoft.Build.FileSystem.MSBuildFileSystemBase
-Microsoft.Build.Experimental.ProjectCache.CacheContext.Graph.get -> Microsoft.Build.Graph.ProjectGraph
-Microsoft.Build.Experimental.ProjectCache.CacheContext.GraphEntryPoints.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint>
-Microsoft.Build.Experimental.ProjectCache.CacheContext.MSBuildExePath.get -> string
-Microsoft.Build.Experimental.ProjectCache.CacheContext.PluginSettings.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
-Microsoft.Build.Experimental.ProjectCache.CacheResult
-Microsoft.Build.Experimental.ProjectCache.CacheResult.BuildResult.get -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Experimental.ProjectCache.CacheResult.ProxyTargets.get -> Microsoft.Build.Experimental.ProjectCache.ProxyTargets
-Microsoft.Build.Experimental.ProjectCache.CacheResult.ResultType.get -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.CacheResultType.CacheHit = 1 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.CacheResultType.CacheMiss = 2 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.CacheResultType.CacheNotApplicable = 3 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.CacheResultType.None = 0 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
-Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase
-Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.PluginLoggerBase() -> void
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.PluginTargetResult() -> void
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.PluginTargetResult(string targetName, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Framework.ITaskItem2> taskItems, Microsoft.Build.Execution.BuildResultCode resultCode) -> void
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.ResultCode.get -> Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.TargetName.get -> string
-Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.TaskItems.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Framework.ITaskItem2>
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.PluginAssemblyPath.get -> string
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.PluginInstance.get -> Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.PluginSettings.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheException
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheException.ErrorCode.get -> string
-Microsoft.Build.Experimental.ProjectCache.ProjectCacheException.HasBeenLoggedByProjectCache.get -> bool
-Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase
-Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.ProjectCachePluginBase() -> void
-Microsoft.Build.Experimental.ProjectCache.ProxyTargets
-Microsoft.Build.Experimental.ProjectCache.ProxyTargets.ProxyTargets(System.Collections.Generic.IReadOnlyDictionary<string, string> proxyTargetToRealTargetMap) -> void
-Microsoft.Build.Experimental.ProjectCache.ProxyTargets.ProxyTargetToRealTargetMap.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
-Microsoft.Build.FileSystem.FindPredicate
-Microsoft.Build.FileSystem.FindTransform<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache
-Microsoft.Build.FileSystem.IDirectoryCache.DirectoryExists(string path) -> bool
-Microsoft.Build.FileSystem.IDirectoryCache.EnumerateDirectories<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache.EnumerateFiles<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache.FileExists(string path) -> bool
-Microsoft.Build.FileSystem.IDirectoryCacheFactory
-Microsoft.Build.FileSystem.IDirectoryCacheFactory.GetDirectoryCacheForEvaluation(int evaluationId) -> Microsoft.Build.FileSystem.IDirectoryCache
-Microsoft.Build.FileSystem.MSBuildFileSystemBase
-Microsoft.Build.FileSystem.MSBuildFileSystemBase.MSBuildFileSystemBase() -> void
-Microsoft.Build.Globbing.CompositeGlob
-Microsoft.Build.Globbing.CompositeGlob.CompositeGlob(params Microsoft.Build.Globbing.IMSBuildGlob[] globs) -> void
-Microsoft.Build.Globbing.CompositeGlob.CompositeGlob(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> void
-Microsoft.Build.Globbing.CompositeGlob.Globs.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob>
-Microsoft.Build.Globbing.CompositeGlob.IsMatch(string stringToMatch) -> bool
-Microsoft.Build.Globbing.Extensions.MSBuildGlobExtensions
-Microsoft.Build.Globbing.IMSBuildGlob
-Microsoft.Build.Globbing.IMSBuildGlob.IsMatch(string stringToMatch) -> bool
-Microsoft.Build.Globbing.MSBuildGlob
-Microsoft.Build.Globbing.MSBuildGlob.FilenamePart.get -> string
-Microsoft.Build.Globbing.MSBuildGlob.FixedDirectoryPart.get -> string
-Microsoft.Build.Globbing.MSBuildGlob.IsLegal.get -> bool
-Microsoft.Build.Globbing.MSBuildGlob.IsMatch(string stringToMatch) -> bool
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfo(string stringToMatch) -> Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult.FilenamePartMatchGroup.get -> string
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult.FixedDirectoryPartMatchGroup.get -> string
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult.IsMatch.get -> bool
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult.MatchInfoResult() -> void
-Microsoft.Build.Globbing.MSBuildGlob.MatchInfoResult.WildcardDirectoryPartMatchGroup.get -> string
-Microsoft.Build.Globbing.MSBuildGlob.WildcardDirectoryPart.get -> string
-Microsoft.Build.Globbing.MSBuildGlobWithGaps
-Microsoft.Build.Globbing.MSBuildGlobWithGaps.Gaps.get -> Microsoft.Build.Globbing.IMSBuildGlob
-Microsoft.Build.Globbing.MSBuildGlobWithGaps.IsMatch(string stringToMatch) -> bool
-Microsoft.Build.Globbing.MSBuildGlobWithGaps.MainGlob.get -> Microsoft.Build.Globbing.IMSBuildGlob
-Microsoft.Build.Globbing.MSBuildGlobWithGaps.MSBuildGlobWithGaps(Microsoft.Build.Globbing.IMSBuildGlob mainGlob, params Microsoft.Build.Globbing.IMSBuildGlob[] gaps) -> void
-Microsoft.Build.Globbing.MSBuildGlobWithGaps.MSBuildGlobWithGaps(Microsoft.Build.Globbing.IMSBuildGlob mainGlob, System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> gaps) -> void
-Microsoft.Build.Graph.GraphBuildOptions
-Microsoft.Build.Graph.GraphBuildOptions.Build.get -> bool
-Microsoft.Build.Graph.GraphBuildOptions.Build.init -> void
-Microsoft.Build.Graph.GraphBuildRequestData
-Microsoft.Build.Graph.GraphBuildRequestData.Flags.get -> Microsoft.Build.Execution.BuildRequestDataFlags
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildOptions.get -> Microsoft.Build.Graph.GraphBuildOptions
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraphEntryPoint projectGraphEntryPoint, System.Collections.Generic.ICollection<string> targetsToBuild) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraphEntryPoint projectGraphEntryPoint, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraphEntryPoint projectGraphEntryPoint, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(string projectFullPath, System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(string projectFullPath, System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> projectGraphEntryPoints, System.Collections.Generic.ICollection<string> targetsToBuild) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> projectGraphEntryPoints, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> projectGraphEntryPoints, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> projectGraphEntryPoints, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, Microsoft.Build.Graph.GraphBuildOptions graphBuildOptions) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.HostServices.get -> Microsoft.Build.Execution.HostServices
-Microsoft.Build.Graph.GraphBuildRequestData.ProjectGraph.get -> Microsoft.Build.Graph.ProjectGraph
-Microsoft.Build.Graph.GraphBuildRequestData.ProjectGraphEntryPoints.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint>
-Microsoft.Build.Graph.GraphBuildRequestData.TargetNames.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Graph.GraphBuildResult
-Microsoft.Build.Graph.GraphBuildResult.CircularDependency.get -> bool
-Microsoft.Build.Graph.GraphBuildResult.Exception.get -> System.Exception
-Microsoft.Build.Graph.GraphBuildResult.OverallResult.get -> Microsoft.Build.Execution.BuildResultCode
-Microsoft.Build.Graph.GraphBuildResult.ResultsByNode.get -> System.Collections.Generic.IReadOnlyDictionary<Microsoft.Build.Graph.ProjectGraphNode, Microsoft.Build.Execution.BuildResult>
-Microsoft.Build.Graph.GraphBuildResult.SubmissionId.get -> int
-Microsoft.Build.Graph.GraphBuildResult.this[Microsoft.Build.Graph.ProjectGraphNode node].get -> Microsoft.Build.Execution.BuildResult
-Microsoft.Build.Graph.GraphBuildSubmission
-Microsoft.Build.Graph.GraphBuildSubmission.AsyncContext.get -> object
-Microsoft.Build.Graph.GraphBuildSubmission.BuildManager.get -> Microsoft.Build.Execution.BuildManager
-Microsoft.Build.Graph.GraphBuildSubmission.BuildResult.get -> Microsoft.Build.Graph.GraphBuildResult
-Microsoft.Build.Graph.GraphBuildSubmission.Execute() -> Microsoft.Build.Graph.GraphBuildResult
-Microsoft.Build.Graph.GraphBuildSubmission.ExecuteAsync(Microsoft.Build.Graph.GraphBuildSubmissionCompleteCallback callback, object context) -> void
-Microsoft.Build.Graph.GraphBuildSubmission.IsCompleted.get -> bool
-Microsoft.Build.Graph.GraphBuildSubmission.SubmissionId.get -> int
-Microsoft.Build.Graph.GraphBuildSubmission.WaitHandle.get -> System.Threading.WaitHandle
-Microsoft.Build.Graph.GraphBuildSubmissionCompleteCallback
-Microsoft.Build.Graph.ProjectGraph
-Microsoft.Build.Graph.ProjectGraph.ConstructionMetrics.get -> Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics
-Microsoft.Build.Graph.ProjectGraph.EntryPointNodes.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraph.GetTargetLists(System.Collections.Generic.ICollection<string> entryProjectTargets) -> System.Collections.Generic.IReadOnlyDictionary<Microsoft.Build.Graph.ProjectGraphNode, System.Collections.Immutable.ImmutableList<string>>
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics.ConstructionTime.get -> System.TimeSpan
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics.EdgeCount.get -> int
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics.GraphConstructionMetrics() -> void
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics.GraphConstructionMetrics(System.TimeSpan constructionTime, int nodeCount, int edgeCount) -> void
-Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics.NodeCount.get -> int
-Microsoft.Build.Graph.ProjectGraph.GraphRoots.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(string entryProjectFile) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(string entryProjectFile, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(string entryProjectFile, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(string entryProjectFile, System.Collections.Generic.IDictionary<string, string> globalProperties) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(string entryProjectFile, System.Collections.Generic.IDictionary<string, string> globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory, int degreeOfParallelism, System.Threading.CancellationToken cancellationToken) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory, System.Threading.CancellationToken cancellationToken) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<string> entryProjectFiles) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<string> entryProjectFiles, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<string> entryProjectFiles, System.Collections.Generic.IDictionary<string, string> globalProperties) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<string> entryProjectFiles, System.Collections.Generic.IDictionary<string, string> globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> void
-Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc
-Microsoft.Build.Graph.ProjectGraph.ProjectNodes.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraph.ProjectNodesTopologicallySorted.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraphEntryPoint
-Microsoft.Build.Graph.ProjectGraphEntryPoint.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Graph.ProjectGraphEntryPoint.ProjectFile.get -> string
-Microsoft.Build.Graph.ProjectGraphEntryPoint.ProjectGraphEntryPoint() -> void
-Microsoft.Build.Graph.ProjectGraphEntryPoint.ProjectGraphEntryPoint(string projectFile) -> void
-Microsoft.Build.Graph.ProjectGraphEntryPoint.ProjectGraphEntryPoint(string projectFile, System.Collections.Generic.IDictionary<string, string> globalProperties) -> void
-Microsoft.Build.Graph.ProjectGraphNode
-Microsoft.Build.Graph.ProjectGraphNode.ProjectInstance.get -> Microsoft.Build.Execution.ProjectInstance
-Microsoft.Build.Graph.ProjectGraphNode.ProjectReferences.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraphNode.ReferencingProjects.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Logging.BinaryLogger
-Microsoft.Build.Logging.BinaryLogger.BinaryLogger() -> void
-Microsoft.Build.Logging.BinaryLogger.CollectProjectImports.get -> Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
-Microsoft.Build.Logging.BinaryLogger.CollectProjectImports.set -> void
-Microsoft.Build.Logging.BinaryLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.Logging.BinaryLogger.Parameters.get -> string
-Microsoft.Build.Logging.BinaryLogger.Parameters.set -> void
-Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
-Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode.Embed = 1 -> Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
-Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode.None = 0 -> Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
-Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode.ZipFile = 2 -> Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
-Microsoft.Build.Logging.BinaryLogger.Shutdown() -> void
-Microsoft.Build.Logging.BinaryLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.BinaryLogger.Verbosity.set -> void
-Microsoft.Build.Logging.BinaryLogReplayEventSource
-Microsoft.Build.Logging.BinaryLogReplayEventSource.BinaryLogReplayEventSource() -> void
-Microsoft.Build.Logging.BinaryLogReplayEventSource.Replay(string sourceFilePath) -> void
-Microsoft.Build.Logging.BinaryLogReplayEventSource.Replay(string sourceFilePath, System.Threading.CancellationToken cancellationToken) -> void
-Microsoft.Build.Logging.BuildEventArgsReader
-Microsoft.Build.Logging.BuildEventArgsReader.BuildEventArgsReader(System.IO.BinaryReader binaryReader, int fileFormatVersion) -> void
-Microsoft.Build.Logging.BuildEventArgsReader.Dispose() -> void
-Microsoft.Build.Logging.BuildEventArgsReader.Read() -> Microsoft.Build.Framework.BuildEventArgs
-Microsoft.Build.Logging.ColorResetter
-Microsoft.Build.Logging.ColorSetter
-Microsoft.Build.Logging.ConfigurableForwardingLogger
-Microsoft.Build.Logging.ConfigurableForwardingLogger.BuildEventRedirector.get -> Microsoft.Build.Framework.IEventRedirector
-Microsoft.Build.Logging.ConfigurableForwardingLogger.BuildEventRedirector.set -> void
-Microsoft.Build.Logging.ConfigurableForwardingLogger.ConfigurableForwardingLogger() -> void
-Microsoft.Build.Logging.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-Microsoft.Build.Logging.ConfigurableForwardingLogger.NodeId.get -> int
-Microsoft.Build.Logging.ConfigurableForwardingLogger.NodeId.set -> void
-Microsoft.Build.Logging.ConfigurableForwardingLogger.Parameters.get -> string
-Microsoft.Build.Logging.ConfigurableForwardingLogger.Parameters.set -> void
-Microsoft.Build.Logging.ConfigurableForwardingLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.ConfigurableForwardingLogger.Verbosity.set -> void
-Microsoft.Build.Logging.ConsoleLogger
-Microsoft.Build.Logging.ConsoleLogger.ApplyParameter(string parameterName, string parameterValue) -> void
-Microsoft.Build.Logging.ConsoleLogger.BuildFinishedHandler(object sender, Microsoft.Build.Framework.BuildFinishedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.BuildStartedHandler(object sender, Microsoft.Build.Framework.BuildStartedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.ConsoleLogger() -> void
-Microsoft.Build.Logging.ConsoleLogger.ConsoleLogger(Microsoft.Build.Framework.LoggerVerbosity verbosity) -> void
-Microsoft.Build.Logging.ConsoleLogger.ConsoleLogger(Microsoft.Build.Framework.LoggerVerbosity verbosity, Microsoft.Build.Logging.WriteHandler write, Microsoft.Build.Logging.ColorSetter colorSet, Microsoft.Build.Logging.ColorResetter colorReset) -> void
-Microsoft.Build.Logging.ConsoleLogger.CustomEventHandler(object sender, Microsoft.Build.Framework.CustomBuildEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.ErrorHandler(object sender, Microsoft.Build.Framework.BuildErrorEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.MessageHandler(object sender, Microsoft.Build.Framework.BuildMessageEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.Parameters.get -> string
-Microsoft.Build.Logging.ConsoleLogger.Parameters.set -> void
-Microsoft.Build.Logging.ConsoleLogger.ProjectFinishedHandler(object sender, Microsoft.Build.Framework.ProjectFinishedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.ProjectStartedHandler(object sender, Microsoft.Build.Framework.ProjectStartedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.ShowSummary.get -> bool
-Microsoft.Build.Logging.ConsoleLogger.ShowSummary.set -> void
-Microsoft.Build.Logging.ConsoleLogger.SkipProjectStartedText.get -> bool
-Microsoft.Build.Logging.ConsoleLogger.SkipProjectStartedText.set -> void
-Microsoft.Build.Logging.ConsoleLogger.TargetFinishedHandler(object sender, Microsoft.Build.Framework.TargetFinishedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.TargetStartedHandler(object sender, Microsoft.Build.Framework.TargetStartedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.TaskFinishedHandler(object sender, Microsoft.Build.Framework.TaskFinishedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.TaskStartedHandler(object sender, Microsoft.Build.Framework.TaskStartedEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.ConsoleLogger.Verbosity.set -> void
-Microsoft.Build.Logging.ConsoleLogger.WarningHandler(object sender, Microsoft.Build.Framework.BuildWarningEventArgs e) -> void
-Microsoft.Build.Logging.ConsoleLogger.WriteHandler.get -> Microsoft.Build.Logging.WriteHandler
-Microsoft.Build.Logging.ConsoleLogger.WriteHandler.set -> void
-Microsoft.Build.Logging.DistributedFileLogger
-Microsoft.Build.Logging.DistributedFileLogger.BuildEventRedirector.get -> Microsoft.Build.Framework.IEventRedirector
-Microsoft.Build.Logging.DistributedFileLogger.BuildEventRedirector.set -> void
-Microsoft.Build.Logging.DistributedFileLogger.DistributedFileLogger() -> void
-Microsoft.Build.Logging.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.Logging.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-Microsoft.Build.Logging.DistributedFileLogger.NodeId.get -> int
-Microsoft.Build.Logging.DistributedFileLogger.NodeId.set -> void
-Microsoft.Build.Logging.DistributedFileLogger.Parameters.get -> string
-Microsoft.Build.Logging.DistributedFileLogger.Parameters.set -> void
-Microsoft.Build.Logging.DistributedFileLogger.Shutdown() -> void
-Microsoft.Build.Logging.DistributedFileLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.DistributedFileLogger.Verbosity.set -> void
-Microsoft.Build.Logging.EventArgsDispatcher
-Microsoft.Build.Logging.EventArgsDispatcher.AnyEventRaised -> Microsoft.Build.Framework.AnyEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.BuildFinished -> Microsoft.Build.Framework.BuildFinishedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.BuildStarted -> Microsoft.Build.Framework.BuildStartedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.CustomEventRaised -> Microsoft.Build.Framework.CustomBuildEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.Dispatch(Microsoft.Build.Framework.BuildEventArgs buildEvent) -> void
-Microsoft.Build.Logging.EventArgsDispatcher.ErrorRaised -> Microsoft.Build.Framework.BuildErrorEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.EventArgsDispatcher() -> void
-Microsoft.Build.Logging.EventArgsDispatcher.MessageRaised -> Microsoft.Build.Framework.BuildMessageEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.ProjectFinished -> Microsoft.Build.Framework.ProjectFinishedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.ProjectStarted -> Microsoft.Build.Framework.ProjectStartedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.StatusEventRaised -> Microsoft.Build.Framework.BuildStatusEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.TargetFinished -> Microsoft.Build.Framework.TargetFinishedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.TargetStarted -> Microsoft.Build.Framework.TargetStartedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.TaskFinished -> Microsoft.Build.Framework.TaskFinishedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.TaskStarted -> Microsoft.Build.Framework.TaskStartedEventHandler
-Microsoft.Build.Logging.EventArgsDispatcher.WarningRaised -> Microsoft.Build.Framework.BuildWarningEventHandler
-Microsoft.Build.Logging.FileLogger
-Microsoft.Build.Logging.FileLogger.FileLogger() -> void
-Microsoft.Build.Logging.ForwardingLoggerRecord
-Microsoft.Build.Logging.ForwardingLoggerRecord.CentralLogger.get -> Microsoft.Build.Framework.ILogger
-Microsoft.Build.Logging.ForwardingLoggerRecord.ForwardingLoggerDescription.get -> Microsoft.Build.Logging.LoggerDescription
-Microsoft.Build.Logging.ForwardingLoggerRecord.ForwardingLoggerRecord(Microsoft.Build.Framework.ILogger centralLogger, Microsoft.Build.Logging.LoggerDescription forwardingLoggerDescription) -> void
-Microsoft.Build.Logging.LoggerDescription
-Microsoft.Build.Logging.LoggerDescription.CreateLogger() -> Microsoft.Build.Framework.ILogger
-Microsoft.Build.Logging.LoggerDescription.IsOptional.get -> bool
-Microsoft.Build.Logging.LoggerDescription.LoggerDescription(string loggerClassName, string loggerAssemblyName, string loggerAssemblyFile, string loggerSwitchParameters, Microsoft.Build.Framework.LoggerVerbosity verbosity) -> void
-Microsoft.Build.Logging.LoggerDescription.LoggerDescription(string loggerClassName, string loggerAssemblyName, string loggerAssemblyFile, string loggerSwitchParameters, Microsoft.Build.Framework.LoggerVerbosity verbosity, bool isOptional) -> void
-Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters.get -> string
-Microsoft.Build.Logging.LoggerDescription.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.ProfilerLogger
-Microsoft.Build.Logging.ProfilerLogger.FileToLog.get -> string
-Microsoft.Build.Logging.ProfilerLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.Logging.ProfilerLogger.Parameters.get -> string
-Microsoft.Build.Logging.ProfilerLogger.Parameters.set -> void
-Microsoft.Build.Logging.ProfilerLogger.ProfilerLogger(string fileToLog) -> void
-Microsoft.Build.Logging.ProfilerLogger.Shutdown() -> void
-Microsoft.Build.Logging.ProfilerLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Logging.ProfilerLogger.Verbosity.set -> void
-Microsoft.Build.Logging.WriteHandler
-Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider
-Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.ExternalProjectsProvider() -> void
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Collection.get -> Microsoft.Build.Evaluation.ProjectCollection
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.Construction.ProjectImportElement importingElement, Microsoft.Build.Construction.ProjectRootElement importedProject, int versionEvaluated, Microsoft.Build.Framework.SdkResult sdkResult, bool isImported) -> Microsoft.Build.Evaluation.ResolvedImport
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectChooseElementLink link) -> Microsoft.Build.Construction.ProjectChooseElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink link) -> Microsoft.Build.Construction.ProjectExtensionsElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink link) -> Microsoft.Build.Construction.ProjectImportElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectImportGroupElementLink link) -> Microsoft.Build.Construction.ProjectImportGroupElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionElementLink link) -> Microsoft.Build.Construction.ProjectItemDefinitionElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionGroupElementLink link) -> Microsoft.Build.Construction.ProjectItemDefinitionGroupElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink link, Microsoft.Build.Evaluation.Project project = null) -> Microsoft.Build.Evaluation.ProjectItemDefinition
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink link) -> Microsoft.Build.Construction.ProjectItemElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemGroupElementLink link) -> Microsoft.Build.Construction.ProjectItemGroupElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectItemLink link, Microsoft.Build.Evaluation.Project project = null, Microsoft.Build.Construction.ProjectItemElement xml = null) -> Microsoft.Build.Evaluation.ProjectItem
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectLink link) -> Microsoft.Build.Evaluation.Project
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink link) -> Microsoft.Build.Construction.ProjectMetadataElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink link, object parent = null) -> Microsoft.Build.Evaluation.ProjectMetadata
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectOnErrorElementLink link) -> Microsoft.Build.Construction.ProjectOnErrorElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectOtherwiseElementLink link) -> Microsoft.Build.Construction.ProjectOtherwiseElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectOutputElementLink link) -> Microsoft.Build.Construction.ProjectOutputElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink link) -> Microsoft.Build.Construction.ProjectPropertyElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectPropertyGroupElementLink link) -> Microsoft.Build.Construction.ProjectPropertyGroupElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink link, Microsoft.Build.Evaluation.Project project = null) -> Microsoft.Build.Evaluation.ProjectProperty
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink link) -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectSdkElementLink link) -> Microsoft.Build.Construction.ProjectSdkElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink link) -> Microsoft.Build.Construction.ProjectTargetElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink link) -> Microsoft.Build.Construction.ProjectTaskElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink link) -> Microsoft.Build.Construction.ProjectUsingTaskBodyElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskElementLink link) -> Microsoft.Build.Construction.ProjectUsingTaskElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink link) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.ProjectWhenElementLink link) -> Microsoft.Build.Construction.ProjectWhenElement
-Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Create(Microsoft.Build.ObjectModelRemoting.UsingTaskParameterGroupElementLink link) -> Microsoft.Build.Construction.UsingTaskParameterGroupElement
-Microsoft.Build.ObjectModelRemoting.ProjectChooseElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectChooseElementLink.ProjectChooseElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink
-Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.ProjectElementContainerLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ProjectElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.ProjectExtensionsElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink.ProjectImportElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectImportGroupElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectImportGroupElementLink.ProjectImportGroupElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionElementLink.ProjectItemDefinitionElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionGroupElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionGroupElementLink.ProjectItemDefinitionGroupElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.ProjectItemDefinitionLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink.ProjectItemElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemGroupElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemGroupElementLink.ProjectItemGroupElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectItemLink
-Microsoft.Build.ObjectModelRemoting.ProjectItemLink.ProjectItemLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectLink
-Microsoft.Build.ObjectModelRemoting.ProjectLink.ProjectLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink.ProjectMetadataElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink
-Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.ProjectMetadataLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectOnErrorElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectOnErrorElementLink.ProjectOnErrorElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectOtherwiseElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectOtherwiseElementLink.ProjectOtherwiseElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectOutputElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectOutputElementLink.ProjectOutputElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink.ProjectPropertyElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyGroupElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyGroupElementLink.ProjectPropertyGroupElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink
-Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.ProjectPropertyLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ProjectRootElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectSdkElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectSdkElementLink.ProjectSdkElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink.ProjectTargetElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.ProjectTaskElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink.ProjectUsingTaskBodyElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskElementLink.ProjectUsingTaskElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink.ProjectUsingTaskParameterElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.ProjectWhenElementLink
-Microsoft.Build.ObjectModelRemoting.ProjectWhenElementLink.ProjectWhenElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.UsingTaskParameterGroupElementLink
-Microsoft.Build.ObjectModelRemoting.UsingTaskParameterGroupElementLink.UsingTaskParameterGroupElementLink() -> void
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.LocalName.get -> string
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.NamespaceURI.get -> string
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.Value.get -> string
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.XmlAttributeLink() -> void
-Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.XmlAttributeLink(string localName, string value, string namespaceUri) -> void
-override Microsoft.Build.Construction.ElementLocation.Equals(object obj) -> bool
-override Microsoft.Build.Construction.ElementLocation.GetHashCode() -> int
-override Microsoft.Build.Construction.ElementLocation.ToString() -> string
-override Microsoft.Build.Construction.ProjectChooseElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectChooseElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectChooseElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.ProjectExtensionsElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectExtensionsElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectExtensionsElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.ProjectExtensionsElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-override Microsoft.Build.Construction.ProjectItemElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-override Microsoft.Build.Construction.ProjectItemGroupElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-override Microsoft.Build.Construction.ProjectOtherwiseElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectOtherwiseElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectOtherwiseElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.ProjectRootElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectRootElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectRootElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.ProjectTargetElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-override Microsoft.Build.Construction.ProjectTaskElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-override Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectUsingTaskBodyElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Condition.get -> string
-override Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Condition.set -> void
-override Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Construction.UsingTaskParameterGroupElement.Condition.get -> string
-override Microsoft.Build.Construction.UsingTaskParameterGroupElement.Condition.set -> void
-override Microsoft.Build.Construction.UsingTaskParameterGroupElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Exceptions.BuildAbortedException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.Exceptions.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.Exceptions.InvalidProjectFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.Exceptions.InvalidProjectFileException.Message.get -> string
-override Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectItemGroupTaskInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectItemInstance.ToString() -> string
-override Microsoft.Build.Execution.ProjectMetadataInstance.ToString() -> string
-override Microsoft.Build.Execution.ProjectOnErrorInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectOnErrorInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectOnErrorInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectPropertyInstance.ToString() -> string
-override Microsoft.Build.Execution.ProjectTaskInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectTaskInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputItemInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectTaskOutputItemInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputItemInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputItemInstance.TaskParameterLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.Condition.get -> string
-override Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.Location.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.TaskParameterLocation.get -> Microsoft.Build.Construction.ElementLocation
-override Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-override Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-override Microsoft.Build.Logging.FileLogger.Shutdown() -> void
-static Microsoft.Build.Construction.ProjectRootElement.Create() -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.NewProjectFileOptions projectFileOptions) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions projectFileOptions) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(string path) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(string path, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader xmlReader) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader xmlReader, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader xmlReader, Microsoft.Build.Evaluation.ProjectCollection projectCollection, bool preserveFormatting) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Open(string path) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Open(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.Open(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection, bool? preserveFormatting) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.TryOpen(string path) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.TryOpen(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.ProjectRootElement.TryOpen(string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection, bool? preserveFormatting) -> Microsoft.Build.Construction.ProjectRootElement
-static Microsoft.Build.Construction.SolutionFile.Parse(string solutionFile) -> Microsoft.Build.Construction.SolutionFile
-static Microsoft.Build.Evaluation.Context.EvaluationContext.Create(Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy policy) -> Microsoft.Build.Evaluation.Context.EvaluationContext
-static Microsoft.Build.Evaluation.Context.EvaluationContext.Create(Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy policy, Microsoft.Build.FileSystem.MSBuildFileSystemBase fileSystem) -> Microsoft.Build.Evaluation.Context.EvaluationContext
-static Microsoft.Build.Evaluation.Project.FromFile(string file, Microsoft.Build.Definition.ProjectOptions options) -> Microsoft.Build.Evaluation.Project
-static Microsoft.Build.Evaluation.Project.FromProjectRootElement(Microsoft.Build.Construction.ProjectRootElement rootElement, Microsoft.Build.Definition.ProjectOptions options) -> Microsoft.Build.Evaluation.Project
-static Microsoft.Build.Evaluation.Project.FromXmlReader(System.Xml.XmlReader reader, Microsoft.Build.Definition.ProjectOptions options) -> Microsoft.Build.Evaluation.Project
-static Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem item) -> string
-static Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition item) -> string
-static Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem item, string name) -> string
-static Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) -> string
-static Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata metadatum) -> string
-static Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty property) -> string
-static Microsoft.Build.Evaluation.ProjectCollection.DisplayVersion.get -> string
-static Microsoft.Build.Evaluation.ProjectCollection.Escape(string unescapedString) -> string
-static Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection.get -> Microsoft.Build.Evaluation.ProjectCollection
-static Microsoft.Build.Evaluation.ProjectCollection.Unescape(string escapedString) -> string
-static Microsoft.Build.Evaluation.ProjectCollection.Version.get -> System.Version
-static Microsoft.Build.Execution.BuildManager.DefaultBuildManager.get -> Microsoft.Build.Execution.BuildManager
-static Microsoft.Build.Execution.ProjectInstance.FromFile(string file, Microsoft.Build.Definition.ProjectOptions options) -> Microsoft.Build.Execution.ProjectInstance
-static Microsoft.Build.Execution.ProjectInstance.FromProjectRootElement(Microsoft.Build.Construction.ProjectRootElement rootElement, Microsoft.Build.Definition.ProjectOptions options) -> Microsoft.Build.Execution.ProjectInstance
-static Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance item) -> string
-static Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance item) -> string
-static Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) -> string
-static Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance item, string name) -> string
-static Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance metadatum) -> string
-static Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance property) -> string
-static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateCacheHit(Microsoft.Build.Execution.BuildResult buildResult) -> Microsoft.Build.Experimental.ProjectCache.CacheResult
-static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateCacheHit(Microsoft.Build.Experimental.ProjectCache.ProxyTargets proxyTargets) -> Microsoft.Build.Experimental.ProjectCache.CacheResult
-static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateCacheHit(System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Experimental.ProjectCache.PluginTargetResult> targetResults) -> Microsoft.Build.Experimental.ProjectCache.CacheResult
-static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateNonCacheHit(Microsoft.Build.Experimental.ProjectCache.CacheResultType resultType) -> Microsoft.Build.Experimental.ProjectCache.CacheResult
-static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.FromAssemblyPath(string pluginAssemblyPath, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings = null) -> Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
-static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.FromInstance(Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase pluginInstance, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings = null) -> Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
-static Microsoft.Build.Globbing.CompositeGlob.Create(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> Microsoft.Build.Globbing.IMSBuildGlob
-static Microsoft.Build.Globbing.Extensions.MSBuildGlobExtensions.GetParsedGlobs(this Microsoft.Build.Globbing.IMSBuildGlob glob) -> System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.MSBuildGlob>
-static Microsoft.Build.Globbing.MSBuildGlob.Parse(string fileSpec) -> Microsoft.Build.Globbing.MSBuildGlob
-static Microsoft.Build.Globbing.MSBuildGlob.Parse(string globRoot, string fileSpec) -> Microsoft.Build.Globbing.MSBuildGlob
-static Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.SetExternalProjectsProvider(Microsoft.Build.Evaluation.ProjectCollection collection, Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider link) -> void
-static Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.Get(Microsoft.Build.Evaluation.ProjectCollection collection) -> Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory
-static Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.GetLink(object obj) -> object
-static Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.GetLocalProjects(Microsoft.Build.Evaluation.ProjectCollection collection, string projectFile = null) -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Evaluation.Project>
-static Microsoft.Build.ObjectModelRemoting.LinkedObjectsFactory.IsLocal(object obj) -> bool
-static Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.AddInitialChild(Microsoft.Build.Construction.ProjectElementContainer xml, Microsoft.Build.Construction.ProjectElement child) -> void
-static Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.DeepClone(Microsoft.Build.Construction.ProjectElementContainer xml, Microsoft.Build.Construction.ProjectRootElement factory, Microsoft.Build.Construction.ProjectElementContainer parent) -> Microsoft.Build.Construction.ProjectElementContainer
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectElement xml, Microsoft.Build.Construction.ProjectRootElement owner) -> Microsoft.Build.Construction.ProjectElement
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributeLocation(Microsoft.Build.Construction.ProjectElement xml, string attributeName) -> Microsoft.Build.Construction.ElementLocation
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributes(Microsoft.Build.Construction.ProjectElement xml) -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.ObjectModelRemoting.XmlAttributeLink>
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributeValue(Microsoft.Build.Construction.ProjectElement xml, string attributeName, bool nullIfNotExists) -> string
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetExpressedAsAttribute(Microsoft.Build.Construction.ProjectElement xml) -> bool
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetPureText(Microsoft.Build.Construction.ProjectElement xml) -> string
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.MarkDirty(Microsoft.Build.Construction.ProjectElement xml, string reason, string param) -> void
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.SetExpressedAsAttribute(Microsoft.Build.Construction.ProjectElement xml, bool value) -> void
-static Microsoft.Build.ObjectModelRemoting.ProjectElementLink.SetOrRemoveAttribute(Microsoft.Build.Construction.ProjectElement xml, string name, string value, bool clearAttributeCache, string reason, string param) -> void
-static Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.GetEvaluatedValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata metadata) -> string
-static Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.GetParent(Microsoft.Build.Evaluation.ProjectMetadata metadata) -> object
-static Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.GetEvaluatedValueEscaped(Microsoft.Build.Evaluation.ProjectProperty property) -> string
-virtual Microsoft.Build.Construction.ProjectElement.Condition.get -> string
-virtual Microsoft.Build.Construction.ProjectElement.Condition.set -> void
-virtual Microsoft.Build.Construction.ProjectElement.ConditionLocation.get -> Microsoft.Build.Construction.ElementLocation
-virtual Microsoft.Build.Construction.ProjectElement.CopyFrom(Microsoft.Build.Construction.ProjectElement element) -> void
-virtual Microsoft.Build.Construction.ProjectElementContainer.DeepCopyFrom(Microsoft.Build.Construction.ProjectElementContainer element) -> void
-virtual Microsoft.Build.Evaluation.ProjectCollection.Dispose(bool disposing) -> void
-virtual Microsoft.Build.Execution.ProjectPropertyInstance.IsImmutable.get -> bool
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.DirectoryExists(string path) -> bool
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.EnumerateDirectories(string path, string searchPattern = "*", System.IO.SearchOption searchOption = System.IO.SearchOption.TopDirectoryOnly) -> System.Collections.Generic.IEnumerable<string>
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.EnumerateFiles(string path, string searchPattern = "*", System.IO.SearchOption searchOption = System.IO.SearchOption.TopDirectoryOnly) -> System.Collections.Generic.IEnumerable<string>
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.EnumerateFileSystemEntries(string path, string searchPattern = "*", System.IO.SearchOption searchOption = System.IO.SearchOption.TopDirectoryOnly) -> System.Collections.Generic.IEnumerable<string>
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.FileExists(string path) -> bool
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.FileOrDirectoryExists(string path) -> bool
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.GetAttributes(string path) -> System.IO.FileAttributes
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.GetFileStream(string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share) -> System.IO.Stream
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.GetLastWriteTimeUtc(string path) -> System.DateTime
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.ReadFile(string path) -> System.IO.TextReader
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.ReadFileAllBytes(string path) -> byte[]
-virtual Microsoft.Build.FileSystem.MSBuildFileSystemBase.ReadFileAllText(string path) -> string
-virtual Microsoft.Build.Logging.ConfigurableForwardingLogger.ForwardToCentralLogger(Microsoft.Build.Framework.BuildEventArgs e) -> void
-virtual Microsoft.Build.Logging.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-virtual Microsoft.Build.Logging.ConfigurableForwardingLogger.Shutdown() -> void
-virtual Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-virtual Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-virtual Microsoft.Build.Logging.ConsoleLogger.Shutdown() -> void
-virtual Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.Disconnected(Microsoft.Build.Evaluation.ProjectCollection collection) -> void
diff --git a/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt b/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
deleted file mode 100644
index 05446d8617c..00000000000
--- a/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
+++ /dev/null
@@ -1,24 +0,0 @@
-Microsoft.Build.Evaluation.ProjectCollection.ProjectCollection(System.Collections.Generic.IDictionary<string, string> globalProperties, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations, int maxNodeCount, bool onlyLogCriticalEvents, bool loadProjectsReadOnly, bool useAsynchronousLogging, bool reuseProjectRootElementCache) -> void
-Microsoft.Build.Experimental.MSBuildClient
-Microsoft.Build.Experimental.MSBuildClient.Execute(System.Threading.CancellationToken cancellationToken) -> Microsoft.Build.Experimental.MSBuildClientExitResult
-Microsoft.Build.Experimental.MSBuildClient.MSBuildClient(string[] commandLine, string msbuildLocation) -> void
-Microsoft.Build.Experimental.MSBuildClientExitResult
-Microsoft.Build.Experimental.MSBuildClientExitResult.MSBuildAppExitTypeString.get -> string
-Microsoft.Build.Experimental.MSBuildClientExitResult.MSBuildAppExitTypeString.set -> void
-Microsoft.Build.Experimental.MSBuildClientExitResult.MSBuildClientExitResult() -> void
-Microsoft.Build.Experimental.MSBuildClientExitResult.MSBuildClientExitType.get -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitResult.MSBuildClientExitType.set -> void
-Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitType.LaunchError = 3 -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitType.ServerBusy = 1 -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitType.Success = 0 -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitType.UnableToConnect = 2 -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.MSBuildClientExitType.Unexpected = 4 -> Microsoft.Build.Experimental.MSBuildClientExitType
-Microsoft.Build.Experimental.OutOfProcServerNode
-Microsoft.Build.Experimental.OutOfProcServerNode.BuildCallback
-Microsoft.Build.Experimental.OutOfProcServerNode.OutOfProcServerNode(Microsoft.Build.Experimental.OutOfProcServerNode.BuildCallback buildFunction) -> void
-Microsoft.Build.Experimental.OutOfProcServerNode.Run(out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
-static Microsoft.Build.Experimental.MSBuildClient.ShutdownServer(System.Threading.CancellationToken cancellationToken) -> bool
-virtual Microsoft.Build.ObjectModelRemoting.ProjectLink.GlobalPropertiesContains(string key) -> bool
-virtual Microsoft.Build.ObjectModelRemoting.ProjectLink.GlobalPropertiesCount() -> int
-virtual Microsoft.Build.ObjectModelRemoting.ProjectLink.GlobalPropertiesEnumerable() -> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>
diff --git a/src/Deprecated/Conversion/Microsoft.Build.Conversion.csproj b/src/Deprecated/Conversion/Microsoft.Build.Conversion.csproj
index 58ad5723984..0f73cd9c6d9 100644
--- a/src/Deprecated/Conversion/Microsoft.Build.Conversion.csproj
+++ b/src/Deprecated/Conversion/Microsoft.Build.Conversion.csproj
@@ -9,6 +9,7 @@
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
     <NoWarn>$(NoWarn);1570;1572;1573;1587</NoWarn>
     <Nullable>disable</Nullable>
+    <EnablePackageValidation>true</EnablePackageValidation>
   </PropertyGroup>
   <ItemGroup>
     <!-- Source Files -->
diff --git a/src/Deprecated/Conversion/PublicAPI/net/PublicAPI.Shipped.txt b/src/Deprecated/Conversion/PublicAPI/net/PublicAPI.Shipped.txt
deleted file mode 100644
index cc40354b757..00000000000
--- a/src/Deprecated/Conversion/PublicAPI/net/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,21 +0,0 @@
-Microsoft.Build.Conversion.ProjectFileConverter
-Microsoft.Build.Conversion.ProjectFileConverter.ConversionSkippedBecauseProjectAlreadyConverted.get -> bool
-Microsoft.Build.Conversion.ProjectFileConverter.ConversionWarnings.get -> string[]
-Microsoft.Build.Conversion.ProjectFileConverter.Convert() -> void
-Microsoft.Build.Conversion.ProjectFileConverter.Convert(Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings) -> void
-Microsoft.Build.Conversion.ProjectFileConverter.Convert(string msbuildBinPath) -> void
-Microsoft.Build.Conversion.ProjectFileConverter.ConvertInMemory() -> Microsoft.Build.Construction.ProjectRootElement
-Microsoft.Build.Conversion.ProjectFileConverter.ConvertInMemory(Microsoft.Build.BuildEngine.Engine engine) -> Microsoft.Build.BuildEngine.Project
-Microsoft.Build.Conversion.ProjectFileConverter.ConvertInMemory(Microsoft.Build.BuildEngine.Engine engine, Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings) -> Microsoft.Build.BuildEngine.Project
-Microsoft.Build.Conversion.ProjectFileConverter.FSharpSpecificConversions(bool actuallyMakeChanges) -> bool
-Microsoft.Build.Conversion.ProjectFileConverter.IsMinorUpgrade.get -> bool
-Microsoft.Build.Conversion.ProjectFileConverter.IsMinorUpgrade.set -> void
-Microsoft.Build.Conversion.ProjectFileConverter.IsUserFile.get -> bool
-Microsoft.Build.Conversion.ProjectFileConverter.IsUserFile.set -> void
-Microsoft.Build.Conversion.ProjectFileConverter.NewProjectFile.get -> string
-Microsoft.Build.Conversion.ProjectFileConverter.NewProjectFile.set -> void
-Microsoft.Build.Conversion.ProjectFileConverter.OldProjectFile.get -> string
-Microsoft.Build.Conversion.ProjectFileConverter.OldProjectFile.set -> void
-Microsoft.Build.Conversion.ProjectFileConverter.ProjectFileConverter() -> void
-Microsoft.Build.Conversion.ProjectFileConverter.SolutionFile.get -> string
-Microsoft.Build.Conversion.ProjectFileConverter.SolutionFile.set -> void
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/PublicAPI/net/PublicAPI.Unshipped.txt b/src/Deprecated/Conversion/PublicAPI/net/PublicAPI.Unshipped.txt
deleted file mode 100644
index e69de29bb2d..00000000000
diff --git a/src/Deprecated/Engine/Microsoft.Build.Engine.csproj b/src/Deprecated/Engine/Microsoft.Build.Engine.csproj
index 051c7517343..2b627bf1f99 100644
--- a/src/Deprecated/Engine/Microsoft.Build.Engine.csproj
+++ b/src/Deprecated/Engine/Microsoft.Build.Engine.csproj
@@ -14,6 +14,7 @@
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
     <NoWarn>$(NoWarn);1570;1572;1573;1587</NoWarn>
     <Nullable>disable</Nullable>
+    <EnablePackageValidation>true</EnablePackageValidation>
   </PropertyGroup>
 
   <ItemGroup>
diff --git a/src/Deprecated/Engine/PublicAPI/net/PublicAPI.Shipped.txt b/src/Deprecated/Engine/PublicAPI/net/PublicAPI.Shipped.txt
deleted file mode 100644
index 7abb6ba25e8..00000000000
--- a/src/Deprecated/Engine/PublicAPI/net/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,419 +0,0 @@
-Microsoft.Build.BuildEngine.BuildItem
-Microsoft.Build.BuildEngine.BuildItem.BuildItem(string itemName, Microsoft.Build.Framework.ITaskItem taskItem) -> void
-Microsoft.Build.BuildEngine.BuildItem.BuildItem(string itemName, string itemInclude) -> void
-Microsoft.Build.BuildEngine.BuildItem.Clone() -> Microsoft.Build.BuildEngine.BuildItem
-Microsoft.Build.BuildEngine.BuildItem.Condition.get -> string
-Microsoft.Build.BuildEngine.BuildItem.Condition.set -> void
-Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo(Microsoft.Build.BuildEngine.BuildItem destinationItem) -> void
-Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount.get -> int
-Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames.get -> System.Collections.ICollection
-Microsoft.Build.BuildEngine.BuildItem.Exclude.get -> string
-Microsoft.Build.BuildEngine.BuildItem.Exclude.set -> void
-Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec.get -> string
-Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata(string metadataName) -> string
-Microsoft.Build.BuildEngine.BuildItem.GetMetadata(string metadataName) -> string
-Microsoft.Build.BuildEngine.BuildItem.HasMetadata(string metadataName) -> bool
-Microsoft.Build.BuildEngine.BuildItem.Include.get -> string
-Microsoft.Build.BuildEngine.BuildItem.Include.set -> void
-Microsoft.Build.BuildEngine.BuildItem.IsImported.get -> bool
-Microsoft.Build.BuildEngine.BuildItem.MetadataCount.get -> int
-Microsoft.Build.BuildEngine.BuildItem.MetadataNames.get -> System.Collections.ICollection
-Microsoft.Build.BuildEngine.BuildItem.Name.get -> string
-Microsoft.Build.BuildEngine.BuildItem.Name.set -> void
-Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata(string metadataName) -> void
-Microsoft.Build.BuildEngine.BuildItem.SetMetadata(string metadataName, string metadataValue) -> void
-Microsoft.Build.BuildEngine.BuildItem.SetMetadata(string metadataName, string metadataValue, bool treatMetadataValueAsLiteral) -> void
-Microsoft.Build.BuildEngine.BuildItemGroup
-Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(string itemName, string itemInclude) -> Microsoft.Build.BuildEngine.BuildItem
-Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(string itemName, string itemInclude, bool treatItemIncludeAsLiteral) -> Microsoft.Build.BuildEngine.BuildItem
-Microsoft.Build.BuildEngine.BuildItemGroup.BuildItemGroup() -> void
-Microsoft.Build.BuildEngine.BuildItemGroup.Clear() -> void
-Microsoft.Build.BuildEngine.BuildItemGroup.Clone(bool deepClone) -> Microsoft.Build.BuildEngine.BuildItemGroup
-Microsoft.Build.BuildEngine.BuildItemGroup.Condition.get -> string
-Microsoft.Build.BuildEngine.BuildItemGroup.Condition.set -> void
-Microsoft.Build.BuildEngine.BuildItemGroup.Count.get -> int
-Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.BuildEngine.BuildItemGroup.IsImported.get -> bool
-Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem(Microsoft.Build.BuildEngine.BuildItem itemToRemove) -> void
-Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt(int index) -> void
-Microsoft.Build.BuildEngine.BuildItemGroup.this[int index].get -> Microsoft.Build.BuildEngine.BuildItem
-Microsoft.Build.BuildEngine.BuildItemGroup.ToArray() -> Microsoft.Build.BuildEngine.BuildItem[]
-Microsoft.Build.BuildEngine.BuildItemGroupCollection
-Microsoft.Build.BuildEngine.BuildItemGroupCollection.CopyTo(System.Array array, int index) -> void
-Microsoft.Build.BuildEngine.BuildItemGroupCollection.Count.get -> int
-Microsoft.Build.BuildEngine.BuildItemGroupCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.BuildEngine.BuildItemGroupCollection.IsSynchronized.get -> bool
-Microsoft.Build.BuildEngine.BuildItemGroupCollection.SyncRoot.get -> object
-Microsoft.Build.BuildEngine.BuildProperty
-Microsoft.Build.BuildEngine.BuildProperty.BuildProperty(string propertyName, string propertyValue) -> void
-Microsoft.Build.BuildEngine.BuildProperty.Clone(bool deepClone) -> Microsoft.Build.BuildEngine.BuildProperty
-Microsoft.Build.BuildEngine.BuildProperty.Condition.get -> string
-Microsoft.Build.BuildEngine.BuildProperty.Condition.set -> void
-Microsoft.Build.BuildEngine.BuildProperty.FinalValue.get -> string
-Microsoft.Build.BuildEngine.BuildProperty.IsImported.get -> bool
-Microsoft.Build.BuildEngine.BuildProperty.Name.get -> string
-Microsoft.Build.BuildEngine.BuildProperty.Value.get -> string
-Microsoft.Build.BuildEngine.BuildProperty.Value.set -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroup
-Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(string propertyName, string propertyValue) -> Microsoft.Build.BuildEngine.BuildProperty
-Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(string propertyName, string propertyValue, bool treatPropertyValueAsLiteral) -> Microsoft.Build.BuildEngine.BuildProperty
-Microsoft.Build.BuildEngine.BuildPropertyGroup.BuildPropertyGroup() -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroup.BuildPropertyGroup(Microsoft.Build.BuildEngine.Project parentProject) -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroup.Clear() -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroup.Clone(bool deepClone) -> Microsoft.Build.BuildEngine.BuildPropertyGroup
-Microsoft.Build.BuildEngine.BuildPropertyGroup.Condition.get -> string
-Microsoft.Build.BuildEngine.BuildPropertyGroup.Condition.set -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroup.Count.get -> int
-Microsoft.Build.BuildEngine.BuildPropertyGroup.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.BuildEngine.BuildPropertyGroup.IsImported.get -> bool
-Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(Microsoft.Build.BuildEngine.BuildProperty property) -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(string propertyName) -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroup.SetImportedPropertyGroupCondition(string condition) -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(string propertyName, string propertyValue) -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(string propertyName, string propertyValue, bool treatPropertyValueAsLiteral) -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroup.this[string propertyName].get -> Microsoft.Build.BuildEngine.BuildProperty
-Microsoft.Build.BuildEngine.BuildPropertyGroup.this[string propertyName].set -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroupCollection
-Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.CopyTo(System.Array array, int index) -> void
-Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.Count.get -> int
-Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.IsSynchronized.get -> bool
-Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.SyncRoot.get -> object
-Microsoft.Build.BuildEngine.BuildSettings
-Microsoft.Build.BuildEngine.BuildSettings.DoNotResetPreviouslyBuiltTargets = 1 -> Microsoft.Build.BuildEngine.BuildSettings
-Microsoft.Build.BuildEngine.BuildSettings.None = 0 -> Microsoft.Build.BuildEngine.BuildSettings
-Microsoft.Build.BuildEngine.BuildTask
-Microsoft.Build.BuildEngine.BuildTask.AddOutputItem(string taskParameter, string itemName) -> void
-Microsoft.Build.BuildEngine.BuildTask.AddOutputProperty(string taskParameter, string propertyName) -> void
-Microsoft.Build.BuildEngine.BuildTask.Condition.get -> string
-Microsoft.Build.BuildEngine.BuildTask.Condition.set -> void
-Microsoft.Build.BuildEngine.BuildTask.ContinueOnError.get -> bool
-Microsoft.Build.BuildEngine.BuildTask.ContinueOnError.set -> void
-Microsoft.Build.BuildEngine.BuildTask.Execute() -> bool
-Microsoft.Build.BuildEngine.BuildTask.GetParameterNames() -> string[]
-Microsoft.Build.BuildEngine.BuildTask.GetParameterValue(string attributeName) -> string
-Microsoft.Build.BuildEngine.BuildTask.HostObject.get -> Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.BuildEngine.BuildTask.HostObject.set -> void
-Microsoft.Build.BuildEngine.BuildTask.Name.get -> string
-Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(string parameterName, string parameterValue) -> void
-Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(string parameterName, string parameterValue, bool treatParameterValueAsLiteral) -> void
-Microsoft.Build.BuildEngine.BuildTask.Type.get -> System.Type
-Microsoft.Build.BuildEngine.ColorResetter
-Microsoft.Build.BuildEngine.ColorSetter
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.BuildEventRedirector.get -> Microsoft.Build.Framework.IEventRedirector
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.BuildEventRedirector.set -> void
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.ConfigurableForwardingLogger() -> void
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.NodeId.get -> int
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.NodeId.set -> void
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Parameters.get -> string
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Parameters.set -> void
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Verbosity.set -> void
-Microsoft.Build.BuildEngine.ConsoleLogger
-Microsoft.Build.BuildEngine.ConsoleLogger.ApplyParameter(string parameterName, string parameterValue) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.BuildFinishedHandler(object sender, Microsoft.Build.Framework.BuildFinishedEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.BuildStartedHandler(object sender, Microsoft.Build.Framework.BuildStartedEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.ConsoleLogger() -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.ConsoleLogger(Microsoft.Build.Framework.LoggerVerbosity verbosity) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.ConsoleLogger(Microsoft.Build.Framework.LoggerVerbosity verbosity, Microsoft.Build.BuildEngine.WriteHandler write, Microsoft.Build.BuildEngine.ColorSetter colorSet, Microsoft.Build.BuildEngine.ColorResetter colorReset) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.CustomEventHandler(object sender, Microsoft.Build.Framework.CustomBuildEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.ErrorHandler(object sender, Microsoft.Build.Framework.BuildErrorEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.MessageHandler(object sender, Microsoft.Build.Framework.BuildMessageEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.Parameters.get -> string
-Microsoft.Build.BuildEngine.ConsoleLogger.Parameters.set -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.ProjectFinishedHandler(object sender, Microsoft.Build.Framework.ProjectFinishedEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.ProjectStartedHandler(object sender, Microsoft.Build.Framework.ProjectStartedEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.ShowSummary.get -> bool
-Microsoft.Build.BuildEngine.ConsoleLogger.ShowSummary.set -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.SkipProjectStartedText.get -> bool
-Microsoft.Build.BuildEngine.ConsoleLogger.SkipProjectStartedText.set -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.TargetFinishedHandler(object sender, Microsoft.Build.Framework.TargetFinishedEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.TargetStartedHandler(object sender, Microsoft.Build.Framework.TargetStartedEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.TaskFinishedHandler(object sender, Microsoft.Build.Framework.TaskFinishedEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.TaskStartedHandler(object sender, Microsoft.Build.Framework.TaskStartedEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.BuildEngine.ConsoleLogger.Verbosity.set -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.WarningHandler(object sender, Microsoft.Build.Framework.BuildWarningEventArgs e) -> void
-Microsoft.Build.BuildEngine.ConsoleLogger.WriteHandler.get -> Microsoft.Build.BuildEngine.WriteHandler
-Microsoft.Build.BuildEngine.ConsoleLogger.WriteHandler.set -> void
-Microsoft.Build.BuildEngine.DistributedFileLogger
-Microsoft.Build.BuildEngine.DistributedFileLogger.BuildEventRedirector.get -> Microsoft.Build.Framework.IEventRedirector
-Microsoft.Build.BuildEngine.DistributedFileLogger.BuildEventRedirector.set -> void
-Microsoft.Build.BuildEngine.DistributedFileLogger.DistributedFileLogger() -> void
-Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-Microsoft.Build.BuildEngine.DistributedFileLogger.NodeId.get -> int
-Microsoft.Build.BuildEngine.DistributedFileLogger.NodeId.set -> void
-Microsoft.Build.BuildEngine.DistributedFileLogger.Parameters.get -> string
-Microsoft.Build.BuildEngine.DistributedFileLogger.Parameters.set -> void
-Microsoft.Build.BuildEngine.DistributedFileLogger.Shutdown() -> void
-Microsoft.Build.BuildEngine.DistributedFileLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.BuildEngine.DistributedFileLogger.Verbosity.set -> void
-Microsoft.Build.BuildEngine.Engine
-Microsoft.Build.BuildEngine.Engine.BinPath.get -> string
-Microsoft.Build.BuildEngine.Engine.BinPath.set -> void
-Microsoft.Build.BuildEngine.Engine.BuildEnabled.get -> bool
-Microsoft.Build.BuildEngine.Engine.BuildEnabled.set -> void
-Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project project) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project project, string targetName) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project project, string[] targetNames) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project project, string[] targetNames, System.Collections.IDictionary targetOutputs) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project project, string[] targetNames, System.Collections.IDictionary targetOutputs, Microsoft.Build.BuildEngine.BuildSettings buildFlags) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProjectFile(string projectFile) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProjectFile(string projectFile, string targetName) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProjectFile(string projectFile, string[] targetNames) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProjectFile(string projectFile, string[] targetNames, Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProjectFile(string projectFile, string[] targetNames, Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, System.Collections.IDictionary targetOutputs) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProjectFile(string projectFile, string[] targetNames, Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, System.Collections.IDictionary targetOutputs, Microsoft.Build.BuildEngine.BuildSettings buildFlags) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProjectFile(string projectFile, string[] targetNames, Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, System.Collections.IDictionary targetOutputs, Microsoft.Build.BuildEngine.BuildSettings buildFlags, string toolsVersion) -> bool
-Microsoft.Build.BuildEngine.Engine.BuildProjectFiles(string[] projectFiles, string[][] targetNamesPerProject, Microsoft.Build.BuildEngine.BuildPropertyGroup[] globalPropertiesPerProject, System.Collections.IDictionary[] targetOutputsPerProject, Microsoft.Build.BuildEngine.BuildSettings buildFlags, string[] toolsVersions) -> bool
-Microsoft.Build.BuildEngine.Engine.CreateNewProject() -> Microsoft.Build.BuildEngine.Project
-Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion.get -> string
-Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion.set -> void
-Microsoft.Build.BuildEngine.Engine.Engine() -> void
-Microsoft.Build.BuildEngine.Engine.Engine(Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties) -> void
-Microsoft.Build.BuildEngine.Engine.Engine(Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, Microsoft.Build.BuildEngine.ToolsetDefinitionLocations locations) -> void
-Microsoft.Build.BuildEngine.Engine.Engine(Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, Microsoft.Build.BuildEngine.ToolsetDefinitionLocations locations, int numberOfCpus, string localNodeProviderParameters) -> void
-Microsoft.Build.BuildEngine.Engine.Engine(Microsoft.Build.BuildEngine.ToolsetDefinitionLocations locations) -> void
-Microsoft.Build.BuildEngine.Engine.Engine(string binPath) -> void
-Microsoft.Build.BuildEngine.Engine.GetLoadedProject(string projectFullFileName) -> Microsoft.Build.BuildEngine.Project
-Microsoft.Build.BuildEngine.Engine.GlobalProperties.get -> Microsoft.Build.BuildEngine.BuildPropertyGroup
-Microsoft.Build.BuildEngine.Engine.GlobalProperties.set -> void
-Microsoft.Build.BuildEngine.Engine.IsBuilding.get -> bool
-Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents.get -> bool
-Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents.set -> void
-Microsoft.Build.BuildEngine.Engine.RegisterDistributedLogger(Microsoft.Build.Framework.ILogger centralLogger, Microsoft.Build.BuildEngine.LoggerDescription forwardingLogger) -> void
-Microsoft.Build.BuildEngine.Engine.RegisterLogger(Microsoft.Build.Framework.ILogger logger) -> void
-Microsoft.Build.BuildEngine.Engine.Shutdown() -> void
-Microsoft.Build.BuildEngine.Engine.Toolsets.get -> Microsoft.Build.BuildEngine.ToolsetCollection
-Microsoft.Build.BuildEngine.Engine.UnloadAllProjects() -> void
-Microsoft.Build.BuildEngine.Engine.UnloadProject(Microsoft.Build.BuildEngine.Project project) -> void
-Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers() -> void
-Microsoft.Build.BuildEngine.FileLogger
-Microsoft.Build.BuildEngine.FileLogger.FileLogger() -> void
-Microsoft.Build.BuildEngine.Import
-Microsoft.Build.BuildEngine.Import.Condition.get -> string
-Microsoft.Build.BuildEngine.Import.Condition.set -> void
-Microsoft.Build.BuildEngine.Import.EvaluatedProjectPath.get -> string
-Microsoft.Build.BuildEngine.Import.IsImported.get -> bool
-Microsoft.Build.BuildEngine.Import.ProjectPath.get -> string
-Microsoft.Build.BuildEngine.Import.ProjectPath.set -> void
-Microsoft.Build.BuildEngine.ImportCollection
-Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(string projectFile, string condition) -> void
-Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Microsoft.Build.BuildEngine.Import[] array, int index) -> void
-Microsoft.Build.BuildEngine.ImportCollection.CopyTo(System.Array array, int index) -> void
-Microsoft.Build.BuildEngine.ImportCollection.Count.get -> int
-Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized.get -> bool
-Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Microsoft.Build.BuildEngine.Import importToRemove) -> void
-Microsoft.Build.BuildEngine.ImportCollection.SyncRoot.get -> object
-Microsoft.Build.BuildEngine.InternalLoggerException
-Microsoft.Build.BuildEngine.InternalLoggerException.BuildEventArgs.get -> Microsoft.Build.Framework.BuildEventArgs
-Microsoft.Build.BuildEngine.InternalLoggerException.ErrorCode.get -> string
-Microsoft.Build.BuildEngine.InternalLoggerException.HelpKeyword.get -> string
-Microsoft.Build.BuildEngine.InternalLoggerException.InitializationException.get -> bool
-Microsoft.Build.BuildEngine.InternalLoggerException.InternalLoggerException() -> void
-Microsoft.Build.BuildEngine.InternalLoggerException.InternalLoggerException(string message) -> void
-Microsoft.Build.BuildEngine.InternalLoggerException.InternalLoggerException(string message, System.Exception innerException) -> void
-Microsoft.Build.BuildEngine.InvalidProjectFileException
-Microsoft.Build.BuildEngine.InvalidProjectFileException.BaseMessage.get -> string
-Microsoft.Build.BuildEngine.InvalidProjectFileException.ColumnNumber.get -> int
-Microsoft.Build.BuildEngine.InvalidProjectFileException.EndColumnNumber.get -> int
-Microsoft.Build.BuildEngine.InvalidProjectFileException.EndLineNumber.get -> int
-Microsoft.Build.BuildEngine.InvalidProjectFileException.ErrorCode.get -> string
-Microsoft.Build.BuildEngine.InvalidProjectFileException.ErrorSubcategory.get -> string
-Microsoft.Build.BuildEngine.InvalidProjectFileException.HelpKeyword.get -> string
-Microsoft.Build.BuildEngine.InvalidProjectFileException.InvalidProjectFileException() -> void
-Microsoft.Build.BuildEngine.InvalidProjectFileException.InvalidProjectFileException(string message) -> void
-Microsoft.Build.BuildEngine.InvalidProjectFileException.InvalidProjectFileException(string message, System.Exception innerException) -> void
-Microsoft.Build.BuildEngine.InvalidProjectFileException.InvalidProjectFileException(string projectFile, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string errorSubcategory, string errorCode, string helpKeyword) -> void
-Microsoft.Build.BuildEngine.InvalidProjectFileException.InvalidProjectFileException(System.Xml.XmlNode xmlNode, string message, string errorSubcategory, string errorCode, string helpKeyword) -> void
-Microsoft.Build.BuildEngine.InvalidProjectFileException.LineNumber.get -> int
-Microsoft.Build.BuildEngine.InvalidProjectFileException.ProjectFile.get -> string
-Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException
-Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.ErrorCode.get -> string
-Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException() -> void
-Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message) -> void
-Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message, string errorCode) -> void
-Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message, string errorCode, System.Exception innerException) -> void
-Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(string message, System.Exception innerException) -> void
-Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.InvalidToolsetDefinitionException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-Microsoft.Build.BuildEngine.LocalNode
-Microsoft.Build.BuildEngine.LoggerDescription
-Microsoft.Build.BuildEngine.LoggerDescription.LoggerDescription(string loggerClassName, string loggerAssemblyName, string loggerAssemblyFile, string loggerSwitchParameters, Microsoft.Build.Framework.LoggerVerbosity verbosity) -> void
-Microsoft.Build.BuildEngine.LoggerDescription.LoggerSwitchParameters.get -> string
-Microsoft.Build.BuildEngine.LoggerDescription.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.BuildEngine.Project
-Microsoft.Build.BuildEngine.Project.AddNewImport(string projectFile, string condition) -> void
-Microsoft.Build.BuildEngine.Project.AddNewItem(string itemName, string itemInclude) -> Microsoft.Build.BuildEngine.BuildItem
-Microsoft.Build.BuildEngine.Project.AddNewItem(string itemName, string itemInclude, bool treatItemIncludeAsLiteral) -> Microsoft.Build.BuildEngine.BuildItem
-Microsoft.Build.BuildEngine.Project.AddNewItemGroup() -> Microsoft.Build.BuildEngine.BuildItemGroup
-Microsoft.Build.BuildEngine.Project.AddNewPropertyGroup(bool insertAtEndOfProject) -> Microsoft.Build.BuildEngine.BuildPropertyGroup
-Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyFile(string taskName, string assemblyFile) -> void
-Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyName(string taskName, string assemblyName) -> void
-Microsoft.Build.BuildEngine.Project.Build() -> bool
-Microsoft.Build.BuildEngine.Project.Build(string targetName) -> bool
-Microsoft.Build.BuildEngine.Project.Build(string[] targetNames) -> bool
-Microsoft.Build.BuildEngine.Project.Build(string[] targetNames, System.Collections.IDictionary targetOutputs) -> bool
-Microsoft.Build.BuildEngine.Project.Build(string[] targetNames, System.Collections.IDictionary targetOutputs, Microsoft.Build.BuildEngine.BuildSettings buildFlags) -> bool
-Microsoft.Build.BuildEngine.Project.BuildEnabled.get -> bool
-Microsoft.Build.BuildEngine.Project.BuildEnabled.set -> void
-Microsoft.Build.BuildEngine.Project.DefaultTargets.get -> string
-Microsoft.Build.BuildEngine.Project.DefaultTargets.set -> void
-Microsoft.Build.BuildEngine.Project.DefaultToolsVersion.get -> string
-Microsoft.Build.BuildEngine.Project.DefaultToolsVersion.set -> void
-Microsoft.Build.BuildEngine.Project.Encoding.get -> System.Text.Encoding
-Microsoft.Build.BuildEngine.Project.EvaluatedItems.get -> Microsoft.Build.BuildEngine.BuildItemGroup
-Microsoft.Build.BuildEngine.Project.EvaluatedItemsIgnoringCondition.get -> Microsoft.Build.BuildEngine.BuildItemGroup
-Microsoft.Build.BuildEngine.Project.EvaluatedProperties.get -> Microsoft.Build.BuildEngine.BuildPropertyGroup
-Microsoft.Build.BuildEngine.Project.FullFileName.get -> string
-Microsoft.Build.BuildEngine.Project.FullFileName.set -> void
-Microsoft.Build.BuildEngine.Project.GetConditionedPropertyValues(string propertyName) -> string[]
-Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByName(string itemName) -> Microsoft.Build.BuildEngine.BuildItemGroup
-Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByNameIgnoringCondition(string itemName) -> Microsoft.Build.BuildEngine.BuildItemGroup
-Microsoft.Build.BuildEngine.Project.GetEvaluatedProperty(string propertyName) -> string
-Microsoft.Build.BuildEngine.Project.GetProjectExtensions(string id) -> string
-Microsoft.Build.BuildEngine.Project.GlobalProperties.get -> Microsoft.Build.BuildEngine.BuildPropertyGroup
-Microsoft.Build.BuildEngine.Project.GlobalProperties.set -> void
-Microsoft.Build.BuildEngine.Project.HasToolsVersionAttribute.get -> bool
-Microsoft.Build.BuildEngine.Project.Imports.get -> Microsoft.Build.BuildEngine.ImportCollection
-Microsoft.Build.BuildEngine.Project.InitialTargets.get -> string
-Microsoft.Build.BuildEngine.Project.InitialTargets.set -> void
-Microsoft.Build.BuildEngine.Project.IsDirty.get -> bool
-Microsoft.Build.BuildEngine.Project.IsValidated.get -> bool
-Microsoft.Build.BuildEngine.Project.IsValidated.set -> void
-Microsoft.Build.BuildEngine.Project.ItemGroups.get -> Microsoft.Build.BuildEngine.BuildItemGroupCollection
-Microsoft.Build.BuildEngine.Project.Load(string projectFileName) -> void
-Microsoft.Build.BuildEngine.Project.Load(string projectFileName, Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings) -> void
-Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader textReader) -> void
-Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader textReader, Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings) -> void
-Microsoft.Build.BuildEngine.Project.LoadXml(string projectXml) -> void
-Microsoft.Build.BuildEngine.Project.LoadXml(string projectXml, Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings) -> void
-Microsoft.Build.BuildEngine.Project.MarkProjectAsDirty() -> void
-Microsoft.Build.BuildEngine.Project.ParentEngine.get -> Microsoft.Build.BuildEngine.Engine
-Microsoft.Build.BuildEngine.Project.Project() -> void
-Microsoft.Build.BuildEngine.Project.Project(Microsoft.Build.BuildEngine.Engine engine) -> void
-Microsoft.Build.BuildEngine.Project.Project(Microsoft.Build.BuildEngine.Engine engine, string toolsVersion) -> void
-Microsoft.Build.BuildEngine.Project.PropertyGroups.get -> Microsoft.Build.BuildEngine.BuildPropertyGroupCollection
-Microsoft.Build.BuildEngine.Project.RemoveAllItemGroups() -> void
-Microsoft.Build.BuildEngine.Project.RemoveAllPropertyGroups() -> void
-Microsoft.Build.BuildEngine.Project.RemoveImportedPropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup propertyGroupToRemove) -> void
-Microsoft.Build.BuildEngine.Project.RemoveItem(Microsoft.Build.BuildEngine.BuildItem itemToRemove) -> void
-Microsoft.Build.BuildEngine.Project.RemoveItemGroup(Microsoft.Build.BuildEngine.BuildItemGroup itemGroupToRemove) -> void
-Microsoft.Build.BuildEngine.Project.RemoveItemGroupsWithMatchingCondition(string matchCondition) -> void
-Microsoft.Build.BuildEngine.Project.RemoveItemsByName(string itemName) -> void
-Microsoft.Build.BuildEngine.Project.RemovePropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup propertyGroupToRemove) -> void
-Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(string matchCondition) -> void
-Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(string matchCondition, bool includeImportedPropertyGroups) -> void
-Microsoft.Build.BuildEngine.Project.ResetBuildStatus() -> void
-Microsoft.Build.BuildEngine.Project.Save(string projectFileName) -> void
-Microsoft.Build.BuildEngine.Project.Save(string projectFileName, System.Text.Encoding encoding) -> void
-Microsoft.Build.BuildEngine.Project.Save(System.IO.TextWriter textWriter) -> void
-Microsoft.Build.BuildEngine.Project.SchemaFile.get -> string
-Microsoft.Build.BuildEngine.Project.SchemaFile.set -> void
-Microsoft.Build.BuildEngine.Project.SetImportedProperty(string propertyName, string propertyValue, string condition, Microsoft.Build.BuildEngine.Project importedProject, Microsoft.Build.BuildEngine.PropertyPosition position) -> void
-Microsoft.Build.BuildEngine.Project.SetImportedProperty(string propertyName, string propertyValue, string condition, Microsoft.Build.BuildEngine.Project importedProject, Microsoft.Build.BuildEngine.PropertyPosition position, bool treatPropertyValueAsLiteral) -> void
-Microsoft.Build.BuildEngine.Project.SetImportedProperty(string propertyName, string propertyValue, string condition, Microsoft.Build.BuildEngine.Project importProject) -> void
-Microsoft.Build.BuildEngine.Project.SetProjectExtensions(string id, string content) -> void
-Microsoft.Build.BuildEngine.Project.SetProperty(string propertyName, string propertyValue) -> void
-Microsoft.Build.BuildEngine.Project.SetProperty(string propertyName, string propertyValue, string condition) -> void
-Microsoft.Build.BuildEngine.Project.SetProperty(string propertyName, string propertyValue, string condition, Microsoft.Build.BuildEngine.PropertyPosition position) -> void
-Microsoft.Build.BuildEngine.Project.SetProperty(string propertyName, string propertyValue, string condition, Microsoft.Build.BuildEngine.PropertyPosition position, bool treatPropertyValueAsLiteral) -> void
-Microsoft.Build.BuildEngine.Project.Targets.get -> Microsoft.Build.BuildEngine.TargetCollection
-Microsoft.Build.BuildEngine.Project.TimeOfLastDirty.get -> System.DateTime
-Microsoft.Build.BuildEngine.Project.ToolsVersion.get -> string
-Microsoft.Build.BuildEngine.Project.UsingTasks.get -> Microsoft.Build.BuildEngine.UsingTaskCollection
-Microsoft.Build.BuildEngine.Project.Xml.get -> string
-Microsoft.Build.BuildEngine.ProjectLoadSettings
-Microsoft.Build.BuildEngine.ProjectLoadSettings.IgnoreMissingImports = 1 -> Microsoft.Build.BuildEngine.ProjectLoadSettings
-Microsoft.Build.BuildEngine.ProjectLoadSettings.None = 0 -> Microsoft.Build.BuildEngine.ProjectLoadSettings
-Microsoft.Build.BuildEngine.PropertyPosition
-Microsoft.Build.BuildEngine.PropertyPosition.UseExistingOrCreateAfterLastImport = 1 -> Microsoft.Build.BuildEngine.PropertyPosition
-Microsoft.Build.BuildEngine.PropertyPosition.UseExistingOrCreateAfterLastPropertyGroup = 0 -> Microsoft.Build.BuildEngine.PropertyPosition
-Microsoft.Build.BuildEngine.RemoteErrorException
-Microsoft.Build.BuildEngine.SolutionWrapperProject
-Microsoft.Build.BuildEngine.Target
-Microsoft.Build.BuildEngine.Target.AddNewTask(string taskName) -> Microsoft.Build.BuildEngine.BuildTask
-Microsoft.Build.BuildEngine.Target.Condition.get -> string
-Microsoft.Build.BuildEngine.Target.Condition.set -> void
-Microsoft.Build.BuildEngine.Target.DependsOnTargets.get -> string
-Microsoft.Build.BuildEngine.Target.DependsOnTargets.set -> void
-Microsoft.Build.BuildEngine.Target.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.BuildEngine.Target.Inputs.get -> string
-Microsoft.Build.BuildEngine.Target.Inputs.set -> void
-Microsoft.Build.BuildEngine.Target.IsImported.get -> bool
-Microsoft.Build.BuildEngine.Target.Name.get -> string
-Microsoft.Build.BuildEngine.Target.Outputs.get -> string
-Microsoft.Build.BuildEngine.Target.Outputs.set -> void
-Microsoft.Build.BuildEngine.Target.RemoveTask(Microsoft.Build.BuildEngine.BuildTask taskElement) -> void
-Microsoft.Build.BuildEngine.TargetCollection
-Microsoft.Build.BuildEngine.TargetCollection.AddNewTarget(string targetName) -> Microsoft.Build.BuildEngine.Target
-Microsoft.Build.BuildEngine.TargetCollection.CopyTo(System.Array array, int index) -> void
-Microsoft.Build.BuildEngine.TargetCollection.Count.get -> int
-Microsoft.Build.BuildEngine.TargetCollection.Exists(string targetName) -> bool
-Microsoft.Build.BuildEngine.TargetCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.BuildEngine.TargetCollection.IsSynchronized.get -> bool
-Microsoft.Build.BuildEngine.TargetCollection.RemoveTarget(Microsoft.Build.BuildEngine.Target targetToRemove) -> void
-Microsoft.Build.BuildEngine.TargetCollection.SyncRoot.get -> object
-Microsoft.Build.BuildEngine.TargetCollection.this[string index].get -> Microsoft.Build.BuildEngine.Target
-Microsoft.Build.BuildEngine.Toolset
-Microsoft.Build.BuildEngine.Toolset.BuildProperties.get -> Microsoft.Build.BuildEngine.BuildPropertyGroup
-Microsoft.Build.BuildEngine.Toolset.Clone() -> Microsoft.Build.BuildEngine.Toolset
-Microsoft.Build.BuildEngine.Toolset.Toolset(string toolsVersion, string toolsPath) -> void
-Microsoft.Build.BuildEngine.Toolset.Toolset(string toolsVersion, string toolsPath, Microsoft.Build.BuildEngine.BuildPropertyGroup buildProperties) -> void
-Microsoft.Build.BuildEngine.Toolset.ToolsPath.get -> string
-Microsoft.Build.BuildEngine.Toolset.ToolsVersion.get -> string
-Microsoft.Build.BuildEngine.ToolsetCollection
-Microsoft.Build.BuildEngine.ToolsetCollection.Add(Microsoft.Build.BuildEngine.Toolset item) -> void
-Microsoft.Build.BuildEngine.ToolsetCollection.Clear() -> void
-Microsoft.Build.BuildEngine.ToolsetCollection.Contains(Microsoft.Build.BuildEngine.Toolset item) -> bool
-Microsoft.Build.BuildEngine.ToolsetCollection.Contains(string toolsVersion) -> bool
-Microsoft.Build.BuildEngine.ToolsetCollection.CopyTo(Microsoft.Build.BuildEngine.Toolset[] array, int arrayIndex) -> void
-Microsoft.Build.BuildEngine.ToolsetCollection.Count.get -> int
-Microsoft.Build.BuildEngine.ToolsetCollection.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.Build.BuildEngine.Toolset>
-Microsoft.Build.BuildEngine.ToolsetCollection.IsReadOnly.get -> bool
-Microsoft.Build.BuildEngine.ToolsetCollection.Remove(Microsoft.Build.BuildEngine.Toolset item) -> bool
-Microsoft.Build.BuildEngine.ToolsetCollection.this[string toolsVersion].get -> Microsoft.Build.BuildEngine.Toolset
-Microsoft.Build.BuildEngine.ToolsetCollection.ToolsVersions.get -> System.Collections.Generic.IEnumerable<string>
-Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
-Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.ConfigurationFile = 1 -> Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
-Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.None = 0 -> Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
-Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.Registry = 2 -> Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
-Microsoft.Build.BuildEngine.UsingTask
-Microsoft.Build.BuildEngine.UsingTask.AssemblyFile.get -> string
-Microsoft.Build.BuildEngine.UsingTask.AssemblyName.get -> string
-Microsoft.Build.BuildEngine.UsingTask.Condition.get -> string
-Microsoft.Build.BuildEngine.UsingTask.IsImported.get -> bool
-Microsoft.Build.BuildEngine.UsingTask.TaskName.get -> string
-Microsoft.Build.BuildEngine.UsingTaskCollection
-Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[] array, int index) -> void
-Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array array, int index) -> void
-Microsoft.Build.BuildEngine.UsingTaskCollection.Count.get -> int
-Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized.get -> bool
-Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot.get -> object
-Microsoft.Build.BuildEngine.Utilities
-Microsoft.Build.BuildEngine.WriteHandler
-override Microsoft.Build.BuildEngine.BuildProperty.ToString() -> string
-override Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-override Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-override Microsoft.Build.BuildEngine.FileLogger.Shutdown() -> void
-override Microsoft.Build.BuildEngine.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.BuildEngine.InvalidProjectFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.BuildEngine.InvalidProjectFileException.Message.get -> string
-override Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.BuildEngine.RemoteErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-static Microsoft.Build.BuildEngine.BuildProperty.explicit operator string(Microsoft.Build.BuildEngine.BuildProperty propertyToCast) -> string
-static Microsoft.Build.BuildEngine.Engine.GlobalEngine.get -> Microsoft.Build.BuildEngine.Engine
-static Microsoft.Build.BuildEngine.Engine.Version.get -> System.Version
-static Microsoft.Build.BuildEngine.LocalNode.StartLocalNodeServer(int nodeNumber) -> void
-static Microsoft.Build.BuildEngine.SolutionWrapperProject.Generate(string solutionPath, string toolsVersionOverride, Microsoft.Build.Framework.BuildEventContext projectBuildEventContext) -> string
-static Microsoft.Build.BuildEngine.Utilities.Escape(string unescapedExpression) -> string
-virtual Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.ForwardToCentralLogger(Microsoft.Build.Framework.BuildEventArgs e) -> void
-virtual Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-virtual Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Shutdown() -> void
-virtual Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-virtual Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-virtual Microsoft.Build.BuildEngine.ConsoleLogger.Shutdown() -> void
\ No newline at end of file
diff --git a/src/Deprecated/Engine/PublicAPI/net/PublicAPI.Unshipped.txt b/src/Deprecated/Engine/PublicAPI/net/PublicAPI.Unshipped.txt
deleted file mode 100644
index e69de29bb2d..00000000000
diff --git a/src/Directory.Build.targets b/src/Directory.Build.targets
index 2495ec35840..fe1a2d71613 100644
--- a/src/Directory.Build.targets
+++ b/src/Directory.Build.targets
@@ -91,14 +91,6 @@
     <GenAPIFolderPath>$(RepoRoot)ref\$(GenAPIAssemblyName)\$(GenAPIShortFrameworkIdentifier)\</GenAPIFolderPath>
   </PropertyGroup>
 
-  <ItemGroup Condition="'$(GenerateReferenceAssemblySource)' == 'true'">
-    <!-- Ensure API stability for shipping packages -->
-    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" PrivateAssets="all" Condition="'$(DotNetBuildFromSource)' != 'true'" />
-
-    <AdditionalFiles Include="PublicAPI/$(PublicApiTfm)/PublicAPI.Shipped.txt" />
-    <AdditionalFiles Include="PublicAPI/$(PublicApiTfm)/PublicAPI.Unshipped.txt" />
-  </ItemGroup>
-
   <ItemGroup Condition="'$(IsUnitTestProject)' == 'true' And '$(TargetFrameworkIdentifier)' != '.NETFramework' ">
     <PackageReference Include="xunit.console" />
   </ItemGroup>
diff --git a/src/Framework/CompatibilitySuppressions.xml b/src/Framework/CompatibilitySuppressions.xml
new file mode 100644
index 00000000000..993613f410e
--- /dev/null
+++ b/src/Framework/CompatibilitySuppressions.xml
@@ -0,0 +1,56 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Suppressions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
+  <!-- PKV004 for netstandard2.0-supporting TFs that we do not have runtime assemblies for.
+       This is intentional, because you can only use MSBuild in the context of a .NET SDK
+       (on net7.0, as of MSBuild 17.4) or in the context of Visual Studio (net472), but we
+       have previously shipped netstandard2.0 packages, and if you want to support both
+       runtime contexts it still makes sense to target that. -->
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETCoreApp,Version=v2.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETFramework,Version=v4.6.1</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETFramework,Version=v4.6.2</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETFramework,Version=v4.6.3</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETStandard,Version=v2.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Tizen,Version=v4.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>UAP,Version=v10.0.15064</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.Xbox360,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.XboxOne,Version=v0.0</Target>
+  </Suppression>
+</Suppressions>
diff --git a/src/Framework/Microsoft.Build.Framework.csproj b/src/Framework/Microsoft.Build.Framework.csproj
index b4c3190f3b4..724e1a38496 100644
--- a/src/Framework/Microsoft.Build.Framework.csproj
+++ b/src/Framework/Microsoft.Build.Framework.csproj
@@ -8,6 +8,7 @@
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is a common assembly used by other MSBuild assemblies.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
     <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">full</ApplyNgenOptimization>
+    <EnablePackageValidation>true</EnablePackageValidation>
   </PropertyGroup>
 
   <ItemGroup>
diff --git a/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt b/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt
deleted file mode 100644
index ec298ae0076..00000000000
--- a/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,919 +0,0 @@
-abstract Microsoft.Build.Framework.SdkLogger.LogMessage(string message, Microsoft.Build.Framework.MessageImportance messageImportance = Microsoft.Build.Framework.MessageImportance.Low) -> void
-abstract Microsoft.Build.Framework.SdkResolver.Name.get -> string
-abstract Microsoft.Build.Framework.SdkResolver.Priority.get -> int
-abstract Microsoft.Build.Framework.SdkResolver.Resolve(Microsoft.Build.Framework.SdkReference sdkReference, Microsoft.Build.Framework.SdkResolverContext resolverContext, Microsoft.Build.Framework.SdkResultFactory factory) -> Microsoft.Build.Framework.SdkResult
-abstract Microsoft.Build.Framework.SdkResultFactory.IndicateFailure(System.Collections.Generic.IEnumerable<string> errors, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
-abstract Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(string path, string version, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
-const Microsoft.Build.Framework.BuildEventContext.InvalidEvaluationId = -1 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidNodeId = -2 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidProjectContextId = -2 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidProjectInstanceId = -1 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidSubmissionId = -1 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidTargetId = -1 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidTaskId = -1 -> int
-const Microsoft.Build.Framework.EngineServices.Version1 = 1 -> int
-const Microsoft.Build.Framework.ProjectStartedEventArgs.InvalidProjectId = -1 -> int
-Microsoft.Build.Framework.AnyEventHandler
-Microsoft.Build.Framework.BuildEngineResult
-Microsoft.Build.Framework.BuildEngineResult.BuildEngineResult() -> void
-Microsoft.Build.Framework.BuildEngineResult.BuildEngineResult(bool result, System.Collections.Generic.List<System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.ITaskItem[]>> targetOutputsPerProject) -> void
-Microsoft.Build.Framework.BuildEngineResult.Result.get -> bool
-Microsoft.Build.Framework.BuildEngineResult.TargetOutputsPerProject.get -> System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.ITaskItem[]>>
-Microsoft.Build.Framework.BuildErrorEventArgs
-Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs() -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, string helpLink, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.Code.get -> string
-Microsoft.Build.Framework.BuildErrorEventArgs.ColumnNumber.get -> int
-Microsoft.Build.Framework.BuildErrorEventArgs.EndColumnNumber.get -> int
-Microsoft.Build.Framework.BuildErrorEventArgs.EndLineNumber.get -> int
-Microsoft.Build.Framework.BuildErrorEventArgs.File.get -> string
-Microsoft.Build.Framework.BuildErrorEventArgs.HelpLink.get -> string
-Microsoft.Build.Framework.BuildErrorEventArgs.LineNumber.get -> int
-Microsoft.Build.Framework.BuildErrorEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.BuildErrorEventArgs.ProjectFile.set -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.Subcategory.get -> string
-Microsoft.Build.Framework.BuildErrorEventHandler
-Microsoft.Build.Framework.BuildEventArgs
-Microsoft.Build.Framework.BuildEventArgs.BuildEventArgs() -> void
-Microsoft.Build.Framework.BuildEventArgs.BuildEventArgs(string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.BuildEventArgs.BuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildEventArgs.BuildEventContext.get -> Microsoft.Build.Framework.BuildEventContext
-Microsoft.Build.Framework.BuildEventArgs.BuildEventContext.set -> void
-Microsoft.Build.Framework.BuildEventArgs.HelpKeyword.get -> string
-Microsoft.Build.Framework.BuildEventArgs.RawMessage.get -> string
-Microsoft.Build.Framework.BuildEventArgs.RawMessage.set -> void
-Microsoft.Build.Framework.BuildEventArgs.RawTimestamp.get -> System.DateTime
-Microsoft.Build.Framework.BuildEventArgs.RawTimestamp.set -> void
-Microsoft.Build.Framework.BuildEventArgs.SenderName.get -> string
-Microsoft.Build.Framework.BuildEventArgs.ThreadId.get -> int
-Microsoft.Build.Framework.BuildEventArgs.Timestamp.get -> System.DateTime
-Microsoft.Build.Framework.BuildEventContext
-Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int nodeId, int projectInstanceId, int projectContextId, int targetId, int taskId) -> void
-Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int nodeId, int targetId, int projectContextId, int taskId) -> void
-Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int submissionId, int nodeId, int evaluationId, int projectInstanceId, int projectContextId, int targetId, int taskId) -> void
-Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int submissionId, int nodeId, int projectInstanceId, int projectContextId, int targetId, int taskId) -> void
-Microsoft.Build.Framework.BuildEventContext.BuildRequestId.get -> long
-Microsoft.Build.Framework.BuildEventContext.EvaluationId.get -> int
-Microsoft.Build.Framework.BuildEventContext.NodeId.get -> int
-Microsoft.Build.Framework.BuildEventContext.ProjectContextId.get -> int
-Microsoft.Build.Framework.BuildEventContext.ProjectInstanceId.get -> int
-Microsoft.Build.Framework.BuildEventContext.SubmissionId.get -> int
-Microsoft.Build.Framework.BuildEventContext.TargetId.get -> int
-Microsoft.Build.Framework.BuildEventContext.TaskId.get -> int
-Microsoft.Build.Framework.BuildFinishedEventArgs
-Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs() -> void
-Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs(string message, string helpKeyword, bool succeeded) -> void
-Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs(string message, string helpKeyword, bool succeeded, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs(string message, string helpKeyword, bool succeeded, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildFinishedEventArgs.Succeeded.get -> bool
-Microsoft.Build.Framework.BuildFinishedEventHandler
-Microsoft.Build.Framework.BuildMessageEventArgs
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs() -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.Code.get -> string
-Microsoft.Build.Framework.BuildMessageEventArgs.ColumnNumber.get -> int
-Microsoft.Build.Framework.BuildMessageEventArgs.EndColumnNumber.get -> int
-Microsoft.Build.Framework.BuildMessageEventArgs.EndLineNumber.get -> int
-Microsoft.Build.Framework.BuildMessageEventArgs.File.get -> string
-Microsoft.Build.Framework.BuildMessageEventArgs.Importance.get -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Framework.BuildMessageEventArgs.LineNumber.get -> int
-Microsoft.Build.Framework.BuildMessageEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.BuildMessageEventArgs.ProjectFile.set -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.Subcategory.get -> string
-Microsoft.Build.Framework.BuildMessageEventHandler
-Microsoft.Build.Framework.BuildStartedEventArgs
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildEnvironment.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs() -> void
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword) -> void
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword, System.Collections.Generic.IDictionary<string, string> environmentOfBuild) -> void
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildStartedEventHandler
-Microsoft.Build.Framework.BuildStatusEventArgs
-Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs() -> void
-Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs(string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildStatusEventHandler
-Microsoft.Build.Framework.BuildWarningEventArgs
-Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs() -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, string helpLink, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.Code.get -> string
-Microsoft.Build.Framework.BuildWarningEventArgs.ColumnNumber.get -> int
-Microsoft.Build.Framework.BuildWarningEventArgs.EndColumnNumber.get -> int
-Microsoft.Build.Framework.BuildWarningEventArgs.EndLineNumber.get -> int
-Microsoft.Build.Framework.BuildWarningEventArgs.File.get -> string
-Microsoft.Build.Framework.BuildWarningEventArgs.HelpLink.get -> string
-Microsoft.Build.Framework.BuildWarningEventArgs.LineNumber.get -> int
-Microsoft.Build.Framework.BuildWarningEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.BuildWarningEventArgs.ProjectFile.set -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.Subcategory.get -> string
-Microsoft.Build.Framework.BuildWarningEventHandler
-Microsoft.Build.Framework.CriticalBuildMessageEventArgs
-Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs() -> void
-Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.CustomBuildEventArgs
-Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs() -> void
-Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs(string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.CustomBuildEventHandler
-Microsoft.Build.Framework.EngineServices
-Microsoft.Build.Framework.EngineServices.EngineServices() -> void
-Microsoft.Build.Framework.EnvironmentVariableReadEventArgs
-Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableName.get -> string
-Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableName.set -> void
-Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableReadEventArgs() -> void
-Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableReadEventArgs(string environmentVariableName, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ExternalProjectFinishedEventArgs() -> void
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ExternalProjectFinishedEventArgs(string message, string helpKeyword, string senderName, string projectFile, bool succeeded) -> void
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ExternalProjectFinishedEventArgs(string message, string helpKeyword, string senderName, string projectFile, bool succeeded, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.Succeeded.get -> bool
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ExternalProjectStartedEventArgs() -> void
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ExternalProjectStartedEventArgs(string message, string helpKeyword, string senderName, string projectFile, string targetNames) -> void
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ExternalProjectStartedEventArgs(string message, string helpKeyword, string senderName, string projectFile, string targetNames, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs.TargetNames.get -> string
-Microsoft.Build.Framework.IBuildEngine
-Microsoft.Build.Framework.IBuildEngine.BuildProjectFile(string projectFileName, string[] targetNames, System.Collections.IDictionary globalProperties, System.Collections.IDictionary targetOutputs) -> bool
-Microsoft.Build.Framework.IBuildEngine.ColumnNumberOfTaskNode.get -> int
-Microsoft.Build.Framework.IBuildEngine.ContinueOnError.get -> bool
-Microsoft.Build.Framework.IBuildEngine.LineNumberOfTaskNode.get -> int
-Microsoft.Build.Framework.IBuildEngine.LogCustomEvent(Microsoft.Build.Framework.CustomBuildEventArgs e) -> void
-Microsoft.Build.Framework.IBuildEngine.LogErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs e) -> void
-Microsoft.Build.Framework.IBuildEngine.LogMessageEvent(Microsoft.Build.Framework.BuildMessageEventArgs e) -> void
-Microsoft.Build.Framework.IBuildEngine.LogWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs e) -> void
-Microsoft.Build.Framework.IBuildEngine.ProjectFileOfTaskNode.get -> string
-Microsoft.Build.Framework.IBuildEngine10
-Microsoft.Build.Framework.IBuildEngine10.EngineServices.get -> Microsoft.Build.Framework.EngineServices
-Microsoft.Build.Framework.IBuildEngine2
-Microsoft.Build.Framework.IBuildEngine2.BuildProjectFile(string projectFileName, string[] targetNames, System.Collections.IDictionary globalProperties, System.Collections.IDictionary targetOutputs, string toolsVersion) -> bool
-Microsoft.Build.Framework.IBuildEngine2.BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion) -> bool
-Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes.get -> bool
-Microsoft.Build.Framework.IBuildEngine3
-Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.Generic.IList<string>[] removeGlobalProperties, string[] toolsVersion, bool returnTargetOutputs) -> Microsoft.Build.Framework.BuildEngineResult
-Microsoft.Build.Framework.IBuildEngine3.Reacquire() -> void
-Microsoft.Build.Framework.IBuildEngine3.Yield() -> void
-Microsoft.Build.Framework.IBuildEngine4
-Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime) -> object
-Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(object key, object obj, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime, bool allowEarlyCollection) -> void
-Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime) -> object
-Microsoft.Build.Framework.IBuildEngine5
-Microsoft.Build.Framework.IBuildEngine5.LogTelemetry(string eventName, System.Collections.Generic.IDictionary<string, string> properties) -> void
-Microsoft.Build.Framework.IBuildEngine6
-Microsoft.Build.Framework.IBuildEngine6.GetGlobalProperties() -> System.Collections.Generic.IReadOnlyDictionary<string, string>
-Microsoft.Build.Framework.IBuildEngine7
-Microsoft.Build.Framework.IBuildEngine7.AllowFailureWithoutError.get -> bool
-Microsoft.Build.Framework.IBuildEngine7.AllowFailureWithoutError.set -> void
-Microsoft.Build.Framework.IBuildEngine8
-Microsoft.Build.Framework.IBuildEngine8.ShouldTreatWarningAsError(string warningCode) -> bool
-Microsoft.Build.Framework.IBuildEngine9
-Microsoft.Build.Framework.IBuildEngine9.ReleaseCores(int coresToRelease) -> void
-Microsoft.Build.Framework.IBuildEngine9.RequestCores(int requestedCores) -> int
-Microsoft.Build.Framework.ICancelableTask
-Microsoft.Build.Framework.ICancelableTask.Cancel() -> void
-Microsoft.Build.Framework.IEventRedirector
-Microsoft.Build.Framework.IEventRedirector.ForwardEvent(Microsoft.Build.Framework.BuildEventArgs buildEvent) -> void
-Microsoft.Build.Framework.IEventSource
-Microsoft.Build.Framework.IEventSource.AnyEventRaised -> Microsoft.Build.Framework.AnyEventHandler
-Microsoft.Build.Framework.IEventSource.BuildFinished -> Microsoft.Build.Framework.BuildFinishedEventHandler
-Microsoft.Build.Framework.IEventSource.BuildStarted -> Microsoft.Build.Framework.BuildStartedEventHandler
-Microsoft.Build.Framework.IEventSource.CustomEventRaised -> Microsoft.Build.Framework.CustomBuildEventHandler
-Microsoft.Build.Framework.IEventSource.ErrorRaised -> Microsoft.Build.Framework.BuildErrorEventHandler
-Microsoft.Build.Framework.IEventSource.MessageRaised -> Microsoft.Build.Framework.BuildMessageEventHandler
-Microsoft.Build.Framework.IEventSource.ProjectFinished -> Microsoft.Build.Framework.ProjectFinishedEventHandler
-Microsoft.Build.Framework.IEventSource.ProjectStarted -> Microsoft.Build.Framework.ProjectStartedEventHandler
-Microsoft.Build.Framework.IEventSource.StatusEventRaised -> Microsoft.Build.Framework.BuildStatusEventHandler
-Microsoft.Build.Framework.IEventSource.TargetFinished -> Microsoft.Build.Framework.TargetFinishedEventHandler
-Microsoft.Build.Framework.IEventSource.TargetStarted -> Microsoft.Build.Framework.TargetStartedEventHandler
-Microsoft.Build.Framework.IEventSource.TaskFinished -> Microsoft.Build.Framework.TaskFinishedEventHandler
-Microsoft.Build.Framework.IEventSource.TaskStarted -> Microsoft.Build.Framework.TaskStartedEventHandler
-Microsoft.Build.Framework.IEventSource.WarningRaised -> Microsoft.Build.Framework.BuildWarningEventHandler
-Microsoft.Build.Framework.IEventSource2
-Microsoft.Build.Framework.IEventSource2.TelemetryLogged -> Microsoft.Build.Framework.TelemetryEventHandler
-Microsoft.Build.Framework.IEventSource3
-Microsoft.Build.Framework.IEventSource3.IncludeEvaluationMetaprojects() -> void
-Microsoft.Build.Framework.IEventSource3.IncludeEvaluationProfiles() -> void
-Microsoft.Build.Framework.IEventSource3.IncludeTaskInputs() -> void
-Microsoft.Build.Framework.IEventSource4
-Microsoft.Build.Framework.IEventSource4.IncludeEvaluationPropertiesAndItems() -> void
-Microsoft.Build.Framework.IForwardingLogger
-Microsoft.Build.Framework.IForwardingLogger.BuildEventRedirector.get -> Microsoft.Build.Framework.IEventRedirector
-Microsoft.Build.Framework.IForwardingLogger.BuildEventRedirector.set -> void
-Microsoft.Build.Framework.IForwardingLogger.NodeId.get -> int
-Microsoft.Build.Framework.IForwardingLogger.NodeId.set -> void
-Microsoft.Build.Framework.IGeneratedTask
-Microsoft.Build.Framework.IGeneratedTask.GetPropertyValue(Microsoft.Build.Framework.TaskPropertyInfo property) -> object
-Microsoft.Build.Framework.IGeneratedTask.SetPropertyValue(Microsoft.Build.Framework.TaskPropertyInfo property, object value) -> void
-Microsoft.Build.Framework.ILogger
-Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.Framework.ILogger.Parameters.get -> string
-Microsoft.Build.Framework.ILogger.Parameters.set -> void
-Microsoft.Build.Framework.ILogger.Shutdown() -> void
-Microsoft.Build.Framework.ILogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.ILogger.Verbosity.set -> void
-Microsoft.Build.Framework.INodeLogger
-Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-Microsoft.Build.Framework.IProjectElement
-Microsoft.Build.Framework.IProjectElement.ElementName.get -> string
-Microsoft.Build.Framework.IProjectElement.OuterElement.get -> string
-Microsoft.Build.Framework.ITask
-Microsoft.Build.Framework.ITask.BuildEngine.get -> Microsoft.Build.Framework.IBuildEngine
-Microsoft.Build.Framework.ITask.BuildEngine.set -> void
-Microsoft.Build.Framework.ITask.Execute() -> bool
-Microsoft.Build.Framework.ITask.HostObject.get -> Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.Framework.ITask.HostObject.set -> void
-Microsoft.Build.Framework.ITaskFactory
-Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask task) -> void
-Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> Microsoft.Build.Framework.ITask
-Microsoft.Build.Framework.ITaskFactory.FactoryName.get -> string
-Microsoft.Build.Framework.ITaskFactory.GetTaskParameters() -> Microsoft.Build.Framework.TaskPropertyInfo[]
-Microsoft.Build.Framework.ITaskFactory.Initialize(string taskName, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
-Microsoft.Build.Framework.ITaskFactory.TaskType.get -> System.Type
-Microsoft.Build.Framework.ITaskFactory2
-Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary<string, string> taskIdentityParameters) -> Microsoft.Build.Framework.ITask
-Microsoft.Build.Framework.ITaskFactory2.Initialize(string taskName, System.Collections.Generic.IDictionary<string, string> factoryIdentityParameters, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
-Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata() -> System.Collections.IDictionary
-Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem destinationItem) -> void
-Microsoft.Build.Framework.ITaskItem.GetMetadata(string metadataName) -> string
-Microsoft.Build.Framework.ITaskItem.ItemSpec.get -> string
-Microsoft.Build.Framework.ITaskItem.ItemSpec.set -> void
-Microsoft.Build.Framework.ITaskItem.MetadataCount.get -> int
-Microsoft.Build.Framework.ITaskItem.MetadataNames.get -> System.Collections.ICollection
-Microsoft.Build.Framework.ITaskItem.RemoveMetadata(string metadataName) -> void
-Microsoft.Build.Framework.ITaskItem.SetMetadata(string metadataName, string metadataValue) -> void
-Microsoft.Build.Framework.ITaskItem2
-Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped() -> System.Collections.IDictionary
-Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped.get -> string
-Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped.set -> void
-Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(string metadataName) -> string
-Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(string metadataName, string metadataValue) -> void
-Microsoft.Build.Framework.LazyFormattedBuildEventArgs
-Microsoft.Build.Framework.LazyFormattedBuildEventArgs.LazyFormattedBuildEventArgs() -> void
-Microsoft.Build.Framework.LazyFormattedBuildEventArgs.LazyFormattedBuildEventArgs(string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.LazyFormattedBuildEventArgs.LazyFormattedBuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute
-Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute.LoadInSeparateAppDomainAttribute() -> void
-Microsoft.Build.Framework.LoggerException
-Microsoft.Build.Framework.LoggerException.ErrorCode.get -> string
-Microsoft.Build.Framework.LoggerException.HelpKeyword.get -> string
-Microsoft.Build.Framework.LoggerException.LoggerException() -> void
-Microsoft.Build.Framework.LoggerException.LoggerException(string message) -> void
-Microsoft.Build.Framework.LoggerException.LoggerException(string message, System.Exception innerException) -> void
-Microsoft.Build.Framework.LoggerException.LoggerException(string message, System.Exception innerException, string errorCode, string helpKeyword) -> void
-Microsoft.Build.Framework.LoggerException.LoggerException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.LoggerVerbosity.Detailed = 3 -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.LoggerVerbosity.Diagnostic = 4 -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.LoggerVerbosity.Minimal = 1 -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.LoggerVerbosity.Normal = 2 -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.LoggerVerbosity.Quiet = 0 -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Framework.MessageImportance.High = 0 -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Framework.MessageImportance.Low = 2 -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Framework.MessageImportance.Normal = 1 -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Framework.MetaprojectGeneratedEventArgs
-Microsoft.Build.Framework.MetaprojectGeneratedEventArgs.MetaprojectGeneratedEventArgs(string metaprojectXml, string metaprojectPath, string message) -> void
-Microsoft.Build.Framework.MetaprojectGeneratedEventArgs.metaprojectXml -> string
-Microsoft.Build.Framework.OutputAttribute
-Microsoft.Build.Framework.OutputAttribute.OutputAttribute() -> void
-Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.ElementDescription.get -> string
-Microsoft.Build.Framework.Profiler.EvaluationLocation.ElementName.get -> string
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation() -> void
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation(long id, long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationPassDescription, string file, int? line, string elementName, string elementDescription, Microsoft.Build.Framework.Profiler.EvaluationLocationKind kind) -> void
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationPassDescription, string file, int? line, string elementName, string elementDescription, Microsoft.Build.Framework.Profiler.EvaluationLocationKind kind) -> void
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation(Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationPassDescription, string file, int? line, string elementName, string elementDescription, Microsoft.Build.Framework.Profiler.EvaluationLocationKind kind) -> void
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationPass.get -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationPassDescription.get -> string
-Microsoft.Build.Framework.Profiler.EvaluationLocation.File.get -> string
-Microsoft.Build.Framework.Profiler.EvaluationLocation.Id.get -> long
-Microsoft.Build.Framework.Profiler.EvaluationLocation.IsEvaluationPass.get -> bool
-Microsoft.Build.Framework.Profiler.EvaluationLocation.Kind.get -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
-Microsoft.Build.Framework.Profiler.EvaluationLocation.Line.get -> int?
-Microsoft.Build.Framework.Profiler.EvaluationLocation.ParentId.get -> long?
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithEvaluationPass(Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string passDescription = null) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithFile(string file) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithFileLineAndCondition(string file, int? line, string condition) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithFileLineAndElement(string file, int? line, Microsoft.Build.Framework.IProjectElement element) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithGlob(string globDescription) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithParentId(long? parentId) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocationKind
-Microsoft.Build.Framework.Profiler.EvaluationLocationKind.Condition = 1 -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
-Microsoft.Build.Framework.Profiler.EvaluationLocationKind.Element = 0 -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
-Microsoft.Build.Framework.Profiler.EvaluationLocationKind.Glob = 2 -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
-Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.InitialProperties = 2 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.ItemDefinitionGroups = 4 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.Items = 5 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.LazyItems = 6 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.Properties = 3 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.Targets = 8 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.TotalEvaluation = 0 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.TotalGlobbing = 1 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.UsingTasks = 7 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.ProfiledLocation
-Microsoft.Build.Framework.Profiler.ProfiledLocation.ExclusiveTime.get -> System.TimeSpan
-Microsoft.Build.Framework.Profiler.ProfiledLocation.InclusiveTime.get -> System.TimeSpan
-Microsoft.Build.Framework.Profiler.ProfiledLocation.NumberOfHits.get -> int
-Microsoft.Build.Framework.Profiler.ProfiledLocation.ProfiledLocation() -> void
-Microsoft.Build.Framework.Profiler.ProfiledLocation.ProfiledLocation(System.TimeSpan inclusiveTime, System.TimeSpan exclusiveTime, int numberOfHits) -> void
-Microsoft.Build.Framework.Profiler.ProfilerResult
-Microsoft.Build.Framework.Profiler.ProfilerResult.ProfiledLocations.get -> System.Collections.Generic.IReadOnlyDictionary<Microsoft.Build.Framework.Profiler.EvaluationLocation, Microsoft.Build.Framework.Profiler.ProfiledLocation>
-Microsoft.Build.Framework.Profiler.ProfilerResult.ProfilerResult() -> void
-Microsoft.Build.Framework.Profiler.ProfilerResult.ProfilerResult(System.Collections.Generic.IDictionary<Microsoft.Build.Framework.Profiler.EvaluationLocation, Microsoft.Build.Framework.Profiler.ProfiledLocation> profiledLocations) -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.GlobalProperties.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.GlobalProperties.set -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Items.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Items.set -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProfilerResult.get -> Microsoft.Build.Framework.Profiler.ProfilerResult?
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProfilerResult.set -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectEvaluationFinishedEventArgs() -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectEvaluationFinishedEventArgs(string message, params object[] messageArgs) -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectFile.set -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Properties.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Properties.set -> void
-Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs
-Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectEvaluationStartedEventArgs() -> void
-Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectEvaluationStartedEventArgs(string message, params object[] messageArgs) -> void
-Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectFile.set -> void
-Microsoft.Build.Framework.ProjectFinishedEventArgs
-Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFinishedEventArgs() -> void
-Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFinishedEventArgs(string message, string helpKeyword, string projectFile, bool succeeded) -> void
-Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFinishedEventArgs(string message, string helpKeyword, string projectFile, bool succeeded, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.ProjectFinishedEventArgs.Succeeded.get -> bool
-Microsoft.Build.Framework.ProjectFinishedEventHandler
-Microsoft.Build.Framework.ProjectImportedEventArgs
-Microsoft.Build.Framework.ProjectImportedEventArgs.ImportedProjectFile.get -> string
-Microsoft.Build.Framework.ProjectImportedEventArgs.ImportedProjectFile.set -> void
-Microsoft.Build.Framework.ProjectImportedEventArgs.ImportIgnored.get -> bool
-Microsoft.Build.Framework.ProjectImportedEventArgs.ImportIgnored.set -> void
-Microsoft.Build.Framework.ProjectImportedEventArgs.ProjectImportedEventArgs() -> void
-Microsoft.Build.Framework.ProjectImportedEventArgs.ProjectImportedEventArgs(int lineNumber, int columnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Framework.ProjectImportedEventArgs.UnexpandedProject.get -> string
-Microsoft.Build.Framework.ProjectImportedEventArgs.UnexpandedProject.set -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs
-Microsoft.Build.Framework.ProjectStartedEventArgs.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Framework.ProjectStartedEventArgs.Items.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.ProjectStartedEventArgs.ParentProjectBuildEventContext.get -> Microsoft.Build.Framework.BuildEventContext
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectId.get -> int
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs() -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(int projectId, string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, Microsoft.Build.Framework.BuildEventContext parentBuildEventContext) -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(int projectId, string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, Microsoft.Build.Framework.BuildEventContext parentBuildEventContext, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(int projectId, string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, Microsoft.Build.Framework.BuildEventContext parentBuildEventContext, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items) -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.Properties.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.ProjectStartedEventArgs.TargetNames.get -> string
-Microsoft.Build.Framework.ProjectStartedEventArgs.ToolsVersion.get -> string
-Microsoft.Build.Framework.ProjectStartedEventHandler
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyInitialValueSetEventArgs() -> void
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyInitialValueSetEventArgs(string propertyName, string propertyValue, string propertySource, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyName.get -> string
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyName.set -> void
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertySource.get -> string
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertySource.set -> void
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyValue.get -> string
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyValue.set -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.Location.get -> string
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.Location.set -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.NewValue.get -> string
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.NewValue.set -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PreviousValue.get -> string
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PreviousValue.set -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyName.get -> string
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyName.set -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyReassignmentEventArgs() -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyReassignmentEventArgs(string propertyName, string previousValue, string newValue, string location, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
-Microsoft.Build.Framework.RegisteredTaskObjectLifetime
-Microsoft.Build.Framework.RegisteredTaskObjectLifetime.AppDomain = 1 -> Microsoft.Build.Framework.RegisteredTaskObjectLifetime
-Microsoft.Build.Framework.RegisteredTaskObjectLifetime.Build = 0 -> Microsoft.Build.Framework.RegisteredTaskObjectLifetime
-Microsoft.Build.Framework.RequiredAttribute
-Microsoft.Build.Framework.RequiredAttribute.RequiredAttribute() -> void
-Microsoft.Build.Framework.RequiredRuntimeAttribute
-Microsoft.Build.Framework.RequiredRuntimeAttribute.RequiredRuntimeAttribute(string runtimeVersion) -> void
-Microsoft.Build.Framework.RequiredRuntimeAttribute.RuntimeVersion.get -> string
-Microsoft.Build.Framework.RunInMTAAttribute
-Microsoft.Build.Framework.RunInMTAAttribute.RunInMTAAttribute() -> void
-Microsoft.Build.Framework.RunInSTAAttribute
-Microsoft.Build.Framework.RunInSTAAttribute.RunInSTAAttribute() -> void
-Microsoft.Build.Framework.SdkLogger
-Microsoft.Build.Framework.SdkLogger.SdkLogger() -> void
-Microsoft.Build.Framework.SdkReference
-Microsoft.Build.Framework.SdkReference.Equals(Microsoft.Build.Framework.SdkReference other) -> bool
-Microsoft.Build.Framework.SdkReference.MinimumVersion.get -> string
-Microsoft.Build.Framework.SdkReference.Name.get -> string
-Microsoft.Build.Framework.SdkReference.SdkReference(string name, string version, string minimumVersion) -> void
-Microsoft.Build.Framework.SdkReference.Version.get -> string
-Microsoft.Build.Framework.SdkResolver
-Microsoft.Build.Framework.SdkResolver.SdkResolver() -> void
-Microsoft.Build.Framework.SdkResolverContext
-Microsoft.Build.Framework.SdkResolverContext.SdkResolverContext() -> void
-Microsoft.Build.Framework.SdkResult
-Microsoft.Build.Framework.SdkResult.SdkResult() -> void
-Microsoft.Build.Framework.SdkResultFactory
-Microsoft.Build.Framework.SdkResultFactory.SdkResultFactory() -> void
-Microsoft.Build.Framework.SdkResultItem
-Microsoft.Build.Framework.SdkResultItem.ItemSpec.get -> string
-Microsoft.Build.Framework.SdkResultItem.ItemSpec.set -> void
-Microsoft.Build.Framework.SdkResultItem.Metadata.get -> System.Collections.Generic.Dictionary<string, string>
-Microsoft.Build.Framework.SdkResultItem.SdkResultItem() -> void
-Microsoft.Build.Framework.SdkResultItem.SdkResultItem(string itemSpec, System.Collections.Generic.Dictionary<string, string> metadata) -> void
-Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetBuiltReason.AfterTargets = 3 -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetBuiltReason.BeforeTargets = 1 -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetBuiltReason.DependsOn = 2 -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetBuiltReason.None = 0 -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetFinishedEventArgs
-Microsoft.Build.Framework.TargetFinishedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.TargetFinishedEventArgs.Succeeded.get -> bool
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFile.get -> string
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs() -> void
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, bool succeeded) -> void
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, bool succeeded, System.Collections.IEnumerable targetOutputs) -> void
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, bool succeeded, System.DateTime eventTimestamp, System.Collections.IEnumerable targetOutputs) -> void
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetName.get -> string
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetOutputs.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetOutputs.set -> void
-Microsoft.Build.Framework.TargetFinishedEventHandler
-Microsoft.Build.Framework.TargetSkippedEventArgs
-Microsoft.Build.Framework.TargetSkippedEventArgs.BuildReason.get -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetSkippedEventArgs.BuildReason.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.Condition.get -> string
-Microsoft.Build.Framework.TargetSkippedEventArgs.Condition.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.EvaluatedCondition.get -> string
-Microsoft.Build.Framework.TargetSkippedEventArgs.EvaluatedCondition.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.OriginalBuildEventContext.get -> Microsoft.Build.Framework.BuildEventContext
-Microsoft.Build.Framework.TargetSkippedEventArgs.OriginalBuildEventContext.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.OriginallySucceeded.get -> bool
-Microsoft.Build.Framework.TargetSkippedEventArgs.OriginallySucceeded.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.ParentTarget.get -> string
-Microsoft.Build.Framework.TargetSkippedEventArgs.ParentTarget.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.SkipReason.get -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkippedEventArgs.SkipReason.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetFile.get -> string
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetFile.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetName.get -> string
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetName.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetSkippedEventArgs() -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetSkippedEventArgs(string message, params object[] messageArgs) -> void
-Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkipReason.ConditionWasFalse = 4 -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkipReason.None = 0 -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkipReason.OutputsUpToDate = 3 -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkipReason.PreviouslyBuiltSuccessfully = 1 -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkipReason.PreviouslyBuiltUnsuccessfully = 2 -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetStartedEventArgs
-Microsoft.Build.Framework.TargetStartedEventArgs.BuildReason.get -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetStartedEventArgs.ParentTarget.get -> string
-Microsoft.Build.Framework.TargetStartedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetFile.get -> string
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetName.get -> string
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs() -> void
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile) -> void
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, string parentTarget, Microsoft.Build.Framework.TargetBuiltReason buildReason, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, string parentTarget, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TargetStartedEventHandler
-Microsoft.Build.Framework.TaskCommandLineEventArgs
-Microsoft.Build.Framework.TaskCommandLineEventArgs.CommandLine.get -> string
-Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskCommandLineEventArgs() -> void
-Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskCommandLineEventArgs(string commandLine, string taskName, Microsoft.Build.Framework.MessageImportance importance) -> void
-Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskCommandLineEventArgs(string commandLine, string taskName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskName.get -> string
-Microsoft.Build.Framework.TaskFinishedEventArgs
-Microsoft.Build.Framework.TaskFinishedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.TaskFinishedEventArgs.Succeeded.get -> bool
-Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFile.get -> string
-Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFinishedEventArgs() -> void
-Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFinishedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName, bool succeeded) -> void
-Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFinishedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName, bool succeeded, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TaskFinishedEventArgs.TaskName.get -> string
-Microsoft.Build.Framework.TaskFinishedEventHandler
-Microsoft.Build.Framework.TaskParameterEventArgs
-Microsoft.Build.Framework.TaskParameterEventArgs.Items.get -> System.Collections.IList
-Microsoft.Build.Framework.TaskParameterEventArgs.ItemType.get -> string
-Microsoft.Build.Framework.TaskParameterEventArgs.Kind.get -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterEventArgs.LogItemMetadata.get -> bool
-Microsoft.Build.Framework.TaskParameterEventArgs.TaskParameterEventArgs(Microsoft.Build.Framework.TaskParameterMessageKind kind, string itemType, System.Collections.IList items, bool logItemMetadata, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.AddItem = 2 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.RemoveItem = 3 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.SkippedTargetInputs = 4 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.SkippedTargetOutputs = 5 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.TaskInput = 0 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.TaskOutput = 1 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskPropertyInfo
-Microsoft.Build.Framework.TaskPropertyInfo.Log.get -> bool
-Microsoft.Build.Framework.TaskPropertyInfo.Log.set -> void
-Microsoft.Build.Framework.TaskPropertyInfo.LogItemMetadata.get -> bool
-Microsoft.Build.Framework.TaskPropertyInfo.LogItemMetadata.set -> void
-Microsoft.Build.Framework.TaskPropertyInfo.Name.get -> string
-Microsoft.Build.Framework.TaskPropertyInfo.Output.get -> bool
-Microsoft.Build.Framework.TaskPropertyInfo.PropertyType.get -> System.Type
-Microsoft.Build.Framework.TaskPropertyInfo.Required.get -> bool
-Microsoft.Build.Framework.TaskPropertyInfo.TaskPropertyInfo(string name, System.Type typeOfParameter, bool output, bool required) -> void
-Microsoft.Build.Framework.TaskStartedEventArgs
-Microsoft.Build.Framework.TaskStartedEventArgs.ColumnNumber.get -> int
-Microsoft.Build.Framework.TaskStartedEventArgs.LineNumber.get -> int
-Microsoft.Build.Framework.TaskStartedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.TaskStartedEventArgs.TaskFile.get -> string
-Microsoft.Build.Framework.TaskStartedEventArgs.TaskName.get -> string
-Microsoft.Build.Framework.TaskStartedEventArgs.TaskStartedEventArgs() -> void
-Microsoft.Build.Framework.TaskStartedEventArgs.TaskStartedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName) -> void
-Microsoft.Build.Framework.TaskStartedEventArgs.TaskStartedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TaskStartedEventHandler
-Microsoft.Build.Framework.TelemetryEventArgs
-Microsoft.Build.Framework.TelemetryEventArgs.EventName.get -> string
-Microsoft.Build.Framework.TelemetryEventArgs.EventName.set -> void
-Microsoft.Build.Framework.TelemetryEventArgs.Properties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Framework.TelemetryEventArgs.Properties.set -> void
-Microsoft.Build.Framework.TelemetryEventArgs.TelemetryEventArgs() -> void
-Microsoft.Build.Framework.TelemetryEventHandler
-Microsoft.Build.Framework.UninitializedPropertyReadEventArgs
-Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.PropertyName.get -> string
-Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.PropertyName.set -> void
-Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.UninitializedPropertyReadEventArgs() -> void
-Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.UninitializedPropertyReadEventArgs(string propertyName, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
-Microsoft.Build.Framework.XamlTypes.Argument
-Microsoft.Build.Framework.XamlTypes.Argument.Argument() -> void
-Microsoft.Build.Framework.XamlTypes.Argument.BeginInit() -> void
-Microsoft.Build.Framework.XamlTypes.Argument.EndInit() -> void
-Microsoft.Build.Framework.XamlTypes.Argument.IsRequired.get -> bool
-Microsoft.Build.Framework.XamlTypes.Argument.IsRequired.set -> void
-Microsoft.Build.Framework.XamlTypes.Argument.Property.get -> string
-Microsoft.Build.Framework.XamlTypes.Argument.Property.set -> void
-Microsoft.Build.Framework.XamlTypes.Argument.Separator.get -> string
-Microsoft.Build.Framework.XamlTypes.Argument.Separator.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Arguments.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.Argument>
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Arguments.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.BaseProperty() -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Category.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Category.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.ContainingRule.get -> Microsoft.Build.Framework.XamlTypes.Rule
-Microsoft.Build.Framework.XamlTypes.BaseProperty.DataSource.get -> Microsoft.Build.Framework.XamlTypes.DataSource
-Microsoft.Build.Framework.XamlTypes.BaseProperty.DataSource.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Default.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Default.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Description.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Description.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.DisplayName.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.DisplayName.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.F1Keyword.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.F1Keyword.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.HelpContext.get -> int
-Microsoft.Build.Framework.XamlTypes.BaseProperty.HelpContext.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.HelpFile.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.HelpFile.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.HelpUrl.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.HelpUrl.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.IncludeInCommandLine.get -> bool
-Microsoft.Build.Framework.XamlTypes.BaseProperty.IncludeInCommandLine.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.IsRequired.get -> bool
-Microsoft.Build.Framework.XamlTypes.BaseProperty.IsRequired.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Metadata.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.NameValuePair>
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Metadata.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.MultipleValuesAllowed.get -> bool
-Microsoft.Build.Framework.XamlTypes.BaseProperty.MultipleValuesAllowed.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Name.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Name.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.ReadOnly.get -> bool
-Microsoft.Build.Framework.XamlTypes.BaseProperty.ReadOnly.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Separator.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Separator.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Subcategory.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Subcategory.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Switch.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Switch.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.SwitchPrefix.get -> string
-Microsoft.Build.Framework.XamlTypes.BaseProperty.SwitchPrefix.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.ValueEditors.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.ValueEditor>
-Microsoft.Build.Framework.XamlTypes.BaseProperty.ValueEditors.set -> void
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Visible.get -> bool
-Microsoft.Build.Framework.XamlTypes.BaseProperty.Visible.set -> void
-Microsoft.Build.Framework.XamlTypes.BoolProperty
-Microsoft.Build.Framework.XamlTypes.BoolProperty.BoolProperty() -> void
-Microsoft.Build.Framework.XamlTypes.BoolProperty.ReverseSwitch.get -> string
-Microsoft.Build.Framework.XamlTypes.BoolProperty.ReverseSwitch.set -> void
-Microsoft.Build.Framework.XamlTypes.Category
-Microsoft.Build.Framework.XamlTypes.Category.BeginInit() -> void
-Microsoft.Build.Framework.XamlTypes.Category.Category() -> void
-Microsoft.Build.Framework.XamlTypes.Category.Description.get -> string
-Microsoft.Build.Framework.XamlTypes.Category.Description.set -> void
-Microsoft.Build.Framework.XamlTypes.Category.DisplayName.get -> string
-Microsoft.Build.Framework.XamlTypes.Category.DisplayName.set -> void
-Microsoft.Build.Framework.XamlTypes.Category.EndInit() -> void
-Microsoft.Build.Framework.XamlTypes.Category.HelpString.get -> string
-Microsoft.Build.Framework.XamlTypes.Category.HelpString.set -> void
-Microsoft.Build.Framework.XamlTypes.Category.Name.get -> string
-Microsoft.Build.Framework.XamlTypes.Category.Name.set -> void
-Microsoft.Build.Framework.XamlTypes.Category.Subtype.get -> string
-Microsoft.Build.Framework.XamlTypes.Category.Subtype.set -> void
-Microsoft.Build.Framework.XamlTypes.CategorySchema
-Microsoft.Build.Framework.XamlTypes.CategorySchema.CategorySchema() -> void
-Microsoft.Build.Framework.XamlTypes.ContentType
-Microsoft.Build.Framework.XamlTypes.ContentType.BeginInit() -> void
-Microsoft.Build.Framework.XamlTypes.ContentType.ContentType() -> void
-Microsoft.Build.Framework.XamlTypes.ContentType.DefaultContentTypeForItemType.get -> bool
-Microsoft.Build.Framework.XamlTypes.ContentType.DefaultContentTypeForItemType.set -> void
-Microsoft.Build.Framework.XamlTypes.ContentType.DisplayName.get -> string
-Microsoft.Build.Framework.XamlTypes.ContentType.DisplayName.set -> void
-Microsoft.Build.Framework.XamlTypes.ContentType.EndInit() -> void
-Microsoft.Build.Framework.XamlTypes.ContentType.GetMetadata(string metadataName) -> string
-Microsoft.Build.Framework.XamlTypes.ContentType.GetSchemaObjects(System.Type type) -> System.Collections.Generic.IEnumerable<object>
-Microsoft.Build.Framework.XamlTypes.ContentType.GetSchemaObjectTypes() -> System.Collections.Generic.IEnumerable<System.Type>
-Microsoft.Build.Framework.XamlTypes.ContentType.ItemGroupName.get -> string
-Microsoft.Build.Framework.XamlTypes.ContentType.ItemGroupName.set -> void
-Microsoft.Build.Framework.XamlTypes.ContentType.ItemType.get -> string
-Microsoft.Build.Framework.XamlTypes.ContentType.ItemType.set -> void
-Microsoft.Build.Framework.XamlTypes.ContentType.Metadata.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.NameValuePair>
-Microsoft.Build.Framework.XamlTypes.ContentType.Metadata.set -> void
-Microsoft.Build.Framework.XamlTypes.ContentType.Name.get -> string
-Microsoft.Build.Framework.XamlTypes.ContentType.Name.set -> void
-Microsoft.Build.Framework.XamlTypes.DataSource
-Microsoft.Build.Framework.XamlTypes.DataSource.BeginInit() -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.DataSource() -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.EndInit() -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.HasConfigurationCondition.get -> bool
-Microsoft.Build.Framework.XamlTypes.DataSource.HasConfigurationCondition.set -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.ItemType.get -> string
-Microsoft.Build.Framework.XamlTypes.DataSource.ItemType.set -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.Label.get -> string
-Microsoft.Build.Framework.XamlTypes.DataSource.Label.set -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.MSBuildTarget.get -> string
-Microsoft.Build.Framework.XamlTypes.DataSource.MSBuildTarget.set -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.PersistedName.get -> string
-Microsoft.Build.Framework.XamlTypes.DataSource.PersistedName.set -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.Persistence.get -> string
-Microsoft.Build.Framework.XamlTypes.DataSource.Persistence.set -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.PersistenceStyle.get -> string
-Microsoft.Build.Framework.XamlTypes.DataSource.PersistenceStyle.set -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.SourceOfDefaultValue.get -> Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation
-Microsoft.Build.Framework.XamlTypes.DataSource.SourceOfDefaultValue.set -> void
-Microsoft.Build.Framework.XamlTypes.DataSource.SourceType.get -> string
-Microsoft.Build.Framework.XamlTypes.DataSource.SourceType.set -> void
-Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation
-Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation.AfterContext = 1 -> Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation
-Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation.BeforeContext = 0 -> Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation
-Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty
-Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty.DynamicEnumProperty() -> void
-Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty.EnumProvider.get -> string
-Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty.EnumProvider.set -> void
-Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty.ProviderSettings.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.NameValuePair>
-Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty.ProviderSettings.set -> void
-Microsoft.Build.Framework.XamlTypes.EnumProperty
-Microsoft.Build.Framework.XamlTypes.EnumProperty.AdmissibleValues.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.EnumValue>
-Microsoft.Build.Framework.XamlTypes.EnumProperty.AdmissibleValues.set -> void
-Microsoft.Build.Framework.XamlTypes.EnumProperty.EnumProperty() -> void
-Microsoft.Build.Framework.XamlTypes.EnumValue
-Microsoft.Build.Framework.XamlTypes.EnumValue.Arguments.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.Argument>
-Microsoft.Build.Framework.XamlTypes.EnumValue.Arguments.set -> void
-Microsoft.Build.Framework.XamlTypes.EnumValue.Description.get -> string
-Microsoft.Build.Framework.XamlTypes.EnumValue.Description.set -> void
-Microsoft.Build.Framework.XamlTypes.EnumValue.DisplayName.get -> string
-Microsoft.Build.Framework.XamlTypes.EnumValue.DisplayName.set -> void
-Microsoft.Build.Framework.XamlTypes.EnumValue.EnumValue() -> void
-Microsoft.Build.Framework.XamlTypes.EnumValue.HelpString.get -> string
-Microsoft.Build.Framework.XamlTypes.EnumValue.HelpString.set -> void
-Microsoft.Build.Framework.XamlTypes.EnumValue.IsDefault.get -> bool
-Microsoft.Build.Framework.XamlTypes.EnumValue.IsDefault.set -> void
-Microsoft.Build.Framework.XamlTypes.EnumValue.Metadata.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.NameValuePair>
-Microsoft.Build.Framework.XamlTypes.EnumValue.Metadata.set -> void
-Microsoft.Build.Framework.XamlTypes.EnumValue.Name.get -> string
-Microsoft.Build.Framework.XamlTypes.EnumValue.Name.set -> void
-Microsoft.Build.Framework.XamlTypes.EnumValue.Switch.get -> string
-Microsoft.Build.Framework.XamlTypes.EnumValue.Switch.set -> void
-Microsoft.Build.Framework.XamlTypes.EnumValue.SwitchPrefix.get -> string
-Microsoft.Build.Framework.XamlTypes.EnumValue.SwitchPrefix.set -> void
-Microsoft.Build.Framework.XamlTypes.FileExtension
-Microsoft.Build.Framework.XamlTypes.FileExtension.ContentType.get -> string
-Microsoft.Build.Framework.XamlTypes.FileExtension.ContentType.set -> void
-Microsoft.Build.Framework.XamlTypes.FileExtension.FileExtension() -> void
-Microsoft.Build.Framework.XamlTypes.FileExtension.GetSchemaObjects(System.Type type) -> System.Collections.Generic.IEnumerable<object>
-Microsoft.Build.Framework.XamlTypes.FileExtension.GetSchemaObjectTypes() -> System.Collections.Generic.IEnumerable<System.Type>
-Microsoft.Build.Framework.XamlTypes.FileExtension.Name.get -> string
-Microsoft.Build.Framework.XamlTypes.FileExtension.Name.set -> void
-Microsoft.Build.Framework.XamlTypes.IntProperty
-Microsoft.Build.Framework.XamlTypes.IntProperty.IntProperty() -> void
-Microsoft.Build.Framework.XamlTypes.IntProperty.MaxValue.get -> int?
-Microsoft.Build.Framework.XamlTypes.IntProperty.MaxValue.set -> void
-Microsoft.Build.Framework.XamlTypes.IntProperty.MinValue.get -> int?
-Microsoft.Build.Framework.XamlTypes.IntProperty.MinValue.set -> void
-Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode
-Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode.GetSchemaObjects(System.Type type) -> System.Collections.Generic.IEnumerable<object>
-Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode.GetSchemaObjectTypes() -> System.Collections.Generic.IEnumerable<System.Type>
-Microsoft.Build.Framework.XamlTypes.ItemType
-Microsoft.Build.Framework.XamlTypes.ItemType.BeginInit() -> void
-Microsoft.Build.Framework.XamlTypes.ItemType.DefaultContentType.get -> string
-Microsoft.Build.Framework.XamlTypes.ItemType.DefaultContentType.set -> void
-Microsoft.Build.Framework.XamlTypes.ItemType.DisplayName.get -> string
-Microsoft.Build.Framework.XamlTypes.ItemType.DisplayName.set -> void
-Microsoft.Build.Framework.XamlTypes.ItemType.EndInit() -> void
-Microsoft.Build.Framework.XamlTypes.ItemType.GetSchemaObjects(System.Type type) -> System.Collections.Generic.IEnumerable<object>
-Microsoft.Build.Framework.XamlTypes.ItemType.GetSchemaObjectTypes() -> System.Collections.Generic.IEnumerable<System.Type>
-Microsoft.Build.Framework.XamlTypes.ItemType.ItemType() -> void
-Microsoft.Build.Framework.XamlTypes.ItemType.Name.get -> string
-Microsoft.Build.Framework.XamlTypes.ItemType.Name.set -> void
-Microsoft.Build.Framework.XamlTypes.ItemType.UpToDateCheckInput.get -> bool
-Microsoft.Build.Framework.XamlTypes.ItemType.UpToDateCheckInput.set -> void
-Microsoft.Build.Framework.XamlTypes.NameValuePair
-Microsoft.Build.Framework.XamlTypes.NameValuePair.Name.get -> string
-Microsoft.Build.Framework.XamlTypes.NameValuePair.Name.set -> void
-Microsoft.Build.Framework.XamlTypes.NameValuePair.NameValuePair() -> void
-Microsoft.Build.Framework.XamlTypes.NameValuePair.Value.get -> string
-Microsoft.Build.Framework.XamlTypes.NameValuePair.Value.set -> void
-Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions
-Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions.GetSchemaObjects(System.Type type) -> System.Collections.Generic.IEnumerable<object>
-Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions.GetSchemaObjectTypes() -> System.Collections.Generic.IEnumerable<System.Type>
-Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions.Nodes.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode>
-Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions.Nodes.set -> void
-Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions.ProjectSchemaDefinitions() -> void
-Microsoft.Build.Framework.XamlTypes.Rule
-Microsoft.Build.Framework.XamlTypes.Rule.AdditionalInputs.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.AdditionalInputs.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.BeginInit() -> void
-Microsoft.Build.Framework.XamlTypes.Rule.Categories.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.Category>
-Microsoft.Build.Framework.XamlTypes.Rule.Categories.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.CommandLine.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.CommandLine.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.DataSource.get -> Microsoft.Build.Framework.XamlTypes.DataSource
-Microsoft.Build.Framework.XamlTypes.Rule.DataSource.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.Description.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.Description.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.DisplayName.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.DisplayName.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.EndInit() -> void
-Microsoft.Build.Framework.XamlTypes.Rule.EvaluatedCategories.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.Category>
-Microsoft.Build.Framework.XamlTypes.Rule.ExecutionDescription.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.ExecutionDescription.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.FileExtension.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.FileExtension.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.GetPropertiesByCategory() -> System.Collections.Specialized.OrderedDictionary
-Microsoft.Build.Framework.XamlTypes.Rule.GetPropertiesInCategory(string categoryName) -> System.Collections.Generic.IList<Microsoft.Build.Framework.XamlTypes.BaseProperty>
-Microsoft.Build.Framework.XamlTypes.Rule.GetProperty(string propertyName) -> Microsoft.Build.Framework.XamlTypes.BaseProperty
-Microsoft.Build.Framework.XamlTypes.Rule.GetSchemaObjects(System.Type type) -> System.Collections.Generic.IEnumerable<object>
-Microsoft.Build.Framework.XamlTypes.Rule.GetSchemaObjectTypes() -> System.Collections.Generic.IEnumerable<System.Type>
-Microsoft.Build.Framework.XamlTypes.Rule.HelpString.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.HelpString.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.Metadata.get -> System.Collections.Generic.Dictionary<string, object>
-Microsoft.Build.Framework.XamlTypes.Rule.Metadata.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.Name.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.Name.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.Order.get -> int
-Microsoft.Build.Framework.XamlTypes.Rule.Order.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.Outputs.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.Outputs.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.OverrideMode.get -> Microsoft.Build.Framework.XamlTypes.RuleOverrideMode
-Microsoft.Build.Framework.XamlTypes.Rule.OverrideMode.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.PageTemplate.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.PageTemplate.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.Properties.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.BaseProperty>
-Microsoft.Build.Framework.XamlTypes.Rule.Properties.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.PropertyPagesHidden.get -> bool
-Microsoft.Build.Framework.XamlTypes.Rule.PropertyPagesHidden.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.Rule() -> void
-Microsoft.Build.Framework.XamlTypes.Rule.Separator.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.Separator.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.ShowOnlyRuleProperties.get -> bool
-Microsoft.Build.Framework.XamlTypes.Rule.ShowOnlyRuleProperties.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.SupportsFileBatching.get -> bool
-Microsoft.Build.Framework.XamlTypes.Rule.SupportsFileBatching.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.SwitchPrefix.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.SwitchPrefix.set -> void
-Microsoft.Build.Framework.XamlTypes.Rule.ToolName.get -> string
-Microsoft.Build.Framework.XamlTypes.Rule.ToolName.set -> void
-Microsoft.Build.Framework.XamlTypes.RuleBag
-Microsoft.Build.Framework.XamlTypes.RuleBag.BeginInit() -> void
-Microsoft.Build.Framework.XamlTypes.RuleBag.EndInit() -> void
-Microsoft.Build.Framework.XamlTypes.RuleBag.GetSchemaObjects(System.Type type) -> System.Collections.Generic.IEnumerable<object>
-Microsoft.Build.Framework.XamlTypes.RuleBag.GetSchemaObjectTypes() -> System.Collections.Generic.IEnumerable<System.Type>
-Microsoft.Build.Framework.XamlTypes.RuleBag.RuleBag() -> void
-Microsoft.Build.Framework.XamlTypes.RuleBag.Rules.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.Rule>
-Microsoft.Build.Framework.XamlTypes.RuleBag.Rules.set -> void
-Microsoft.Build.Framework.XamlTypes.RuleOverrideMode
-Microsoft.Build.Framework.XamlTypes.RuleOverrideMode.Extend = 1 -> Microsoft.Build.Framework.XamlTypes.RuleOverrideMode
-Microsoft.Build.Framework.XamlTypes.RuleOverrideMode.Replace = 0 -> Microsoft.Build.Framework.XamlTypes.RuleOverrideMode
-Microsoft.Build.Framework.XamlTypes.RuleSchema
-Microsoft.Build.Framework.XamlTypes.RuleSchema.RuleSchema() -> void
-Microsoft.Build.Framework.XamlTypes.StringListProperty
-Microsoft.Build.Framework.XamlTypes.StringListProperty.CommandLineValueSeparator.get -> string
-Microsoft.Build.Framework.XamlTypes.StringListProperty.CommandLineValueSeparator.set -> void
-Microsoft.Build.Framework.XamlTypes.StringListProperty.RendererValueSeparator.get -> string
-Microsoft.Build.Framework.XamlTypes.StringListProperty.RendererValueSeparator.set -> void
-Microsoft.Build.Framework.XamlTypes.StringListProperty.StringListProperty() -> void
-Microsoft.Build.Framework.XamlTypes.StringListProperty.Subtype.get -> string
-Microsoft.Build.Framework.XamlTypes.StringListProperty.Subtype.set -> void
-Microsoft.Build.Framework.XamlTypes.StringProperty
-Microsoft.Build.Framework.XamlTypes.StringProperty.StringProperty() -> void
-Microsoft.Build.Framework.XamlTypes.StringProperty.Subtype.get -> string
-Microsoft.Build.Framework.XamlTypes.StringProperty.Subtype.set -> void
-Microsoft.Build.Framework.XamlTypes.ValueEditor
-Microsoft.Build.Framework.XamlTypes.ValueEditor.BeginInit() -> void
-Microsoft.Build.Framework.XamlTypes.ValueEditor.DisplayName.get -> string
-Microsoft.Build.Framework.XamlTypes.ValueEditor.DisplayName.set -> void
-Microsoft.Build.Framework.XamlTypes.ValueEditor.EditorType.get -> string
-Microsoft.Build.Framework.XamlTypes.ValueEditor.EditorType.set -> void
-Microsoft.Build.Framework.XamlTypes.ValueEditor.EndInit() -> void
-Microsoft.Build.Framework.XamlTypes.ValueEditor.Metadata.get -> System.Collections.Generic.List<Microsoft.Build.Framework.XamlTypes.NameValuePair>
-Microsoft.Build.Framework.XamlTypes.ValueEditor.Metadata.set -> void
-Microsoft.Build.Framework.XamlTypes.ValueEditor.ValueEditor() -> void
-override Microsoft.Build.Framework.BuildEventContext.Equals(object obj) -> bool
-override Microsoft.Build.Framework.BuildEventContext.GetHashCode() -> int
-override Microsoft.Build.Framework.BuildEventContext.ToString() -> string
-override Microsoft.Build.Framework.LazyFormattedBuildEventArgs.Message.get -> string
-override Microsoft.Build.Framework.LoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.Framework.Profiler.EvaluationLocation.Equals(object obj) -> bool
-override Microsoft.Build.Framework.Profiler.EvaluationLocation.GetHashCode() -> int
-override Microsoft.Build.Framework.Profiler.EvaluationLocation.ToString() -> string
-override Microsoft.Build.Framework.Profiler.ProfiledLocation.Equals(object obj) -> bool
-override Microsoft.Build.Framework.Profiler.ProfiledLocation.GetHashCode() -> int
-override Microsoft.Build.Framework.Profiler.ProfiledLocation.ToString() -> string
-override Microsoft.Build.Framework.Profiler.ProfilerResult.Equals(object obj) -> bool
-override Microsoft.Build.Framework.Profiler.ProfilerResult.GetHashCode() -> int
-override Microsoft.Build.Framework.ProjectFinishedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.ProjectStartedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.PropertyReassignmentEventArgs.Message.get -> string
-override Microsoft.Build.Framework.SdkReference.Equals(object obj) -> bool
-override Microsoft.Build.Framework.SdkReference.GetHashCode() -> int
-override Microsoft.Build.Framework.SdkReference.ToString() -> string
-override Microsoft.Build.Framework.SdkResultItem.Equals(object obj) -> bool
-override Microsoft.Build.Framework.SdkResultItem.GetHashCode() -> int
-override Microsoft.Build.Framework.TargetFinishedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.TargetSkippedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.TargetStartedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.TaskFinishedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.TaskParameterEventArgs.Message.get -> string
-override Microsoft.Build.Framework.TaskStartedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.XamlTypes.EnumProperty.EndInit() -> void
-override Microsoft.Build.Framework.XamlTypes.IntProperty.EndInit() -> void
-static Microsoft.Build.Framework.BuildEventContext.Invalid.get -> Microsoft.Build.Framework.BuildEventContext
-static Microsoft.Build.Framework.BuildEventContext.operator !=(Microsoft.Build.Framework.BuildEventContext left, Microsoft.Build.Framework.BuildEventContext right) -> bool
-static Microsoft.Build.Framework.BuildEventContext.operator ==(Microsoft.Build.Framework.BuildEventContext left, Microsoft.Build.Framework.BuildEventContext right) -> bool
-static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForAggregatedGlob() -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForCondition(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationDescription, string file, int? line, string condition) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForGlob(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationDescription, string file, int? line, string globDescription) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForProject(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationDescription, string file, int? line, Microsoft.Build.Framework.IProjectElement element) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-static Microsoft.Build.Framework.Profiler.EvaluationLocation.EmptyLocation.get -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-static Microsoft.Build.Framework.SdkReference.TryParse(string sdk, out Microsoft.Build.Framework.SdkReference sdkReference) -> bool
-virtual Microsoft.Build.Framework.BuildEventArgs.Message.get -> string
-virtual Microsoft.Build.Framework.BuildEventArgs.Message.set -> void
-virtual Microsoft.Build.Framework.EngineServices.IsTaskInputLoggingEnabled.get -> bool
-virtual Microsoft.Build.Framework.EngineServices.LogsMessagesOfImportance(Microsoft.Build.Framework.MessageImportance importance) -> bool
-virtual Microsoft.Build.Framework.EngineServices.Version.get -> int
-virtual Microsoft.Build.Framework.SdkResolverContext.Interactive.get -> bool
-virtual Microsoft.Build.Framework.SdkResolverContext.Interactive.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.IsRunningInVisualStudio.get -> bool
-virtual Microsoft.Build.Framework.SdkResolverContext.IsRunningInVisualStudio.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.Logger.get -> Microsoft.Build.Framework.SdkLogger
-virtual Microsoft.Build.Framework.SdkResolverContext.Logger.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.MSBuildVersion.get -> System.Version
-virtual Microsoft.Build.Framework.SdkResolverContext.MSBuildVersion.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.ProjectFilePath.get -> string
-virtual Microsoft.Build.Framework.SdkResolverContext.ProjectFilePath.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.SolutionFilePath.get -> string
-virtual Microsoft.Build.Framework.SdkResolverContext.SolutionFilePath.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.State.get -> object
-virtual Microsoft.Build.Framework.SdkResolverContext.State.set -> void
-virtual Microsoft.Build.Framework.SdkResult.AdditionalPaths.get -> System.Collections.Generic.IList<string>
-virtual Microsoft.Build.Framework.SdkResult.AdditionalPaths.set -> void
-virtual Microsoft.Build.Framework.SdkResult.ItemsToAdd.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem>
-virtual Microsoft.Build.Framework.SdkResult.ItemsToAdd.set -> void
-virtual Microsoft.Build.Framework.SdkResult.Path.get -> string
-virtual Microsoft.Build.Framework.SdkResult.Path.set -> void
-virtual Microsoft.Build.Framework.SdkResult.PropertiesToAdd.get -> System.Collections.Generic.IDictionary<string, string>
-virtual Microsoft.Build.Framework.SdkResult.PropertiesToAdd.set -> void
-virtual Microsoft.Build.Framework.SdkResult.SdkReference.get -> Microsoft.Build.Framework.SdkReference
-virtual Microsoft.Build.Framework.SdkResult.SdkReference.set -> void
-virtual Microsoft.Build.Framework.SdkResult.Success.get -> bool
-virtual Microsoft.Build.Framework.SdkResult.Success.set -> void
-virtual Microsoft.Build.Framework.SdkResult.Version.get -> string
-virtual Microsoft.Build.Framework.SdkResult.Version.set -> void
-virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(string path, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
-virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(System.Collections.Generic.IEnumerable<string> paths, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd = null, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd = null, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
-virtual Microsoft.Build.Framework.XamlTypes.BaseProperty.BeginInit() -> void
-virtual Microsoft.Build.Framework.XamlTypes.BaseProperty.EndInit() -> void
\ No newline at end of file
diff --git a/src/Framework/PublicAPI/net/PublicAPI.Unshipped.txt b/src/Framework/PublicAPI/net/PublicAPI.Unshipped.txt
deleted file mode 100644
index e69de29bb2d..00000000000
diff --git a/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt
deleted file mode 100644
index fa0dac7c7ef..00000000000
--- a/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,632 +0,0 @@
-abstract Microsoft.Build.Framework.SdkLogger.LogMessage(string message, Microsoft.Build.Framework.MessageImportance messageImportance = Microsoft.Build.Framework.MessageImportance.Low) -> void
-abstract Microsoft.Build.Framework.SdkResolver.Name.get -> string
-abstract Microsoft.Build.Framework.SdkResolver.Priority.get -> int
-abstract Microsoft.Build.Framework.SdkResolver.Resolve(Microsoft.Build.Framework.SdkReference sdkReference, Microsoft.Build.Framework.SdkResolverContext resolverContext, Microsoft.Build.Framework.SdkResultFactory factory) -> Microsoft.Build.Framework.SdkResult
-abstract Microsoft.Build.Framework.SdkResultFactory.IndicateFailure(System.Collections.Generic.IEnumerable<string> errors, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
-abstract Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(string path, string version, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
-const Microsoft.Build.Framework.BuildEventContext.InvalidEvaluationId = -1 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidNodeId = -2 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidProjectContextId = -2 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidProjectInstanceId = -1 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidSubmissionId = -1 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidTargetId = -1 -> int
-const Microsoft.Build.Framework.BuildEventContext.InvalidTaskId = -1 -> int
-const Microsoft.Build.Framework.EngineServices.Version1 = 1 -> int
-const Microsoft.Build.Framework.ProjectStartedEventArgs.InvalidProjectId = -1 -> int
-Microsoft.Build.Framework.AnyEventHandler
-Microsoft.Build.Framework.BuildEngineResult
-Microsoft.Build.Framework.BuildEngineResult.BuildEngineResult() -> void
-Microsoft.Build.Framework.BuildEngineResult.BuildEngineResult(bool result, System.Collections.Generic.List<System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.ITaskItem[]>> targetOutputsPerProject) -> void
-Microsoft.Build.Framework.BuildEngineResult.Result.get -> bool
-Microsoft.Build.Framework.BuildEngineResult.TargetOutputsPerProject.get -> System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.ITaskItem[]>>
-Microsoft.Build.Framework.BuildErrorEventArgs
-Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs() -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, string helpLink, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.BuildErrorEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.Code.get -> string
-Microsoft.Build.Framework.BuildErrorEventArgs.ColumnNumber.get -> int
-Microsoft.Build.Framework.BuildErrorEventArgs.EndColumnNumber.get -> int
-Microsoft.Build.Framework.BuildErrorEventArgs.EndLineNumber.get -> int
-Microsoft.Build.Framework.BuildErrorEventArgs.File.get -> string
-Microsoft.Build.Framework.BuildErrorEventArgs.HelpLink.get -> string
-Microsoft.Build.Framework.BuildErrorEventArgs.LineNumber.get -> int
-Microsoft.Build.Framework.BuildErrorEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.BuildErrorEventArgs.ProjectFile.set -> void
-Microsoft.Build.Framework.BuildErrorEventArgs.Subcategory.get -> string
-Microsoft.Build.Framework.BuildErrorEventHandler
-Microsoft.Build.Framework.BuildEventArgs
-Microsoft.Build.Framework.BuildEventArgs.BuildEventArgs() -> void
-Microsoft.Build.Framework.BuildEventArgs.BuildEventArgs(string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.BuildEventArgs.BuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildEventArgs.BuildEventContext.get -> Microsoft.Build.Framework.BuildEventContext
-Microsoft.Build.Framework.BuildEventArgs.BuildEventContext.set -> void
-Microsoft.Build.Framework.BuildEventArgs.HelpKeyword.get -> string
-Microsoft.Build.Framework.BuildEventArgs.RawMessage.get -> string
-Microsoft.Build.Framework.BuildEventArgs.RawMessage.set -> void
-Microsoft.Build.Framework.BuildEventArgs.RawTimestamp.get -> System.DateTime
-Microsoft.Build.Framework.BuildEventArgs.RawTimestamp.set -> void
-Microsoft.Build.Framework.BuildEventArgs.SenderName.get -> string
-Microsoft.Build.Framework.BuildEventArgs.ThreadId.get -> int
-Microsoft.Build.Framework.BuildEventArgs.Timestamp.get -> System.DateTime
-Microsoft.Build.Framework.BuildEventContext
-Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int nodeId, int projectInstanceId, int projectContextId, int targetId, int taskId) -> void
-Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int nodeId, int targetId, int projectContextId, int taskId) -> void
-Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int submissionId, int nodeId, int evaluationId, int projectInstanceId, int projectContextId, int targetId, int taskId) -> void
-Microsoft.Build.Framework.BuildEventContext.BuildEventContext(int submissionId, int nodeId, int projectInstanceId, int projectContextId, int targetId, int taskId) -> void
-Microsoft.Build.Framework.BuildEventContext.BuildRequestId.get -> long
-Microsoft.Build.Framework.BuildEventContext.EvaluationId.get -> int
-Microsoft.Build.Framework.BuildEventContext.NodeId.get -> int
-Microsoft.Build.Framework.BuildEventContext.ProjectContextId.get -> int
-Microsoft.Build.Framework.BuildEventContext.ProjectInstanceId.get -> int
-Microsoft.Build.Framework.BuildEventContext.SubmissionId.get -> int
-Microsoft.Build.Framework.BuildEventContext.TargetId.get -> int
-Microsoft.Build.Framework.BuildEventContext.TaskId.get -> int
-Microsoft.Build.Framework.BuildFinishedEventArgs
-Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs() -> void
-Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs(string message, string helpKeyword, bool succeeded) -> void
-Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs(string message, string helpKeyword, bool succeeded, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildFinishedEventArgs.BuildFinishedEventArgs(string message, string helpKeyword, bool succeeded, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildFinishedEventArgs.Succeeded.get -> bool
-Microsoft.Build.Framework.BuildFinishedEventHandler
-Microsoft.Build.Framework.BuildMessageEventArgs
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs() -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.BuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.Code.get -> string
-Microsoft.Build.Framework.BuildMessageEventArgs.ColumnNumber.get -> int
-Microsoft.Build.Framework.BuildMessageEventArgs.EndColumnNumber.get -> int
-Microsoft.Build.Framework.BuildMessageEventArgs.EndLineNumber.get -> int
-Microsoft.Build.Framework.BuildMessageEventArgs.File.get -> string
-Microsoft.Build.Framework.BuildMessageEventArgs.Importance.get -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Framework.BuildMessageEventArgs.LineNumber.get -> int
-Microsoft.Build.Framework.BuildMessageEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.BuildMessageEventArgs.ProjectFile.set -> void
-Microsoft.Build.Framework.BuildMessageEventArgs.Subcategory.get -> string
-Microsoft.Build.Framework.BuildMessageEventHandler
-Microsoft.Build.Framework.BuildStartedEventArgs
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildEnvironment.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs() -> void
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword) -> void
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword, System.Collections.Generic.IDictionary<string, string> environmentOfBuild) -> void
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildStartedEventArgs.BuildStartedEventArgs(string message, string helpKeyword, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildStartedEventHandler
-Microsoft.Build.Framework.BuildStatusEventArgs
-Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs() -> void
-Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs(string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildStatusEventArgs.BuildStatusEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildStatusEventHandler
-Microsoft.Build.Framework.BuildWarningEventArgs
-Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs() -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, string helpLink, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.BuildWarningEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.Code.get -> string
-Microsoft.Build.Framework.BuildWarningEventArgs.ColumnNumber.get -> int
-Microsoft.Build.Framework.BuildWarningEventArgs.EndColumnNumber.get -> int
-Microsoft.Build.Framework.BuildWarningEventArgs.EndLineNumber.get -> int
-Microsoft.Build.Framework.BuildWarningEventArgs.File.get -> string
-Microsoft.Build.Framework.BuildWarningEventArgs.HelpLink.get -> string
-Microsoft.Build.Framework.BuildWarningEventArgs.LineNumber.get -> int
-Microsoft.Build.Framework.BuildWarningEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.BuildWarningEventArgs.ProjectFile.set -> void
-Microsoft.Build.Framework.BuildWarningEventArgs.Subcategory.get -> string
-Microsoft.Build.Framework.BuildWarningEventHandler
-Microsoft.Build.Framework.CriticalBuildMessageEventArgs
-Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs() -> void
-Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.CriticalBuildMessageEventArgs.CriticalBuildMessageEventArgs(string subcategory, string code, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.CustomBuildEventArgs
-Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs() -> void
-Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs(string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.CustomBuildEventArgs.CustomBuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.CustomBuildEventHandler
-Microsoft.Build.Framework.EngineServices
-Microsoft.Build.Framework.EngineServices.EngineServices() -> void
-Microsoft.Build.Framework.EnvironmentVariableReadEventArgs
-Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableName.get -> string
-Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableName.set -> void
-Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableReadEventArgs() -> void
-Microsoft.Build.Framework.EnvironmentVariableReadEventArgs.EnvironmentVariableReadEventArgs(string environmentVariableName, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ExternalProjectFinishedEventArgs() -> void
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ExternalProjectFinishedEventArgs(string message, string helpKeyword, string senderName, string projectFile, bool succeeded) -> void
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ExternalProjectFinishedEventArgs(string message, string helpKeyword, string senderName, string projectFile, bool succeeded, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ExternalProjectFinishedEventArgs.Succeeded.get -> bool
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ExternalProjectStartedEventArgs() -> void
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ExternalProjectStartedEventArgs(string message, string helpKeyword, string senderName, string projectFile, string targetNames) -> void
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ExternalProjectStartedEventArgs(string message, string helpKeyword, string senderName, string projectFile, string targetNames, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ExternalProjectStartedEventArgs.TargetNames.get -> string
-Microsoft.Build.Framework.IBuildEngine
-Microsoft.Build.Framework.IBuildEngine.BuildProjectFile(string projectFileName, string[] targetNames, System.Collections.IDictionary globalProperties, System.Collections.IDictionary targetOutputs) -> bool
-Microsoft.Build.Framework.IBuildEngine.ColumnNumberOfTaskNode.get -> int
-Microsoft.Build.Framework.IBuildEngine.ContinueOnError.get -> bool
-Microsoft.Build.Framework.IBuildEngine.LineNumberOfTaskNode.get -> int
-Microsoft.Build.Framework.IBuildEngine.LogCustomEvent(Microsoft.Build.Framework.CustomBuildEventArgs e) -> void
-Microsoft.Build.Framework.IBuildEngine.LogErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs e) -> void
-Microsoft.Build.Framework.IBuildEngine.LogMessageEvent(Microsoft.Build.Framework.BuildMessageEventArgs e) -> void
-Microsoft.Build.Framework.IBuildEngine.LogWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs e) -> void
-Microsoft.Build.Framework.IBuildEngine.ProjectFileOfTaskNode.get -> string
-Microsoft.Build.Framework.IBuildEngine10
-Microsoft.Build.Framework.IBuildEngine10.EngineServices.get -> Microsoft.Build.Framework.EngineServices
-Microsoft.Build.Framework.IBuildEngine2
-Microsoft.Build.Framework.IBuildEngine2.BuildProjectFile(string projectFileName, string[] targetNames, System.Collections.IDictionary globalProperties, System.Collections.IDictionary targetOutputs, string toolsVersion) -> bool
-Microsoft.Build.Framework.IBuildEngine2.BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion) -> bool
-Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes.get -> bool
-Microsoft.Build.Framework.IBuildEngine3
-Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.Generic.IList<string>[] removeGlobalProperties, string[] toolsVersion, bool returnTargetOutputs) -> Microsoft.Build.Framework.BuildEngineResult
-Microsoft.Build.Framework.IBuildEngine3.Reacquire() -> void
-Microsoft.Build.Framework.IBuildEngine3.Yield() -> void
-Microsoft.Build.Framework.IBuildEngine4
-Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime) -> object
-Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(object key, object obj, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime, bool allowEarlyCollection) -> void
-Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime) -> object
-Microsoft.Build.Framework.IBuildEngine5
-Microsoft.Build.Framework.IBuildEngine5.LogTelemetry(string eventName, System.Collections.Generic.IDictionary<string, string> properties) -> void
-Microsoft.Build.Framework.IBuildEngine6
-Microsoft.Build.Framework.IBuildEngine6.GetGlobalProperties() -> System.Collections.Generic.IReadOnlyDictionary<string, string>
-Microsoft.Build.Framework.IBuildEngine7
-Microsoft.Build.Framework.IBuildEngine7.AllowFailureWithoutError.get -> bool
-Microsoft.Build.Framework.IBuildEngine7.AllowFailureWithoutError.set -> void
-Microsoft.Build.Framework.IBuildEngine8
-Microsoft.Build.Framework.IBuildEngine8.ShouldTreatWarningAsError(string warningCode) -> bool
-Microsoft.Build.Framework.IBuildEngine9
-Microsoft.Build.Framework.IBuildEngine9.ReleaseCores(int coresToRelease) -> void
-Microsoft.Build.Framework.IBuildEngine9.RequestCores(int requestedCores) -> int
-Microsoft.Build.Framework.ICancelableTask
-Microsoft.Build.Framework.ICancelableTask.Cancel() -> void
-Microsoft.Build.Framework.IEventRedirector
-Microsoft.Build.Framework.IEventRedirector.ForwardEvent(Microsoft.Build.Framework.BuildEventArgs buildEvent) -> void
-Microsoft.Build.Framework.IEventSource
-Microsoft.Build.Framework.IEventSource.AnyEventRaised -> Microsoft.Build.Framework.AnyEventHandler
-Microsoft.Build.Framework.IEventSource.BuildFinished -> Microsoft.Build.Framework.BuildFinishedEventHandler
-Microsoft.Build.Framework.IEventSource.BuildStarted -> Microsoft.Build.Framework.BuildStartedEventHandler
-Microsoft.Build.Framework.IEventSource.CustomEventRaised -> Microsoft.Build.Framework.CustomBuildEventHandler
-Microsoft.Build.Framework.IEventSource.ErrorRaised -> Microsoft.Build.Framework.BuildErrorEventHandler
-Microsoft.Build.Framework.IEventSource.MessageRaised -> Microsoft.Build.Framework.BuildMessageEventHandler
-Microsoft.Build.Framework.IEventSource.ProjectFinished -> Microsoft.Build.Framework.ProjectFinishedEventHandler
-Microsoft.Build.Framework.IEventSource.ProjectStarted -> Microsoft.Build.Framework.ProjectStartedEventHandler
-Microsoft.Build.Framework.IEventSource.StatusEventRaised -> Microsoft.Build.Framework.BuildStatusEventHandler
-Microsoft.Build.Framework.IEventSource.TargetFinished -> Microsoft.Build.Framework.TargetFinishedEventHandler
-Microsoft.Build.Framework.IEventSource.TargetStarted -> Microsoft.Build.Framework.TargetStartedEventHandler
-Microsoft.Build.Framework.IEventSource.TaskFinished -> Microsoft.Build.Framework.TaskFinishedEventHandler
-Microsoft.Build.Framework.IEventSource.TaskStarted -> Microsoft.Build.Framework.TaskStartedEventHandler
-Microsoft.Build.Framework.IEventSource.WarningRaised -> Microsoft.Build.Framework.BuildWarningEventHandler
-Microsoft.Build.Framework.IEventSource2
-Microsoft.Build.Framework.IEventSource2.TelemetryLogged -> Microsoft.Build.Framework.TelemetryEventHandler
-Microsoft.Build.Framework.IEventSource3
-Microsoft.Build.Framework.IEventSource3.IncludeEvaluationMetaprojects() -> void
-Microsoft.Build.Framework.IEventSource3.IncludeEvaluationProfiles() -> void
-Microsoft.Build.Framework.IEventSource3.IncludeTaskInputs() -> void
-Microsoft.Build.Framework.IEventSource4
-Microsoft.Build.Framework.IEventSource4.IncludeEvaluationPropertiesAndItems() -> void
-Microsoft.Build.Framework.IForwardingLogger
-Microsoft.Build.Framework.IForwardingLogger.BuildEventRedirector.get -> Microsoft.Build.Framework.IEventRedirector
-Microsoft.Build.Framework.IForwardingLogger.BuildEventRedirector.set -> void
-Microsoft.Build.Framework.IForwardingLogger.NodeId.get -> int
-Microsoft.Build.Framework.IForwardingLogger.NodeId.set -> void
-Microsoft.Build.Framework.IGeneratedTask
-Microsoft.Build.Framework.IGeneratedTask.GetPropertyValue(Microsoft.Build.Framework.TaskPropertyInfo property) -> object
-Microsoft.Build.Framework.IGeneratedTask.SetPropertyValue(Microsoft.Build.Framework.TaskPropertyInfo property, object value) -> void
-Microsoft.Build.Framework.ILogger
-Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.Framework.ILogger.Parameters.get -> string
-Microsoft.Build.Framework.ILogger.Parameters.set -> void
-Microsoft.Build.Framework.ILogger.Shutdown() -> void
-Microsoft.Build.Framework.ILogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.ILogger.Verbosity.set -> void
-Microsoft.Build.Framework.INodeLogger
-Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
-Microsoft.Build.Framework.IProjectElement
-Microsoft.Build.Framework.IProjectElement.ElementName.get -> string
-Microsoft.Build.Framework.IProjectElement.OuterElement.get -> string
-Microsoft.Build.Framework.ITask
-Microsoft.Build.Framework.ITask.BuildEngine.get -> Microsoft.Build.Framework.IBuildEngine
-Microsoft.Build.Framework.ITask.BuildEngine.set -> void
-Microsoft.Build.Framework.ITask.Execute() -> bool
-Microsoft.Build.Framework.ITask.HostObject.get -> Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.Framework.ITask.HostObject.set -> void
-Microsoft.Build.Framework.ITaskFactory
-Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask task) -> void
-Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> Microsoft.Build.Framework.ITask
-Microsoft.Build.Framework.ITaskFactory.FactoryName.get -> string
-Microsoft.Build.Framework.ITaskFactory.GetTaskParameters() -> Microsoft.Build.Framework.TaskPropertyInfo[]
-Microsoft.Build.Framework.ITaskFactory.Initialize(string taskName, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
-Microsoft.Build.Framework.ITaskFactory.TaskType.get -> System.Type
-Microsoft.Build.Framework.ITaskFactory2
-Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary<string, string> taskIdentityParameters) -> Microsoft.Build.Framework.ITask
-Microsoft.Build.Framework.ITaskFactory2.Initialize(string taskName, System.Collections.Generic.IDictionary<string, string> factoryIdentityParameters, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
-Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata() -> System.Collections.IDictionary
-Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem destinationItem) -> void
-Microsoft.Build.Framework.ITaskItem.GetMetadata(string metadataName) -> string
-Microsoft.Build.Framework.ITaskItem.ItemSpec.get -> string
-Microsoft.Build.Framework.ITaskItem.ItemSpec.set -> void
-Microsoft.Build.Framework.ITaskItem.MetadataCount.get -> int
-Microsoft.Build.Framework.ITaskItem.MetadataNames.get -> System.Collections.ICollection
-Microsoft.Build.Framework.ITaskItem.RemoveMetadata(string metadataName) -> void
-Microsoft.Build.Framework.ITaskItem.SetMetadata(string metadataName, string metadataValue) -> void
-Microsoft.Build.Framework.ITaskItem2
-Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped() -> System.Collections.IDictionary
-Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped.get -> string
-Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped.set -> void
-Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(string metadataName) -> string
-Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(string metadataName, string metadataValue) -> void
-Microsoft.Build.Framework.LazyFormattedBuildEventArgs
-Microsoft.Build.Framework.LazyFormattedBuildEventArgs.LazyFormattedBuildEventArgs() -> void
-Microsoft.Build.Framework.LazyFormattedBuildEventArgs.LazyFormattedBuildEventArgs(string message, string helpKeyword, string senderName) -> void
-Microsoft.Build.Framework.LazyFormattedBuildEventArgs.LazyFormattedBuildEventArgs(string message, string helpKeyword, string senderName, System.DateTime eventTimestamp, params object[] messageArgs) -> void
-Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute
-Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute.LoadInSeparateAppDomainAttribute() -> void
-Microsoft.Build.Framework.LoggerException
-Microsoft.Build.Framework.LoggerException.ErrorCode.get -> string
-Microsoft.Build.Framework.LoggerException.HelpKeyword.get -> string
-Microsoft.Build.Framework.LoggerException.LoggerException() -> void
-Microsoft.Build.Framework.LoggerException.LoggerException(string message) -> void
-Microsoft.Build.Framework.LoggerException.LoggerException(string message, System.Exception innerException) -> void
-Microsoft.Build.Framework.LoggerException.LoggerException(string message, System.Exception innerException, string errorCode, string helpKeyword) -> void
-Microsoft.Build.Framework.LoggerException.LoggerException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.LoggerVerbosity.Detailed = 3 -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.LoggerVerbosity.Diagnostic = 4 -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.LoggerVerbosity.Minimal = 1 -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.LoggerVerbosity.Normal = 2 -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.LoggerVerbosity.Quiet = 0 -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Framework.MessageImportance.High = 0 -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Framework.MessageImportance.Low = 2 -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Framework.MessageImportance.Normal = 1 -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Framework.MetaprojectGeneratedEventArgs
-Microsoft.Build.Framework.MetaprojectGeneratedEventArgs.MetaprojectGeneratedEventArgs(string metaprojectXml, string metaprojectPath, string message) -> void
-Microsoft.Build.Framework.MetaprojectGeneratedEventArgs.metaprojectXml -> string
-Microsoft.Build.Framework.OutputAttribute
-Microsoft.Build.Framework.OutputAttribute.OutputAttribute() -> void
-Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.ElementDescription.get -> string
-Microsoft.Build.Framework.Profiler.EvaluationLocation.ElementName.get -> string
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation() -> void
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation(long id, long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationPassDescription, string file, int? line, string elementName, string elementDescription, Microsoft.Build.Framework.Profiler.EvaluationLocationKind kind) -> void
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationPassDescription, string file, int? line, string elementName, string elementDescription, Microsoft.Build.Framework.Profiler.EvaluationLocationKind kind) -> void
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationLocation(Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationPassDescription, string file, int? line, string elementName, string elementDescription, Microsoft.Build.Framework.Profiler.EvaluationLocationKind kind) -> void
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationPass.get -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationLocation.EvaluationPassDescription.get -> string
-Microsoft.Build.Framework.Profiler.EvaluationLocation.File.get -> string
-Microsoft.Build.Framework.Profiler.EvaluationLocation.Id.get -> long
-Microsoft.Build.Framework.Profiler.EvaluationLocation.IsEvaluationPass.get -> bool
-Microsoft.Build.Framework.Profiler.EvaluationLocation.Kind.get -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
-Microsoft.Build.Framework.Profiler.EvaluationLocation.Line.get -> int?
-Microsoft.Build.Framework.Profiler.EvaluationLocation.ParentId.get -> long?
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithEvaluationPass(Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string passDescription = null) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithFile(string file) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithFileLineAndCondition(string file, int? line, string condition) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithFileLineAndElement(string file, int? line, Microsoft.Build.Framework.IProjectElement element) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithGlob(string globDescription) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocation.WithParentId(long? parentId) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-Microsoft.Build.Framework.Profiler.EvaluationLocationKind
-Microsoft.Build.Framework.Profiler.EvaluationLocationKind.Condition = 1 -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
-Microsoft.Build.Framework.Profiler.EvaluationLocationKind.Element = 0 -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
-Microsoft.Build.Framework.Profiler.EvaluationLocationKind.Glob = 2 -> Microsoft.Build.Framework.Profiler.EvaluationLocationKind
-Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.InitialProperties = 2 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.ItemDefinitionGroups = 4 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.Items = 5 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.LazyItems = 6 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.Properties = 3 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.Targets = 8 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.TotalEvaluation = 0 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.TotalGlobbing = 1 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.EvaluationPass.UsingTasks = 7 -> Microsoft.Build.Framework.Profiler.EvaluationPass
-Microsoft.Build.Framework.Profiler.ProfiledLocation
-Microsoft.Build.Framework.Profiler.ProfiledLocation.ExclusiveTime.get -> System.TimeSpan
-Microsoft.Build.Framework.Profiler.ProfiledLocation.InclusiveTime.get -> System.TimeSpan
-Microsoft.Build.Framework.Profiler.ProfiledLocation.NumberOfHits.get -> int
-Microsoft.Build.Framework.Profiler.ProfiledLocation.ProfiledLocation() -> void
-Microsoft.Build.Framework.Profiler.ProfiledLocation.ProfiledLocation(System.TimeSpan inclusiveTime, System.TimeSpan exclusiveTime, int numberOfHits) -> void
-Microsoft.Build.Framework.Profiler.ProfilerResult
-Microsoft.Build.Framework.Profiler.ProfilerResult.ProfiledLocations.get -> System.Collections.Generic.IReadOnlyDictionary<Microsoft.Build.Framework.Profiler.EvaluationLocation, Microsoft.Build.Framework.Profiler.ProfiledLocation>
-Microsoft.Build.Framework.Profiler.ProfilerResult.ProfilerResult() -> void
-Microsoft.Build.Framework.Profiler.ProfilerResult.ProfilerResult(System.Collections.Generic.IDictionary<Microsoft.Build.Framework.Profiler.EvaluationLocation, Microsoft.Build.Framework.Profiler.ProfiledLocation> profiledLocations) -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.GlobalProperties.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.GlobalProperties.set -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Items.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Items.set -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProfilerResult.get -> Microsoft.Build.Framework.Profiler.ProfilerResult?
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProfilerResult.set -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectEvaluationFinishedEventArgs() -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectEvaluationFinishedEventArgs(string message, params object[] messageArgs) -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.ProjectFile.set -> void
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Properties.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.ProjectEvaluationFinishedEventArgs.Properties.set -> void
-Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs
-Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectEvaluationStartedEventArgs() -> void
-Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectEvaluationStartedEventArgs(string message, params object[] messageArgs) -> void
-Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ProjectEvaluationStartedEventArgs.ProjectFile.set -> void
-Microsoft.Build.Framework.ProjectFinishedEventArgs
-Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFinishedEventArgs() -> void
-Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFinishedEventArgs(string message, string helpKeyword, string projectFile, bool succeeded) -> void
-Microsoft.Build.Framework.ProjectFinishedEventArgs.ProjectFinishedEventArgs(string message, string helpKeyword, string projectFile, bool succeeded, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.ProjectFinishedEventArgs.Succeeded.get -> bool
-Microsoft.Build.Framework.ProjectFinishedEventHandler
-Microsoft.Build.Framework.ProjectImportedEventArgs
-Microsoft.Build.Framework.ProjectImportedEventArgs.ImportedProjectFile.get -> string
-Microsoft.Build.Framework.ProjectImportedEventArgs.ImportedProjectFile.set -> void
-Microsoft.Build.Framework.ProjectImportedEventArgs.ImportIgnored.get -> bool
-Microsoft.Build.Framework.ProjectImportedEventArgs.ImportIgnored.set -> void
-Microsoft.Build.Framework.ProjectImportedEventArgs.ProjectImportedEventArgs() -> void
-Microsoft.Build.Framework.ProjectImportedEventArgs.ProjectImportedEventArgs(int lineNumber, int columnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Framework.ProjectImportedEventArgs.UnexpandedProject.get -> string
-Microsoft.Build.Framework.ProjectImportedEventArgs.UnexpandedProject.set -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs
-Microsoft.Build.Framework.ProjectStartedEventArgs.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Framework.ProjectStartedEventArgs.Items.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.ProjectStartedEventArgs.ParentProjectBuildEventContext.get -> Microsoft.Build.Framework.BuildEventContext
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectId.get -> int
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs() -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(int projectId, string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, Microsoft.Build.Framework.BuildEventContext parentBuildEventContext) -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(int projectId, string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, Microsoft.Build.Framework.BuildEventContext parentBuildEventContext, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion) -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(int projectId, string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, Microsoft.Build.Framework.BuildEventContext parentBuildEventContext, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items) -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.ProjectStartedEventArgs(string message, string helpKeyword, string projectFile, string targetNames, System.Collections.IEnumerable properties, System.Collections.IEnumerable items, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.ProjectStartedEventArgs.Properties.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.ProjectStartedEventArgs.TargetNames.get -> string
-Microsoft.Build.Framework.ProjectStartedEventArgs.ToolsVersion.get -> string
-Microsoft.Build.Framework.ProjectStartedEventHandler
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyInitialValueSetEventArgs() -> void
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyInitialValueSetEventArgs(string propertyName, string propertyValue, string propertySource, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyName.get -> string
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyName.set -> void
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertySource.get -> string
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertySource.set -> void
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyValue.get -> string
-Microsoft.Build.Framework.PropertyInitialValueSetEventArgs.PropertyValue.set -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.Location.get -> string
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.Location.set -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.NewValue.get -> string
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.NewValue.set -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PreviousValue.get -> string
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PreviousValue.set -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyName.get -> string
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyName.set -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyReassignmentEventArgs() -> void
-Microsoft.Build.Framework.PropertyReassignmentEventArgs.PropertyReassignmentEventArgs(string propertyName, string previousValue, string newValue, string location, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
-Microsoft.Build.Framework.RegisteredTaskObjectLifetime
-Microsoft.Build.Framework.RegisteredTaskObjectLifetime.AppDomain = 1 -> Microsoft.Build.Framework.RegisteredTaskObjectLifetime
-Microsoft.Build.Framework.RegisteredTaskObjectLifetime.Build = 0 -> Microsoft.Build.Framework.RegisteredTaskObjectLifetime
-Microsoft.Build.Framework.RequiredAttribute
-Microsoft.Build.Framework.RequiredAttribute.RequiredAttribute() -> void
-Microsoft.Build.Framework.RequiredRuntimeAttribute
-Microsoft.Build.Framework.RequiredRuntimeAttribute.RequiredRuntimeAttribute(string runtimeVersion) -> void
-Microsoft.Build.Framework.RequiredRuntimeAttribute.RuntimeVersion.get -> string
-Microsoft.Build.Framework.RunInMTAAttribute
-Microsoft.Build.Framework.RunInMTAAttribute.RunInMTAAttribute() -> void
-Microsoft.Build.Framework.RunInSTAAttribute
-Microsoft.Build.Framework.RunInSTAAttribute.RunInSTAAttribute() -> void
-Microsoft.Build.Framework.SdkLogger
-Microsoft.Build.Framework.SdkLogger.SdkLogger() -> void
-Microsoft.Build.Framework.SdkReference
-Microsoft.Build.Framework.SdkReference.Equals(Microsoft.Build.Framework.SdkReference other) -> bool
-Microsoft.Build.Framework.SdkReference.MinimumVersion.get -> string
-Microsoft.Build.Framework.SdkReference.Name.get -> string
-Microsoft.Build.Framework.SdkReference.SdkReference(string name, string version, string minimumVersion) -> void
-Microsoft.Build.Framework.SdkReference.Version.get -> string
-Microsoft.Build.Framework.SdkResolver
-Microsoft.Build.Framework.SdkResolver.SdkResolver() -> void
-Microsoft.Build.Framework.SdkResolverContext
-Microsoft.Build.Framework.SdkResolverContext.SdkResolverContext() -> void
-Microsoft.Build.Framework.SdkResult
-Microsoft.Build.Framework.SdkResult.SdkResult() -> void
-Microsoft.Build.Framework.SdkResultFactory
-Microsoft.Build.Framework.SdkResultFactory.SdkResultFactory() -> void
-Microsoft.Build.Framework.SdkResultItem
-Microsoft.Build.Framework.SdkResultItem.ItemSpec.get -> string
-Microsoft.Build.Framework.SdkResultItem.ItemSpec.set -> void
-Microsoft.Build.Framework.SdkResultItem.Metadata.get -> System.Collections.Generic.Dictionary<string, string>
-Microsoft.Build.Framework.SdkResultItem.SdkResultItem() -> void
-Microsoft.Build.Framework.SdkResultItem.SdkResultItem(string itemSpec, System.Collections.Generic.Dictionary<string, string> metadata) -> void
-Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetBuiltReason.AfterTargets = 3 -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetBuiltReason.BeforeTargets = 1 -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetBuiltReason.DependsOn = 2 -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetBuiltReason.None = 0 -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetFinishedEventArgs
-Microsoft.Build.Framework.TargetFinishedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.TargetFinishedEventArgs.Succeeded.get -> bool
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFile.get -> string
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs() -> void
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, bool succeeded) -> void
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, bool succeeded, System.Collections.IEnumerable targetOutputs) -> void
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetFinishedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, bool succeeded, System.DateTime eventTimestamp, System.Collections.IEnumerable targetOutputs) -> void
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetName.get -> string
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetOutputs.get -> System.Collections.IEnumerable
-Microsoft.Build.Framework.TargetFinishedEventArgs.TargetOutputs.set -> void
-Microsoft.Build.Framework.TargetFinishedEventHandler
-Microsoft.Build.Framework.TargetSkippedEventArgs
-Microsoft.Build.Framework.TargetSkippedEventArgs.BuildReason.get -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetSkippedEventArgs.BuildReason.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.Condition.get -> string
-Microsoft.Build.Framework.TargetSkippedEventArgs.Condition.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.EvaluatedCondition.get -> string
-Microsoft.Build.Framework.TargetSkippedEventArgs.EvaluatedCondition.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.OriginalBuildEventContext.get -> Microsoft.Build.Framework.BuildEventContext
-Microsoft.Build.Framework.TargetSkippedEventArgs.OriginalBuildEventContext.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.OriginallySucceeded.get -> bool
-Microsoft.Build.Framework.TargetSkippedEventArgs.OriginallySucceeded.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.ParentTarget.get -> string
-Microsoft.Build.Framework.TargetSkippedEventArgs.ParentTarget.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.SkipReason.get -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkippedEventArgs.SkipReason.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetFile.get -> string
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetFile.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetName.get -> string
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetName.set -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetSkippedEventArgs() -> void
-Microsoft.Build.Framework.TargetSkippedEventArgs.TargetSkippedEventArgs(string message, params object[] messageArgs) -> void
-Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkipReason.ConditionWasFalse = 4 -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkipReason.None = 0 -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkipReason.OutputsUpToDate = 3 -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkipReason.PreviouslyBuiltSuccessfully = 1 -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetSkipReason.PreviouslyBuiltUnsuccessfully = 2 -> Microsoft.Build.Framework.TargetSkipReason
-Microsoft.Build.Framework.TargetStartedEventArgs
-Microsoft.Build.Framework.TargetStartedEventArgs.BuildReason.get -> Microsoft.Build.Framework.TargetBuiltReason
-Microsoft.Build.Framework.TargetStartedEventArgs.ParentTarget.get -> string
-Microsoft.Build.Framework.TargetStartedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetFile.get -> string
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetName.get -> string
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs() -> void
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile) -> void
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, string parentTarget, Microsoft.Build.Framework.TargetBuiltReason buildReason, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TargetStartedEventArgs.TargetStartedEventArgs(string message, string helpKeyword, string targetName, string projectFile, string targetFile, string parentTarget, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TargetStartedEventHandler
-Microsoft.Build.Framework.TaskCommandLineEventArgs
-Microsoft.Build.Framework.TaskCommandLineEventArgs.CommandLine.get -> string
-Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskCommandLineEventArgs() -> void
-Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskCommandLineEventArgs(string commandLine, string taskName, Microsoft.Build.Framework.MessageImportance importance) -> void
-Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskCommandLineEventArgs(string commandLine, string taskName, Microsoft.Build.Framework.MessageImportance importance, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TaskCommandLineEventArgs.TaskName.get -> string
-Microsoft.Build.Framework.TaskFinishedEventArgs
-Microsoft.Build.Framework.TaskFinishedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.TaskFinishedEventArgs.Succeeded.get -> bool
-Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFile.get -> string
-Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFinishedEventArgs() -> void
-Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFinishedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName, bool succeeded) -> void
-Microsoft.Build.Framework.TaskFinishedEventArgs.TaskFinishedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName, bool succeeded, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TaskFinishedEventArgs.TaskName.get -> string
-Microsoft.Build.Framework.TaskFinishedEventHandler
-Microsoft.Build.Framework.TaskParameterEventArgs
-Microsoft.Build.Framework.TaskParameterEventArgs.Items.get -> System.Collections.IList
-Microsoft.Build.Framework.TaskParameterEventArgs.ItemType.get -> string
-Microsoft.Build.Framework.TaskParameterEventArgs.Kind.get -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterEventArgs.LogItemMetadata.get -> bool
-Microsoft.Build.Framework.TaskParameterEventArgs.TaskParameterEventArgs(Microsoft.Build.Framework.TaskParameterMessageKind kind, string itemType, System.Collections.IList items, bool logItemMetadata, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.AddItem = 2 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.RemoveItem = 3 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.SkippedTargetInputs = 4 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.SkippedTargetOutputs = 5 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.TaskInput = 0 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskParameterMessageKind.TaskOutput = 1 -> Microsoft.Build.Framework.TaskParameterMessageKind
-Microsoft.Build.Framework.TaskPropertyInfo
-Microsoft.Build.Framework.TaskPropertyInfo.Log.get -> bool
-Microsoft.Build.Framework.TaskPropertyInfo.Log.set -> void
-Microsoft.Build.Framework.TaskPropertyInfo.LogItemMetadata.get -> bool
-Microsoft.Build.Framework.TaskPropertyInfo.LogItemMetadata.set -> void
-Microsoft.Build.Framework.TaskPropertyInfo.Name.get -> string
-Microsoft.Build.Framework.TaskPropertyInfo.Output.get -> bool
-Microsoft.Build.Framework.TaskPropertyInfo.PropertyType.get -> System.Type
-Microsoft.Build.Framework.TaskPropertyInfo.Required.get -> bool
-Microsoft.Build.Framework.TaskPropertyInfo.TaskPropertyInfo(string name, System.Type typeOfParameter, bool output, bool required) -> void
-Microsoft.Build.Framework.TaskStartedEventArgs
-Microsoft.Build.Framework.TaskStartedEventArgs.ColumnNumber.get -> int
-Microsoft.Build.Framework.TaskStartedEventArgs.LineNumber.get -> int
-Microsoft.Build.Framework.TaskStartedEventArgs.ProjectFile.get -> string
-Microsoft.Build.Framework.TaskStartedEventArgs.TaskFile.get -> string
-Microsoft.Build.Framework.TaskStartedEventArgs.TaskName.get -> string
-Microsoft.Build.Framework.TaskStartedEventArgs.TaskStartedEventArgs() -> void
-Microsoft.Build.Framework.TaskStartedEventArgs.TaskStartedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName) -> void
-Microsoft.Build.Framework.TaskStartedEventArgs.TaskStartedEventArgs(string message, string helpKeyword, string projectFile, string taskFile, string taskName, System.DateTime eventTimestamp) -> void
-Microsoft.Build.Framework.TaskStartedEventHandler
-Microsoft.Build.Framework.TelemetryEventArgs
-Microsoft.Build.Framework.TelemetryEventArgs.EventName.get -> string
-Microsoft.Build.Framework.TelemetryEventArgs.EventName.set -> void
-Microsoft.Build.Framework.TelemetryEventArgs.Properties.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Framework.TelemetryEventArgs.Properties.set -> void
-Microsoft.Build.Framework.TelemetryEventArgs.TelemetryEventArgs() -> void
-Microsoft.Build.Framework.TelemetryEventHandler
-Microsoft.Build.Framework.UninitializedPropertyReadEventArgs
-Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.PropertyName.get -> string
-Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.PropertyName.set -> void
-Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.UninitializedPropertyReadEventArgs() -> void
-Microsoft.Build.Framework.UninitializedPropertyReadEventArgs.UninitializedPropertyReadEventArgs(string propertyName, string message, string helpKeyword = null, string senderName = null, Microsoft.Build.Framework.MessageImportance importance = Microsoft.Build.Framework.MessageImportance.Low) -> void
-override Microsoft.Build.Framework.BuildEventContext.Equals(object obj) -> bool
-override Microsoft.Build.Framework.BuildEventContext.GetHashCode() -> int
-override Microsoft.Build.Framework.BuildEventContext.ToString() -> string
-override Microsoft.Build.Framework.LazyFormattedBuildEventArgs.Message.get -> string
-override Microsoft.Build.Framework.LoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
-override Microsoft.Build.Framework.Profiler.EvaluationLocation.Equals(object obj) -> bool
-override Microsoft.Build.Framework.Profiler.EvaluationLocation.GetHashCode() -> int
-override Microsoft.Build.Framework.Profiler.EvaluationLocation.ToString() -> string
-override Microsoft.Build.Framework.Profiler.ProfiledLocation.Equals(object obj) -> bool
-override Microsoft.Build.Framework.Profiler.ProfiledLocation.GetHashCode() -> int
-override Microsoft.Build.Framework.Profiler.ProfiledLocation.ToString() -> string
-override Microsoft.Build.Framework.Profiler.ProfilerResult.Equals(object obj) -> bool
-override Microsoft.Build.Framework.Profiler.ProfilerResult.GetHashCode() -> int
-override Microsoft.Build.Framework.ProjectFinishedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.ProjectStartedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.PropertyReassignmentEventArgs.Message.get -> string
-override Microsoft.Build.Framework.SdkReference.Equals(object obj) -> bool
-override Microsoft.Build.Framework.SdkReference.GetHashCode() -> int
-override Microsoft.Build.Framework.SdkReference.ToString() -> string
-override Microsoft.Build.Framework.SdkResultItem.Equals(object obj) -> bool
-override Microsoft.Build.Framework.SdkResultItem.GetHashCode() -> int
-override Microsoft.Build.Framework.TargetFinishedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.TargetSkippedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.TargetStartedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.TaskFinishedEventArgs.Message.get -> string
-override Microsoft.Build.Framework.TaskParameterEventArgs.Message.get -> string
-override Microsoft.Build.Framework.TaskStartedEventArgs.Message.get -> string
-static Microsoft.Build.Framework.BuildEventContext.Invalid.get -> Microsoft.Build.Framework.BuildEventContext
-static Microsoft.Build.Framework.BuildEventContext.operator !=(Microsoft.Build.Framework.BuildEventContext left, Microsoft.Build.Framework.BuildEventContext right) -> bool
-static Microsoft.Build.Framework.BuildEventContext.operator ==(Microsoft.Build.Framework.BuildEventContext left, Microsoft.Build.Framework.BuildEventContext right) -> bool
-static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForAggregatedGlob() -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForCondition(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationDescription, string file, int? line, string condition) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForGlob(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationDescription, string file, int? line, string globDescription) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-static Microsoft.Build.Framework.Profiler.EvaluationLocation.CreateLocationForProject(long? parentId, Microsoft.Build.Framework.Profiler.EvaluationPass evaluationPass, string evaluationDescription, string file, int? line, Microsoft.Build.Framework.IProjectElement element) -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-static Microsoft.Build.Framework.Profiler.EvaluationLocation.EmptyLocation.get -> Microsoft.Build.Framework.Profiler.EvaluationLocation
-static Microsoft.Build.Framework.SdkReference.TryParse(string sdk, out Microsoft.Build.Framework.SdkReference sdkReference) -> bool
-virtual Microsoft.Build.Framework.BuildEventArgs.Message.get -> string
-virtual Microsoft.Build.Framework.BuildEventArgs.Message.set -> void
-virtual Microsoft.Build.Framework.EngineServices.IsTaskInputLoggingEnabled.get -> bool
-virtual Microsoft.Build.Framework.EngineServices.LogsMessagesOfImportance(Microsoft.Build.Framework.MessageImportance importance) -> bool
-virtual Microsoft.Build.Framework.EngineServices.Version.get -> int
-virtual Microsoft.Build.Framework.SdkResolverContext.Interactive.get -> bool
-virtual Microsoft.Build.Framework.SdkResolverContext.Interactive.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.IsRunningInVisualStudio.get -> bool
-virtual Microsoft.Build.Framework.SdkResolverContext.IsRunningInVisualStudio.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.Logger.get -> Microsoft.Build.Framework.SdkLogger
-virtual Microsoft.Build.Framework.SdkResolverContext.Logger.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.MSBuildVersion.get -> System.Version
-virtual Microsoft.Build.Framework.SdkResolverContext.MSBuildVersion.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.ProjectFilePath.get -> string
-virtual Microsoft.Build.Framework.SdkResolverContext.ProjectFilePath.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.SolutionFilePath.get -> string
-virtual Microsoft.Build.Framework.SdkResolverContext.SolutionFilePath.set -> void
-virtual Microsoft.Build.Framework.SdkResolverContext.State.get -> object
-virtual Microsoft.Build.Framework.SdkResolverContext.State.set -> void
-virtual Microsoft.Build.Framework.SdkResult.AdditionalPaths.get -> System.Collections.Generic.IList<string>
-virtual Microsoft.Build.Framework.SdkResult.AdditionalPaths.set -> void
-virtual Microsoft.Build.Framework.SdkResult.ItemsToAdd.get -> System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem>
-virtual Microsoft.Build.Framework.SdkResult.ItemsToAdd.set -> void
-virtual Microsoft.Build.Framework.SdkResult.Path.get -> string
-virtual Microsoft.Build.Framework.SdkResult.Path.set -> void
-virtual Microsoft.Build.Framework.SdkResult.PropertiesToAdd.get -> System.Collections.Generic.IDictionary<string, string>
-virtual Microsoft.Build.Framework.SdkResult.PropertiesToAdd.set -> void
-virtual Microsoft.Build.Framework.SdkResult.SdkReference.get -> Microsoft.Build.Framework.SdkReference
-virtual Microsoft.Build.Framework.SdkResult.SdkReference.set -> void
-virtual Microsoft.Build.Framework.SdkResult.Success.get -> bool
-virtual Microsoft.Build.Framework.SdkResult.Success.set -> void
-virtual Microsoft.Build.Framework.SdkResult.Version.get -> string
-virtual Microsoft.Build.Framework.SdkResult.Version.set -> void
-virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(string path, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
-virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(System.Collections.Generic.IEnumerable<string> paths, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd = null, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd = null, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
\ No newline at end of file
diff --git a/src/Framework/PublicAPI/netstandard/PublicAPI.Unshipped.txt b/src/Framework/PublicAPI/netstandard/PublicAPI.Unshipped.txt
deleted file mode 100644
index e69de29bb2d..00000000000
diff --git a/src/StringTools/CompatibilitySuppressions.xml b/src/StringTools/CompatibilitySuppressions.xml
new file mode 100644
index 00000000000..b2f2578762f
--- /dev/null
+++ b/src/StringTools/CompatibilitySuppressions.xml
@@ -0,0 +1,8 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Suppressions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
+  <Suppression>
+    <!-- Dropped net35 for 17.5; see https://github.com/dotnet/msbuild/pull/8198 -->
+    <DiagnosticId>PKV006</DiagnosticId>
+    <Target>.NETFramework,Version=v3.5</Target>
+  </Suppression>
+</Suppressions>
diff --git a/src/StringTools/PublicAPI/net/PublicAPI.Shipped.txt b/src/StringTools/PublicAPI/net/PublicAPI.Shipped.txt
deleted file mode 100644
index 9086e5e2c2a..00000000000
--- a/src/StringTools/PublicAPI/net/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,25 +0,0 @@
-Microsoft.NET.StringTools.SpanBasedStringBuilder
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string value) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string value, int startIndex, int count) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(System.ReadOnlyMemory<char> span) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Capacity.get -> int
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Clear() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Dispose() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Current.get -> char
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Enumerator() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.MoveNext() -> bool
-Microsoft.NET.StringTools.SpanBasedStringBuilder.GetEnumerator() -> Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Length.get -> int
-Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(int capacity = 4) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(string str) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Trim() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.TrimEnd() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.TrimStart() -> void
-Microsoft.NET.StringTools.Strings
-override Microsoft.NET.StringTools.SpanBasedStringBuilder.ToString() -> string
-static Microsoft.NET.StringTools.Strings.CreateDiagnosticReport() -> string
-static Microsoft.NET.StringTools.Strings.EnableDiagnostics() -> void
-static Microsoft.NET.StringTools.Strings.GetSpanBasedStringBuilder() -> Microsoft.NET.StringTools.SpanBasedStringBuilder
-static Microsoft.NET.StringTools.Strings.WeakIntern(string str) -> string
-static Microsoft.NET.StringTools.Strings.WeakIntern(System.ReadOnlySpan<char> str) -> string
\ No newline at end of file
diff --git a/src/StringTools/PublicAPI/net/PublicAPI.Unshipped.txt b/src/StringTools/PublicAPI/net/PublicAPI.Unshipped.txt
deleted file mode 100644
index e69de29bb2d..00000000000
diff --git a/src/StringTools/PublicAPI/net35/PublicAPI.Shipped.txt b/src/StringTools/PublicAPI/net35/PublicAPI.Shipped.txt
deleted file mode 100644
index e2b05b1bd03..00000000000
--- a/src/StringTools/PublicAPI/net35/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,20 +0,0 @@
-Microsoft.NET.StringTools.SpanBasedStringBuilder
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Clear() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Dispose() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Current.get -> char
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Enumerator() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Enumerator(System.Text.StringBuilder builder) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.MoveNext() -> bool
-Microsoft.NET.StringTools.SpanBasedStringBuilder.GetEnumerator() -> Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Length.get -> int
-Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(int capacity = 4) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(string str) -> void
-Microsoft.NET.StringTools.Strings
-override Microsoft.NET.StringTools.SpanBasedStringBuilder.ToString() -> string
-static Microsoft.NET.StringTools.Strings.CreateDiagnosticReport() -> string
-static Microsoft.NET.StringTools.Strings.EnableDiagnostics() -> void
-static Microsoft.NET.StringTools.Strings.GetSpanBasedStringBuilder() -> Microsoft.NET.StringTools.SpanBasedStringBuilder
-static Microsoft.NET.StringTools.Strings.WeakIntern(string str) -> string
-static System.MemoryExtensions.AsSpan<T>(this T[] array, int start, int length) -> string
-System.MemoryExtensions
\ No newline at end of file
diff --git a/src/StringTools/PublicAPI/net35/PublicAPI.Unshipped.txt b/src/StringTools/PublicAPI/net35/PublicAPI.Unshipped.txt
deleted file mode 100644
index e69de29bb2d..00000000000
diff --git a/src/StringTools/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/StringTools/PublicAPI/netstandard/PublicAPI.Shipped.txt
deleted file mode 100644
index 9086e5e2c2a..00000000000
--- a/src/StringTools/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,25 +0,0 @@
-Microsoft.NET.StringTools.SpanBasedStringBuilder
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string value) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string value, int startIndex, int count) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(System.ReadOnlyMemory<char> span) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Capacity.get -> int
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Clear() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Dispose() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Current.get -> char
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Enumerator() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.MoveNext() -> bool
-Microsoft.NET.StringTools.SpanBasedStringBuilder.GetEnumerator() -> Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Length.get -> int
-Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(int capacity = 4) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(string str) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Trim() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.TrimEnd() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.TrimStart() -> void
-Microsoft.NET.StringTools.Strings
-override Microsoft.NET.StringTools.SpanBasedStringBuilder.ToString() -> string
-static Microsoft.NET.StringTools.Strings.CreateDiagnosticReport() -> string
-static Microsoft.NET.StringTools.Strings.EnableDiagnostics() -> void
-static Microsoft.NET.StringTools.Strings.GetSpanBasedStringBuilder() -> Microsoft.NET.StringTools.SpanBasedStringBuilder
-static Microsoft.NET.StringTools.Strings.WeakIntern(string str) -> string
-static Microsoft.NET.StringTools.Strings.WeakIntern(System.ReadOnlySpan<char> str) -> string
\ No newline at end of file
diff --git a/src/StringTools/PublicAPI/netstandard/PublicAPI.Unshipped.txt b/src/StringTools/PublicAPI/netstandard/PublicAPI.Unshipped.txt
deleted file mode 100644
index e69de29bb2d..00000000000
diff --git a/src/StringTools/StringTools.csproj b/src/StringTools/StringTools.csproj
index 2f0f43eb5c7..238bd8a4ca1 100644
--- a/src/StringTools/StringTools.csproj
+++ b/src/StringTools/StringTools.csproj
@@ -12,6 +12,8 @@
     <AssemblyVersion>1.0.0.0</AssemblyVersion>
     <SemanticVersioningV1>true</SemanticVersioningV1>
 
+    <EnablePackageValidation>true</EnablePackageValidation>
+
     <AssemblyName>Microsoft.NET.StringTools</AssemblyName>
     <PackageDescription>This package contains the $(AssemblyName) assembly which implements common string-related functionality such as weak interning.</PackageDescription>
     
diff --git a/src/Tasks/CompatibilitySuppressions.xml b/src/Tasks/CompatibilitySuppressions.xml
new file mode 100644
index 00000000000..1314aae19e3
--- /dev/null
+++ b/src/Tasks/CompatibilitySuppressions.xml
@@ -0,0 +1,67 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Suppressions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
+  <Suppression>
+    <!-- For ease of logging the "not supported on Core" message, this task is a
+         TaskExtension on netstandard/netcore. Since the type is sealed there,
+         that shouldn't cause any implementation problems since no one can derive
+         from it and try to call TaskExtension.Log. -->
+    <DiagnosticId>CP0007</DiagnosticId>
+    <Target>T:Microsoft.Build.Tasks.ResolveComReference</Target>
+    <Left>ref/netstandard2.0/Microsoft.Build.Tasks.Core.dll</Left>
+    <Right>ref/net472/Microsoft.Build.Tasks.Core.dll</Right>
+  </Suppression>
+
+  <!-- PKV004 for netstandard2.0-supporting TFs that we do not have runtime assemblies for.
+       This is intentional, because you can only use MSBuild in the context of a .NET SDK
+       (on net7.0, as of MSBuild 17.4) or in the context of Visual Studio (net472), but we
+       have previously shipped netstandard2.0 packages, and if you want to support both
+       runtime contexts it still makes sense to target that. -->
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETCoreApp,Version=v2.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETFramework,Version=v4.6.1</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETFramework,Version=v4.6.2</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETFramework,Version=v4.6.3</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETStandard,Version=v2.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Tizen,Version=v4.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>UAP,Version=v10.0.15064</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.Xbox360,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.XboxOne,Version=v0.0</Target>
+  </Suppression>
+</Suppressions>
diff --git a/src/Tasks/Microsoft.Build.Tasks.csproj b/src/Tasks/Microsoft.Build.Tasks.csproj
index 6421d98c638..972776ac9e0 100644
--- a/src/Tasks/Microsoft.Build.Tasks.csproj
+++ b/src/Tasks/Microsoft.Build.Tasks.csproj
@@ -16,6 +16,7 @@
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which implements the commonly used tasks of MSBuild.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
     <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">full</ApplyNgenOptimization>
+    <EnablePackageValidation>true</EnablePackageValidation>
   </PropertyGroup>
 
   <ItemGroup>
diff --git a/src/Tasks/PublicAPI/net/PublicAPI.Shipped.txt b/src/Tasks/PublicAPI/net/PublicAPI.Shipped.txt
deleted file mode 100644
index 1cc4f59b5e8..00000000000
--- a/src/Tasks/PublicAPI/net/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,2429 +0,0 @@
-abstract Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(string fileName, string linkFileName, string rootNamespaceName, string dependentUponFileName, System.IO.Stream binaryStream) -> string
-abstract Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(string fileName) -> bool
-abstract Microsoft.Build.Tasks.CreateManifestResourceName.SourceFileExtension.get -> string
-abstract Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SortName.get -> string
-abstract Microsoft.Build.Tasks.GenerateManifestBase.GetObjectType() -> System.Type
-abstract Microsoft.Build.Tasks.GenerateManifestBase.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest) -> bool
-abstract Microsoft.Build.Tasks.GenerateManifestBase.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest) -> bool
-Microsoft.Build.Tasks.AL
-Microsoft.Build.Tasks.AL.AL() -> void
-Microsoft.Build.Tasks.AL.AlgorithmId.get -> string
-Microsoft.Build.Tasks.AL.AlgorithmId.set -> void
-Microsoft.Build.Tasks.AL.BaseAddress.get -> string
-Microsoft.Build.Tasks.AL.BaseAddress.set -> void
-Microsoft.Build.Tasks.AL.CompanyName.get -> string
-Microsoft.Build.Tasks.AL.CompanyName.set -> void
-Microsoft.Build.Tasks.AL.Configuration.get -> string
-Microsoft.Build.Tasks.AL.Configuration.set -> void
-Microsoft.Build.Tasks.AL.Copyright.get -> string
-Microsoft.Build.Tasks.AL.Copyright.set -> void
-Microsoft.Build.Tasks.AL.Culture.get -> string
-Microsoft.Build.Tasks.AL.Culture.set -> void
-Microsoft.Build.Tasks.AL.DelaySign.get -> bool
-Microsoft.Build.Tasks.AL.DelaySign.set -> void
-Microsoft.Build.Tasks.AL.Description.get -> string
-Microsoft.Build.Tasks.AL.Description.set -> void
-Microsoft.Build.Tasks.AL.EmbedResources.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AL.EmbedResources.set -> void
-Microsoft.Build.Tasks.AL.EvidenceFile.get -> string
-Microsoft.Build.Tasks.AL.EvidenceFile.set -> void
-Microsoft.Build.Tasks.AL.FileVersion.get -> string
-Microsoft.Build.Tasks.AL.FileVersion.set -> void
-Microsoft.Build.Tasks.AL.Flags.get -> string
-Microsoft.Build.Tasks.AL.Flags.set -> void
-Microsoft.Build.Tasks.AL.GenerateFullPaths.get -> bool
-Microsoft.Build.Tasks.AL.GenerateFullPaths.set -> void
-Microsoft.Build.Tasks.AL.KeyContainer.get -> string
-Microsoft.Build.Tasks.AL.KeyContainer.set -> void
-Microsoft.Build.Tasks.AL.KeyFile.get -> string
-Microsoft.Build.Tasks.AL.KeyFile.set -> void
-Microsoft.Build.Tasks.AL.LinkResources.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AL.LinkResources.set -> void
-Microsoft.Build.Tasks.AL.MainEntryPoint.get -> string
-Microsoft.Build.Tasks.AL.MainEntryPoint.set -> void
-Microsoft.Build.Tasks.AL.OutputAssembly.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.AL.OutputAssembly.set -> void
-Microsoft.Build.Tasks.AL.Platform.get -> string
-Microsoft.Build.Tasks.AL.Platform.set -> void
-Microsoft.Build.Tasks.AL.Prefer32Bit.get -> bool
-Microsoft.Build.Tasks.AL.Prefer32Bit.set -> void
-Microsoft.Build.Tasks.AL.ProductName.get -> string
-Microsoft.Build.Tasks.AL.ProductName.set -> void
-Microsoft.Build.Tasks.AL.ProductVersion.get -> string
-Microsoft.Build.Tasks.AL.ProductVersion.set -> void
-Microsoft.Build.Tasks.AL.ResponseFiles.get -> string[]
-Microsoft.Build.Tasks.AL.ResponseFiles.set -> void
-Microsoft.Build.Tasks.AL.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.AL.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.AL.SourceModules.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AL.SourceModules.set -> void
-Microsoft.Build.Tasks.AL.TargetType.get -> string
-Microsoft.Build.Tasks.AL.TargetType.set -> void
-Microsoft.Build.Tasks.AL.TemplateFile.get -> string
-Microsoft.Build.Tasks.AL.TemplateFile.set -> void
-Microsoft.Build.Tasks.AL.Title.get -> string
-Microsoft.Build.Tasks.AL.Title.set -> void
-Microsoft.Build.Tasks.AL.Trademark.get -> string
-Microsoft.Build.Tasks.AL.Trademark.set -> void
-Microsoft.Build.Tasks.AL.Version.get -> string
-Microsoft.Build.Tasks.AL.Version.set -> void
-Microsoft.Build.Tasks.AL.Win32Icon.get -> string
-Microsoft.Build.Tasks.AL.Win32Icon.set -> void
-Microsoft.Build.Tasks.AL.Win32Resource.get -> string
-Microsoft.Build.Tasks.AL.Win32Resource.set -> void
-Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension
-Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension.Log.get -> Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Tasks.AspNetCompiler
-Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers.get -> bool
-Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.AspNetCompiler() -> void
-Microsoft.Build.Tasks.AspNetCompiler.Clean.get -> bool
-Microsoft.Build.Tasks.AspNetCompiler.Clean.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.Debug.get -> bool
-Microsoft.Build.Tasks.AspNetCompiler.Debug.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.DelaySign.get -> bool
-Microsoft.Build.Tasks.AspNetCompiler.DelaySign.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.FixedNames.get -> bool
-Microsoft.Build.Tasks.AspNetCompiler.FixedNames.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.Force.get -> bool
-Microsoft.Build.Tasks.AspNetCompiler.Force.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.KeyContainer.get -> string
-Microsoft.Build.Tasks.AspNetCompiler.KeyContainer.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.KeyFile.get -> string
-Microsoft.Build.Tasks.AspNetCompiler.KeyFile.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.MetabasePath.get -> string
-Microsoft.Build.Tasks.AspNetCompiler.MetabasePath.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath.get -> string
-Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker.get -> string
-Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.TargetPath.get -> string
-Microsoft.Build.Tasks.AspNetCompiler.TargetPath.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.Updateable.get -> bool
-Microsoft.Build.Tasks.AspNetCompiler.Updateable.set -> void
-Microsoft.Build.Tasks.AspNetCompiler.VirtualPath.get -> string
-Microsoft.Build.Tasks.AspNetCompiler.VirtualPath.set -> void
-Microsoft.Build.Tasks.AssignCulture
-Microsoft.Build.Tasks.AssignCulture.AssignCulture() -> void
-Microsoft.Build.Tasks.AssignCulture.AssignedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignCulture.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignCulture.Files.set -> void
-Microsoft.Build.Tasks.AssignLinkMetadata
-Microsoft.Build.Tasks.AssignLinkMetadata.AssignLinkMetadata() -> void
-Microsoft.Build.Tasks.AssignLinkMetadata.Items.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignLinkMetadata.Items.set -> void
-Microsoft.Build.Tasks.AssignLinkMetadata.OutputItems.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignLinkMetadata.OutputItems.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration
-Microsoft.Build.Tasks.AssignProjectConfiguration.AddSyntheticProjectReferencesForSolutionDependencies.get -> bool
-Microsoft.Build.Tasks.AssignProjectConfiguration.AddSyntheticProjectReferencesForSolutionDependencies.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.AssignedProjects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignProjectConfiguration.AssignedProjects.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.AssignProjectConfiguration() -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProject.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProject.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectConfiguration.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectConfiguration.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectPlatform.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectPlatform.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.DefaultToVcxPlatformMapping.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.DefaultToVcxPlatformMapping.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration.get -> bool
-Microsoft.Build.Tasks.AssignProjectConfiguration.OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.OutputType.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.OutputType.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.ResolveConfigurationPlatformUsingMappings.get -> bool
-Microsoft.Build.Tasks.AssignProjectConfiguration.ResolveConfigurationPlatformUsingMappings.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.ShouldUnsetParentConfigurationAndPlatform.get -> bool
-Microsoft.Build.Tasks.AssignProjectConfiguration.ShouldUnsetParentConfigurationAndPlatform.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.SolutionConfigurationContents.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.SolutionConfigurationContents.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.UnassignedProjects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignProjectConfiguration.UnassignedProjects.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.VcxToDefaultPlatformMapping.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.VcxToDefaultPlatformMapping.set -> void
-Microsoft.Build.Tasks.AssignTargetPath
-Microsoft.Build.Tasks.AssignTargetPath.AssignedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignTargetPath.AssignTargetPath() -> void
-Microsoft.Build.Tasks.AssignTargetPath.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignTargetPath.Files.set -> void
-Microsoft.Build.Tasks.AssignTargetPath.RootFolder.get -> string
-Microsoft.Build.Tasks.AssignTargetPath.RootFolder.set -> void
-Microsoft.Build.Tasks.CallTarget
-Microsoft.Build.Tasks.CallTarget.CallTarget() -> void
-Microsoft.Build.Tasks.CallTarget.RunEachTargetSeparately.get -> bool
-Microsoft.Build.Tasks.CallTarget.RunEachTargetSeparately.set -> void
-Microsoft.Build.Tasks.CallTarget.TargetOutputs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CallTarget.Targets.get -> string[]
-Microsoft.Build.Tasks.CallTarget.Targets.set -> void
-Microsoft.Build.Tasks.CallTarget.UseResultsCache.get -> bool
-Microsoft.Build.Tasks.CallTarget.UseResultsCache.set -> void
-Microsoft.Build.Tasks.CodeTaskFactory
-Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask task) -> void
-Microsoft.Build.Tasks.CodeTaskFactory.CodeTaskFactory() -> void
-Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine loggingHost) -> Microsoft.Build.Framework.ITask
-Microsoft.Build.Tasks.CodeTaskFactory.FactoryName.get -> string
-Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters() -> Microsoft.Build.Framework.TaskPropertyInfo[]
-Microsoft.Build.Tasks.CodeTaskFactory.Initialize(string taskName, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> taskParameters, string taskElementContents, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
-Microsoft.Build.Tasks.CodeTaskFactory.TaskType.get -> System.Type
-Microsoft.Build.Tasks.CombinePath
-Microsoft.Build.Tasks.CombinePath.BasePath.get -> string
-Microsoft.Build.Tasks.CombinePath.BasePath.set -> void
-Microsoft.Build.Tasks.CombinePath.CombinedPaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CombinePath.CombinedPaths.set -> void
-Microsoft.Build.Tasks.CombinePath.CombinePath() -> void
-Microsoft.Build.Tasks.CombinePath.Paths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CombinePath.Paths.set -> void
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.CombineTargetFrameworkInfoProperties() -> void
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.PropertiesAndValues.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.PropertiesAndValues.set -> void
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.Result.get -> string
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.Result.set -> void
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.RootElementName.get -> string
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.RootElementName.set -> void
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.UseAttributeForTargetFrameworkInfoPropertyNames.get -> bool
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.UseAttributeForTargetFrameworkInfoPropertyNames.set -> void
-Microsoft.Build.Tasks.CombineXmlElements
-Microsoft.Build.Tasks.CombineXmlElements.CombineXmlElements() -> void
-Microsoft.Build.Tasks.CombineXmlElements.Result.get -> string
-Microsoft.Build.Tasks.CombineXmlElements.Result.set -> void
-Microsoft.Build.Tasks.CombineXmlElements.RootElementName.get -> string
-Microsoft.Build.Tasks.CombineXmlElements.RootElementName.set -> void
-Microsoft.Build.Tasks.CombineXmlElements.XmlElements.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CombineXmlElements.XmlElements.set -> void
-Microsoft.Build.Tasks.CommandLineBuilderExtension
-Microsoft.Build.Tasks.CommandLineBuilderExtension.CommandLineBuilderExtension() -> void
-Microsoft.Build.Tasks.CommandLineBuilderExtension.CommandLineBuilderExtension(bool quoteHyphensOnCommandLine, bool useNewLineSeparator) -> void
-Microsoft.Build.Tasks.CommandLineBuilderExtension.GetQuotedText(string unquotedText) -> string
-Microsoft.Build.Tasks.ConvertToAbsolutePath
-Microsoft.Build.Tasks.ConvertToAbsolutePath.AbsolutePaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ConvertToAbsolutePath.AbsolutePaths.set -> void
-Microsoft.Build.Tasks.ConvertToAbsolutePath.ConvertToAbsolutePath() -> void
-Microsoft.Build.Tasks.ConvertToAbsolutePath.Paths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ConvertToAbsolutePath.Paths.set -> void
-Microsoft.Build.Tasks.Copy
-Microsoft.Build.Tasks.Copy.Cancel() -> void
-Microsoft.Build.Tasks.Copy.CopiedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Copy.Copy() -> void
-Microsoft.Build.Tasks.Copy.DestinationFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Copy.DestinationFiles.set -> void
-Microsoft.Build.Tasks.Copy.DestinationFolder.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.Copy.DestinationFolder.set -> void
-Microsoft.Build.Tasks.Copy.ErrorIfLinkFails.get -> bool
-Microsoft.Build.Tasks.Copy.ErrorIfLinkFails.set -> void
-Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles.get -> bool
-Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles.set -> void
-Microsoft.Build.Tasks.Copy.Retries.get -> int
-Microsoft.Build.Tasks.Copy.Retries.set -> void
-Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds.get -> int
-Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds.set -> void
-Microsoft.Build.Tasks.Copy.SkipUnchangedFiles.get -> bool
-Microsoft.Build.Tasks.Copy.SkipUnchangedFiles.set -> void
-Microsoft.Build.Tasks.Copy.SourceFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Copy.SourceFiles.set -> void
-Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible.get -> bool
-Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible.set -> void
-Microsoft.Build.Tasks.Copy.UseSymboliclinksIfPossible.get -> bool
-Microsoft.Build.Tasks.Copy.UseSymboliclinksIfPossible.set -> void
-Microsoft.Build.Tasks.Copy.WroteAtLeastOneFile.get -> bool
-Microsoft.Build.Tasks.CreateCSharpManifestResourceName
-Microsoft.Build.Tasks.CreateCSharpManifestResourceName.CreateCSharpManifestResourceName() -> void
-Microsoft.Build.Tasks.CreateItem
-Microsoft.Build.Tasks.CreateItem.AdditionalMetadata.get -> string[]
-Microsoft.Build.Tasks.CreateItem.AdditionalMetadata.set -> void
-Microsoft.Build.Tasks.CreateItem.CreateItem() -> void
-Microsoft.Build.Tasks.CreateItem.Exclude.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CreateItem.Exclude.set -> void
-Microsoft.Build.Tasks.CreateItem.Include.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CreateItem.Include.set -> void
-Microsoft.Build.Tasks.CreateItem.PreserveExistingMetadata.get -> bool
-Microsoft.Build.Tasks.CreateItem.PreserveExistingMetadata.set -> void
-Microsoft.Build.Tasks.CreateManifestResourceName
-Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestResourceName() -> void
-Microsoft.Build.Tasks.CreateManifestResourceName.itemSpecToTaskitem -> System.Collections.Generic.Dictionary<string, Microsoft.Build.Framework.ITaskItem>
-Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory.get -> bool
-Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory.set -> void
-Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles.set -> void
-Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames.set -> void
-Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace.get -> string
-Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace.set -> void
-Microsoft.Build.Tasks.CreateManifestResourceName.UseDependentUponConvention.get -> bool
-Microsoft.Build.Tasks.CreateManifestResourceName.UseDependentUponConvention.set -> void
-Microsoft.Build.Tasks.CreateProperty
-Microsoft.Build.Tasks.CreateProperty.CreateProperty() -> void
-Microsoft.Build.Tasks.CreateProperty.Value.get -> string[]
-Microsoft.Build.Tasks.CreateProperty.Value.set -> void
-Microsoft.Build.Tasks.CreateProperty.ValueSetByTask.get -> string[]
-Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName
-Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.CreateVisualBasicManifestResourceName() -> void
-Microsoft.Build.Tasks.Delete
-Microsoft.Build.Tasks.Delete.Cancel() -> void
-Microsoft.Build.Tasks.Delete.Delete() -> void
-Microsoft.Build.Tasks.Delete.DeletedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Delete.DeletedFiles.set -> void
-Microsoft.Build.Tasks.Delete.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Delete.Files.set -> void
-Microsoft.Build.Tasks.Delete.TreatErrorsAsWarnings.get -> bool
-Microsoft.Build.Tasks.Delete.TreatErrorsAsWarnings.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.BootstrapperBuilder() -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.BootstrapperBuilder(string visualStudioVersion) -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Build(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings settings) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetOutputFolders(string[] productCodes, string culture, string fallbackCulture, Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation componentsLocation) -> string[]
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Products.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.HelpId.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.HelpKeyword.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.Message.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.Severity.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Error = 2 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Info = 0 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Warning = 1 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.ComponentFiles.get -> string[]
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.KeyFile.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Messages.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage[]
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Succeeded.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationFile.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationFile.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationName.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationName.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationRequiresElevation.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationRequiresElevation.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.BuildSettings() -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.CopyComponents.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.CopyComponents.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.FallbackLCID.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.FallbackLCID.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.LCID.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.LCID.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.OutputPath.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.OutputPath.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ProductBuilders.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.SupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.SupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.Validate.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.Validate.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute = 2 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.HomeSite = 0 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Relative = 1 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Build(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings settings) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Path.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Path.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Products.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.HelpId.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.HelpKeyword.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.Message.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.Severity.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.ComponentFiles.get -> string[]
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.KeyFile.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.Messages.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage[]
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.Succeeded.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationFile.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationFile.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationName.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationName.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationRequiresElevation.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationRequiresElevation.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsLocation.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsLocation.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.CopyComponents.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.CopyComponents.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.FallbackLCID.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.FallbackLCID.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.LCID.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.LCID.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.OutputPath.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.OutputPath.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ProductBuilders.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.SupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.SupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.Validate.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.Validate.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.Includes.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.Name.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductBuilder.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductCode.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilder.Product.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder builder) -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Item(int index) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Product(string productCode) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.Includes.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.Name.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.Product() -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ProductBuilder.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ProductCode.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder.Product.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder builder) -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Item(int index) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Product(string productCode) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.ApplicationIdentity(string url, Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity deployManifestIdentity, Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity applicationManifestIdentity) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.ApplicationIdentity(string url, string deployManifestPath, string applicationManifestPath) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ApplicationManifest() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ApplicationManifest(string targetFrameworkVersion) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.MaxTargetPath.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.MaxTargetPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TrustInfo.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TrustInfo.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlConfigFile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlConfigFile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointIdentity.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointIdentity.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointParameters.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointParameters.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointPath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlErrorReportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlErrorReportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlFileAssociations.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlFileAssociations.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlHostInBrowser.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlHostInBrowser.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIconFile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIconFile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIsClickOnceManifest.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIsClickOnceManifest.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSBuild.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSBuild.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSDescription.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSDescription.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMajor.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMajor.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMinor.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMinor.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSRevision.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSRevision.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSSupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSSupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlProduct.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlProduct.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlPublisher.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlPublisher.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSuiteName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSuiteName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlUseApplicationTrust.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlUseApplicationTrust.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity identity) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(string name) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(string name, string version) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(string name, string version, string publicKeyToken, string culture) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(string name, string version, string publicKeyToken, string culture, string processorArchitecture) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(string name, string version, string publicKeyToken, string culture, string processorArchitecture, string type) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Culture.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Culture.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.All = Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.ProcessorArchitecture | Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.Type -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.Default = 0 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.ProcessorArchitecture = 1 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.Type = 2 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.GetFullName(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags flags) -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsFrameworkAssembly.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsInFramework(string frameworkIdentifier, string frameworkVersion) -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsNeutralPlatform.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsStrongName.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Name.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Name.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ProcessorArchitecture.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ProcessorArchitecture.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.PublicKeyToken.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.PublicKeyToken.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Type.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Type.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Version.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Version.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlCulture.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlCulture.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlProcessorArchitecture.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlProcessorArchitecture.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlPublicKeyToken.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlPublicKeyToken.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlType.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlType.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.AssemblyManifest() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.ExternalProxyStubs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.XmlExternalProxyStubs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.XmlExternalProxyStubs.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyIdentity.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyIdentity.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyReference() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyReference(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.IsPrerequisite.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.IsPrerequisite.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.ReferenceType.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.ReferenceType.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlAssemblyIdentity.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlAssemblyIdentity.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsNative.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsNative.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsPrerequisite.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsPrerequisite.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference assembly) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Add(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity identity) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(string name) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.FindTargetPath(string targetPath) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Remove(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference assemblyReference) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.this[int index].get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.ClickOnceManifest = 1 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.ManagedAssembly = 2 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.NativeAssembly = 3 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.Unspecified = 0 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.BaseReference() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.BaseReference(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Group.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Group.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ResolvedPath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ResolvedPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size.get -> long
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SourcePath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SourcePath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.TargetPath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.TargetPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlGroup.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlGroup.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHash.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHash.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHashAlgorithm.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHashAlgorithm.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlIsOptional.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlIsOptional.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlPath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlSize.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlSize.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ComClass() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlClsId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlClsId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlDescription.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlDescription.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlProgId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlProgId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlThreadingModel.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlThreadingModel.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlTlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlTlbId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.CompatibleFramework() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Profile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Profile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.SupportedRuntime.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.SupportedRuntime.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Version.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Version.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlProfile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlProfile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlSupportedRuntime.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlSupportedRuntime.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework compatibleFramework) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.this[int index].get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CompatibleFrameworks.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeployManifest() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeployManifest(string targetFrameworkMoniker) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TargetFrameworkMoniker.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TargetFrameworkMoniker.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCompatibleFrameworks.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCompatibleFrameworks.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCreateDesktopShortcut.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCreateDesktopShortcut.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDeploymentUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDeploymentUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDisallowUrlActivation.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDisallowUrlActivation.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlErrorReportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlErrorReportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlInstall.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlInstall.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMapFileExtensions.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMapFileExtensions.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMinimumRequiredVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMinimumRequiredVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlProduct.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlProduct.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlPublisher.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlPublisher.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSuiteName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSuiteName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlTrustUrlParameters.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlTrustUrlParameters.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateEnabled.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateEnabled.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateInterval.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateInterval.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateMode.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateMode.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateUnit.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateUnit.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.DefaultIcon.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.DefaultIcon.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.FileAssociation() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDefaultIcon.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDefaultIcon.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDescription.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDescription.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlExtension.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlExtension.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlProgId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlProgId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation fileAssociation) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.this[int index].get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.FileReference() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.FileReference(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.IsDataFile.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.IsDataFile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlComClasses.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlComClasses.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlProxyStubs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlProxyStubs.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlTypeLibs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlTypeLibs.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlWriteableType.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlWriteableType.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference file) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Add(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.FindTargetPath(string targetPath) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Remove(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference file) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.this[int index].get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.LauncherBuilder
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.LauncherBuilder.Build(string filename, string outputPath) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.LauncherBuilder.LauncherBuilder(string launcherPath) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.LauncherBuilder.LauncherPath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.LauncherBuilder.LauncherPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyIdentity.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyIdentity.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyReferences.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Description.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Description.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.FileReferences.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream.get -> System.IO.Stream
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.LauncherBasedDeployment.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.LauncherBasedDeployment.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Manifest() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.OutputMessages.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ReadOnly.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ReadOnly.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles(string[] searchPaths) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.SourcePath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.SourcePath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo(string targetFrameworkVersion) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ValidatePlatform() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyIdentity.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyIdentity.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyReferences.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyReferences.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlDescription.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlDescription.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlFileReferences.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlFileReferences.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlSchema.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlSchema.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.GetArguments() -> string[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Name.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Text.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Type.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.ErrorCount.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.this[int index].get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.WarningCount.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Error = 2 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Info = 0 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Warning = 1 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.BaseInterface.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.IID.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.Name.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.NumMethods.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.ProxyStub() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.TlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlBaseInterface.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlBaseInterface.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlIID.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlIID.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlNumMethods.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlNumMethods.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlTlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlTlbId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.HasUnmanagedCodePermission.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.IsFullTrust.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.IsFullTrust.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet.get -> System.Security.PermissionSet
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PreserveFullTrustPermissionSet.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PreserveFullTrustPermissionSet.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(System.IO.Stream input) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(System.IO.Stream input) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.SameSiteAccess.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.SameSiteAccess.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.TrustInfo() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Write(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Write(System.IO.Stream output) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.IO.Stream input, System.IO.Stream output) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.IO.Stream output) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Flags.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.HelpDirectory.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.ResourceId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.TlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.TypeLib() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Version.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlFlags.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlFlags.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlHelpDirectory.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlHelpDirectory.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlResourceId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlResourceId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlTlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlTlbId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Background = 0 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Foreground = 1 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Days = 1 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Hours = 0 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Weeks = 2 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.WindowClass() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.WindowClass(string name, bool versioned) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlVersioned.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlVersioned.set -> void
-Microsoft.Build.Tasks.DownloadFile
-Microsoft.Build.Tasks.DownloadFile.Cancel() -> void
-Microsoft.Build.Tasks.DownloadFile.DestinationFileName.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.DownloadFile.DestinationFileName.set -> void
-Microsoft.Build.Tasks.DownloadFile.DestinationFolder.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.DownloadFile.DestinationFolder.set -> void
-Microsoft.Build.Tasks.DownloadFile.DownloadedFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.DownloadFile.DownloadedFile.set -> void
-Microsoft.Build.Tasks.DownloadFile.DownloadFile() -> void
-Microsoft.Build.Tasks.DownloadFile.Retries.get -> int
-Microsoft.Build.Tasks.DownloadFile.Retries.set -> void
-Microsoft.Build.Tasks.DownloadFile.RetryDelayMilliseconds.get -> int
-Microsoft.Build.Tasks.DownloadFile.RetryDelayMilliseconds.set -> void
-Microsoft.Build.Tasks.DownloadFile.SkipUnchangedFiles.get -> bool
-Microsoft.Build.Tasks.DownloadFile.SkipUnchangedFiles.set -> void
-Microsoft.Build.Tasks.DownloadFile.SourceUrl.get -> string
-Microsoft.Build.Tasks.DownloadFile.SourceUrl.set -> void
-Microsoft.Build.Tasks.DownloadFile.Timeout.get -> int
-Microsoft.Build.Tasks.DownloadFile.Timeout.set -> void
-Microsoft.Build.Tasks.Error
-Microsoft.Build.Tasks.Error.Code.get -> string
-Microsoft.Build.Tasks.Error.Code.set -> void
-Microsoft.Build.Tasks.Error.Error() -> void
-Microsoft.Build.Tasks.Error.File.get -> string
-Microsoft.Build.Tasks.Error.File.set -> void
-Microsoft.Build.Tasks.Error.HelpKeyword.get -> string
-Microsoft.Build.Tasks.Error.HelpKeyword.set -> void
-Microsoft.Build.Tasks.Error.HelpLink.get -> string
-Microsoft.Build.Tasks.Error.HelpLink.set -> void
-Microsoft.Build.Tasks.Error.Text.get -> string
-Microsoft.Build.Tasks.Error.Text.set -> void
-Microsoft.Build.Tasks.ErrorFromResources
-Microsoft.Build.Tasks.ErrorFromResources.Arguments.get -> string[]
-Microsoft.Build.Tasks.ErrorFromResources.Arguments.set -> void
-Microsoft.Build.Tasks.ErrorFromResources.Code.get -> string
-Microsoft.Build.Tasks.ErrorFromResources.Code.set -> void
-Microsoft.Build.Tasks.ErrorFromResources.ErrorFromResources() -> void
-Microsoft.Build.Tasks.ErrorFromResources.File.get -> string
-Microsoft.Build.Tasks.ErrorFromResources.File.set -> void
-Microsoft.Build.Tasks.ErrorFromResources.HelpKeyword.get -> string
-Microsoft.Build.Tasks.ErrorFromResources.HelpKeyword.set -> void
-Microsoft.Build.Tasks.ErrorFromResources.Resource.get -> string
-Microsoft.Build.Tasks.ErrorFromResources.Resource.set -> void
-Microsoft.Build.Tasks.Exec
-Microsoft.Build.Tasks.Exec.Command.get -> string
-Microsoft.Build.Tasks.Exec.Command.set -> void
-Microsoft.Build.Tasks.Exec.ConsoleOutput.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Exec.ConsoleToMSBuild.get -> bool
-Microsoft.Build.Tasks.Exec.ConsoleToMSBuild.set -> void
-Microsoft.Build.Tasks.Exec.CustomErrorRegularExpression.get -> string
-Microsoft.Build.Tasks.Exec.CustomErrorRegularExpression.set -> void
-Microsoft.Build.Tasks.Exec.CustomWarningRegularExpression.get -> string
-Microsoft.Build.Tasks.Exec.CustomWarningRegularExpression.set -> void
-Microsoft.Build.Tasks.Exec.Exec() -> void
-Microsoft.Build.Tasks.Exec.IgnoreExitCode.get -> bool
-Microsoft.Build.Tasks.Exec.IgnoreExitCode.set -> void
-Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat.get -> bool
-Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat.set -> void
-Microsoft.Build.Tasks.Exec.Outputs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Exec.Outputs.set -> void
-Microsoft.Build.Tasks.Exec.StdErrEncoding.get -> string
-Microsoft.Build.Tasks.Exec.StdErrEncoding.set -> void
-Microsoft.Build.Tasks.Exec.StdOutEncoding.get -> string
-Microsoft.Build.Tasks.Exec.StdOutEncoding.set -> void
-Microsoft.Build.Tasks.Exec.WorkingDirectory.get -> string
-Microsoft.Build.Tasks.Exec.WorkingDirectory.set -> void
-Microsoft.Build.Tasks.ExtractedClassName
-Microsoft.Build.Tasks.ExtractedClassName.ExtractedClassName() -> void
-Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock.get -> bool
-Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock.set -> void
-Microsoft.Build.Tasks.ExtractedClassName.Name.get -> string
-Microsoft.Build.Tasks.ExtractedClassName.Name.set -> void
-Microsoft.Build.Tasks.FindAppConfigFile
-Microsoft.Build.Tasks.FindAppConfigFile.AppConfigFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.FindAppConfigFile.AppConfigFile.set -> void
-Microsoft.Build.Tasks.FindAppConfigFile.FindAppConfigFile() -> void
-Microsoft.Build.Tasks.FindAppConfigFile.PrimaryList.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindAppConfigFile.PrimaryList.set -> void
-Microsoft.Build.Tasks.FindAppConfigFile.SecondaryList.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindAppConfigFile.SecondaryList.set -> void
-Microsoft.Build.Tasks.FindAppConfigFile.TargetPath.get -> string
-Microsoft.Build.Tasks.FindAppConfigFile.TargetPath.set -> void
-Microsoft.Build.Tasks.FindInList
-Microsoft.Build.Tasks.FindInList.CaseSensitive.get -> bool
-Microsoft.Build.Tasks.FindInList.CaseSensitive.set -> void
-Microsoft.Build.Tasks.FindInList.FindInList() -> void
-Microsoft.Build.Tasks.FindInList.FindLastMatch.get -> bool
-Microsoft.Build.Tasks.FindInList.FindLastMatch.set -> void
-Microsoft.Build.Tasks.FindInList.ItemFound.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.FindInList.ItemFound.set -> void
-Microsoft.Build.Tasks.FindInList.ItemSpecToFind.get -> string
-Microsoft.Build.Tasks.FindInList.ItemSpecToFind.set -> void
-Microsoft.Build.Tasks.FindInList.List.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindInList.List.set -> void
-Microsoft.Build.Tasks.FindInList.MatchFileNameOnly.get -> bool
-Microsoft.Build.Tasks.FindInList.MatchFileNameOnly.set -> void
-Microsoft.Build.Tasks.FindInvalidProjectReferences
-Microsoft.Build.Tasks.FindInvalidProjectReferences.FindInvalidProjectReferences() -> void
-Microsoft.Build.Tasks.FindInvalidProjectReferences.InvalidReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindInvalidProjectReferences.ProjectReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindInvalidProjectReferences.ProjectReferences.set -> void
-Microsoft.Build.Tasks.FindInvalidProjectReferences.TargetPlatformIdentifier.get -> string
-Microsoft.Build.Tasks.FindInvalidProjectReferences.TargetPlatformIdentifier.set -> void
-Microsoft.Build.Tasks.FindInvalidProjectReferences.TargetPlatformVersion.get -> string
-Microsoft.Build.Tasks.FindInvalidProjectReferences.TargetPlatformVersion.set -> void
-Microsoft.Build.Tasks.FindUnderPath
-Microsoft.Build.Tasks.FindUnderPath.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindUnderPath.Files.set -> void
-Microsoft.Build.Tasks.FindUnderPath.FindUnderPath() -> void
-Microsoft.Build.Tasks.FindUnderPath.InPath.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindUnderPath.InPath.set -> void
-Microsoft.Build.Tasks.FindUnderPath.OutOfPath.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindUnderPath.OutOfPath.set -> void
-Microsoft.Build.Tasks.FindUnderPath.Path.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.FindUnderPath.Path.set -> void
-Microsoft.Build.Tasks.FindUnderPath.UpdateToAbsolutePaths.get -> bool
-Microsoft.Build.Tasks.FindUnderPath.UpdateToAbsolutePaths.set -> void
-Microsoft.Build.Tasks.FormatUrl
-Microsoft.Build.Tasks.FormatUrl.FormatUrl() -> void
-Microsoft.Build.Tasks.FormatUrl.InputUrl.get -> string
-Microsoft.Build.Tasks.FormatUrl.InputUrl.set -> void
-Microsoft.Build.Tasks.FormatUrl.OutputUrl.get -> string
-Microsoft.Build.Tasks.FormatUrl.OutputUrl.set -> void
-Microsoft.Build.Tasks.FormatVersion
-Microsoft.Build.Tasks.FormatVersion.FormatType.get -> string
-Microsoft.Build.Tasks.FormatVersion.FormatType.set -> void
-Microsoft.Build.Tasks.FormatVersion.FormatVersion() -> void
-Microsoft.Build.Tasks.FormatVersion.OutputVersion.get -> string
-Microsoft.Build.Tasks.FormatVersion.OutputVersion.set -> void
-Microsoft.Build.Tasks.FormatVersion.Revision.get -> int
-Microsoft.Build.Tasks.FormatVersion.Revision.set -> void
-Microsoft.Build.Tasks.FormatVersion.Version.get -> string
-Microsoft.Build.Tasks.FormatVersion.Version.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest
-Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateApplicationManifest.Files.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.GenerateApplicationManifest() -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser.get -> bool
-Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.Product.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.Product.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1.get -> bool
-Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust.get -> bool
-Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust.set -> void
-Microsoft.Build.Tasks.GenerateBindingRedirects
-Microsoft.Build.Tasks.GenerateBindingRedirects.AppConfigFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateBindingRedirects.AppConfigFile.set -> void
-Microsoft.Build.Tasks.GenerateBindingRedirects.GenerateBindingRedirects() -> void
-Microsoft.Build.Tasks.GenerateBindingRedirects.OutputAppConfigFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateBindingRedirects.OutputAppConfigFile.set -> void
-Microsoft.Build.Tasks.GenerateBindingRedirects.SuggestedRedirects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateBindingRedirects.SuggestedRedirects.set -> void
-Microsoft.Build.Tasks.GenerateBindingRedirects.TargetName.get -> string
-Microsoft.Build.Tasks.GenerateBindingRedirects.TargetName.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper
-Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationFile.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationFile.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationName.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationName.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationRequiresElevation.get -> bool
-Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationRequiresElevation.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationUrl.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationUrl.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperComponentFiles.get -> string[]
-Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperComponentFiles.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperItems.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperItems.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperKeyFile.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperKeyFile.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.ComponentsLocation.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.ComponentsLocation.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.ComponentsUrl.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.ComponentsUrl.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.CopyComponents.get -> bool
-Microsoft.Build.Tasks.GenerateBootstrapper.CopyComponents.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.Culture.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.Culture.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.FallbackCulture.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.FallbackCulture.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.GenerateBootstrapper() -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.Path.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.Path.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.SupportUrl.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.SupportUrl.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.Validate.get -> bool
-Microsoft.Build.Tasks.GenerateBootstrapper.Validate.set -> void
-Microsoft.Build.Tasks.GenerateBootstrapper.VisualStudioVersion.get -> string
-Microsoft.Build.Tasks.GenerateBootstrapper.VisualStudioVersion.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest
-Microsoft.Build.Tasks.GenerateDeploymentManifest.CreateDesktopShortcut.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.CreateDesktopShortcut.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.DeploymentUrl.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.DeploymentUrl.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.DisallowUrlActivation.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.DisallowUrlActivation.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.ErrorReportUrl.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.ErrorReportUrl.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.GenerateDeploymentManifest() -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Install.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Install.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.MapFileExtensions.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.MapFileExtensions.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.MinimumRequiredVersion.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.MinimumRequiredVersion.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Product.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Product.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Publisher.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Publisher.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.SuiteName.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.SuiteName.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.SupportUrl.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.SupportUrl.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.TrustUrlParameters.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.TrustUrlParameters.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateEnabled.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateEnabled.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval.get -> int
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateMode.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateMode.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateUnit.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateUnit.set -> void
-Microsoft.Build.Tasks.GenerateLauncher
-Microsoft.Build.Tasks.GenerateLauncher.AssemblyName.get -> string
-Microsoft.Build.Tasks.GenerateLauncher.AssemblyName.set -> void
-Microsoft.Build.Tasks.GenerateLauncher.EntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateLauncher.EntryPoint.set -> void
-Microsoft.Build.Tasks.GenerateLauncher.GenerateLauncher() -> void
-Microsoft.Build.Tasks.GenerateLauncher.LauncherPath.get -> string
-Microsoft.Build.Tasks.GenerateLauncher.LauncherPath.set -> void
-Microsoft.Build.Tasks.GenerateLauncher.OutputEntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateLauncher.OutputEntryPoint.set -> void
-Microsoft.Build.Tasks.GenerateLauncher.OutputPath.get -> string
-Microsoft.Build.Tasks.GenerateLauncher.OutputPath.set -> void
-Microsoft.Build.Tasks.GenerateLauncher.VisualStudioVersion.get -> string
-Microsoft.Build.Tasks.GenerateLauncher.VisualStudioVersion.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase
-Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyFromItem(Microsoft.Build.Framework.ITaskItem item) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyNameFromItem(Microsoft.Build.Framework.ITaskItem item, Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType referenceType) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.GenerateManifestBase.AddEntryPointFromItem(Microsoft.Build.Framework.ITaskItem item, Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType referenceType) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.GenerateManifestBase.AddFileFromItem(Microsoft.Build.Framework.ITaskItem item) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.GenerateManifestBase.AssemblyName.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.AssemblyName.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.AssemblyVersion.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.AssemblyVersion.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.Description.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.Description.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.EntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateManifestBase.EntryPoint.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.FindFileFromItem(Microsoft.Build.Framework.ITaskItem item) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.GenerateManifestBase.GenerateManifestBase() -> void
-Microsoft.Build.Tasks.GenerateManifestBase.InputManifest.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateManifestBase.InputManifest.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.LauncherBasedDeployment.get -> bool
-Microsoft.Build.Tasks.GenerateManifestBase.LauncherBasedDeployment.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.MaxTargetPath.get -> int
-Microsoft.Build.Tasks.GenerateManifestBase.MaxTargetPath.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.OutputManifest.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateManifestBase.OutputManifest.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.Platform.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.Platform.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.TargetCulture.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.TargetCulture.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkMoniker.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkMoniker.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.GenerateResource
-Microsoft.Build.Tasks.GenerateResource.AdditionalInputs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.AdditionalInputs.set -> void
-Microsoft.Build.Tasks.GenerateResource.EnvironmentVariables.get -> string[]
-Microsoft.Build.Tasks.GenerateResource.EnvironmentVariables.set -> void
-Microsoft.Build.Tasks.GenerateResource.ExcludedInputPaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.ExcludedInputPaths.set -> void
-Microsoft.Build.Tasks.GenerateResource.ExecuteAsTool.get -> bool
-Microsoft.Build.Tasks.GenerateResource.ExecuteAsTool.set -> void
-Microsoft.Build.Tasks.GenerateResource.ExtractResWFiles.get -> bool
-Microsoft.Build.Tasks.GenerateResource.ExtractResWFiles.set -> void
-Microsoft.Build.Tasks.GenerateResource.FilesWritten.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.GenerateResource() -> void
-Microsoft.Build.Tasks.GenerateResource.MinimalRebuildFromTracking.get -> bool
-Microsoft.Build.Tasks.GenerateResource.MinimalRebuildFromTracking.set -> void
-Microsoft.Build.Tasks.GenerateResource.NeverLockTypeAssemblies.get -> bool
-Microsoft.Build.Tasks.GenerateResource.NeverLockTypeAssemblies.set -> void
-Microsoft.Build.Tasks.GenerateResource.OutputDirectory.get -> string
-Microsoft.Build.Tasks.GenerateResource.OutputDirectory.set -> void
-Microsoft.Build.Tasks.GenerateResource.OutputResources.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.OutputResources.set -> void
-Microsoft.Build.Tasks.GenerateResource.PublicClass.get -> bool
-Microsoft.Build.Tasks.GenerateResource.PublicClass.set -> void
-Microsoft.Build.Tasks.GenerateResource.References.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.References.set -> void
-Microsoft.Build.Tasks.GenerateResource.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.GenerateResource.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.GenerateResource.Sources.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.Sources.set -> void
-Microsoft.Build.Tasks.GenerateResource.StateFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateResource.StateFile.set -> void
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedClassName.get -> string
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedClassName.set -> void
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedFileName.get -> string
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedFileName.set -> void
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedLanguage.get -> string
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedLanguage.set -> void
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedManifestPrefix.get -> string
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedManifestPrefix.set -> void
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedNamespace.get -> string
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedNamespace.set -> void
-Microsoft.Build.Tasks.GenerateResource.TLogReadFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.TLogWriteFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.ToolArchitecture.get -> string
-Microsoft.Build.Tasks.GenerateResource.ToolArchitecture.set -> void
-Microsoft.Build.Tasks.GenerateResource.TrackerFrameworkPath.get -> string
-Microsoft.Build.Tasks.GenerateResource.TrackerFrameworkPath.set -> void
-Microsoft.Build.Tasks.GenerateResource.TrackerLogDirectory.get -> string
-Microsoft.Build.Tasks.GenerateResource.TrackerLogDirectory.set -> void
-Microsoft.Build.Tasks.GenerateResource.TrackerSdkPath.get -> string
-Microsoft.Build.Tasks.GenerateResource.TrackerSdkPath.set -> void
-Microsoft.Build.Tasks.GenerateResource.TrackFileAccess.get -> bool
-Microsoft.Build.Tasks.GenerateResource.TrackFileAccess.set -> void
-Microsoft.Build.Tasks.GenerateResource.UsePreserializedResources.get -> bool
-Microsoft.Build.Tasks.GenerateResource.UsePreserializedResources.set -> void
-Microsoft.Build.Tasks.GenerateResource.UseSourcePath.get -> bool
-Microsoft.Build.Tasks.GenerateResource.UseSourcePath.set -> void
-Microsoft.Build.Tasks.GenerateTrustInfo
-Microsoft.Build.Tasks.GenerateTrustInfo.ApplicationDependencies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateTrustInfo.ApplicationDependencies.set -> void
-Microsoft.Build.Tasks.GenerateTrustInfo.BaseManifest.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateTrustInfo.BaseManifest.set -> void
-Microsoft.Build.Tasks.GenerateTrustInfo.ExcludedPermissions.get -> string
-Microsoft.Build.Tasks.GenerateTrustInfo.ExcludedPermissions.set -> void
-Microsoft.Build.Tasks.GenerateTrustInfo.GenerateTrustInfo() -> void
-Microsoft.Build.Tasks.GenerateTrustInfo.TargetFrameworkMoniker.get -> string
-Microsoft.Build.Tasks.GenerateTrustInfo.TargetFrameworkMoniker.set -> void
-Microsoft.Build.Tasks.GenerateTrustInfo.TargetZone.get -> string
-Microsoft.Build.Tasks.GenerateTrustInfo.TargetZone.set -> void
-Microsoft.Build.Tasks.GenerateTrustInfo.TrustInfoFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateTrustInfo.TrustInfoFile.set -> void
-Microsoft.Build.Tasks.GetAssemblyIdentity
-Microsoft.Build.Tasks.GetAssemblyIdentity.Assemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetAssemblyIdentity.Assemblies.set -> void
-Microsoft.Build.Tasks.GetAssemblyIdentity.AssemblyFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetAssemblyIdentity.AssemblyFiles.set -> void
-Microsoft.Build.Tasks.GetAssemblyIdentity.GetAssemblyIdentity() -> void
-Microsoft.Build.Tasks.GetCompatiblePlatform
-Microsoft.Build.Tasks.GetCompatiblePlatform.AnnotatedProjects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetCompatiblePlatform.AnnotatedProjects.set -> void
-Microsoft.Build.Tasks.GetCompatiblePlatform.AssignedProjectsWithPlatform.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetCompatiblePlatform.AssignedProjectsWithPlatform.set -> void
-Microsoft.Build.Tasks.GetCompatiblePlatform.CurrentProjectPlatform.get -> string
-Microsoft.Build.Tasks.GetCompatiblePlatform.CurrentProjectPlatform.set -> void
-Microsoft.Build.Tasks.GetCompatiblePlatform.GetCompatiblePlatform() -> void
-Microsoft.Build.Tasks.GetCompatiblePlatform.PlatformLookupTable.get -> string
-Microsoft.Build.Tasks.GetCompatiblePlatform.PlatformLookupTable.set -> void
-Microsoft.Build.Tasks.GetFileHash
-Microsoft.Build.Tasks.GetFileHash.Algorithm.get -> string
-Microsoft.Build.Tasks.GetFileHash.Algorithm.set -> void
-Microsoft.Build.Tasks.GetFileHash.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetFileHash.Files.set -> void
-Microsoft.Build.Tasks.GetFileHash.GetFileHash() -> void
-Microsoft.Build.Tasks.GetFileHash.Hash.get -> string
-Microsoft.Build.Tasks.GetFileHash.Hash.set -> void
-Microsoft.Build.Tasks.GetFileHash.HashEncoding.get -> string
-Microsoft.Build.Tasks.GetFileHash.HashEncoding.set -> void
-Microsoft.Build.Tasks.GetFileHash.Items.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetFileHash.Items.set -> void
-Microsoft.Build.Tasks.GetFileHash.MetadataName.get -> string
-Microsoft.Build.Tasks.GetFileHash.MetadataName.set -> void
-Microsoft.Build.Tasks.GetFrameworkPath
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion11Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion20Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion30Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion35Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion40Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion451Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion452Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion45Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion461Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion462Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion46Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion471Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion472Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion47Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion48Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.GetFrameworkPath() -> void
-Microsoft.Build.Tasks.GetFrameworkPath.Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkSdkPath
-Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion20Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion35Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion40Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion451Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion45Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion461Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion46Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkSdkPath.GetFrameworkSdkPath() -> void
-Microsoft.Build.Tasks.GetFrameworkSdkPath.Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkSdkPath.Path.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations
-Microsoft.Build.Tasks.GetInstalledSDKLocations.GetInstalledSDKLocations() -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots.get -> string[]
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKExtensionDirectoryRoots.get -> string[]
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKExtensionDirectoryRoots.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot.get -> string
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier.get -> string
-Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion.get -> string
-Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.WarnWhenNoSDKsFound.get -> bool
-Microsoft.Build.Tasks.GetInstalledSDKLocations.WarnWhenNoSDKsFound.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.BypassFrameworkInstallChecks.get -> bool
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.BypassFrameworkInstallChecks.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.FullFrameworkReferenceAssemblyPaths.get -> string[]
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.GetReferenceAssemblyPaths() -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.ReferenceAssemblyPaths.get -> string[]
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.RootPath.get -> string
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.RootPath.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.SuppressNotFoundError.get -> bool
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.SuppressNotFoundError.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkFallbackSearchPaths.get -> string
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkFallbackSearchPaths.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMoniker.get -> string
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMoniker.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMonikerDisplayName.get -> string
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMonikerDisplayName.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles
-Microsoft.Build.Tasks.GetSDKReferenceFiles.CacheFileFolderPath.get -> string
-Microsoft.Build.Tasks.GetSDKReferenceFiles.CacheFileFolderPath.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.CopyLocalFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetSDKReferenceFiles.GetSDKReferenceFiles() -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogCacheFileExceptions.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogCacheFileExceptions.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistConflictBetweenSDKsAsWarning.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistConflictBetweenSDKsAsWarning.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistConflictWithinSDKAsWarning.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistConflictWithinSDKAsWarning.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistFilesList.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistFilesList.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferenceConflictBetweenSDKsAsWarning.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferenceConflictBetweenSDKsAsWarning.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferenceConflictWithinSDKAsWarning.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferenceConflictWithinSDKAsWarning.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferencesList.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferencesList.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.RedistFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetSDKReferenceFiles.ReferenceExtensions.get -> string[]
-Microsoft.Build.Tasks.GetSDKReferenceFiles.ReferenceExtensions.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.References.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetSDKReferenceFiles.ResolvedSDKReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetSDKReferenceFiles.ResolvedSDKReferences.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetPlatformIdentifier.get -> string
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetPlatformIdentifier.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetPlatformVersion.get -> string
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetPlatformVersion.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetSDKIdentifier.get -> string
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetSDKIdentifier.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetSDKVersion.get -> string
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetSDKVersion.set -> void
-Microsoft.Build.Tasks.Hash
-Microsoft.Build.Tasks.Hash.Hash() -> void
-Microsoft.Build.Tasks.Hash.HashResult.get -> string
-Microsoft.Build.Tasks.Hash.HashResult.set -> void
-Microsoft.Build.Tasks.Hash.IgnoreCase.get -> bool
-Microsoft.Build.Tasks.Hash.IgnoreCase.set -> void
-Microsoft.Build.Tasks.Hash.ItemsToHash.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Hash.ItemsToHash.set -> void
-Microsoft.Build.Tasks.Hosting.IAnalyzerHostObject
-Microsoft.Build.Tasks.Hosting.IAnalyzerHostObject.SetAdditionalFiles(Microsoft.Build.Framework.ITaskItem[] additionalFiles) -> bool
-Microsoft.Build.Tasks.Hosting.IAnalyzerHostObject.SetAnalyzers(Microsoft.Build.Framework.ITaskItem[] analyzers) -> bool
-Microsoft.Build.Tasks.Hosting.IAnalyzerHostObject.SetRuleSet(string ruleSetFile) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject
-Microsoft.Build.Tasks.Hosting.ICscHostObject.BeginInitialization() -> void
-Microsoft.Build.Tasks.Hosting.ICscHostObject.Compile() -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.EndInitialization(out string errorMessage, out int errorCode) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.IsDesignTime() -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.IsUpToDate() -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAdditionalLibPaths(string[] additionalLibPaths) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAddModules(string[] addModules) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAllowUnsafeBlocks(bool allowUnsafeBlocks) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetBaseAddress(string baseAddress) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCheckForOverflowUnderflow(bool checkForOverflowUnderflow) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCodePage(int codePage) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDebugType(string debugType) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDefineConstants(string defineConstants) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDelaySign(bool delaySignExplicitlySet, bool delaySign) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDisabledWarnings(string disabledWarnings) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDocumentationFile(string documentationFile) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetEmitDebugInformation(bool emitDebugInformation) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetErrorReport(string errorReport) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetFileAlignment(int fileAlignment) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetGenerateFullPaths(bool generateFullPaths) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyContainer(string keyContainer) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyFile(string keyFile) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLangVersion(string langVersion) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[] linkResources) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetMainEntryPoint(string targetType, string mainEntryPoint) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetModuleAssemblyName(string moduleAssemblyName) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoConfig(bool noConfig) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoStandardLib(bool noStandardLib) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOptimize(bool optimize) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOutputAssembly(string outputAssembly) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPdbFile(string pdbFile) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPlatform(string platform) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[] references) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[] resources) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[] responseFiles) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[] sources) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTargetType(string targetType) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTreatWarningsAsErrors(bool treatWarningsAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningLevel(int warningLevel) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsAsErrors(string warningsAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsNotAsErrors(string warningsNotAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Icon(string win32Icon) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Resource(string win32Resource) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject2
-Microsoft.Build.Tasks.Hosting.ICscHostObject2.SetWin32Manifest(string win32Manifest) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject3
-Microsoft.Build.Tasks.Hosting.ICscHostObject3.SetApplicationConfiguration(string applicationConfiguration) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject4
-Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetHighEntropyVA(bool highEntropyVA) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetPlatformWith32BitPreference(string platformWith32BitPreference) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetSubsystemVersion(string subsystemVersion) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.BeginInitialization() -> void
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.Compile() -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.EndInitialization() -> void
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsDesignTime() -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsUpToDate() -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAdditionalLibPaths(string[] additionalLibPaths) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAddModules(string[] addModules) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetBaseAddress(string targetType, string baseAddress) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetCodePage(int codePage) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDebugType(bool emitDebugInformation, string debugType) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDefineConstants(string defineConstants) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDelaySign(bool delaySign) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDisabledWarnings(string disabledWarnings) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDocumentationFile(string documentationFile) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetErrorReport(string errorReport) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetFileAlignment(int fileAlignment) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetGenerateDocumentation(bool generateDocumentation) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetImports(Microsoft.Build.Framework.ITaskItem[] importsList) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyContainer(string keyContainer) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyFile(string keyFile) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[] linkResources) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetMainEntryPoint(string mainEntryPoint) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoConfig(bool noConfig) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoStandardLib(bool noStandardLib) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoWarnings(bool noWarnings) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptimize(bool optimize) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionCompare(string optionCompare) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionExplicit(bool optionExplicit) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrict(bool optionStrict) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrictType(string optionStrictType) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOutputAssembly(string outputAssembly) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetPlatform(string platform) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[] references) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRemoveIntegerChecks(bool removeIntegerChecks) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[] resources) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[] responseFiles) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRootNamespace(string rootNamespace) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSdkPath(string sdkPath) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[] sources) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetCompactFramework(bool targetCompactFramework) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetType(string targetType) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTreatWarningsAsErrors(bool treatWarningsAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsAsErrors(string warningsAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsNotAsErrors(string warningsNotAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Icon(string win32Icon) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Resource(string win32Resource) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject2
-Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetModuleAssemblyName(string moduleAssemblyName) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetOptionInfer(bool optionInfer) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetWin32Manifest(string win32Manifest) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject3
-Microsoft.Build.Tasks.Hosting.IVbcHostObject3.SetLanguageVersion(string languageVersion) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject4
-Microsoft.Build.Tasks.Hosting.IVbcHostObject4.SetVBRuntime(string VBRuntime) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.CompileAsync(out System.IntPtr buildSucceededEvent, out System.IntPtr buildFailedEvent) -> int
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.EndCompile(bool buildSuccess) -> int
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.GetFreeThreadedHostObject() -> Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetHighEntropyVA(bool highEntropyVA) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetPlatformWith32BitPreference(string platformWith32BitPreference) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetSubsystemVersion(string subsystemVersion) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded
-Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded.Compile() -> bool
-Microsoft.Build.Tasks.IFixedTypeInfo
-Microsoft.Build.Tasks.IFixedTypeInfo.AddressOfMember(int memid, System.Runtime.InteropServices.ComTypes.INVOKEKIND invKind, out System.IntPtr ppv) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.CreateInstance(object pUnkOuter, ref System.Guid riid, out object ppvObj) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetContainingTypeLib(out System.Runtime.InteropServices.ComTypes.ITypeLib ppTLB, out int pIndex) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetDllEntry(int memid, System.Runtime.InteropServices.ComTypes.INVOKEKIND invKind, System.IntPtr pBstrDllName, System.IntPtr pBstrName, System.IntPtr pwOrdinal) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetDocumentation(int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetFuncDesc(int index, out System.IntPtr ppFuncDesc) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetIDsOfNames(string[] rgszNames, int cNames, int[] pMemId) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetImplTypeFlags(int index, out System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS pImplTypeFlags) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetMops(int memid, out string pBstrMops) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetNames(int memid, string[] rgBstrNames, int cMaxNames, out int pcNames) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeInfo(System.IntPtr hRef, out Microsoft.Build.Tasks.IFixedTypeInfo ppTI) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeOfImplType(int index, out System.IntPtr href) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetTypeAttr(out System.IntPtr ppTypeAttr) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetTypeComp(out System.Runtime.InteropServices.ComTypes.ITypeComp ppTComp) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetVarDesc(int index, out System.IntPtr ppVarDesc) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.Invoke(object pvInstance, int memid, short wFlags, ref System.Runtime.InteropServices.ComTypes.DISPPARAMS pDispParams, System.IntPtr pVarResult, System.IntPtr pExcepInfo, out int puArgErr) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseFuncDesc(System.IntPtr pFuncDesc) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseTypeAttr(System.IntPtr pTypeAttr) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseVarDesc(System.IntPtr pVarDesc) -> void
-Microsoft.Build.Tasks.LC
-Microsoft.Build.Tasks.LC.LC() -> void
-Microsoft.Build.Tasks.LC.LicenseTarget.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.LC.LicenseTarget.set -> void
-Microsoft.Build.Tasks.LC.NoLogo.get -> bool
-Microsoft.Build.Tasks.LC.NoLogo.set -> void
-Microsoft.Build.Tasks.LC.OutputDirectory.get -> string
-Microsoft.Build.Tasks.LC.OutputDirectory.set -> void
-Microsoft.Build.Tasks.LC.OutputLicense.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.LC.OutputLicense.set -> void
-Microsoft.Build.Tasks.LC.ReferencedAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.LC.ReferencedAssemblies.set -> void
-Microsoft.Build.Tasks.LC.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.LC.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.LC.Sources.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.LC.Sources.set -> void
-Microsoft.Build.Tasks.LC.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.LC.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.MakeDir
-Microsoft.Build.Tasks.MakeDir.Directories.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.MakeDir.Directories.set -> void
-Microsoft.Build.Tasks.MakeDir.DirectoriesCreated.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.MakeDir.MakeDir() -> void
-Microsoft.Build.Tasks.Message
-Microsoft.Build.Tasks.Message.Code.get -> string
-Microsoft.Build.Tasks.Message.Code.set -> void
-Microsoft.Build.Tasks.Message.File.get -> string
-Microsoft.Build.Tasks.Message.File.set -> void
-Microsoft.Build.Tasks.Message.HelpKeyword.get -> string
-Microsoft.Build.Tasks.Message.HelpKeyword.set -> void
-Microsoft.Build.Tasks.Message.Importance.get -> string
-Microsoft.Build.Tasks.Message.Importance.set -> void
-Microsoft.Build.Tasks.Message.IsCritical.get -> bool
-Microsoft.Build.Tasks.Message.IsCritical.set -> void
-Microsoft.Build.Tasks.Message.Message() -> void
-Microsoft.Build.Tasks.Message.Text.get -> string
-Microsoft.Build.Tasks.Message.Text.set -> void
-Microsoft.Build.Tasks.Move
-Microsoft.Build.Tasks.Move.Cancel() -> void
-Microsoft.Build.Tasks.Move.DestinationFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Move.DestinationFiles.set -> void
-Microsoft.Build.Tasks.Move.DestinationFolder.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.Move.DestinationFolder.set -> void
-Microsoft.Build.Tasks.Move.Move() -> void
-Microsoft.Build.Tasks.Move.MovedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles.get -> bool
-Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles.set -> void
-Microsoft.Build.Tasks.Move.SourceFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Move.SourceFiles.set -> void
-Microsoft.Build.Tasks.MSBuild
-Microsoft.Build.Tasks.MSBuild.BuildInParallel.get -> bool
-Microsoft.Build.Tasks.MSBuild.BuildInParallel.set -> void
-Microsoft.Build.Tasks.MSBuild.MSBuild() -> void
-Microsoft.Build.Tasks.MSBuild.Projects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.MSBuild.Projects.set -> void
-Microsoft.Build.Tasks.MSBuild.Properties.get -> string[]
-Microsoft.Build.Tasks.MSBuild.Properties.set -> void
-Microsoft.Build.Tasks.MSBuild.RebaseOutputs.get -> bool
-Microsoft.Build.Tasks.MSBuild.RebaseOutputs.set -> void
-Microsoft.Build.Tasks.MSBuild.RemoveProperties.get -> string
-Microsoft.Build.Tasks.MSBuild.RemoveProperties.set -> void
-Microsoft.Build.Tasks.MSBuild.RunEachTargetSeparately.get -> bool
-Microsoft.Build.Tasks.MSBuild.RunEachTargetSeparately.set -> void
-Microsoft.Build.Tasks.MSBuild.SkipNonexistentProjects.get -> string
-Microsoft.Build.Tasks.MSBuild.SkipNonexistentProjects.set -> void
-Microsoft.Build.Tasks.MSBuild.StopOnFirstFailure.get -> bool
-Microsoft.Build.Tasks.MSBuild.StopOnFirstFailure.set -> void
-Microsoft.Build.Tasks.MSBuild.TargetAndPropertyListSeparators.get -> string[]
-Microsoft.Build.Tasks.MSBuild.TargetAndPropertyListSeparators.set -> void
-Microsoft.Build.Tasks.MSBuild.TargetOutputs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.MSBuild.Targets.get -> string[]
-Microsoft.Build.Tasks.MSBuild.Targets.set -> void
-Microsoft.Build.Tasks.MSBuild.ToolsVersion.get -> string
-Microsoft.Build.Tasks.MSBuild.ToolsVersion.set -> void
-Microsoft.Build.Tasks.MSBuild.UnloadProjectsOnCompletion.get -> bool
-Microsoft.Build.Tasks.MSBuild.UnloadProjectsOnCompletion.set -> void
-Microsoft.Build.Tasks.MSBuild.UseResultsCache.get -> bool
-Microsoft.Build.Tasks.MSBuild.UseResultsCache.set -> void
-Microsoft.Build.Tasks.ReadLinesFromFile
-Microsoft.Build.Tasks.ReadLinesFromFile.File.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ReadLinesFromFile.File.set -> void
-Microsoft.Build.Tasks.ReadLinesFromFile.Lines.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ReadLinesFromFile.Lines.set -> void
-Microsoft.Build.Tasks.ReadLinesFromFile.ReadLinesFromFile() -> void
-Microsoft.Build.Tasks.RegisterAssembly
-Microsoft.Build.Tasks.RegisterAssembly.Assemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RegisterAssembly.Assemblies.set -> void
-Microsoft.Build.Tasks.RegisterAssembly.AssemblyListFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.RegisterAssembly.AssemblyListFile.set -> void
-Microsoft.Build.Tasks.RegisterAssembly.CreateCodeBase.get -> bool
-Microsoft.Build.Tasks.RegisterAssembly.CreateCodeBase.set -> void
-Microsoft.Build.Tasks.RegisterAssembly.RegisterAssembly() -> void
-Microsoft.Build.Tasks.RegisterAssembly.ReportEvent(System.Runtime.InteropServices.ExporterEventKind kind, int code, string msg) -> void
-Microsoft.Build.Tasks.RegisterAssembly.ResolveRef(System.Reflection.Assembly assemblyToResolve) -> object
-Microsoft.Build.Tasks.RegisterAssembly.TypeLibFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RegisterAssembly.TypeLibFiles.set -> void
-Microsoft.Build.Tasks.RemoveDir
-Microsoft.Build.Tasks.RemoveDir.Directories.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RemoveDir.Directories.set -> void
-Microsoft.Build.Tasks.RemoveDir.RemovedDirectories.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RemoveDir.RemovedDirectories.set -> void
-Microsoft.Build.Tasks.RemoveDir.RemoveDir() -> void
-Microsoft.Build.Tasks.RemoveDuplicates
-Microsoft.Build.Tasks.RemoveDuplicates.Filtered.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RemoveDuplicates.Filtered.set -> void
-Microsoft.Build.Tasks.RemoveDuplicates.HadAnyDuplicates.get -> bool
-Microsoft.Build.Tasks.RemoveDuplicates.HadAnyDuplicates.set -> void
-Microsoft.Build.Tasks.RemoveDuplicates.Inputs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RemoveDuplicates.Inputs.set -> void
-Microsoft.Build.Tasks.RemoveDuplicates.RemoveDuplicates() -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Assemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Assemblies.set -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.CreateDesktopShortcut.get -> bool
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.CreateDesktopShortcut.set -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.DeploymentManifestEntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.DeploymentManifestEntryPoint.set -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.EntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.EntryPoint.set -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ErrorReportUrl.get -> string
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ErrorReportUrl.set -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Files.set -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ReferencedAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ReferencedAssemblies.set -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.RequiresFramework35SP1Assembly() -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.RequiresMinimumFramework35SP1.get -> bool
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.RequiresMinimumFramework35SP1.set -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.SigningManifests.get -> bool
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.SigningManifests.set -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.SuiteName.get -> string
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.SuiteName.set -> void
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference
-Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedAssemblyExtensions.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedAssemblyExtensions.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedRelatedFileExtensions.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedRelatedFileExtensions.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.Assemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.Assemblies.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyFiles.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyInformationCacheOutputPath.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyInformationCacheOutputPath.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyInformationCachePaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyInformationCachePaths.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AutoUnify.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.AutoUnify.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.CandidateAssemblyFiles.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.CandidateAssemblyFiles.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalDependenciesWhenParentReferenceInGac.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalDependenciesWhenParentReferenceInGac.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.DependsOnNETStandard.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.DependsOnSystemRuntime.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.DoNotCopyLocalIfInGac.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.DoNotCopyLocalIfInGac.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FilesWritten.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.FilesWritten.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependencies.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependencies.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependenciesOfExternallyResolvedReferences.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependenciesOfExternallyResolvedReferences.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindRelatedFiles.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindRelatedFiles.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindSatellites.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindSatellites.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindSerializationAssemblies.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindSerializationAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkAssemblyTables.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkAssemblyTables.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkFolders.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkFolders.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullTargetFrameworkSubsetNames.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullTargetFrameworkSubsetNames.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblySubsetTables.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblySubsetTables.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblyTables.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblyTables.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreTargetFrameworkAttributeVersionMismatch.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreTargetFrameworkAttributeVersionMismatch.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreVersionForFrameworkReferences.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreVersionForFrameworkReferences.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblySubsetTables.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblySubsetTables.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblyTables.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblyTables.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.LatestTargetFrameworkDirectories.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.LatestTargetFrameworkDirectories.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.OutputUnresolvedAssemblyConflicts.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.OutputUnresolvedAssemblyConflicts.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.ProfileName.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.ProfileName.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.ResolveAssemblyReference() -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedSDKReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedSDKReferences.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.ScatterFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.SearchPaths.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.SearchPaths.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.SerializationAssemblyFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.Silent.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.Silent.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.StateFile.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.StateFile.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.SuggestedRedirects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.SupportsBindingRedirectGeneration.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.SupportsBindingRedirectGeneration.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetedRuntimeVersion.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetedRuntimeVersion.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkDirectories.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkDirectories.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMoniker.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMoniker.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMonikerDisplayName.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMonikerDisplayName.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkSubsets.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkSubsets.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetProcessorArchitecture.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetProcessorArchitecture.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.UnresolvedAssemblyConflicts.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.UnresolveFrameworkAssembliesFromHigherFrameworks.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.UnresolveFrameworkAssembliesFromHigherFrameworks.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.WarnOrErrorOnTargetArchitectureMismatch.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.WarnOrErrorOnTargetArchitectureMismatch.set -> void
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.CodeAnalysisRuleSet.get -> string
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.CodeAnalysisRuleSet.set -> void
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.CodeAnalysisRuleSetDirectories.get -> string[]
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.CodeAnalysisRuleSetDirectories.set -> void
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.MSBuildProjectDirectory.get -> string
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.MSBuildProjectDirectory.set -> void
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.ResolveCodeAnalysisRuleSet() -> void
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.ResolvedCodeAnalysisRuleSet.get -> string
-Microsoft.Build.Tasks.ResolveComReference
-Microsoft.Build.Tasks.ResolveComReference.DelaySign.get -> bool
-Microsoft.Build.Tasks.ResolveComReference.DelaySign.set -> void
-Microsoft.Build.Tasks.ResolveComReference.EnvironmentVariables.get -> string[]
-Microsoft.Build.Tasks.ResolveComReference.EnvironmentVariables.set -> void
-Microsoft.Build.Tasks.ResolveComReference.ExecuteAsTool.get -> bool
-Microsoft.Build.Tasks.ResolveComReference.ExecuteAsTool.set -> void
-Microsoft.Build.Tasks.ResolveComReference.IncludeVersionInInteropName.get -> bool
-Microsoft.Build.Tasks.ResolveComReference.IncludeVersionInInteropName.set -> void
-Microsoft.Build.Tasks.ResolveComReference.KeyContainer.get -> string
-Microsoft.Build.Tasks.ResolveComReference.KeyContainer.set -> void
-Microsoft.Build.Tasks.ResolveComReference.KeyFile.get -> string
-Microsoft.Build.Tasks.ResolveComReference.KeyFile.set -> void
-Microsoft.Build.Tasks.ResolveComReference.NoClassMembers.get -> bool
-Microsoft.Build.Tasks.ResolveComReference.NoClassMembers.set -> void
-Microsoft.Build.Tasks.ResolveComReference.ResolveComReference() -> void
-Microsoft.Build.Tasks.ResolveComReference.ResolvedAssemblyReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveComReference.ResolvedAssemblyReferences.set -> void
-Microsoft.Build.Tasks.ResolveComReference.ResolvedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveComReference.ResolvedFiles.set -> void
-Microsoft.Build.Tasks.ResolveComReference.ResolvedModules.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveComReference.ResolvedModules.set -> void
-Microsoft.Build.Tasks.ResolveComReference.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.ResolveComReference.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.ResolveComReference.Silent.get -> bool
-Microsoft.Build.Tasks.ResolveComReference.Silent.set -> void
-Microsoft.Build.Tasks.ResolveComReference.StateFile.get -> string
-Microsoft.Build.Tasks.ResolveComReference.StateFile.set -> void
-Microsoft.Build.Tasks.ResolveComReference.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.ResolveComReference.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.ResolveComReference.TargetProcessorArchitecture.get -> string
-Microsoft.Build.Tasks.ResolveComReference.TargetProcessorArchitecture.set -> void
-Microsoft.Build.Tasks.ResolveComReference.TypeLibFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveComReference.TypeLibFiles.set -> void
-Microsoft.Build.Tasks.ResolveComReference.TypeLibNames.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveComReference.TypeLibNames.set -> void
-Microsoft.Build.Tasks.ResolveComReference.WrapperOutputDirectory.get -> string
-Microsoft.Build.Tasks.ResolveComReference.WrapperOutputDirectory.set -> void
-Microsoft.Build.Tasks.ResolveKeySource
-Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptShow.get -> int
-Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptShow.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptTimeout.get -> int
-Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptTimeout.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.CertificateFile.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.CertificateFile.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.CertificateThumbprint.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.CertificateThumbprint.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.KeyFile.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.KeyFile.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyContainer.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyContainer.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyFile.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyFile.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedThumbprint.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedThumbprint.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.ResolveKeySource() -> void
-Microsoft.Build.Tasks.ResolveKeySource.ShowImportDialogDespitePreviousFailures.get -> bool
-Microsoft.Build.Tasks.ResolveKeySource.ShowImportDialogDespitePreviousFailures.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.SuppressAutoClosePasswordPrompt.get -> bool
-Microsoft.Build.Tasks.ResolveKeySource.SuppressAutoClosePasswordPrompt.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles
-Microsoft.Build.Tasks.ResolveManifestFiles.AssemblyName.get -> string
-Microsoft.Build.Tasks.ResolveManifestFiles.AssemblyName.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.DeploymentManifestEntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ResolveManifestFiles.DeploymentManifestEntryPoint.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.EntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ResolveManifestFiles.EntryPoint.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.ExtraFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.ExtraFiles.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.Files.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.IsSelfContainedPublish.get -> bool
-Microsoft.Build.Tasks.ResolveManifestFiles.IsSelfContainedPublish.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.IsSingleFilePublish.get -> bool
-Microsoft.Build.Tasks.ResolveManifestFiles.IsSingleFilePublish.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.LauncherBasedDeployment.get -> bool
-Microsoft.Build.Tasks.ResolveManifestFiles.LauncherBasedDeployment.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.ManagedAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.ManagedAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.NativeAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.NativeAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputDeploymentManifestEntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputDeploymentManifestEntryPoint.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputEntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputEntryPoint.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputFiles.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.PublishFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.PublishFiles.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.ResolveManifestFiles() -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.RuntimePackAssets.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.RuntimePackAssets.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.SatelliteAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.SatelliteAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.SigningManifests.get -> bool
-Microsoft.Build.Tasks.ResolveManifestFiles.SigningManifests.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetCulture.get -> string
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetCulture.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkIdentifier.get -> string
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkIdentifier.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.ResolveNativeReference
-Microsoft.Build.Tasks.ResolveNativeReference.AdditionalSearchPaths.get -> string[]
-Microsoft.Build.Tasks.ResolveNativeReference.AdditionalSearchPaths.set -> void
-Microsoft.Build.Tasks.ResolveNativeReference.ContainedComComponents.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNativeReference.ContainedComComponents.set -> void
-Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseEtcFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseEtcFiles.set -> void
-Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseTlbFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseTlbFiles.set -> void
-Microsoft.Build.Tasks.ResolveNativeReference.ContainedPrerequisiteAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNativeReference.ContainedPrerequisiteAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveNativeReference.ContainedTypeLibraries.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNativeReference.ContainedTypeLibraries.set -> void
-Microsoft.Build.Tasks.ResolveNativeReference.ContainingReferenceFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNativeReference.ContainingReferenceFiles.set -> void
-Microsoft.Build.Tasks.ResolveNativeReference.NativeReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNativeReference.NativeReferences.set -> void
-Microsoft.Build.Tasks.ResolveNativeReference.ResolveNativeReference() -> void
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.PreresolvedProjectOutputs.get -> string
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.PreresolvedProjectOutputs.set -> void
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.ResolvedOutputPaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.ResolvedOutputPaths.set -> void
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.ResolveNonMSBuildProjectOutput() -> void
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.UnresolvedProjectReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.UnresolvedProjectReferences.set -> void
-Microsoft.Build.Tasks.ResolveProjectBase
-Microsoft.Build.Tasks.ResolveProjectBase.AddSyntheticProjectReferences(string currentProjectAbsolutePath) -> void
-Microsoft.Build.Tasks.ResolveProjectBase.GetProjectElement(Microsoft.Build.Framework.ITaskItem projectRef) -> System.Xml.XmlElement
-Microsoft.Build.Tasks.ResolveProjectBase.GetProjectItem(Microsoft.Build.Framework.ITaskItem projectRef) -> string
-Microsoft.Build.Tasks.ResolveProjectBase.ProjectReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveProjectBase.ProjectReferences.set -> void
-Microsoft.Build.Tasks.ResolveProjectBase.ResolveProjectBase() -> void
-Microsoft.Build.Tasks.ResolveSDKReference
-Microsoft.Build.Tasks.ResolveSDKReference.DisallowedSDKDependencies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.DisallowedSDKDependencies.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.InstalledSDKs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.InstalledSDKs.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.LogResolutionErrorsAsWarnings.get -> bool
-Microsoft.Build.Tasks.ResolveSDKReference.LogResolutionErrorsAsWarnings.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.Prefer32Bit.get -> bool
-Microsoft.Build.Tasks.ResolveSDKReference.Prefer32Bit.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.ProjectName.get -> string
-Microsoft.Build.Tasks.ResolveSDKReference.ProjectName.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.References.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.References.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.ResolvedSDKReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.ResolveSDKReference() -> void
-Microsoft.Build.Tasks.ResolveSDKReference.RuntimeReferenceOnlySDKDependencies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.RuntimeReferenceOnlySDKDependencies.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.SDKReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.SDKReferences.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.TargetedSDKArchitecture.get -> string
-Microsoft.Build.Tasks.ResolveSDKReference.TargetedSDKArchitecture.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.TargetedSDKConfiguration.get -> string
-Microsoft.Build.Tasks.ResolveSDKReference.TargetedSDKConfiguration.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.TargetPlatformIdentifier.get -> string
-Microsoft.Build.Tasks.ResolveSDKReference.TargetPlatformIdentifier.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.TargetPlatformVersion.get -> string
-Microsoft.Build.Tasks.ResolveSDKReference.TargetPlatformVersion.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.WarnOnMissingPlatformVersion.get -> bool
-Microsoft.Build.Tasks.ResolveSDKReference.WarnOnMissingPlatformVersion.set -> void
-Microsoft.Build.Tasks.RoslynCodeTaskFactory
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask task) -> void
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> Microsoft.Build.Framework.ITask
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.FactoryName.get -> string
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.GetTaskParameters() -> Microsoft.Build.Framework.TaskPropertyInfo[]
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.Initialize(string taskName, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.RoslynCodeTaskFactory() -> void
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.TaskType.get -> System.Type
-Microsoft.Build.Tasks.SGen
-Microsoft.Build.Tasks.SGen.BuildAssemblyName.get -> string
-Microsoft.Build.Tasks.SGen.BuildAssemblyName.set -> void
-Microsoft.Build.Tasks.SGen.BuildAssemblyPath.get -> string
-Microsoft.Build.Tasks.SGen.BuildAssemblyPath.set -> void
-Microsoft.Build.Tasks.SGen.DelaySign.get -> bool
-Microsoft.Build.Tasks.SGen.DelaySign.set -> void
-Microsoft.Build.Tasks.SGen.KeyContainer.get -> string
-Microsoft.Build.Tasks.SGen.KeyContainer.set -> void
-Microsoft.Build.Tasks.SGen.KeyFile.get -> string
-Microsoft.Build.Tasks.SGen.KeyFile.set -> void
-Microsoft.Build.Tasks.SGen.Platform.get -> string
-Microsoft.Build.Tasks.SGen.Platform.set -> void
-Microsoft.Build.Tasks.SGen.References.get -> string[]
-Microsoft.Build.Tasks.SGen.References.set -> void
-Microsoft.Build.Tasks.SGen.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.SGen.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.SGen.SerializationAssembly.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.SGen.SerializationAssembly.set -> void
-Microsoft.Build.Tasks.SGen.SerializationAssemblyName.get -> string
-Microsoft.Build.Tasks.SGen.SGen() -> void
-Microsoft.Build.Tasks.SGen.ShouldGenerateSerializer.get -> bool
-Microsoft.Build.Tasks.SGen.ShouldGenerateSerializer.set -> void
-Microsoft.Build.Tasks.SGen.Types.get -> string[]
-Microsoft.Build.Tasks.SGen.Types.set -> void
-Microsoft.Build.Tasks.SGen.UseKeep.get -> bool
-Microsoft.Build.Tasks.SGen.UseKeep.set -> void
-Microsoft.Build.Tasks.SGen.UseProxyTypes.get -> bool
-Microsoft.Build.Tasks.SGen.UseProxyTypes.set -> void
-Microsoft.Build.Tasks.SignFile
-Microsoft.Build.Tasks.SignFile.CertificateThumbprint.get -> string
-Microsoft.Build.Tasks.SignFile.CertificateThumbprint.set -> void
-Microsoft.Build.Tasks.SignFile.DisallowMansignTimestampFallback.get -> bool
-Microsoft.Build.Tasks.SignFile.DisallowMansignTimestampFallback.set -> void
-Microsoft.Build.Tasks.SignFile.SignFile() -> void
-Microsoft.Build.Tasks.SignFile.SigningTarget.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.SignFile.SigningTarget.set -> void
-Microsoft.Build.Tasks.SignFile.TargetFrameworkIdentifier.get -> string
-Microsoft.Build.Tasks.SignFile.TargetFrameworkIdentifier.set -> void
-Microsoft.Build.Tasks.SignFile.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.SignFile.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.SignFile.TimestampUrl.get -> string
-Microsoft.Build.Tasks.SignFile.TimestampUrl.set -> void
-Microsoft.Build.Tasks.TaskExtension
-Microsoft.Build.Tasks.TaskExtension.Log.get -> Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Tasks.TaskLoggingHelperExtension
-Microsoft.Build.Tasks.TaskLoggingHelperExtension.TaskLoggingHelperExtension(Microsoft.Build.Framework.ITask taskInstance, System.Resources.ResourceManager primaryResources, System.Resources.ResourceManager sharedResources, string helpKeywordPrefix) -> void
-Microsoft.Build.Tasks.TaskLoggingHelperExtension.TaskSharedResources.get -> System.Resources.ResourceManager
-Microsoft.Build.Tasks.TaskLoggingHelperExtension.TaskSharedResources.set -> void
-Microsoft.Build.Tasks.Telemetry
-Microsoft.Build.Tasks.Telemetry.EventData.get -> string
-Microsoft.Build.Tasks.Telemetry.EventData.set -> void
-Microsoft.Build.Tasks.Telemetry.EventName.get -> string
-Microsoft.Build.Tasks.Telemetry.EventName.set -> void
-Microsoft.Build.Tasks.Telemetry.Telemetry() -> void
-Microsoft.Build.Tasks.ToolTaskExtension
-Microsoft.Build.Tasks.ToolTaskExtension.Log.get -> Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Tasks.Touch
-Microsoft.Build.Tasks.Touch.AlwaysCreate.get -> bool
-Microsoft.Build.Tasks.Touch.AlwaysCreate.set -> void
-Microsoft.Build.Tasks.Touch.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Touch.Files.set -> void
-Microsoft.Build.Tasks.Touch.ForceTouch.get -> bool
-Microsoft.Build.Tasks.Touch.ForceTouch.set -> void
-Microsoft.Build.Tasks.Touch.Time.get -> string
-Microsoft.Build.Tasks.Touch.Time.set -> void
-Microsoft.Build.Tasks.Touch.Touch() -> void
-Microsoft.Build.Tasks.Touch.TouchedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Touch.TouchedFiles.set -> void
-Microsoft.Build.Tasks.UnregisterAssembly
-Microsoft.Build.Tasks.UnregisterAssembly.Assemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.UnregisterAssembly.Assemblies.set -> void
-Microsoft.Build.Tasks.UnregisterAssembly.AssemblyListFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.UnregisterAssembly.AssemblyListFile.set -> void
-Microsoft.Build.Tasks.UnregisterAssembly.TypeLibFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.UnregisterAssembly.TypeLibFiles.set -> void
-Microsoft.Build.Tasks.UnregisterAssembly.UnregisterAssembly() -> void
-Microsoft.Build.Tasks.Unzip
-Microsoft.Build.Tasks.Unzip.Cancel() -> void
-Microsoft.Build.Tasks.Unzip.DestinationFolder.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.Unzip.DestinationFolder.set -> void
-Microsoft.Build.Tasks.Unzip.Exclude.get -> string
-Microsoft.Build.Tasks.Unzip.Exclude.set -> void
-Microsoft.Build.Tasks.Unzip.Include.get -> string
-Microsoft.Build.Tasks.Unzip.Include.set -> void
-Microsoft.Build.Tasks.Unzip.OverwriteReadOnlyFiles.get -> bool
-Microsoft.Build.Tasks.Unzip.OverwriteReadOnlyFiles.set -> void
-Microsoft.Build.Tasks.Unzip.SkipUnchangedFiles.get -> bool
-Microsoft.Build.Tasks.Unzip.SkipUnchangedFiles.set -> void
-Microsoft.Build.Tasks.Unzip.SourceFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Unzip.SourceFiles.set -> void
-Microsoft.Build.Tasks.Unzip.Unzip() -> void
-Microsoft.Build.Tasks.UpdateManifest
-Microsoft.Build.Tasks.UpdateManifest.ApplicationManifest.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.UpdateManifest.ApplicationManifest.set -> void
-Microsoft.Build.Tasks.UpdateManifest.ApplicationPath.get -> string
-Microsoft.Build.Tasks.UpdateManifest.ApplicationPath.set -> void
-Microsoft.Build.Tasks.UpdateManifest.InputManifest.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.UpdateManifest.InputManifest.set -> void
-Microsoft.Build.Tasks.UpdateManifest.OutputManifest.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.UpdateManifest.OutputManifest.set -> void
-Microsoft.Build.Tasks.UpdateManifest.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.UpdateManifest.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.UpdateManifest.UpdateManifest() -> void
-Microsoft.Build.Tasks.VerifyFileHash
-Microsoft.Build.Tasks.VerifyFileHash.Algorithm.get -> string
-Microsoft.Build.Tasks.VerifyFileHash.Algorithm.set -> void
-Microsoft.Build.Tasks.VerifyFileHash.File.get -> string
-Microsoft.Build.Tasks.VerifyFileHash.File.set -> void
-Microsoft.Build.Tasks.VerifyFileHash.Hash.get -> string
-Microsoft.Build.Tasks.VerifyFileHash.Hash.set -> void
-Microsoft.Build.Tasks.VerifyFileHash.HashEncoding.get -> string
-Microsoft.Build.Tasks.VerifyFileHash.HashEncoding.set -> void
-Microsoft.Build.Tasks.VerifyFileHash.VerifyFileHash() -> void
-Microsoft.Build.Tasks.Warning
-Microsoft.Build.Tasks.Warning.Code.get -> string
-Microsoft.Build.Tasks.Warning.Code.set -> void
-Microsoft.Build.Tasks.Warning.File.get -> string
-Microsoft.Build.Tasks.Warning.File.set -> void
-Microsoft.Build.Tasks.Warning.HelpKeyword.get -> string
-Microsoft.Build.Tasks.Warning.HelpKeyword.set -> void
-Microsoft.Build.Tasks.Warning.HelpLink.get -> string
-Microsoft.Build.Tasks.Warning.HelpLink.set -> void
-Microsoft.Build.Tasks.Warning.Text.get -> string
-Microsoft.Build.Tasks.Warning.Text.set -> void
-Microsoft.Build.Tasks.Warning.Warning() -> void
-Microsoft.Build.Tasks.WinMDExp
-Microsoft.Build.Tasks.WinMDExp.AssemblyUnificationPolicy.get -> string
-Microsoft.Build.Tasks.WinMDExp.AssemblyUnificationPolicy.set -> void
-Microsoft.Build.Tasks.WinMDExp.DisabledWarnings.get -> string
-Microsoft.Build.Tasks.WinMDExp.DisabledWarnings.set -> void
-Microsoft.Build.Tasks.WinMDExp.InputDocumentationFile.get -> string
-Microsoft.Build.Tasks.WinMDExp.InputDocumentationFile.set -> void
-Microsoft.Build.Tasks.WinMDExp.InputPDBFile.get -> string
-Microsoft.Build.Tasks.WinMDExp.InputPDBFile.set -> void
-Microsoft.Build.Tasks.WinMDExp.OutputDocumentationFile.get -> string
-Microsoft.Build.Tasks.WinMDExp.OutputDocumentationFile.set -> void
-Microsoft.Build.Tasks.WinMDExp.OutputPDBFile.get -> string
-Microsoft.Build.Tasks.WinMDExp.OutputPDBFile.set -> void
-Microsoft.Build.Tasks.WinMDExp.OutputWindowsMetadataFile.get -> string
-Microsoft.Build.Tasks.WinMDExp.OutputWindowsMetadataFile.set -> void
-Microsoft.Build.Tasks.WinMDExp.References.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.WinMDExp.References.set -> void
-Microsoft.Build.Tasks.WinMDExp.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.WinMDExp.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.WinMDExp.TreatWarningsAsErrors.get -> bool
-Microsoft.Build.Tasks.WinMDExp.TreatWarningsAsErrors.set -> void
-Microsoft.Build.Tasks.WinMDExp.UTF8Output.get -> bool
-Microsoft.Build.Tasks.WinMDExp.UTF8Output.set -> void
-Microsoft.Build.Tasks.WinMDExp.WinMDExp() -> void
-Microsoft.Build.Tasks.WinMDExp.WinMDModule.get -> string
-Microsoft.Build.Tasks.WinMDExp.WinMDModule.set -> void
-Microsoft.Build.Tasks.WriteCodeFragment
-Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes.set -> void
-Microsoft.Build.Tasks.WriteCodeFragment.Language.get -> string
-Microsoft.Build.Tasks.WriteCodeFragment.Language.set -> void
-Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory.set -> void
-Microsoft.Build.Tasks.WriteCodeFragment.OutputFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.WriteCodeFragment.OutputFile.set -> void
-Microsoft.Build.Tasks.WriteCodeFragment.WriteCodeFragment() -> void
-Microsoft.Build.Tasks.WriteLinesToFile
-Microsoft.Build.Tasks.WriteLinesToFile.Encoding.get -> string
-Microsoft.Build.Tasks.WriteLinesToFile.Encoding.set -> void
-Microsoft.Build.Tasks.WriteLinesToFile.File.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.WriteLinesToFile.File.set -> void
-Microsoft.Build.Tasks.WriteLinesToFile.Lines.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.WriteLinesToFile.Lines.set -> void
-Microsoft.Build.Tasks.WriteLinesToFile.Overwrite.get -> bool
-Microsoft.Build.Tasks.WriteLinesToFile.Overwrite.set -> void
-Microsoft.Build.Tasks.WriteLinesToFile.WriteLinesToFile() -> void
-Microsoft.Build.Tasks.WriteLinesToFile.WriteOnlyWhenDifferent.get -> bool
-Microsoft.Build.Tasks.WriteLinesToFile.WriteOnlyWhenDifferent.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation
-Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation.CommandLineArgumentRelation(string argument, string value, bool required, string separator) -> void
-Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation.Separator.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation.Separator.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineGenerator
-Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AdditionalOptions.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AdditionalOptions.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AlwaysAppend.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AlwaysAppend.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineGenerator.CommandLineGenerator(Microsoft.Build.Framework.XamlTypes.Rule rule, System.Collections.Generic.Dictionary<string, object> parameterValues) -> void
-Microsoft.Build.Tasks.Xaml.CommandLineGenerator.CommandLineTemplate.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineGenerator.CommandLineTemplate.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineGenerator.GenerateCommandLine() -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.AllowMultipleValues.get -> bool
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.AllowMultipleValues.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.ArgumentRequired.get -> bool
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.ArgumentRequired.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Arguments.get -> System.Collections.Generic.ICollection<System.Tuple<string, bool>>
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Arguments.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.BooleanValue.get -> bool
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.BooleanValue.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.CommandLineToolSwitch() -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.CommandLineToolSwitch(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType toolType) -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Description.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Description.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.DisplayName.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.DisplayName.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.FallbackArgumentParameter.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.FallbackArgumentParameter.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.FalseSuffix.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.FalseSuffix.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.IncludeInCommandLine.get -> bool
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.IncludeInCommandLine.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.IsValid.get -> bool
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.IsValid.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Name.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Name.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Number.get -> int
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Number.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Overrides.get -> System.Collections.Generic.LinkedList<System.Collections.Generic.KeyValuePair<string, string>>
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Parents.get -> System.Collections.Generic.LinkedList<string>
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Required.get -> bool
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Required.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.ReverseSwitchValue.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.ReverseSwitchValue.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Reversible.get -> bool
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Reversible.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Separator.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Separator.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.StringList.get -> string[]
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.StringList.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.SwitchValue.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.SwitchValue.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.TaskItemArray.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.TaskItemArray.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.TrueSuffix.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.TrueSuffix.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Type.get -> Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Type.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Value.get -> string
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Value.set -> void
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.Boolean = 0 -> Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.Integer = 1 -> Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.ITaskItemArray = 4 -> Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.String = 2 -> Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType
-Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.StringArray = 3 -> Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType
-Microsoft.Build.Tasks.Xaml.PropertyRelation
-Microsoft.Build.Tasks.Xaml.PropertyRelation.Argument.get -> string
-Microsoft.Build.Tasks.Xaml.PropertyRelation.Argument.set -> void
-Microsoft.Build.Tasks.Xaml.PropertyRelation.PropertyRelation() -> void
-Microsoft.Build.Tasks.Xaml.PropertyRelation.PropertyRelation(string argument, string value, bool required) -> void
-Microsoft.Build.Tasks.Xaml.PropertyRelation.Required.get -> bool
-Microsoft.Build.Tasks.Xaml.PropertyRelation.Required.set -> void
-Microsoft.Build.Tasks.Xaml.PropertyRelation.Value.get -> string
-Microsoft.Build.Tasks.Xaml.PropertyRelation.Value.set -> void
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ActiveToolSwitches.get -> System.Collections.Generic.Dictionary<string, Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch>
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ActiveToolSwitchesValues.get -> System.Collections.Generic.Dictionary<string, Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch>
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ActiveToolSwitchesValues.set -> void
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AddActiveSwitchToolValue(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch switchToAdd) -> void
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AdditionalOptions.get -> string
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AdditionalOptions.set -> void
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.CommandLineTemplate.get -> string
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.CommandLineTemplate.set -> void
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.CreateSwitchValue(string propertyName, string baseSwitch, string separator, System.Tuple<string, bool>[] arguments) -> string
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.IsPropertySet(string propertyName) -> bool
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ReadSwitchMap(string propertyName, string[][] switchMap, string value) -> string
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ReadSwitchMap2(string propertyName, System.Tuple<string, string, System.Tuple<string, bool>[]>[] switchMap, string value) -> int
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ReplaceToolSwitch(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch switchToAdd) -> void
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ValidateInteger(string switchName, int min, int max, int value) -> bool
-Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.XamlDataDrivenToolTask(string[] switchOrderList, System.Resources.ResourceManager taskResources) -> void
-Microsoft.Build.Tasks.XamlTaskFactory
-Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask task) -> void
-Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> Microsoft.Build.Framework.ITask
-Microsoft.Build.Tasks.XamlTaskFactory.FactoryName.get -> string
-Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters() -> Microsoft.Build.Framework.TaskPropertyInfo[]
-Microsoft.Build.Tasks.XamlTaskFactory.Initialize(string taskName, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> taskParameters, string taskElementContents, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
-Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents.get -> string
-Microsoft.Build.Tasks.XamlTaskFactory.TaskName.get -> string
-Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace.get -> string
-Microsoft.Build.Tasks.XamlTaskFactory.TaskType.get -> System.Type
-Microsoft.Build.Tasks.XamlTaskFactory.XamlTaskFactory() -> void
-Microsoft.Build.Tasks.XmlPeek
-Microsoft.Build.Tasks.XmlPeek.Namespaces.get -> string
-Microsoft.Build.Tasks.XmlPeek.Namespaces.set -> void
-Microsoft.Build.Tasks.XmlPeek.ProhibitDtd.get -> bool
-Microsoft.Build.Tasks.XmlPeek.ProhibitDtd.set -> void
-Microsoft.Build.Tasks.XmlPeek.Query.get -> string
-Microsoft.Build.Tasks.XmlPeek.Query.set -> void
-Microsoft.Build.Tasks.XmlPeek.Result.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.XmlPeek.XmlContent.get -> string
-Microsoft.Build.Tasks.XmlPeek.XmlContent.set -> void
-Microsoft.Build.Tasks.XmlPeek.XmlInputPath.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.XmlPeek.XmlInputPath.set -> void
-Microsoft.Build.Tasks.XmlPeek.XmlPeek() -> void
-Microsoft.Build.Tasks.XmlPoke
-Microsoft.Build.Tasks.XmlPoke.Namespaces.get -> string
-Microsoft.Build.Tasks.XmlPoke.Namespaces.set -> void
-Microsoft.Build.Tasks.XmlPoke.Query.get -> string
-Microsoft.Build.Tasks.XmlPoke.Query.set -> void
-Microsoft.Build.Tasks.XmlPoke.Value.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.XmlPoke.Value.set -> void
-Microsoft.Build.Tasks.XmlPoke.XmlInputPath.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.XmlPoke.XmlInputPath.set -> void
-Microsoft.Build.Tasks.XmlPoke.XmlPoke() -> void
-Microsoft.Build.Tasks.XslTransformation
-Microsoft.Build.Tasks.XslTransformation.OutputPaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.XslTransformation.OutputPaths.set -> void
-Microsoft.Build.Tasks.XslTransformation.Parameters.get -> string
-Microsoft.Build.Tasks.XslTransformation.Parameters.set -> void
-Microsoft.Build.Tasks.XslTransformation.UseTrustedSettings.get -> bool
-Microsoft.Build.Tasks.XslTransformation.UseTrustedSettings.set -> void
-Microsoft.Build.Tasks.XslTransformation.XmlContent.get -> string
-Microsoft.Build.Tasks.XslTransformation.XmlContent.set -> void
-Microsoft.Build.Tasks.XslTransformation.XmlInputPaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.XslTransformation.XmlInputPaths.set -> void
-Microsoft.Build.Tasks.XslTransformation.XslCompiledDllPath.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.XslTransformation.XslCompiledDllPath.set -> void
-Microsoft.Build.Tasks.XslTransformation.XslContent.get -> string
-Microsoft.Build.Tasks.XslTransformation.XslContent.set -> void
-Microsoft.Build.Tasks.XslTransformation.XslInputPath.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.XslTransformation.XslInputPath.set -> void
-Microsoft.Build.Tasks.XslTransformation.XslTransformation() -> void
-Microsoft.Build.Tasks.ZipDirectory
-Microsoft.Build.Tasks.ZipDirectory.DestinationFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ZipDirectory.DestinationFile.set -> void
-Microsoft.Build.Tasks.ZipDirectory.Overwrite.get -> bool
-Microsoft.Build.Tasks.ZipDirectory.Overwrite.set -> void
-Microsoft.Build.Tasks.ZipDirectory.SourceDirectory.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ZipDirectory.SourceDirectory.set -> void
-Microsoft.Build.Tasks.ZipDirectory.ZipDirectory() -> void
-override Microsoft.Build.Tasks.AL.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.AL.Execute() -> bool
-override Microsoft.Build.Tasks.AL.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.AL.ToolName.get -> string
-override Microsoft.Build.Tasks.AspNetCompiler.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.AspNetCompiler.Execute() -> bool
-override Microsoft.Build.Tasks.AspNetCompiler.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.AspNetCompiler.ToolName.get -> string
-override Microsoft.Build.Tasks.AspNetCompiler.ValidateParameters() -> bool
-override Microsoft.Build.Tasks.AssignCulture.Execute() -> bool
-override Microsoft.Build.Tasks.AssignLinkMetadata.Execute() -> bool
-override Microsoft.Build.Tasks.AssignProjectConfiguration.Execute() -> bool
-override Microsoft.Build.Tasks.AssignTargetPath.Execute() -> bool
-override Microsoft.Build.Tasks.CallTarget.Execute() -> bool
-override Microsoft.Build.Tasks.CombinePath.Execute() -> bool
-override Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.Execute() -> bool
-override Microsoft.Build.Tasks.CombineXmlElements.Execute() -> bool
-override Microsoft.Build.Tasks.ConvertToAbsolutePath.Execute() -> bool
-override Microsoft.Build.Tasks.Copy.Execute() -> bool
-override Microsoft.Build.Tasks.CreateCSharpManifestResourceName.CreateManifestName(string fileName, string linkFileName, string rootNamespace, string dependentUponFileName, System.IO.Stream binaryStream) -> string
-override Microsoft.Build.Tasks.CreateCSharpManifestResourceName.IsSourceFile(string fileName) -> bool
-override Microsoft.Build.Tasks.CreateCSharpManifestResourceName.SourceFileExtension.get -> string
-override Microsoft.Build.Tasks.CreateItem.Execute() -> bool
-override Microsoft.Build.Tasks.CreateManifestResourceName.Execute() -> bool
-override Microsoft.Build.Tasks.CreateProperty.Execute() -> bool
-override Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.CreateManifestName(string fileName, string linkFileName, string rootNamespace, string dependentUponFileName, System.IO.Stream binaryStream) -> string
-override Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.IsSourceFile(string fileName) -> bool
-override Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.SourceFileExtension.get -> string
-override Microsoft.Build.Tasks.Delete.Execute() -> bool
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.ToString() -> string
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.EntryPoint.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.EntryPoint.set -> void
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Validate() -> void
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ToString() -> string
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.ToString() -> string
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ToString() -> string
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.EntryPoint.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.EntryPoint.set -> void
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Validate() -> void
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ToString() -> string
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ToString() -> string
-override Microsoft.Build.Tasks.DownloadFile.Execute() -> bool
-override Microsoft.Build.Tasks.Error.Execute() -> bool
-override Microsoft.Build.Tasks.ErrorFromResources.Execute() -> bool
-override Microsoft.Build.Tasks.Exec.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.Exec.ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) -> int
-override Microsoft.Build.Tasks.Exec.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.Exec.GetWorkingDirectory() -> string
-override Microsoft.Build.Tasks.Exec.HandleTaskExecutionErrors() -> bool
-override Microsoft.Build.Tasks.Exec.LogEventsFromTextOutput(string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance) -> void
-override Microsoft.Build.Tasks.Exec.LogPathToTool(string toolName, string pathToTool) -> void
-override Microsoft.Build.Tasks.Exec.LogToolCommand(string message) -> void
-override Microsoft.Build.Tasks.Exec.StandardErrorEncoding.get -> System.Text.Encoding
-override Microsoft.Build.Tasks.Exec.StandardErrorLoggingImportance.get -> Microsoft.Build.Framework.MessageImportance
-override Microsoft.Build.Tasks.Exec.StandardOutputEncoding.get -> System.Text.Encoding
-override Microsoft.Build.Tasks.Exec.StandardOutputLoggingImportance.get -> Microsoft.Build.Framework.MessageImportance
-override Microsoft.Build.Tasks.Exec.ToolName.get -> string
-override Microsoft.Build.Tasks.Exec.ValidateParameters() -> bool
-override Microsoft.Build.Tasks.FindAppConfigFile.Execute() -> bool
-override Microsoft.Build.Tasks.FindInList.Execute() -> bool
-override Microsoft.Build.Tasks.FindInvalidProjectReferences.Execute() -> bool
-override Microsoft.Build.Tasks.FindUnderPath.Execute() -> bool
-override Microsoft.Build.Tasks.FormatUrl.Execute() -> bool
-override Microsoft.Build.Tasks.FormatVersion.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateApplicationManifest.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateBindingRedirects.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateBootstrapper.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateDeploymentManifest.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateLauncher.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateManifestBase.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateResource.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateTrustInfo.Execute() -> bool
-override Microsoft.Build.Tasks.GetAssemblyIdentity.Execute() -> bool
-override Microsoft.Build.Tasks.GetCompatiblePlatform.Execute() -> bool
-override Microsoft.Build.Tasks.GetFileHash.Execute() -> bool
-override Microsoft.Build.Tasks.GetFrameworkPath.Execute() -> bool
-override Microsoft.Build.Tasks.GetFrameworkSdkPath.Execute() -> bool
-override Microsoft.Build.Tasks.GetInstalledSDKLocations.Execute() -> bool
-override Microsoft.Build.Tasks.GetReferenceAssemblyPaths.Execute() -> bool
-override Microsoft.Build.Tasks.GetSDKReferenceFiles.Execute() -> bool
-override Microsoft.Build.Tasks.Hash.Execute() -> bool
-override Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.LC.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.LC.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.LC.ToolName.get -> string
-override Microsoft.Build.Tasks.LC.ValidateParameters() -> bool
-override Microsoft.Build.Tasks.MakeDir.Execute() -> bool
-override Microsoft.Build.Tasks.Message.Execute() -> bool
-override Microsoft.Build.Tasks.Move.Execute() -> bool
-override Microsoft.Build.Tasks.MSBuild.Execute() -> bool
-override Microsoft.Build.Tasks.ReadLinesFromFile.Execute() -> bool
-override Microsoft.Build.Tasks.RegisterAssembly.Execute() -> bool
-override Microsoft.Build.Tasks.RemoveDir.Execute() -> bool
-override Microsoft.Build.Tasks.RemoveDuplicates.Execute() -> bool
-override Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveAssemblyReference.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveComReference.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveKeySource.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveManifestFiles.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveNativeReference.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveSDKReference.Execute() -> bool
-override Microsoft.Build.Tasks.SGen.GenerateCommandLineCommands() -> string
-override Microsoft.Build.Tasks.SGen.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.SGen.SkipTaskExecution() -> bool
-override Microsoft.Build.Tasks.SGen.ToolName.get -> string
-override Microsoft.Build.Tasks.SGen.ValidateParameters() -> bool
-override Microsoft.Build.Tasks.SignFile.Execute() -> bool
-override Microsoft.Build.Tasks.TaskLoggingHelperExtension.FormatResourceString(string resourceName, params object[] args) -> string
-override Microsoft.Build.Tasks.Telemetry.Execute() -> bool
-override Microsoft.Build.Tasks.Touch.Execute() -> bool
-override Microsoft.Build.Tasks.UnregisterAssembly.Execute() -> bool
-override Microsoft.Build.Tasks.Unzip.Execute() -> bool
-override Microsoft.Build.Tasks.UpdateManifest.Execute() -> bool
-override Microsoft.Build.Tasks.VerifyFileHash.Execute() -> bool
-override Microsoft.Build.Tasks.Warning.Execute() -> bool
-override Microsoft.Build.Tasks.WinMDExp.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.WinMDExp.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.WinMDExp.SkipTaskExecution() -> bool
-override Microsoft.Build.Tasks.WinMDExp.StandardErrorEncoding.get -> System.Text.Encoding
-override Microsoft.Build.Tasks.WinMDExp.StandardOutputEncoding.get -> System.Text.Encoding
-override Microsoft.Build.Tasks.WinMDExp.ToolName.get -> string
-override Microsoft.Build.Tasks.WinMDExp.UseNewLineSeparatorInResponseFile.get -> bool
-override Microsoft.Build.Tasks.WinMDExp.ValidateParameters() -> bool
-override Microsoft.Build.Tasks.WriteCodeFragment.Execute() -> bool
-override Microsoft.Build.Tasks.WriteLinesToFile.Execute() -> bool
-override Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.Execute() -> bool
-override Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.GenerateCommandLineCommands() -> string
-override Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.GenerateResponseFileCommands() -> string
-override Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.HandleTaskExecutionErrors() -> bool
-override Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ResponseFileEncoding.get -> System.Text.Encoding
-override Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ValidateParameters() -> bool
-override Microsoft.Build.Tasks.XmlPeek.Execute() -> bool
-override Microsoft.Build.Tasks.XmlPoke.Execute() -> bool
-override Microsoft.Build.Tasks.XslTransformation.Execute() -> bool
-override Microsoft.Build.Tasks.ZipDirectory.Execute() -> bool
-override System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription.CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm key) -> System.Security.Cryptography.AsymmetricSignatureDeformatter
-override System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription.CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm key) -> System.Security.Cryptography.AsymmetricSignatureFormatter
-static Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(string name) -> string
-static Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.XmlToConfigurationFile(System.Xml.XmlNode input) -> string
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromAssemblyName(string assemblyName) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromFile(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManagedAssembly(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManifest(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromNativeAssembly(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(string manifestType, string path, bool preserveStream) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(string manifestType, System.IO.Stream input, bool preserveStream) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(string path, bool preserveStream) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.IO.Stream input, bool preserveStream) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest, string path) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest, string path, string targetframeWorkVersion) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest, System.IO.Stream output) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(string targetZone, System.Security.PermissionSet includedPermissionSet, string[] excludedPermissions) -> System.Security.PermissionSet
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(string[] ids) -> System.Security.PermissionSet
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet permissionSet) -> string[]
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certPath, System.Security.SecureString certPassword, System.Uri timestampUrl, string path) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion, string targetFrameworkIdentifier) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion, string targetFrameworkIdentifier, bool disallowMansignTimestampFallback) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2 cert, System.Uri timestampUrl, string path) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement element) -> System.Security.PermissionSet
-System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription
-System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription.RSAPKCS1SHA256SignatureDescription() -> void
-virtual Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.EntryPoint.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-virtual Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.EntryPoint.set -> void
-virtual Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Validate() -> void
-virtual Microsoft.Build.Tasks.GenerateManifestBase.ValidateInputs() -> bool
-virtual Microsoft.Build.Tasks.GenerateManifestBase.ValidateOutput() -> bool
-virtual Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AcceptableNonZeroExitCodes.get -> string[]
-virtual Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AcceptableNonZeroExitCodes.set -> void
\ No newline at end of file
diff --git a/src/Tasks/PublicAPI/net/PublicAPI.Unshipped.txt b/src/Tasks/PublicAPI/net/PublicAPI.Unshipped.txt
deleted file mode 100644
index e2378ba70a3..00000000000
--- a/src/Tasks/PublicAPI/net/PublicAPI.Unshipped.txt
+++ /dev/null
@@ -1,9 +0,0 @@
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.Projects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.Projects.set -> void
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.SetRidAgnosticValueForProjects() -> void
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.UpdatedProjects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.UpdatedProjects.set -> void
-override Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.Execute() -> bool
-Microsoft.Build.Tasks.XslTransformation.PreserveWhitespace.get -> bool
-Microsoft.Build.Tasks.XslTransformation.PreserveWhitespace.set -> void
diff --git a/src/Tasks/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/Tasks/PublicAPI/netstandard/PublicAPI.Shipped.txt
deleted file mode 100644
index 942972d067e..00000000000
--- a/src/Tasks/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,2032 +0,0 @@
-abstract Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(string fileName, string linkFileName, string rootNamespaceName, string dependentUponFileName, System.IO.Stream binaryStream) -> string
-abstract Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(string fileName) -> bool
-abstract Microsoft.Build.Tasks.CreateManifestResourceName.SourceFileExtension.get -> string
-abstract Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SortName.get -> string
-abstract Microsoft.Build.Tasks.GenerateManifestBase.GetObjectType() -> System.Type
-abstract Microsoft.Build.Tasks.GenerateManifestBase.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest) -> bool
-abstract Microsoft.Build.Tasks.GenerateManifestBase.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest) -> bool
-Microsoft.Build.Tasks.AssignCulture
-Microsoft.Build.Tasks.AssignCulture.AssignCulture() -> void
-Microsoft.Build.Tasks.AssignCulture.AssignedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignCulture.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignCulture.Files.set -> void
-Microsoft.Build.Tasks.AssignLinkMetadata
-Microsoft.Build.Tasks.AssignLinkMetadata.AssignLinkMetadata() -> void
-Microsoft.Build.Tasks.AssignLinkMetadata.Items.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignLinkMetadata.Items.set -> void
-Microsoft.Build.Tasks.AssignLinkMetadata.OutputItems.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignLinkMetadata.OutputItems.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration
-Microsoft.Build.Tasks.AssignProjectConfiguration.AddSyntheticProjectReferencesForSolutionDependencies.get -> bool
-Microsoft.Build.Tasks.AssignProjectConfiguration.AddSyntheticProjectReferencesForSolutionDependencies.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.AssignedProjects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignProjectConfiguration.AssignedProjects.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.AssignProjectConfiguration() -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProject.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProject.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectConfiguration.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectConfiguration.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectPlatform.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectPlatform.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.DefaultToVcxPlatformMapping.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.DefaultToVcxPlatformMapping.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration.get -> bool
-Microsoft.Build.Tasks.AssignProjectConfiguration.OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.OutputType.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.OutputType.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.ResolveConfigurationPlatformUsingMappings.get -> bool
-Microsoft.Build.Tasks.AssignProjectConfiguration.ResolveConfigurationPlatformUsingMappings.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.ShouldUnsetParentConfigurationAndPlatform.get -> bool
-Microsoft.Build.Tasks.AssignProjectConfiguration.ShouldUnsetParentConfigurationAndPlatform.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.SolutionConfigurationContents.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.SolutionConfigurationContents.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.UnassignedProjects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignProjectConfiguration.UnassignedProjects.set -> void
-Microsoft.Build.Tasks.AssignProjectConfiguration.VcxToDefaultPlatformMapping.get -> string
-Microsoft.Build.Tasks.AssignProjectConfiguration.VcxToDefaultPlatformMapping.set -> void
-Microsoft.Build.Tasks.AssignTargetPath
-Microsoft.Build.Tasks.AssignTargetPath.AssignedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignTargetPath.AssignTargetPath() -> void
-Microsoft.Build.Tasks.AssignTargetPath.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.AssignTargetPath.Files.set -> void
-Microsoft.Build.Tasks.AssignTargetPath.RootFolder.get -> string
-Microsoft.Build.Tasks.AssignTargetPath.RootFolder.set -> void
-Microsoft.Build.Tasks.CallTarget
-Microsoft.Build.Tasks.CallTarget.CallTarget() -> void
-Microsoft.Build.Tasks.CallTarget.RunEachTargetSeparately.get -> bool
-Microsoft.Build.Tasks.CallTarget.RunEachTargetSeparately.set -> void
-Microsoft.Build.Tasks.CallTarget.TargetOutputs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CallTarget.Targets.get -> string[]
-Microsoft.Build.Tasks.CallTarget.Targets.set -> void
-Microsoft.Build.Tasks.CallTarget.UseResultsCache.get -> bool
-Microsoft.Build.Tasks.CallTarget.UseResultsCache.set -> void
-Microsoft.Build.Tasks.CodeTaskFactory
-Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask task) -> void
-Microsoft.Build.Tasks.CodeTaskFactory.CodeTaskFactory() -> void
-Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> Microsoft.Build.Framework.ITask
-Microsoft.Build.Tasks.CodeTaskFactory.FactoryName.get -> string
-Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters() -> Microsoft.Build.Framework.TaskPropertyInfo[]
-Microsoft.Build.Tasks.CodeTaskFactory.Initialize(string taskName, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
-Microsoft.Build.Tasks.CodeTaskFactory.TaskType.get -> System.Type
-Microsoft.Build.Tasks.CombinePath
-Microsoft.Build.Tasks.CombinePath.BasePath.get -> string
-Microsoft.Build.Tasks.CombinePath.BasePath.set -> void
-Microsoft.Build.Tasks.CombinePath.CombinedPaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CombinePath.CombinedPaths.set -> void
-Microsoft.Build.Tasks.CombinePath.CombinePath() -> void
-Microsoft.Build.Tasks.CombinePath.Paths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CombinePath.Paths.set -> void
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.CombineTargetFrameworkInfoProperties() -> void
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.PropertiesAndValues.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.PropertiesAndValues.set -> void
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.Result.get -> string
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.Result.set -> void
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.RootElementName.get -> string
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.RootElementName.set -> void
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.UseAttributeForTargetFrameworkInfoPropertyNames.get -> bool
-Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.UseAttributeForTargetFrameworkInfoPropertyNames.set -> void
-Microsoft.Build.Tasks.CombineXmlElements
-Microsoft.Build.Tasks.CombineXmlElements.CombineXmlElements() -> void
-Microsoft.Build.Tasks.CombineXmlElements.Result.get -> string
-Microsoft.Build.Tasks.CombineXmlElements.Result.set -> void
-Microsoft.Build.Tasks.CombineXmlElements.RootElementName.get -> string
-Microsoft.Build.Tasks.CombineXmlElements.RootElementName.set -> void
-Microsoft.Build.Tasks.CombineXmlElements.XmlElements.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CombineXmlElements.XmlElements.set -> void
-Microsoft.Build.Tasks.CommandLineBuilderExtension
-Microsoft.Build.Tasks.CommandLineBuilderExtension.CommandLineBuilderExtension() -> void
-Microsoft.Build.Tasks.CommandLineBuilderExtension.CommandLineBuilderExtension(bool quoteHyphensOnCommandLine, bool useNewLineSeparator) -> void
-Microsoft.Build.Tasks.CommandLineBuilderExtension.GetQuotedText(string unquotedText) -> string
-Microsoft.Build.Tasks.ConvertToAbsolutePath
-Microsoft.Build.Tasks.ConvertToAbsolutePath.AbsolutePaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ConvertToAbsolutePath.AbsolutePaths.set -> void
-Microsoft.Build.Tasks.ConvertToAbsolutePath.ConvertToAbsolutePath() -> void
-Microsoft.Build.Tasks.ConvertToAbsolutePath.Paths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ConvertToAbsolutePath.Paths.set -> void
-Microsoft.Build.Tasks.Copy
-Microsoft.Build.Tasks.Copy.Cancel() -> void
-Microsoft.Build.Tasks.Copy.CopiedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Copy.Copy() -> void
-Microsoft.Build.Tasks.Copy.DestinationFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Copy.DestinationFiles.set -> void
-Microsoft.Build.Tasks.Copy.DestinationFolder.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.Copy.DestinationFolder.set -> void
-Microsoft.Build.Tasks.Copy.ErrorIfLinkFails.get -> bool
-Microsoft.Build.Tasks.Copy.ErrorIfLinkFails.set -> void
-Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles.get -> bool
-Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles.set -> void
-Microsoft.Build.Tasks.Copy.Retries.get -> int
-Microsoft.Build.Tasks.Copy.Retries.set -> void
-Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds.get -> int
-Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds.set -> void
-Microsoft.Build.Tasks.Copy.SkipUnchangedFiles.get -> bool
-Microsoft.Build.Tasks.Copy.SkipUnchangedFiles.set -> void
-Microsoft.Build.Tasks.Copy.SourceFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Copy.SourceFiles.set -> void
-Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible.get -> bool
-Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible.set -> void
-Microsoft.Build.Tasks.Copy.UseSymboliclinksIfPossible.get -> bool
-Microsoft.Build.Tasks.Copy.UseSymboliclinksIfPossible.set -> void
-Microsoft.Build.Tasks.Copy.WroteAtLeastOneFile.get -> bool
-Microsoft.Build.Tasks.CreateCSharpManifestResourceName
-Microsoft.Build.Tasks.CreateCSharpManifestResourceName.CreateCSharpManifestResourceName() -> void
-Microsoft.Build.Tasks.CreateItem
-Microsoft.Build.Tasks.CreateItem.AdditionalMetadata.get -> string[]
-Microsoft.Build.Tasks.CreateItem.AdditionalMetadata.set -> void
-Microsoft.Build.Tasks.CreateItem.CreateItem() -> void
-Microsoft.Build.Tasks.CreateItem.Exclude.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CreateItem.Exclude.set -> void
-Microsoft.Build.Tasks.CreateItem.Include.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CreateItem.Include.set -> void
-Microsoft.Build.Tasks.CreateItem.PreserveExistingMetadata.get -> bool
-Microsoft.Build.Tasks.CreateItem.PreserveExistingMetadata.set -> void
-Microsoft.Build.Tasks.CreateManifestResourceName
-Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestResourceName() -> void
-Microsoft.Build.Tasks.CreateManifestResourceName.itemSpecToTaskitem -> System.Collections.Generic.Dictionary<string, Microsoft.Build.Framework.ITaskItem>
-Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory.get -> bool
-Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory.set -> void
-Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles.set -> void
-Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames.set -> void
-Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace.get -> string
-Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace.set -> void
-Microsoft.Build.Tasks.CreateManifestResourceName.UseDependentUponConvention.get -> bool
-Microsoft.Build.Tasks.CreateManifestResourceName.UseDependentUponConvention.set -> void
-Microsoft.Build.Tasks.CreateProperty
-Microsoft.Build.Tasks.CreateProperty.CreateProperty() -> void
-Microsoft.Build.Tasks.CreateProperty.Value.get -> string[]
-Microsoft.Build.Tasks.CreateProperty.Value.set -> void
-Microsoft.Build.Tasks.CreateProperty.ValueSetByTask.get -> string[]
-Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName
-Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.CreateVisualBasicManifestResourceName() -> void
-Microsoft.Build.Tasks.Delete
-Microsoft.Build.Tasks.Delete.Cancel() -> void
-Microsoft.Build.Tasks.Delete.Delete() -> void
-Microsoft.Build.Tasks.Delete.DeletedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Delete.DeletedFiles.set -> void
-Microsoft.Build.Tasks.Delete.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Delete.Files.set -> void
-Microsoft.Build.Tasks.Delete.TreatErrorsAsWarnings.get -> bool
-Microsoft.Build.Tasks.Delete.TreatErrorsAsWarnings.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.BootstrapperBuilder() -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.BootstrapperBuilder(string visualStudioVersion) -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Build(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings settings) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetOutputFolders(string[] productCodes, string culture, string fallbackCulture, Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation componentsLocation) -> string[]
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Products.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.HelpId.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.HelpKeyword.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.Message.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.Severity.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Error = 2 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Info = 0 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Warning = 1 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.ComponentFiles.get -> string[]
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.KeyFile.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Messages.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage[]
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Succeeded.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationFile.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationFile.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationName.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationName.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationRequiresElevation.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationRequiresElevation.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.BuildSettings() -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.CopyComponents.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.CopyComponents.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.FallbackLCID.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.FallbackLCID.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.LCID.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.LCID.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.OutputPath.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.OutputPath.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ProductBuilders.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.SupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.SupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.Validate.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.Validate.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute = 2 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.HomeSite = 0 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Relative = 1 -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Build(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings settings) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Path.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Path.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Products.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.HelpId.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.HelpKeyword.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.Message.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.Severity.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.ComponentFiles.get -> string[]
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.KeyFile.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.Messages.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage[]
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.Succeeded.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationFile.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationFile.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationName.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationName.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationRequiresElevation.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationRequiresElevation.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsLocation.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsLocation.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.CopyComponents.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.CopyComponents.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.FallbackLCID.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.FallbackLCID.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.LCID.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.LCID.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.OutputPath.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.OutputPath.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ProductBuilders.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.SupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.SupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.Validate.get -> bool
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.Validate.set -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.Includes.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.Name.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductBuilder.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductCode.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilder.Product.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder builder) -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Item(int index) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Product(string productCode) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.Includes.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.Name.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.Product() -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ProductBuilder.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ProductCode.get -> string
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder.Product.get -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder builder) -> void
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Item(int index) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Product(string productCode) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.Product
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.ApplicationIdentity(string url, Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity deployManifestIdentity, Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity applicationManifestIdentity) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.ApplicationIdentity(string url, string deployManifestPath, string applicationManifestPath) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ApplicationManifest() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ApplicationManifest(string targetFrameworkVersion) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.MaxTargetPath.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.MaxTargetPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TrustInfo.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TrustInfo.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlConfigFile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlConfigFile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointIdentity.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointIdentity.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointParameters.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointParameters.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointPath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlErrorReportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlErrorReportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlFileAssociations.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlFileAssociations.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlHostInBrowser.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlHostInBrowser.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIconFile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIconFile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIsClickOnceManifest.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIsClickOnceManifest.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSBuild.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSBuild.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSDescription.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSDescription.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMajor.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMajor.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMinor.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMinor.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSRevision.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSRevision.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSSupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSSupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlProduct.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlProduct.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlPublisher.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlPublisher.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSuiteName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSuiteName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlUseApplicationTrust.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlUseApplicationTrust.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity identity) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(string name) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(string name, string version) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(string name, string version, string publicKeyToken, string culture) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(string name, string version, string publicKeyToken, string culture, string processorArchitecture) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.AssemblyIdentity(string name, string version, string publicKeyToken, string culture, string processorArchitecture, string type) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Culture.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Culture.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.All = Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.ProcessorArchitecture | Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.Type -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.Default = 0 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.ProcessorArchitecture = 1 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.Type = 2 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.GetFullName(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags flags) -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsFrameworkAssembly.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsInFramework(string frameworkIdentifier, string frameworkVersion) -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsNeutralPlatform.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsStrongName.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Name.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Name.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ProcessorArchitecture.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ProcessorArchitecture.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.PublicKeyToken.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.PublicKeyToken.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Type.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Type.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Version.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Version.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlCulture.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlCulture.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlProcessorArchitecture.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlProcessorArchitecture.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlPublicKeyToken.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlPublicKeyToken.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlType.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlType.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.AssemblyManifest() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.ExternalProxyStubs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.XmlExternalProxyStubs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.XmlExternalProxyStubs.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyIdentity.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyIdentity.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyReference() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyReference(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.IsPrerequisite.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.IsPrerequisite.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.ReferenceType.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.ReferenceType.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlAssemblyIdentity.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlAssemblyIdentity.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsNative.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsNative.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsPrerequisite.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsPrerequisite.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference assembly) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Add(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity identity) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(string name) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.FindTargetPath(string targetPath) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Remove(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference assemblyReference) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.this[int index].get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.ClickOnceManifest = 1 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.ManagedAssembly = 2 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.NativeAssembly = 3 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.Unspecified = 0 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.BaseReference() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.BaseReference(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Group.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Group.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ResolvedPath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ResolvedPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size.get -> long
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SourcePath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SourcePath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.TargetPath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.TargetPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlGroup.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlGroup.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHash.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHash.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHashAlgorithm.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHashAlgorithm.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlIsOptional.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlIsOptional.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlPath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlSize.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlSize.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ComClass() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlClsId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlClsId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlDescription.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlDescription.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlProgId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlProgId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlThreadingModel.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlThreadingModel.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlTlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlTlbId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.CompatibleFramework() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Profile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Profile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.SupportedRuntime.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.SupportedRuntime.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Version.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Version.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlProfile.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlProfile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlSupportedRuntime.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlSupportedRuntime.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework compatibleFramework) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.this[int index].get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CompatibleFrameworks.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeployManifest() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeployManifest(string targetFrameworkMoniker) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TargetFrameworkMoniker.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TargetFrameworkMoniker.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCompatibleFrameworks.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCompatibleFrameworks.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCreateDesktopShortcut.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCreateDesktopShortcut.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDeploymentUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDeploymentUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDisallowUrlActivation.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDisallowUrlActivation.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlErrorReportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlErrorReportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlInstall.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlInstall.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMapFileExtensions.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMapFileExtensions.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMinimumRequiredVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMinimumRequiredVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlProduct.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlProduct.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlPublisher.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlPublisher.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSuiteName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSuiteName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSupportUrl.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSupportUrl.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlTrustUrlParameters.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlTrustUrlParameters.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateEnabled.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateEnabled.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateInterval.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateInterval.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateMode.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateMode.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateUnit.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateUnit.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.DefaultIcon.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.DefaultIcon.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.FileAssociation() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDefaultIcon.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDefaultIcon.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDescription.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDescription.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlExtension.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlExtension.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlProgId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlProgId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation fileAssociation) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.this[int index].get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.FileReference() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.FileReference(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.IsDataFile.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.IsDataFile.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlComClasses.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlComClasses.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlProxyStubs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlProxyStubs.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlTypeLibs.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlTypeLibs.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlWriteableType.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlWriteableType.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference file) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Add(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Count.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.FindTargetPath(string targetPath) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Remove(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference file) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.this[int index].get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.LauncherBuilder
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.LauncherBuilder.Build(string filename, string outputPath) -> Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.LauncherBuilder.LauncherBuilder(string launcherPath) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.LauncherBuilder.LauncherPath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.LauncherBuilder.LauncherPath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyIdentity.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyIdentity.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyReferences.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Description.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Description.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.FileReferences.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream.get -> System.IO.Stream
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.LauncherBasedDeployment.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.LauncherBasedDeployment.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Manifest() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.OutputMessages.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ReadOnly.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ReadOnly.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles(string[] searchPaths) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.SourcePath.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.SourcePath.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo(string targetFrameworkVersion) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ValidatePlatform() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyIdentity.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyIdentity.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyReferences.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyReferences.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlDescription.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlDescription.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlFileReferences.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlFileReferences.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlSchema.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlSchema.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.GetArguments() -> string[]
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Name.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Text.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Type.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.ErrorCount.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.GetEnumerator() -> System.Collections.IEnumerator
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.this[int index].get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.WarningCount.get -> int
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Error = 2 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Info = 0 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Warning = 1 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.BaseInterface.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.IID.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.Name.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.NumMethods.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.ProxyStub() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.TlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlBaseInterface.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlBaseInterface.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlIID.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlIID.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlNumMethods.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlNumMethods.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlTlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlTlbId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Clear() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.HasUnmanagedCodePermission.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.IsFullTrust.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PreserveFullTrustPermissionSet.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PreserveFullTrustPermissionSet.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(System.IO.Stream input) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(System.IO.Stream input) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.SameSiteAccess.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.SameSiteAccess.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.TrustInfo() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Write(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Write(System.IO.Stream output) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(string path) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.IO.Stream input, System.IO.Stream output) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.IO.Stream output) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Flags.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.HelpDirectory.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.ResourceId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.TlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.TypeLib() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Version.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlFlags.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlFlags.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlHelpDirectory.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlHelpDirectory.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlResourceId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlResourceId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlTlbId.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlTlbId.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlVersion.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlVersion.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Background = 0 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Foreground = 1 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Days = 1 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Hours = 0 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Weeks = 2 -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned.get -> bool
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.WindowClass() -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.WindowClass(string name, bool versioned) -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlName.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlName.set -> void
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlVersioned.get -> string
-Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlVersioned.set -> void
-Microsoft.Build.Tasks.DownloadFile
-Microsoft.Build.Tasks.DownloadFile.Cancel() -> void
-Microsoft.Build.Tasks.DownloadFile.DestinationFileName.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.DownloadFile.DestinationFileName.set -> void
-Microsoft.Build.Tasks.DownloadFile.DestinationFolder.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.DownloadFile.DestinationFolder.set -> void
-Microsoft.Build.Tasks.DownloadFile.DownloadedFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.DownloadFile.DownloadedFile.set -> void
-Microsoft.Build.Tasks.DownloadFile.DownloadFile() -> void
-Microsoft.Build.Tasks.DownloadFile.Retries.get -> int
-Microsoft.Build.Tasks.DownloadFile.Retries.set -> void
-Microsoft.Build.Tasks.DownloadFile.RetryDelayMilliseconds.get -> int
-Microsoft.Build.Tasks.DownloadFile.RetryDelayMilliseconds.set -> void
-Microsoft.Build.Tasks.DownloadFile.SkipUnchangedFiles.get -> bool
-Microsoft.Build.Tasks.DownloadFile.SkipUnchangedFiles.set -> void
-Microsoft.Build.Tasks.DownloadFile.SourceUrl.get -> string
-Microsoft.Build.Tasks.DownloadFile.SourceUrl.set -> void
-Microsoft.Build.Tasks.DownloadFile.Timeout.get -> int
-Microsoft.Build.Tasks.DownloadFile.Timeout.set -> void
-Microsoft.Build.Tasks.Error
-Microsoft.Build.Tasks.Error.Code.get -> string
-Microsoft.Build.Tasks.Error.Code.set -> void
-Microsoft.Build.Tasks.Error.Error() -> void
-Microsoft.Build.Tasks.Error.File.get -> string
-Microsoft.Build.Tasks.Error.File.set -> void
-Microsoft.Build.Tasks.Error.HelpKeyword.get -> string
-Microsoft.Build.Tasks.Error.HelpKeyword.set -> void
-Microsoft.Build.Tasks.Error.HelpLink.get -> string
-Microsoft.Build.Tasks.Error.HelpLink.set -> void
-Microsoft.Build.Tasks.Error.Text.get -> string
-Microsoft.Build.Tasks.Error.Text.set -> void
-Microsoft.Build.Tasks.ErrorFromResources
-Microsoft.Build.Tasks.ErrorFromResources.Arguments.get -> string[]
-Microsoft.Build.Tasks.ErrorFromResources.Arguments.set -> void
-Microsoft.Build.Tasks.ErrorFromResources.Code.get -> string
-Microsoft.Build.Tasks.ErrorFromResources.Code.set -> void
-Microsoft.Build.Tasks.ErrorFromResources.ErrorFromResources() -> void
-Microsoft.Build.Tasks.ErrorFromResources.File.get -> string
-Microsoft.Build.Tasks.ErrorFromResources.File.set -> void
-Microsoft.Build.Tasks.ErrorFromResources.HelpKeyword.get -> string
-Microsoft.Build.Tasks.ErrorFromResources.HelpKeyword.set -> void
-Microsoft.Build.Tasks.ErrorFromResources.Resource.get -> string
-Microsoft.Build.Tasks.ErrorFromResources.Resource.set -> void
-Microsoft.Build.Tasks.Exec
-Microsoft.Build.Tasks.Exec.Command.get -> string
-Microsoft.Build.Tasks.Exec.Command.set -> void
-Microsoft.Build.Tasks.Exec.ConsoleOutput.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Exec.ConsoleToMSBuild.get -> bool
-Microsoft.Build.Tasks.Exec.ConsoleToMSBuild.set -> void
-Microsoft.Build.Tasks.Exec.CustomErrorRegularExpression.get -> string
-Microsoft.Build.Tasks.Exec.CustomErrorRegularExpression.set -> void
-Microsoft.Build.Tasks.Exec.CustomWarningRegularExpression.get -> string
-Microsoft.Build.Tasks.Exec.CustomWarningRegularExpression.set -> void
-Microsoft.Build.Tasks.Exec.Exec() -> void
-Microsoft.Build.Tasks.Exec.IgnoreExitCode.get -> bool
-Microsoft.Build.Tasks.Exec.IgnoreExitCode.set -> void
-Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat.get -> bool
-Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat.set -> void
-Microsoft.Build.Tasks.Exec.Outputs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Exec.Outputs.set -> void
-Microsoft.Build.Tasks.Exec.StdErrEncoding.get -> string
-Microsoft.Build.Tasks.Exec.StdErrEncoding.set -> void
-Microsoft.Build.Tasks.Exec.StdOutEncoding.get -> string
-Microsoft.Build.Tasks.Exec.StdOutEncoding.set -> void
-Microsoft.Build.Tasks.Exec.WorkingDirectory.get -> string
-Microsoft.Build.Tasks.Exec.WorkingDirectory.set -> void
-Microsoft.Build.Tasks.ExtractedClassName
-Microsoft.Build.Tasks.ExtractedClassName.ExtractedClassName() -> void
-Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock.get -> bool
-Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock.set -> void
-Microsoft.Build.Tasks.ExtractedClassName.Name.get -> string
-Microsoft.Build.Tasks.ExtractedClassName.Name.set -> void
-Microsoft.Build.Tasks.FindAppConfigFile
-Microsoft.Build.Tasks.FindAppConfigFile.AppConfigFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.FindAppConfigFile.AppConfigFile.set -> void
-Microsoft.Build.Tasks.FindAppConfigFile.FindAppConfigFile() -> void
-Microsoft.Build.Tasks.FindAppConfigFile.PrimaryList.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindAppConfigFile.PrimaryList.set -> void
-Microsoft.Build.Tasks.FindAppConfigFile.SecondaryList.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindAppConfigFile.SecondaryList.set -> void
-Microsoft.Build.Tasks.FindAppConfigFile.TargetPath.get -> string
-Microsoft.Build.Tasks.FindAppConfigFile.TargetPath.set -> void
-Microsoft.Build.Tasks.FindInList
-Microsoft.Build.Tasks.FindInList.CaseSensitive.get -> bool
-Microsoft.Build.Tasks.FindInList.CaseSensitive.set -> void
-Microsoft.Build.Tasks.FindInList.FindInList() -> void
-Microsoft.Build.Tasks.FindInList.FindLastMatch.get -> bool
-Microsoft.Build.Tasks.FindInList.FindLastMatch.set -> void
-Microsoft.Build.Tasks.FindInList.ItemFound.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.FindInList.ItemFound.set -> void
-Microsoft.Build.Tasks.FindInList.ItemSpecToFind.get -> string
-Microsoft.Build.Tasks.FindInList.ItemSpecToFind.set -> void
-Microsoft.Build.Tasks.FindInList.List.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindInList.List.set -> void
-Microsoft.Build.Tasks.FindInList.MatchFileNameOnly.get -> bool
-Microsoft.Build.Tasks.FindInList.MatchFileNameOnly.set -> void
-Microsoft.Build.Tasks.FindInvalidProjectReferences
-Microsoft.Build.Tasks.FindInvalidProjectReferences.FindInvalidProjectReferences() -> void
-Microsoft.Build.Tasks.FindInvalidProjectReferences.InvalidReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindInvalidProjectReferences.ProjectReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindInvalidProjectReferences.ProjectReferences.set -> void
-Microsoft.Build.Tasks.FindInvalidProjectReferences.TargetPlatformIdentifier.get -> string
-Microsoft.Build.Tasks.FindInvalidProjectReferences.TargetPlatformIdentifier.set -> void
-Microsoft.Build.Tasks.FindInvalidProjectReferences.TargetPlatformVersion.get -> string
-Microsoft.Build.Tasks.FindInvalidProjectReferences.TargetPlatformVersion.set -> void
-Microsoft.Build.Tasks.FindUnderPath
-Microsoft.Build.Tasks.FindUnderPath.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindUnderPath.Files.set -> void
-Microsoft.Build.Tasks.FindUnderPath.FindUnderPath() -> void
-Microsoft.Build.Tasks.FindUnderPath.InPath.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindUnderPath.InPath.set -> void
-Microsoft.Build.Tasks.FindUnderPath.OutOfPath.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.FindUnderPath.OutOfPath.set -> void
-Microsoft.Build.Tasks.FindUnderPath.Path.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.FindUnderPath.Path.set -> void
-Microsoft.Build.Tasks.FindUnderPath.UpdateToAbsolutePaths.get -> bool
-Microsoft.Build.Tasks.FindUnderPath.UpdateToAbsolutePaths.set -> void
-Microsoft.Build.Tasks.FormatUrl
-Microsoft.Build.Tasks.FormatUrl.FormatUrl() -> void
-Microsoft.Build.Tasks.FormatUrl.InputUrl.get -> string
-Microsoft.Build.Tasks.FormatUrl.InputUrl.set -> void
-Microsoft.Build.Tasks.FormatUrl.OutputUrl.get -> string
-Microsoft.Build.Tasks.FormatUrl.OutputUrl.set -> void
-Microsoft.Build.Tasks.FormatVersion
-Microsoft.Build.Tasks.FormatVersion.FormatType.get -> string
-Microsoft.Build.Tasks.FormatVersion.FormatType.set -> void
-Microsoft.Build.Tasks.FormatVersion.FormatVersion() -> void
-Microsoft.Build.Tasks.FormatVersion.OutputVersion.get -> string
-Microsoft.Build.Tasks.FormatVersion.OutputVersion.set -> void
-Microsoft.Build.Tasks.FormatVersion.Revision.get -> int
-Microsoft.Build.Tasks.FormatVersion.Revision.set -> void
-Microsoft.Build.Tasks.FormatVersion.Version.get -> string
-Microsoft.Build.Tasks.FormatVersion.Version.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest
-Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateApplicationManifest.Files.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.GenerateApplicationManifest() -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser.get -> bool
-Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.Product.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.Product.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1.get -> bool
-Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset.get -> string
-Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile.set -> void
-Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust.get -> bool
-Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust.set -> void
-Microsoft.Build.Tasks.GenerateBindingRedirects
-Microsoft.Build.Tasks.GenerateBindingRedirects.AppConfigFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateBindingRedirects.AppConfigFile.set -> void
-Microsoft.Build.Tasks.GenerateBindingRedirects.GenerateBindingRedirects() -> void
-Microsoft.Build.Tasks.GenerateBindingRedirects.OutputAppConfigFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateBindingRedirects.OutputAppConfigFile.set -> void
-Microsoft.Build.Tasks.GenerateBindingRedirects.SuggestedRedirects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateBindingRedirects.SuggestedRedirects.set -> void
-Microsoft.Build.Tasks.GenerateBindingRedirects.TargetName.get -> string
-Microsoft.Build.Tasks.GenerateBindingRedirects.TargetName.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest
-Microsoft.Build.Tasks.GenerateDeploymentManifest.CreateDesktopShortcut.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.CreateDesktopShortcut.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.DeploymentUrl.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.DeploymentUrl.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.DisallowUrlActivation.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.DisallowUrlActivation.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.ErrorReportUrl.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.ErrorReportUrl.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.GenerateDeploymentManifest() -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Install.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Install.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.MapFileExtensions.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.MapFileExtensions.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.MinimumRequiredVersion.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.MinimumRequiredVersion.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Product.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Product.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Publisher.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.Publisher.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.SuiteName.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.SuiteName.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.SupportUrl.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.SupportUrl.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.TrustUrlParameters.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.TrustUrlParameters.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateEnabled.get -> bool
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateEnabled.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval.get -> int
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateMode.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateMode.set -> void
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateUnit.get -> string
-Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateUnit.set -> void
-Microsoft.Build.Tasks.GenerateLauncher
-Microsoft.Build.Tasks.GenerateLauncher.AssemblyName.get -> string
-Microsoft.Build.Tasks.GenerateLauncher.AssemblyName.set -> void
-Microsoft.Build.Tasks.GenerateLauncher.EntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateLauncher.EntryPoint.set -> void
-Microsoft.Build.Tasks.GenerateLauncher.GenerateLauncher() -> void
-Microsoft.Build.Tasks.GenerateLauncher.LauncherPath.get -> string
-Microsoft.Build.Tasks.GenerateLauncher.LauncherPath.set -> void
-Microsoft.Build.Tasks.GenerateLauncher.OutputEntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateLauncher.OutputEntryPoint.set -> void
-Microsoft.Build.Tasks.GenerateLauncher.OutputPath.get -> string
-Microsoft.Build.Tasks.GenerateLauncher.OutputPath.set -> void
-Microsoft.Build.Tasks.GenerateLauncher.VisualStudioVersion.get -> string
-Microsoft.Build.Tasks.GenerateLauncher.VisualStudioVersion.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase
-Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyFromItem(Microsoft.Build.Framework.ITaskItem item) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyNameFromItem(Microsoft.Build.Framework.ITaskItem item, Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType referenceType) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.GenerateManifestBase.AddEntryPointFromItem(Microsoft.Build.Framework.ITaskItem item, Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType referenceType) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-Microsoft.Build.Tasks.GenerateManifestBase.AddFileFromItem(Microsoft.Build.Framework.ITaskItem item) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.GenerateManifestBase.AssemblyName.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.AssemblyName.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.AssemblyVersion.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.AssemblyVersion.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.Description.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.Description.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.EntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateManifestBase.EntryPoint.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.FindFileFromItem(Microsoft.Build.Framework.ITaskItem item) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference
-Microsoft.Build.Tasks.GenerateManifestBase.GenerateManifestBase() -> void
-Microsoft.Build.Tasks.GenerateManifestBase.InputManifest.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateManifestBase.InputManifest.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.LauncherBasedDeployment.get -> bool
-Microsoft.Build.Tasks.GenerateManifestBase.LauncherBasedDeployment.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.MaxTargetPath.get -> int
-Microsoft.Build.Tasks.GenerateManifestBase.MaxTargetPath.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.OutputManifest.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateManifestBase.OutputManifest.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.Platform.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.Platform.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.TargetCulture.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.TargetCulture.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkMoniker.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkMoniker.set -> void
-Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.GenerateResource
-Microsoft.Build.Tasks.GenerateResource.AdditionalInputs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.AdditionalInputs.set -> void
-Microsoft.Build.Tasks.GenerateResource.EnvironmentVariables.get -> string[]
-Microsoft.Build.Tasks.GenerateResource.EnvironmentVariables.set -> void
-Microsoft.Build.Tasks.GenerateResource.ExcludedInputPaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.ExcludedInputPaths.set -> void
-Microsoft.Build.Tasks.GenerateResource.ExecuteAsTool.get -> bool
-Microsoft.Build.Tasks.GenerateResource.ExecuteAsTool.set -> void
-Microsoft.Build.Tasks.GenerateResource.ExtractResWFiles.get -> bool
-Microsoft.Build.Tasks.GenerateResource.ExtractResWFiles.set -> void
-Microsoft.Build.Tasks.GenerateResource.FilesWritten.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.GenerateResource() -> void
-Microsoft.Build.Tasks.GenerateResource.MinimalRebuildFromTracking.get -> bool
-Microsoft.Build.Tasks.GenerateResource.MinimalRebuildFromTracking.set -> void
-Microsoft.Build.Tasks.GenerateResource.NeverLockTypeAssemblies.get -> bool
-Microsoft.Build.Tasks.GenerateResource.NeverLockTypeAssemblies.set -> void
-Microsoft.Build.Tasks.GenerateResource.OutputDirectory.get -> string
-Microsoft.Build.Tasks.GenerateResource.OutputDirectory.set -> void
-Microsoft.Build.Tasks.GenerateResource.OutputResources.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.OutputResources.set -> void
-Microsoft.Build.Tasks.GenerateResource.PublicClass.get -> bool
-Microsoft.Build.Tasks.GenerateResource.PublicClass.set -> void
-Microsoft.Build.Tasks.GenerateResource.References.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.References.set -> void
-Microsoft.Build.Tasks.GenerateResource.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.GenerateResource.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.GenerateResource.Sources.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.Sources.set -> void
-Microsoft.Build.Tasks.GenerateResource.StateFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.GenerateResource.StateFile.set -> void
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedClassName.get -> string
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedClassName.set -> void
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedFileName.get -> string
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedFileName.set -> void
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedLanguage.get -> string
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedLanguage.set -> void
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedManifestPrefix.get -> string
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedManifestPrefix.set -> void
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedNamespace.get -> string
-Microsoft.Build.Tasks.GenerateResource.StronglyTypedNamespace.set -> void
-Microsoft.Build.Tasks.GenerateResource.TLogReadFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.TLogWriteFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GenerateResource.ToolArchitecture.get -> string
-Microsoft.Build.Tasks.GenerateResource.ToolArchitecture.set -> void
-Microsoft.Build.Tasks.GenerateResource.TrackerFrameworkPath.get -> string
-Microsoft.Build.Tasks.GenerateResource.TrackerFrameworkPath.set -> void
-Microsoft.Build.Tasks.GenerateResource.TrackerLogDirectory.get -> string
-Microsoft.Build.Tasks.GenerateResource.TrackerLogDirectory.set -> void
-Microsoft.Build.Tasks.GenerateResource.TrackerSdkPath.get -> string
-Microsoft.Build.Tasks.GenerateResource.TrackerSdkPath.set -> void
-Microsoft.Build.Tasks.GenerateResource.TrackFileAccess.get -> bool
-Microsoft.Build.Tasks.GenerateResource.TrackFileAccess.set -> void
-Microsoft.Build.Tasks.GenerateResource.UsePreserializedResources.get -> bool
-Microsoft.Build.Tasks.GenerateResource.UsePreserializedResources.set -> void
-Microsoft.Build.Tasks.GenerateResource.UseSourcePath.get -> bool
-Microsoft.Build.Tasks.GenerateResource.UseSourcePath.set -> void
-Microsoft.Build.Tasks.GetAssemblyIdentity
-Microsoft.Build.Tasks.GetAssemblyIdentity.Assemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetAssemblyIdentity.Assemblies.set -> void
-Microsoft.Build.Tasks.GetAssemblyIdentity.AssemblyFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetAssemblyIdentity.AssemblyFiles.set -> void
-Microsoft.Build.Tasks.GetAssemblyIdentity.GetAssemblyIdentity() -> void
-Microsoft.Build.Tasks.GetCompatiblePlatform
-Microsoft.Build.Tasks.GetCompatiblePlatform.AnnotatedProjects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetCompatiblePlatform.AnnotatedProjects.set -> void
-Microsoft.Build.Tasks.GetCompatiblePlatform.AssignedProjectsWithPlatform.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetCompatiblePlatform.AssignedProjectsWithPlatform.set -> void
-Microsoft.Build.Tasks.GetCompatiblePlatform.CurrentProjectPlatform.get -> string
-Microsoft.Build.Tasks.GetCompatiblePlatform.CurrentProjectPlatform.set -> void
-Microsoft.Build.Tasks.GetCompatiblePlatform.GetCompatiblePlatform() -> void
-Microsoft.Build.Tasks.GetCompatiblePlatform.PlatformLookupTable.get -> string
-Microsoft.Build.Tasks.GetCompatiblePlatform.PlatformLookupTable.set -> void
-Microsoft.Build.Tasks.GetFileHash
-Microsoft.Build.Tasks.GetFileHash.Algorithm.get -> string
-Microsoft.Build.Tasks.GetFileHash.Algorithm.set -> void
-Microsoft.Build.Tasks.GetFileHash.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetFileHash.Files.set -> void
-Microsoft.Build.Tasks.GetFileHash.GetFileHash() -> void
-Microsoft.Build.Tasks.GetFileHash.Hash.get -> string
-Microsoft.Build.Tasks.GetFileHash.Hash.set -> void
-Microsoft.Build.Tasks.GetFileHash.HashEncoding.get -> string
-Microsoft.Build.Tasks.GetFileHash.HashEncoding.set -> void
-Microsoft.Build.Tasks.GetFileHash.Items.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetFileHash.Items.set -> void
-Microsoft.Build.Tasks.GetFileHash.MetadataName.get -> string
-Microsoft.Build.Tasks.GetFileHash.MetadataName.set -> void
-Microsoft.Build.Tasks.GetFrameworkPath
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion11Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion20Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion30Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion35Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion40Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion451Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion452Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion45Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion461Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion462Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion46Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion471Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion472Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion47Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion48Path.get -> string
-Microsoft.Build.Tasks.GetFrameworkPath.GetFrameworkPath() -> void
-Microsoft.Build.Tasks.GetFrameworkPath.Path.get -> string
-Microsoft.Build.Tasks.GetInstalledSDKLocations
-Microsoft.Build.Tasks.GetInstalledSDKLocations.GetInstalledSDKLocations() -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots.get -> string[]
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKExtensionDirectoryRoots.get -> string[]
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKExtensionDirectoryRoots.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot.get -> string
-Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier.get -> string
-Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion.get -> string
-Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion.set -> void
-Microsoft.Build.Tasks.GetInstalledSDKLocations.WarnWhenNoSDKsFound.get -> bool
-Microsoft.Build.Tasks.GetInstalledSDKLocations.WarnWhenNoSDKsFound.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.BypassFrameworkInstallChecks.get -> bool
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.BypassFrameworkInstallChecks.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.FullFrameworkReferenceAssemblyPaths.get -> string[]
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.GetReferenceAssemblyPaths() -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.ReferenceAssemblyPaths.get -> string[]
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.RootPath.get -> string
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.RootPath.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.SuppressNotFoundError.get -> bool
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.SuppressNotFoundError.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkFallbackSearchPaths.get -> string
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkFallbackSearchPaths.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMoniker.get -> string
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMoniker.set -> void
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMonikerDisplayName.get -> string
-Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMonikerDisplayName.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles
-Microsoft.Build.Tasks.GetSDKReferenceFiles.CacheFileFolderPath.get -> string
-Microsoft.Build.Tasks.GetSDKReferenceFiles.CacheFileFolderPath.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.CopyLocalFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetSDKReferenceFiles.GetSDKReferenceFiles() -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogCacheFileExceptions.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogCacheFileExceptions.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistConflictBetweenSDKsAsWarning.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistConflictBetweenSDKsAsWarning.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistConflictWithinSDKAsWarning.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistConflictWithinSDKAsWarning.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistFilesList.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistFilesList.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferenceConflictBetweenSDKsAsWarning.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferenceConflictBetweenSDKsAsWarning.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferenceConflictWithinSDKAsWarning.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferenceConflictWithinSDKAsWarning.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferencesList.get -> bool
-Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferencesList.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.RedistFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetSDKReferenceFiles.ReferenceExtensions.get -> string[]
-Microsoft.Build.Tasks.GetSDKReferenceFiles.ReferenceExtensions.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.References.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetSDKReferenceFiles.ResolvedSDKReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.GetSDKReferenceFiles.ResolvedSDKReferences.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetPlatformIdentifier.get -> string
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetPlatformIdentifier.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetPlatformVersion.get -> string
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetPlatformVersion.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetSDKIdentifier.get -> string
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetSDKIdentifier.set -> void
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetSDKVersion.get -> string
-Microsoft.Build.Tasks.GetSDKReferenceFiles.TargetSDKVersion.set -> void
-Microsoft.Build.Tasks.Hash
-Microsoft.Build.Tasks.Hash.Hash() -> void
-Microsoft.Build.Tasks.Hash.HashResult.get -> string
-Microsoft.Build.Tasks.Hash.HashResult.set -> void
-Microsoft.Build.Tasks.Hash.IgnoreCase.get -> bool
-Microsoft.Build.Tasks.Hash.IgnoreCase.set -> void
-Microsoft.Build.Tasks.Hash.ItemsToHash.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Hash.ItemsToHash.set -> void
-Microsoft.Build.Tasks.Hosting.IAnalyzerHostObject
-Microsoft.Build.Tasks.Hosting.IAnalyzerHostObject.SetAdditionalFiles(Microsoft.Build.Framework.ITaskItem[] additionalFiles) -> bool
-Microsoft.Build.Tasks.Hosting.IAnalyzerHostObject.SetAnalyzers(Microsoft.Build.Framework.ITaskItem[] analyzers) -> bool
-Microsoft.Build.Tasks.Hosting.IAnalyzerHostObject.SetRuleSet(string ruleSetFile) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject
-Microsoft.Build.Tasks.Hosting.ICscHostObject.BeginInitialization() -> void
-Microsoft.Build.Tasks.Hosting.ICscHostObject.Compile() -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.EndInitialization(out string errorMessage, out int errorCode) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.IsDesignTime() -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.IsUpToDate() -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAdditionalLibPaths(string[] additionalLibPaths) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAddModules(string[] addModules) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAllowUnsafeBlocks(bool allowUnsafeBlocks) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetBaseAddress(string baseAddress) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCheckForOverflowUnderflow(bool checkForOverflowUnderflow) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCodePage(int codePage) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDebugType(string debugType) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDefineConstants(string defineConstants) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDelaySign(bool delaySignExplicitlySet, bool delaySign) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDisabledWarnings(string disabledWarnings) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDocumentationFile(string documentationFile) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetEmitDebugInformation(bool emitDebugInformation) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetErrorReport(string errorReport) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetFileAlignment(int fileAlignment) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetGenerateFullPaths(bool generateFullPaths) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyContainer(string keyContainer) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyFile(string keyFile) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLangVersion(string langVersion) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[] linkResources) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetMainEntryPoint(string targetType, string mainEntryPoint) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetModuleAssemblyName(string moduleAssemblyName) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoConfig(bool noConfig) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoStandardLib(bool noStandardLib) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOptimize(bool optimize) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOutputAssembly(string outputAssembly) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPdbFile(string pdbFile) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPlatform(string platform) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[] references) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[] resources) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[] responseFiles) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[] sources) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTargetType(string targetType) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTreatWarningsAsErrors(bool treatWarningsAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningLevel(int warningLevel) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsAsErrors(string warningsAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsNotAsErrors(string warningsNotAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Icon(string win32Icon) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Resource(string win32Resource) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject2
-Microsoft.Build.Tasks.Hosting.ICscHostObject2.SetWin32Manifest(string win32Manifest) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject3
-Microsoft.Build.Tasks.Hosting.ICscHostObject3.SetApplicationConfiguration(string applicationConfiguration) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject4
-Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetHighEntropyVA(bool highEntropyVA) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetPlatformWith32BitPreference(string platformWith32BitPreference) -> bool
-Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetSubsystemVersion(string subsystemVersion) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.BeginInitialization() -> void
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.Compile() -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.EndInitialization() -> void
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsDesignTime() -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsUpToDate() -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAdditionalLibPaths(string[] additionalLibPaths) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAddModules(string[] addModules) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetBaseAddress(string targetType, string baseAddress) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetCodePage(int codePage) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDebugType(bool emitDebugInformation, string debugType) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDefineConstants(string defineConstants) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDelaySign(bool delaySign) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDisabledWarnings(string disabledWarnings) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDocumentationFile(string documentationFile) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetErrorReport(string errorReport) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetFileAlignment(int fileAlignment) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetGenerateDocumentation(bool generateDocumentation) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetImports(Microsoft.Build.Framework.ITaskItem[] importsList) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyContainer(string keyContainer) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyFile(string keyFile) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[] linkResources) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetMainEntryPoint(string mainEntryPoint) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoConfig(bool noConfig) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoStandardLib(bool noStandardLib) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoWarnings(bool noWarnings) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptimize(bool optimize) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionCompare(string optionCompare) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionExplicit(bool optionExplicit) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrict(bool optionStrict) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrictType(string optionStrictType) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOutputAssembly(string outputAssembly) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetPlatform(string platform) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[] references) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRemoveIntegerChecks(bool removeIntegerChecks) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[] resources) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[] responseFiles) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRootNamespace(string rootNamespace) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSdkPath(string sdkPath) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[] sources) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetCompactFramework(bool targetCompactFramework) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetType(string targetType) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTreatWarningsAsErrors(bool treatWarningsAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsAsErrors(string warningsAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsNotAsErrors(string warningsNotAsErrors) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Icon(string win32Icon) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Resource(string win32Resource) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject2
-Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetModuleAssemblyName(string moduleAssemblyName) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetOptionInfer(bool optionInfer) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetWin32Manifest(string win32Manifest) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject3
-Microsoft.Build.Tasks.Hosting.IVbcHostObject3.SetLanguageVersion(string languageVersion) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject4
-Microsoft.Build.Tasks.Hosting.IVbcHostObject4.SetVBRuntime(string VBRuntime) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.CompileAsync(out System.IntPtr buildSucceededEvent, out System.IntPtr buildFailedEvent) -> int
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.EndCompile(bool buildSuccess) -> int
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.GetFreeThreadedHostObject() -> Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetHighEntropyVA(bool highEntropyVA) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetPlatformWith32BitPreference(string platformWith32BitPreference) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetSubsystemVersion(string subsystemVersion) -> bool
-Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded
-Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded.Compile() -> bool
-Microsoft.Build.Tasks.IFixedTypeInfo
-Microsoft.Build.Tasks.IFixedTypeInfo.AddressOfMember(int memid, System.Runtime.InteropServices.ComTypes.INVOKEKIND invKind, out System.IntPtr ppv) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.CreateInstance(object pUnkOuter, ref System.Guid riid, out object ppvObj) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetContainingTypeLib(out System.Runtime.InteropServices.ComTypes.ITypeLib ppTLB, out int pIndex) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetDllEntry(int memid, System.Runtime.InteropServices.ComTypes.INVOKEKIND invKind, System.IntPtr pBstrDllName, System.IntPtr pBstrName, System.IntPtr pwOrdinal) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetDocumentation(int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetFuncDesc(int index, out System.IntPtr ppFuncDesc) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetIDsOfNames(string[] rgszNames, int cNames, int[] pMemId) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetImplTypeFlags(int index, out System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS pImplTypeFlags) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetMops(int memid, out string pBstrMops) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetNames(int memid, string[] rgBstrNames, int cMaxNames, out int pcNames) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeInfo(System.IntPtr hRef, out Microsoft.Build.Tasks.IFixedTypeInfo ppTI) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeOfImplType(int index, out System.IntPtr href) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetTypeAttr(out System.IntPtr ppTypeAttr) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetTypeComp(out System.Runtime.InteropServices.ComTypes.ITypeComp ppTComp) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.GetVarDesc(int index, out System.IntPtr ppVarDesc) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.Invoke(object pvInstance, int memid, short wFlags, ref System.Runtime.InteropServices.ComTypes.DISPPARAMS pDispParams, System.IntPtr pVarResult, System.IntPtr pExcepInfo, out int puArgErr) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseFuncDesc(System.IntPtr pFuncDesc) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseTypeAttr(System.IntPtr pTypeAttr) -> void
-Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseVarDesc(System.IntPtr pVarDesc) -> void
-Microsoft.Build.Tasks.LC
-Microsoft.Build.Tasks.LC.LC() -> void
-Microsoft.Build.Tasks.LC.LicenseTarget.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.LC.LicenseTarget.set -> void
-Microsoft.Build.Tasks.LC.NoLogo.get -> bool
-Microsoft.Build.Tasks.LC.NoLogo.set -> void
-Microsoft.Build.Tasks.LC.OutputDirectory.get -> string
-Microsoft.Build.Tasks.LC.OutputDirectory.set -> void
-Microsoft.Build.Tasks.LC.OutputLicense.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.LC.OutputLicense.set -> void
-Microsoft.Build.Tasks.LC.ReferencedAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.LC.ReferencedAssemblies.set -> void
-Microsoft.Build.Tasks.LC.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.LC.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.LC.Sources.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.LC.Sources.set -> void
-Microsoft.Build.Tasks.LC.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.LC.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.MakeDir
-Microsoft.Build.Tasks.MakeDir.Directories.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.MakeDir.Directories.set -> void
-Microsoft.Build.Tasks.MakeDir.DirectoriesCreated.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.MakeDir.MakeDir() -> void
-Microsoft.Build.Tasks.Message
-Microsoft.Build.Tasks.Message.Code.get -> string
-Microsoft.Build.Tasks.Message.Code.set -> void
-Microsoft.Build.Tasks.Message.File.get -> string
-Microsoft.Build.Tasks.Message.File.set -> void
-Microsoft.Build.Tasks.Message.HelpKeyword.get -> string
-Microsoft.Build.Tasks.Message.HelpKeyword.set -> void
-Microsoft.Build.Tasks.Message.Importance.get -> string
-Microsoft.Build.Tasks.Message.Importance.set -> void
-Microsoft.Build.Tasks.Message.IsCritical.get -> bool
-Microsoft.Build.Tasks.Message.IsCritical.set -> void
-Microsoft.Build.Tasks.Message.Message() -> void
-Microsoft.Build.Tasks.Message.Text.get -> string
-Microsoft.Build.Tasks.Message.Text.set -> void
-Microsoft.Build.Tasks.Move
-Microsoft.Build.Tasks.Move.Cancel() -> void
-Microsoft.Build.Tasks.Move.DestinationFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Move.DestinationFiles.set -> void
-Microsoft.Build.Tasks.Move.DestinationFolder.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.Move.DestinationFolder.set -> void
-Microsoft.Build.Tasks.Move.Move() -> void
-Microsoft.Build.Tasks.Move.MovedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles.get -> bool
-Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles.set -> void
-Microsoft.Build.Tasks.Move.SourceFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Move.SourceFiles.set -> void
-Microsoft.Build.Tasks.MSBuild
-Microsoft.Build.Tasks.MSBuild.BuildInParallel.get -> bool
-Microsoft.Build.Tasks.MSBuild.BuildInParallel.set -> void
-Microsoft.Build.Tasks.MSBuild.MSBuild() -> void
-Microsoft.Build.Tasks.MSBuild.Projects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.MSBuild.Projects.set -> void
-Microsoft.Build.Tasks.MSBuild.Properties.get -> string[]
-Microsoft.Build.Tasks.MSBuild.Properties.set -> void
-Microsoft.Build.Tasks.MSBuild.RebaseOutputs.get -> bool
-Microsoft.Build.Tasks.MSBuild.RebaseOutputs.set -> void
-Microsoft.Build.Tasks.MSBuild.RemoveProperties.get -> string
-Microsoft.Build.Tasks.MSBuild.RemoveProperties.set -> void
-Microsoft.Build.Tasks.MSBuild.RunEachTargetSeparately.get -> bool
-Microsoft.Build.Tasks.MSBuild.RunEachTargetSeparately.set -> void
-Microsoft.Build.Tasks.MSBuild.SkipNonexistentProjects.get -> string
-Microsoft.Build.Tasks.MSBuild.SkipNonexistentProjects.set -> void
-Microsoft.Build.Tasks.MSBuild.StopOnFirstFailure.get -> bool
-Microsoft.Build.Tasks.MSBuild.StopOnFirstFailure.set -> void
-Microsoft.Build.Tasks.MSBuild.TargetAndPropertyListSeparators.get -> string[]
-Microsoft.Build.Tasks.MSBuild.TargetAndPropertyListSeparators.set -> void
-Microsoft.Build.Tasks.MSBuild.TargetOutputs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.MSBuild.Targets.get -> string[]
-Microsoft.Build.Tasks.MSBuild.Targets.set -> void
-Microsoft.Build.Tasks.MSBuild.ToolsVersion.get -> string
-Microsoft.Build.Tasks.MSBuild.ToolsVersion.set -> void
-Microsoft.Build.Tasks.MSBuild.UnloadProjectsOnCompletion.get -> bool
-Microsoft.Build.Tasks.MSBuild.UnloadProjectsOnCompletion.set -> void
-Microsoft.Build.Tasks.MSBuild.UseResultsCache.get -> bool
-Microsoft.Build.Tasks.MSBuild.UseResultsCache.set -> void
-Microsoft.Build.Tasks.ReadLinesFromFile
-Microsoft.Build.Tasks.ReadLinesFromFile.File.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ReadLinesFromFile.File.set -> void
-Microsoft.Build.Tasks.ReadLinesFromFile.Lines.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ReadLinesFromFile.Lines.set -> void
-Microsoft.Build.Tasks.ReadLinesFromFile.ReadLinesFromFile() -> void
-Microsoft.Build.Tasks.RemoveDir
-Microsoft.Build.Tasks.RemoveDir.Directories.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RemoveDir.Directories.set -> void
-Microsoft.Build.Tasks.RemoveDir.RemovedDirectories.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RemoveDir.RemovedDirectories.set -> void
-Microsoft.Build.Tasks.RemoveDir.RemoveDir() -> void
-Microsoft.Build.Tasks.RemoveDuplicates
-Microsoft.Build.Tasks.RemoveDuplicates.Filtered.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RemoveDuplicates.Filtered.set -> void
-Microsoft.Build.Tasks.RemoveDuplicates.HadAnyDuplicates.get -> bool
-Microsoft.Build.Tasks.RemoveDuplicates.HadAnyDuplicates.set -> void
-Microsoft.Build.Tasks.RemoveDuplicates.Inputs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.RemoveDuplicates.Inputs.set -> void
-Microsoft.Build.Tasks.RemoveDuplicates.RemoveDuplicates() -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference
-Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedAssemblyExtensions.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedAssemblyExtensions.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedRelatedFileExtensions.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedRelatedFileExtensions.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.Assemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.Assemblies.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyFiles.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyInformationCacheOutputPath.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyInformationCacheOutputPath.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyInformationCachePaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyInformationCachePaths.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.AutoUnify.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.AutoUnify.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.CandidateAssemblyFiles.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.CandidateAssemblyFiles.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalDependenciesWhenParentReferenceInGac.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalDependenciesWhenParentReferenceInGac.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.DependsOnNETStandard.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.DependsOnSystemRuntime.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.DoNotCopyLocalIfInGac.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.DoNotCopyLocalIfInGac.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FilesWritten.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.FilesWritten.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependencies.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependencies.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependenciesOfExternallyResolvedReferences.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependenciesOfExternallyResolvedReferences.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindRelatedFiles.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindRelatedFiles.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindSatellites.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindSatellites.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindSerializationAssemblies.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.FindSerializationAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkAssemblyTables.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkAssemblyTables.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkFolders.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkFolders.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullTargetFrameworkSubsetNames.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.FullTargetFrameworkSubsetNames.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblySubsetTables.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblySubsetTables.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblyTables.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblyTables.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreTargetFrameworkAttributeVersionMismatch.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreTargetFrameworkAttributeVersionMismatch.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreVersionForFrameworkReferences.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreVersionForFrameworkReferences.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblySubsetTables.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblySubsetTables.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblyTables.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblyTables.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.LatestTargetFrameworkDirectories.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.LatestTargetFrameworkDirectories.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.OutputUnresolvedAssemblyConflicts.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.OutputUnresolvedAssemblyConflicts.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.ProfileName.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.ProfileName.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.ResolveAssemblyReference() -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedSDKReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedSDKReferences.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.ScatterFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.SearchPaths.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.SearchPaths.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.SerializationAssemblyFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.Silent.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.Silent.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.StateFile.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.StateFile.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.SuggestedRedirects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.SupportsBindingRedirectGeneration.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.SupportsBindingRedirectGeneration.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetedRuntimeVersion.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetedRuntimeVersion.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkDirectories.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkDirectories.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMoniker.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMoniker.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMonikerDisplayName.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMonikerDisplayName.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkSubsets.get -> string[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkSubsets.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetProcessorArchitecture.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.TargetProcessorArchitecture.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.UnresolvedAssemblyConflicts.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveAssemblyReference.UnresolveFrameworkAssembliesFromHigherFrameworks.get -> bool
-Microsoft.Build.Tasks.ResolveAssemblyReference.UnresolveFrameworkAssembliesFromHigherFrameworks.set -> void
-Microsoft.Build.Tasks.ResolveAssemblyReference.WarnOrErrorOnTargetArchitectureMismatch.get -> string
-Microsoft.Build.Tasks.ResolveAssemblyReference.WarnOrErrorOnTargetArchitectureMismatch.set -> void
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.CodeAnalysisRuleSet.get -> string
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.CodeAnalysisRuleSet.set -> void
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.CodeAnalysisRuleSetDirectories.get -> string[]
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.CodeAnalysisRuleSetDirectories.set -> void
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.MSBuildProjectDirectory.get -> string
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.MSBuildProjectDirectory.set -> void
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.ResolveCodeAnalysisRuleSet() -> void
-Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.ResolvedCodeAnalysisRuleSet.get -> string
-Microsoft.Build.Tasks.ResolveComReference
-Microsoft.Build.Tasks.ResolveComReference.DelaySign.get -> bool
-Microsoft.Build.Tasks.ResolveComReference.DelaySign.set -> void
-Microsoft.Build.Tasks.ResolveComReference.EnvironmentVariables.get -> string[]
-Microsoft.Build.Tasks.ResolveComReference.EnvironmentVariables.set -> void
-Microsoft.Build.Tasks.ResolveComReference.ExecuteAsTool.get -> bool
-Microsoft.Build.Tasks.ResolveComReference.ExecuteAsTool.set -> void
-Microsoft.Build.Tasks.ResolveComReference.IncludeVersionInInteropName.get -> bool
-Microsoft.Build.Tasks.ResolveComReference.IncludeVersionInInteropName.set -> void
-Microsoft.Build.Tasks.ResolveComReference.KeyContainer.get -> string
-Microsoft.Build.Tasks.ResolveComReference.KeyContainer.set -> void
-Microsoft.Build.Tasks.ResolveComReference.KeyFile.get -> string
-Microsoft.Build.Tasks.ResolveComReference.KeyFile.set -> void
-Microsoft.Build.Tasks.ResolveComReference.NoClassMembers.get -> bool
-Microsoft.Build.Tasks.ResolveComReference.NoClassMembers.set -> void
-Microsoft.Build.Tasks.ResolveComReference.ResolveComReference() -> void
-Microsoft.Build.Tasks.ResolveComReference.ResolvedAssemblyReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveComReference.ResolvedAssemblyReferences.set -> void
-Microsoft.Build.Tasks.ResolveComReference.ResolvedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveComReference.ResolvedFiles.set -> void
-Microsoft.Build.Tasks.ResolveComReference.ResolvedModules.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveComReference.ResolvedModules.set -> void
-Microsoft.Build.Tasks.ResolveComReference.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.ResolveComReference.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.ResolveComReference.Silent.get -> bool
-Microsoft.Build.Tasks.ResolveComReference.Silent.set -> void
-Microsoft.Build.Tasks.ResolveComReference.StateFile.get -> string
-Microsoft.Build.Tasks.ResolveComReference.StateFile.set -> void
-Microsoft.Build.Tasks.ResolveComReference.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.ResolveComReference.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.ResolveComReference.TargetProcessorArchitecture.get -> string
-Microsoft.Build.Tasks.ResolveComReference.TargetProcessorArchitecture.set -> void
-Microsoft.Build.Tasks.ResolveComReference.TypeLibFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveComReference.TypeLibFiles.set -> void
-Microsoft.Build.Tasks.ResolveComReference.TypeLibNames.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveComReference.TypeLibNames.set -> void
-Microsoft.Build.Tasks.ResolveComReference.WrapperOutputDirectory.get -> string
-Microsoft.Build.Tasks.ResolveComReference.WrapperOutputDirectory.set -> void
-Microsoft.Build.Tasks.ResolveKeySource
-Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptShow.get -> int
-Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptShow.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptTimeout.get -> int
-Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptTimeout.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.CertificateFile.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.CertificateFile.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.CertificateThumbprint.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.CertificateThumbprint.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.KeyFile.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.KeyFile.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyContainer.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyContainer.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyFile.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyFile.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedThumbprint.get -> string
-Microsoft.Build.Tasks.ResolveKeySource.ResolvedThumbprint.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.ResolveKeySource() -> void
-Microsoft.Build.Tasks.ResolveKeySource.ShowImportDialogDespitePreviousFailures.get -> bool
-Microsoft.Build.Tasks.ResolveKeySource.ShowImportDialogDespitePreviousFailures.set -> void
-Microsoft.Build.Tasks.ResolveKeySource.SuppressAutoClosePasswordPrompt.get -> bool
-Microsoft.Build.Tasks.ResolveKeySource.SuppressAutoClosePasswordPrompt.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles
-Microsoft.Build.Tasks.ResolveManifestFiles.AssemblyName.get -> string
-Microsoft.Build.Tasks.ResolveManifestFiles.AssemblyName.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.DeploymentManifestEntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ResolveManifestFiles.DeploymentManifestEntryPoint.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.EntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ResolveManifestFiles.EntryPoint.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.ExtraFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.ExtraFiles.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.Files.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.IsSelfContainedPublish.get -> bool
-Microsoft.Build.Tasks.ResolveManifestFiles.IsSelfContainedPublish.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.IsSingleFilePublish.get -> bool
-Microsoft.Build.Tasks.ResolveManifestFiles.IsSingleFilePublish.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.LauncherBasedDeployment.get -> bool
-Microsoft.Build.Tasks.ResolveManifestFiles.LauncherBasedDeployment.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.ManagedAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.ManagedAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.NativeAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.NativeAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputDeploymentManifestEntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputDeploymentManifestEntryPoint.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputEntryPoint.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputEntryPoint.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.OutputFiles.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.PublishFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.PublishFiles.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.ResolveManifestFiles() -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.RuntimePackAssets.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.RuntimePackAssets.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.SatelliteAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveManifestFiles.SatelliteAssemblies.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.SigningManifests.get -> bool
-Microsoft.Build.Tasks.ResolveManifestFiles.SigningManifests.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetCulture.get -> string
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetCulture.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkIdentifier.get -> string
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkIdentifier.set -> void
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.PreresolvedProjectOutputs.get -> string
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.PreresolvedProjectOutputs.set -> void
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.ResolvedOutputPaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.ResolvedOutputPaths.set -> void
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.ResolveNonMSBuildProjectOutput() -> void
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.UnresolvedProjectReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.UnresolvedProjectReferences.set -> void
-Microsoft.Build.Tasks.ResolveProjectBase
-Microsoft.Build.Tasks.ResolveProjectBase.AddSyntheticProjectReferences(string currentProjectAbsolutePath) -> void
-Microsoft.Build.Tasks.ResolveProjectBase.GetProjectElement(Microsoft.Build.Framework.ITaskItem projectRef) -> System.Xml.XmlElement
-Microsoft.Build.Tasks.ResolveProjectBase.GetProjectItem(Microsoft.Build.Framework.ITaskItem projectRef) -> string
-Microsoft.Build.Tasks.ResolveProjectBase.ProjectReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveProjectBase.ProjectReferences.set -> void
-Microsoft.Build.Tasks.ResolveProjectBase.ResolveProjectBase() -> void
-Microsoft.Build.Tasks.ResolveSDKReference
-Microsoft.Build.Tasks.ResolveSDKReference.DisallowedSDKDependencies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.DisallowedSDKDependencies.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.InstalledSDKs.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.InstalledSDKs.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.LogResolutionErrorsAsWarnings.get -> bool
-Microsoft.Build.Tasks.ResolveSDKReference.LogResolutionErrorsAsWarnings.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.Prefer32Bit.get -> bool
-Microsoft.Build.Tasks.ResolveSDKReference.Prefer32Bit.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.ProjectName.get -> string
-Microsoft.Build.Tasks.ResolveSDKReference.ProjectName.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.References.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.References.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.ResolvedSDKReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.ResolveSDKReference() -> void
-Microsoft.Build.Tasks.ResolveSDKReference.RuntimeReferenceOnlySDKDependencies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.RuntimeReferenceOnlySDKDependencies.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.SDKReferences.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.ResolveSDKReference.SDKReferences.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.TargetedSDKArchitecture.get -> string
-Microsoft.Build.Tasks.ResolveSDKReference.TargetedSDKArchitecture.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.TargetedSDKConfiguration.get -> string
-Microsoft.Build.Tasks.ResolveSDKReference.TargetedSDKConfiguration.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.TargetPlatformIdentifier.get -> string
-Microsoft.Build.Tasks.ResolveSDKReference.TargetPlatformIdentifier.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.TargetPlatformVersion.get -> string
-Microsoft.Build.Tasks.ResolveSDKReference.TargetPlatformVersion.set -> void
-Microsoft.Build.Tasks.ResolveSDKReference.WarnOnMissingPlatformVersion.get -> bool
-Microsoft.Build.Tasks.ResolveSDKReference.WarnOnMissingPlatformVersion.set -> void
-Microsoft.Build.Tasks.RoslynCodeTaskFactory
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask task) -> void
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> Microsoft.Build.Framework.ITask
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.FactoryName.get -> string
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.GetTaskParameters() -> Microsoft.Build.Framework.TaskPropertyInfo[]
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.Initialize(string taskName, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.RoslynCodeTaskFactory() -> void
-Microsoft.Build.Tasks.RoslynCodeTaskFactory.TaskType.get -> System.Type
-Microsoft.Build.Tasks.SGen
-Microsoft.Build.Tasks.SGen.BuildAssemblyName.get -> string
-Microsoft.Build.Tasks.SGen.BuildAssemblyName.set -> void
-Microsoft.Build.Tasks.SGen.BuildAssemblyPath.get -> string
-Microsoft.Build.Tasks.SGen.BuildAssemblyPath.set -> void
-Microsoft.Build.Tasks.SGen.DelaySign.get -> bool
-Microsoft.Build.Tasks.SGen.DelaySign.set -> void
-Microsoft.Build.Tasks.SGen.KeyContainer.get -> string
-Microsoft.Build.Tasks.SGen.KeyContainer.set -> void
-Microsoft.Build.Tasks.SGen.KeyFile.get -> string
-Microsoft.Build.Tasks.SGen.KeyFile.set -> void
-Microsoft.Build.Tasks.SGen.Platform.get -> string
-Microsoft.Build.Tasks.SGen.Platform.set -> void
-Microsoft.Build.Tasks.SGen.References.get -> string[]
-Microsoft.Build.Tasks.SGen.References.set -> void
-Microsoft.Build.Tasks.SGen.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.SGen.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.SGen.SerializationAssembly.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.SGen.SerializationAssembly.set -> void
-Microsoft.Build.Tasks.SGen.SerializationAssemblyName.get -> string
-Microsoft.Build.Tasks.SGen.SGen() -> void
-Microsoft.Build.Tasks.SGen.ShouldGenerateSerializer.get -> bool
-Microsoft.Build.Tasks.SGen.ShouldGenerateSerializer.set -> void
-Microsoft.Build.Tasks.SGen.Types.get -> string[]
-Microsoft.Build.Tasks.SGen.Types.set -> void
-Microsoft.Build.Tasks.SGen.UseKeep.get -> bool
-Microsoft.Build.Tasks.SGen.UseKeep.set -> void
-Microsoft.Build.Tasks.SGen.UseProxyTypes.get -> bool
-Microsoft.Build.Tasks.SGen.UseProxyTypes.set -> void
-Microsoft.Build.Tasks.SignFile
-Microsoft.Build.Tasks.SignFile.CertificateThumbprint.get -> string
-Microsoft.Build.Tasks.SignFile.CertificateThumbprint.set -> void
-Microsoft.Build.Tasks.SignFile.DisallowMansignTimestampFallback.get -> bool
-Microsoft.Build.Tasks.SignFile.DisallowMansignTimestampFallback.set -> void
-Microsoft.Build.Tasks.SignFile.SignFile() -> void
-Microsoft.Build.Tasks.SignFile.SigningTarget.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.SignFile.SigningTarget.set -> void
-Microsoft.Build.Tasks.SignFile.TargetFrameworkIdentifier.get -> string
-Microsoft.Build.Tasks.SignFile.TargetFrameworkIdentifier.set -> void
-Microsoft.Build.Tasks.SignFile.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.SignFile.TargetFrameworkVersion.set -> void
-Microsoft.Build.Tasks.SignFile.TimestampUrl.get -> string
-Microsoft.Build.Tasks.SignFile.TimestampUrl.set -> void
-Microsoft.Build.Tasks.TaskExtension
-Microsoft.Build.Tasks.TaskExtension.Log.get -> Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Tasks.TaskLoggingHelperExtension
-Microsoft.Build.Tasks.TaskLoggingHelperExtension.TaskLoggingHelperExtension(Microsoft.Build.Framework.ITask taskInstance, System.Resources.ResourceManager primaryResources, System.Resources.ResourceManager sharedResources, string helpKeywordPrefix) -> void
-Microsoft.Build.Tasks.TaskLoggingHelperExtension.TaskSharedResources.get -> System.Resources.ResourceManager
-Microsoft.Build.Tasks.TaskLoggingHelperExtension.TaskSharedResources.set -> void
-Microsoft.Build.Tasks.Telemetry
-Microsoft.Build.Tasks.Telemetry.EventData.get -> string
-Microsoft.Build.Tasks.Telemetry.EventData.set -> void
-Microsoft.Build.Tasks.Telemetry.EventName.get -> string
-Microsoft.Build.Tasks.Telemetry.EventName.set -> void
-Microsoft.Build.Tasks.Telemetry.Telemetry() -> void
-Microsoft.Build.Tasks.ToolTaskExtension
-Microsoft.Build.Tasks.ToolTaskExtension.Log.get -> Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Tasks.Touch
-Microsoft.Build.Tasks.Touch.AlwaysCreate.get -> bool
-Microsoft.Build.Tasks.Touch.AlwaysCreate.set -> void
-Microsoft.Build.Tasks.Touch.Files.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Touch.Files.set -> void
-Microsoft.Build.Tasks.Touch.ForceTouch.get -> bool
-Microsoft.Build.Tasks.Touch.ForceTouch.set -> void
-Microsoft.Build.Tasks.Touch.Time.get -> string
-Microsoft.Build.Tasks.Touch.Time.set -> void
-Microsoft.Build.Tasks.Touch.Touch() -> void
-Microsoft.Build.Tasks.Touch.TouchedFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Touch.TouchedFiles.set -> void
-Microsoft.Build.Tasks.Unzip
-Microsoft.Build.Tasks.Unzip.Cancel() -> void
-Microsoft.Build.Tasks.Unzip.DestinationFolder.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.Unzip.DestinationFolder.set -> void
-Microsoft.Build.Tasks.Unzip.Exclude.get -> string
-Microsoft.Build.Tasks.Unzip.Exclude.set -> void
-Microsoft.Build.Tasks.Unzip.Include.get -> string
-Microsoft.Build.Tasks.Unzip.Include.set -> void
-Microsoft.Build.Tasks.Unzip.OverwriteReadOnlyFiles.get -> bool
-Microsoft.Build.Tasks.Unzip.OverwriteReadOnlyFiles.set -> void
-Microsoft.Build.Tasks.Unzip.SkipUnchangedFiles.get -> bool
-Microsoft.Build.Tasks.Unzip.SkipUnchangedFiles.set -> void
-Microsoft.Build.Tasks.Unzip.SourceFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.Unzip.SourceFiles.set -> void
-Microsoft.Build.Tasks.Unzip.Unzip() -> void
-Microsoft.Build.Tasks.VerifyFileHash
-Microsoft.Build.Tasks.VerifyFileHash.Algorithm.get -> string
-Microsoft.Build.Tasks.VerifyFileHash.Algorithm.set -> void
-Microsoft.Build.Tasks.VerifyFileHash.File.get -> string
-Microsoft.Build.Tasks.VerifyFileHash.File.set -> void
-Microsoft.Build.Tasks.VerifyFileHash.Hash.get -> string
-Microsoft.Build.Tasks.VerifyFileHash.Hash.set -> void
-Microsoft.Build.Tasks.VerifyFileHash.HashEncoding.get -> string
-Microsoft.Build.Tasks.VerifyFileHash.HashEncoding.set -> void
-Microsoft.Build.Tasks.VerifyFileHash.VerifyFileHash() -> void
-Microsoft.Build.Tasks.Warning
-Microsoft.Build.Tasks.Warning.Code.get -> string
-Microsoft.Build.Tasks.Warning.Code.set -> void
-Microsoft.Build.Tasks.Warning.File.get -> string
-Microsoft.Build.Tasks.Warning.File.set -> void
-Microsoft.Build.Tasks.Warning.HelpKeyword.get -> string
-Microsoft.Build.Tasks.Warning.HelpKeyword.set -> void
-Microsoft.Build.Tasks.Warning.HelpLink.get -> string
-Microsoft.Build.Tasks.Warning.HelpLink.set -> void
-Microsoft.Build.Tasks.Warning.Text.get -> string
-Microsoft.Build.Tasks.Warning.Text.set -> void
-Microsoft.Build.Tasks.Warning.Warning() -> void
-Microsoft.Build.Tasks.WriteCodeFragment
-Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes.set -> void
-Microsoft.Build.Tasks.WriteCodeFragment.Language.get -> string
-Microsoft.Build.Tasks.WriteCodeFragment.Language.set -> void
-Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory.set -> void
-Microsoft.Build.Tasks.WriteCodeFragment.OutputFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.WriteCodeFragment.OutputFile.set -> void
-Microsoft.Build.Tasks.WriteCodeFragment.WriteCodeFragment() -> void
-Microsoft.Build.Tasks.WriteLinesToFile
-Microsoft.Build.Tasks.WriteLinesToFile.Encoding.get -> string
-Microsoft.Build.Tasks.WriteLinesToFile.Encoding.set -> void
-Microsoft.Build.Tasks.WriteLinesToFile.File.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.WriteLinesToFile.File.set -> void
-Microsoft.Build.Tasks.WriteLinesToFile.Lines.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.WriteLinesToFile.Lines.set -> void
-Microsoft.Build.Tasks.WriteLinesToFile.Overwrite.get -> bool
-Microsoft.Build.Tasks.WriteLinesToFile.Overwrite.set -> void
-Microsoft.Build.Tasks.WriteLinesToFile.WriteLinesToFile() -> void
-Microsoft.Build.Tasks.WriteLinesToFile.WriteOnlyWhenDifferent.get -> bool
-Microsoft.Build.Tasks.WriteLinesToFile.WriteOnlyWhenDifferent.set -> void
-Microsoft.Build.Tasks.XamlTaskFactory
-Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask task) -> void
-Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> Microsoft.Build.Framework.ITask
-Microsoft.Build.Tasks.XamlTaskFactory.FactoryName.get -> string
-Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters() -> Microsoft.Build.Framework.TaskPropertyInfo[]
-Microsoft.Build.Tasks.XamlTaskFactory.Initialize(string taskName, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) -> bool
-Microsoft.Build.Tasks.XamlTaskFactory.TaskType.get -> System.Type
-Microsoft.Build.Tasks.XamlTaskFactory.XamlTaskFactory() -> void
-Microsoft.Build.Tasks.XmlPeek
-Microsoft.Build.Tasks.XmlPeek.Namespaces.get -> string
-Microsoft.Build.Tasks.XmlPeek.Namespaces.set -> void
-Microsoft.Build.Tasks.XmlPeek.ProhibitDtd.get -> bool
-Microsoft.Build.Tasks.XmlPeek.ProhibitDtd.set -> void
-Microsoft.Build.Tasks.XmlPeek.Query.get -> string
-Microsoft.Build.Tasks.XmlPeek.Query.set -> void
-Microsoft.Build.Tasks.XmlPeek.Result.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.XmlPeek.XmlContent.get -> string
-Microsoft.Build.Tasks.XmlPeek.XmlContent.set -> void
-Microsoft.Build.Tasks.XmlPeek.XmlInputPath.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.XmlPeek.XmlInputPath.set -> void
-Microsoft.Build.Tasks.XmlPeek.XmlPeek() -> void
-Microsoft.Build.Tasks.XmlPoke
-Microsoft.Build.Tasks.XmlPoke.Namespaces.get -> string
-Microsoft.Build.Tasks.XmlPoke.Namespaces.set -> void
-Microsoft.Build.Tasks.XmlPoke.Query.get -> string
-Microsoft.Build.Tasks.XmlPoke.Query.set -> void
-Microsoft.Build.Tasks.XmlPoke.Value.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.XmlPoke.Value.set -> void
-Microsoft.Build.Tasks.XmlPoke.XmlInputPath.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.XmlPoke.XmlInputPath.set -> void
-Microsoft.Build.Tasks.XmlPoke.XmlPoke() -> void
-Microsoft.Build.Tasks.XslTransformation
-Microsoft.Build.Tasks.XslTransformation.OutputPaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.XslTransformation.OutputPaths.set -> void
-Microsoft.Build.Tasks.XslTransformation.Parameters.get -> string
-Microsoft.Build.Tasks.XslTransformation.Parameters.set -> void
-Microsoft.Build.Tasks.XslTransformation.UseTrustedSettings.get -> bool
-Microsoft.Build.Tasks.XslTransformation.UseTrustedSettings.set -> void
-Microsoft.Build.Tasks.XslTransformation.XmlContent.get -> string
-Microsoft.Build.Tasks.XslTransformation.XmlContent.set -> void
-Microsoft.Build.Tasks.XslTransformation.XmlInputPaths.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.XslTransformation.XmlInputPaths.set -> void
-Microsoft.Build.Tasks.XslTransformation.XslCompiledDllPath.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.XslTransformation.XslCompiledDllPath.set -> void
-Microsoft.Build.Tasks.XslTransformation.XslContent.get -> string
-Microsoft.Build.Tasks.XslTransformation.XslContent.set -> void
-Microsoft.Build.Tasks.XslTransformation.XslInputPath.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.XslTransformation.XslInputPath.set -> void
-Microsoft.Build.Tasks.XslTransformation.XslTransformation() -> void
-Microsoft.Build.Tasks.ZipDirectory
-Microsoft.Build.Tasks.ZipDirectory.DestinationFile.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ZipDirectory.DestinationFile.set -> void
-Microsoft.Build.Tasks.ZipDirectory.Overwrite.get -> bool
-Microsoft.Build.Tasks.ZipDirectory.Overwrite.set -> void
-Microsoft.Build.Tasks.ZipDirectory.SourceDirectory.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.ZipDirectory.SourceDirectory.set -> void
-Microsoft.Build.Tasks.ZipDirectory.ZipDirectory() -> void
-override Microsoft.Build.Tasks.AssignCulture.Execute() -> bool
-override Microsoft.Build.Tasks.AssignLinkMetadata.Execute() -> bool
-override Microsoft.Build.Tasks.AssignProjectConfiguration.Execute() -> bool
-override Microsoft.Build.Tasks.AssignTargetPath.Execute() -> bool
-override Microsoft.Build.Tasks.CallTarget.Execute() -> bool
-override Microsoft.Build.Tasks.CombinePath.Execute() -> bool
-override Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties.Execute() -> bool
-override Microsoft.Build.Tasks.CombineXmlElements.Execute() -> bool
-override Microsoft.Build.Tasks.ConvertToAbsolutePath.Execute() -> bool
-override Microsoft.Build.Tasks.Copy.Execute() -> bool
-override Microsoft.Build.Tasks.CreateCSharpManifestResourceName.CreateManifestName(string fileName, string linkFileName, string rootNamespace, string dependentUponFileName, System.IO.Stream binaryStream) -> string
-override Microsoft.Build.Tasks.CreateCSharpManifestResourceName.IsSourceFile(string fileName) -> bool
-override Microsoft.Build.Tasks.CreateCSharpManifestResourceName.SourceFileExtension.get -> string
-override Microsoft.Build.Tasks.CreateItem.Execute() -> bool
-override Microsoft.Build.Tasks.CreateManifestResourceName.Execute() -> bool
-override Microsoft.Build.Tasks.CreateProperty.Execute() -> bool
-override Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.CreateManifestName(string fileName, string linkFileName, string rootNamespace, string dependentUponFileName, System.IO.Stream binaryStream) -> string
-override Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.IsSourceFile(string fileName) -> bool
-override Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.SourceFileExtension.get -> string
-override Microsoft.Build.Tasks.Delete.Execute() -> bool
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.ToString() -> string
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.EntryPoint.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.EntryPoint.set -> void
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Validate() -> void
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ToString() -> string
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.ToString() -> string
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ToString() -> string
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.EntryPoint.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.EntryPoint.set -> void
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Validate() -> void
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ToString() -> string
-override Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ToString() -> string
-override Microsoft.Build.Tasks.DownloadFile.Execute() -> bool
-override Microsoft.Build.Tasks.Error.Execute() -> bool
-override Microsoft.Build.Tasks.ErrorFromResources.Execute() -> bool
-override Microsoft.Build.Tasks.Exec.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.Exec.ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) -> int
-override Microsoft.Build.Tasks.Exec.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.Exec.GetWorkingDirectory() -> string
-override Microsoft.Build.Tasks.Exec.HandleTaskExecutionErrors() -> bool
-override Microsoft.Build.Tasks.Exec.LogEventsFromTextOutput(string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance) -> void
-override Microsoft.Build.Tasks.Exec.LogPathToTool(string toolName, string pathToTool) -> void
-override Microsoft.Build.Tasks.Exec.LogToolCommand(string message) -> void
-override Microsoft.Build.Tasks.Exec.StandardErrorEncoding.get -> System.Text.Encoding
-override Microsoft.Build.Tasks.Exec.StandardErrorLoggingImportance.get -> Microsoft.Build.Framework.MessageImportance
-override Microsoft.Build.Tasks.Exec.StandardOutputEncoding.get -> System.Text.Encoding
-override Microsoft.Build.Tasks.Exec.StandardOutputLoggingImportance.get -> Microsoft.Build.Framework.MessageImportance
-override Microsoft.Build.Tasks.Exec.ToolName.get -> string
-override Microsoft.Build.Tasks.Exec.ValidateParameters() -> bool
-override Microsoft.Build.Tasks.FindAppConfigFile.Execute() -> bool
-override Microsoft.Build.Tasks.FindInList.Execute() -> bool
-override Microsoft.Build.Tasks.FindInvalidProjectReferences.Execute() -> bool
-override Microsoft.Build.Tasks.FindUnderPath.Execute() -> bool
-override Microsoft.Build.Tasks.FormatUrl.Execute() -> bool
-override Microsoft.Build.Tasks.FormatVersion.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateApplicationManifest.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateBindingRedirects.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateDeploymentManifest.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateLauncher.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateManifestBase.Execute() -> bool
-override Microsoft.Build.Tasks.GenerateResource.Execute() -> bool
-override Microsoft.Build.Tasks.GetAssemblyIdentity.Execute() -> bool
-override Microsoft.Build.Tasks.GetCompatiblePlatform.Execute() -> bool
-override Microsoft.Build.Tasks.GetFileHash.Execute() -> bool
-override Microsoft.Build.Tasks.GetFrameworkPath.Execute() -> bool
-override Microsoft.Build.Tasks.GetInstalledSDKLocations.Execute() -> bool
-override Microsoft.Build.Tasks.GetReferenceAssemblyPaths.Execute() -> bool
-override Microsoft.Build.Tasks.GetSDKReferenceFiles.Execute() -> bool
-override Microsoft.Build.Tasks.Hash.Execute() -> bool
-override Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.LC.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.LC.Execute() -> bool
-override Microsoft.Build.Tasks.LC.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.LC.ToolName.get -> string
-override Microsoft.Build.Tasks.LC.ValidateParameters() -> bool
-override Microsoft.Build.Tasks.MakeDir.Execute() -> bool
-override Microsoft.Build.Tasks.Message.Execute() -> bool
-override Microsoft.Build.Tasks.Move.Execute() -> bool
-override Microsoft.Build.Tasks.MSBuild.Execute() -> bool
-override Microsoft.Build.Tasks.ReadLinesFromFile.Execute() -> bool
-override Microsoft.Build.Tasks.RemoveDir.Execute() -> bool
-override Microsoft.Build.Tasks.RemoveDuplicates.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveAssemblyReference.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveComReference.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveKeySource.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveManifestFiles.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.Execute() -> bool
-override Microsoft.Build.Tasks.ResolveSDKReference.Execute() -> bool
-override Microsoft.Build.Tasks.SGen.Execute() -> bool
-override Microsoft.Build.Tasks.SGen.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.SGen.ToolName.get -> string
-override Microsoft.Build.Tasks.SignFile.Execute() -> bool
-override Microsoft.Build.Tasks.TaskLoggingHelperExtension.FormatResourceString(string resourceName, params object[] args) -> string
-override Microsoft.Build.Tasks.Telemetry.Execute() -> bool
-override Microsoft.Build.Tasks.Touch.Execute() -> bool
-override Microsoft.Build.Tasks.Unzip.Execute() -> bool
-override Microsoft.Build.Tasks.VerifyFileHash.Execute() -> bool
-override Microsoft.Build.Tasks.Warning.Execute() -> bool
-override Microsoft.Build.Tasks.WriteCodeFragment.Execute() -> bool
-override Microsoft.Build.Tasks.WriteLinesToFile.Execute() -> bool
-override Microsoft.Build.Tasks.XmlPeek.Execute() -> bool
-override Microsoft.Build.Tasks.XmlPoke.Execute() -> bool
-override Microsoft.Build.Tasks.XslTransformation.Execute() -> bool
-override Microsoft.Build.Tasks.ZipDirectory.Execute() -> bool
-override System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription.CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm key) -> System.Security.Cryptography.AsymmetricSignatureDeformatter
-override System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription.CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm key) -> System.Security.Cryptography.AsymmetricSignatureFormatter
-static Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(string name) -> string
-static Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.XmlToConfigurationFile(System.Xml.XmlNode input) -> string
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromAssemblyName(string assemblyName) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromFile(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManagedAssembly(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManifest(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromNativeAssembly(string path) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(string manifestType, string path, bool preserveStream) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(string manifestType, System.IO.Stream input, bool preserveStream) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(string path, bool preserveStream) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.IO.Stream input, bool preserveStream) -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest, string path) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest, string path, string targetframeWorkVersion) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest manifest, System.IO.Stream output) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certPath, System.Security.SecureString certPassword, System.Uri timestampUrl, string path) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion, string targetFrameworkIdentifier) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion, string targetFrameworkIdentifier, bool disallowMansignTimestampFallback) -> void
-static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2 cert, System.Uri timestampUrl, string path) -> void
-System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription
-System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription.RSAPKCS1SHA256SignatureDescription() -> void
-virtual Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.EntryPoint.get -> Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference
-virtual Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.EntryPoint.set -> void
-virtual Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Validate() -> void
-virtual Microsoft.Build.Tasks.GenerateManifestBase.ValidateInputs() -> bool
-virtual Microsoft.Build.Tasks.GenerateManifestBase.ValidateOutput() -> bool
\ No newline at end of file
diff --git a/src/Tasks/PublicAPI/netstandard/PublicAPI.Unshipped.txt b/src/Tasks/PublicAPI/netstandard/PublicAPI.Unshipped.txt
deleted file mode 100644
index 176cca35d60..00000000000
--- a/src/Tasks/PublicAPI/netstandard/PublicAPI.Unshipped.txt
+++ /dev/null
@@ -1,9 +0,0 @@
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.Projects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.Projects.set -> void
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.SetRidAgnosticValueForProjects() -> void
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.UpdatedProjects.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.UpdatedProjects.set -> void
-Microsoft.Build.Tasks.XslTransformation.PreserveWhitespace.get -> bool
-Microsoft.Build.Tasks.XslTransformation.PreserveWhitespace.set -> void
-override Microsoft.Build.Tasks.SetRidAgnosticValueForProjects.Execute() -> bool
diff --git a/src/Utilities/CompatibilitySuppressions.xml b/src/Utilities/CompatibilitySuppressions.xml
new file mode 100644
index 00000000000..993613f410e
--- /dev/null
+++ b/src/Utilities/CompatibilitySuppressions.xml
@@ -0,0 +1,56 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Suppressions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
+  <!-- PKV004 for netstandard2.0-supporting TFs that we do not have runtime assemblies for.
+       This is intentional, because you can only use MSBuild in the context of a .NET SDK
+       (on net7.0, as of MSBuild 17.4) or in the context of Visual Studio (net472), but we
+       have previously shipped netstandard2.0 packages, and if you want to support both
+       runtime contexts it still makes sense to target that. -->
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETCoreApp,Version=v2.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETFramework,Version=v4.6.1</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETFramework,Version=v4.6.2</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETFramework,Version=v4.6.3</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>.NETStandard,Version=v2.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Tizen,Version=v4.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>UAP,Version=v10.0.15064</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.Xbox360,Version=v0.0</Target>
+  </Suppression>
+  <Suppression>
+    <DiagnosticId>PKV004</DiagnosticId>
+    <Target>Xamarin.XboxOne,Version=v0.0</Target>
+  </Suppression>
+</Suppressions>
diff --git a/src/Utilities/Microsoft.Build.Utilities.csproj b/src/Utilities/Microsoft.Build.Utilities.csproj
index b5e520f25a3..64fa68b16e5 100644
--- a/src/Utilities/Microsoft.Build.Utilities.csproj
+++ b/src/Utilities/Microsoft.Build.Utilities.csproj
@@ -15,6 +15,7 @@
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is used to implement custom MSBuild tasks.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
     <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">full</ApplyNgenOptimization>
+    <EnablePackageValidation>true</EnablePackageValidation>
   </PropertyGroup>
 
   <ItemGroup>
diff --git a/src/Utilities/PublicAPI/net/PublicAPI.Shipped.txt b/src/Utilities/PublicAPI/net/PublicAPI.Shipped.txt
deleted file mode 100644
index 0c8ceeed580..00000000000
--- a/src/Utilities/PublicAPI/net/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,583 +0,0 @@
-abstract Microsoft.Build.Utilities.AppDomainIsolatedTask.Execute() -> bool
-abstract Microsoft.Build.Utilities.Logger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-abstract Microsoft.Build.Utilities.Task.Execute() -> bool
-abstract Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool() -> string
-abstract Microsoft.Build.Utilities.ToolTask.ToolName.get -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.AMD64 = "AMD64" -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.ARM = "ARM" -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.ARM64 = "ARM64" -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.IA64 = "IA64" -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.MSIL = "MSIL" -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.X86 = "x86" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.APPX = "APPX" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.AppxLocation = "AppxLocation" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.CopyLocalExpandedReferenceAssemblies = "CopyLocalExpandedReferenceAssemblies" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.CopyRedist = "CopyRedist" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.CopyRedistToSubDirectory = "CopyRedistToSubDirectory" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.DependsOnSDK = "DependsOn" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.DisplayName = "DisplayName" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.ExpandReferenceAssemblies = "ExpandReferenceAssemblies" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.FrameworkIdentity = "FrameworkIdentity" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.MaxOSVersionTested = "MaxOSVersionTested" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.MaxPlatformVersion = "MaxPlatformVersion" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.MinOSVersion = "MinOSVersion" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.MinVSVersion = "MinVSVersion" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.MoreInfo = "MoreInfo" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.PlatformIdentity = "PlatformIdentity" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.ProductFamilyName = "ProductFamilyName" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.SDKType = "SDKType" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.SupportedArchitectures = "SupportedArchitectures" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.SupportPrefer32Bit = "SupportPrefer32Bit" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.SupportsMultipleVersions = "SupportsMultipleVersions" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.TargetedSDK = "TargetedSDKArchitecture" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.TargetedSDKConfiguration = "TargetedSDKConfiguration" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.TargetPlatform = "TargetPlatform" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.TargetPlatformMinVersion = "TargetPlatformMinVersion" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.TargetPlatformVersion = "TargetPlatformVersion" -> string
-Microsoft.Build.Utilities.AppDomainIsolatedTask
-Microsoft.Build.Utilities.AppDomainIsolatedTask.AppDomainIsolatedTask() -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.AppDomainIsolatedTask(System.Resources.ResourceManager taskResources) -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.AppDomainIsolatedTask(System.Resources.ResourceManager taskResources, string helpKeywordPrefix) -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.BuildEngine.get -> Microsoft.Build.Framework.IBuildEngine
-Microsoft.Build.Utilities.AppDomainIsolatedTask.BuildEngine.set -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.HelpKeywordPrefix.get -> string
-Microsoft.Build.Utilities.AppDomainIsolatedTask.HelpKeywordPrefix.set -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.HostObject.get -> Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.Utilities.AppDomainIsolatedTask.HostObject.set -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.Log.get -> Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Utilities.AppDomainIsolatedTask.TaskResources.get -> System.Resources.ResourceManager
-Microsoft.Build.Utilities.AppDomainIsolatedTask.TaskResources.set -> void
-Microsoft.Build.Utilities.AssemblyFoldersExInfo
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.AssemblyFoldersExInfo(Microsoft.Win32.RegistryHive hive, Microsoft.Win32.RegistryView view, string registryKey, string directoryPath, System.Version targetFrameworkVersion) -> void
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.DirectoryPath.get -> string
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.Hive.get -> Microsoft.Win32.RegistryHive
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.Key.get -> string
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.TargetFrameworkVersion.get -> System.Version
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.View.get -> Microsoft.Win32.RegistryView
-Microsoft.Build.Utilities.AssemblyFoldersFromConfigInfo
-Microsoft.Build.Utilities.AssemblyFoldersFromConfigInfo.AssemblyFoldersFromConfigInfo(string directoryPath, System.Version targetFrameworkVersion) -> void
-Microsoft.Build.Utilities.AssemblyFoldersFromConfigInfo.DirectoryPath.get -> string
-Microsoft.Build.Utilities.AssemblyFoldersFromConfigInfo.TargetFrameworkVersion.get -> System.Version
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.CanonicalTrackedInputFiles(Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem sourceFile, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.CanonicalTrackedInputFiles(Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Framework.ITaskItem[] outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.CanonicalTrackedInputFiles(Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.CanonicalTrackedInputFiles(Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.CanonicalTrackedInputFiles(Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation() -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation(bool searchForSubRootsInCompositeRootingMarkers) -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.DependencyTable.get -> System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string>>
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.FileIsExcludedFromDependencyCheck(string fileName) -> bool
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem source) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem correspondingOutput) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[] source) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[] source, Microsoft.Build.Framework.ITaskItem[] correspondingOutputs) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem dependencyToRemove) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[] sources, Microsoft.Build.Framework.ITaskItem dependencyToRemove) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem source) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[] source) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntryForSourceRoot(string rootingMarker) -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog() -> void
-Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter includeInTLog) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputForSourceRoot(string sourceKey, string computedOutput) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputsForSourceRoot(string sourceKey, Microsoft.Build.Framework.ITaskItem[] computedOutputs) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputsForSourceRoot(string sourceKey, string[] computedOutputs) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.CanonicalTrackedOutputFiles(Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.CanonicalTrackedOutputFiles(Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool constructOutputsFromTLogs) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.CanonicalTrackedOutputFiles(Microsoft.Build.Framework.ITaskItem[] tlogFiles) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.DependencyTable.get -> System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.DateTime>>
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForNonCompositeSource(params Microsoft.Build.Framework.ITaskItem[] sources) -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForSource(Microsoft.Build.Framework.ITaskItem[] sources, bool searchForSubRootsInCompositeRootingMarkers) -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForSource(params Microsoft.Build.Framework.ITaskItem[] sources) -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem source) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem correspondingOutput) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[] source) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[] source, Microsoft.Build.Framework.ITaskItem[] correspondingOutputs) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem dependencyToRemove) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[] sources, Microsoft.Build.Framework.ITaskItem dependencyToRemove) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem source) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem correspondingOutput) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[] source) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[] source, Microsoft.Build.Framework.ITaskItem[] correspondingOutputs) -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveOutputForSourceRoot(string sourceRoot, string outputPathToRemove) -> bool
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveRootsWithSharedOutputs(Microsoft.Build.Framework.ITaskItem[] sources) -> string[]
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.SaveTlog() -> void
-Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter includeInTLog) -> void
-Microsoft.Build.Utilities.CommandLineBuilder
-Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem fileItem) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(string fileName) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(string[] fileNames, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(string fileName) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder buffer, string unquotedTextToAppend) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty() -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(string switchName) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(string switchName, Microsoft.Build.Framework.ITaskItem parameter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(string switchName, string parameter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(string switchName, string[] parameters, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(string switchName, Microsoft.Build.Framework.ITaskItem parameter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(string switchName, string parameter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(string switchName, string[] parameters, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(string textToAppend) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(string textToAppend) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.CommandLine.get -> System.Text.StringBuilder
-Microsoft.Build.Utilities.CommandLineBuilder.CommandLineBuilder() -> void
-Microsoft.Build.Utilities.CommandLineBuilder.CommandLineBuilder(bool quoteHyphensOnCommandLine) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.CommandLineBuilder(bool quoteHyphensOnCommandLine, bool useNewLineSeparator) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.Length.get -> int
-Microsoft.Build.Utilities.DependencyFilter
-Microsoft.Build.Utilities.DotNetFrameworkArchitecture
-Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Bitness32 = 1 -> Microsoft.Build.Utilities.DotNetFrameworkArchitecture
-Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Bitness64 = 2 -> Microsoft.Build.Utilities.DotNetFrameworkArchitecture
-Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Current = 0 -> Microsoft.Build.Utilities.DotNetFrameworkArchitecture
-Microsoft.Build.Utilities.ExecutableType
-Microsoft.Build.Utilities.ExecutableType.Managed32Bit = 3 -> Microsoft.Build.Utilities.ExecutableType
-Microsoft.Build.Utilities.ExecutableType.Managed64Bit = 4 -> Microsoft.Build.Utilities.ExecutableType
-Microsoft.Build.Utilities.ExecutableType.ManagedARM64 = 7 -> Microsoft.Build.Utilities.ExecutableType
-Microsoft.Build.Utilities.ExecutableType.ManagedIL = 2 -> Microsoft.Build.Utilities.ExecutableType
-Microsoft.Build.Utilities.ExecutableType.Native32Bit = 0 -> Microsoft.Build.Utilities.ExecutableType
-Microsoft.Build.Utilities.ExecutableType.Native64Bit = 1 -> Microsoft.Build.Utilities.ExecutableType
-Microsoft.Build.Utilities.ExecutableType.NativeARM64 = 6 -> Microsoft.Build.Utilities.ExecutableType
-Microsoft.Build.Utilities.ExecutableType.SameAsCurrentProcess = 5 -> Microsoft.Build.Utilities.ExecutableType
-Microsoft.Build.Utilities.FileTracker
-Microsoft.Build.Utilities.FlatTrackingData
-Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(string fileName) -> bool
-Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles) -> void
-Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, System.DateTime missingFileTimeUtc) -> void
-Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles) -> void
-Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, System.DateTime missingFileTimeUtc) -> void
-Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, System.DateTime missingFileTimeUtc, string[] excludedInputPaths, System.Collections.Generic.IDictionary<string, System.DateTime> sharedLastWriteTimeUtcCache) -> void
-Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, System.DateTime missingFileTimeUtc, string[] excludedInputPaths, System.Collections.Generic.IDictionary<string, System.DateTime> sharedLastWriteTimeUtcCache, bool treatRootMarkersAsEntries) -> void
-Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(Microsoft.Build.Framework.ITaskItem[] tlogFiles, System.DateTime missingFileTimeUtc) -> void
-Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(string file) -> System.DateTime
-Microsoft.Build.Utilities.FlatTrackingData.MissingFiles.get -> System.Collections.Generic.List<string>
-Microsoft.Build.Utilities.FlatTrackingData.MissingFiles.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.NewestFileName.get -> string
-Microsoft.Build.Utilities.FlatTrackingData.NewestFileName.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime.get -> System.DateTime
-Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc.get -> System.DateTime
-Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName.get -> string
-Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime.get -> System.DateTime
-Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc.get -> System.DateTime
-Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.OldestFileName.get -> string
-Microsoft.Build.Utilities.FlatTrackingData.OldestFileName.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime.get -> System.DateTime
-Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc.get -> System.DateTime
-Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.SaveTlog() -> void
-Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(Microsoft.Build.Utilities.DependencyFilter includeInTLog) -> void
-Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles.get -> bool
-Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.TlogFiles.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Utilities.FlatTrackingData.TlogFiles.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable.get -> bool
-Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries.get -> bool
-Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries.set -> void
-Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails() -> void
-Microsoft.Build.Utilities.HostObjectInitializationStatus
-Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnFailure = 3 -> Microsoft.Build.Utilities.HostObjectInitializationStatus
-Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnSuccess = 2 -> Microsoft.Build.Utilities.HostObjectInitializationStatus
-Microsoft.Build.Utilities.HostObjectInitializationStatus.UseAlternateToolToExecute = 1 -> Microsoft.Build.Utilities.HostObjectInitializationStatus
-Microsoft.Build.Utilities.HostObjectInitializationStatus.UseHostObjectToExecute = 0 -> Microsoft.Build.Utilities.HostObjectInitializationStatus
-Microsoft.Build.Utilities.Logger
-Microsoft.Build.Utilities.Logger.IsVerbosityAtLeast(Microsoft.Build.Framework.LoggerVerbosity checkVerbosity) -> bool
-Microsoft.Build.Utilities.Logger.Logger() -> void
-Microsoft.Build.Utilities.MultipleVersionSupport
-Microsoft.Build.Utilities.MultipleVersionSupport.Allow = 0 -> Microsoft.Build.Utilities.MultipleVersionSupport
-Microsoft.Build.Utilities.MultipleVersionSupport.Error = 2 -> Microsoft.Build.Utilities.MultipleVersionSupport
-Microsoft.Build.Utilities.MultipleVersionSupport.Warning = 1 -> Microsoft.Build.Utilities.MultipleVersionSupport
-Microsoft.Build.Utilities.MuxLogger
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects.get -> bool
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects.set -> void
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles.get -> bool
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles.set -> void
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationPropertiesAndItems.get -> bool
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationPropertiesAndItems.set -> void
-Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs.get -> bool
-Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs.set -> void
-Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount) -> void
-Microsoft.Build.Utilities.MuxLogger.MuxLogger() -> void
-Microsoft.Build.Utilities.MuxLogger.Parameters.get -> string
-Microsoft.Build.Utilities.MuxLogger.Parameters.set -> void
-Microsoft.Build.Utilities.MuxLogger.RegisterLogger(int submissionId, Microsoft.Build.Framework.ILogger logger) -> void
-Microsoft.Build.Utilities.MuxLogger.Shutdown() -> void
-Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(int submissionId) -> bool
-Microsoft.Build.Utilities.MuxLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Utilities.MuxLogger.Verbosity.set -> void
-Microsoft.Build.Utilities.ProcessorArchitecture
-Microsoft.Build.Utilities.SDKManifest
-Microsoft.Build.Utilities.SDKManifest.AppxLocations.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Utilities.SDKManifest.Attributes
-Microsoft.Build.Utilities.SDKManifest.CopyRedistToSubDirectory.get -> string
-Microsoft.Build.Utilities.SDKManifest.DependsOnSDK.get -> string
-Microsoft.Build.Utilities.SDKManifest.DisplayName.get -> string
-Microsoft.Build.Utilities.SDKManifest.FrameworkIdentities.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Utilities.SDKManifest.FrameworkIdentity.get -> string
-Microsoft.Build.Utilities.SDKManifest.MaxOSVersionTested.get -> string
-Microsoft.Build.Utilities.SDKManifest.MaxPlatformVersion.get -> string
-Microsoft.Build.Utilities.SDKManifest.MinOSVersion.get -> string
-Microsoft.Build.Utilities.SDKManifest.MinVSVersion.get -> string
-Microsoft.Build.Utilities.SDKManifest.MoreInfo.get -> string
-Microsoft.Build.Utilities.SDKManifest.PlatformIdentity.get -> string
-Microsoft.Build.Utilities.SDKManifest.ProductFamilyName.get -> string
-Microsoft.Build.Utilities.SDKManifest.ReadError.get -> bool
-Microsoft.Build.Utilities.SDKManifest.ReadErrorMessage.get -> string
-Microsoft.Build.Utilities.SDKManifest.SDKManifest(string pathToSdk) -> void
-Microsoft.Build.Utilities.SDKManifest.SDKType.get -> Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.SDKManifest.SupportedArchitectures.get -> string
-Microsoft.Build.Utilities.SDKManifest.SupportPrefer32Bit.get -> string
-Microsoft.Build.Utilities.SDKManifest.SupportsMultipleVersions.get -> Microsoft.Build.Utilities.MultipleVersionSupport
-Microsoft.Build.Utilities.SDKManifest.TargetPlatform.get -> string
-Microsoft.Build.Utilities.SDKManifest.TargetPlatformMinVersion.get -> string
-Microsoft.Build.Utilities.SDKManifest.TargetPlatformVersion.get -> string
-Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.SDKType.External = 1 -> Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.SDKType.Framework = 3 -> Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.SDKType.Platform = 2 -> Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.SDKType.Unspecified = 0 -> Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Latest = 9999 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version11 = 0 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version20 = 1 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version30 = 2 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version35 = 3 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version40 = 4 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version45 = 5 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version451 = 6 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version452 = 9 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version46 = 7 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version461 = 8 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version462 = 10 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version47 = 11 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version471 = 12 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version472 = 13 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version48 = 14 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.VersionLatest = 14 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetPlatformSDK
-Microsoft.Build.Utilities.TargetPlatformSDK.ContainsPlatform(string targetPlatformIdentifier, string targetPlatformVersion) -> bool
-Microsoft.Build.Utilities.TargetPlatformSDK.DisplayName.get -> string
-Microsoft.Build.Utilities.TargetPlatformSDK.Equals(Microsoft.Build.Utilities.TargetPlatformSDK other) -> bool
-Microsoft.Build.Utilities.TargetPlatformSDK.MinOSVersion.get -> System.Version
-Microsoft.Build.Utilities.TargetPlatformSDK.MinVSVersion.get -> System.Version
-Microsoft.Build.Utilities.TargetPlatformSDK.Path.get -> string
-Microsoft.Build.Utilities.TargetPlatformSDK.Path.set -> void
-Microsoft.Build.Utilities.TargetPlatformSDK.TargetPlatformIdentifier.get -> string
-Microsoft.Build.Utilities.TargetPlatformSDK.TargetPlatformSDK(string targetPlatformIdentifier, System.Version targetPlatformVersion, string path) -> void
-Microsoft.Build.Utilities.TargetPlatformSDK.TargetPlatformVersion.get -> System.Version
-Microsoft.Build.Utilities.Task
-Microsoft.Build.Utilities.Task.BuildEngine.get -> Microsoft.Build.Framework.IBuildEngine
-Microsoft.Build.Utilities.Task.BuildEngine.set -> void
-Microsoft.Build.Utilities.Task.BuildEngine2.get -> Microsoft.Build.Framework.IBuildEngine2
-Microsoft.Build.Utilities.Task.BuildEngine3.get -> Microsoft.Build.Framework.IBuildEngine3
-Microsoft.Build.Utilities.Task.BuildEngine4.get -> Microsoft.Build.Framework.IBuildEngine4
-Microsoft.Build.Utilities.Task.BuildEngine5.get -> Microsoft.Build.Framework.IBuildEngine5
-Microsoft.Build.Utilities.Task.BuildEngine6.get -> Microsoft.Build.Framework.IBuildEngine6
-Microsoft.Build.Utilities.Task.BuildEngine7.get -> Microsoft.Build.Framework.IBuildEngine7
-Microsoft.Build.Utilities.Task.BuildEngine8.get -> Microsoft.Build.Framework.IBuildEngine8
-Microsoft.Build.Utilities.Task.BuildEngine9.get -> Microsoft.Build.Framework.IBuildEngine9
-Microsoft.Build.Utilities.Task.HelpKeywordPrefix.get -> string
-Microsoft.Build.Utilities.Task.HelpKeywordPrefix.set -> void
-Microsoft.Build.Utilities.Task.HostObject.get -> Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.Utilities.Task.HostObject.set -> void
-Microsoft.Build.Utilities.Task.Log.get -> Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Utilities.Task.Task() -> void
-Microsoft.Build.Utilities.Task.Task(System.Resources.ResourceManager taskResources) -> void
-Microsoft.Build.Utilities.Task.Task(System.Resources.ResourceManager taskResources, string helpKeywordPrefix) -> void
-Microsoft.Build.Utilities.Task.TaskResources.get -> System.Resources.ResourceManager
-Microsoft.Build.Utilities.Task.TaskResources.set -> void
-Microsoft.Build.Utilities.TaskItem
-Microsoft.Build.Utilities.TaskItem.CloneCustomMetadata() -> System.Collections.IDictionary
-Microsoft.Build.Utilities.TaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem destinationItem) -> void
-Microsoft.Build.Utilities.TaskItem.GetMetadata(string metadataName) -> string
-Microsoft.Build.Utilities.TaskItem.ItemSpec.get -> string
-Microsoft.Build.Utilities.TaskItem.ItemSpec.set -> void
-Microsoft.Build.Utilities.TaskItem.MetadataCount.get -> int
-Microsoft.Build.Utilities.TaskItem.MetadataNames.get -> System.Collections.ICollection
-Microsoft.Build.Utilities.TaskItem.RemoveMetadata(string metadataName) -> void
-Microsoft.Build.Utilities.TaskItem.SetMetadata(string metadataName, string metadataValue) -> void
-Microsoft.Build.Utilities.TaskItem.TaskItem() -> void
-Microsoft.Build.Utilities.TaskItem.TaskItem(Microsoft.Build.Framework.ITaskItem sourceItem) -> void
-Microsoft.Build.Utilities.TaskItem.TaskItem(string itemSpec) -> void
-Microsoft.Build.Utilities.TaskItem.TaskItem(string itemSpec, System.Collections.IDictionary itemMetadata) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Utilities.TaskLoggingHelper.BuildEngine.get -> Microsoft.Build.Framework.IBuildEngine
-Microsoft.Build.Utilities.TaskLoggingHelper.ExtractMessageCode(string message, out string messageWithoutCodePrefix) -> string
-Microsoft.Build.Utilities.TaskLoggingHelper.HasLoggedErrors.get -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix.get -> string
-Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix.set -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.IsTaskInputLoggingEnabled.get -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(Microsoft.Build.Framework.MessageImportance importance, string commandLine) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(string commandLine) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogCriticalMessage(string subcategory, string code, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogError(string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogError(string subcategory, string errorCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogError(string subcategory, string errorCode, string helpKeyword, string helpLink, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception exception) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception exception, bool showStackTrace) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception exception, bool showStackTrace, bool showDetail, string file) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(string subcategoryResourceName, string errorCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(string subcategoryResourceName, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectFinished(string message, string helpKeyword, string projectFile, bool succeeded) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectStarted(string message, string helpKeyword, string projectFile, string targetNames) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(Microsoft.Build.Framework.MessageImportance importance, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(string subcategory, string code, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, Microsoft.Build.Framework.MessageImportance importance, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(Microsoft.Build.Framework.MessageImportance importance, string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText(string lineOfText, Microsoft.Build.Framework.MessageImportance messageImportance) -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(string fileName) -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(string fileName, Microsoft.Build.Framework.MessageImportance messageImportance) -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromStream(System.IO.TextReader stream, Microsoft.Build.Framework.MessageImportance messageImportance) -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogsMessagesOfImportance(Microsoft.Build.Framework.MessageImportance importance) -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogTelemetry(string eventName, System.Collections.Generic.IDictionary<string, string> properties) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(string subcategory, string warningCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(string subcategory, string warningCode, string helpKeyword, string helpLink, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception exception) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception exception, bool showStackTrace) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(string subcategoryResourceName, string warningCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(string subcategoryResourceName, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.MarkAsInactive() -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.TaskLoggingHelper(Microsoft.Build.Framework.IBuildEngine buildEngine, string taskName) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.TaskLoggingHelper(Microsoft.Build.Framework.ITask taskInstance) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.TaskName.get -> string
-Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources.get -> System.Resources.ResourceManager
-Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources.set -> void
-Microsoft.Build.Utilities.ToolLocationHelper
-Microsoft.Build.Utilities.ToolTask
-Microsoft.Build.Utilities.ToolTask.DeleteTempFile(string fileName) -> void
-Microsoft.Build.Utilities.ToolTask.EchoOff.get -> bool
-Microsoft.Build.Utilities.ToolTask.EchoOff.set -> void
-Microsoft.Build.Utilities.ToolTask.EnvironmentVariables.get -> string[]
-Microsoft.Build.Utilities.ToolTask.EnvironmentVariables.set -> void
-Microsoft.Build.Utilities.ToolTask.ExitCode.get -> int
-Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError.get -> bool
-Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError.set -> void
-Microsoft.Build.Utilities.ToolTask.StandardErrorImportance.get -> string
-Microsoft.Build.Utilities.ToolTask.StandardErrorImportance.set -> void
-Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse.get -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Utilities.ToolTask.StandardOutputImportance.get -> string
-Microsoft.Build.Utilities.ToolTask.StandardOutputImportance.set -> void
-Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse.get -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout.get -> int
-Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout.set -> void
-Microsoft.Build.Utilities.ToolTask.ToolCanceled.get -> System.Threading.ManualResetEvent
-Microsoft.Build.Utilities.ToolTask.ToolPath.get -> string
-Microsoft.Build.Utilities.ToolTask.ToolPath.set -> void
-Microsoft.Build.Utilities.ToolTask.ToolTask() -> void
-Microsoft.Build.Utilities.ToolTask.ToolTask(System.Resources.ResourceManager taskResources) -> void
-Microsoft.Build.Utilities.ToolTask.ToolTask(System.Resources.ResourceManager taskResources, string helpKeywordPrefix) -> void
-Microsoft.Build.Utilities.ToolTask.UseCommandProcessor.get -> bool
-Microsoft.Build.Utilities.ToolTask.UseCommandProcessor.set -> void
-Microsoft.Build.Utilities.ToolTask.UseUtf8Encoding.get -> string
-Microsoft.Build.Utilities.ToolTask.UseUtf8Encoding.set -> void
-Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution.get -> bool
-Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution.set -> void
-Microsoft.Build.Utilities.TrackedDependencies
-Microsoft.Build.Utilities.UpToDateCheckType
-Microsoft.Build.Utilities.UpToDateCheckType.InputNewerThanOutput = 0 -> Microsoft.Build.Utilities.UpToDateCheckType
-Microsoft.Build.Utilities.UpToDateCheckType.InputNewerThanTracking = 2 -> Microsoft.Build.Utilities.UpToDateCheckType
-Microsoft.Build.Utilities.UpToDateCheckType.InputOrOutputNewerThanTracking = 1 -> Microsoft.Build.Utilities.UpToDateCheckType
-Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version100 = 0 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version110 = 1 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version120 = 2 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version140 = 3 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version150 = 4 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version160 = 5 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version170 = 6 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.VersionLatest = 6 -> Microsoft.Build.Utilities.VisualStudioVersion
-override Microsoft.Build.Utilities.AppDomainIsolatedTask.InitializeLifetimeService() -> object
-override Microsoft.Build.Utilities.CommandLineBuilder.ToString() -> string
-override Microsoft.Build.Utilities.TargetPlatformSDK.Equals(object obj) -> bool
-override Microsoft.Build.Utilities.TargetPlatformSDK.GetHashCode() -> int
-override Microsoft.Build.Utilities.TaskItem.InitializeLifetimeService() -> object
-override Microsoft.Build.Utilities.TaskItem.ToString() -> string
-override Microsoft.Build.Utilities.TaskLoggingHelper.InitializeLifetimeService() -> object
-override Microsoft.Build.Utilities.ToolTask.Execute() -> bool
-static Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(Microsoft.Build.Framework.ITaskItem[] sources) -> string
-static Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(string rootMarker) -> string
-static Microsoft.Build.Utilities.FileTracker.EndTrackingContext() -> void
-static Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath() -> string
-static Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath(string rootPath) -> string
-static Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies(string fileName) -> bool
-static Microsoft.Build.Utilities.FileTracker.FileIsUnderPath(string fileName, string path) -> bool
-static Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath() -> string
-static Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType toolType) -> bool
-static Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType toolType, string dllName, string cancelEventName) -> bool
-static Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem source) -> string
-static Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem output) -> string
-static Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[] sources) -> string
-static Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[] sources, Microsoft.Build.Framework.ITaskItem[] outputs) -> string
-static Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType toolType) -> string
-static Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType toolType, string rootPath) -> string
-static Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType toolType) -> string
-static Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType toolType, string rootPath) -> string
-static Microsoft.Build.Utilities.FileTracker.ResumeTracking() -> void
-static Microsoft.Build.Utilities.FileTracker.SetThreadCount(int threadCount) -> void
-static Microsoft.Build.Utilities.FileTracker.StartProcess(string command, string arguments, Microsoft.Build.Utilities.ExecutableType toolType) -> System.Diagnostics.Process
-static Microsoft.Build.Utilities.FileTracker.StartProcess(string command, string arguments, Microsoft.Build.Utilities.ExecutableType toolType, string dllName, string intermediateDirectory, string rootFiles) -> System.Diagnostics.Process
-static Microsoft.Build.Utilities.FileTracker.StartProcess(string command, string arguments, Microsoft.Build.Utilities.ExecutableType toolType, string dllName, string intermediateDirectory, string rootFiles, string cancelEventName) -> System.Diagnostics.Process
-static Microsoft.Build.Utilities.FileTracker.StartProcess(string command, string arguments, Microsoft.Build.Utilities.ExecutableType toolType, string intermediateDirectory, string rootFiles) -> System.Diagnostics.Process
-static Microsoft.Build.Utilities.FileTracker.StartProcess(string command, string arguments, Microsoft.Build.Utilities.ExecutableType toolType, string rootFiles) -> System.Diagnostics.Process
-static Microsoft.Build.Utilities.FileTracker.StartTrackingContext(string intermediateDirectory, string taskName) -> void
-static Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot(string intermediateDirectory, string taskName, string rootMarkerResponseFile) -> void
-static Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup() -> void
-static Microsoft.Build.Utilities.FileTracker.SuspendTracking() -> void
-static Microsoft.Build.Utilities.FileTracker.TrackerArguments(string command, string arguments, string dllName, string intermediateDirectory, string rootFiles) -> string
-static Microsoft.Build.Utilities.FileTracker.TrackerArguments(string command, string arguments, string dllName, string intermediateDirectory, string rootFiles, string cancelEventName) -> string
-static Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments(string command, string arguments) -> string
-static Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(string dllName, string intermediateDirectory, string rootFiles) -> string
-static Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(string dllName, string intermediateDirectory, string rootFiles, string cancelEventName) -> string
-static Microsoft.Build.Utilities.FileTracker.WriteAllTLogs(string intermediateDirectory, string taskName) -> void
-static Microsoft.Build.Utilities.FileTracker.WriteContextTLogs(string intermediateDirectory, string taskName) -> void
-static Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(bool trackedOperationsSucceeded, Microsoft.Build.Framework.ITaskItem[] readTLogNames, Microsoft.Build.Framework.ITaskItem[] writeTLogNames, Microsoft.Build.Framework.ITaskItem[] trackedFilesToRemoveFromTLogs) -> void
-static Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.Task hostTask, Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, Microsoft.Build.Framework.ITaskItem[] readTLogNames, Microsoft.Build.Framework.ITaskItem[] writeTLogNames) -> bool
-static Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.TaskLoggingHelper Log, Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, Microsoft.Build.Utilities.FlatTrackingData inputs, Microsoft.Build.Utilities.FlatTrackingData outputs) -> bool
-static Microsoft.Build.Utilities.ProcessorArchitecture.CurrentProcessArchitecture.get -> string
-static Microsoft.Build.Utilities.TaskItem.explicit operator string(Microsoft.Build.Utilities.TaskItem taskItemToCast) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.ClearSDKStaticCache() -> void
-static Microsoft.Build.Utilities.ToolLocationHelper.CurrentToolsVersion.get -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.FilterPlatformExtensionSDKs(System.Version targetPlatformVersion, System.Collections.Generic.IDictionary<string, string> extensionSdks) -> System.Collections.Generic.IDictionary<string, string>
-static Microsoft.Build.Utilities.ToolLocationHelper.FilterTargetPlatformSdks(System.Collections.Generic.IList<Microsoft.Build.Utilities.TargetPlatformSDK> targetPlatformSdkList, System.Version osVersion, System.Version vsVersion) -> System.Collections.Generic.IList<Microsoft.Build.Utilities.TargetPlatformSDK>
-static Microsoft.Build.Utilities.ToolLocationHelper.FindRootFolderWhereAllFilesExist(string possibleRoots, string relativeFilePaths) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetAssemblyFoldersExInfo(string registryRoot, string targetFrameworkVersion, string registryKeySuffix, string osVersion, string platform, System.Reflection.ProcessorArchitecture targetProcessorArchitecture) -> System.Collections.Generic.IList<Microsoft.Build.Utilities.AssemblyFoldersExInfo>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetAssemblyFoldersFromConfigInfo(string configFile, string targetFrameworkVersion, System.Reflection.ProcessorArchitecture targetProcessorArchitecture) -> System.Collections.Generic.IList<Microsoft.Build.Utilities.AssemblyFoldersFromConfigInfo>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDisplayNameForTargetFrameworkDirectory(string targetFrameworkDirectory, System.Runtime.Versioning.FrameworkName frameworkName) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkInstallKeyValue(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkInstallKeyValue(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkVersionFolderPrefix(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetFoldersInVSInstalls(System.Version minVersion = null, System.Version maxVersion = null, string subFolder = null) -> System.Collections.Generic.IEnumerable<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetFoldersInVSInstallsAsString(string minVersionString = null, string maxVersionString = null, string subFolder = null) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetLatestSDKTargetPlatformVersion(string sdkIdentifier, string sdkVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetLatestSDKTargetPlatformVersion(string sdkIdentifier, string sdkVersion, string[] sdkRoots) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToBuildTools(string toolsVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToBuildTools(string toolsVersion, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToBuildToolsFile(string fileName, string toolsVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToBuildToolsFile(string fileName, string toolsVersion, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkReferenceAssemblies(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk() -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(string fileName) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string targetFrameworkRootPath) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string targetFrameworkRootPath, string targetFrameworkFallbackSearchPaths) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(string targetFrameworkRootPath, string targetFrameworkFallbackSearchPaths, System.Runtime.Versioning.FrameworkName frameworkName) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(string targetFrameworkRootPath, System.Runtime.Versioning.FrameworkName frameworkName) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.Runtime.Versioning.FrameworkName frameworkName) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string platformTarget) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string platformTarget, string targetFrameworkRootPath) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string platformTarget, string targetFrameworkRootPath, string targetFrameworkFallbackSearchPaths) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile(string fileName) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, string targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, string targetPlatformVersion, string diskRoots, string extensionDiskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, string targetPlatformVersion, string diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, System.Version targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, System.Version targetPlatformVersion, string[] diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, System.Version targetPlatformVersion, string[] diskRoots, string[] extensionDiskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocations(string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocations(string[] diskRoots, string registryRoot, string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocations(string[] diskRoots, string[] extensionDiskRoots, string registryRoot, string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocationsAndVersions(string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, System.Tuple<string, string>>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocationsAndVersions(string[] diskRoots, string registryRoot, string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, System.Tuple<string, string>>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocationsAndVersions(string[] diskRoots, string[] multiPlatformDiskRoots, string registryRoot, string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, System.Tuple<string, string>>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformOrFrameworkExtensionSdkReferences(string extensionSdkMoniker, string targetSdkIdentifier, string targetSdkVersion, string diskRoots, string extensionDiskRoots, string registryRoot) -> string[]
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformOrFrameworkExtensionSdkReferences(string extensionSdkMoniker, string targetSdkIdentifier, string targetSdkVersion, string diskRoots, string extensionDiskRoots, string registryRoot, string targetPlatformIdentifier, string targetPlatformVersion) -> string[]
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKDisplayName(string targetPlatformIdentifier, string targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKDisplayName(string targetPlatformIdentifier, string targetPlatformVersion, string diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(string targetPlatformIdentifier, string targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(string targetPlatformIdentifier, string targetPlatformVersion, string diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(string targetPlatformIdentifier, System.Version targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(string targetPlatformIdentifier, System.Version targetPlatformVersion, string[] diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKPropsFileLocation(string sdkIdentifier, string sdkVersion, string targetPlatformIdentifier, string targetPlatformMinVersion, string targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKPropsFileLocation(string sdkIdentifier, string sdkVersion, string targetPlatformIdentifier, string targetPlatformMinVersion, string targetPlatformVersion, string diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformsForSDK(string sdkIdentifier, System.Version sdkVersion) -> System.Collections.Generic.IEnumerable<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformsForSDK(string sdkIdentifier, System.Version sdkVersion, string[] diskRoots, string registryRoot) -> System.Collections.Generic.IEnumerable<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetProgramFilesReferenceAssemblyRoot() -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKContentFolderPath(string sdkIdentifier, string sdkVersion, string targetPlatformIdentifier, string targetPlatformMinVersion, string targetPlatformVersion, string folderName, string diskRoot = null) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKDesignTimeFolders(string sdkRoot) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKDesignTimeFolders(string sdkRoot, string targetConfiguration, string targetArchitecture) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKRedistFolders(string sdkRoot) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKRedistFolders(string sdkRoot, string targetConfiguration, string targetArchitecture) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKReferenceFolders(string sdkRoot) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKReferenceFolders(string sdkRoot, string targetConfiguration, string targetArchitecture) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSupportedTargetFrameworks() -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformReferences(string sdkIdentifier, string sdkVersion, string targetPlatformIdentifier, string targetPlatformMinVersion, string targetPlatformVersion) -> string[]
-static Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformReferences(string sdkIdentifier, string sdkVersion, string targetPlatformIdentifier, string targetPlatformMinVersion, string targetPlatformVersion, string diskRoots, string registryRoot) -> string[]
-static Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformSdks() -> System.Collections.Generic.IList<Microsoft.Build.Utilities.TargetPlatformSDK>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformSdks(string[] diskRoots, string registryRoot) -> System.Collections.Generic.IList<Microsoft.Build.Utilities.TargetPlatformSDK>
-static Microsoft.Build.Utilities.ToolLocationHelper.HighestVersionOfTargetFrameworkIdentifier(string targetFrameworkRootDirectory, string frameworkIdentifier) -> System.Runtime.Versioning.FrameworkName
-static Microsoft.Build.Utilities.ToolLocationHelper.PathToSystem.get -> string
-static Microsoft.Build.Utilities.TrackedDependencies.ExpandWildcards(Microsoft.Build.Framework.ITaskItem[] expand) -> Microsoft.Build.Framework.ITaskItem[]
-virtual Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(string parameter) -> bool
-virtual Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(string switchName, string parameter) -> void
-virtual Microsoft.Build.Utilities.Logger.FormatErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs args) -> string
-virtual Microsoft.Build.Utilities.Logger.FormatWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs args) -> string
-virtual Microsoft.Build.Utilities.Logger.Parameters.get -> string
-virtual Microsoft.Build.Utilities.Logger.Parameters.set -> void
-virtual Microsoft.Build.Utilities.Logger.Shutdown() -> void
-virtual Microsoft.Build.Utilities.Logger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-virtual Microsoft.Build.Utilities.Logger.Verbosity.set -> void
-virtual Microsoft.Build.Utilities.TaskLoggingHelper.FormatResourceString(string resourceName, params object[] args) -> string
-virtual Microsoft.Build.Utilities.TaskLoggingHelper.FormatString(string unformatted, params object[] args) -> string
-virtual Microsoft.Build.Utilities.TaskLoggingHelper.GetResourceMessage(string resourceName) -> string
-virtual Microsoft.Build.Utilities.ToolTask.AdjustCommandsForOperatingSystem(string input) -> string
-virtual Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute() -> bool
-virtual Microsoft.Build.Utilities.ToolTask.Cancel() -> void
-virtual Microsoft.Build.Utilities.ToolTask.EnvironmentOverride.get -> System.Collections.Generic.Dictionary<string, string>
-virtual Microsoft.Build.Utilities.ToolTask.ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) -> int
-virtual Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands() -> string
-virtual Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands() -> string
-virtual Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(string pathToTool, string commandLineCommands, string responseFileSwitch) -> System.Diagnostics.ProcessStartInfo
-virtual Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(string responseFilePath) -> string
-virtual Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory() -> string
-virtual Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors() -> bool
-virtual Microsoft.Build.Utilities.ToolTask.HasLoggedErrors.get -> bool
-virtual Microsoft.Build.Utilities.ToolTask.InitializeHostObject() -> Microsoft.Build.Utilities.HostObjectInitializationStatus
-virtual Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance) -> void
-virtual Microsoft.Build.Utilities.ToolTask.LogPathToTool(string toolName, string pathToTool) -> void
-virtual Microsoft.Build.Utilities.ToolTask.LogToolCommand(string message) -> void
-virtual Microsoft.Build.Utilities.ToolTask.ProcessStarted() -> void
-virtual Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding.get -> System.Text.Encoding
-virtual Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(string responseString) -> string
-virtual Microsoft.Build.Utilities.ToolTask.SkipTaskExecution() -> bool
-virtual Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding.get -> System.Text.Encoding
-virtual Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance.get -> Microsoft.Build.Framework.MessageImportance
-virtual Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding.get -> System.Text.Encoding
-virtual Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance.get -> Microsoft.Build.Framework.MessageImportance
-virtual Microsoft.Build.Utilities.ToolTask.Timeout.get -> int
-virtual Microsoft.Build.Utilities.ToolTask.Timeout.set -> void
-virtual Microsoft.Build.Utilities.ToolTask.ToolExe.get -> string
-virtual Microsoft.Build.Utilities.ToolTask.ToolExe.set -> void
-virtual Microsoft.Build.Utilities.ToolTask.ValidateParameters() -> bool
\ No newline at end of file
diff --git a/src/Utilities/PublicAPI/net/PublicAPI.Unshipped.txt b/src/Utilities/PublicAPI/net/PublicAPI.Unshipped.txt
deleted file mode 100644
index 1dfe5f9ea17..00000000000
--- a/src/Utilities/PublicAPI/net/PublicAPI.Unshipped.txt
+++ /dev/null
@@ -1 +0,0 @@
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version481 = 15 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
\ No newline at end of file
diff --git a/src/Utilities/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/Utilities/PublicAPI/netstandard/PublicAPI.Shipped.txt
deleted file mode 100644
index 9efcc6b3e9d..00000000000
--- a/src/Utilities/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ /dev/null
@@ -1,439 +0,0 @@
-abstract Microsoft.Build.Utilities.AppDomainIsolatedTask.Execute() -> bool
-abstract Microsoft.Build.Utilities.Logger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-abstract Microsoft.Build.Utilities.Task.Execute() -> bool
-abstract Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool() -> string
-abstract Microsoft.Build.Utilities.ToolTask.ToolName.get -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.AMD64 = "AMD64" -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.ARM = "ARM" -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.ARM64 = "ARM64" -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.IA64 = "IA64" -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.MSIL = "MSIL" -> string
-const Microsoft.Build.Utilities.ProcessorArchitecture.X86 = "x86" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.APPX = "APPX" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.AppxLocation = "AppxLocation" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.CopyLocalExpandedReferenceAssemblies = "CopyLocalExpandedReferenceAssemblies" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.CopyRedist = "CopyRedist" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.CopyRedistToSubDirectory = "CopyRedistToSubDirectory" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.DependsOnSDK = "DependsOn" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.DisplayName = "DisplayName" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.ExpandReferenceAssemblies = "ExpandReferenceAssemblies" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.FrameworkIdentity = "FrameworkIdentity" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.MaxOSVersionTested = "MaxOSVersionTested" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.MaxPlatformVersion = "MaxPlatformVersion" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.MinOSVersion = "MinOSVersion" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.MinVSVersion = "MinVSVersion" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.MoreInfo = "MoreInfo" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.PlatformIdentity = "PlatformIdentity" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.ProductFamilyName = "ProductFamilyName" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.SDKType = "SDKType" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.SupportedArchitectures = "SupportedArchitectures" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.SupportPrefer32Bit = "SupportPrefer32Bit" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.SupportsMultipleVersions = "SupportsMultipleVersions" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.TargetedSDK = "TargetedSDKArchitecture" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.TargetedSDKConfiguration = "TargetedSDKConfiguration" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.TargetPlatform = "TargetPlatform" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.TargetPlatformMinVersion = "TargetPlatformMinVersion" -> string
-const Microsoft.Build.Utilities.SDKManifest.Attributes.TargetPlatformVersion = "TargetPlatformVersion" -> string
-Microsoft.Build.Utilities.AppDomainIsolatedTask
-Microsoft.Build.Utilities.AppDomainIsolatedTask.AppDomainIsolatedTask() -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.AppDomainIsolatedTask(System.Resources.ResourceManager taskResources) -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.AppDomainIsolatedTask(System.Resources.ResourceManager taskResources, string helpKeywordPrefix) -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.BuildEngine.get -> Microsoft.Build.Framework.IBuildEngine
-Microsoft.Build.Utilities.AppDomainIsolatedTask.BuildEngine.set -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.HelpKeywordPrefix.get -> string
-Microsoft.Build.Utilities.AppDomainIsolatedTask.HelpKeywordPrefix.set -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.HostObject.get -> Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.Utilities.AppDomainIsolatedTask.HostObject.set -> void
-Microsoft.Build.Utilities.AppDomainIsolatedTask.Log.get -> Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Utilities.AppDomainIsolatedTask.TaskResources.get -> System.Resources.ResourceManager
-Microsoft.Build.Utilities.AppDomainIsolatedTask.TaskResources.set -> void
-Microsoft.Build.Utilities.AssemblyFoldersExInfo
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.AssemblyFoldersExInfo(Microsoft.Win32.RegistryHive hive, Microsoft.Win32.RegistryView view, string registryKey, string directoryPath, System.Version targetFrameworkVersion) -> void
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.DirectoryPath.get -> string
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.Hive.get -> Microsoft.Win32.RegistryHive
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.Key.get -> string
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.TargetFrameworkVersion.get -> System.Version
-Microsoft.Build.Utilities.AssemblyFoldersExInfo.View.get -> Microsoft.Win32.RegistryView
-Microsoft.Build.Utilities.AssemblyFoldersFromConfigInfo
-Microsoft.Build.Utilities.AssemblyFoldersFromConfigInfo.AssemblyFoldersFromConfigInfo(string directoryPath, System.Version targetFrameworkVersion) -> void
-Microsoft.Build.Utilities.AssemblyFoldersFromConfigInfo.DirectoryPath.get -> string
-Microsoft.Build.Utilities.AssemblyFoldersFromConfigInfo.TargetFrameworkVersion.get -> System.Version
-Microsoft.Build.Utilities.CommandLineBuilder
-Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem fileItem) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(string fileName) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(string[] fileNames, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(string fileName) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder buffer, string unquotedTextToAppend) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty() -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(string switchName) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(string switchName, Microsoft.Build.Framework.ITaskItem parameter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(string switchName, string parameter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(string switchName, string[] parameters, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(string switchName, Microsoft.Build.Framework.ITaskItem parameter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(string switchName, string parameter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(string switchName, string[] parameters, string delimiter) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(string textToAppend) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(string textToAppend) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.CommandLine.get -> System.Text.StringBuilder
-Microsoft.Build.Utilities.CommandLineBuilder.CommandLineBuilder() -> void
-Microsoft.Build.Utilities.CommandLineBuilder.CommandLineBuilder(bool quoteHyphensOnCommandLine) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.CommandLineBuilder(bool quoteHyphensOnCommandLine, bool useNewLineSeparator) -> void
-Microsoft.Build.Utilities.CommandLineBuilder.Length.get -> int
-Microsoft.Build.Utilities.DotNetFrameworkArchitecture
-Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Bitness32 = 1 -> Microsoft.Build.Utilities.DotNetFrameworkArchitecture
-Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Bitness64 = 2 -> Microsoft.Build.Utilities.DotNetFrameworkArchitecture
-Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Current = 0 -> Microsoft.Build.Utilities.DotNetFrameworkArchitecture
-Microsoft.Build.Utilities.HostObjectInitializationStatus
-Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnFailure = 3 -> Microsoft.Build.Utilities.HostObjectInitializationStatus
-Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnSuccess = 2 -> Microsoft.Build.Utilities.HostObjectInitializationStatus
-Microsoft.Build.Utilities.HostObjectInitializationStatus.UseAlternateToolToExecute = 1 -> Microsoft.Build.Utilities.HostObjectInitializationStatus
-Microsoft.Build.Utilities.HostObjectInitializationStatus.UseHostObjectToExecute = 0 -> Microsoft.Build.Utilities.HostObjectInitializationStatus
-Microsoft.Build.Utilities.Logger
-Microsoft.Build.Utilities.Logger.IsVerbosityAtLeast(Microsoft.Build.Framework.LoggerVerbosity checkVerbosity) -> bool
-Microsoft.Build.Utilities.Logger.Logger() -> void
-Microsoft.Build.Utilities.MultipleVersionSupport
-Microsoft.Build.Utilities.MultipleVersionSupport.Allow = 0 -> Microsoft.Build.Utilities.MultipleVersionSupport
-Microsoft.Build.Utilities.MultipleVersionSupport.Error = 2 -> Microsoft.Build.Utilities.MultipleVersionSupport
-Microsoft.Build.Utilities.MultipleVersionSupport.Warning = 1 -> Microsoft.Build.Utilities.MultipleVersionSupport
-Microsoft.Build.Utilities.MuxLogger
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects.get -> bool
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects.set -> void
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles.get -> bool
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles.set -> void
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationPropertiesAndItems.get -> bool
-Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationPropertiesAndItems.set -> void
-Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs.get -> bool
-Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs.set -> void
-Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
-Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount) -> void
-Microsoft.Build.Utilities.MuxLogger.MuxLogger() -> void
-Microsoft.Build.Utilities.MuxLogger.Parameters.get -> string
-Microsoft.Build.Utilities.MuxLogger.Parameters.set -> void
-Microsoft.Build.Utilities.MuxLogger.RegisterLogger(int submissionId, Microsoft.Build.Framework.ILogger logger) -> void
-Microsoft.Build.Utilities.MuxLogger.Shutdown() -> void
-Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(int submissionId) -> bool
-Microsoft.Build.Utilities.MuxLogger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-Microsoft.Build.Utilities.MuxLogger.Verbosity.set -> void
-Microsoft.Build.Utilities.ProcessorArchitecture
-Microsoft.Build.Utilities.SDKManifest
-Microsoft.Build.Utilities.SDKManifest.AppxLocations.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Utilities.SDKManifest.Attributes
-Microsoft.Build.Utilities.SDKManifest.CopyRedistToSubDirectory.get -> string
-Microsoft.Build.Utilities.SDKManifest.DependsOnSDK.get -> string
-Microsoft.Build.Utilities.SDKManifest.DisplayName.get -> string
-Microsoft.Build.Utilities.SDKManifest.FrameworkIdentities.get -> System.Collections.Generic.IDictionary<string, string>
-Microsoft.Build.Utilities.SDKManifest.FrameworkIdentity.get -> string
-Microsoft.Build.Utilities.SDKManifest.MaxOSVersionTested.get -> string
-Microsoft.Build.Utilities.SDKManifest.MaxPlatformVersion.get -> string
-Microsoft.Build.Utilities.SDKManifest.MinOSVersion.get -> string
-Microsoft.Build.Utilities.SDKManifest.MinVSVersion.get -> string
-Microsoft.Build.Utilities.SDKManifest.MoreInfo.get -> string
-Microsoft.Build.Utilities.SDKManifest.PlatformIdentity.get -> string
-Microsoft.Build.Utilities.SDKManifest.ProductFamilyName.get -> string
-Microsoft.Build.Utilities.SDKManifest.ReadError.get -> bool
-Microsoft.Build.Utilities.SDKManifest.ReadErrorMessage.get -> string
-Microsoft.Build.Utilities.SDKManifest.SDKManifest(string pathToSdk) -> void
-Microsoft.Build.Utilities.SDKManifest.SDKType.get -> Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.SDKManifest.SupportedArchitectures.get -> string
-Microsoft.Build.Utilities.SDKManifest.SupportPrefer32Bit.get -> string
-Microsoft.Build.Utilities.SDKManifest.SupportsMultipleVersions.get -> Microsoft.Build.Utilities.MultipleVersionSupport
-Microsoft.Build.Utilities.SDKManifest.TargetPlatform.get -> string
-Microsoft.Build.Utilities.SDKManifest.TargetPlatformMinVersion.get -> string
-Microsoft.Build.Utilities.SDKManifest.TargetPlatformVersion.get -> string
-Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.SDKType.External = 1 -> Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.SDKType.Framework = 3 -> Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.SDKType.Platform = 2 -> Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.SDKType.Unspecified = 0 -> Microsoft.Build.Utilities.SDKType
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Latest = 9999 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version11 = 0 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version20 = 1 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version30 = 2 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version35 = 3 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version40 = 4 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version45 = 5 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version451 = 6 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version452 = 9 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version46 = 7 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version461 = 8 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version462 = 10 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version47 = 11 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version471 = 12 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version472 = 13 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version48 = 14 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.VersionLatest = 14 -> Microsoft.Build.Utilities.TargetDotNetFrameworkVersion
-Microsoft.Build.Utilities.TargetPlatformSDK
-Microsoft.Build.Utilities.TargetPlatformSDK.ContainsPlatform(string targetPlatformIdentifier, string targetPlatformVersion) -> bool
-Microsoft.Build.Utilities.TargetPlatformSDK.DisplayName.get -> string
-Microsoft.Build.Utilities.TargetPlatformSDK.Equals(Microsoft.Build.Utilities.TargetPlatformSDK other) -> bool
-Microsoft.Build.Utilities.TargetPlatformSDK.MinOSVersion.get -> System.Version
-Microsoft.Build.Utilities.TargetPlatformSDK.MinVSVersion.get -> System.Version
-Microsoft.Build.Utilities.TargetPlatformSDK.Path.get -> string
-Microsoft.Build.Utilities.TargetPlatformSDK.Path.set -> void
-Microsoft.Build.Utilities.TargetPlatformSDK.TargetPlatformIdentifier.get -> string
-Microsoft.Build.Utilities.TargetPlatformSDK.TargetPlatformSDK(string targetPlatformIdentifier, System.Version targetPlatformVersion, string path) -> void
-Microsoft.Build.Utilities.TargetPlatformSDK.TargetPlatformVersion.get -> System.Version
-Microsoft.Build.Utilities.Task
-Microsoft.Build.Utilities.Task.BuildEngine.get -> Microsoft.Build.Framework.IBuildEngine
-Microsoft.Build.Utilities.Task.BuildEngine.set -> void
-Microsoft.Build.Utilities.Task.BuildEngine2.get -> Microsoft.Build.Framework.IBuildEngine2
-Microsoft.Build.Utilities.Task.BuildEngine3.get -> Microsoft.Build.Framework.IBuildEngine3
-Microsoft.Build.Utilities.Task.BuildEngine4.get -> Microsoft.Build.Framework.IBuildEngine4
-Microsoft.Build.Utilities.Task.BuildEngine5.get -> Microsoft.Build.Framework.IBuildEngine5
-Microsoft.Build.Utilities.Task.BuildEngine6.get -> Microsoft.Build.Framework.IBuildEngine6
-Microsoft.Build.Utilities.Task.BuildEngine7.get -> Microsoft.Build.Framework.IBuildEngine7
-Microsoft.Build.Utilities.Task.BuildEngine8.get -> Microsoft.Build.Framework.IBuildEngine8
-Microsoft.Build.Utilities.Task.BuildEngine9.get -> Microsoft.Build.Framework.IBuildEngine9
-Microsoft.Build.Utilities.Task.HelpKeywordPrefix.get -> string
-Microsoft.Build.Utilities.Task.HelpKeywordPrefix.set -> void
-Microsoft.Build.Utilities.Task.HostObject.get -> Microsoft.Build.Framework.ITaskHost
-Microsoft.Build.Utilities.Task.HostObject.set -> void
-Microsoft.Build.Utilities.Task.Log.get -> Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Utilities.Task.Task() -> void
-Microsoft.Build.Utilities.Task.Task(System.Resources.ResourceManager taskResources) -> void
-Microsoft.Build.Utilities.Task.Task(System.Resources.ResourceManager taskResources, string helpKeywordPrefix) -> void
-Microsoft.Build.Utilities.Task.TaskResources.get -> System.Resources.ResourceManager
-Microsoft.Build.Utilities.Task.TaskResources.set -> void
-Microsoft.Build.Utilities.TaskItem
-Microsoft.Build.Utilities.TaskItem.CloneCustomMetadata() -> System.Collections.IDictionary
-Microsoft.Build.Utilities.TaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem destinationItem) -> void
-Microsoft.Build.Utilities.TaskItem.GetMetadata(string metadataName) -> string
-Microsoft.Build.Utilities.TaskItem.ItemSpec.get -> string
-Microsoft.Build.Utilities.TaskItem.ItemSpec.set -> void
-Microsoft.Build.Utilities.TaskItem.MetadataCount.get -> int
-Microsoft.Build.Utilities.TaskItem.MetadataNames.get -> System.Collections.ICollection
-Microsoft.Build.Utilities.TaskItem.RemoveMetadata(string metadataName) -> void
-Microsoft.Build.Utilities.TaskItem.SetMetadata(string metadataName, string metadataValue) -> void
-Microsoft.Build.Utilities.TaskItem.TaskItem() -> void
-Microsoft.Build.Utilities.TaskItem.TaskItem(Microsoft.Build.Framework.ITaskItem sourceItem) -> void
-Microsoft.Build.Utilities.TaskItem.TaskItem(string itemSpec) -> void
-Microsoft.Build.Utilities.TaskItem.TaskItem(string itemSpec, System.Collections.IDictionary itemMetadata) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper
-Microsoft.Build.Utilities.TaskLoggingHelper.BuildEngine.get -> Microsoft.Build.Framework.IBuildEngine
-Microsoft.Build.Utilities.TaskLoggingHelper.ExtractMessageCode(string message, out string messageWithoutCodePrefix) -> string
-Microsoft.Build.Utilities.TaskLoggingHelper.HasLoggedErrors.get -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix.get -> string
-Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix.set -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.IsTaskInputLoggingEnabled.get -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(Microsoft.Build.Framework.MessageImportance importance, string commandLine) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(string commandLine) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogCriticalMessage(string subcategory, string code, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogError(string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogError(string subcategory, string errorCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogError(string subcategory, string errorCode, string helpKeyword, string helpLink, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception exception) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception exception, bool showStackTrace) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception exception, bool showStackTrace, bool showDetail, string file) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(string subcategoryResourceName, string errorCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(string subcategoryResourceName, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectFinished(string message, string helpKeyword, string projectFile, bool succeeded) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectStarted(string message, string helpKeyword, string projectFile, string targetNames) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(Microsoft.Build.Framework.MessageImportance importance, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(string subcategory, string code, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, Microsoft.Build.Framework.MessageImportance importance, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(Microsoft.Build.Framework.MessageImportance importance, string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText(string lineOfText, Microsoft.Build.Framework.MessageImportance messageImportance) -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(string fileName) -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(string fileName, Microsoft.Build.Framework.MessageImportance messageImportance) -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromStream(System.IO.TextReader stream, Microsoft.Build.Framework.MessageImportance messageImportance) -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogsMessagesOfImportance(Microsoft.Build.Framework.MessageImportance importance) -> bool
-Microsoft.Build.Utilities.TaskLoggingHelper.LogTelemetry(string eventName, System.Collections.Generic.IDictionary<string, string> properties) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(string subcategory, string warningCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(string subcategory, string warningCode, string helpKeyword, string helpLink, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception exception) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception exception, bool showStackTrace) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(string subcategoryResourceName, string warningCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(string subcategoryResourceName, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.TaskLoggingHelper(Microsoft.Build.Framework.IBuildEngine buildEngine, string taskName) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.TaskLoggingHelper(Microsoft.Build.Framework.ITask taskInstance) -> void
-Microsoft.Build.Utilities.TaskLoggingHelper.TaskName.get -> string
-Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources.get -> System.Resources.ResourceManager
-Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources.set -> void
-Microsoft.Build.Utilities.ToolLocationHelper
-Microsoft.Build.Utilities.ToolTask
-Microsoft.Build.Utilities.ToolTask.DeleteTempFile(string fileName) -> void
-Microsoft.Build.Utilities.ToolTask.EchoOff.get -> bool
-Microsoft.Build.Utilities.ToolTask.EchoOff.set -> void
-Microsoft.Build.Utilities.ToolTask.EnvironmentVariables.get -> string[]
-Microsoft.Build.Utilities.ToolTask.EnvironmentVariables.set -> void
-Microsoft.Build.Utilities.ToolTask.ExitCode.get -> int
-Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError.get -> bool
-Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError.set -> void
-Microsoft.Build.Utilities.ToolTask.StandardErrorImportance.get -> string
-Microsoft.Build.Utilities.ToolTask.StandardErrorImportance.set -> void
-Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse.get -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Utilities.ToolTask.StandardOutputImportance.get -> string
-Microsoft.Build.Utilities.ToolTask.StandardOutputImportance.set -> void
-Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse.get -> Microsoft.Build.Framework.MessageImportance
-Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout.get -> int
-Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout.set -> void
-Microsoft.Build.Utilities.ToolTask.ToolCanceled.get -> System.Threading.ManualResetEvent
-Microsoft.Build.Utilities.ToolTask.ToolPath.get -> string
-Microsoft.Build.Utilities.ToolTask.ToolPath.set -> void
-Microsoft.Build.Utilities.ToolTask.ToolTask() -> void
-Microsoft.Build.Utilities.ToolTask.ToolTask(System.Resources.ResourceManager taskResources) -> void
-Microsoft.Build.Utilities.ToolTask.ToolTask(System.Resources.ResourceManager taskResources, string helpKeywordPrefix) -> void
-Microsoft.Build.Utilities.ToolTask.UseCommandProcessor.get -> bool
-Microsoft.Build.Utilities.ToolTask.UseCommandProcessor.set -> void
-Microsoft.Build.Utilities.ToolTask.UseUtf8Encoding.get -> string
-Microsoft.Build.Utilities.ToolTask.UseUtf8Encoding.set -> void
-Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution.get -> bool
-Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution.set -> void
-Microsoft.Build.Utilities.TrackedDependencies
-Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version100 = 0 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version110 = 1 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version120 = 2 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version140 = 3 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version150 = 4 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version160 = 5 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.Version170 = 6 -> Microsoft.Build.Utilities.VisualStudioVersion
-Microsoft.Build.Utilities.VisualStudioVersion.VersionLatest = 6 -> Microsoft.Build.Utilities.VisualStudioVersion
-override Microsoft.Build.Utilities.AppDomainIsolatedTask.InitializeLifetimeService() -> object
-override Microsoft.Build.Utilities.CommandLineBuilder.ToString() -> string
-override Microsoft.Build.Utilities.TargetPlatformSDK.Equals(object obj) -> bool
-override Microsoft.Build.Utilities.TargetPlatformSDK.GetHashCode() -> int
-override Microsoft.Build.Utilities.TaskItem.ToString() -> string
-override Microsoft.Build.Utilities.ToolTask.Execute() -> bool
-static Microsoft.Build.Utilities.ProcessorArchitecture.CurrentProcessArchitecture.get -> string
-static Microsoft.Build.Utilities.TaskItem.explicit operator string(Microsoft.Build.Utilities.TaskItem taskItemToCast) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.ClearSDKStaticCache() -> void
-static Microsoft.Build.Utilities.ToolLocationHelper.CurrentToolsVersion.get -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.FilterPlatformExtensionSDKs(System.Version targetPlatformVersion, System.Collections.Generic.IDictionary<string, string> extensionSdks) -> System.Collections.Generic.IDictionary<string, string>
-static Microsoft.Build.Utilities.ToolLocationHelper.FilterTargetPlatformSdks(System.Collections.Generic.IList<Microsoft.Build.Utilities.TargetPlatformSDK> targetPlatformSdkList, System.Version osVersion, System.Version vsVersion) -> System.Collections.Generic.IList<Microsoft.Build.Utilities.TargetPlatformSDK>
-static Microsoft.Build.Utilities.ToolLocationHelper.FindRootFolderWhereAllFilesExist(string possibleRoots, string relativeFilePaths) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetAssemblyFoldersExInfo(string registryRoot, string targetFrameworkVersion, string registryKeySuffix, string osVersion, string platform, System.Reflection.ProcessorArchitecture targetProcessorArchitecture) -> System.Collections.Generic.IList<Microsoft.Build.Utilities.AssemblyFoldersExInfo>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetAssemblyFoldersFromConfigInfo(string configFile, string targetFrameworkVersion, System.Reflection.ProcessorArchitecture targetProcessorArchitecture) -> System.Collections.Generic.IList<Microsoft.Build.Utilities.AssemblyFoldersFromConfigInfo>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDisplayNameForTargetFrameworkDirectory(string targetFrameworkDirectory, System.Runtime.Versioning.FrameworkName frameworkName) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkInstallKeyValue(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkInstallKeyValue(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkVersionFolderPrefix(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetFoldersInVSInstalls(System.Version minVersion = null, System.Version maxVersion = null, string subFolder = null) -> System.Collections.Generic.IEnumerable<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetFoldersInVSInstallsAsString(string minVersionString = null, string maxVersionString = null, string subFolder = null) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetLatestSDKTargetPlatformVersion(string sdkIdentifier, string sdkVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetLatestSDKTargetPlatformVersion(string sdkIdentifier, string sdkVersion, string[] sdkRoots) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToBuildTools(string toolsVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToBuildTools(string toolsVersion, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToBuildToolsFile(string fileName, string toolsVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToBuildToolsFile(string fileName, string toolsVersion, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkReferenceAssemblies(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk() -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(string fileName) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string targetFrameworkRootPath) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string targetFrameworkRootPath, string targetFrameworkFallbackSearchPaths) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(string targetFrameworkRootPath, string targetFrameworkFallbackSearchPaths, System.Runtime.Versioning.FrameworkName frameworkName) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(string targetFrameworkRootPath, System.Runtime.Versioning.FrameworkName frameworkName) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.Runtime.Versioning.FrameworkName frameworkName) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string platformTarget) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string platformTarget, string targetFrameworkRootPath) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string platformTarget, string targetFrameworkRootPath, string targetFrameworkFallbackSearchPaths) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile(string fileName) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdkFile(string fileName, Microsoft.Build.Utilities.TargetDotNetFrameworkVersion version, Microsoft.Build.Utilities.VisualStudioVersion visualStudioVersion, Microsoft.Build.Utilities.DotNetFrameworkArchitecture architecture) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, string targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, string targetPlatformVersion, string diskRoots, string extensionDiskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, string targetPlatformVersion, string diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, System.Version targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, System.Version targetPlatformVersion, string[] diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(string sdkMoniker, string targetPlatformIdentifier, System.Version targetPlatformVersion, string[] diskRoots, string[] extensionDiskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocations(string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocations(string[] diskRoots, string registryRoot, string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocations(string[] diskRoots, string[] extensionDiskRoots, string registryRoot, string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocationsAndVersions(string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, System.Tuple<string, string>>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocationsAndVersions(string[] diskRoots, string registryRoot, string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, System.Tuple<string, string>>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocationsAndVersions(string[] diskRoots, string[] multiPlatformDiskRoots, string registryRoot, string targetPlatformIdentifier, System.Version targetPlatformVersion) -> System.Collections.Generic.IDictionary<string, System.Tuple<string, string>>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformOrFrameworkExtensionSdkReferences(string extensionSdkMoniker, string targetSdkIdentifier, string targetSdkVersion, string diskRoots, string extensionDiskRoots, string registryRoot) -> string[]
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformOrFrameworkExtensionSdkReferences(string extensionSdkMoniker, string targetSdkIdentifier, string targetSdkVersion, string diskRoots, string extensionDiskRoots, string registryRoot, string targetPlatformIdentifier, string targetPlatformVersion) -> string[]
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKDisplayName(string targetPlatformIdentifier, string targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKDisplayName(string targetPlatformIdentifier, string targetPlatformVersion, string diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(string targetPlatformIdentifier, string targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(string targetPlatformIdentifier, string targetPlatformVersion, string diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(string targetPlatformIdentifier, System.Version targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(string targetPlatformIdentifier, System.Version targetPlatformVersion, string[] diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKPropsFileLocation(string sdkIdentifier, string sdkVersion, string targetPlatformIdentifier, string targetPlatformMinVersion, string targetPlatformVersion) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKPropsFileLocation(string sdkIdentifier, string sdkVersion, string targetPlatformIdentifier, string targetPlatformMinVersion, string targetPlatformVersion, string diskRoots, string registryRoot) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformsForSDK(string sdkIdentifier, System.Version sdkVersion) -> System.Collections.Generic.IEnumerable<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformsForSDK(string sdkIdentifier, System.Version sdkVersion, string[] diskRoots, string registryRoot) -> System.Collections.Generic.IEnumerable<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetProgramFilesReferenceAssemblyRoot() -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKContentFolderPath(string sdkIdentifier, string sdkVersion, string targetPlatformIdentifier, string targetPlatformMinVersion, string targetPlatformVersion, string folderName, string diskRoot = null) -> string
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKDesignTimeFolders(string sdkRoot) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKDesignTimeFolders(string sdkRoot, string targetConfiguration, string targetArchitecture) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKRedistFolders(string sdkRoot) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKRedistFolders(string sdkRoot, string targetConfiguration, string targetArchitecture) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKReferenceFolders(string sdkRoot) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSDKReferenceFolders(string sdkRoot, string targetConfiguration, string targetArchitecture) -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetSupportedTargetFrameworks() -> System.Collections.Generic.IList<string>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformReferences(string sdkIdentifier, string sdkVersion, string targetPlatformIdentifier, string targetPlatformMinVersion, string targetPlatformVersion) -> string[]
-static Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformReferences(string sdkIdentifier, string sdkVersion, string targetPlatformIdentifier, string targetPlatformMinVersion, string targetPlatformVersion, string diskRoots, string registryRoot) -> string[]
-static Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformSdks() -> System.Collections.Generic.IList<Microsoft.Build.Utilities.TargetPlatformSDK>
-static Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformSdks(string[] diskRoots, string registryRoot) -> System.Collections.Generic.IList<Microsoft.Build.Utilities.TargetPlatformSDK>
-static Microsoft.Build.Utilities.ToolLocationHelper.HighestVersionOfTargetFrameworkIdentifier(string targetFrameworkRootDirectory, string frameworkIdentifier) -> System.Runtime.Versioning.FrameworkName
-static Microsoft.Build.Utilities.ToolLocationHelper.PathToSystem.get -> string
-static Microsoft.Build.Utilities.TrackedDependencies.ExpandWildcards(Microsoft.Build.Framework.ITaskItem[] expand) -> Microsoft.Build.Framework.ITaskItem[]
-virtual Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(string parameter) -> bool
-virtual Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(string switchName, string parameter) -> void
-virtual Microsoft.Build.Utilities.Logger.FormatErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs args) -> string
-virtual Microsoft.Build.Utilities.Logger.FormatWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs args) -> string
-virtual Microsoft.Build.Utilities.Logger.Parameters.get -> string
-virtual Microsoft.Build.Utilities.Logger.Parameters.set -> void
-virtual Microsoft.Build.Utilities.Logger.Shutdown() -> void
-virtual Microsoft.Build.Utilities.Logger.Verbosity.get -> Microsoft.Build.Framework.LoggerVerbosity
-virtual Microsoft.Build.Utilities.Logger.Verbosity.set -> void
-virtual Microsoft.Build.Utilities.TaskLoggingHelper.FormatResourceString(string resourceName, params object[] args) -> string
-virtual Microsoft.Build.Utilities.TaskLoggingHelper.FormatString(string unformatted, params object[] args) -> string
-virtual Microsoft.Build.Utilities.TaskLoggingHelper.GetResourceMessage(string resourceName) -> string
-virtual Microsoft.Build.Utilities.ToolTask.AdjustCommandsForOperatingSystem(string input) -> string
-virtual Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute() -> bool
-virtual Microsoft.Build.Utilities.ToolTask.Cancel() -> void
-virtual Microsoft.Build.Utilities.ToolTask.EnvironmentOverride.get -> System.Collections.Generic.Dictionary<string, string>
-virtual Microsoft.Build.Utilities.ToolTask.ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) -> int
-virtual Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands() -> string
-virtual Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands() -> string
-virtual Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(string pathToTool, string commandLineCommands, string responseFileSwitch) -> System.Diagnostics.ProcessStartInfo
-virtual Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(string responseFilePath) -> string
-virtual Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory() -> string
-virtual Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors() -> bool
-virtual Microsoft.Build.Utilities.ToolTask.HasLoggedErrors.get -> bool
-virtual Microsoft.Build.Utilities.ToolTask.InitializeHostObject() -> Microsoft.Build.Utilities.HostObjectInitializationStatus
-virtual Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance) -> void
-virtual Microsoft.Build.Utilities.ToolTask.LogPathToTool(string toolName, string pathToTool) -> void
-virtual Microsoft.Build.Utilities.ToolTask.LogToolCommand(string message) -> void
-virtual Microsoft.Build.Utilities.ToolTask.ProcessStarted() -> void
-virtual Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding.get -> System.Text.Encoding
-virtual Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(string responseString) -> string
-virtual Microsoft.Build.Utilities.ToolTask.SkipTaskExecution() -> bool
-virtual Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding.get -> System.Text.Encoding
-virtual Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance.get -> Microsoft.Build.Framework.MessageImportance
-virtual Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding.get -> System.Text.Encoding
-virtual Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance.get -> Microsoft.Build.Framework.MessageImportance
-virtual Microsoft.Build.Utilities.ToolTask.Timeout.get -> int
-virtual Microsoft.Build.Utilities.ToolTask.Timeout.set -> void
-virtual Microsoft.Build.Utilities.ToolTask.ToolExe.get -> string
-virtual Microsoft.Build.Utilities.ToolTask.ToolExe.set -> void
-virtual Microsoft.Build.Utilities.ToolTask.ValidateParameters() -> bool
\ No newline at end of file
diff --git a/src/Utilities/PublicAPI/netstandard/PublicAPI.Unshipped.txt b/src/Utilities/PublicAPI/netstandard/PublicAPI.Unshipped.txt
deleted file mode 100644
index e69de29bb2d..00000000000
