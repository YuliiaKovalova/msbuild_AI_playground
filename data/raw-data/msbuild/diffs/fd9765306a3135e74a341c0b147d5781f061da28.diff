diff --git a/src/Tasks/CreateItem.cs b/src/Tasks/CreateItem.cs
index 44021449491..7b4bfa75764 100644
--- a/src/Tasks/CreateItem.cs
+++ b/src/Tasks/CreateItem.cs
@@ -31,12 +31,16 @@ public class CreateItem : TaskExtension
         /// A typical input: "metadataname1=metadatavalue1", "metadataname2=metadatavalue2", ...
         /// </summary>
         /// <remarks>
-        ///    The fact that this is a `string[]` makes the following illegal:
-        ///      `<CreateItem AdditionalMetadata="TargetPath=@(OutputPathItem)" />`
-        ///    The engine fails on this because it doesn't like item lists being concatenated with string
-        ///    constants when the data is being passed into an array parameter.  So the workaround is to 
-        ///    write this in the project file:
-        ///     `<CreateItem AdditionalMetadata="@(OutputPathItem-&gt;'TargetPath=%(Identity)')" />`
+        ///   <format type="text/markdown"><![CDATA[
+        ///     ## Remarks
+        ///     The fact that this is a `string[]` makes the following illegal:
+        ///         `<CreateItem AdditionalMetadata="TargetPath=@(OutputPathItem)" />`
+        ///     The engine fails on this because it doesn't like item lists being concatenated with string
+        ///     constants when the data is being passed into an array parameter.  So the workaround is to 
+        ///     write this in the project file:
+        ///         `<CreateItem AdditionalMetadata="@(OutputPathItem-&gt;'TargetPath=%(Identity)')" />`
+        ///     ]]>
+        ///   </format>
         /// </remarks>
         public string[] AdditionalMetadata { get; set; }
 
diff --git a/src/Tasks/MSBuild.cs b/src/Tasks/MSBuild.cs
index 3646a8f8419..6bbc68964b3 100644
--- a/src/Tasks/MSBuild.cs
+++ b/src/Tasks/MSBuild.cs
@@ -55,12 +55,16 @@ private enum SkipNonexistentProjectsBehavior
         /// A typical input: "propname1=propvalue1", "propname2=propvalue2", "propname3=propvalue3".
         /// </summary>
         /// <remarks>
+        ///   <format type="text/markdown"><![CDATA[
+        ///     ## Remarks
         ///     The fact that this is a `string[]` makes the following illegal:
-        ///       `<MSBuild Properties="TargetPath=@(OutputPathItem)" />`
+        ///         `<MSBuild Properties="TargetPath=@(OutputPathItem)" />`
         ///     The engine fails on this because it doesn't like item lists being concatenated with string
         ///     constants when the data is being passed into an array parameter.  So the workaround is to 
         ///     write this in the project file:
-        ///       `<MSBuild Properties="@(OutputPathItem-&gt;'TargetPath=%(Identity)')" />`
+        ///         `<MSBuild Properties="@(OutputPathItem-&gt;'TargetPath=%(Identity)')" />`
+        ///     ]]>
+        ///   </format>
         /// </remarks>
         public string[] Properties { get; set; }
 
