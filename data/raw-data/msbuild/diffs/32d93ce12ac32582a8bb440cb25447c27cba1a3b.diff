diff --git a/global.json b/global.json
index 7cd88120047..b87c139ac3f 100644
--- a/global.json
+++ b/global.json
@@ -1,7 +1,8 @@
 {
-  "sdk": {
-    "allowPrerelease": true
-  },
+    "sdk": {
+        "allowPrerelease": true,
+        "version": "7.0.100-rc.2.22477.23"
+    },
   "tools": {
     "dotnet": "7.0.100-rc.2.22477.23",
     "vs": {
diff --git a/src/Framework/BuildMessageEventArgs.cs b/src/Framework/BuildMessageEventArgs.cs
index e65cf09bb59..9c091871f94 100644
--- a/src/Framework/BuildMessageEventArgs.cs
+++ b/src/Framework/BuildMessageEventArgs.cs
@@ -227,6 +227,10 @@ params object[] messageArgs
             this.endColumnNumber = endColumnNumber;
         }
 
+        public BuildMessageEventArgs(string message)
+        {
+        }
+
         private MessageImportance importance;
 
         [OptionalField(VersionAdded = 2)]
diff --git a/src/Framework/ResponseFileUsedEventArgs.cs b/src/Framework/ResponseFileUsedEventArgs.cs
new file mode 100644
index 00000000000..d184cacb8f4
--- /dev/null
+++ b/src/Framework/ResponseFileUsedEventArgs.cs
@@ -0,0 +1,25 @@
+using System;
+using System.IO;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Framework
+{
+    /// <summary>
+    /// Arguments for the response file used event
+    /// </summary>
+    [Serializable]
+    public class ResponseFileUsedEventArgs : BuildMessageEventArgs
+    {
+        /// <summary>
+        /// Initialize a new instance of the ResponseFileUsedEventArgs class.
+        /// </summary>
+        public ResponseFileUsedEventArgs()
+        {
+        }
+
+        public ResponseFileUsedEventArgs(string message)
+            : base(message: message)
+        {
+        }
+    }
+}
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 9b7d35963d1..b9a526b21c0 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1082,6 +1082,11 @@ private static void ResetGatheringSwitchesState()
         /// </summary>
         private const string msbuildLogFileName = "msbuild.log";
 
+        /// <summary>
+        /// Messages to be logged into loggrers
+        /// </summary>
+        private static IEnumerable<BuildManager.DeferredBuildMessage> messagesToLogInBuildLoggers = Enumerable.Empty<BuildManager.DeferredBuildMessage>();
+
         /// <summary>
         /// Initializes the build engine, and starts the project building.
         /// </summary>
@@ -1323,7 +1328,6 @@ string[] commandLine
 
                     BuildResultCode? result = null;
 
-                    IEnumerable<BuildManager.DeferredBuildMessage> messagesToLogInBuildLoggers = null;
                     if (!Traits.Instance.EscapeHatches.DoNotSendDeferredMessagesToBuildManager)
                     {
                         var commandLineString =
@@ -1334,7 +1338,6 @@ string[] commandLine
 #endif
                         messagesToLogInBuildLoggers = GetMessagesToLogInBuildLoggers(commandLineString);
                     }
-
                     buildManager.BeginBuild(parameters, messagesToLogInBuildLoggers);
 
                     Exception exception = null;
@@ -1528,6 +1531,17 @@ private static bool PrintTargets(string projectFile, string toolsVersion, Dictio
                         MessageImportance.High));
             }
 
+            // Log a message for every response file
+            foreach (var responseFilePath in s_includedResponseFiles)
+            {
+                messages.Add(
+                    new BuildManager.DeferredBuildMessage(
+                        String.Format("Included response file: {0}", responseFilePath),
+                        MessageImportance.Normal
+                    )
+                );
+            }
+
             return messages;
         }
 
