diff --git a/src/MSBuildTaskHost/OutOfProcTaskHost.cs b/src/MSBuildTaskHost/OutOfProcTaskHost.cs
index 4f4b2ab02da..cff38e66b70 100644
--- a/src/MSBuildTaskHost/OutOfProcTaskHost.cs
+++ b/src/MSBuildTaskHost/OutOfProcTaskHost.cs
@@ -68,6 +68,11 @@ internal enum ExitType
         [MTAThread]
         public static int Main()
         {
+            while (true)
+            {
+                Microsoft.NET.StringTools.Strings.WeakIntern("hello");
+            }
+
             int exitCode = Execute() == ExitType.Success ? 0 : 1;
             return exitCode;
         }
diff --git a/src/StringTools/InternableString.Simple.cs b/src/StringTools/InternableString.Simple.cs
index 418eab0784c..44955d274aa 100644
--- a/src/StringTools/InternableString.Simple.cs
+++ b/src/StringTools/InternableString.Simple.cs
@@ -237,9 +237,7 @@ private static uint HashOneCharacter(uint hash, char ch, bool isOddIndex)
                 return hash ^ ((uint)ch << 16);
             }
 
-            // The JIT recognized the pattern and generates efficient code, e.g. the rol instruction on x86/x64.
             uint rotatedHash = (hash << 5) | (hash >> (32 - 5));
-
             return (rotatedHash + hash) ^ ch;
         }
     }
