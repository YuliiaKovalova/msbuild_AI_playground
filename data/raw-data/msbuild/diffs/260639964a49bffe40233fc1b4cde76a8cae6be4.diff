diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 62790956790..c96b6a2a009 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -89,6 +89,11 @@ public enum ExitType
             ProjectCacheFailure
         }
 
+        /// <summary>
+        /// True if the Main method was invoked. False indicates that we're running hosted in another process (e.g. unit tests).
+        /// </summary>
+        private static bool s_executingMainEntryPoint;
+
         /// <summary>
         /// Whether the static constructor ran successfully.
         /// </summary>
@@ -214,6 +219,8 @@ string [] args
 #endif
             )
         {
+            s_executingMainEntryPoint = true;
+
             using PerformanceLogEventListener eventListener = PerformanceLogEventListener.Create();
 
             if (Environment.GetEnvironmentVariable("MSBUILDDUMPPROCESSCOUNTERS") == "1")
@@ -1545,8 +1552,14 @@ private static bool BuildProjectWithOldOM(string projectFile, string[] targets,
         private static void VerifyThrowSupportedOS()
         {
 #if FEATURE_OSVERSION
+            // We require Windows 10 but the OS may lie about the version if the .exe is not properly manifested
+            // (such as e.g. the unit test console runner).
+            var minimumVersion = s_executingMainEntryPoint
+                ? new Version(10, 0) // Windows 10
+                : new Version(6, 2); // Windows 10 pretending to be Windows 8
+
             if (Environment.OSVersion.Platform != PlatformID.Win32NT ||
-                Environment.OSVersion.Version.Major < 10) // Windows 10 is minimum
+                Environment.OSVersion.Version < minimumVersion)
             {
                 // If we're running on any of the unsupported OS's, fail immediately.  This way,
                 // we don't run into some obscure error down the line, totally confusing the user.
