diff --git a/src/Tasks/CreateCSharpManifestResourceName.cs b/src/Tasks/CreateCSharpManifestResourceName.cs
index 774ee9a2bbd..d143ac6a615 100644
--- a/src/Tasks/CreateCSharpManifestResourceName.cs
+++ b/src/Tasks/CreateCSharpManifestResourceName.cs
@@ -156,16 +156,14 @@ TaskLoggingHelper log
                         string.Equals(sourceExtension, ".resources", StringComparison.OrdinalIgnoreCase)
                     )
                 {
-
                     if (!string.IsNullOrEmpty(directoryName))
                     {
-                        manifestName.Append('.').Append(Path.GetFileNameWithoutExtension(info.cultureNeutralFilename));
-                    }
-                    else
-                    {
-                        manifestName.Append(Path.GetFileNameWithoutExtension(info.cultureNeutralFilename));
+                        manifestName.Append('.');
                     }
 
+                    // append the file name without extension
+                    manifestName.Append(Path.GetFileNameWithoutExtension(info.cultureNeutralFilename));
+
                     // Replace all '\' with '.'
                     manifestName.Replace(Path.DirectorySeparatorChar, '.');
                     manifestName.Replace(Path.AltDirectorySeparatorChar, '.');
diff --git a/src/Tasks/CreateManifestResourceName.cs b/src/Tasks/CreateManifestResourceName.cs
index 8f5b0e82a05..d47d3ecf83b 100644
--- a/src/Tasks/CreateManifestResourceName.cs
+++ b/src/Tasks/CreateManifestResourceName.cs
@@ -313,8 +313,7 @@ private static void MakeValidEverettSubFolderIdentifier(StringBuilder builder, s
                     // if it is a valid subsequent character, prepend an underscore to it
                     else
                     {
-                        builder.Append('_');
-                        builder.Append(subName[0]);
+                        builder.Append('_').Append(subName[0]);
                     }
                 }
                 else
@@ -335,10 +334,6 @@ private static void MakeValidEverettSubFolderIdentifier(StringBuilder builder, s
                     }
                 }
             }
-            else
-            {
-                return;
-            }
         }
 
         /// <summary>
@@ -358,10 +353,7 @@ internal static void MakeValidEverettFolderIdentifier(StringBuilder builder, str
                 string[] subNames = name.Split(MSBuildConstants.DotChar);
 
                 // convert each subname separately
-                if (!string.IsNullOrEmpty(subNames[0]))
-                {
-                    MakeValidEverettSubFolderIdentifier(everettId, subNames[0]);
-                }
+                MakeValidEverettSubFolderIdentifier(everettId, subNames[0]);
 
                 for (int i = 1; i < subNames.Length; i++)
                 {
@@ -377,10 +369,6 @@ internal static void MakeValidEverettFolderIdentifier(StringBuilder builder, str
 
                 builder.Append(everettId.ToString());
             }
-            else
-            {
-                return;
-            }
         }
 
         /// <summary>
@@ -396,10 +384,7 @@ public static void MakeValidEverettIdentifier(StringBuilder builder, string name
                 string[] subNames = name.Split(MSBuildConstants.ForwardSlashBackslash);
 
                 // convert every folder name
-                if (!string.IsNullOrEmpty(subNames[0]))
-                {
-                    MakeValidEverettFolderIdentifier(builder, subNames[0]);
-                }
+                MakeValidEverettFolderIdentifier(builder, subNames[0]);
 
                 for (int i = 1; i < subNames.Length; i++)
                 {
@@ -407,10 +392,6 @@ public static void MakeValidEverettIdentifier(StringBuilder builder, string name
                     MakeValidEverettFolderIdentifier(builder, subNames[i]);
                 }
             }
-            else
-            {
-                return;
-            }
         }
 
         #endregion
