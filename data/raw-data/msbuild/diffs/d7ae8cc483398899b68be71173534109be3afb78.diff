diff --git a/src/Build/Logging/FancyLogger/ANSIBuilder.cs b/src/Build/Logging/FancyLogger/ANSIBuilder.cs
index b9c9a1a2135..b41b03533ae 100644
--- a/src/Build/Logging/FancyLogger/ANSIBuilder.cs
+++ b/src/Build/Logging/FancyLogger/ANSIBuilder.cs
@@ -82,6 +82,7 @@ public static string EraseCurrentLine()
         }
         public static class Graphics
         {
+            public static int loadingCounter = 0;
             public static string ProgressBar(float percentage, int width = 10, char completedChar = '█', char remainingChar = '░')
             {
                 string result = "";
@@ -95,6 +96,14 @@ public static string ProgressBar(float percentage, int width = 10, char complete
                 }
                 return result;
             }
+
+            public static string Loading()
+            {
+                char[] chars = { '⠄', '⠆', '⠇', '⠋', '⠙', '⠸', '⠰', '⠠', '⠰', '⠸', '⠙', '⠋', '⠇', '⠆' };
+                loadingCounter += (loadingCounter++) % (chars.Length - 1);
+
+                return chars[loadingCounter].ToString();
+            }
         }
     }
 }
diff --git a/src/Build/Logging/FancyLogger/FancyLogger.cs b/src/Build/Logging/FancyLogger/FancyLogger.cs
index ab9d50ff1e8..fe1b34661f3 100644
--- a/src/Build/Logging/FancyLogger/FancyLogger.cs
+++ b/src/Build/Logging/FancyLogger/FancyLogger.cs
@@ -187,6 +187,7 @@ void eventSource_TaskStarted(object sender, TaskStartedEventArgs e)
                 int targetLineId = targetConsoleLines[e.BuildEventContext.TargetId];
                 Log.WriteInLine(
                     ANSIBuilder.Eraser.EraseCurrentLine() + "\t" +
+                    ANSIBuilder.Graphics.Loading() + " " +
                     ANSIBuilder.Graphics.ProgressBar(0.6f, 16) + "\t" +
                     ANSIBuilder.Formatting.Dim(e.TaskName), 
                     targetLineId + 1
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 4d6392aa7a0..4c84885e6fc 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1324,7 +1324,7 @@ string[] commandLine
 
                     BuildResultCode? result = null;
 
-                    // IEnumerable<BuildManager.DeferredBuildMessage> messagesToLogInBuildLoggers = null;
+                    IEnumerable<BuildManager.DeferredBuildMessage> messagesToLogInBuildLoggers = null;
                     if (!Traits.Instance.EscapeHatches.DoNotSendDeferredMessagesToBuildManager)
                     {
                         var commandLineString =
