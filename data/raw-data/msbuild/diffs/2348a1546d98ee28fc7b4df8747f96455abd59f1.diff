diff --git a/src/Build/BackEnd/Components/Communications/NodeLauncher.cs b/src/Build/BackEnd/Components/Communications/NodeLauncher.cs
index dc68c0601a7..9a08a3940a7 100644
--- a/src/Build/BackEnd/Components/Communications/NodeLauncher.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeLauncher.cs
@@ -26,28 +26,13 @@ public Process Start(string msbuildLocation, string commandLineArgs)
         {
             // Disable MSBuild server for a child process.
             // In case of starting msbuild server it prevents an infinite recurson. In case of starting msbuild node we also do not want this variable to be set.
-            string useMSBuildServerEnvVarValue = Environment.GetEnvironmentVariable(Traits.UseMSBuildServerEnvVarName);
-            try
-            {
-                if (useMSBuildServerEnvVarValue is not null)
-                {
-                    Environment.SetEnvironmentVariable(Traits.UseMSBuildServerEnvVarName, "0");
-                }
-                return PrivateStart(msbuildLocation, commandLineArgs);
-            }
-            finally
-            {
-                if (useMSBuildServerEnvVarValue is not null)
-                {
-                    Environment.SetEnvironmentVariable(Traits.UseMSBuildServerEnvVarName, useMSBuildServerEnvVarValue);
-                }
-            }
+            return DisableMSBuildServer(() => StartInternal(msbuildLocation, commandLineArgs));
         }
 
         /// <summary>
         /// Creates a new MSBuild process
         /// </summary>
-        private Process PrivateStart(string msbuildLocation, string commandLineArgs)
+        private Process StartInternal(string msbuildLocation, string commandLineArgs)
         {
             // Should always have been set already.
             ErrorUtilities.VerifyThrowInternalLength(msbuildLocation, nameof(msbuildLocation));
@@ -202,5 +187,25 @@ out processInfo
                 return Process.GetProcessById(childProcessId);
             }
         }
+
+        private Process DisableMSBuildServer(Func<Process> func)
+        {
+            string useMSBuildServerEnvVarValue = Environment.GetEnvironmentVariable(Traits.UseMSBuildServerEnvVarName);
+            try
+            {
+                if (useMSBuildServerEnvVarValue is not null)
+                {
+                    Environment.SetEnvironmentVariable(Traits.UseMSBuildServerEnvVarName, "0");
+                }
+                return func();
+            }
+            finally
+            {
+                if (useMSBuildServerEnvVarValue is not null)
+                {
+                    Environment.SetEnvironmentVariable(Traits.UseMSBuildServerEnvVarName, useMSBuildServerEnvVarValue);
+                }
+            }
+        }
     }
 }
