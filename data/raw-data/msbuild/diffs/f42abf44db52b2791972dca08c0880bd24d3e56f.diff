diff --git a/src/Build/Construction/ProjectElementContainer.cs b/src/Build/Construction/ProjectElementContainer.cs
index 3de6bee0c32..5a2d0da07c9 100644
--- a/src/Build/Construction/ProjectElementContainer.cs
+++ b/src/Build/Construction/ProjectElementContainer.cs
@@ -407,13 +407,46 @@ protected internal virtual ProjectElementContainer DeepClone(ProjectRootElement
                 }
                 else
                 {
-                    clone.AppendChild(child.Clone(clone.ContainingProject));
+                    ProjectElement childClone = child.Clone(clone.ContainingProject);
+                    clone.AppendChild(childClone);
+                    if (childClone.XmlElement is not null)
+                    {
+                        AppendAttributesAndChildren(childClone.XmlElement, child.XmlElement);
+                    }
                 }
             }
 
             return clone;
         }
 
+        private void AppendAttributesAndChildren(XmlNode appendTo, XmlNode appendFrom)
+        {
+            appendTo.RemoveAll();
+            // Copy over the attributes from the template element.
+            if (appendFrom.Attributes is not null)
+            {
+                foreach (XmlAttribute attribute in appendFrom.Attributes)
+                {
+                    XmlAttribute attr = appendTo.OwnerDocument.CreateAttribute(attribute.LocalName, attribute.NamespaceURI);
+                    attr.Value = attribute.Value;
+                    appendTo.Attributes.Append(attr);
+                }
+            }
+
+            // If this element has pure text content, copy that over.
+            if (appendFrom.ChildNodes.Count == 1 && appendFrom.FirstChild.NodeType == XmlNodeType.Text)
+            {
+                appendTo.AppendChild(appendTo.OwnerDocument.CreateTextNode(appendFrom.FirstChild.Value));
+            }
+
+            foreach (XmlNode child in appendFrom.ChildNodes)
+            {
+                XmlNode childClone = appendTo.OwnerDocument.CreateNode(child.NodeType, child.Prefix, child.Name, child.NamespaceURI);
+                appendTo.AppendChild(childClone);
+                AppendAttributesAndChildren(childClone, child);
+            }
+        }
+
         internal static ProjectElementContainer DeepClone(ProjectElementContainer xml, ProjectRootElement factory, ProjectElementContainer parent)
         {
             return xml.DeepClone(factory, parent);
