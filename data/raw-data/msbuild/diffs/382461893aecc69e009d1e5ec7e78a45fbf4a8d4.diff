diff --git a/src/Build.UnitTests/BackEnd/TaskRegistry_Tests.cs b/src/Build.UnitTests/BackEnd/TaskRegistry_Tests.cs
index 10946ec3dc1..d08aa8aab6e 100644
--- a/src/Build.UnitTests/BackEnd/TaskRegistry_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TaskRegistry_Tests.cs
@@ -623,7 +623,7 @@ public void RetrieveFromCacheMatchingExactParameters_AdditionalParameters()
         }
 
         [Fact]
-        public void OverriddenTask_AlwaysWins()
+        public void ArchitectureSpecificTask_ShouldAlwaysReturnFirst()
         {
             Assert.NotNull(_testTaskLocation); // "Need a test task to run this test"
 
@@ -631,8 +631,6 @@ public void OverriddenTask_AlwaysWins()
             ProjectRootElement project = ProjectRootElement.Create();
 
             ProjectUsingTaskElement element = project.AddUsingTask(TestTaskName, _testTaskLocation, null);
-            element.Architecture = "x64";
-            element.Override = "true";
             elementList.Add(element);
 
             ProjectUsingTaskElement secondElement = project.AddUsingTask(TestTaskName, _testTaskLocation, null);
@@ -651,7 +649,7 @@ public void OverriddenTask_AlwaysWins()
                     shouldBeRetrieved: true,
                     shouldBeRetrievedFromCache: false,
                     expectedRuntime: XMakeAttributes.MSBuildRuntimeValues.any,
-                    expectedArchitecture: XMakeAttributes.MSBuildArchitectureValues.x64
+                    expectedArchitecture: XMakeAttributes.MSBuildArchitectureValues.x86
                 );
 
             // no parameters, fuzzy match
@@ -664,12 +662,12 @@ public void OverriddenTask_AlwaysWins()
                     shouldBeRetrieved: true,
                     shouldBeRetrievedFromCache: false,
                     expectedRuntime: XMakeAttributes.MSBuildRuntimeValues.any,
-                    expectedArchitecture: XMakeAttributes.MSBuildArchitectureValues.x64
+                    expectedArchitecture: XMakeAttributes.MSBuildArchitectureValues.x86
                 );
         }
-        
+
         [Fact]
-        public void OverriddenTask_FirstOneWins()
+        public void ArchitectureSpecificTask_FirstOneWins()
         {
             Assert.NotNull(_testTaskLocation); // "Need a test task to run this test"
 
@@ -678,12 +676,10 @@ public void OverriddenTask_FirstOneWins()
 
             ProjectUsingTaskElement element = project.AddUsingTask(TestTaskName, _testTaskLocation, null);
             element.Architecture = "x64";
-            element.Override = "true";
             elementList.Add(element);
 
             ProjectUsingTaskElement secondElement = project.AddUsingTask(TestTaskName, _testTaskLocation, null);
             secondElement.Architecture = "x86";
-            secondElement.Override = "true";
             elementList.Add(secondElement);
 
             TaskRegistry registry = CreateTaskRegistryAndRegisterTasks(elementList);
