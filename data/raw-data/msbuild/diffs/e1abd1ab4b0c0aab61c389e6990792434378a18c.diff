diff --git a/src/Build.UnitTests/Evaluation/Expander_Tests.cs b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
index 3821c5befaa..4af483bd8e8 100644
--- a/src/Build.UnitTests/Evaluation/Expander_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
@@ -4984,22 +4984,38 @@ public void ExpandItem_ConvertToStringUsingInvariantCultureForNumberData_Respect
         [InlineData("gettype")]
         public void GetTypeMethod_ShouldNotBeAllowed(string methodName)
         {
-            using (var env = TestEnvironment.Create())
+            var currentThread = Thread.CurrentThread;
+            var originalCulture = currentThread.CurrentCulture;
+            var originalUICulture = currentThread.CurrentUICulture;
+            var enCultureInfo = new CultureInfo("en");
+
+            try
             {
-                var root = env.CreateFolder();
+                currentThread.CurrentCulture = enCultureInfo;
+                currentThread.CurrentUICulture = enCultureInfo;
 
-                var projectFile = env.CreateFile(root, ".proj",
-                    @$"<Project>
-    <PropertyGroup>
-        <foo>aa</foo>
-        <typeval>$(foo.{methodName}().FullName)</typeval>
-    </PropertyGroup>
-</Project>");
-                var exception = Should.Throw<InvalidProjectFileException>(() =>
+                using (var env = TestEnvironment.Create())
                 {
-                    new ProjectInstance(projectFile.Path);
-                });
-                exception.BaseMessage.ShouldContain($"The function \"{methodName}\" on type \"System.String\" is not available for execution as an MSBuild property function.");
+                    var root = env.CreateFolder();
+
+                    var projectFile = env.CreateFile(root, ".proj",
+                        @$"<Project>
+            <PropertyGroup>
+                <foo>aa</foo>
+                <typeval>$(foo.{methodName}().FullName)</typeval>
+            </PropertyGroup>
+        </Project>");
+                    var exception = Should.Throw<InvalidProjectFileException>(() =>
+                    {
+                        new ProjectInstance(projectFile.Path);
+                    });
+                    exception.BaseMessage.ShouldContain($"The function \"{methodName}\" on type \"System.String\" is not available for execution as an MSBuild property function.");
+                }
+            }
+            finally
+            {
+                currentThread.CurrentCulture = originalCulture;
+                currentThread.CurrentUICulture = originalUICulture;
             }
         }
 
