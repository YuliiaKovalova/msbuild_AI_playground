diff --git a/src/Tasks/SystemState.cs b/src/Tasks/SystemState.cs
index ede19816c83..5e6b0d8e77d 100644
--- a/src/Tasks/SystemState.cs
+++ b/src/Tasks/SystemState.cs
@@ -612,7 +612,7 @@ out fileState.frameworkName
         /// <param name="stateFiles">List of locations of caches on disk.</param>
         /// <param name="log">How to log</param>
         /// <param name="fileExists">Whether a file exists</param>
-        /// <returns></returns>
+        /// <returns>A cache representing key aspects of file states.</returns>
         internal static SystemState DeserializePrecomputedCachesByTranslator(ITaskItem[] stateFiles, TaskLoggingHelper log, FileExists fileExists)
         {
             SystemState retVal = new SystemState();
@@ -657,21 +657,20 @@ internal void SerializePrecomputedCacheByTranslator(string stateFile, TaskLoggin
             // Save a copy of instanceLocalFileStateCache so we can restore it later. SerializeCacheByTranslator serializes
             // instanceLocalFileStateCache by default, so change that to the relativized form, then change it back.
             Dictionary<string, FileState> oldFileStateCache = instanceLocalFileStateCache;
-            Dictionary<string, FileState> newInstanceLocalFileStateCache = new Dictionary<string, FileState>(instanceLocalFileStateCache.Count);
-            foreach (KeyValuePair<string, FileState> kvp in instanceLocalFileStateCache)
+            instanceLocalFileStateCache = instanceLocalFileStateCache.ToDictionary(kvp => FileUtilities.MakeRelative(Path.GetDirectoryName(stateFile), kvp.Key), kvp => kvp.Value);
+
+            try
             {
-                string relativePath = FileUtilities.MakeRelative(Path.GetDirectoryName(stateFile), kvp.Key);
-                newInstanceLocalFileStateCache[relativePath] = kvp.Value;
+                if (FileUtilities.FileExistsNoThrow(stateFile))
+                {
+                    log.LogWarningWithCodeFromResources("General.StateFileAlreadyPresent", stateFile);
+                }
+                SerializeCacheByTranslator(stateFile, log);
             }
-            instanceLocalFileStateCache = newInstanceLocalFileStateCache;
-
-            if (FileUtilities.FileExistsNoThrow(stateFile))
+            finally
             {
-                log.LogWarningWithCodeFromResources("General.StateFileAlreadyPresent", stateFile);
+                instanceLocalFileStateCache = oldFileStateCache;
             }
-            SerializeCacheByTranslator(stateFile, log);
-
-            instanceLocalFileStateCache = oldFileStateCache;
         }
 
         /// <summary>
