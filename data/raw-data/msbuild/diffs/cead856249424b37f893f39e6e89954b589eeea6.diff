diff --git a/src/BuildCheck.UnitTests/EndToEndTests.cs b/src/BuildCheck.UnitTests/EndToEndTests.cs
index 489db4af2c1..9ac693a6d28 100644
--- a/src/BuildCheck.UnitTests/EndToEndTests.cs
+++ b/src/BuildCheck.UnitTests/EndToEndTests.cs
@@ -984,6 +984,13 @@ private void AddCustomDataSourceToNugetConfig(string checkCandidatePath)
             // MSBuild packages are placed in a separate folder, so we need to add it as a package source.
             AddPackageSource(doc, packageSourcesNode, "MSBuildTestPackagesSource", RunnerUtilities.ArtifactsLocationAttribute.ArtifactsLocation);
 
+            // PackageSourceMapping is enabled at the repository level. For the test packages we need to add the PackageSourceMapping as well.
+            XmlNode? packageSourceMapping = doc.CreateElement("packageSourceMapping");
+            string[] packagePatterns = new string[] { "*" };
+            AddPackageSourceMapping(doc, packageSourceMapping, "CustomCheckSource", packagePatterns);
+            AddPackageSourceMapping(doc, packageSourceMapping, "MSBuildTestPackagesSource", packagePatterns);
+            doc.DocumentElement.AppendChild(packageSourceMapping);
+
             doc.Save(Path.Combine(checkCandidatePath, "nuget.config"));
         }
     }
@@ -1001,6 +1008,23 @@ private void AddPackageSource(XmlDocument doc, XmlNode? packageSourcesNode, stri
         }
     }
 
+    private void AddPackageSourceMapping(XmlDocument doc, XmlNode? packageSourceMapping, string key, string[] packagePatterns)
+    {
+        if (packageSourceMapping != null)
+        {
+            XmlElement packageSourceNode = doc.CreateElement("packageSource");
+            PopulateXmlAttribute(doc, packageSourceNode, "key", key);
+            foreach (var pattern in packagePatterns)
+            {
+                XmlElement packageNode = doc.CreateElement("package");
+                PopulateXmlAttribute(doc, packageNode, "pattern", pattern);
+                packageSourceNode.AppendChild(packageNode);
+            }
+            
+            packageSourceMapping.AppendChild(packageSourceNode);
+        }
+    }
+
     private void PopulateXmlAttribute(XmlDocument doc, XmlNode node, string attributeName, string attributeValue)
     {
         node.ShouldNotBeNull($"The attribute {attributeName} can not be populated with {attributeValue}. Xml node is null.");
