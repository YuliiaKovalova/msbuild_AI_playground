diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
index 49f5a15b5ed..2b55265cd9a 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
@@ -37,11 +37,6 @@ internal class TaskHost :
 #endif
         IBuildEngine10
     {
-        /// <summary>
-        /// True if the "secret" environment variable MSBUILDNOINPROCNODE is set.
-        /// </summary>
-        private static bool s_disableInprocNodeByEnvironmentVariable = Environment.GetEnvironmentVariable("MSBUILDNOINPROCNODE") == "1";
-
         /// <summary>
         /// Help diagnose tasks that log after they return.
         /// </summary>
@@ -129,8 +124,8 @@ public TaskHost(IBuildComponentHost host, BuildRequestEntry requestEntry, Elemen
             _activeProxy = true;
             _callbackMonitor = new object();
             _disableInprocNode = ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)
-                ? s_disableInprocNodeByEnvironmentVariable || host.BuildParameters.DisableInProcNode
-                : s_disableInprocNodeByEnvironmentVariable;
+                ? Traits.Instance.InProcNodeDisabled || host.BuildParameters.DisableInProcNode
+                : Traits.Instance.InProcNodeDisabled;
             EngineServices = new EngineServicesImpl(this);
         }
 
diff --git a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
index bbd08f92085..44f487998b8 100644
--- a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
+++ b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
@@ -15,7 +15,6 @@
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.Debugging;
-using Microsoft.Build.Utilities;
 using BuildAbortedException = Microsoft.Build.Exceptions.BuildAbortedException;
 using ILoggingService = Microsoft.Build.BackEnd.Logging.ILoggingService;
 using NodeLoggingContext = Microsoft.Build.BackEnd.Logging.NodeLoggingContext;
@@ -58,8 +57,6 @@ internal class Scheduler : IScheduler
         /// </summary>
         private const double DefaultCustomSchedulerForSQLConfigurationLimitMultiplier = 1.1;
 
-        private static bool InprocNodeDisabledViaEnvironmentVariable = Environment.GetEnvironmentVariable("MSBUILDNOINPROCNODE") == "1";
-
         #region Scheduler Data
 
         /// <summary>
@@ -146,9 +143,10 @@ internal class Scheduler : IScheduler
         /// <summary>
         /// Flag used for debugging by forcing all scheduling to go out-of-proc.
         /// </summary>
-        internal bool ForceAffinityOutOfProc => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)
-            ? InprocNodeDisabledViaEnvironmentVariable || _componentHost.BuildParameters.DisableInProcNode
-            : InprocNodeDisabledViaEnvironmentVariable;
+        internal bool ForceAffinityOutOfProc
+            => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)
+                ? Traits.Instance.InProcNodeDisabled || _componentHost.BuildParameters.DisableInProcNode
+                : Traits.Instance.InProcNodeDisabled;
 
         /// <summary>
         /// The path into which debug files will be written.
diff --git a/src/Framework/Traits.cs b/src/Framework/Traits.cs
index 72091def7ac..9a629272942 100644
--- a/src/Framework/Traits.cs
+++ b/src/Framework/Traits.cs
@@ -2,7 +2,6 @@
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
 using System;
-using Microsoft.Build.Framework;
 
 #nullable disable
 
@@ -121,6 +120,8 @@ public Traits()
         public readonly bool DebugScheduler;
         public readonly bool DebugNodeCommunication;
 
+        public readonly bool InProcNodeDisabled = Environment.GetEnvironmentVariable("MSBUILDNOINPROCNODE") == "1";
+
         private static int ParseIntFromEnvironmentVariableOrDefault(string environmentVariable, int defaultValue)
         {
             return int.TryParse(Environment.GetEnvironmentVariable(environmentVariable), out int result)
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index af1472b56d1..d7388f34598 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -3236,7 +3236,7 @@ private static void ProcessFileLoggers(string[][] groupedFileLoggerParameters, L
 
                 // Check to see if there is a possibility we will be logging from an out-of-proc node.
                 // If so (we're multi-proc or the in-proc node is disabled), we register a distributed logger.
-                if (cpuCount == 1 && Environment.GetEnvironmentVariable("MSBUILDNOINPROCNODE") != "1")
+                if (cpuCount == 1 && !Traits.Instance.InProcNodeDisabled)
                 {
                     // We've decided to use the MP logger even in single proc mode.
                     // Switch it on here, rather than in the logger, so that other hosts that use
@@ -3308,7 +3308,7 @@ List<ILogger> loggers
 
                 // Check to see if there is a possibility we will be logging from an out-of-proc node.
                 // If so (we're multi-proc or the in-proc node is disabled), we register a distributed logger.
-                if (cpuCount == 1 && Environment.GetEnvironmentVariable("MSBUILDNOINPROCNODE") != "1")
+                if (cpuCount == 1 && !Traits.Instance.InProcNodeDisabled)
                 {
                     // We've decided to use the MP logger even in single proc mode.
                     // Switch it on here, rather than in the logger, so that other hosts that use
