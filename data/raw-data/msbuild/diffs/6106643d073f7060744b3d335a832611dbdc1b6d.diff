diff --git a/src/Build/BackEnd/Client/MSBuildClient.cs b/src/Build/BackEnd/Client/MSBuildClient.cs
index 45250d3ae6b..93b79288a2f 100644
--- a/src/Build/BackEnd/Client/MSBuildClient.cs
+++ b/src/Build/BackEnd/Client/MSBuildClient.cs
@@ -173,8 +173,6 @@ public MSBuildClientExitResult Execute(CancellationToken cancellationToken)
             // Connect to server.
             if (!TryConnectToServer(serverIsAlreadyRunning ? 1_000 : 20_000))
             {
-                CommunicationsUtilities.Trace("Failure to connect to a server.");
-                _exitResult.MSBuildClientExitType = MSBuildClientExitType.ConnectionError;
                 return _exitResult;
             }
 
@@ -186,6 +184,7 @@ public MSBuildClientExitResult Execute(CancellationToken cancellationToken)
             if (!TrySendBuildCommand())
             {
                 CommunicationsUtilities.Trace("Failure to connect to a server.");
+                // Overwrite the client exit type from unexpected to connection error, since that would trigger the fallback to old build behavior.
                 _exitResult.MSBuildClientExitType = MSBuildClientExitType.ConnectionError;
                 return _exitResult;
             }
@@ -358,7 +357,7 @@ private bool TrySendPacket(Func<INodePacket> packetResolver)
             catch (Exception ex)
             {
                 CommunicationsUtilities.Trace($"Failed to send command packet of type '{packet?.Type.ToString() ?? "Unknown"}' to server: {0}", ex);
-                _exitResult.MSBuildClientExitType = MSBuildClientExitType.ConnectionError;
+                _exitResult.MSBuildClientExitType = MSBuildClientExitType.Unexpected;
                 return false;
             }
 
