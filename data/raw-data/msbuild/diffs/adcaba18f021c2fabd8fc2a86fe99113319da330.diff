diff --git a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
index ea8ab434de9..758681d1a74 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
@@ -464,33 +464,30 @@ private List<ProjectItemInstance> ExpandItemIntoItems(
             }
 
             //// Evaluate, split, expand and subtract any Exclude
-            //HashSet<string> excludesUnescapedForComparison = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
 
-            //foreach (string excludeSplit in excludes)
-            //{
-            //    string[] excludeSplitFiles = EngineFileUtilities.GetFileListUnescaped(
-            //        Project.Directory,
-            //        excludeSplit,
-            //        loggingMechanism: LoggingContext,
-            //        excludeLocation: originalItem.ExcludeLocation);
-
-            //    foreach (string excludeSplitFile in excludeSplitFiles)
-            //    {
-            //        excludesUnescapedForComparison.Add(excludeSplitFile.NormalizeForPathComparison());
-            //    }
-            //}
-
-            //List<ProjectItemInstance> remainingItems = new List<ProjectItemInstance>();
-
-            //for (int i = 0; i < items.Count; i++)
-            //{
+            // HashSet<string> excludesUnescapedForComparison = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
+            // foreach (string excludeSplit in excludes)
+            // {
+            //     string[] excludeSplitFiles = EngineFileUtilities.GetFileListUnescaped(
+            //         Project.Directory,
+            //         excludeSplit,
+            //         loggingMechanism: LoggingContext,
+            //         excludeLocation: originalItem.ExcludeLocation);
+            // foreach (string excludeSplitFile in excludeSplitFiles)
+            //     {
+            //         excludesUnescapedForComparison.Add(excludeSplitFile.NormalizeForPathComparison());
+            //     }
+            // }         
+            // List<ProjectItemInstance> remainingItems = new List<ProjectItemInstance>();             
+            // for (int i = 0; i < items.Count; i++)
+            // {
             //    if (!excludesUnescapedForComparison.Contains(((IItem)items[i]).EvaluatedInclude.NormalizeForPathComparison()))
             //    {
             //        remainingItems.Add(items[i]);
             //    }
-            //}
+            // }
 
-            //items = remainingItems;
+            // items = remainingItems;
 
             // Filter the metadata as appropriate
             if (keepMetadata != null)
