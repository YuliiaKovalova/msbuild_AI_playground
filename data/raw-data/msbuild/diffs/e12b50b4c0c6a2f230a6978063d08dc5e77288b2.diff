diff --git a/src/Build/BackEnd/Node/OutOfProcServerNode.cs b/src/Build/BackEnd/Node/OutOfProcServerNode.cs
index 95637d7b434..b61ec44399f 100644
--- a/src/Build/BackEnd/Node/OutOfProcServerNode.cs
+++ b/src/Build/BackEnd/Node/OutOfProcServerNode.cs
@@ -80,40 +80,14 @@ public OutOfProcServerNode(Func<string, (int exitCode, string exitType)> buildFu
 
         /// <summary>
         /// Starts up the node and processes messages until the node is requested to shut down.
-        /// Assumes no node reuse.
-        /// Assumes low priority is disabled.
         /// </summary>
         /// <param name="shutdownException">The exception which caused shutdown, if any.</param>
         /// <returns>The reason for shutting down.</returns>
         public NodeEngineShutdownReason Run(out Exception? shutdownException)
-        {
-            return Run(false, false, out shutdownException);
-        }
-
-        /// <summary>
-        /// Starts up the node and processes messages until the node is requested to shut down.
-        /// Assumes low priority is disabled.
-        /// </summary>
-        /// <param name="enableReuse">Whether this node is eligible for reuse later.</param>
-        /// <param name="shutdownException">The exception which caused shutdown, if any.</param>
-        /// <returns>The reason for shutting down.</returns>
-        public NodeEngineShutdownReason Run(bool enableReuse, out Exception? shutdownException)
-        {
-            return Run(enableReuse, false, out shutdownException);
-        }
-
-        /// <summary>
-        /// Starts up the node and processes messages until the node is requested to shut down.
-        /// </summary>
-        /// <param name="enableReuse">Whether this node is eligible for reuse later.</param>
-        /// <param name="lowPriority">Whether this node should be running with low priority.</param>
-        /// <param name="shutdownException">The exception which caused shutdown, if any.</param>
-        /// <returns>The reason for shutting down.</returns>
-        public NodeEngineShutdownReason Run(bool enableReuse, bool lowPriority, out Exception? shutdownException)
         {
             string msBuildLocation = BuildEnvironmentHelper.Instance.CurrentMSBuildExePath;
             var handshake = new ServerNodeHandshake(
-                CommunicationsUtilities.GetHandshakeOptions(taskHost: false, lowPriority: lowPriority, is64Bit: EnvironmentUtilities.Is64BitProcess),
+                CommunicationsUtilities.GetHandshakeOptions(taskHost: false, is64Bit: EnvironmentUtilities.Is64BitProcess),
                 msBuildLocation);
 
             string pipeName = NamedPipeUtil.GetPipeNameOrPath("MSBuildServer-" + handshake.ComputeHash());
@@ -318,7 +292,7 @@ private void HandleServerNodeBuildCommand(ServerNodeBuildCommand command)
             var oldErr = Console.Error;
             (int exitCode, string exitType) buildResult;
 
-            // Dispose must be called before the server sends response packet
+            // Dispose must be called before the server sends ServerNodeBuildResult packet
             using (var outWriter = RedirectConsoleWriter.Create(text => SendPacket(new ServerNodeConsoleWrite(text, ConsoleOutput.Standard))))
             using (var errWriter = RedirectConsoleWriter.Create(text => SendPacket(new ServerNodeConsoleWrite(text, ConsoleOutput.Error))))
             {
diff --git a/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt b/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
index e06c2f3a6e3..6e53fab9256 100644
--- a/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
+++ b/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
@@ -5,6 +5,4 @@ Microsoft.Build.Execution.BuildParameters.WarningsNotAsErrors.get -> System.Coll
 Microsoft.Build.Execution.BuildParameters.WarningsNotAsErrors.set -> void
 Microsoft.Build.Execution.OutOfProcServerNode
 Microsoft.Build.Execution.OutOfProcServerNode.OutOfProcServerNode(System.Func<string, (int exitCode, string exitType)> buildFunction) -> void
-Microsoft.Build.Execution.OutOfProcServerNode.Run(bool enableReuse, bool lowPriority, out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.OutOfProcServerNode.Run(bool enableReuse, out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
 Microsoft.Build.Execution.OutOfProcServerNode.Run(out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
diff --git a/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt b/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
index f0979add0bf..487fd0465b1 100644
--- a/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
+++ b/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
@@ -7,6 +7,4 @@ Microsoft.Build.Execution.BuildParameters.WarningsNotAsErrors.get -> System.Coll
 Microsoft.Build.Execution.BuildParameters.WarningsNotAsErrors.set -> void
 Microsoft.Build.Execution.OutOfProcServerNode
 Microsoft.Build.Execution.OutOfProcServerNode.OutOfProcServerNode(System.Func<string, (int exitCode, string exitType)> buildFunction) -> void
-Microsoft.Build.Execution.OutOfProcServerNode.Run(bool enableReuse, bool lowPriority, out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
-Microsoft.Build.Execution.OutOfProcServerNode.Run(bool enableReuse, out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
 Microsoft.Build.Execution.OutOfProcServerNode.Run(out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
\ No newline at end of file
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 7e7fbd89a68..19c98820950 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -2621,11 +2621,6 @@ private static void StartLocalNode(CommandLineSwitches commandLineSwitches)
                 }
                 else if (nodeModeNumber == 8)
                 {
-                    // If FEATURE_NODE_REUSE is OFF, just validates that the switch is OK, and always returns False
-                    bool nodeReuse = ProcessNodeReuseSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.NodeReuse]);
-                    string[] lowPriorityInput = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.LowPriority];
-                    bool lowpriority = lowPriorityInput.Length > 0 && lowPriorityInput[0].Equals("true");
-
                     // Since build function has to reuse code from *this* class and OutOfProcServerNode is in different assembly
                     // we have to pass down xmake build invocation to avoid circular dependency
                     Func<string, (int exitCode, string exitType)> buildFunction = (commandLine) =>
@@ -2656,7 +2651,7 @@ private static void StartLocalNode(CommandLineSwitches commandLineSwitches)
                     OutOfProcServerNode node = new(buildFunction);
 
                     s_isServerNode = true;
-                    shutdownReason = node.Run(nodeReuse, lowpriority, out nodeException);
+                    shutdownReason = node.Run(out nodeException);
 
                     FileUtilities.ClearCacheDirectory();
                 }
