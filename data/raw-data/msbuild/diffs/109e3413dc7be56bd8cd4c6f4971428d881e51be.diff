diff --git a/src/Build/BackEnd/Components/RequestBuilder/Lookup.cs b/src/Build/BackEnd/Components/RequestBuilder/Lookup.cs
index 8f3c13e8646..61a06e43c73 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/Lookup.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/Lookup.cs
@@ -1072,7 +1072,14 @@ public void ApplyModifications(MetadataModifications other)
                 if (other._keepOnlySpecified)
                 {
                     // Any metadata not specified in other must be removed from this one.
-                    _modifications = _modifications.Where(m => !other[m.Key].Remove).ToDictionary(x => x.Key, x => x.Value);
+                    var metadataToRemove = new List<string>(_modifications.Keys);
+                    foreach (var metadata in metadataToRemove)
+                    {
+                        if (other[metadata].Remove)
+                        {
+                            _modifications.Remove(metadata);
+                        }
+                    }
                 }
 
                 _keepOnlySpecified |= other._keepOnlySpecified;
diff --git a/src/Tasks/AssemblyDependency/ReferenceTable.cs b/src/Tasks/AssemblyDependency/ReferenceTable.cs
index 707527252e4..661807b1619 100644
--- a/src/Tasks/AssemblyDependency/ReferenceTable.cs
+++ b/src/Tasks/AssemblyDependency/ReferenceTable.cs
@@ -2215,9 +2215,12 @@ private static void RemoveReferencesWithoutConflicts
             Dictionary<string, List<AssemblyNameReference>> baseNameToReferences
         )
         {
-            foreach (KeyValuePair<string, List<AssemblyNameReference>> kvp in baseNameToReferences.Where(baseName => baseName.Value.Count != 1))
+            foreach (KeyValuePair<string, List<AssemblyNameReference>> kvp in baseNameToReferences)
             {
-                baseNameToReferences.Remove(kvp.Key);
+                if (kvp.Value.Count == 1)
+                {
+                    baseNameToReferences.Remove(kvp.Key);
+                }
             }
         }
 
