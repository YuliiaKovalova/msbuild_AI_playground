diff --git a/src/Build/Construction/Solution/ProjectInSolution.cs b/src/Build/Construction/Solution/ProjectInSolution.cs
index 2697a7b6e76..80d7bdaad22 100644
--- a/src/Build/Construction/Solution/ProjectInSolution.cs
+++ b/src/Build/Construction/Solution/ProjectInSolution.cs
@@ -170,18 +170,23 @@ public string AbsolutePath
                 {
                     _absolutePath = Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath);
 
-                    try
+                    // For web site projects, Visual Studio stores the URL of the site as the relative path so it cannot be normalized.
+                    // Legacy behavior dictates that we must just return the result of Path.Combine()
+                    if (!Uri.TryCreate(_relativePath, UriKind.Absolute, out Uri _))
                     {
+                        try
+                        {
 #if NETFRAMEWORK && !MONO
-                        _absolutePath = Path.GetFullPath(_absolutePath);
+                            _absolutePath = Path.GetFullPath(_absolutePath);
 #else
-                        _absolutePath = FileUtilities.NormalizePath(_absolutePath);
+                            _absolutePath = FileUtilities.NormalizePath(_absolutePath);
 #endif
-                    }
-                    catch (Exception)
-                    {
-                        // The call to GetFullPath can throw if the relative path is a URL or the paths are too long for the current file system
-                        // This falls back to previous behavior of returning a path that may not be correct but at least returns some value
+                        }
+                        catch (Exception)
+                        {
+                            // The call to GetFullPath() can throw if the relative path is some unsupported value or the paths are too long for the current file system
+                            // This falls back to previous behavior of returning a path that may not be correct but at least returns some value
+                        }
                     }
                 }
 
