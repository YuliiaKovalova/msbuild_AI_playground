diff --git a/src/Build.OM.UnitTests/Construction/ProjectImportGroupElement_Tests.cs b/src/Build.OM.UnitTests/Construction/ProjectImportGroupElement_Tests.cs
index 924340b3842..bd5ec231860 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectImportGroupElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectImportGroupElement_Tests.cs
@@ -31,7 +31,7 @@ public void AddImportWhenNoImportGroupExists()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
 
             project.AddImport("b.proj");
@@ -71,7 +71,7 @@ public void AddImportToLastImportGroupWithNoCondition()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
 
             project.AddImport("e.proj");
@@ -117,7 +117,7 @@ public void AddImportOnlyConditionedImportGroupsExist()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
 
             project.AddImport("d.proj");
@@ -161,7 +161,7 @@ public void ReadNoChild()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
 
             ProjectImportGroupElement importGroup = (ProjectImportGroupElement)Helpers.GetFirst(project.ImportGroups);
@@ -261,7 +261,7 @@ public void ReadBasic()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
 
             List<ProjectImportElement> imports = Helpers.MakeList(project.Imports);
@@ -293,7 +293,7 @@ public void ReadMultipleImportGroups()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
 
             List<ProjectImportElement> imports = Helpers.MakeList(project.Imports);
@@ -325,7 +325,7 @@ public void SetProjectValid()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
 
             ProjectImportGroupElement importGroup = (ProjectImportGroupElement)Helpers.GetFirst(project.Children);
diff --git a/src/Build.OM.UnitTests/Construction/ProjectItemDefinitionElement_Tests.cs b/src/Build.OM.UnitTests/Construction/ProjectItemDefinitionElement_Tests.cs
index 61f7167bbf6..9631409948c 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectItemDefinitionElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectItemDefinitionElement_Tests.cs
@@ -31,7 +31,7 @@ public void ReadNoChildren()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectItemDefinitionGroupElement itemDefinitionGroup = (ProjectItemDefinitionGroupElement)Helpers.GetFirst(project.Children);
             ProjectItemDefinitionElement itemDefinition = Helpers.GetFirst(itemDefinitionGroup.ItemDefinitions);
@@ -55,7 +55,7 @@ public void ReadBasic()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectItemDefinitionGroupElement itemDefinitionGroup = (ProjectItemDefinitionGroupElement)Helpers.GetFirst(project.Children);
             ProjectItemDefinitionElement definition = Helpers.GetFirst(itemDefinitionGroup.ItemDefinitions);
@@ -104,7 +104,7 @@ public void ReadMetadata()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectItemDefinitionGroupElement itemDefinitionGroup = (ProjectItemDefinitionGroupElement)Helpers.GetFirst(project.Children);
             ProjectItemDefinitionElement itemDefinition = Helpers.GetFirst(itemDefinitionGroup.ItemDefinitions);
diff --git a/src/Build.OM.UnitTests/Construction/ProjectItemDefinitionGroupElement_Tests.cs b/src/Build.OM.UnitTests/Construction/ProjectItemDefinitionGroupElement_Tests.cs
index 8609f0b9423..16bc44be6e5 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectItemDefinitionGroupElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectItemDefinitionGroupElement_Tests.cs
@@ -56,7 +56,7 @@ public void ReadNoChildren()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectItemDefinitionGroupElement itemDefinitionGroup = (ProjectItemDefinitionGroupElement)Helpers.GetFirst(project.Children);
 
@@ -81,7 +81,7 @@ public void ReadBasic()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
 
             var itemDefinitionGroups = Helpers.MakeList(project.ItemDefinitionGroups);
diff --git a/src/Build.OM.UnitTests/Construction/ProjectItemGroupElement_tests.cs b/src/Build.OM.UnitTests/Construction/ProjectItemGroupElement_tests.cs
index b79815ad3d0..5be0d1fe5dc 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectItemGroupElement_tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectItemGroupElement_tests.cs
@@ -39,7 +39,7 @@ public void ReadEmptyItemGroup()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectItemGroupElement group = (ProjectItemGroupElement)Helpers.GetFirst(project.Children);
 
@@ -61,7 +61,7 @@ public void ReadItemGroupTwoItems()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectItemGroupElement group = (ProjectItemGroupElement)Helpers.GetFirst(project.Children);
 
diff --git a/src/Build.OM.UnitTests/Construction/ProjectOnErrorElement_Tests.cs b/src/Build.OM.UnitTests/Construction/ProjectOnErrorElement_Tests.cs
index 10665563b12..b4ddbb493b4 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectOnErrorElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectOnErrorElement_Tests.cs
@@ -46,7 +46,7 @@ public void ReadTargetTwoOnErrors()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectTargetElement target = (ProjectTargetElement)Helpers.GetFirst(project.Children);
             var onErrors = Helpers.MakeList(target.OnErrors);
@@ -298,7 +298,7 @@ private static ProjectOnErrorElement GetOnError()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectTargetElement target = (ProjectTargetElement)Helpers.GetFirst(project.Children);
             ProjectOnErrorElement onError = (ProjectOnErrorElement)Helpers.GetFirst(target.Children);
diff --git a/src/Build.OM.UnitTests/Construction/ProjectOutputElement_Tests.cs b/src/Build.OM.UnitTests/Construction/ProjectOutputElement_Tests.cs
index fe42a33f9be..bd8f0391d72 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectOutputElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectOutputElement_Tests.cs
@@ -287,7 +287,7 @@ private static ProjectOutputElement GetOutputItem()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectTargetElement target = (ProjectTargetElement)Helpers.GetFirst(project.Children);
             ProjectTaskElement task = (ProjectTaskElement)Helpers.GetFirst(target.Children);
@@ -310,7 +310,7 @@ private static ProjectOutputElement GetOutputProperty()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectTargetElement target = (ProjectTargetElement)Helpers.GetFirst(project.Children);
             ProjectTaskElement task = (ProjectTaskElement)Helpers.GetFirst(target.Children);
diff --git a/src/Build.OM.UnitTests/Construction/ProjectPropertyElement_Tests.cs b/src/Build.OM.UnitTests/Construction/ProjectPropertyElement_Tests.cs
index 7e2d84b8735..a4396b2b6d8 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectPropertyElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectPropertyElement_Tests.cs
@@ -44,7 +44,7 @@ public void ReadPropertyWithChildren()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectPropertyGroupElement propertyGroup = (ProjectPropertyGroupElement)Helpers.GetFirst(project.Children);
             ProjectPropertyElement property = Helpers.GetFirst(propertyGroup.Properties);
@@ -275,7 +275,7 @@ private static ProjectPropertyElement GetPropertyXml()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectPropertyGroupElement propertyGroup = (ProjectPropertyGroupElement)Helpers.GetFirst(project.Children);
             ProjectPropertyElement property = Helpers.GetFirst(propertyGroup.Properties);
diff --git a/src/Build.OM.UnitTests/Construction/ProjectPropertyGroupElement_Tests.cs b/src/Build.OM.UnitTests/Construction/ProjectPropertyGroupElement_Tests.cs
index 7350965edac..10b21f0a8ad 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectPropertyGroupElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectPropertyGroupElement_Tests.cs
@@ -38,7 +38,7 @@ public void ReadEmptyPropertyGroup()
                     </Project>
                 ");
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectPropertyGroupElement group = (ProjectPropertyGroupElement)Helpers.GetFirst(project.Children);
 
@@ -60,7 +60,7 @@ public void ReadPropertyGroupTwoProperties()
                     </Project>
                 ");
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectPropertyGroupElement group = (ProjectPropertyGroupElement)Helpers.GetFirst(project.Children);
 
diff --git a/src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs b/src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs
index 776f81d020d..cdbf64f9774 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs
@@ -56,7 +56,7 @@ public void ReadEmptyTarget()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectTargetElement target = (ProjectTargetElement)Helpers.GetFirst(project.Children);
 
@@ -394,7 +394,7 @@ private static ProjectTargetElement GetTargetXml()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectTargetElement target = (ProjectTargetElement)Helpers.GetFirst(project.Children);
             return target;
diff --git a/src/Build.OM.UnitTests/Construction/ProjectTaskElement_Tests.cs b/src/Build.OM.UnitTests/Construction/ProjectTaskElement_Tests.cs
index 5dc0ea98b9e..353d2031a3d 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectTaskElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectTaskElement_Tests.cs
@@ -299,7 +299,7 @@ public void SetCondition()
         /// </summary>
         private static ProjectTaskElement GetTaskFromContent(string content)
         {
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectTargetElement target = (ProjectTargetElement)Helpers.GetFirst(project.Children);
             return (ProjectTaskElement)Helpers.GetFirst(target.Children);
diff --git a/src/Build.OM.UnitTests/Construction/ProjectUsingTaskElement_Tests.cs b/src/Build.OM.UnitTests/Construction/ProjectUsingTaskElement_Tests.cs
index e7de9167df2..64c23a0262a 100644
--- a/src/Build.OM.UnitTests/Construction/ProjectUsingTaskElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/ProjectUsingTaskElement_Tests.cs
@@ -417,7 +417,7 @@ RANDOM GOO
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectUsingTaskElement usingTask = (ProjectUsingTaskElement)Helpers.GetFirst(project.Children);
             Assert.NotNull(usingTask);
@@ -479,7 +479,7 @@ private static ProjectUsingTaskElement GetUsingTaskFactoryRuntimeAndPlatform()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectUsingTaskElement usingTask = (ProjectUsingTaskElement)Helpers.GetFirst(project.Children);
             return usingTask;
@@ -497,7 +497,7 @@ private static ProjectUsingTaskElement GetUsingTaskAssemblyFile()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectUsingTaskElement usingTask = (ProjectUsingTaskElement)Helpers.GetFirst(project.Children);
             return usingTask;
@@ -514,7 +514,7 @@ private static ProjectUsingTaskElement GetUsingTaskAssemblyName()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectUsingTaskElement usingTask = (ProjectUsingTaskElement)Helpers.GetFirst(project.Children);
             return usingTask;
diff --git a/src/Build.OM.UnitTests/Construction/UsingTaskBodyElement_Tests.cs b/src/Build.OM.UnitTests/Construction/UsingTaskBodyElement_Tests.cs
index fc3ea0d47e4..5a0d09d39e3 100644
--- a/src/Build.OM.UnitTests/Construction/UsingTaskBodyElement_Tests.cs
+++ b/src/Build.OM.UnitTests/Construction/UsingTaskBodyElement_Tests.cs
@@ -135,7 +135,7 @@ private static ProjectUsingTaskBodyElement GetBodyXml()
                     </Project>
                 ";
 
-                  using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement project = projectRootElementFromString.Project;
             ProjectUsingTaskElement usingTask = (ProjectUsingTaskElement)Helpers.GetFirst(project.Children);
             ProjectUsingTaskBodyElement body = usingTask.TaskBody;
diff --git a/src/Build.OM.UnitTests/Definition/ProjectCollection_Tests.cs b/src/Build.OM.UnitTests/Definition/ProjectCollection_Tests.cs
index 3173951625f..ef18089513e 100644
--- a/src/Build.OM.UnitTests/Definition/ProjectCollection_Tests.cs
+++ b/src/Build.OM.UnitTests/Definition/ProjectCollection_Tests.cs
@@ -529,7 +529,7 @@ public void ReloadProjectWithInvalidToolsVersionInFile()
 
             using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
-            project.FullPath="c:\\123.proj";
+            project.FullPath = "c:\\123.proj";
 
             Project project2 = ProjectCollection.GlobalProjectCollection.LoadProject("c:\\123.proj", null, null);
 
diff --git a/src/Build.OM.UnitTests/Definition/ProjectItemDefinition_Tests.cs b/src/Build.OM.UnitTests/Definition/ProjectItemDefinition_Tests.cs
index bceb63d86cf..9d795ecaa6f 100644
--- a/src/Build.OM.UnitTests/Definition/ProjectItemDefinition_Tests.cs
+++ b/src/Build.OM.UnitTests/Definition/ProjectItemDefinition_Tests.cs
@@ -211,7 +211,7 @@ public void BatchingConsidersItemDefinitionMetadata()
   </Target>
 </Project>");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             MockLogger logger = new MockLogger();
@@ -242,7 +242,7 @@ public void ExpandBuiltInMetadataAtPointOfUse()
   </ItemGroup>
 </Project>");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItem item = project.GetItems("i").ElementAt(0);
@@ -269,7 +269,7 @@ public void ExpandBuiltInMetadataAtPointOfUse_ReferToMetadataAbove()
   </ItemGroup>
 </Project>");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItem item = project.GetItems("i").ElementAt(0);
@@ -296,7 +296,7 @@ public void ExpandBuiltInMetadataAtPointOfUse_MixtureOfCustomAndBuiltIn()
   </ItemGroup>
 </Project>");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItem item = project.GetItems("i").ElementAt(0);
@@ -327,7 +327,7 @@ public void ExpandBuiltInMetadataAtPointOfUse_CustomEvaluationNeverDelayed()
   </ItemGroup>
 </Project>");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItem item = project.GetItems("i").ElementAt(0);
@@ -355,7 +355,7 @@ public void ExpandBuiltInMetadataAtPointOfUse_DoNotDoubleEvaluate()
   </ItemGroup>
 </Project>");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItem item = project.GetItems("i").ElementAt(0);
@@ -385,7 +385,7 @@ public void ExpandBuiltInMetadataAtPointOfUse_CopyItems()
   </ItemGroup>
 </Project>");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItem item = project.GetItems("i").ElementAt(0);
@@ -413,7 +413,7 @@ public void ExpandBuiltInMetadataAtPointOfUse_UseInTransform()
   </ItemGroup>
 </Project>");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItem item = project.GetItems("i").ElementAt(0);
@@ -448,7 +448,7 @@ public void ExpandBuiltInMetadataAtPointOfUse_UseInBatching()
   </Target>
 </Project>");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectInstance instance = project.CreateProjectInstance();
@@ -655,7 +655,7 @@ public void ExpandBuiltInMetadataAtPointOfUse_UnquotedQualifiedCustomAllowedOnIt
   </ItemDefinitionGroup>
 </Project>");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;  // No exception
         }
     }
diff --git a/src/Build.OM.UnitTests/Definition/ProjectItem_Tests.cs b/src/Build.OM.UnitTests/Definition/ProjectItem_Tests.cs
index ffdd743ab07..490cc3cce47 100644
--- a/src/Build.OM.UnitTests/Definition/ProjectItem_Tests.cs
+++ b/src/Build.OM.UnitTests/Definition/ProjectItem_Tests.cs
@@ -158,7 +158,7 @@ public void GetMetadataObjectsFromDefinition()
                     </Project>
                 ";
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItem item = Helpers.GetFirst(project.GetItems("i"));
@@ -1193,7 +1193,7 @@ public void CopyFromWithItemListExpressionClonesMetadata()
                     </Project>
                 ";
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             project.GetItems("i").First().SetMetadataValue("m", "m2");
@@ -1236,7 +1236,7 @@ public void CopyFromWithItemListExpressionDoesNotCloneDefinitionMetadata()
                     </Project>
                 ";
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItem item1 = project.GetItems("i").First();
@@ -1287,7 +1287,7 @@ public void CopyFromWithItemListExpressionClonesDefinitionMetadata_Variation()
                     </Project>
                 ";
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItem item1 = project.GetItems("i").First();
@@ -1357,7 +1357,7 @@ public void CopyWithItemDefinition()
                     </Project>
                 ";
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             Assert.Equal("l0", project.GetItems("i").First().GetMetadataValue("l"));
@@ -1455,7 +1455,7 @@ public void CopyWithItemDefinition2()
                     </Project>
                 ";
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             Assert.Equal("l0", project.GetItems("i").First().GetMetadataValue("l"));
@@ -3764,10 +3764,10 @@ public void FileNameMetadataEvaluationShouldNotDependsFromPlatformSpecificSlashe
 
     public class ProjectItemWithOptimizations_Tests : ProjectItem_Tests
     {
-       public ProjectItemWithOptimizations_Tests()
-       {
-           // Make sure we always use the dictionary-based Remove logic.
-           _env.SetEnvironmentVariable("MSBUILDDICTIONARYBASEDITEMREMOVETHRESHOLD", "0");
-       }
+        public ProjectItemWithOptimizations_Tests()
+        {
+            // Make sure we always use the dictionary-based Remove logic.
+            _env.SetEnvironmentVariable("MSBUILDDICTIONARYBASEDITEMREMOVETHRESHOLD", "0");
+        }
     }
 }
diff --git a/src/Build.OM.UnitTests/Definition/ProjectMetadata_Tests.cs b/src/Build.OM.UnitTests/Definition/ProjectMetadata_Tests.cs
index ce247e2ac96..c0807e37e68 100644
--- a/src/Build.OM.UnitTests/Definition/ProjectMetadata_Tests.cs
+++ b/src/Build.OM.UnitTests/Definition/ProjectMetadata_Tests.cs
@@ -156,7 +156,7 @@ public void SetValueWithQualifiedMetadataExpressionOtherItemType()
                     </Project>
                 ");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectMetadata metadatum = Helpers.GetFirst(project.GetItems("j")).GetMetadata("m1");
@@ -183,7 +183,7 @@ public void SetValueWithQualifiedMetadataExpressionSameItemType()
                     </Project>
                 ");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectMetadata metadatum = Helpers.GetFirst(project.GetItems("i")).GetMetadata("m1");
@@ -209,7 +209,7 @@ public void SetValueWithQualifiedMetadataExpressionSameMetadata()
                     </Project>
                 ");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectMetadata metadatum = Helpers.GetFirst(project.GetItems("i")).GetMetadata("m1");
@@ -236,7 +236,7 @@ public void SetValueWithUnqualifiedMetadataExpression()
                     </Project>
                 ");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectMetadata metadatum = Helpers.GetFirst(project.GetItems("i")).GetMetadata("m1");
@@ -268,7 +268,7 @@ public void SetValueWithUnqualifiedMetadataExpressionFromItemDefinition()
                     </Project>
                 ");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectMetadata metadatum = Helpers.GetFirst(project.GetItems("i")).GetMetadata("m1");
@@ -300,7 +300,7 @@ public void SetValueWithQualifiedMetadataExpressionFromItemDefinition()
                     </Project>
                 ");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectMetadata metadatum = Helpers.GetFirst(project.GetItems("i")).GetMetadata("m1");
@@ -332,7 +332,7 @@ public void SetValueWithQualifiedMetadataExpressionWrongItemType()
                     </Project>
                 ");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectMetadata metadatum = Helpers.GetFirst(project.GetItems("i")).GetMetadata("m1");
@@ -363,7 +363,7 @@ public void SetValueOnItemDefinitionWithUnqualifiedMetadataExpression()
                     </Project>
                 ");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItemDefinition itemDefinition;
@@ -392,7 +392,7 @@ public void SetValueOnItemDefinitionWithQualifiedMetadataExpression()
                     </Project>
                 ");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItemDefinition itemDefinition;
@@ -426,7 +426,7 @@ public void SetValueOnItemDefinitionWithQualifiedMetadataExpressionWrongItemType
                     </Project>
                 ");
 
-          using ProjectFromString projectFromString = new(content);
+            using ProjectFromString projectFromString = new(content);
             Project project = projectFromString.Project;
 
             ProjectItemDefinition itemDefinition;
diff --git a/src/Build.OM.UnitTests/Instance/ProjectItemInstance_Tests.cs b/src/Build.OM.UnitTests/Instance/ProjectItemInstance_Tests.cs
index 475b5457fa6..e8259bd3120 100644
--- a/src/Build.OM.UnitTests/Instance/ProjectItemInstance_Tests.cs
+++ b/src/Build.OM.UnitTests/Instance/ProjectItemInstance_Tests.cs
@@ -134,7 +134,7 @@ public void ImportMetadataAddsAndOverwrites()
             item.SetMetadata("m1", "v1");
             item.SetMetadata("m2", "v0");
 
-            ((IMetadataContainer) item).ImportMetadata(new Dictionary<string, string>
+            ((IMetadataContainer)item).ImportMetadata(new Dictionary<string, string>
             {
                 { "m2", "v2" },
                 { "m3", "v3" },
diff --git a/src/Build.OM.UnitTests/Instance/ProjectTaskOutputItemInstance_Tests.cs b/src/Build.OM.UnitTests/Instance/ProjectTaskOutputItemInstance_Tests.cs
index 3025a115129..716c675982d 100644
--- a/src/Build.OM.UnitTests/Instance/ProjectTaskOutputItemInstance_Tests.cs
+++ b/src/Build.OM.UnitTests/Instance/ProjectTaskOutputItemInstance_Tests.cs
@@ -45,7 +45,7 @@ private static ProjectTaskOutputItemInstance GetSampleTaskOutputInstance()
                     </Project>
                 ";
 
-           using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement xml = projectRootElementFromString.Project;
             Project project = new Project(xml);
             ProjectInstance instance = project.CreateProjectInstance();
diff --git a/src/Build.OM.UnitTests/Instance/ProjectTaskOutputPropertyInstance_Tests.cs b/src/Build.OM.UnitTests/Instance/ProjectTaskOutputPropertyInstance_Tests.cs
index 8f5d86e1c81..8c9e4770842 100644
--- a/src/Build.OM.UnitTests/Instance/ProjectTaskOutputPropertyInstance_Tests.cs
+++ b/src/Build.OM.UnitTests/Instance/ProjectTaskOutputPropertyInstance_Tests.cs
@@ -45,7 +45,7 @@ private static ProjectTaskOutputPropertyInstance GetSampleTaskOutputInstance()
                     </Project>
                 ";
 
-           using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement xml = projectRootElementFromString.Project;
             Project project = new Project(xml);
             ProjectInstance instance = project.CreateProjectInstance();
diff --git a/src/Build.OM.UnitTests/ObjectModelRemoting/RemoteProjectsProviderMock/ExporterMock.cs b/src/Build.OM.UnitTests/ObjectModelRemoting/RemoteProjectsProviderMock/ExporterMock.cs
index 516bbd834ff..05112a6ed62 100644
--- a/src/Build.OM.UnitTests/ObjectModelRemoting/RemoteProjectsProviderMock/ExporterMock.cs
+++ b/src/Build.OM.UnitTests/ObjectModelRemoting/RemoteProjectsProviderMock/ExporterMock.cs
@@ -137,6 +137,7 @@ internal interface ILinkMock
     internal interface IImportHolder
     {
         ProjectCollectionLinker Linker { get; }
+
         UInt32 LocalId { get; }
     }
 
@@ -160,14 +161,16 @@ private ProjectCollectionLinker(ConnectedProjectCollections group)
         }
 
         public Project LoadProject(string path) => this.Collection.LoadProject(path);
+
         public Project LoadProjectIgnoreMissingImports(string path) => LoadProjectWithSettings(path, ProjectLoadSettings.IgnoreMissingImports);
+
         public Project LoadProjectWithSettings(string path, ProjectLoadSettings settings) => new Project(path, null, null, this.Collection, settings);
 
 
         public Project LoadInMemoryWithSettings(string content, ProjectLoadSettings settings = ProjectLoadSettings.Default)
         {
             content = ObjectModelHelpers.CleanupFileContents(content);
-           using ProjectRootElementFromString projectRootElementFromString = new(content);
+            using ProjectRootElementFromString projectRootElementFromString = new(content);
             ProjectRootElement xml = projectRootElementFromString.Project;
             Project project = new Project(xml, null, null, this.Collection, settings);
             return project;
@@ -390,6 +393,7 @@ public override void Initialize(uint key, RMock source, object context)
             public ProjectCollectionLinker Linker { get; private set; }
 
             public T Linked { get; private set; }
+
             public RMock Remoter { get; private set; }
         }
 
@@ -402,6 +406,7 @@ public static ConnectedProjectCollections CreateGroup()
         internal sealed class ConnectedProjectCollections
         {
             private List<ProjectCollectionLinker> group = new List<ProjectCollectionLinker>();
+
             public ProjectCollectionLinker AddNew()
             {
                 var linker = new ProjectCollectionLinker(this);
@@ -449,7 +454,9 @@ public ExternalConnection(ProjectCollectionLinker linker)
                 this.Linker = linker;
                 this.ActiveImports = ImportedLinksMap.Create();
             }
+
             public ProjectCollectionLinker Linker { get; }
+
             public ImportedLinksMap ActiveImports { get; private set; }
 
             public void Clear()
