diff --git a/src/Build/Evaluation/ProjectRootElementCache.cs b/src/Build/Evaluation/ProjectRootElementCache.cs
index b60db3fcbcd..df98809f549 100644
--- a/src/Build/Evaluation/ProjectRootElementCache.cs
+++ b/src/Build/Evaluation/ProjectRootElementCache.cs
@@ -75,6 +75,14 @@ internal class ProjectRootElementCache : ProjectRootElementCacheBase
         /// </summary>
         private static bool s_debugLogCacheActivity;
 
+        /// <summary>
+        /// Whether the cache should check file content for cache entry invalidation.
+        /// </summary>
+        /// <remarks>
+        /// Value shall be true only in case of testing. Outside QA tests it shall be false.
+        /// </remarks>
+        private static bool s_сheckFileContent;
+
         /// <summary>
         /// The map of weakly-held ProjectRootElement's
         /// </summary>
@@ -116,6 +124,7 @@ static ProjectRootElementCache()
             }
 
             s_debugLogCacheActivity = Environment.GetEnvironmentVariable("MSBUILDDEBUGXMLCACHE") == "1";
+            s_сheckFileContent = !String.IsNullOrEmpty(Environment.GetEnvironmentVariable("MSBUILDCACHECHECKFILECONTENT"));
         }
 
         /// <summary>
@@ -155,7 +164,7 @@ private bool IsInvalidEntry(string projectFile, ProjectRootElement projectRootEl
                         // it may not be a problem.
                         return true;
                     }
-                    else if (!String.IsNullOrEmpty(Environment.GetEnvironmentVariable("MSBUILDCACHECHECKFILECONTENT")))
+                    else if (s_сheckFileContent)
                     {
                         // QA tests run too fast for the timestamp check to work. This environment variable is for their
                         // use: it checks the file content as well as the timestamp. That's better than completely disabling
@@ -270,7 +279,7 @@ internal override ProjectRootElement Get(string projectFile, OpenProjectRootElem
                 // An implicit load will never reset the explicit flag.
                 if (isExplicitlyLoaded)
                 {
-                    projectRootElement?.MarkAsExplicitlyLoaded();
+                    projectRootElement.MarkAsExplicitlyLoaded();
                 }
 
                 // Update cache element.
