diff --git a/src/Shared/AwaitExtensions.cs b/src/Shared/AwaitExtensions.cs
index 9f17ddbaf2b..0e4c472fb72 100644
--- a/src/Shared/AwaitExtensions.cs
+++ b/src/Shared/AwaitExtensions.cs
@@ -238,11 +238,8 @@ protected override bool TryExecuteTaskInline(Task task, bool taskWasPreviouslyQu
 
         private sealed class DedicatedThreadsTaskScheduler : TaskScheduler
         {
-            private static readonly int _maxThreads = Environment.ProcessorCount;
-
             private readonly BlockingCollection<Task> _tasks = new BlockingCollection<Task>();
             private int _availableThreads = 0;
-            private int _createdThreads = 0;
 
             protected override void QueueTask(Task task)
             {
@@ -272,25 +269,7 @@ private void RequestThread()
                 if (count == 0)
                 {
                     // No threads were available for request
-                    TryInjectThread();
-                }
-            }
-
-            private void TryInjectThread()
-            {
-                // Increment created thread, but don't go over maxThreads,
-                // Add thread if we incremented
-                var count = Volatile.Read(ref _createdThreads);
-                while (count < _maxThreads)
-                {
-                    var prev = Interlocked.CompareExchange(ref _createdThreads, count + 1, count);
-                    if (prev == count)
-                    {
-                        // Add thread
-                        InjectThread();
-                        break;
-                    }
-                    count = prev;
+                    InjectThread();
                 }
             }
 
