diff --git a/src/Shared/TaskLoggingHelper.cs b/src/Shared/TaskLoggingHelper.cs
index ac5df4c7cb3..4e0c4548bd7 100644
--- a/src/Shared/TaskLoggingHelper.cs
+++ b/src/Shared/TaskLoggingHelper.cs
@@ -508,7 +508,7 @@ public void LogMessageFromResources(MessageImportance importance, string message
         /// </summary>
         /// <param name="e">Exception to flatten.</param>
         /// <returns></returns>
-        public string GetInnerExceptionMessageString(Exception e)
+        public static string GetInnerExceptionMessageString(Exception e)
         {
             StringBuilder flattenedMessage = new StringBuilder(e.Message);
             Exception excep = e;
diff --git a/src/Tasks/DownloadFile.cs b/src/Tasks/DownloadFile.cs
index 8bfb08f9893..efe54f514ca 100644
--- a/src/Tasks/DownloadFile.cs
+++ b/src/Tasks/DownloadFile.cs
@@ -127,7 +127,7 @@ private async Task<bool> ExecuteAsync()
                     }
                     else
                     {
-                        string flattenedMessage = Log.GetInnerExceptionMessageString(e);
+                        string flattenedMessage = TaskLoggingHelper.GetInnerExceptionMessageString(e);
                         Log.LogErrorWithCodeFromResources("DownloadFile.ErrorDownloading", SourceUrl, flattenedMessage);
                         Log.LogMessage(MessageImportance.Low, actualException.ToString());
                         break;
diff --git a/src/Tasks/XslTransformation.cs b/src/Tasks/XslTransformation.cs
index 948b2e03ce9..e92eb5636c2 100644
--- a/src/Tasks/XslTransformation.cs
+++ b/src/Tasks/XslTransformation.cs
@@ -174,7 +174,7 @@ public override bool Execute()
             }
             catch (Exception e) when (!ExceptionHandling.IsCriticalException(e))
             {
-                string flattenedMessage = Log.GetInnerExceptionMessageString(e);
+                string flattenedMessage = TaskLoggingHelper.GetInnerExceptionMessageString(e);
                 Log.LogErrorWithCodeFromResources("XslTransform.TransformError", flattenedMessage);
                 Log.LogMessage(MessageImportance.Low, e.ToString());
                 return false;
