diff --git a/src/Build/Logging/FancyLogger/FancyLoggerMessageNode.cs b/src/Build/Logging/FancyLogger/FancyLoggerMessageNode.cs
index be8079f7a16..93fdc56ff30 100644
--- a/src/Build/Logging/FancyLogger/FancyLoggerMessageNode.cs
+++ b/src/Build/Logging/FancyLogger/FancyLoggerMessageNode.cs
@@ -51,12 +51,23 @@ public void Log()
         {
             if (Line == null) return;
             // Get color
-            ANSIBuilder.Formatting.ForegroundColor foregroundColor = ANSIBuilder.Formatting.ForegroundColor.Default;
-            if (Type == MessageType.HighPriorityMessage) foregroundColor = ANSIBuilder.Formatting.ForegroundColor.Default;
-            else if (Type == MessageType.Warning) foregroundColor = ANSIBuilder.Formatting.ForegroundColor.Yellow;
-            else if (Type == MessageType.Error) foregroundColor = ANSIBuilder.Formatting.ForegroundColor.Red;
-
-            FancyLoggerBuffer.UpdateLine(Line.Id, $"    └── {ANSIBuilder.Formatting.Color(ANSIBuilder.Formatting.Italic(Message), foregroundColor)}");
+            if (Type == MessageType.HighPriorityMessage)
+            {
+                FancyLoggerBuffer.UpdateLine(Line.Id, $"    └── {ANSIBuilder.Formatting.Italic(Message)}");
+            }
+            else if (Type == MessageType.Warning)
+            {
+                FancyLoggerBuffer.UpdateLine(Line.Id, $"    └── {ANSIBuilder.Formatting.Color(
+                    ANSIBuilder.Formatting.Italic($"{ANSIBuilder.Formatting.Dim("Warning:")} {Message}"),
+                    ANSIBuilder.Formatting.ForegroundColor.Yellow
+                )}");
+            } else if (Type == MessageType.Error)
+            {
+                FancyLoggerBuffer.UpdateLine(Line.Id, $"    └── {ANSIBuilder.Formatting.Color(
+                    ANSIBuilder.Formatting.Italic($"{ANSIBuilder.Formatting.Dim("Error:")} {Message}"),
+                    ANSIBuilder.Formatting.ForegroundColor.Red
+                )}");
+            }
         }
     }
 }
diff --git a/src/Build/Logging/FancyLogger/FancyLoggerProjectNode.cs b/src/Build/Logging/FancyLogger/FancyLoggerProjectNode.cs
index bb40ecb3284..9a125c7996d 100644
--- a/src/Build/Logging/FancyLogger/FancyLoggerProjectNode.cs
+++ b/src/Build/Logging/FancyLogger/FancyLoggerProjectNode.cs
@@ -36,6 +36,10 @@ private static string GetUnambiguousPath(string path)
         public FancyLoggerTargetNode? CurrentTargetNode;
         // Messages, errors and warnings
         List<FancyLoggerMessageNode> AdditionalDetails = new();
+        // Count messages, warnings and errors
+        public int MessageCount = 0;
+        public int WarningCount = 0;
+        public int ErrorCount = 0;
         public FancyLoggerProjectNode(ProjectStartedEventArgs args)
         {
             Id = args.ProjectId;
@@ -56,8 +60,13 @@ public void Log()
         {
             // Project details
             string lineContents = ANSIBuilder.Alignment.SpaceBetween(
-                $"{(Finished ? ANSIBuilder.Formatting.Color("✓", ANSIBuilder.Formatting.ForegroundColor.Green) : ANSIBuilder.Graphics.Spinner())} {ANSIBuilder.Formatting.Dim("Project: ")} {ANSIBuilder.Formatting.Color(ANSIBuilder.Formatting.Bold(GetUnambiguousPath(ProjectPath)), Finished ? ANSIBuilder.Formatting.ForegroundColor.Green : ANSIBuilder.Formatting.ForegroundColor.Default )} [{TargetFramework}]",
-                $"({FinishedTargets} targets completed)",
+                // Show indicator
+                (Finished ? ANSIBuilder.Formatting.Color("✓", ANSIBuilder.Formatting.ForegroundColor.Green) : ANSIBuilder.Graphics.Spinner()) +
+                // Project
+                ANSIBuilder.Formatting.Dim("Project: ") +
+                // Project file path with color
+                $"{ANSIBuilder.Formatting.Color(ANSIBuilder.Formatting.Bold(GetUnambiguousPath(ProjectPath)), Finished ? ANSIBuilder.Formatting.ForegroundColor.Green : ANSIBuilder.Formatting.ForegroundColor.Default )} [{TargetFramework}]",
+                $"({MessageCount} Messages, {WarningCount} Warnings, {ErrorCount} Errors)",
                 Console.WindowWidth
             );
 
@@ -108,14 +117,17 @@ public void AddTask(TaskStartedEventArgs args)
         public void AddMessage(BuildMessageEventArgs args)
         {
             if (args.Importance != MessageImportance.High) return;
+            MessageCount++;
             AdditionalDetails.Add(new FancyLoggerMessageNode(args));
         }
         public void AddWarning(BuildWarningEventArgs args)
         {
+            WarningCount++;
             AdditionalDetails.Add(new FancyLoggerMessageNode(args));
         }
         public void AddError(BuildErrorEventArgs args)
         {
+            ErrorCount++;
             AdditionalDetails.Add(new FancyLoggerMessageNode(args));
         }
     }
