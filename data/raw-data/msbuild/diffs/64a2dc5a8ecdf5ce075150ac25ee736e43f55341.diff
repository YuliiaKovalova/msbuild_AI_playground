diff --git a/src/Shared/AssemblyFolders/AssemblyFoldersEx.cs b/src/Shared/AssemblyFolders/AssemblyFoldersEx.cs
index 5bc6022778e..6df2b6a307f 100644
--- a/src/Shared/AssemblyFolders/AssemblyFoldersEx.cs
+++ b/src/Shared/AssemblyFolders/AssemblyFoldersEx.cs
@@ -1,11 +1,10 @@
 ﻿// Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
-#if FEATURE_WIN32_REGISTRY
 
 using System;
 using System.Collections;
 using System.Collections.Generic;
-using Microsoft.Build.Tasks;
+using System.Runtime.Versioning;
 using Microsoft.Build.Utilities;
 using Microsoft.Win32;
 using ProcessorArchitecture = System.Reflection.ProcessorArchitecture;
@@ -41,6 +40,7 @@ namespace Microsoft.Build.Shared
     ///     {AssemblyFoldersSuffix} = [ PocketPC | SmartPhone | WindowsCE]\AssemblyFoldersEx
     ///
     /// </summary>
+    [SupportedOSPlatform("windows")]
     internal class AssemblyFoldersEx : IEnumerable<AssemblyFoldersExInfo>
     {
         /// <summary>
@@ -498,4 +498,3 @@ internal IEnumerable<string> UniqueDirectoryPaths
         }
     }
 }
-#endif
diff --git a/src/Shared/RegistryDelegates.cs b/src/Shared/RegistryDelegates.cs
index 45f28819e26..4883342d33f 100644
--- a/src/Shared/RegistryDelegates.cs
+++ b/src/Shared/RegistryDelegates.cs
@@ -1,19 +1,12 @@
 ﻿// Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
-#if FEATURE_WIN32_REGISTRY
 
-using System;
-using System.IO;
-using System.Diagnostics;
-using System.Globalization;
 using Microsoft.Win32;
-using System.Collections;
 using System.Collections.Generic;
 
-#nullable disable
-
 namespace Microsoft.Build.Shared
-{  /// <summary>
+{
+    /// <summary>
    /// Given a registry hive and a request view open the base key for that registry location.
    /// </summary>
     internal delegate RegistryKey OpenBaseKey(RegistryHive hive, RegistryView view);
@@ -36,4 +29,3 @@ namespace Microsoft.Build.Shared
     /// <returns>A string containing the default value.</returns>
     internal delegate string GetRegistrySubKeyDefaultValue(RegistryKey baseKey, string subKey);
 }
-#endif
diff --git a/src/Shared/RegistryHelper.cs b/src/Shared/RegistryHelper.cs
index 19cc6190041..fc26fd09f82 100644
--- a/src/Shared/RegistryHelper.cs
+++ b/src/Shared/RegistryHelper.cs
@@ -1,20 +1,16 @@
 ﻿// Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
-#if FEATURE_WIN32_REGISTRY
 
 using System.Collections.Generic;
-
+using System.Runtime.Versioning;
 using Microsoft.Win32;
-// Copyright (c) Microsoft. All rights reserved.
-// Licensed under the MIT license. See LICENSE file in the project root for full license information.
-
-#nullable disable
 
 namespace Microsoft.Build.Shared
 {
     /// <summary>
     /// Helper methods that simplify registry access.
     /// </summary>
+    [SupportedOSPlatform("windows")]
     internal static class RegistryHelper
     {
         /// <summary>
@@ -23,11 +19,11 @@ internal static class RegistryHelper
         /// <param name="baseKey">The base registry key.</param>
         /// <param name="subkey">The subkey</param>
         /// <returns>An enumeration of strings.</returns>        
-        internal static IEnumerable<string> GetSubKeyNames(RegistryKey baseKey, string subkey)
+        internal static IEnumerable<string>? GetSubKeyNames(RegistryKey baseKey, string subkey)
         {
-            IEnumerable<string> subKeys = null;
+            IEnumerable<string>? subKeys = null;
 
-            using (RegistryKey subKey = baseKey.OpenSubKey(subkey))
+            using (RegistryKey? subKey = baseKey.OpenSubKey(subkey))
             {
                 if (subKey != null)
                 {
@@ -44,15 +40,15 @@ internal static IEnumerable<string> GetSubKeyNames(RegistryKey baseKey, string s
         /// <param name="baseKey">The base registry key.</param>
         /// <param name="subkey">The subkey</param>
         /// <returns>A string containing the default value.</returns>
-        internal static string GetDefaultValue(RegistryKey baseKey, string subkey)
+        internal static string? GetDefaultValue(RegistryKey baseKey, string subkey)
         {
-            string value = null;
+            string? value = null;
 
-            using (RegistryKey key = baseKey.OpenSubKey(subkey))
+            using (RegistryKey? key = baseKey.OpenSubKey(subkey))
             {
                 if (key?.ValueCount > 0)
                 {
-                    value = (string)key.GetValue("");
+                    value = (string?)key.GetValue("");
                 }
             }
 
@@ -73,4 +69,3 @@ internal static RegistryKey OpenBaseKey(RegistryHive hive, RegistryView view)
         }
     }
 }
-#endif
\ No newline at end of file
diff --git a/src/Utilities/AssemblyFolders/AssemblyFoldersExInfo.cs b/src/Utilities/AssemblyFolders/AssemblyFoldersExInfo.cs
index beee420663d..ddf605b188b 100644
--- a/src/Utilities/AssemblyFolders/AssemblyFoldersExInfo.cs
+++ b/src/Utilities/AssemblyFolders/AssemblyFoldersExInfo.cs
@@ -3,9 +3,9 @@
 //-----------------------------------------------------------------------
 // Contains information about entries in the AssemblyFoldersEx registry keys.
 //-----------------------------------------------------------------------
-#if FEATURE_WIN32_REGISTRY
 
 using System;
+using System.Runtime.Versioning;
 using Microsoft.Build.Shared;
 using Microsoft.Win32;
 
@@ -16,6 +16,7 @@ namespace Microsoft.Build.Utilities
     /// <summary>
     /// Contains information about entries in the AssemblyFoldersEx registry keys.
     /// </summary>
+    [SupportedOSPlatform("windows")]
     public class AssemblyFoldersExInfo
     {
         /// <summary>
@@ -60,4 +61,3 @@ public AssemblyFoldersExInfo(RegistryHive hive, RegistryView view, string regist
         public Version TargetFrameworkVersion { get; }
     }
 }
-#endif
diff --git a/src/Utilities/PublicAPI/netstandard/PublicAPI.Unshipped.txt b/src/Utilities/PublicAPI/netstandard/PublicAPI.Unshipped.txt
index e69de29bb2d..1e0e97b9131 100644
--- a/src/Utilities/PublicAPI/netstandard/PublicAPI.Unshipped.txt
+++ b/src/Utilities/PublicAPI/netstandard/PublicAPI.Unshipped.txt
@@ -0,0 +1,8 @@
+Microsoft.Build.Utilities.AssemblyFoldersExInfo
+Microsoft.Build.Utilities.AssemblyFoldersExInfo.AssemblyFoldersExInfo(Microsoft.Win32.RegistryHive hive, Microsoft.Win32.RegistryView view, string registryKey, string directoryPath, System.Version targetFrameworkVersion) -> void
+Microsoft.Build.Utilities.AssemblyFoldersExInfo.DirectoryPath.get -> string
+Microsoft.Build.Utilities.AssemblyFoldersExInfo.Hive.get -> Microsoft.Win32.RegistryHive
+Microsoft.Build.Utilities.AssemblyFoldersExInfo.Key.get -> string
+Microsoft.Build.Utilities.AssemblyFoldersExInfo.TargetFrameworkVersion.get -> System.Version
+Microsoft.Build.Utilities.AssemblyFoldersExInfo.View.get -> Microsoft.Win32.RegistryView
+static Microsoft.Build.Utilities.ToolLocationHelper.GetAssemblyFoldersExInfo(string registryRoot, string targetFrameworkVersion, string registryKeySuffix, string osVersion, string platform, System.Reflection.ProcessorArchitecture targetProcessorArchitecture) -> System.Collections.Generic.IList<Microsoft.Build.Utilities.AssemblyFoldersExInfo>
\ No newline at end of file
diff --git a/src/Utilities/Resources/Strings.resx b/src/Utilities/Resources/Strings.resx
index 452897f1deb..17d07f7fe37 100644
--- a/src/Utilities/Resources/Strings.resx
+++ b/src/Utilities/Resources/Strings.resx
@@ -137,6 +137,10 @@
     <data name="ToolLocationHelper.UnsupportedVisualStudioVersion" UESanitized="false" Visibility="Private_OM">
         <value>Visual Studio version "{0}" is not supported.  Please specify a value from the enumeration Microsoft.Build.Utilities.VisualStudioVersion.</value>
     </data>
+    <data name="General.FunctionalityRequiresWindows">
+      <value>MSB6013: Functionality "{0}" is only supported when building on Windows.</value>
+      <comment>{StrBegin="MSB6013: "}</comment>
+    </data>
     <data name="ToolTask.CommandTooLong">
         <value>MSB6002: The command-line for the "{0}" task is too long. Command-lines longer than 32000 characters are likely to fail. Try reducing the length of the command-line by breaking down the call to "{0}" into multiple calls with fewer parameters per call.</value>
         <comment>{StrBegin="MSB6002: "}</comment>
@@ -294,7 +298,7 @@
   <!--
         The Utilities message bucket is: MSB6001 - MSB6200
 
-        Next message code should be MSB6013
+        Next message code should be MSB6014
 
         Some unused codes which can also be reused (because their messages were deleted, and UE hasn't indexed the codes yet):
             <none>
diff --git a/src/Utilities/Resources/xlf/Strings.cs.xlf b/src/Utilities/Resources/xlf/Strings.cs.xlf
index a8bfb9f8d72..b9d155d09f7 100644
--- a/src/Utilities/Resources/xlf/Strings.cs.xlf
+++ b/src/Utilities/Resources/xlf/Strings.cs.xlf
@@ -7,6 +7,11 @@
         <target state="translated">MSB6012: Cesta „{0}“ použitá pro protokoly ladění je příliš dlouhá. Nastavte ji na kratší hodnotu pomocí proměnné prostředí MSBUILDDEBUGPATH nebo změňte konfigurace vašeho systému, aby povolovala dlouhé cesty.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: Přepínač příkazového řádku pro {0} je neplatný. {1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.de.xlf b/src/Utilities/Resources/xlf/Strings.de.xlf
index 057073c7ec6..70210b431bc 100644
--- a/src/Utilities/Resources/xlf/Strings.de.xlf
+++ b/src/Utilities/Resources/xlf/Strings.de.xlf
@@ -7,6 +7,11 @@
         <target state="new">MSB6012: The path "{0}" used for debug logs is too long. Set it to a shorter value using the MSBUILDDEBUGPATH environment variable or change your system configuration to allow long paths.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: Ungültige Befehlszeilenoption für "{0}". {1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.es.xlf b/src/Utilities/Resources/xlf/Strings.es.xlf
index 71a0cc32f88..46cbbf58964 100644
--- a/src/Utilities/Resources/xlf/Strings.es.xlf
+++ b/src/Utilities/Resources/xlf/Strings.es.xlf
@@ -7,6 +7,11 @@
         <target state="translated">MSB6012: La ruta de acceso "{0}" usada para los registros de depuración es demasiado larga. Establézcalo en un valor más corto con la variable de entorno MSBUILDDEBUGPATH o cambie la configuración del sistema para permitir rutas de acceso largas.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: Modificador de línea de comandos no válido para "{0}". {1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.fr.xlf b/src/Utilities/Resources/xlf/Strings.fr.xlf
index 2924d87cb1a..f7a90689363 100644
--- a/src/Utilities/Resources/xlf/Strings.fr.xlf
+++ b/src/Utilities/Resources/xlf/Strings.fr.xlf
@@ -7,6 +7,11 @@
         <target state="translated">MSB6012: Le chemin d’accès "{0}" utilisé pour les journaux de débogage est trop long. Définissez-la sur une valeur plus courte à l’aide de la variable d’environnement MSBUILDDEBUGPATH ou modifiez votre configuration système pour autoriser les chemins longs.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: Commutateur de ligne de commande non valide pour "{0}". {1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.it.xlf b/src/Utilities/Resources/xlf/Strings.it.xlf
index ea4e723c61a..34ed92c1dc6 100644
--- a/src/Utilities/Resources/xlf/Strings.it.xlf
+++ b/src/Utilities/Resources/xlf/Strings.it.xlf
@@ -7,6 +7,11 @@
         <target state="translated">MSB6012: il percorso "{0}" usato per i log di debug è troppo lungo. Impostarlo su un valore più breve usando la variabile dell'ambiente MSBUILDDEBUGPATH o modificare la configurazione del sistema per consentire percorsi lunghi.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: opzione della riga di comando non valida per "{0}". {1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.ja.xlf b/src/Utilities/Resources/xlf/Strings.ja.xlf
index 1fff712c9bd..724c4712bd6 100644
--- a/src/Utilities/Resources/xlf/Strings.ja.xlf
+++ b/src/Utilities/Resources/xlf/Strings.ja.xlf
@@ -7,6 +7,11 @@
         <target state="new">MSB6012: The path "{0}" used for debug logs is too long. Set it to a shorter value using the MSBUILDDEBUGPATH environment variable or change your system configuration to allow long paths.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: "{0}" のコマンド ライン スイッチが無効です。{1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.ko.xlf b/src/Utilities/Resources/xlf/Strings.ko.xlf
index 9ba07781719..cfcd3ab11b1 100644
--- a/src/Utilities/Resources/xlf/Strings.ko.xlf
+++ b/src/Utilities/Resources/xlf/Strings.ko.xlf
@@ -7,6 +7,11 @@
         <target state="new">MSB6012: The path "{0}" used for debug logs is too long. Set it to a shorter value using the MSBUILDDEBUGPATH environment variable or change your system configuration to allow long paths.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: "{0}"의 명령줄 스위치가 잘못되었습니다. {1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.pl.xlf b/src/Utilities/Resources/xlf/Strings.pl.xlf
index 7bebd5e37dc..7435dd23118 100644
--- a/src/Utilities/Resources/xlf/Strings.pl.xlf
+++ b/src/Utilities/Resources/xlf/Strings.pl.xlf
@@ -7,6 +7,11 @@
         <target state="new">MSB6012: The path "{0}" used for debug logs is too long. Set it to a shorter value using the MSBUILDDEBUGPATH environment variable or change your system configuration to allow long paths.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: Nieprawidłowy przełącznik wiersza polecenia dla „{0}”. {1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.pt-BR.xlf b/src/Utilities/Resources/xlf/Strings.pt-BR.xlf
index 19e23f9ecdd..06584655017 100644
--- a/src/Utilities/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Utilities/Resources/xlf/Strings.pt-BR.xlf
@@ -7,6 +7,11 @@
         <target state="translated">MSB6012: O caminho "{0}" usado para logs de depuração é muito longo. Defina-o para um valor mais curto usando a variável de ambiente MSBUILDDEBUGPATH ou altere a configuração do sistema para permitir caminhos longos.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: Opção de linha de comando inválida para "{0}". {1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.ru.xlf b/src/Utilities/Resources/xlf/Strings.ru.xlf
index 33ad00edf42..1b9fee4962f 100644
--- a/src/Utilities/Resources/xlf/Strings.ru.xlf
+++ b/src/Utilities/Resources/xlf/Strings.ru.xlf
@@ -7,6 +7,11 @@
         <target state="new">MSB6012: The path "{0}" used for debug logs is too long. Set it to a shorter value using the MSBUILDDEBUGPATH environment variable or change your system configuration to allow long paths.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: Недопустимый переключатель командной строки для "{0}". {1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.tr.xlf b/src/Utilities/Resources/xlf/Strings.tr.xlf
index 51956200b18..9bcdf34e527 100644
--- a/src/Utilities/Resources/xlf/Strings.tr.xlf
+++ b/src/Utilities/Resources/xlf/Strings.tr.xlf
@@ -7,6 +7,11 @@
         <target state="new">MSB6012: The path "{0}" used for debug logs is too long. Set it to a shorter value using the MSBUILDDEBUGPATH environment variable or change your system configuration to allow long paths.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: "{0}" için geçersiz komut satırı anahtarı. {1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.zh-Hans.xlf b/src/Utilities/Resources/xlf/Strings.zh-Hans.xlf
index cd91fbdba64..bdf30f236d7 100644
--- a/src/Utilities/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Utilities/Resources/xlf/Strings.zh-Hans.xlf
@@ -7,6 +7,11 @@
         <target state="new">MSB6012: The path "{0}" used for debug logs is too long. Set it to a shorter value using the MSBUILDDEBUGPATH environment variable or change your system configuration to allow long paths.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: “{0}”的命令行开关无效。{1}</target>
diff --git a/src/Utilities/Resources/xlf/Strings.zh-Hant.xlf b/src/Utilities/Resources/xlf/Strings.zh-Hant.xlf
index 99599eefd57..fdcfcc862f1 100644
--- a/src/Utilities/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Utilities/Resources/xlf/Strings.zh-Hant.xlf
@@ -7,6 +7,11 @@
         <target state="new">MSB6012: The path "{0}" used for debug logs is too long. Set it to a shorter value using the MSBUILDDEBUGPATH environment variable or change your system configuration to allow long paths.</target>
         <note>{StrBegin="MSB6012: "}</note>
       </trans-unit>
+      <trans-unit id="General.FunctionalityRequiresWindows">
+        <source>MSB6013: Functionality "{0}" is only supported when building on Windows.</source>
+        <target state="new">MSB6013: Functionality "{0}" is only supported when building on Windows.</target>
+        <note>{StrBegin="MSB6013: "}</note>
+      </trans-unit>
       <trans-unit id="General.InvalidToolSwitch">
         <source>MSB6001: Invalid command line switch for "{0}". {1}</source>
         <target state="translated">MSB6001: "{0}" 的命令列參數無效。{1}</target>
diff --git a/src/Utilities/ToolLocationHelper.cs b/src/Utilities/ToolLocationHelper.cs
index f4daea8da3a..7cd99191277 100644
--- a/src/Utilities/ToolLocationHelper.cs
+++ b/src/Utilities/ToolLocationHelper.cs
@@ -10,15 +10,14 @@
 using System.Xml;
 
 using Microsoft.Build.Shared;
-#if FEATURE_WIN32_REGISTRY
 using Microsoft.Win32;
-#endif
 
 using FrameworkNameVersioning = System.Runtime.Versioning.FrameworkName;
 using UtilitiesDotNetFrameworkArchitecture = Microsoft.Build.Utilities.DotNetFrameworkArchitecture;
 using SharedDotNetFrameworkArchitecture = Microsoft.Build.Shared.DotNetFrameworkArchitecture;
 using Microsoft.Build.Shared.FileSystem;
 using Microsoft.Build.Tasks.AssemblyFoldersFromConfig;
+using System.Runtime.Versioning;
 
 #nullable disable
 
@@ -294,7 +293,6 @@ public static class ToolLocationHelper
         /// </summary>
         public static string CurrentToolsVersion => MSBuildConstants.CurrentToolsVersion;
 
-#if FEATURE_WIN32_REGISTRY
         /// <summary>
         /// Get a sorted list of AssemblyFoldersExInfo which contain information about what directories the 3rd party assemblies are registered under for use during build and design time.
         ///
@@ -317,8 +315,14 @@ public static class ToolLocationHelper
         /// On a 32 bit machine we only add in the 32 bit hive.
         /// </param>
         /// <returns>List of AssemblyFoldersExInfo</returns>
+        [SupportedOSPlatform("windows")]
         public static IList<AssemblyFoldersExInfo> GetAssemblyFoldersExInfo(string registryRoot, string targetFrameworkVersion, string registryKeySuffix, string osVersion, string platform, System.Reflection.ProcessorArchitecture targetProcessorArchitecture)
         {
+            if (!NativeMethodsShared.IsWindows)
+            {
+                throw new PlatformNotSupportedException(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("General.FunctionalityRequiresWindows", nameof(GetAssemblyFoldersExInfo)));
+            }
+
             ErrorUtilities.VerifyThrowArgumentLength(registryRoot, nameof(registryRoot));
             ErrorUtilities.VerifyThrowArgumentLength(registryKeySuffix, nameof(registryKeySuffix));
             ErrorUtilities.VerifyThrowArgumentLength(targetFrameworkVersion, nameof(targetFrameworkVersion));
@@ -329,7 +333,6 @@ public static IList<AssemblyFoldersExInfo> GetAssemblyFoldersExInfo(string regis
             assemblyFolders.AddRange(assemblyFoldersEx);
             return assemblyFolders;
         }
-#endif
 
         /// <summary>
         /// Get a sorted list of AssemblyFoldersFromConfigInfo which contain information about what directories the 3rd party assemblies are registered under for use during build and design time.
@@ -2470,12 +2473,10 @@ private static IEnumerable<TargetPlatformSDK> RetrieveTargetPlatformList(string[
                     var monikers = new Dictionary<TargetPlatformSDK, TargetPlatformSDK>();
                     GatherSDKListFromDirectory(sdkDiskRoots, monikers);
 
-#if FEATURE_REGISTRY_SDKS
                     if (NativeMethodsShared.IsWindows)
                     {
                         GatherSDKListFromRegistry(registryRoot, monikers);
                     }
-#endif
 
                     collection = monikers.Keys.ToList();
                     s_cachedTargetPlatforms.Add(cachedTargetPlatformsKey, collection);
@@ -2672,10 +2673,10 @@ internal static void GatherSDKListFromDirectory(List<string> diskroots, Dictiona
             }
         }
 
-#if FEATURE_REGISTRY_SDKS
         /// <summary>
         /// Given a registry location enumerate the registry and find the installed SDKs.
         /// </summary>
+        [SupportedOSPlatform("windows")]
         internal static void GatherSDKsFromRegistryImpl(Dictionary<TargetPlatformSDK, TargetPlatformSDK> platformMonikers, string registryKeyRoot, RegistryView registryView, RegistryHive registryHive, GetRegistrySubKeyNames getRegistrySubKeyNames, GetRegistrySubKeyDefaultValue getRegistrySubKeyDefaultValue, OpenBaseKey openBaseKey, FileExists fileExists)
         {
             ErrorUtilities.VerifyThrowArgumentNull(platformMonikers, "PlatformMonikers");
@@ -2866,6 +2867,7 @@ internal static void GatherSDKsFromRegistryImpl(Dictionary<TargetPlatformSDK, Ta
         ///  Gather the list of SDKs installed on the machine from the registry.
         ///  Do not parallelize the getting of these entries, order is important, we want the first ones in to win.
         /// </summary>
+        [SupportedOSPlatform("windows")]
         private static void GatherSDKListFromRegistry(string registryRoot, Dictionary<TargetPlatformSDK, TargetPlatformSDK> platformMonikers)
         {
             // Setup some delegates because the methods we call use them during unit testing.
@@ -2891,7 +2893,6 @@ private static void GatherSDKListFromRegistry(string registryRoot, Dictionary<Ta
                 GatherSDKsFromRegistryImpl(platformMonikers, registryRoot, RegistryView.Default, RegistryHive.LocalMachine, getSubkeyNames, getRegistrySubKeyDefaultValue, openBaseKey, fileExists);
             }
         }
-#endif
 
         /// <summary>
         /// Get the disk locations to search for sdks under. This can be overridden by an environment variable
