diff --git a/src/Build/BuildCheck/Infrastructure/BuildAnalyzerWrapper.cs b/src/Build/BuildCheck/Infrastructure/BuildAnalyzerWrapper.cs
index 92673cf7f79..06e0aaa2439 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildAnalyzerWrapper.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildAnalyzerWrapper.cs
@@ -25,6 +25,8 @@ public BuildAnalyzerWrapper(BuildAnalyzer buildAnalyzer)
     internal BuildAnalyzer BuildAnalyzer { get; }
     private bool _isInitialized = false;
 
+    // Let's optimize for the scenario where users have a single .editorconfig file that applies to the whole solution.
+    // In such case - configuration will be same for all projects. So we do not need to store it per project in a collection.
     internal BuildAnalyzerConfigurationInternal? CommonConfig { get; private set; }
 
     // start new project
@@ -43,6 +45,7 @@ internal void StartNewProject(
             }
         }
 
+        // The Common configuration is not common anymore - let's nullify it and we will need to fetch configuration per project.
         if (CommonConfig == null || !userConfigs.All(t => t.IsSameConfigurationAs(CommonConfig)))
         {
             CommonConfig = null;
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
index 20d095fc889..b8f276884e3 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
@@ -50,6 +50,7 @@ private void EventSource_AnyEventRaised(object sender, BuildEventArgs e)
         }
         else if (e is ProjectEvaluationStartedEventArgs projectEvaluationStartedEventArgs)
         {
+            // Skip autogenerated transient projects (as those are not user projects to be analyzed)
             if (projectEvaluationStartedEventArgs.ProjectFile?.EndsWith(".metaproj") ?? false)
             {
                 return;
