diff --git a/src/MSBuild/CommandLineSwitches.cs b/src/MSBuild/CommandLineSwitches.cs
index 30213e21101..a7d5cf0df1f 100644
--- a/src/MSBuild/CommandLineSwitches.cs
+++ b/src/MSBuild/CommandLineSwitches.cs
@@ -267,7 +267,9 @@ internal ParameterizedSwitchInfo(
             // To not break existing use, keep supporting live logger switches
             new ParameterizedSwitchInfo(  new string[] { "livelogger", "ll", "terminallogger", "tl" }, ParameterizedSwitch.TerminalLogger,      null,                           true,           null,                                  true,   true,    "HelpMessage_47_TerminalLoggerSwitch"),
             new ParameterizedSwitchInfo(  new string[] { "terminalloggerparameters", "tlp" },   ParameterizedSwitch.TerminalLoggerParameters,   null,                           false,          "MissingTerminalLoggerParameterError", true,   false,   "HelpMessage_48_TerminalLoggerParametersSwitch"),
+#if FEATURE_NODE_REUSE
             new ParameterizedSwitchInfo(  new string[] { "nodereuse", "nr" },                   ParameterizedSwitch.NodeReuse,                  null,                           false,          "MissingNodeReuseParameterError",      true,   false,   "HelpMessage_24_NodeReuse"),
+#endif
             new ParameterizedSwitchInfo(  new string[] { "preprocess", "pp" },                  ParameterizedSwitch.Preprocess,                 null,                           false,          null,                                  true,   false,   "HelpMessage_25_PreprocessSwitch"),
             new ParameterizedSwitchInfo(  new string[] { "targets", "ts" },                     ParameterizedSwitch.Targets,                    null,                           false,          null,                                  true,   false,   "HelpMessage_38_TargetsSwitch"),
             new ParameterizedSwitchInfo(  new string[] { "warnaserror", "err" },                ParameterizedSwitch.WarningsAsErrors,           null,                           true,           null,                                  true,   true,    "HelpMessage_28_WarnAsErrorSwitch"),
@@ -376,37 +378,38 @@ internal static bool IsParameterizedSwitch(
         /// Get the distinct parameterized switchs map resource ids.
         /// </summary>
         /// <returns>Parameterized switches map resource ids.</returns>
-        internal static string[] GetParameterizedSwitchResourceIds()
+        internal static IEnumerable<string> GetParameterizedSwitchResourceIds()
         {
-            List<string> parameterizedSwitchResourceIds = new List<string>();
-            for (int i = 0; i < (int)ParameterizedSwitch.NumberOfParameterizedSwitches; i++)
+            HashSet<string> parameterizedSwitchResourceIds = new HashSet<string>();
+            foreach(ParameterizedSwitchInfo parameterizedSwitch in s_parameterizedSwitchesMap)
             {
-                string resourceId = s_parameterizedSwitchesMap[i].resourceId;
-                if (!parameterizedSwitchResourceIds.Contains(resourceId) && !string.IsNullOrEmpty(resourceId))
+                string resourceId = parameterizedSwitch.resourceId;
+                if (!string.IsNullOrEmpty(resourceId) && !parameterizedSwitchResourceIds.Contains(resourceId))
                 {
-                    parameterizedSwitchResourceIds.Add(s_parameterizedSwitchesMap[i].resourceId);
+                    parameterizedSwitchResourceIds.Add(resourceId);
+                    yield return resourceId;
                 }
             }
-            return[.. parameterizedSwitchResourceIds];
         }
 
+        private static void forreach(ParameterizedSwitchInfo parameterizedSwitchInfo, object parameterizedSwitch, in ParameterizedSwitchInfo[] s_parameterizedSwitchesMap) => throw new NotImplementedException();
+
         /// <summary>
         /// Get the distinct parameterless switchs map resource ids.
         /// </summary>
         /// <returns>Parameterless switchs map resource ids</returns>
-        internal static string[] GetParameterlessSwitchResourceIds()
+        internal static IEnumerable<string> GetParameterlessSwitchResourceIds()
         {
-            List<string> parameterlessSwitchResourceIds = new List<string>();
-            for (int i = 0; i < (int)ParameterlessSwitch.NumberOfParameterlessSwitches; i++)
+            HashSet<string> parameterlessSwitchResourceIds = new HashSet<string>();
+            foreach (ParameterlessSwitchInfo parameterlessSwitch in s_parameterlessSwitchesMap)
             {
-                string resourceId = s_parameterlessSwitchesMap[i].resourceId;
+                string resourceId = parameterlessSwitch.resourceId;
                 if (!parameterlessSwitchResourceIds.Contains(resourceId) && !string.IsNullOrEmpty(resourceId))
                 {
-                    parameterlessSwitchResourceIds.Add(s_parameterlessSwitchesMap[i].resourceId);
+                    parameterlessSwitchResourceIds.Add(resourceId);
+                    yield return resourceId;
                 }
             }
-
-            return[.. parameterlessSwitchResourceIds];
         }
 
         /// <summary>
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 7fafea9b3ad..d5b3e6985a8 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -4483,24 +4483,13 @@ private static void ShowHelpMessage()
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_3_SwitchesHeader"));
             foreach (string parameterizedSwitchRsouceId in CommandLineSwitches.GetParameterizedSwitchResourceIds())
             {
-                if (parameterizedSwitchRsouceId is not "HelpMessage_15_ValidateSwitch"
-                and not "HelpMessage_24_NodeReuse"
-                and not "HelpMessage_42_ReportFileAccessesSwitch")
                 {
                     Console.WriteLine(AssemblyResources.GetString(parameterizedSwitchRsouceId));
                 }
             }
-#if FEATURE_XML_SCHEMA_VALIDATION
-            Console.WriteLine(AssemblyResources.GetString("HelpMessage_15_ValidateSwitch"));
-#endif
-
 #if FEATURE_NODE_REUSE // Do not advertise the switch when feature is off, even though we won't fail to parse it for compatibility with existing build scripts
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_24_NodeReuse"));
 #endif
-#if FEATURE_REPORTFILEACCESSES
-            Console.WriteLine(AssemblyResources.GetString("HelpMessage_42_ReportFileAccessesSwitch"));
-#endif
-
             foreach (string parameterlessSwitchRsouceId in CommandLineSwitches.GetParameterlessSwitchResourceIds())
             {
                 Console.WriteLine(AssemblyResources.GetString(parameterlessSwitchRsouceId));
