diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
index 9704a5a5e9c..33985a81707 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
@@ -112,14 +112,7 @@ public void ProcessAnalyzerAcquisition(AnalyzerAcquisitionData acquisitionData,
             else
             {
                 BuildCheckAcquisitionEventArgs eventArgs = acquisitionData.ToBuildEventArgs();
-
-                // We may want to pass the real context here (from evaluation)
-                eventArgs.BuildEventContext = new BuildEventContext(
-                    BuildEventContext.InvalidNodeId,
-                    BuildEventContext.InvalidProjectInstanceId,
-                    BuildEventContext.InvalidProjectContextId,
-                    BuildEventContext.InvalidTargetId,
-                    BuildEventContext.InvalidTaskId);
+                eventArgs.BuildEventContext = buildEventContext;
 
                 _loggingService.LogBuildEvent(eventArgs);
             }
diff --git a/src/Build/Evaluation/IntrinsicFunctions.cs b/src/Build/Evaluation/IntrinsicFunctions.cs
index f8cb37bce93..0453be18625 100644
--- a/src/Build/Evaluation/IntrinsicFunctions.cs
+++ b/src/Build/Evaluation/IntrinsicFunctions.cs
@@ -665,10 +665,7 @@ public static string GetMSBuildExtensionsPath()
             return BuildEnvironmentHelper.Instance.MSBuildExtensionsPath;
         }
 
-        public static bool IsRunningFromVisualStudio()
-        {
-            return BuildEnvironmentHelper.Instance.Mode == BuildEnvironmentMode.VisualStudio;
-        }
+        public static bool IsRunningFromVisualStudio() => BuildEnvironmentHelper.Instance.Mode == BuildEnvironmentMode.VisualStudio;
 
         public static bool RegisterAnalyzer(string pathToAssembly, LoggingContext loggingContext)
         {
@@ -680,6 +677,8 @@ public static bool RegisterAnalyzer(string pathToAssembly, LoggingContext loggin
                 return true;
             }
 
+            loggingContext.LogComment(MessageImportance.Low, "CustomAnalyzerAssemblyNotExist", pathToAssembly);
+
             return false;
         }
 
diff --git a/src/Build/Resources/Strings.resx b/src/Build/Resources/Strings.resx
index 411664cf15e..9604524cd08 100644
--- a/src/Build/Resources/Strings.resx
+++ b/src/Build/Resources/Strings.resx
@@ -2097,15 +2097,19 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
   </data>
   <data name="CustomAnalyzerSuccessfulAcquisition" xml:space="preserve">
     <value>Custom analyzer rule: {0} has been registered successfully.</value>
-    <comment>The message is emmited on successful loading of the custom analyzer rule in app domain.</comment>
+    <comment>The message is emitted on successful loading of the custom analyzer rule in app domain.</comment>
   </data>
   <data name="CustomAnalyzerFailedAcquisition" xml:space="preserve">
     <value>Failed to register the custom analyzer: {0}.</value>
-    <comment>The message is emmited on failed loading of the custom analyzer in app domain.</comment>
+    <comment>The message is emitted on failed loading of the custom analyzer in app domain.</comment>
   </data>
   <data name="CustomAnalyzerFailedRuleLoading" xml:space="preserve">
-    <value>Failed to instantiate the custom analyzer rule with the next exception: {0}.</value>
-    <comment>The message is emmited on failed loading of the custom analyzer rule in app domain.</comment>
+    <value>Failed to instantiate the custom analyzer rule with the following exception: {0}.</value>
+    <comment>The message is emitted on failed loading of the custom analyzer rule in app domain.</comment>
+  </data>
+  <data name="CustomAnalyzerAssemblyNotExist" xml:space="preserve">
+    <value>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</value>
+    <comment>The message is emitted when the custom analyzer assembly can not be found.</comment>
   </data>
   <!--
         The Build message bucket is: MSB4000 - MSB4999
diff --git a/src/Build/Resources/xlf/Strings.cs.xlf b/src/Build/Resources/xlf/Strings.cs.xlf
index 138915e4e5c..4cd6047869a 100644
--- a/src/Build/Resources/xlf/Strings.cs.xlf
+++ b/src/Build/Resources/xlf/Strings.cs.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index d20f945afef..40cde1c7536 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index d845d49371d..d8c5879c550 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index b7f5bd632bf..e02ed752414 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index eafdffdb722..f64d57b2464 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index 87f2cd180cf..8ee15eb95b3 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.ko.xlf b/src/Build/Resources/xlf/Strings.ko.xlf
index 286afdc7f32..7cb07379460 100644
--- a/src/Build/Resources/xlf/Strings.ko.xlf
+++ b/src/Build/Resources/xlf/Strings.ko.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index 95d8d779152..3daa6cd0702 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index 7f1c3ed8eba..1bde682745a 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.ru.xlf b/src/Build/Resources/xlf/Strings.ru.xlf
index da30d2a9569..2c58829c57d 100644
--- a/src/Build/Resources/xlf/Strings.ru.xlf
+++ b/src/Build/Resources/xlf/Strings.ru.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.tr.xlf b/src/Build/Resources/xlf/Strings.tr.xlf
index 11500d3f554..f06220e9b21 100644
--- a/src/Build/Resources/xlf/Strings.tr.xlf
+++ b/src/Build/Resources/xlf/Strings.tr.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index e285f0ee332..80e4c301a50 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hant.xlf b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
index a58adef6056..99d1a7c4306 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
@@ -207,20 +207,25 @@
         <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
     request a target to build itself (perhaps via a chain of other targets).</note>
       </trans-unit>
+      <trans-unit id="CustomAnalyzerAssemblyNotExist">
+        <source>Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</source>
+        <target state="new">Failed to find the specified custom analyzer assembly: {0}. Please check if it exists.</target>
+        <note>The message is emitted when the custom analyzer assembly can not be found.</note>
+      </trans-unit>
       <trans-unit id="CustomAnalyzerFailedAcquisition">
         <source>Failed to register the custom analyzer: {0}.</source>
         <target state="new">Failed to register the custom analyzer: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer in app domain.</note>
+        <note>The message is emitted on failed loading of the custom analyzer in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerFailedRuleLoading">
-        <source>Failed to instantiate the custom analyzer rule with the next exception: {0}.</source>
-        <target state="new">Failed to instantiate the custom analyzer rule with the next exception: {0}.</target>
-        <note>The message is emmited on failed loading of the custom analyzer rule in app domain.</note>
+        <source>Failed to instantiate the custom analyzer rule with the following exception: {0}.</source>
+        <target state="new">Failed to instantiate the custom analyzer rule with the following exception: {0}.</target>
+        <note>The message is emitted on failed loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="CustomAnalyzerSuccessfulAcquisition">
         <source>Custom analyzer rule: {0} has been registered successfully.</source>
         <target state="new">Custom analyzer rule: {0} has been registered successfully.</target>
-        <note>The message is emmited on successful loading of the custom analyzer rule in app domain.</note>
+        <note>The message is emitted on successful loading of the custom analyzer rule in app domain.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
         <source>MSB4276: The default SDK resolver failed to resolve SDK "{0}" because directory "{1}" did not exist.</source>
