diff --git a/src/Framework.UnitTests/OperatingSystem_Tests.cs b/src/Framework.UnitTests/OperatingSystem_Tests.cs
index b2afc953827..2ddc75dba57 100644
--- a/src/Framework.UnitTests/OperatingSystem_Tests.cs
+++ b/src/Framework.UnitTests/OperatingSystem_Tests.cs
@@ -10,57 +10,48 @@ namespace Microsoft.Build.Framework.UnitTests
 {
     public class OperatingSystem_Tests
     {
-        [System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "xUnit1026:Theory methods should use all of their parameters", Justification = "Don't complain when test body is empty")]
+#if !NET5_0_OR_GREATER
         [WindowsFullFrameworkOnlyTheory]
         [InlineData("windows", true)]
         [InlineData("linux", false)]
         [InlineData("macOS", false)]
         public void IsOSPlatform(string platform, bool expected)
         {
-#if !NET5_0_OR_GREATER
             Microsoft.Build.Framework.OperatingSystem.IsOSPlatform(platform).ShouldBe(expected);
-#endif
+        }
+
+        [WindowsFullFrameworkOnlyTheory]
+        [InlineData("windows", 4, true)]
+        [InlineData("windows", 999, false)]
+        [InlineData("linux", 0, false)]
+        [InlineData("macOS", 0, false)]
+        public void IsOSPlatformVersionAtLeast(string platform, int major, bool expected)
+        {
+            Microsoft.Build.Framework.OperatingSystem.IsOSPlatformVersionAtLeast(platform, major).ShouldBe(expected);
         }
 
         [WindowsFullFrameworkOnlyFact]
         public void IsWindows()
         {
-#if !NET5_0_OR_GREATER
             Microsoft.Build.Framework.OperatingSystem.IsWindows().ShouldBeTrue();
-#endif
         }
 
         [WindowsFullFrameworkOnlyFact]
         public void IsWindowsVersionAtLeast()
         {
-#if !NET5_0_OR_GREATER
             Microsoft.Build.Framework.OperatingSystem.IsWindowsVersionAtLeast(4).ShouldBeTrue();
-#endif
         }
 
         [WindowsFullFrameworkOnlyFact]
         public void IsOtherThanWindows()
         {
-#if !NET5_0_OR_GREATER
-            Microsoft.Build.Framework.OperatingSystem.IsAndroid().ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsAndroidVersionAtLeast(0).ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsBrowser().ShouldBeFalse();
             Microsoft.Build.Framework.OperatingSystem.IsFreeBSD().ShouldBeFalse();
             Microsoft.Build.Framework.OperatingSystem.IsFreeBSDVersionAtLeast(0).ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsIOS().ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsIOSVersionAtLeast(0).ShouldBeFalse();
             Microsoft.Build.Framework.OperatingSystem.IsLinux().ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsMacCatalyst().ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsMacCatalystVersionAtLeast(0).ShouldBeFalse();
             Microsoft.Build.Framework.OperatingSystem.IsMacOS().ShouldBeFalse();
             Microsoft.Build.Framework.OperatingSystem.IsMacOSVersionAtLeast(0).ShouldBeFalse();
             Microsoft.Build.Framework.OperatingSystem.IsOSXLike().ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsTvOS().ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsTvOSVersionAtLeast(0).ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsWasi().ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsWatchOS().ShouldBeFalse();
-            Microsoft.Build.Framework.OperatingSystem.IsWatchOSVersionAtLeast(0).ShouldBeFalse();
-#endif
         }
+#endif
     }
 }
diff --git a/src/Framework/OperatingSystem.cs b/src/Framework/OperatingSystem.cs
index afbc82518b7..e9715c6d442 100644
--- a/src/Framework/OperatingSystem.cs
+++ b/src/Framework/OperatingSystem.cs
@@ -22,42 +22,18 @@ public static bool IsOSPlatform(string platform)
         public static bool IsOSPlatformVersionAtLeast(string platform, int major, int minor = 0, int build = 0, int revision = 0)
             => IsOSPlatform(platform) && IsOSVersionAtLeast(major, minor, build, revision);
 
-        public static bool IsBrowser() => false;
-
-        public static bool IsWasi() => false;
-
         public static bool IsLinux() => false;
 
         public static bool IsFreeBSD() => false;
 
         public static bool IsFreeBSDVersionAtLeast(int major, int minor = 0, int build = 0, int revision = 0) => false;
 
-        public static bool IsAndroid() => false;
-
-        public static bool IsAndroidVersionAtLeast(int major, int minor = 0, int build = 0, int revision = 0) => false;
-
-        public static bool IsIOS() => false;
-
-        public static bool IsIOSVersionAtLeast(int major, int minor = 0, int build = 0) => false;
-
         public static bool IsMacOS() => false;
 
         public static bool IsOSXLike() => false;
 
         public static bool IsMacOSVersionAtLeast(int major, int minor = 0, int build = 0) => false;
 
-        public static bool IsMacCatalyst() => false;
-
-        public static bool IsMacCatalystVersionAtLeast(int major, int minor = 0, int build = 0) => false;
-
-        public static bool IsTvOS() => false;
-
-        public static bool IsTvOSVersionAtLeast(int major, int minor = 0, int build = 0) => false;
-
-        public static bool IsWatchOS() => false;
-
-        public static bool IsWatchOSVersionAtLeast(int major, int minor = 0, int build = 0) => false;
-
         public static bool IsWindows() => true;
 
         public static bool IsWindowsVersionAtLeast(int major, int minor = 0, int build = 0, int revision = 0)
