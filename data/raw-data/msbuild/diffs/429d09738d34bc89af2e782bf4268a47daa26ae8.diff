diff --git a/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs b/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs
index 75c6f4f02b6..ec0df79750b 100644
--- a/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs
+++ b/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs
@@ -90,12 +90,13 @@ public void ResolvesViaSamePlatform()
             // matches the parent's platform, it takes priority over AnyCPU default.
             TaskItem projectReference = new TaskItem("foo.bar");
             projectReference.SetMetadata("Platforms", "x86;x64;AnyCPU");
+            projectReference.SetMetadata("PlatformLookupTable", "x86=AnyCPU"); // matching platform takes priority over lookup tables
 
             GetCompatiblePlatform task = new GetCompatiblePlatform()
             {
                 BuildEngine = new MockEngine(_output),
                 CurrentProjectPlatform = "x86",
-                PlatformLookupTable = "AnyCPU=x64",
+                PlatformLookupTable = "x86=AnyCPU",
                 AnnotatedProjects = new TaskItem[] { projectReference }
             };
 
diff --git a/src/Tasks/GetCompatiblePlatform.cs b/src/Tasks/GetCompatiblePlatform.cs
index 47e3d8f8a06..61579d1d8be 100644
--- a/src/Tasks/GetCompatiblePlatform.cs
+++ b/src/Tasks/GetCompatiblePlatform.cs
@@ -81,9 +81,15 @@ public override bool Execute()
 
                 string buildChildProjectAs = "";
 
+                // Prefer matching platforms
+                if (childPlatforms.Contains(CurrentProjectPlatform))
+                {
+                    buildChildProjectAs = CurrentProjectPlatform;
+                    Log.LogMessage($"Child and parent have the same platform.");
+                }
                 // If the referenced project has a translation table, it came from the ProjectReference item's metadata.
                 // Prioritize that over the current project's translation table.
-                if (childPlatformLookupTable != null &&
+                else if (childPlatformLookupTable != null &&
                         childPlatformLookupTable.ContainsKey(CurrentProjectPlatform) &&
                         childPlatforms.Contains(childPlatformLookupTable[CurrentProjectPlatform]))
                 {
@@ -98,12 +104,6 @@ public override bool Execute()
                     buildChildProjectAs = translationTable[CurrentProjectPlatform];
                     Log.LogMessage($"Found '{CurrentProjectPlatform}={buildChildProjectAs}' in the current project's translation table.");
                 }
-                // Prefer matching platforms
-                else if (childPlatforms.Contains(CurrentProjectPlatform))
-                {
-                    buildChildProjectAs = CurrentProjectPlatform;
-                    Log.LogMessage($"Child and parent have the same platform.");
-                }
                 // AnyCPU if possible
                 else if (childPlatforms.Contains("AnyCPU"))
                 {
