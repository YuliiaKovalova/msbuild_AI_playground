diff --git a/src/Build/Logging/FancyLogger/ANSIBuilder.cs b/src/Build/Logging/FancyLogger/ANSIBuilder.cs
index b41b03533ae..50945b66975 100644
--- a/src/Build/Logging/FancyLogger/ANSIBuilder.cs
+++ b/src/Build/Logging/FancyLogger/ANSIBuilder.cs
@@ -97,11 +97,10 @@ public static string ProgressBar(float percentage, int width = 10, char complete
                 return result;
             }
 
-            public static string Loading()
+            public static string Spinner()
             {
-                char[] chars = { '⠄', '⠆', '⠇', '⠋', '⠙', '⠸', '⠰', '⠠', '⠰', '⠸', '⠙', '⠋', '⠇', '⠆' };
-                loadingCounter += (loadingCounter++) % (chars.Length - 1);
-
+                char[] chars = {'\\', '|', '/', '-'};
+                loadingCounter = (loadingCounter+1) % (chars.Length - 1);
                 return chars[loadingCounter].ToString();
             }
         }
diff --git a/src/Build/Logging/FancyLogger/FancyLogger.cs b/src/Build/Logging/FancyLogger/FancyLogger.cs
index fe1b34661f3..038dd65bbc8 100644
--- a/src/Build/Logging/FancyLogger/FancyLogger.cs
+++ b/src/Build/Logging/FancyLogger/FancyLogger.cs
@@ -165,16 +165,16 @@ void eventSource_TargetFinished(object sender, TargetFinishedEventArgs e)
         {
             if (e.BuildEventContext?.TargetId != null)
             {
-                int lineId = targetConsoleLines[e.BuildEventContext.TargetId];
+                int targetLineId = targetConsoleLines[e.BuildEventContext.TargetId];
                 // If succeeded
                 if (e.Succeeded)
                 {
                     Log.WriteInLine(
                         ANSIBuilder.Formatting.Color("✓ " + e.TargetName, ANSIForegroundColor.Green)
-                    , lineId);
+                    , targetLineId);
                 }
                 Log.WriteInLine(
-                    ANSIBuilder.Eraser.EraseCurrentLine(), lineId+1
+                    ANSIBuilder.Eraser.EraseCurrentLine(), targetLineId+1
                 );
             }
         }
@@ -187,14 +187,13 @@ void eventSource_TaskStarted(object sender, TaskStartedEventArgs e)
                 int targetLineId = targetConsoleLines[e.BuildEventContext.TargetId];
                 Log.WriteInLine(
                     ANSIBuilder.Eraser.EraseCurrentLine() + "\t" +
-                    ANSIBuilder.Graphics.Loading() + " " +
+                    ANSIBuilder.Graphics.Spinner() + " " +
                     ANSIBuilder.Graphics.ProgressBar(0.6f, 16) + "\t" +
                     ANSIBuilder.Formatting.Dim(e.TaskName), 
                     targetLineId + 1
                 );
-                System.Threading.Thread.Sleep(100);
+                System.Threading.Thread.Sleep(200);
             }
-            // Console.WriteLine("\tA task has started");
         }
 
         void eventSource_TaskFinished(object sender, TaskFinishedEventArgs e)
