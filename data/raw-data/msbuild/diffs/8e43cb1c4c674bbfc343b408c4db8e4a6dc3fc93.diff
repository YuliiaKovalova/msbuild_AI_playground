diff --git a/src/Build.UnitTests/Instance/ProjectInstance_Internal_Tests.cs b/src/Build.UnitTests/Instance/ProjectInstance_Internal_Tests.cs
index 6b294012cbb..104f48dfd27 100644
--- a/src/Build.UnitTests/Instance/ProjectInstance_Internal_Tests.cs
+++ b/src/Build.UnitTests/Instance/ProjectInstance_Internal_Tests.cs
@@ -857,6 +857,8 @@ public void GetImportPathsAndImportPathsIncludingDuplicates(bool useDirectConstr
                     : expectedImportPaths;
 
                 Helpers.AssertListsValueEqual(expectedImportPaths, projectInstance.ImportPaths.ToList());
+                var expectedImports = expectedImportPaths.Select(x => new ProjectImportInstance(x, File.GetLastWriteTime(x))).ToList();
+                Helpers.AssertListsValueEqual(expectedImports, projectInstance.Imports.ToList());
                 Helpers.AssertListsValueEqual(expectedImportPathsIncludingDuplicates, projectInstance.ImportPathsIncludingDuplicates.ToList());
             }
             finally
diff --git a/src/Build/Instance/ProjectImportInstance.cs b/src/Build/Instance/ProjectImportInstance.cs
index 107e32e6c27..7af805dd4d8 100644
--- a/src/Build/Instance/ProjectImportInstance.cs
+++ b/src/Build/Instance/ProjectImportInstance.cs
@@ -9,7 +9,7 @@ namespace Microsoft.Build.Execution;
 /// <summary>
 /// Defines an import from a specific path and that was read at a specified time.
 /// </summary>
-public struct ProjectImportInstance
+public record struct ProjectImportInstance
 {
     /// <summary>
     /// Constructor of this instance.
diff --git a/src/Build/Instance/ProjectInstance.cs b/src/Build/Instance/ProjectInstance.cs
index e4eafc15c1d..b2c5994a719 100644
--- a/src/Build/Instance/ProjectInstance.cs
+++ b/src/Build/Instance/ProjectInstance.cs
@@ -909,10 +909,13 @@ public IDictionary<string, ProjectItemDefinitionInstance> ItemDefinitions
         /// </summary>
         public IReadOnlyList<string> ImportPaths { get; private set; }
 
-
+        /// <summary>
+        /// The full list of <see cref="ProjectImportInstance"/> of all the files that during evaluation contributed to this project instance.
+        /// This does not include projects that were never imported because a condition on an Import element was false.
+        /// The outer ProjectRootElement that maps to this project instance itself is not included.
+        /// </summary>
         public IReadOnlyList<ProjectImportInstance> Imports { get; private set; }
 
-
         /// <summary>
         /// This list will contain duplicate imports if an import is imported multiple times. However, only the first import was used in evaluation.
         /// </summary>
diff --git a/src/Build/PublicAPI/net/PublicAPI.Shipped.txt b/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
index 027d79e6239..1a74e4eceb4 100644
--- a/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
+++ b/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
@@ -1115,6 +1115,11 @@ Microsoft.Build.Execution.OutOfProcNode.OutOfProcNode() -> void
 Microsoft.Build.Execution.OutOfProcNode.Run(bool enableReuse, bool lowPriority, out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
 Microsoft.Build.Execution.OutOfProcNode.Run(bool enableReuse, out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
 Microsoft.Build.Execution.OutOfProcNode.Run(out System.Exception shutdownException) -> Microsoft.Build.Execution.NodeEngineShutdownReason
+Microsoft.Build.Execution.ProjectImportInstance
+Microsoft.Build.Execution.ProjectImportInstance.ProjectImportInstance() -> void
+Microsoft.Build.Execution.ProjectImportInstance.ProjectImportInstance(string fullPath, System.DateTime lastWriteTimeWhenRead) -> void
+Microsoft.Build.Execution.ProjectImportInstance.FullPath.get -> string
+Microsoft.Build.Execution.ProjectImportInstance.LastWriteTimeWhenRead.get -> System.DateTime
 Microsoft.Build.Execution.ProjectInstance
 Microsoft.Build.Execution.ProjectInstance.AddItem(string itemType, string evaluatedInclude) -> Microsoft.Build.Execution.ProjectItemInstance
 Microsoft.Build.Execution.ProjectInstance.AddItem(string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> metadata) -> Microsoft.Build.Execution.ProjectItemInstance
@@ -1144,6 +1149,7 @@ Microsoft.Build.Execution.ProjectInstance.GetProperty(string name) -> Microsoft.
 Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(string name) -> string
 Microsoft.Build.Execution.ProjectInstance.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
 Microsoft.Build.Execution.ProjectInstance.ImportPaths.get -> System.Collections.Generic.IReadOnlyList<string>
+Microsoft.Build.Execution.ProjectInstance.Imports.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Build.Execution.ProjectImportInstance>
 Microsoft.Build.Execution.ProjectInstance.ImportPathsIncludingDuplicates.get -> System.Collections.Generic.IReadOnlyList<string>
 Microsoft.Build.Execution.ProjectInstance.InitialTargets.get -> System.Collections.Generic.List<string>
 Microsoft.Build.Execution.ProjectInstance.IsImmutable.get -> bool
