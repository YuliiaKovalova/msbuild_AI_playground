diff --git a/src/Samples/PortableTask/PortableTask.csproj b/src/Samples/PortableTask/PortableTask.csproj
index a497a305fb2..3f4f9cfe59d 100644
--- a/src/Samples/PortableTask/PortableTask.csproj
+++ b/src/Samples/PortableTask/PortableTask.csproj
@@ -12,7 +12,11 @@
   </ItemGroup>
   <ItemGroup>
     <PackageReference Include="Microsoft.Build.Framework" Version="15.5.180" />
-    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.5.180" />
+    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.5.180" GeneratePathProperty="true" />
+    <PackageDownload Include="Microsoft.Build.Utilities.Core" Version="[15.5.180]" />
   </ItemGroup>
   <Target Name="UpdateXlf" />
+  <Target Name="CopyMSBuildUtilitiesToTemp" AfterTargets="Build">
+    <Copy SourceFiles="$(PkgMicrosoft_Build_Utilities_Core)\lib\net46\Microsoft.Build.Utilities.Core.dll" DestinationFiles="$(OutDir)\OldMSBuild\Microsoft.Build.Utilities.Core.dll" />
+  </Target>
 </Project>
diff --git a/src/Shared/UnitTests/TypeLoader_Tests.cs b/src/Shared/UnitTests/TypeLoader_Tests.cs
index 0bb8cf80573..ee32c78acf0 100644
--- a/src/Shared/UnitTests/TypeLoader_Tests.cs
+++ b/src/Shared/UnitTests/TypeLoader_Tests.cs
@@ -98,11 +98,13 @@ public void LoadTaskDependingOnMSBuild()
                 TransientTestFolder folder = env.CreateFolder(createFolder: true);
                 string currentAssembly = Assembly.GetExecutingAssembly().Location;
                 string utilitiesName = "Microsoft.Build.Utilities.Core.dll";
-                string utilities = Path.Combine(Path.GetDirectoryName(currentAssembly), utilitiesName);
                 string newAssemblyLocation = Path.Combine(folder.Path, Path.GetFileName(currentAssembly));
+                string portableTaskFolderPath = Path.GetFullPath(
+                    Path.Combine(BuildEnvironmentHelper.Instance.CurrentMSBuildToolsDirectory, "..", "..", "..", "Samples", "PortableTask", "Debug", "netstandard2.0", "OldMSBuild"));
+                string utilities = Path.Combine(portableTaskFolderPath, utilitiesName);
                 File.Copy(utilities, Path.Combine(folder.Path, utilitiesName));
                 File.Copy(currentAssembly, newAssemblyLocation);
-                TypeLoader typeLoader = new((_, _) => true);
+                TypeLoader typeLoader = new(TaskLoader.IsTaskClass);
 
                 // If we cannot accept MSBuild next to the task assembly we're loading, this will throw.
                 typeLoader.Load("TypeLoader_Tests", AssemblyLoadInfo.Create(null, newAssemblyLocation), useTaskHost: true);
