diff --git a/src/Build/Collections/PropertyDictionary.cs b/src/Build/Collections/PropertyDictionary.cs
index 26be27d807b..d5931b40a80 100644
--- a/src/Build/Collections/PropertyDictionary.cs
+++ b/src/Build/Collections/PropertyDictionary.cs
@@ -1,4 +1,4 @@
-ï»¿// Licensed to the .NET Foundation under one or more agreements.
+// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
@@ -216,10 +216,7 @@ public IEnumerable<TResult> GetCopyOnReadEnumerable<TResult>(Func<T, TResult> se
         /// Returns true if a property with the specified name is present in the collection,
         /// otherwise false.
         /// </summary>
-        public bool Contains(string name)
-        {
-            return ((IDictionary<string, T>)this).ContainsKey(name);
-        }
+        public bool Contains(string name) => ContainsKey(name);
 
         /// <summary>
         /// Empties the collection
@@ -337,6 +334,11 @@ void IDictionary<string, T>.Add(string key, T value)
             Set(value);
         }
 
+        /// <summary>
+        /// Returns true if the dictionary contains the key
+        /// </summary>
+        public bool ContainsKey(string key) => ((IDictionary<string, T>)this).ContainsKey(key);
+
         /// <summary>
         /// Returns true if the dictionary contains the key
         /// </summary>
