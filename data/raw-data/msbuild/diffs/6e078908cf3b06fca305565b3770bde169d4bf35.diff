diff --git a/ref/Microsoft.Build/net/Microsoft.Build.cs b/ref/Microsoft.Build/net/Microsoft.Build.cs
index 147305e312c..a28dd3febc3 100644
--- a/ref/Microsoft.Build/net/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/net/Microsoft.Build.cs
@@ -1647,7 +1647,7 @@ public readonly partial struct GraphConstructionMetrics
             public int EdgeCount { get { throw null; } }
             public int NodeCount { get { throw null; } }
         }
-        public delegate Microsoft.Build.Execution.ProjectInstance ProjectInstanceFactoryFunc(string projectPath, System.Collections.Generic.Dictionary<string, string> globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
+        public delegate Microsoft.Build.Execution.ProjectInstance ProjectInstanceFactoryFunc(string projectPath, System.Collections.Generic.IDictionary<string, string> globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
     }
     [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
     public partial struct ProjectGraphEntryPoint
diff --git a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
index 395d69a8f6e..e8d5e57281f 100644
--- a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
@@ -1641,7 +1641,7 @@ public readonly partial struct GraphConstructionMetrics
             public int EdgeCount { get { throw null; } }
             public int NodeCount { get { throw null; } }
         }
-        public delegate Microsoft.Build.Execution.ProjectInstance ProjectInstanceFactoryFunc(string projectPath, System.Collections.Generic.Dictionary<string, string> globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
+        public delegate Microsoft.Build.Execution.ProjectInstance ProjectInstanceFactoryFunc(string projectPath, System.Collections.Generic.IDictionary<string, string> globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
     }
     [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
     public partial struct ProjectGraphEntryPoint
diff --git a/src/Build/Graph/ProjectGraph.cs b/src/Build/Graph/ProjectGraph.cs
index b445f72d83d..4890c6b24df 100644
--- a/src/Build/Graph/ProjectGraph.cs
+++ b/src/Build/Graph/ProjectGraph.cs
@@ -50,7 +50,7 @@ public sealed class ProjectGraph
         /// </remarks>
         public delegate ProjectInstance ProjectInstanceFactoryFunc(
             string projectPath,
-            Dictionary<string, string> globalProperties,
+            IDictionary<string, string> globalProperties,
             ProjectCollection projectCollection);
 
         private readonly Lazy<IReadOnlyCollection<ProjectGraphNode>> _projectNodesTopologicallySorted;
@@ -718,7 +718,7 @@ private static ImmutableList<string> ExpandDefaultTargets(ImmutableList<string>
 
         internal static ProjectInstance DefaultProjectInstanceFactory(
             string projectPath,
-            Dictionary<string, string> globalProperties,
+            IDictionary<string, string> globalProperties,
             ProjectCollection projectCollection)
         {
             return new ProjectInstance(
