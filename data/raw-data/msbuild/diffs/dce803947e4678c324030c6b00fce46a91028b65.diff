diff --git a/src/Build/BuildCop/Infrastructure/BuildCopManagerProvider.cs b/src/Build/BuildCop/Infrastructure/BuildCopManagerProvider.cs
index 4e0c5b9d3ac..82052c4118b 100644
--- a/src/Build/BuildCop/Infrastructure/BuildCopManagerProvider.cs
+++ b/src/Build/BuildCop/Infrastructure/BuildCopManagerProvider.cs
@@ -181,9 +181,6 @@ private void SetupSingleAnalyzer(BuildAnalyzerFactoryContext analyzerFactoryCont
             //  on others it should work similarly as disabling them.
             // Disabled analyzer should not only post-filter results - it shouldn't even see the data
 
-
-            // TODO:catch the exception of fetching configuration 
-
             BuildAnalyzerWrapper wrapper;
             BuildAnalyzerConfigurationInternal[] configurations;
             if (analyzerFactoryContext.MaterializedAnalyzer == null)
diff --git a/src/Build/BuildCop/Infrastructure/EditorConfig/EditorConfigGlobsMatcher.cs b/src/Build/BuildCop/Infrastructure/EditorConfig/EditorConfigGlobsMatcher.cs
index 801496b1965..9714a2e9b03 100644
--- a/src/Build/BuildCop/Infrastructure/EditorConfig/EditorConfigGlobsMatcher.cs
+++ b/src/Build/BuildCop/Infrastructure/EditorConfig/EditorConfigGlobsMatcher.cs
@@ -6,7 +6,7 @@
 // with some changes to make it quicker to integrate into the MSBuild.
 // Changes:
 //  1. ArrayBuilder was replaced with List.
-//  2. Exceptions. TODO: Wrap in try/catch blocks for proper reporting
+//  2. Exceptions. Wrap in try/catch blocks for proper reporting
 
 
 using System;
@@ -146,7 +146,7 @@ internal static string UnescapeSectionName(string sectionName)
                 {
                     // We only call this on strings that were already passed through IsAbsoluteEditorConfigPath, so
                     // we shouldn't have any other token kinds here.
-                    throw new Exception("my new exception");
+                    throw new BuildCopConfigurationException($"UnexpectedToken: {tokenKind}", BuildCopConfigurationErrorScope.EditorConfigParser);
                 }
             }
             return sb.ToString();
@@ -310,7 +310,7 @@ private static bool TryCompilePathList(
                         }
                         break;
                     default:
-                        throw new Exception("Exception from Matcher");
+                        throw new BuildCopConfigurationException($"UnexpectedToken: {tokenKind}", BuildCopConfigurationErrorScope.EditorConfigParser);
                 }
             }
             // If we're parsing a choice we should not exit without a closing '}'
@@ -408,7 +408,7 @@ private static bool TryCompileChoice(
                 }
                 else
                 {
-                    throw new Exception("Exception another one");
+                    throw new BuildCopConfigurationException($"UnexpectedValue: {lastChar}", BuildCopConfigurationErrorScope.EditorConfigParser);
                 }
             }
 
