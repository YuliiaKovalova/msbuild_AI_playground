diff --git a/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs b/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs
index 39be2885d44..96edd2f319a 100644
--- a/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/MSBuild_Tests.cs
@@ -44,8 +44,6 @@ public void ProjectItemSpecTooLong()
             {
                 Directory.SetCurrentDirectory(Path.GetTempPath());
 
-                string tempPath = Path.GetTempPath();
-
                 string tempProject = ObjectModelHelpers.CreateTempFileOnDisk(@"
                 <Project DefaultTargets=`TargetA; TargetB; TargetC` ToolsVersion=`msbuilddefaulttoolsversion` xmlns=`msbuildnamespace`>
 
diff --git a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/MSBuild.cs b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/MSBuild.cs
index b1acc384d75..7f70cee318f 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/MSBuild.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/MSBuild.cs
@@ -314,7 +314,7 @@ public async Task<bool> ExecuteInternal()
             {
                 ITaskItem project = Projects[i];
 
-                string projectPath = FileUtilities.GetFullPathNoThrow(project.ItemSpec);
+                string projectPath = FileUtilities.AttemptToShortenPath(project.ItemSpec);
 
                 if (StopOnFirstFailure && !success)
                 {
diff --git a/src/Shared/FileSystem/WindowsFileSystem.cs b/src/Shared/FileSystem/WindowsFileSystem.cs
index aa350505a0d..1493d0f29a8 100644
--- a/src/Shared/FileSystem/WindowsFileSystem.cs
+++ b/src/Shared/FileSystem/WindowsFileSystem.cs
@@ -60,7 +60,11 @@ public override bool DirectoryExists(string path)
 
         public override bool FileExists(string path)
         {
-            return NativeMethodsShared.FileExistsWindows(path);
+#if NETFRAMEWORK
+            return Microsoft.IO.File.Exists(path);
+#else
+            return File.Exists(path);
+#endif
         }
 
         public override bool FileOrDirectoryExists(string path)
diff --git a/src/Tasks.UnitTests/MSBuild_Tests.cs b/src/Tasks.UnitTests/MSBuild_Tests.cs
index a09bd4d8c22..46a4de15cb9 100644
--- a/src/Tasks.UnitTests/MSBuild_Tests.cs
+++ b/src/Tasks.UnitTests/MSBuild_Tests.cs
@@ -46,8 +46,6 @@ public void ProjectItemSpecTooLong()
             {
                 Directory.SetCurrentDirectory(Path.GetTempPath());
 
-                string tempPath = Path.GetTempPath();
-
                 string tempProject = ObjectModelHelpers.CreateTempFileOnDisk(@"
                 <Project DefaultTargets=`TargetA; TargetB; TargetC` ToolsVersion=`msbuilddefaulttoolsversion` xmlns=`msbuildnamespace`>
 
@@ -69,7 +67,7 @@ public void ProjectItemSpecTooLong()
                     projectFile1 += "..\\";
                 }
 
-                int rootLength = Path.GetPathRoot(tempPath).Length;
+                int rootLength = Path.GetPathRoot(tempProject).Length;
                 string tempPathNoRoot = tempProject.Substring(rootLength);
 
                 projectFile1 += tempPathNoRoot;
diff --git a/src/Tasks/MSBuild.cs b/src/Tasks/MSBuild.cs
index 0ff3a0bace4..9e78a48daf4 100644
--- a/src/Tasks/MSBuild.cs
+++ b/src/Tasks/MSBuild.cs
@@ -279,7 +279,7 @@ public override bool Execute()
             {
                 ITaskItem project = Projects[i];
 
-                string projectPath = FileUtilities.GetFullPathNoThrow(project.ItemSpec);
+                string projectPath = FileUtilities.AttemptToShortenPath(project.ItemSpec);
 
                 if (StopOnFirstFailure && !success)
                 {
@@ -506,7 +506,7 @@ internal static bool ExecuteTargets(
                 if (projects[i] != null)
                 {
                     // Retrieve projectDirectory only the first time.  It never changes anyway.
-                    string projectPath = FileUtilities.GetFullPathNoThrow(projects[i].ItemSpec);
+                    string projectPath = FileUtilities.AttemptToShortenPath(projects[i].ItemSpec);
                     projectDirectory[i] = Path.GetDirectoryName(projectPath);
                     projectNames[i] = projects[i].ItemSpec;
                     toolsVersions[i] = toolsVersion;
