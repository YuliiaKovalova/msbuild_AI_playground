diff --git a/src/Build.UnitTests/BackEnd/MockHost.cs b/src/Build.UnitTests/BackEnd/MockHost.cs
index 48e0c18d755..1d787f19f91 100644
--- a/src/Build.UnitTests/BackEnd/MockHost.cs
+++ b/src/Build.UnitTests/BackEnd/MockHost.cs
@@ -2,7 +2,6 @@
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
 using Microsoft.Build.BackEnd;
-using Microsoft.Build.BackEnd.Components.ResourceManager;
 using Microsoft.Build.BackEnd.Logging;
 using System;
 using Microsoft.Build.BackEnd.SdkResolution;
@@ -60,8 +59,6 @@ internal class MockHost : MockLoggingService, IBuildComponentHost, IBuildCompone
 
         private ISdkResolverService _sdkResolverService;
 
-        private readonly ResourceManagerService _taskResourceManager;
-
         #region SystemParameterFields
 
         #endregion;
@@ -105,9 +102,6 @@ public MockHost(BuildParameters buildParameters)
 
             _sdkResolverService = new MockSdkResolverService();
             ((IBuildComponent)_sdkResolverService).InitializeComponent(this);
-
-            _taskResourceManager = new ResourceManagerService();
-            ((IBuildComponent)_taskResourceManager).InitializeComponent(this);
         }
 
         /// <summary>
@@ -176,7 +170,6 @@ public IBuildComponent GetComponent(BuildComponentType type)
                 BuildComponentType.ResultsCache => (IBuildComponent)_resultsCache,
                 BuildComponentType.RequestBuilder => (IBuildComponent)_requestBuilder,
                 BuildComponentType.SdkResolverService => (IBuildComponent)_sdkResolverService,
-                BuildComponentType.TaskResourceManager => (IBuildComponent)_taskResourceManager,
                 _ => throw new ArgumentException("Unexpected type " + type),
             };
         }
diff --git a/src/Build/BackEnd/Components/BuildComponentFactoryCollection.cs b/src/Build/BackEnd/Components/BuildComponentFactoryCollection.cs
index 6c85709a550..05ea23f5425 100644
--- a/src/Build/BackEnd/Components/BuildComponentFactoryCollection.cs
+++ b/src/Build/BackEnd/Components/BuildComponentFactoryCollection.cs
@@ -3,7 +3,6 @@
 
 using System.Collections.Generic;
 using Microsoft.Build.BackEnd.Components.Caching;
-using Microsoft.Build.BackEnd.Components.ResourceManager;
 using Microsoft.Build.BackEnd.SdkResolution;
 using Microsoft.Build.Shared;
 
@@ -79,8 +78,6 @@ public void RegisterDefaultFactories()
 
             // SDK resolution
             _componentEntriesByType[BuildComponentType.SdkResolverService] = new BuildComponentEntry(BuildComponentType.SdkResolverService, MainNodeSdkResolverService.CreateComponent, CreationPattern.Singleton);
-
-            _componentEntriesByType[BuildComponentType.TaskResourceManager] = new BuildComponentEntry(BuildComponentType.TaskResourceManager, ResourceManagerService.CreateComponent, CreationPattern.Singleton);
         }
 
         /// <summary>
diff --git a/src/Build/BackEnd/Components/IBuildComponentHost.cs b/src/Build/BackEnd/Components/IBuildComponentHost.cs
index da27a3049dc..4e57c5f2ae1 100644
--- a/src/Build/BackEnd/Components/IBuildComponentHost.cs
+++ b/src/Build/BackEnd/Components/IBuildComponentHost.cs
@@ -128,11 +128,6 @@ internal enum BuildComponentType
         /// The SDK resolution service.
         /// </summary>
         SdkResolverService,
-
-        /// <summary>
-        /// Resource manager for tasks to use via <see cref="Microsoft.Build.Framework.IBuildEngine8.RequestCores(int)"/>.
-        /// </summary>
-        TaskResourceManager,
     }
 
     /// <summary>
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
index 8f0d256aa6b..e0b0f699686 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
@@ -20,7 +20,6 @@
 using TaskLoggingContext = Microsoft.Build.BackEnd.Logging.TaskLoggingContext;
 using System.Threading.Tasks;
 using Microsoft.Build.BackEnd.Components.Caching;
-using Microsoft.Build.BackEnd.Components.ResourceManager;
 using System.Reflection;
 using Microsoft.Build.Eventing;
 
diff --git a/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs b/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
deleted file mode 100644
index 10934d2fbbc..00000000000
--- a/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
+++ /dev/null
@@ -1,55 +0,0 @@
-ï»¿// Copyright (c) Microsoft. All rights reserved.
-// Licensed under the MIT license. See LICENSE file in the project root for full license information.
-
-using Microsoft.Build.BackEnd.Logging;
-using Microsoft.Build.Shared;
-using Microsoft.Build.Utilities;
-
-using System.Threading;
-
-#nullable enable
-
-namespace Microsoft.Build.BackEnd.Components.ResourceManager
-{
-    class ResourceManagerService : IBuildComponent
-    {
-        //ILoggingService? _loggingService;
-
-        public int TotalNumberHeld = -1;
-        public int Count = 0;
-
-        internal static IBuildComponent CreateComponent(BuildComponentType type)
-        {
-            ErrorUtilities.VerifyThrow(type == BuildComponentType.TaskResourceManager, "Cannot create components of type {0}", type);
-
-            return new ResourceManagerService();
-        }
-
-        public void InitializeComponent(IBuildComponentHost host)
-        {
-
-        }
-
-        public void ShutdownComponent()
-        {
-            //_loggingService = null;
-
-            TotalNumberHeld = -2;
-        }
-
-        public int RequestCores(int requestedCores, TaskLoggingContext _taskLoggingContext)
-        {
-            return 0;
-
-            // _loggingService?.LogComment(_taskLoggingContext.BuildEventContext, Framework.MessageImportance.Low, "ResourceManagerRequestedCores", requestedCores, i, TotalNumberHeld);
-        }
-
-        public void ReleaseCores(int coresToRelease, TaskLoggingContext _taskLoggingContext)
-        {
-            ErrorUtilities.VerifyThrow(coresToRelease > 0, "Tried to release {0} cores", coresToRelease);
-            return;
-
-            //_loggingService?.LogComment(_taskLoggingContext.BuildEventContext, Framework.MessageImportance.Low, "ResourceManagerReleasedCores", coresToRelease, TotalNumberHeld);
-        }
-    }
-}
diff --git a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
index c5a60da817b..3f085ed3335 100644
--- a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
+++ b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
@@ -10,7 +10,6 @@
 using System.Text;
 using System.Threading;
 using System.Threading.Tasks;
-using Microsoft.Build.BackEnd.Components.ResourceManager;
 using Microsoft.Build.Execution;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
@@ -122,7 +121,6 @@ internal class Scheduler : IScheduler
         /// The configuration cache.
         /// </summary>
         private IConfigCache _configCache;
-        private ResourceManagerService _resourceManager;
 
         /// <summary>
         /// The results cache.
@@ -612,7 +610,6 @@ public void InitializeComponent(IBuildComponentHost host)
             _componentHost = host;
             _resultsCache = (IResultsCache)_componentHost.GetComponent(BuildComponentType.ResultsCache);
             _configCache = (IConfigCache)_componentHost.GetComponent(BuildComponentType.ConfigCache);
-            _resourceManager = (ResourceManagerService)_componentHost.GetComponent(BuildComponentType.TaskResourceManager);
         }
 
         /// <summary>
diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index 31797c6619e..2dff53cc972 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -156,7 +156,6 @@
     <Compile Include="BackEnd\BuildManager\CacheAggregator.cs" />
     <Compile Include="BackEnd\Components\Caching\ConfigCacheWithOverride.cs" />
     <Compile Include="BackEnd\Components\Caching\ResultsCacheWithOverride.cs" />
-    <Compile Include="BackEnd\Components\ResourceManager\ResourceManagerService.cs" />
     <Compile Include="BackEnd\Components\ProjectCache\*.cs" />
     <Compile Include="BackEnd\Components\SdkResolution\TranslationHelpers.cs" />
     <Compile Include="FileSystem\*.cs" />
