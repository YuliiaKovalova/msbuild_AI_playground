diff --git a/src/Build.UnitTests/BackEnd/EventSourceSink_Tests.cs b/src/Build.UnitTests/BackEnd/EventSourceSink_Tests.cs
index 2ead8d52025..025bc9a3f00 100644
--- a/src/Build.UnitTests/BackEnd/EventSourceSink_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/EventSourceSink_Tests.cs
@@ -736,7 +736,7 @@ internal sealed class RaiseEventHelper
             /// <summary>
             /// Build Canceled Event
             /// </summary>
-            private static BuildCanceledEventArgs s_buildCanceled = new BuildCanceledEventArgs("Message", "Keyword");
+            private static BuildCanceledEventArgs s_buildCanceled = new BuildCanceledEventArgs("Message");
 
             /// <summary>
             /// Build Message Event
diff --git a/src/Build.UnitTests/BackEnd/LoggingServicesLogMethod_Tests.cs b/src/Build.UnitTests/BackEnd/LoggingServicesLogMethod_Tests.cs
index 88a01498fac..039a5310568 100644
--- a/src/Build.UnitTests/BackEnd/LoggingServicesLogMethod_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/LoggingServicesLogMethod_Tests.cs
@@ -1061,7 +1061,6 @@ public void LogBuildCanceled(bool onlyLogCriticalEvents)
             BuildCanceledEventArgs buildEvent =
                 new BuildCanceledEventArgs(
                     message,
-                    null /* no help keyword */,
                     service.ProcessedBuildEvent.Timestamp);
 
             Assert.IsType<BuildCanceledEventArgs>(service.ProcessedBuildEvent);
diff --git a/src/Build.UnitTests/ConsoleLogger_Tests.cs b/src/Build.UnitTests/ConsoleLogger_Tests.cs
index 4144c35429a..b9e43936604 100644
--- a/src/Build.UnitTests/ConsoleLogger_Tests.cs
+++ b/src/Build.UnitTests/ConsoleLogger_Tests.cs
@@ -475,7 +475,7 @@ public void NullEventFields()
             es.Consume(new BuildFinishedEventArgs(null, null, true));
             es.Consume(new BuildFinishedEventArgs(null, null, true));
             es.Consume(new MyCustomBuildEventArgs2());
-            es.Consume(new BuildCanceledEventArgs(null, null));
+            es.Consume(new BuildCanceledEventArgs(null));
             // No exception raised
         }
 
@@ -512,7 +512,7 @@ public void NullEventFieldsParallel()
             pfea.BuildEventContext = buildEventContext;
             BuildFinishedEventArgs bfea = new BuildFinishedEventArgs(null, null, true);
             bfea.BuildEventContext = buildEventContext;
-            BuildCanceledEventArgs bcea = new BuildCanceledEventArgs(null, null);
+            BuildCanceledEventArgs bcea = new BuildCanceledEventArgs(null);
             bcea.BuildEventContext = buildEventContext;
             MyCustomBuildEventArgs2 mcea = new MyCustomBuildEventArgs2();
             mcea.BuildEventContext = buildEventContext;
diff --git a/src/Build/BackEnd/Components/Logging/LoggingServiceLogMethods.cs b/src/Build/BackEnd/Components/Logging/LoggingServiceLogMethods.cs
index bb442a25900..e17f4a45c14 100644
--- a/src/Build/BackEnd/Components/Logging/LoggingServiceLogMethods.cs
+++ b/src/Build/BackEnd/Components/Logging/LoggingServiceLogMethods.cs
@@ -424,8 +424,7 @@ public void LogBuildFinished(bool success)
         public void LogBuildCanceled()
         {
             string message = ResourceUtilities.GetResourceString("AbortingBuild"); 
-            
-            BuildCanceledEventArgs buildEvent = new BuildCanceledEventArgs(message, null);
+            BuildCanceledEventArgs buildEvent = new BuildCanceledEventArgs(message);
 
             ProcessLoggingEvent(buildEvent);
 
diff --git a/src/Framework/BuildCanceledEventArgs.cs b/src/Framework/BuildCanceledEventArgs.cs
index e403a791357..a5152439e9c 100644
--- a/src/Framework/BuildCanceledEventArgs.cs
+++ b/src/Framework/BuildCanceledEventArgs.cs
@@ -16,11 +16,8 @@ public sealed class BuildCanceledEventArgs : BuildStatusEventArgs
         /// Sender field cannot be set here and is assumed to be "MSBuild"
         /// </summary>
         /// <param name="message">text message</param>
-        /// <param name="helpKeyword">help keyword </param>
-        public BuildCanceledEventArgs(
-            string? message,
-            string? helpKeyword)
-            : this(message, helpKeyword, DateTime.UtcNow)
+        public BuildCanceledEventArgs(string? message)
+            : this(message, DateTime.UtcNow)
         {
         }
 
@@ -28,32 +25,26 @@ public BuildCanceledEventArgs(
         /// Constructor which allows the timestamp to be set
         /// </summary>
         /// <param name="message">text message</param>
-        /// <param name="helpKeyword">help keyword </param>
         /// <param name="eventTimestamp">Timestamp when the event was created</param>
         public BuildCanceledEventArgs(
             string? message,
-            string? helpKeyword,
             DateTime eventTimestamp)
-            : this(message, helpKeyword, eventTimestamp, null)
+            : this(message, eventTimestamp, null)
         {
-            // do nothing
         }
 
         /// <summary>
         /// Constructor which allows the timestamp to be set
         /// </summary>
         /// <param name="message">text message</param>
-        /// <param name="helpKeyword">help keyword </param>
         /// <param name="eventTimestamp">Timestamp when the event was created</param>
         /// <param name="messageArgs">message arguments</param>
         public BuildCanceledEventArgs(
             string? message,
-            string? helpKeyword,
             DateTime eventTimestamp,
             params object[]? messageArgs)
-            : base(message, helpKeyword, "MSBuild", eventTimestamp, messageArgs)
+            : base(message, null, "MSBuild", eventTimestamp, messageArgs)
         {
-            // do nothing
         }
     }
 }
