diff --git a/src/Build.UnitTests/Evaluation/Expander_Tests.cs b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
index d5fefad3e1e..1fb7e636e55 100644
--- a/src/Build.UnitTests/Evaluation/Expander_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
@@ -4335,7 +4335,7 @@ public void PropertyFunctionGuidNewGuid()
 
         // TODO: update features list
         [Theory]
-        [InlineData("NonExistingFeature", "NotFound")]
+        [InlineData("NonExistingFeature", "Undefined")]
         public void PropertyFunctionCheckFeatureAvailability(string featureName, string availability)
         {
             var expander = new Expander<ProjectPropertyInstance, ProjectItemInstance>(new PropertyDictionary<ProjectPropertyInstance>(), FileSystems.Default);
diff --git a/src/Framework/Features.cs b/src/Framework/Features.cs
index a53a9608d19..636a30ba859 100644
--- a/src/Framework/Features.cs
+++ b/src/Framework/Features.cs
@@ -15,9 +15,9 @@ namespace Microsoft.Build.Framework
     public enum FeatureStatus
     {
         /// <summary>
-        /// The feature is not found.
+        /// The feature availability is not determined.
         /// </summary>
-        NotFound,
+        Undefined,
 
         /// <summary>
         /// The feature is available.
@@ -53,7 +53,7 @@ public static class Features
         public static FeatureStatus CheckFeatureAvailability(string featureName)
         {
             return _featureStatusMap.TryGetValue(featureName, out FeatureStatus status) ?
-                 status : FeatureStatus.NotFound;
+                 status : FeatureStatus.Undefined;
         }
     }
 }
