diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 38922b2de85..94766afcd2d 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1376,10 +1376,11 @@ internal void ExecuteSubmission<TRequestData, TResultData>(
             where TResultData : BuildResultBase
         {
             // TODO: here we should add BuildRequestStarted https://github.com/dotnet/msbuild/issues/10145
+            BuildSubmissionStartedEventArgs submissionStartedEvent = new(submission.BuildRequestData);
+
             // BuildEventContext buildEventContext = new BuildEventContext(submission.SubmissionId, 1, BuildEventContext.InvalidProjectInstanceId, BuildEventContext.InvalidProjectContextId, BuildEventContext.InvalidTargetId, BuildEventContext.InvalidTaskId);
             // ((IBuildComponentHost)this).LoggingService.LogBuildEvent()
 
-
             if (submission is BuildSubmission buildSubmission)
             {
                 ExecuteSubmission(buildSubmission, allowMainThreadBuild);
diff --git a/src/Framework/BuildSubmissionStartedEventArgs.cs b/src/Framework/BuildSubmissionStartedEventArgs.cs
new file mode 100644
index 00000000000..1c8ac7dc4d6
--- /dev/null
+++ b/src/Framework/BuildSubmissionStartedEventArgs.cs
@@ -0,0 +1,32 @@
+ï»¿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.Collections.Generic;
+
+namespace Microsoft.Build.Framework
+{
+    // QUESTIONS: I have a base, but the imports are a bit problematic, bc the types are in Microsoft.BuildExecution
+    // which I don't think is a great import to make in this case.
+    [Serializable]
+    public class BuildSubmissionStartedEventArgs : EventArgs
+    {
+        public IDictionary<string, string> GlobalProperties { get; protected set; }
+
+        public string EntryProjectFullPath { get; protected set; }
+
+        public ICollection<string> TargetNames { get; protected set; }
+
+        public BuildRequestDataFlags Flags { get; protected set; }
+
+        private string? SubmissionId;
+
+        public BuildSubmissionStartedEventArgs(BuildRequestDataBase requestData)
+        {
+            requestData.EntryProjectFullPath = EntryProjectFullPath;
+            requestData.TargetNames = TargetNames;
+            requestData.Flags = Flags;
+            requestData.SubmissionId = SubmissionId;
+        }
+    }
+}
