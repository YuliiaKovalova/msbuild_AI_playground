diff --git a/eng/Common.globalconfig b/eng/Common.globalconfig
index ba417e063f2..b6bbae246bf 100644
--- a/eng/Common.globalconfig
+++ b/eng/Common.globalconfig
@@ -984,7 +984,7 @@ dotnet_diagnostic.SA1503.severity = suggestion
 dotnet_diagnostic.SA1504.severity = suggestion
 
 # An opening brace should not be followed by a blank line
-dotnet_diagnostic.SA1505.severity = suggestion
+dotnet_diagnostic.SA1505.severity = warning
 
 # Element documentation headers should not be followed by blank line
 dotnet_diagnostic.SA1506.severity = suggestion
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index e2b4a71dc6f..cec13c67f40 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1741,7 +1741,6 @@ void IssueBuildSubmissionToSchedulerImpl(BuildSubmission submission, bool allowM
 
                     lock (_syncLock)
                     {
-
                         if (resetMainThreadOnFailure)
                         {
                             _legacyThreadingData.MainThreadSubmissionId = -1;
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TargetUpToDateChecker.cs b/src/Build/BackEnd/Components/RequestBuilder/TargetUpToDateChecker.cs
index 06b221c0d2f..c57211fa290 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TargetUpToDateChecker.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TargetUpToDateChecker.cs
@@ -814,7 +814,6 @@ ElementLocation elementLocation
 
                     if (itemVectorContents.Count > 0)
                     {
-
                         // Expander set the item type it found
                         string itemVectorType = itemFactory.ItemType;
 
diff --git a/src/Build/BackEnd/Shared/BuildRequest.cs b/src/Build/BackEnd/Shared/BuildRequest.cs
index 5958f654534..d0ffa213952 100644
--- a/src/Build/BackEnd/Shared/BuildRequest.cs
+++ b/src/Build/BackEnd/Shared/BuildRequest.cs
@@ -97,7 +97,6 @@ internal class BuildRequest : INodePacket
         /// </summary>
         public BuildRequest()
         {
-
         }
 
         private BuildRequest(
diff --git a/src/Build/Evaluation/Context/EvaluationContext.cs b/src/Build/Evaluation/Context/EvaluationContext.cs
index 7d9b891a484..ea55c81ebad 100644
--- a/src/Build/Evaluation/Context/EvaluationContext.cs
+++ b/src/Build/Evaluation/Context/EvaluationContext.cs
@@ -67,7 +67,6 @@ private EvaluationContext(SharingPolicy policy, IFileSystem fileSystem, ISdkReso
         /// </summary>
         public static EvaluationContext Create(SharingPolicy policy)
         {
-            
             // ReSharper disable once IntroduceOptionalParameters.Global
             // do not remove this method to avoid breaking binary compatibility
             return Create(policy, fileSystem: null);
diff --git a/src/Build/Evaluation/Evaluator.cs b/src/Build/Evaluation/Evaluator.cs
index 53f192f268d..2357bbce274 100644
--- a/src/Build/Evaluation/Evaluator.cs
+++ b/src/Build/Evaluation/Evaluator.cs
@@ -1860,7 +1860,6 @@ static string EvaluateProperty(string value, IElementLocation location,
 
                     if (sdkResult.AdditionalPaths != null)
                     {
-
                         foreach (var additionalPath in sdkResult.AdditionalPaths)
                         {
                             ExpandAndLoadImportsFromUnescapedImportExpression(directoryOfImportingFile, importElement, Path.Combine(additionalPath, project),
diff --git a/src/Build/Evaluation/Expander.cs b/src/Build/Evaluation/Expander.cs
index 3c4e72efc3e..3eda858041e 100644
--- a/src/Build/Evaluation/Expander.cs
+++ b/src/Build/Evaluation/Expander.cs
@@ -5056,7 +5056,6 @@ private static bool IsInstanceMethodAvailable(string methodName)
             /// </summary>
             private object LateBindExecute(Exception ex, BindingFlags bindingFlags, object objectInstance /* null unless instance method */, object[] args, bool isConstructor)
             {
-
                 // First let's try for a method where all arguments are strings..
                 Type[] types = new Type[_arguments.Length];
                 for (int n = 0; n < _arguments.Length; n++)
diff --git a/src/Build/Instance/HostServices.cs b/src/Build/Instance/HostServices.cs
index 99d07305b77..5a962418a7a 100644
--- a/src/Build/Instance/HostServices.cs
+++ b/src/Build/Instance/HostServices.cs
@@ -121,7 +121,6 @@ public ITaskHost GetHostObject(string projectFile, string targetName, string tas
         /// </summary>
         public void RegisterHostObject(string projectFile, string targetName, string taskName, ITaskHost hostObject)
         {
-
 /* Unmerged change from project 'Microsoft.Build (netcoreapp2.1)'
 Before:
             ErrorUtilities.VerifyThrowArgumentNull(projectFile, "projectFile");
diff --git a/src/Build/Instance/ProjectItemGroupTaskItemInstance.cs b/src/Build/Instance/ProjectItemGroupTaskItemInstance.cs
index 9eeda046676..255729b5ba3 100644
--- a/src/Build/Instance/ProjectItemGroupTaskItemInstance.cs
+++ b/src/Build/Instance/ProjectItemGroupTaskItemInstance.cs
@@ -197,7 +197,6 @@ List<ProjectItemGroupTaskMetadataInstance> metadata
 
         private ProjectItemGroupTaskItemInstance()
         {
-
         }
 
         /// <summary>
diff --git a/src/Build/Instance/ProjectItemInstance.cs b/src/Build/Instance/ProjectItemInstance.cs
index 4d5d9804805..bdc80f971a0 100644
--- a/src/Build/Instance/ProjectItemInstance.cs
+++ b/src/Build/Instance/ProjectItemInstance.cs
@@ -1835,7 +1835,6 @@ private string GetBuiltInMetadataEscaped(string name)
             /// </summary>
             private ProjectMetadataInstance GetItemDefinitionMetadata(string metadataName)
             {
-
                 // Check any inherited item definition metadata first. It's more like
                 // direct metadata, but we didn't want to copy the tables.
                 if (_itemDefinitions != null)
diff --git a/src/Framework/Sdk/SdkResultItem.cs b/src/Framework/Sdk/SdkResultItem.cs
index cff07bb8bf7..81e5618bfc9 100644
--- a/src/Framework/Sdk/SdkResultItem.cs
+++ b/src/Framework/Sdk/SdkResultItem.cs
@@ -8,7 +8,6 @@
 
 namespace Microsoft.Build.Framework
 {
-
     #nullable enable
     
     /// <summary>
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index c83fc987d12..0dc9ca1cace 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1773,7 +1773,6 @@ internal static string ExtractSwitchParameters
             int switchIndicatorsLength
         )
         {
-
             // find the parameter indicator again using the quoted arg
             // NOTE: since the parameter indicator cannot be part of a switch name, quoting around it is not relevant, because a
             // parameter indicator cannot be escaped or made into a literal
diff --git a/src/Shared/FileSystem/IFileSystem.cs b/src/Shared/FileSystem/IFileSystem.cs
index 3b08f7ff451..001838a7070 100644
--- a/src/Shared/FileSystem/IFileSystem.cs
+++ b/src/Shared/FileSystem/IFileSystem.cs
@@ -9,7 +9,6 @@
 
 namespace Microsoft.Build.Shared.FileSystem
 {
-
     /*
      * This is a clone of Microsoft.Build.FileSystem.MSBuildFileSystemBase.
      * MSBuildFileSystemBase is the public, reference interface. Changes should be made to MSBuildFileSystemBase and cloned in IFileSystem.
diff --git a/src/Tasks.UnitTests/RemoveDir_Tests.cs b/src/Tasks.UnitTests/RemoveDir_Tests.cs
index 2cff8ba1ca5..20c12afa241 100644
--- a/src/Tasks.UnitTests/RemoveDir_Tests.cs
+++ b/src/Tasks.UnitTests/RemoveDir_Tests.cs
@@ -47,7 +47,6 @@ public void AttributeForwarding()
         [Fact]
         public void SimpleDelete()
         {
-
             using (TestEnvironment env = TestEnvironment.Create(_output))
             {
                 List<TaskItem> list = new List<TaskItem>();
diff --git a/src/Tasks/AxReference.cs b/src/Tasks/AxReference.cs
index 3b0c87d1229..f6c713b618b 100644
--- a/src/Tasks/AxReference.cs
+++ b/src/Tasks/AxReference.cs
@@ -60,7 +60,6 @@ protected override string GetWrapperFileNameInternal(string typeLibName)
         /// </summary>
         internal bool GenerateWrapper(out ComReferenceWrapperInfo wrapperInfo)
         {
-
             // The tool gets the public key for itself, but we get it here anyway to
             // give nice messages in errors cases.
             GetAndValidateStrongNameKey(out _, out _);
diff --git a/src/Tasks/AxTlbBaseReference.cs b/src/Tasks/AxTlbBaseReference.cs
index 6f5ac03fb55..72ab5cc98c9 100644
--- a/src/Tasks/AxTlbBaseReference.cs
+++ b/src/Tasks/AxTlbBaseReference.cs
@@ -250,7 +250,6 @@ internal static string GetWrapperFileName(string interopDllHeader, string typeLi
         /// </summary>
         internal void GetAndValidateStrongNameKey(out StrongNameKeyPair keyPair, out byte[] publicKey)
         {
-
             // get key pair/public key
             StrongNameUtils.GetStrongNameKey(Log, KeyFile, KeyContainer, out keyPair, out publicKey);
 
diff --git a/src/Tasks/ComReference.cs b/src/Tasks/ComReference.cs
index cea831d5798..c041eead056 100644
--- a/src/Tasks/ComReference.cs
+++ b/src/Tasks/ComReference.cs
@@ -238,7 +238,6 @@ internal static void GetFuncDescForDescIndex(ITypeInfo typeInfo, int funcIndex,
         /// </summary>
         internal static bool GetTypeLibNameForITypeLib(TaskLoggingHelper log, bool silent, ITypeLib typeLib, string typeLibId, out string typeLibName)
         {
-
             // see if the type library supports ITypeLib2
             if (!(typeLib is ITypeLib2 typeLib2))
             {
diff --git a/src/Tasks/GenerateResource.cs b/src/Tasks/GenerateResource.cs
index 1b930d2c177..8641ea19c68 100644
--- a/src/Tasks/GenerateResource.cs
+++ b/src/Tasks/GenerateResource.cs
@@ -51,7 +51,6 @@ namespace Microsoft.Build.Tasks
     [RequiredRuntime("v2.0")]
     public sealed partial class GenerateResource : TaskExtension
     {
-
 #region Fields
 
         // This cache helps us track the linked resource files listed inside of a resx resource file
