diff --git a/src/Build/BackEnd/Components/RequestBuilder/TargetUpToDateChecker.cs b/src/Build/BackEnd/Components/RequestBuilder/TargetUpToDateChecker.cs
index 8c525fa5895..ee3116c31e5 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TargetUpToDateChecker.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TargetUpToDateChecker.cs
@@ -857,6 +857,7 @@ ElementLocation elementLocation
         /// Retrieves the item-specs of all items in the given item vector collection.
         /// </summary>
         /// <param name="itemVectors"></param>
+        /// <param name="earlyExitIfNonEmpty"></param>
         /// <returns>list of item-specs</returns>
         private static List<string> GetItemSpecsFromItemVectors(ItemVectorPartitionCollection itemVectors, bool earlyExitIfNonEmpty = false)
         {
diff --git a/src/Framework/ITaskItemExtensions.cs b/src/Framework/ITaskItemExtensions.cs
index e827a3d232f..2c0bfa2abb8 100644
--- a/src/Framework/ITaskItemExtensions.cs
+++ b/src/Framework/ITaskItemExtensions.cs
@@ -1,10 +1,8 @@
 // Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
-using System;
 using System.Collections;
 using System.Collections.Generic;
-using System.Diagnostics;
 
 #nullable disable
 
diff --git a/src/Tasks/AssemblyDependency/ReferenceTable.cs b/src/Tasks/AssemblyDependency/ReferenceTable.cs
index 661807b1619..ccdb25824ef 100644
--- a/src/Tasks/AssemblyDependency/ReferenceTable.cs
+++ b/src/Tasks/AssemblyDependency/ReferenceTable.cs
@@ -2215,13 +2215,19 @@ private static void RemoveReferencesWithoutConflicts
             Dictionary<string, List<AssemblyNameReference>> baseNameToReferences
         )
         {
+            List<string> toRemove = new(baseNameToReferences.Count);
             foreach (KeyValuePair<string, List<AssemblyNameReference>> kvp in baseNameToReferences)
             {
                 if (kvp.Value.Count == 1)
                 {
-                    baseNameToReferences.Remove(kvp.Key);
+                    toRemove.Add(kvp.Key);
                 }
             }
+
+            foreach (string key in toRemove)
+            {
+                baseNameToReferences.Remove(key);
+            }
         }
 
         // TODO: Verify correctness of this implementation and extend to more cases.
