diff --git a/src/Build.UnitTests/BinaryLogger_Tests.cs b/src/Build.UnitTests/BinaryLogger_Tests.cs
index 3d8897a3e20..ccd837ef921 100644
--- a/src/Build.UnitTests/BinaryLogger_Tests.cs
+++ b/src/Build.UnitTests/BinaryLogger_Tests.cs
@@ -530,63 +530,6 @@ public void BinaryLoggerShouldEmbedSymlinkFilesViaTaskOutput()
                 customMessage: $"Embedded files: {string.Join(",", zipArchive.Entries)}");
         }
 
-        [Fact]
-        public void EmbedsSourceFileFromRoslynCodeTaskFactoryInBinlog()
-        {
-            string taskName = "HelloTask";
-            string csprojFileName = "EmbedsSourceFileInTheBinlogTest.csproj";
-            string targetName = "SayHello";
-
-            TransientTestFolder folder = _env.CreateFolder(createFolder: true);
-            TransientTestFile taskClass = _env.CreateFile(folder, $"{taskName}.cs", $@"namespace InlineTask
-{{
-    using Microsoft.Build.Utilities;
-
-    public class {taskName} : Task
-    {{
-        public override bool Execute()
-        {{
-            Log.LogMessage(""Hello, world!"");
-            return !Log.HasLoggedErrors;
-        }}
-    }}
-}}
-");
-
-            TransientTestFile assemblyProj = _env.CreateFile(folder, csprojFileName, $@"
-<Project>
-
-  <UsingTask
-    TaskName=""{taskName}""
-    TaskFactory=""RoslynCodeTaskFactory""
-    AssemblyFile=""$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll"">
-    <Task>
-      <Code Type=""Class"" Language=""cs"" Source=""{taskClass.Path}"">
-      </Code>
-    </Task>
-  </UsingTask>
-
-    <Target Name=""{targetName}"">
-        <{taskName} />
-    </Target>
-
-</Project>
-                ");
-
-            string output = RunnerUtilities.ExecMSBuild($"{assemblyProj.Path} /t:{targetName} /bl:\"LogFile={_logFile};ProjectImports=ZipFile\"", out bool success);
-
-            success.ShouldBeTrue();
-
-            string projectImportsZipPath = Path.ChangeExtension(_logFile, ".ProjectImports.zip");
-            using var fileStream = new FileStream(projectImportsZipPath, FileMode.Open);
-            using var zipArchive = new ZipArchive(fileStream, ZipArchiveMode.Read);
-
-            // Can't just compare `Name` because `ZipArchive` does not handle unix directory separators well
-            // thus producing garbled fully qualified paths in the actual .ProjectImports.zip entries
-            zipArchive.Entries.ShouldContain(zE => zE.Name.EndsWith($"{taskName}.cs"),
-                "");
-        }
-
         [Fact]
         public void BinaryLoggerShouldNotThrowWhenMetadataCannotBeExpanded()
         {
diff --git a/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs b/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
index 967dfe65a42..ac33a8f22b3 100644
--- a/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
+++ b/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
@@ -22,6 +22,7 @@
 using Xunit;
 
 using static VerifyXunit.Verifier;
+using System.IO.Compression;
 
 #nullable disable
 
@@ -644,6 +645,64 @@ public override bool Execute()
             }
         }
 
+        [Fact]
+        public void EmbedsSourceFileInBinlog()
+        {
+            string taskName = "HelloTask";
+            string csprojFileName = "EmbedsSourceFileInTheBinlogTest.csproj";
+            string targetName = "SayHello";
+
+            var env = TestEnvironment.Create();
+            TransientTestFolder folder = env.CreateFolder(createFolder: true);
+            TransientTestFile taskClass = env.CreateFile(folder, $"{taskName}.cs", $@"namespace InlineTask
+{{
+    using Microsoft.Build.Utilities;
+
+    public class {taskName} : Task
+    {{
+        public override bool Execute()
+        {{
+            Log.LogMessage(""Hello, world!"");
+            return !Log.HasLoggedErrors;
+        }}
+    }}
+}}
+");         
+            TransientTestFile assemblyProj = env.CreateFile(folder, csprojFileName, $@"
+<Project>
+
+  <UsingTask
+    TaskName=""{taskName}""
+    TaskFactory=""RoslynCodeTaskFactory""
+    AssemblyFile=""$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll"">
+    <Task>
+      <Code Type=""Class"" Language=""cs"" Source=""{taskClass.Path}"">
+      </Code>
+    </Task>
+  </UsingTask>
+
+    <Target Name=""{targetName}"">
+        <{taskName} />
+    </Target>
+
+</Project>
+                ");
+
+            string binLogFile = Path.Combine(folder.Path, "log.binlog");
+            string output = RunnerUtilities.ExecMSBuild($"{assemblyProj.Path} /t:{targetName} /bl:\"LogFile={binLogFile};ProjectImports=ZipFile\"", out bool success);
+
+            success.ShouldBeTrue();
+
+            string projectImportsZipPath = Path.ChangeExtension(binLogFile, ".ProjectImports.zip");
+            using var fileStream = new System.IO.FileStream(projectImportsZipPath, System.IO.FileMode.Open);
+            using var zipArchive = new ZipArchive(fileStream, ZipArchiveMode.Read);
+
+            // Can't just compare `Name` because `ZipArchive` does not handle unix directory separators well
+            // thus producing garbled fully qualified paths in the actual .ProjectImports.zip entries
+            zipArchive.Entries.ShouldContain(zE => zE.Name.EndsWith($"{taskName}.cs"),
+                "");
+        }
+
 #if !FEATURE_RUN_EXE_IN_TESTS
         [Fact]
         public void RoslynCodeTaskFactory_UsingAPI()
