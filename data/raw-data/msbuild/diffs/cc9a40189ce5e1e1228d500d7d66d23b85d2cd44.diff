diff --git a/src/Tasks/Microsoft.Common.CrossTargeting.targets b/src/Tasks/Microsoft.Common.CrossTargeting.targets
index 1476da694bd..8af2007842e 100644
--- a/src/Tasks/Microsoft.Common.CrossTargeting.targets
+++ b/src/Tasks/Microsoft.Common.CrossTargeting.targets
@@ -26,6 +26,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
           Returns="@(_ThisProjectPlatformMetadata)">
     <ItemGroup>
       <_ThisProjectPlatformMetadata Include="$(MSBuildProjectFullPath)">
+        <IsVcxOrNativeProj Condition="'%(Extension)' == '.vcxproj' or '%(Extension)' == '.nativeproj'">true</IsVcxOrNativeProj>
         <PlatformOptions>$(Platforms)</PlatformOptions>
         <CanMultiPlatform>false</CanMultiPlatform>
         <CanMultiPlatform Condition="$(Platforms.Contains(',')) == 'true'">true</CanMultiPlatform>
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index 272c7f000e0..cf92c7ba25c 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -1741,12 +1741,12 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       <!-- If the NearestTargetFramework property was set and the project multi-targets, SetTargetFramework must be set. -->
       <ProjectsWithNearestPlatform Condition="'@(ProjectsWithNearestPlatform)' == '%(Identity)' and '%(ProjectsWithNearestPlatform.NearestPlatform)' != ''">
         <SetPlatform>PlatformTarget=%(ProjectsWithNearestPlatform.NearestPlatform)</SetPlatform>
-        <SetPlatform Condition="'%(ProjectsWithNearestPlatform.Extension)' == '.vcxproj' or '%(ProjectsWithNearestPlatform.Extension)' == '.nativeproj'">Platform=%(ProjectsWithNearestPlatform.NearestPlatform)</SetPlatform>
+        <SetPlatform Condition="'%(ProjectsWithNearestPlatform.IsVcxOrNativeProj)' == 'true'">Platform=%(ProjectsWithNearestPlatform.NearestPlatform)</SetPlatform>
       </ProjectsWithNearestPlatform>
 
       <ProjectsWithNearestPlatform Condition="'@(ProjectsWithNearestPlatform)' == '%(Identity)' and '%(ProjectsWithNearestPlatform.NearestPlatform)' == ''">
-        <UndefineProperties Condition="'%(ProjectsWithNearestPlatform.Extension)' != '.vcxproj' and '%(ProjectsWithNearestPlatform.Extension)' != '.nativeproj'">%(ProjectsWithNearestPlatform.UndefineProperties);PlatformTarget</UndefineProperties>
-        <UndefineProperties Condition="'%(ProjectsWithNearestPlatform.Extension)' == '.vcxproj' or '%(ProjectsWithNearestPlatform.Extension)' == '.nativeproj'">%(ProjectsWithNearestPlatform.UndefineProperties);Platform</UndefineProperties>
+        <UndefineProperties Condition="'%(ProjectsWithNearestPlatform.IsVcxOrNativeProj)' == 'true'">%(ProjectsWithNearestPlatform.UndefineProperties);Platform</UndefineProperties>
+        <UndefineProperties Condition="'%(ProjectsWithNearestPlatform.IsVcxOrNativeProj)' != 'true'">%(ProjectsWithNearestPlatform.UndefineProperties);PlatformTarget</UndefineProperties>
       </ProjectsWithNearestPlatform>
 
       <_MSBuildProjectReferenceExistent Remove="@(_MSBuildProjectReferenceExistent)" Condition="'%(_MSBuildProjectReferenceExistent.SkipGetPlatformProperties)' != 'true'"/>
@@ -1925,6 +1925,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
           Returns="@(_ThisProjectPlatformMetadata)">
     <ItemGroup>
       <_ThisProjectPlatformMetadata Include="$(MSBuildProjectFullPath)">
+        <IsVcxOrNativeProj Condition="'%(Extension)' == '.vcxproj' or '%(Extension)' == '.nativeproj'">true</IsVcxOrNativeProj>
         <PlatformOptions>$(Platforms)</PlatformOptions>
         <CanMultiPlatform>false</CanMultiPlatform>
         <CanMultiPlatform Condition="$(Platforms.Contains(',')) == 'true'">true</CanMultiPlatform>
