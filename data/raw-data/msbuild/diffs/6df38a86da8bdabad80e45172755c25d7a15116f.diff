diff --git a/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs b/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
index 47514c4ff4d..db25a79338f 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
@@ -8631,8 +8631,8 @@ public void LogsParentAssemblyForEveryConsideredAndRejectedSearchPath()
 
             rar.Assemblies = new ITaskItem[]
             {
-                new TaskItem(@"C:\Program Files\dotnet\sdk\8.0.101\Microsoft.Build.dll"),
-                new TaskItem(@"Microsoft.Build.Framework, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
+                new TaskItem(@"C:\DirectoryTest\A.dll"),
+                new TaskItem("B"),
             };
 
             rar.SearchPaths = new string[]
@@ -8640,11 +8640,11 @@ public void LogsParentAssemblyForEveryConsideredAndRejectedSearchPath()
                 "{RawFileName}",
             };
 
-            rar.Execute().ShouldBeTrue();
+            Execute(rar).ShouldBeTrue();
 
             mockEngine.AssertLogContains(rar.Log.FormatResourceString("ResolveAssemblyReference.SearchPathAddedByParentAssembly",
-                @"C:\Program Files\dotnet\sdk\8.0.101",
-                @"C:\Program Files\dotnet\sdk\8.0.101\Microsoft.Build.dll"));
+                @"C:\DirectoryTest",
+                @"C:\DirectoryTest\A.dll"));
         }
 
         [Fact]
diff --git a/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs b/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs
index 6b025c4256d..30edfe0a6d4 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs
@@ -613,7 +613,9 @@ internal void StopIOMonitoring()
             s_netstandardDllPath,
             @"C:\SystemRuntime\Regular.dll",
             s_dependsOnNuGet_ADllPath,
-            s_nugetCache_N_Lib_NDllPath
+            s_nugetCache_N_Lib_NDllPath,
+            @"C:\DirectoryTest\A.dll",
+            @"C:\DirectoryTest\B.dll",
         };
 
         /// <summary>
@@ -2482,6 +2484,19 @@ internal static AssemblyNameExtension[] GetDependencies(string path)
                 };
             }
 
+            if (String.Equals(path, @"C:\DirectoryTest\A.dll", StringComparison.OrdinalIgnoreCase))
+            {
+                return new AssemblyNameExtension[]
+                {
+                    GetAssemblyName(@"C:\DirectoryTest\B.dll")
+                };
+            }
+
+            if (path.StartsWith(@"C:\DirectoryTest\B.dll", StringComparison.OrdinalIgnoreCase))
+            {
+                return Array.Empty<AssemblyNameExtension>();
+            }
+
             // Use a default list.
             return new AssemblyNameExtension[]
             {
