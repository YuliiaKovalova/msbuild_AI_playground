diff --git a/src/Tasks.UnitTests/AssemblyDependency/Perf.cs b/src/Tasks.UnitTests/AssemblyDependency/Perf.cs
index ce52ec26d19..16b1112a94e 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/Perf.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/Perf.cs
@@ -33,7 +33,7 @@ public void AutoUnifyUsesMinimumIO(RARSimulationMode rarSimulationMode, int ioTh
             {
                 // Manually instantiate a test fixture and run it.
                 t.StartIOMonitoring();
-                t.Exists(rarSimulationMode);
+                t.ExistsImpl(rarSimulationMode);
             }
             finally
             {
diff --git a/src/Tasks.UnitTests/AssemblyDependency/StronglyNamedDependencyAutoUnify.cs b/src/Tasks.UnitTests/AssemblyDependency/StronglyNamedDependencyAutoUnify.cs
index 3ea9a7e49f0..d2c91d58479 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/StronglyNamedDependencyAutoUnify.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/StronglyNamedDependencyAutoUnify.cs
@@ -36,7 +36,12 @@ public sealed class StronglyNamedDependencyAutoUnify : ResolveAssemblyReferenceT
         /// </summary>
         /// <param name="rarSimulationMode"></param>
         [Fact]
-        public void Exists(RARSimulationMode rarSimulationMode = RARSimulationMode.LoadAndBuildProject)
+        public void Exists()
+        {
+            ExistsImpl();
+        }
+
+        internal void ExistsImpl(RARSimulationMode rarSimulationMode = RARSimulationMode.LoadAndBuildProject)
         {
             // This WriteLine is a hack.  On a slow machine, the Tasks unittest fails because remoting
             // times out the object used for remoting console writes.  Adding a write in the middle of
