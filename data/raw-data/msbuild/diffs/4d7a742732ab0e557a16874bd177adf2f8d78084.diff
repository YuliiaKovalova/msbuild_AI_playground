diff --git a/src/Build.UnitTests/BackEnd/Scheduler_Tests.cs b/src/Build.UnitTests/BackEnd/Scheduler_Tests.cs
index 4c8cd17ac86..0d43d7f9d4a 100644
--- a/src/Build.UnitTests/BackEnd/Scheduler_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/Scheduler_Tests.cs
@@ -822,6 +822,7 @@ private BuildRequest CreateBuildRequest(int nodeRequestId, int configId, string[
 
             if (proxyTargets != null)
             {
+                parentRequest.ShouldBeNull();
                 return new BuildRequest(
                     submissionId: 1,
                     nodeRequestId,
@@ -831,7 +832,6 @@ private BuildRequest CreateBuildRequest(int nodeRequestId, int configId, string[
                     hostServices);
             }
 
-            parentRequest.ShouldBeNull();
             return new BuildRequest(
                 submissionId: 1,
                 nodeRequestId,
diff --git a/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs b/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
index be2345b69c1..3d7a9e96ab6 100644
--- a/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
+++ b/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
@@ -507,7 +507,6 @@ public void ProjectCacheByBuildParametersAndBottomUpBuildWorks(GraphCacheRespons
                 }
             }
 
-
             AssertCacheBuild(graph, testData, mockCache, logger, nodesToBuildResults, targets: null);
         }
 
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 38caf4ef0c3..f423f2faf04 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1727,7 +1727,7 @@ private static void AddBuildRequestToSubmission(BuildSubmission submission, int
 
         private static void AddProxyBuildRequestToSubmission(
             BuildSubmission submission,
-            int configurationId,
+            BuildRequestConfiguration configuration,
             ProxyTargets proxyTargets,
             int projectContextId)
         {
@@ -1741,8 +1741,11 @@ private static void AddProxyBuildRequestToSubmission(
                 realTargetsToProxyTargets[kvp.Value] = kvp.Key;
             }
 
-            List<string> targets = new(submission.BuildRequestData.TargetNames.Count);
-            foreach (string requestedTarget in submission.BuildRequestData.TargetNames)
+            ICollection<string> requestedTargets = submission.BuildRequestData.TargetNames.Count > 0
+                ? submission.BuildRequestData.TargetNames
+                : configuration.Project.DefaultTargets;
+            List<string> targets = new(requestedTargets.Count);
+            foreach (string requestedTarget in requestedTargets)
             {
                 string effectiveTarget = realTargetsToProxyTargets.TryGetValue(requestedTarget, out string proxyTarget)
                     ? proxyTarget
@@ -1753,7 +1756,7 @@ private static void AddProxyBuildRequestToSubmission(
             submission.BuildRequest = new BuildRequest(
                 submission.SubmissionId,
                 BackEnd.BuildRequest.InvalidNodeRequestId,
-                configurationId,
+                configuration.ConfigurationId,
                 proxyTargets,
                 targets,
                 submission.BuildRequestData.HostServices,
@@ -2258,7 +2261,7 @@ void HandleCacheResult()
                         {
                             // Setup submission.BuildRequest with proxy targets. The proxy request is built on the inproc node (to avoid
                             // ProjectInstance serialization). The proxy target results are used as results for the real targets.
-                            AddProxyBuildRequestToSubmission(submission, configuration.ConfigurationId, cacheResult.ProxyTargets, projectContextId);
+                            AddProxyBuildRequestToSubmission(submission, configuration, cacheResult.ProxyTargets, projectContextId);
                             IssueBuildRequestForBuildSubmission(submission, configuration, allowMainThreadBuild: false);
                         }
                         else if (cacheResult.ResultType == CacheResultType.CacheHit && cacheResult.BuildResult != null)
