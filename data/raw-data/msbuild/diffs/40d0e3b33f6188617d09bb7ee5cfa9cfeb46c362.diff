diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 176d34cd714..aad33b3b134 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -2950,7 +2950,10 @@ private void OnProjectStarted(object sender, ProjectStartedEventArgs e)
             });
         }
 
-        public void EnableBuildCheck() => _buildParameters = new BuildParameters
+        /// <summary>
+        /// Enables BuildCheck for binary log replay.
+        /// </summary>
+        public void EnableBuildCheckForBinaryLogReplay() => _buildParameters = new BuildParameters
         {
             IsBuildCheckEnabled = true,
         };
diff --git a/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisDispatchingContext.cs b/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisDispatchingContext.cs
index 044e214923e..93bd9fcb307 100644
--- a/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisDispatchingContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisDispatchingContext.cs
@@ -14,6 +14,9 @@
 
 namespace Microsoft.Build.Experimental.BuildCheck;
 
+/// <summary>
+/// <see cref="IAnalysisContext"/> that uses <see cref="EventArgsDispatcher"/> to dispatch.
+/// </summary>
 internal class AnalysisDispatchingContext : IAnalysisContext
 {
     private readonly EventArgsDispatcher _eventDispatcher;
diff --git a/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisLoggingContext.cs b/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisLoggingContext.cs
index 38337ae18a9..5eae0885477 100644
--- a/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisLoggingContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisLoggingContext.cs
@@ -12,6 +12,9 @@
 
 namespace Microsoft.Build.Experimental.BuildCheck;
 
+/// <summary>
+/// <see cref="IAnalysisContext"/> that uses <see cref="LoggingService"/> to dispatch.
+/// </summary>
 internal class AnalysisLoggingContext : IAnalysisContext
 {
     private readonly ILoggingService _loggingService;
diff --git a/src/Build/BuildCheck/Infrastructure/AnalysisContext/IAnalysisContext.cs b/src/Build/BuildCheck/Infrastructure/AnalysisContext/IAnalysisContext.cs
index be4cb8c6049..7c4a338500d 100644
--- a/src/Build/BuildCheck/Infrastructure/AnalysisContext/IAnalysisContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/AnalysisContext/IAnalysisContext.cs
@@ -11,6 +11,9 @@
 
 namespace Microsoft.Build.Experimental.BuildCheck;
 
+/// <summary>
+/// Interface for dispatching <see cref="BuildEventContext"/>.
+/// </summary>
 internal interface IAnalysisContext
 {
     BuildEventContext BuildEventContext { get; }
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckReplayModeConnector.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckReplayModeConnector.cs
index 44542d5c071..7757367cda8 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckReplayModeConnector.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckReplayModeConnector.cs
@@ -14,13 +14,22 @@
 
 namespace Microsoft.Build.Experimental.BuildCheck;
 
+/// <summary>
+/// The class that created an <see cref="IEventSource"/> for binary log replay with BuildCheck enabled.
+/// </summary>
 public static class BuildCheckReplayModeConnector
 {
+    /// <summary>
+    /// Gets merged event source for binary log replay with BuildCheck enabled.
+    /// </summary>
+    /// <param name="buildManager"><see cref="BuildManager"/> that has <see cref="IBuildCheckManagerProvider"/> component.</param>
+    /// <param name="replayEventSource">The initial event source.</param>
+    /// <returns>The merged event source for binary log replay.</returns>
     public static IEventSource GetMergedEventSource(
         BuildManager buildManager,
         IEventSource replayEventSource)
     {
-        buildManager.EnableBuildCheck();
+        buildManager.EnableBuildCheckForBinaryLogReplay();
 
         var buildCheckManagerProvider = ((IBuildComponentHost)buildManager)
             .GetComponent(BuildComponentType.BuildCheckManagerProvider) as IBuildCheckManagerProvider;
