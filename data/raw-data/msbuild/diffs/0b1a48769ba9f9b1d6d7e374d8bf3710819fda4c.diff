diff --git a/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs b/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
index 6f62bba78eb..4d94d6bd0f6 100644
--- a/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
@@ -1420,9 +1420,9 @@ void IRequestBuilderCallback.ExitMSBuildCallbackState()
         /// <summary>
         /// Empty impl
         /// </summary>
-        int? IRequestBuilderCallback.RequestCores(int requestedCores)
+        int IRequestBuilderCallback.RequestCores(int requestedCores)
         {
-            return null;
+            return 0;
         }
 
         /// <summary>
diff --git a/src/Build.UnitTests/BackEnd/TargetEntry_Tests.cs b/src/Build.UnitTests/BackEnd/TargetEntry_Tests.cs
index 4688c52349f..d95ecd20798 100644
--- a/src/Build.UnitTests/BackEnd/TargetEntry_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TargetEntry_Tests.cs
@@ -981,9 +981,9 @@ void IRequestBuilderCallback.ExitMSBuildCallbackState()
         /// <summary>
         /// Empty impl
         /// </summary>
-        int? IRequestBuilderCallback.RequestCores(int requestedCores)
+        int IRequestBuilderCallback.RequestCores(int requestedCores)
         {
-            return null;
+            return 0;
         }
 
         /// <summary>
diff --git a/src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs b/src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs
index b5200cf78a5..c9a5cc960ee 100644
--- a/src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs
@@ -758,9 +758,9 @@ void IRequestBuilderCallback.ExitMSBuildCallbackState()
         /// <summary>
         /// Empty impl
         /// </summary>
-        int? IRequestBuilderCallback.RequestCores(int requestedCores)
+        int IRequestBuilderCallback.RequestCores(int requestedCores)
         {
-            return null;
+            return 0;
         }
 
         /// <summary>
diff --git a/src/Build.UnitTests/BackEnd/TaskHost_Tests.cs b/src/Build.UnitTests/BackEnd/TaskHost_Tests.cs
index 5fd7ac4624c..1a9c112b44f 100644
--- a/src/Build.UnitTests/BackEnd/TaskHost_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TaskHost_Tests.cs
@@ -1302,9 +1302,9 @@ public void ExitMSBuildCallbackState()
             /// <summary>
             /// Mock
             /// </summary>
-            public int? RequestCores(int requestedCores)
+            public int RequestCores(int requestedCores)
             {
-                return null;
+                return 0;
             }
 
             /// <summary>
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 684d45c86ed..cd59ba32a8b 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -2179,7 +2179,7 @@ private void HandleResourceRequest(int node, ResourceRequest request)
             if (request.IsAcquire)
             {
                 var coresAcquired = _scheduler.RequestCores(request.BlockedRequestId, request.NumCores);
-                var response = new ResourceResponse(request.BlockedRequestId, coresAcquired ?? -1);
+                var response = new ResourceResponse(request.BlockedRequestId, coresAcquired);
 
                 _nodeManager.SendData(node, response);
             }
diff --git a/src/Build/BackEnd/Components/RequestBuilder/IRequestBuilderCallback.cs b/src/Build/BackEnd/Components/RequestBuilder/IRequestBuilderCallback.cs
index bdf7a6af7d8..2089685fce3 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/IRequestBuilderCallback.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/IRequestBuilderCallback.cs
@@ -61,7 +61,7 @@ internal interface IRequestBuilderCallback
         /// </summary>
         /// <param name="requestedCores">Number of logical cores being requested.</param>
         /// <returns>Number of logical cores actually granted.</returns>
-        int? RequestCores(int requestedCores);
+        int RequestCores(int requestedCores);
 
         /// <summary>
         /// Returns CPU resources to the scheduler.
diff --git a/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
index 6e473729003..b9348df003d 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs
@@ -493,7 +493,7 @@ public void ExitMSBuildCallbackState()
         /// <summary>
         /// Requests CPU resources from the scheduler.
         /// </summary>
-        public int? RequestCores(int requestedCores)
+        public int RequestCores(int requestedCores)
         {
             VerifyIsNotZombie();
             RaiseResourceRequest(new ResourceRequest(true, _requestEntry.Request.GlobalRequestId, requestedCores));
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs
index 13f6ce418ff..dde2589ae00 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs
@@ -366,7 +366,7 @@ void IRequestBuilderCallback.ExitMSBuildCallbackState()
         /// <summary>
         /// Requests CPU resources from the scheduler.
         /// </summary>
-        int? IRequestBuilderCallback.RequestCores(int requestedCores)
+        int IRequestBuilderCallback.RequestCores(int requestedCores)
         {
             return _requestBuilderCallback.RequestCores(requestedCores);
         }
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
index 99f6159d124..1681cd0eca4 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
@@ -684,17 +684,14 @@ public IReadOnlyDictionary<string, string> GetGlobalProperties()
         int runningTotal = 0;
         bool implicitCoreUsed = false;
 
-        public int? RequestCores(int requestedCores)
+        public int RequestCores(int requestedCores)
         {
             lock (_callbackMonitor)
             {
                 IRequestBuilderCallback builderCallback = _requestEntry.Builder as IRequestBuilderCallback;
                 var coresAcquired = builderCallback.RequestCores(implicitCoreUsed ? requestedCores : requestedCores - 1);
 
-                if (coresAcquired.HasValue)
-                {
-                    runningTotal += coresAcquired.Value;
-                }
+                runningTotal += coresAcquired;
 
                 if (!implicitCoreUsed)
                 {
diff --git a/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs b/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
index cee32b41ff9..10934d2fbbc 100644
--- a/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
+++ b/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
@@ -37,9 +37,9 @@ public void ShutdownComponent()
             TotalNumberHeld = -2;
         }
 
-        public int? RequestCores(int requestedCores, TaskLoggingContext _taskLoggingContext)
+        public int RequestCores(int requestedCores, TaskLoggingContext _taskLoggingContext)
         {
-            return null;
+            return 0;
 
             // _loggingService?.LogComment(_taskLoggingContext.BuildEventContext, Framework.MessageImportance.Low, "ResourceManagerRequestedCores", requestedCores, i, TotalNumberHeld);
         }
diff --git a/src/Build/BackEnd/Components/Scheduler/IScheduler.cs b/src/Build/BackEnd/Components/Scheduler/IScheduler.cs
index d58fc3ffd72..a97e829a156 100644
--- a/src/Build/BackEnd/Components/Scheduler/IScheduler.cs
+++ b/src/Build/BackEnd/Components/Scheduler/IScheduler.cs
@@ -72,7 +72,7 @@ internal interface IScheduler : IBuildComponent
         /// <summary>
         /// Requests CPU resources.
         /// </summary>
-        int? RequestCores(int requestId, int requestedCores);
+        int RequestCores(int requestId, int requestedCores);
 
         /// <summary>
         /// Returns CPU resources.
diff --git a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
index d1d318ba3ce..bb11ea2b48c 100644
--- a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
+++ b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
@@ -535,7 +535,7 @@ public void WriteDetailedSummary(int submissionId)
         /// <summary>
         /// Requests CPU resources.
         /// </summary>
-        public int? RequestCores(int requestId, int requestedCores)
+        public int RequestCores(int requestId, int requestedCores)
         {
             int grantedCores = Math.Min(requestedCores, GetAvailableCoresForExplicitRequests());
             SchedulableRequest request = _schedulingData.GetExecutingRequest(requestId);
diff --git a/src/Framework/IBuildEngine8.cs b/src/Framework/IBuildEngine8.cs
index 85e61dfc7c2..5c73b072a75 100644
--- a/src/Framework/IBuildEngine8.cs
+++ b/src/Framework/IBuildEngine8.cs
@@ -14,7 +14,7 @@ public interface IBuildEngine8 : IBuildEngine7
         /// </summary>
         /// <param name="requestedCores">The number of cores a task can potentially use.</param>
         /// <returns>The number of cores a task is allowed to use.</returns>
-        int? RequestCores(int requestedCores);
+        int RequestCores(int requestedCores);
 
         /// <summary>
         /// A task should notify the build manager when all or some of the requested cores are not used anymore.
diff --git a/src/MSBuild/OutOfProcTaskHostNode.cs b/src/MSBuild/OutOfProcTaskHostNode.cs
index a4e1a08f878..8dfe59d057b 100644
--- a/src/MSBuild/OutOfProcTaskHostNode.cs
+++ b/src/MSBuild/OutOfProcTaskHostNode.cs
@@ -1162,15 +1162,16 @@ private void LogErrorFromResource(string messageResource)
             LogErrorEvent(error);
         }
 
-        public int? RequestCores(int requestedCores)
+        public int RequestCores(int requestedCores)
         {
-            // indicate to caller that resource management isn't hooked up
-            return null;
+            // No resource management in OOP nodes
+            throw new NotImplementedException();
         }
 
         public void ReleaseCores(int coresToRelease)
         {
-            // Do nothing: no resource management in OOP nodes
+            // No resource management in OOP nodes
+            throw new NotImplementedException();
         }
     }
 }
diff --git a/src/Shared/UnitTests/MockEngine.cs b/src/Shared/UnitTests/MockEngine.cs
index dd8d06ca6ec..ac6ffee81cf 100644
--- a/src/Shared/UnitTests/MockEngine.cs
+++ b/src/Shared/UnitTests/MockEngine.cs
@@ -491,9 +491,9 @@ public object UnregisterTaskObject(object key, RegisteredTaskObjectLifetime life
             return obj;
         }
 
-        public int? RequestCores(int requestedCores)
+        public int RequestCores(int requestedCores)
         {
-            return null;
+            return 0;
         }
 
         public void ReleaseCores(int coresToRelease)
