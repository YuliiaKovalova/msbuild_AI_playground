diff --git a/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs b/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs
index abd729b3c00..ec8b2b2dc43 100644
--- a/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Evaluator_Tests.cs
@@ -4613,6 +4613,11 @@ public void VerifyPropertyTrackingLoggingDefault()
                         .EnvironmentVariableName
                         .ShouldBe("DEFINED_ENVIRONMENT_VARIABLE2");
 
+                    logger
+                        .AllBuildEvents
+                        .OfType<PropertyReassignmentEventArgs>()
+                        .ShouldHaveSingleItem();
+
                     logger
                         .AllBuildEvents
                         .OfType<PropertyInitialValueSetEventArgs>()
@@ -4674,6 +4679,11 @@ public void VerifyPropertyTrackingLoggingNone()
                         .AllBuildEvents
                         .OfType<PropertyInitialValueSetEventArgs>()
                         .ShouldBeEmpty();
+
+                    logger
+                       .AllBuildEvents
+                       .OfType<PropertyReassignmentEventArgs>()
+                       .ShouldHaveSingleItem();
                 });
         }
 
diff --git a/src/Build/Evaluation/Evaluator.cs b/src/Build/Evaluation/Evaluator.cs
index 02f8174b8b1..e048e5dd371 100644
--- a/src/Build/Evaluation/Evaluator.cs
+++ b/src/Build/Evaluation/Evaluator.cs
@@ -1348,17 +1348,30 @@ private void LogPropertyReassignment(P predecessor, P property, string location)
 
             if (newValue != oldValue)
             {
-                var args = new PropertyReassignmentEventArgs(
-                    property.Name,
-                    oldValue,
-                    newValue,
-                    location,
-                    message: null)
-                {
-                    BuildEventContext = _evaluationLoggingContext.BuildEventContext,
-                };
+                if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10))
+                {
+                    var args = new PropertyReassignmentEventArgs(
+                        property.Name,
+                        oldValue,
+                        newValue,
+                        location,
+                        message: null)
+                    {
+                        BuildEventContext = _evaluationLoggingContext.BuildEventContext,
+                    };
 
-                _evaluationLoggingContext.LogBuildEvent(args);
+                    _evaluationLoggingContext.LogBuildEvent(args);
+                }
+                else
+                {
+                    _evaluationLoggingContext.LogComment(
+                        MessageImportance.Low,
+                        "PropertyReassignment",
+                        property.Name,
+                        newValue,
+                        oldValue,
+                        location);
+                }
             }
         }
 
