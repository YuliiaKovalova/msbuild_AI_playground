diff --git a/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs b/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs
index beb371b986d..f4b399bba1c 100644
--- a/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs
+++ b/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs
@@ -213,7 +213,7 @@ public partial interface IBuildEngine7 : Microsoft.Build.Framework.IBuildEngine,
     }
     public partial interface IBuildEngine8 : Microsoft.Build.Framework.IBuildEngine, Microsoft.Build.Framework.IBuildEngine2, Microsoft.Build.Framework.IBuildEngine3, Microsoft.Build.Framework.IBuildEngine4, Microsoft.Build.Framework.IBuildEngine5, Microsoft.Build.Framework.IBuildEngine6, Microsoft.Build.Framework.IBuildEngine7
     {
-        System.Collections.Generic.HashSet<string> WarningsAsErrors { get; set; }
+        System.Collections.Generic.HashSet<string> WarningsAsErrors { get; }
     }
     public partial interface ICancelableTask : Microsoft.Build.Framework.ITask
     {
diff --git a/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs b/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs
index 9c1de4e00f1..a73bb42d966 100644
--- a/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs
+++ b/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs
@@ -213,7 +213,7 @@ public partial interface IBuildEngine7 : Microsoft.Build.Framework.IBuildEngine,
     }
     public partial interface IBuildEngine8 : Microsoft.Build.Framework.IBuildEngine, Microsoft.Build.Framework.IBuildEngine2, Microsoft.Build.Framework.IBuildEngine3, Microsoft.Build.Framework.IBuildEngine4, Microsoft.Build.Framework.IBuildEngine5, Microsoft.Build.Framework.IBuildEngine6, Microsoft.Build.Framework.IBuildEngine7
     {
-        System.Collections.Generic.HashSet<string> WarningsAsErrors { get; set; }
+        System.Collections.Generic.HashSet<string> WarningsAsErrors { get; }
     }
     public partial interface ICancelableTask : Microsoft.Build.Framework.ITask
     {
diff --git a/src/Build.UnitTests/BackEnd/MockLoggingService.cs b/src/Build.UnitTests/BackEnd/MockLoggingService.cs
index 8c7c480a220..f9c3476649c 100644
--- a/src/Build.UnitTests/BackEnd/MockLoggingService.cs
+++ b/src/Build.UnitTests/BackEnd/MockLoggingService.cs
@@ -557,6 +557,11 @@ public bool HasBuildSubmissionLoggedErrors(int submissionId)
             return false;
         }
 
+        public HashSet<string> GetWarningsAsErrors(BuildEventContext context)
+        {
+            throw new NotImplementedException();
+        }
+
         #endregion
     }
 }
diff --git a/src/Build/BackEnd/Components/Logging/ILoggingService.cs b/src/Build/BackEnd/Components/Logging/ILoggingService.cs
index 42feb90220b..6d7d2e2241f 100644
--- a/src/Build/BackEnd/Components/Logging/ILoggingService.cs
+++ b/src/Build/BackEnd/Components/Logging/ILoggingService.cs
@@ -219,6 +219,8 @@ bool IncludeTaskInputs
         /// <returns><code>true</code> if the build submission logged an errors, otherwise <code>false</code>.</returns>
         bool HasBuildSubmissionLoggedErrors(int submissionId);
 
+        HashSet<string> GetWarningsAsErrors(BuildEventContext context);
+
         #region Register
 
         /// <summary>
diff --git a/src/Build/BackEnd/Components/Logging/LoggingService.cs b/src/Build/BackEnd/Components/Logging/LoggingService.cs
index 85c95d728d1..11e79988aa2 100644
--- a/src/Build/BackEnd/Components/Logging/LoggingService.cs
+++ b/src/Build/BackEnd/Components/Logging/LoggingService.cs
@@ -515,6 +515,18 @@ public bool HasBuildSubmissionLoggedErrors(int submissionId)
             return _buildSubmissionIdsThatHaveLoggedErrors?.Contains(submissionId) == true;
         }
 
+        public HashSet<string> GetWarningsAsErrors(BuildEventContext context)
+        {
+            int key = GetWarningsAsErrorOrMessageKey(context);
+
+            if (_warningsAsErrorsByProject.ContainsKey(key))
+            {
+                return _warningsAsErrorsByProject[key] as HashSet<string>;
+            }
+
+            return null;
+        }
+
         public void AddWarningsAsErrors(BuildEventContext buildEventContext, ISet<string> codes)
         {
             lock (_lockObject)
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
index d23ff90eee1..50fac0b1e9b 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
@@ -680,7 +680,7 @@ public IReadOnlyDictionary<string, string> GetGlobalProperties()
         /// <summary>
         /// Contains all warnings that should be logged as errors.
         /// </summary>
-        public HashSet<string> WarningsAsErrors { get; set; }
+        public HashSet<string> WarningsAsErrors { get => _taskLoggingContext.LoggingService.GetWarningsAsErrors(_taskLoggingContext.BuildEventContext); }
         #endregion
 
         /// <summary>
diff --git a/src/Framework/IBuildEngine8.cs b/src/Framework/IBuildEngine8.cs
index 088ad973823..422f96f509e 100644
--- a/src/Framework/IBuildEngine8.cs
+++ b/src/Framework/IBuildEngine8.cs
@@ -11,6 +11,6 @@ namespace Microsoft.Build.Framework
     /// </summary>
     public interface IBuildEngine8 : IBuildEngine7
     {
-        public HashSet<string> WarningsAsErrors { get; set; }
+        public HashSet<string> WarningsAsErrors { get; }
     }
 }
diff --git a/src/MSBuild/OutOfProcTaskHostNode.cs b/src/MSBuild/OutOfProcTaskHostNode.cs
index 2218fad4d8f..6d147513146 100644
--- a/src/MSBuild/OutOfProcTaskHostNode.cs
+++ b/src/MSBuild/OutOfProcTaskHostNode.cs
@@ -271,7 +271,7 @@ public bool IsRunningMultipleNodes
         /// <summary>
         /// Contains all warnings that should be logged as errors.
         /// </summary>
-        public HashSet<string> WarningsAsErrors { get; set; }
+        public HashSet<string> WarningsAsErrors { get; }
         #endregion
 
         #region IBuildEngine Implementation (Methods)
diff --git a/src/Shared/TaskLoggingHelper.cs b/src/Shared/TaskLoggingHelper.cs
index 7592c784fc0..a6f79646a38 100644
--- a/src/Shared/TaskLoggingHelper.cs
+++ b/src/Shared/TaskLoggingHelper.cs
@@ -1016,6 +1016,30 @@ params object[] messageArgs
             // that gives the user something.
             bool fillInLocation = (String.IsNullOrEmpty(file) && (lineNumber == 0) && (columnNumber == 0));
 
+            if ((BuildEngine as IBuildEngine8).WarningsAsErrors.Contains(warningCode))
+            {
+                var err = new BuildErrorEventArgs
+                (
+                    subcategory,
+                    warningCode,
+                    fillInLocation ? BuildEngine.ProjectFileOfTaskNode : file,
+                    fillInLocation ? BuildEngine.LineNumberOfTaskNode : lineNumber,
+                    fillInLocation ? BuildEngine.ColumnNumberOfTaskNode : columnNumber,
+                    endLineNumber,
+                    endColumnNumber,
+                    message,
+                    helpKeyword,
+                    TaskName,
+                    helpLink,
+                    DateTime.UtcNow,
+                    messageArgs
+                );
+
+                BuildEngine.LogErrorEvent(err);
+                HasLoggedErrors = true;
+                return;
+            }
+
             var e = new BuildWarningEventArgs
                 (
                     subcategory,
