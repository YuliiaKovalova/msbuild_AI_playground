diff --git a/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs b/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs
index 373805aa30f..18fc376129b 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/ResolveAssemblyReferenceTestFixture.cs
@@ -3089,8 +3089,6 @@ protected static bool Execute(ResolveAssemblyReference t, bool buildConsistencyC
                         Assert.Equal(cache, t.FilesWritten[0].ItemSpec);
                     }
 
-                    File.Delete(t.StateFile);
-
                     // Check attributes on resolve files.
                     for (int i = 0; i < t.ResolvedFiles.Length; i++)
                     {
@@ -3113,6 +3111,11 @@ protected static bool Execute(ResolveAssemblyReference t, bool buildConsistencyC
                 {
                     FileUtilities.DeleteNoThrow(rarCacheFile);
                 }
+
+                if (File.Exists(t.StateFile))
+                {
+                    FileUtilities.DeleteNoThrow(t.StateFile);
+                }
             }
             return succeeded;
         }
diff --git a/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs b/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
index 28d7facb991..63c635bf816 100644
--- a/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
+++ b/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
@@ -1859,7 +1859,7 @@ private void LogConflict(Reference reference, string fusionName, StringBuilder l
         /// <summary>
         /// Reads the state file (if present) into the cache. If not present, attempts to read from CacheInputPaths, then creates a new cache if necessary.
         /// </summary>
-        internal async void ReadStateFile(GetLastWriteTime getLastWriteTime, AssemblyTableInfo[] installedAssemblyTableInfo)
+        internal async void ReadStateFile()
         {
             var deserializeOptions = new JsonSerializerOptions() { Encoder = JavaScriptEncoder.UnsafeRelaxedJsonEscaping };
             deserializeOptions.Converters.Add(new SystemState.Converter());
@@ -1877,8 +1877,6 @@ internal async void ReadStateFile(GetLastWriteTime getLastWriteTime, AssemblyTab
             }
 
             _cache ??= new SystemState();
-            _cache.SetGetLastWriteTime(getLastWriteTime);
-            _cache.SetInstalledAssemblyInformation(installedAssemblyTableInfo);
         }
 
         /// <summary>
@@ -2123,7 +2121,9 @@ ReadMachineTypeFromPEHeader readMachineTypeFromPEHeader
                     }
 
                     // Load any prior saved state.
-                    ReadStateFile(getLastWriteTime, installedAssemblyTableInfo);
+                    ReadStateFile();
+                    _cache.SetGetLastWriteTime(getLastWriteTime);
+                    _cache.SetInstalledAssemblyInformation(installedAssemblyTableInfo);
 
                     // Cache delegates.
                     getAssemblyName = _cache.CacheDelegate(getAssemblyName);
