diff --git a/src/Build/Graph/GraphBuilder.cs b/src/Build/Graph/GraphBuilder.cs
index 53d1fddb9b0..0f4d93df999 100644
--- a/src/Build/Graph/GraphBuilder.cs
+++ b/src/Build/Graph/GraphBuilder.cs
@@ -499,15 +499,16 @@ private void DetectCycles(
             }
         }
 
-        private ParsedProject ParseProject(ConfigurationMetadata configurationMetadata, Boolean enableDynamicPlatformResolution)
+        private ParsedProject ParseProject(ConfigurationMetadata configurationMetadata, bool enableDynamicPlatformResolution)
         {
             // TODO: ProjectInstance just converts the dictionary back to a PropertyDictionary, so find a way to directly provide it.
             var globalProperties = configurationMetadata.GlobalProperties.ToDictionary();
             ProjectGraphNode graphNode;
+            ProjectInstance projectInstance;
 
             if (enableDynamicPlatformResolution){
 
-                var projectInstance = _projectInstanceFactory(
+                projectInstance = _projectInstanceFactory(
                     configurationMetadata.ProjectFullPath,
                     null,
                     _projectCollection);
@@ -534,7 +535,7 @@ private ParsedProject ParseProject(ConfigurationMetadata configurationMetadata,
             }
             else
             {
-                var projectInstance = _projectInstanceFactory(
+                projectInstance = _projectInstanceFactory(
                     configurationMetadata.ProjectFullPath,
                     globalProperties,
                     _projectCollection);
@@ -574,12 +575,12 @@ meanwhile another thread passes the same checks with the same data and inserts i
             return _graphWorkSet.CompletedWork;
         }
 
-        private void SubmitProjectForParsing(ConfigurationMetadata projectToEvaluate, Boolean enableDynamicPlatformResolution)
+        private void SubmitProjectForParsing(ConfigurationMetadata projectToEvaluate, bool enableDynamicPlatformResolution)
         {
             _graphWorkSet.AddWork(projectToEvaluate, () => ParseProject(projectToEvaluate, enableDynamicPlatformResolution));
         }
 
-        private List<ProjectInterpretation.ReferenceInfo> ParseReferences(ProjectGraphNode parsedProject, Boolean enableDynamicPlatformResolution)
+        private List<ProjectInterpretation.ReferenceInfo> ParseReferences(ProjectGraphNode parsedProject, bool enableDynamicPlatformResolution)
         {
             var referenceInfos = new List<ProjectInterpretation.ReferenceInfo>();
 
diff --git a/src/Shared/PlatformNegotiation.cs b/src/Shared/PlatformNegotiation.cs
index b7ead5c8a0b..2f36824f067 100644
--- a/src/Shared/PlatformNegotiation.cs
+++ b/src/Shared/PlatformNegotiation.cs
@@ -18,7 +18,7 @@ namespace Microsoft.Build.Shared
     static internal class PlatformNegotiation
     {
 
-        internal static string? GetNearestPlatform(String projectReferencePlatformMetadata, String projectReferenceLookupTableMetadata, String currentProjectPlatformMetadata, String currentPlatformLookupTableMetadata, String projectPath, TaskLoggingHelper? Log = null)
+        internal static string? GetNearestPlatform(string projectReferencePlatformMetadata, string projectReferenceLookupTableMetadata, string currentProjectPlatformMetadata, string currentPlatformLookupTableMetadata, string projectPath, TaskLoggingHelper? Log = null)
         {
 
             Dictionary<string, string>? currentProjectLookupTable = ExtractLookupTable(currentPlatformLookupTableMetadata, Log);
