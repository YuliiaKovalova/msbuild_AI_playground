diff --git a/eng/Version.Details.xml b/eng/Version.Details.xml
index 815d27d9c69..02298ed8952 100644
--- a/eng/Version.Details.xml
+++ b/eng/Version.Details.xml
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Dependencies>
   <ToolsetDependencies>
-    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="6.0.0-beta.24623.4">
+    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="6.0.0-beta.25160.3">
       <Uri>https://github.com/dotnet/arcade</Uri>
-      <Sha>bf4bcc14dc4b9884d684fbd92c2e044defd0d53e</Sha>
+      <Sha>7fc87b82618dd1a8f01beefd420f98ad9bc5b8d3</Sha>
     </Dependency>
     <Dependency Name="NuGet.Build.Tasks" Version="5.9.1-rc.8">
       <Uri>https://github.com/nuget/nuget.client</Uri>
diff --git a/eng/common/generate-sbom-prep.ps1 b/eng/common/generate-sbom-prep.ps1
index 3e5c1c74a1c..6bd6c1af903 100644
--- a/eng/common/generate-sbom-prep.ps1
+++ b/eng/common/generate-sbom-prep.ps1
@@ -4,18 +4,25 @@ Param(
 
 . $PSScriptRoot\pipeline-logging-functions.ps1
 
+# Normally - we'd listen to the manifest path given, but 1ES templates will overwrite if this level gets uploaded directly
+# with their own overwriting ours. So we create it as a sub directory of the requested manifest path.
+$ArtifactName = "${env:SYSTEM_STAGENAME}_${env:AGENT_JOBNAME}_SBOM"
+$SafeArtifactName = $ArtifactName -replace '["/:<>\\|?@*"() ]', '_'
+$SbomGenerationDir = Join-Path $ManifestDirPath $SafeArtifactName
+
+Write-Host "Artifact name before : $ArtifactName"
+Write-Host "Artifact name after : $SafeArtifactName"
+
 Write-Host "Creating dir $ManifestDirPath"
 # create directory for sbom manifest to be placed
-if (!(Test-Path -path $ManifestDirPath))
+if (!(Test-Path -path $SbomGenerationDir))
 {
-  New-Item -ItemType Directory -path $ManifestDirPath
-  Write-Host "Successfully created directory $ManifestDirPath"
+  New-Item -ItemType Directory -path $SbomGenerationDir
+  Write-Host "Successfully created directory $SbomGenerationDir"
 }
 else{
   Write-PipelineTelemetryError -category 'Build'  "Unable to create sbom folder."
 }
 
 Write-Host "Updating artifact name"
-$artifact_name = "${env:SYSTEM_STAGENAME}_${env:AGENT_JOBNAME}_SBOM" -replace '["/:<>\\|?@*"() ]', '_'
-Write-Host "Artifact name $artifact_name"
-Write-Host "##vso[task.setvariable variable=ARTIFACT_NAME]$artifact_name"
+Write-Host "##vso[task.setvariable variable=ARTIFACT_NAME]$SafeArtifactName"
diff --git a/eng/common/generate-sbom-prep.sh b/eng/common/generate-sbom-prep.sh
index d5c76dc827b..7403e0a066e 100644
--- a/eng/common/generate-sbom-prep.sh
+++ b/eng/common/generate-sbom-prep.sh
@@ -14,19 +14,23 @@ done
 scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
 . $scriptroot/pipeline-logging-functions.sh
 
+# replace all special characters with _, some builds use special characters like : in Agent.Jobname, that is not a permissible name while uploading artifacts.
+artifact_name=$SYSTEM_STAGENAME"_"$AGENT_JOBNAME"_SBOM"
+safe_artifact_name="${artifact_name//["/:<>\\|?@*$" ]/_}"
 manifest_dir=$1
 
-if [ ! -d "$manifest_dir" ] ; then
-  mkdir -p "$manifest_dir"
-  echo "Sbom directory created." $manifest_dir
+# Normally - we'd listen to the manifest path given, but 1ES templates will overwrite if this level gets uploaded directly
+# with their own overwriting ours. So we create it as a sub directory of the requested manifest path.
+sbom_generation_dir="$manifest_dir/$safe_artifact_name"
+
+if [ ! -d "$sbom_generation_dir" ] ; then
+  mkdir -p "$sbom_generation_dir"
+  echo "Sbom directory created." $sbom_generation_dir
 else
   Write-PipelineTelemetryError -category 'Build'  "Unable to create sbom folder."
 fi
 
-artifact_name=$SYSTEM_STAGENAME"_"$AGENT_JOBNAME"_SBOM"
 echo "Artifact name before : "$artifact_name
-# replace all special characters with _, some builds use special characters like : in Agent.Jobname, that is not a permissible name while uploading artifacts.
-safe_artifact_name="${artifact_name//["/:<>\\|?@*$" ]/_}"
 echo "Artifact name after : "$safe_artifact_name
 export ARTIFACT_NAME=$safe_artifact_name
 echo "##vso[task.setvariable variable=ARTIFACT_NAME]$safe_artifact_name"
diff --git a/eng/common/templates-official/job/job.yml b/eng/common/templates-official/job/job.yml
index 21945ebdc9e..d61a00a3512 100644
--- a/eng/common/templates-official/job/job.yml
+++ b/eng/common/templates-official/job/job.yml
@@ -36,6 +36,7 @@ parameters:
   enableSbom: true
   PackageVersion: 6.0.0
   BuildDropPath: '$(Build.SourcesDirectory)/artifacts'
+  ManifestDirPath: $(Build.ArtifactStagingDirectory)/sbom
 
 jobs:
 - job: ${{ parameters.name }}
diff --git a/eng/common/templates-official/steps/generate-sbom.yml b/eng/common/templates-official/steps/generate-sbom.yml
index 7fc4f358023..4ec5730277e 100644
--- a/eng/common/templates-official/steps/generate-sbom.yml
+++ b/eng/common/templates-official/steps/generate-sbom.yml
@@ -33,7 +33,7 @@ steps:
       PackageName: ${{ parameters.packageName }}
       BuildDropPath: ${{ parameters.buildDropPath }}
       PackageVersion: ${{ parameters.packageVersion }}
-      ManifestDirPath: ${{ parameters.manifestDirPath }}
+      ManifestDirPath: ${{ parameters.manifestDirPath }}/$(ARTIFACT_NAME)
 
 - task: 1ES.PublishPipelineArtifact@1
   displayName: Publish SBOM manifest
diff --git a/eng/common/tools.ps1 b/eng/common/tools.ps1
index 901b92e766a..fdac8225c5b 100644
--- a/eng/common/tools.ps1
+++ b/eng/common/tools.ps1
@@ -192,8 +192,6 @@ function InitializeDotNetCli([bool]$install, [bool]$createSdkLocationFile) {
     if (-not (Test-Path(Join-Path $dotnetRoot "sdk\$dotnetSdkVersion"))) {
       if ($install) {
         InstallDotNetSdk $dotnetRoot $dotnetSdkVersion
-        # Installing SDK 5 to cover the build of all projects within the repo 
-        InstallDotNetSdk $dotnetRoot "5.0.408"
       } else {
         Write-PipelineTelemetryError -Category 'InitializeToolset' -Message "Unable to find dotnet with SDK version '$dotnetSdkVersion'"
         ExitWithExitCode 1
@@ -295,11 +293,6 @@ function InstallDotNet([string] $dotnetRoot,
     InstallDir = $dotnetRoot
   }
 
-  $fixedVersionInstallParameters = @{
-    Version = $version
-    InstallDir = "5.0.408"
-  }
-
   if ($architecture) { $installParameters.Architecture = $architecture }
   if ($runtime) { $installParameters.Runtime = $runtime }
   if ($skipNonVersionedFiles) { $installParameters.SkipNonVersionedFiles = $skipNonVersionedFiles }
@@ -307,7 +300,6 @@ function InstallDotNet([string] $dotnetRoot,
 
   $variations = @()
   $variations += @($installParameters)
-  $variations += @($fixedVersionInstallParameters)
 
   $dotnetBuilds = $installParameters.Clone()
   $dotnetbuilds.AzureFeed = "https://ci.dot.net/public"
@@ -333,7 +325,6 @@ function InstallDotNet([string] $dotnetRoot,
     }
     Write-Host "Attempting to install dotnet from $location."
     try {
-      Write-Host "SDK version being installed $version"
       & $installScript @variation
       $installSuccess = $true
       break
diff --git a/eng/common/tools.sh b/eng/common/tools.sh
index 76d3b4d376d..8d13131f069 100755
--- a/eng/common/tools.sh
+++ b/eng/common/tools.sh
@@ -207,7 +207,6 @@ function InstallDotNet {
 
   local dotnetbuilds=("${installParameters[@]}" --azure-feed "https://ci.dot.net/public")
   variations+=(dotnetbuilds)
-  # variations+=(--version 5.0.400 --install-dir "$root")
 
   if [[ -n "${6:-}" ]]; then
     variations+=(private_feed)
@@ -226,18 +225,10 @@ function InstallDotNet {
   fi
 
   local installSuccess=0
-
-  echo "Attempting to install dotnet from $variationName."
-  bash "$install_script" "--version 5.0.400" && installSuccess=1
-  if [[ "$installSuccess" -eq 1 ]]; then
-    echo "Failed to install dotnet from $variationName."
-  fi
-
   for variationName in "${variations[@]}"; do
     local name="$variationName[@]"
     local variation=("${!name}")
     echo "Attempting to install dotnet from $variationName."
-    echo "Variation: $variation"
     bash "$install_script" "${variation[@]}" && installSuccess=1
     if [[ "$installSuccess" -eq 1 ]]; then
       break
diff --git a/global.json b/global.json
index be5fe79e146..c837cd6e0f6 100644
--- a/global.json
+++ b/global.json
@@ -12,6 +12,6 @@
   },
   "msbuild-sdks": {
     "Microsoft.Build.CentralPackageVersions": "2.0.1",
-    "Microsoft.DotNet.Arcade.Sdk": "6.0.0-beta.24623.4"
+    "Microsoft.DotNet.Arcade.Sdk": "6.0.0-beta.25160.3"
   }
 }
