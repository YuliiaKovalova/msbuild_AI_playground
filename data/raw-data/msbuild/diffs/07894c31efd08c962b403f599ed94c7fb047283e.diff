diff --git a/.vsts-dotnet-ci.yml b/.vsts-dotnet-ci.yml
index 9e53542d3fc..c5b1443d6c1 100644
--- a/.vsts-dotnet-ci.yml
+++ b/.vsts-dotnet-ci.yml
@@ -95,14 +95,14 @@ jobs:
     condition: eq(variables.onlyDocChanged, 0)
     inputs:
       filePath: $(Build.SourcesDirectory)\eng\process-coverage.ps1
-      arguments: -repoRoot $(Build.SourcesDirectory)
+      arguments: -repoRoot $(Build.SourcesDirectory) -coverageArtifactsDir $(Build.SourcesDirectory)/WindowsFullFramework/CoverageResults
       pwsh: true
   - task: PublishPipelineArtifact@1
     displayName: Publish Code Coverage Results
     condition: eq(variables.onlyDocChanged, 0)
     inputs:
-      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/merged.coverage'
-      artifact: 'WindowsFull_coverage'
+      targetPath: '$(Build.SourcesDirectory)/WindowsFullFramework/CoverageResults/merged.coverage'
+      artifact: 'WindowsFullFramework_coverage'
       publishLocation: 'pipeline'
   - task: PublishTestResults@2
     displayName: Publish .NET Framework Test Results
@@ -167,9 +167,7 @@ jobs:
 
 - job: BootstrapMSBuildOnCoreWindows
   displayName: "Windows Core"
-  dependsOn: 
-  - IfOnlyDocumentionChanged
-  - BootstrapMSBuildOnFullFrameworkWindows
+  dependsOn: IfOnlyDocumentionChanged
   variables:
     onlyDocChanged: $[ dependencies.IfOnlyDocumentionChanged.outputs['SetIfOnlyDocumentionChangedVaribale.onlyDocChanged'] ]
   pool:
@@ -196,13 +194,13 @@ jobs:
     condition: eq(variables.onlyDocChanged, 0)
     inputs:
       filePath: $(Build.SourcesDirectory)\eng\process-coverage.ps1
-      arguments: -repoRoot $(Build.SourcesDirectory)
+      arguments: -repoRoot $(Build.SourcesDirectory) -coverageArtifactsDir $(Build.SourcesDirectory)/WindowsCore/CoverageResults
       pwsh: true
   - task: PublishPipelineArtifact@1
     displayName: Publish Code Coverage Results
     condition: eq(variables.onlyDocChanged, 0)
     inputs:
-      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/merged.coverage'
+      targetPath: '$(Build.SourcesDirectory)/WindowsCore/CoverageResults/merged.coverage'
       artifact: 'WindowsCore_coverage'
       publishLocation: 'pipeline'
   - task: PublishTestResults@2
@@ -281,14 +279,14 @@ jobs:
     condition: eq(variables.onlyDocChanged, 0)
     inputs:
       filePath: $(Build.SourcesDirectory)\eng\process-coverage.ps1
-      arguments: -repoRoot $(Build.SourcesDirectory)
+      arguments: -repoRoot $(Build.SourcesDirectory) -coverageArtifactsDir $(Build.SourcesDirectory)/WindowsFullRelease/CoverageResults
       pwsh: true
   - task: PublishPipelineArtifact@1
     displayName: Publish Code Coverage Results
     condition: eq(variables.onlyDocChanged, 0)
     inputs:
-      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/merged.coverage'
-      artifact: 'WindowsRelease_coverage'
+      targetPath: '$(Build.SourcesDirectory)/WindowsFullRelease/CoverageResults/merged.coverage'
+      artifact: 'WindowsFullRelease_coverage'
       publishLocation: 'pipeline'
   - task: PublishTestResults@2
     displayName: Publish .NET Framework Test Results
@@ -511,34 +509,34 @@ jobs:
   - task: DownloadPipelineArtifact@2
     inputs:
       buildType: 'current'
-      artifactName: 'WindowsFull_coverage'
-      targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/WindowsFull'
+      artifactName: 'WindowsFullFramework_coverage'
+      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/WindowsFullFramework'
   - task: DownloadPipelineArtifact@2
     inputs:
       buildType: 'current'
       artifactName: 'WindowsCore_coverage'
-      targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/WindowsCore'
+      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/WindowsCore'
   - task: DownloadPipelineArtifact@2
     inputs:
       buildType: 'current'
-      artifactName: 'WindowsRelease_coverage'
-      targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/WindowsRelease'
+      artifactName: 'WindowsFullRelease_coverage'
+      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/WindowsFullRelease'
   - task: DownloadPipelineArtifact@2
     inputs:
       buildType: 'current'
       artifactName: 'LinuxCore_coverage'
-      targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/LinuxCore'
+      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/LinuxCore'
   - task: DownloadPipelineArtifact@2
     inputs:
       buildType: 'current'
       artifactName: 'MacCore_coverage'
-      targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/MacCore'
+      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/MacCore'
 
   - task: PowerShell@2
     displayName: Process coverage reports
     inputs:
       filePath: $(Build.SourcesDirectory)\eng\process-coverage.ps1
-      arguments: -repoRoot $(Build.SourcesDirectory)
+      arguments: -repoRoot $(Build.SourcesDirectory) -CoverageArtifactsDir $(Build.SourcesDirectory)/artifacts/CoverageResults
       pwsh: true
   - task: CopyFiles@2
     displayName: Copy Files to $(Build.ArtifactStagingDirectory)\Artifacts
diff --git a/eng/process-coverage.ps1 b/eng/process-coverage.ps1
index cf20581bbd9..b18182f8f02 100644
--- a/eng/process-coverage.ps1
+++ b/eng/process-coverage.ps1
@@ -1,14 +1,15 @@
 param (
     $repoRoot = $null,
+    $coverageArtifactsDir = $null,
     $verbosity = 'minimal'
     )
 
-. $PSScriptRoot\restore-toolset.ps1 -skipVcpkg
+. $PSScriptRoot\restore-toolset.ps1
 
 try {
   Set-Location $repoRoot
 
-  $coverageResultsDir = Join-Path $repoRoot "artifacts\CoverageResults"
+  $coverageResultsDir = Join-Path $repoRoot $coverageArtifactsDir
   $testResultsDir = Join-Path $repoRoot "artifacts\TestResults"
   Remove-Item -Force -Recurse $coverageResultsDir -ErrorAction SilentlyContinue
 
diff --git a/eng/restore-toolset.ps1 b/eng/restore-toolset.ps1
index 43b0e0f20d6..0a9448babb1 100644
--- a/eng/restore-toolset.ps1
+++ b/eng/restore-toolset.ps1
@@ -1,7 +1,3 @@
-param (
-    [Switch]$skipVcpkg
-)
-
 . $PSScriptRoot\common\tools.ps1
 
 function InstallGlobalTool ($dotnetRoot, $toolName, $toolPath, $version) {
@@ -26,29 +22,3 @@ if (!(Test-Path -Path $dotnetCoverageDir))
 {
   InstallGlobalTool $dotnetRoot dotnet-coverage $dotnetCoverageDir
 }
-
-if (!($skipVcpkg))
-{
-  $artifactsIntermediateDir = Join-Path $repoRoot (Join-Path "artifacts" "Intermediate")
-  if (!(Test-Path -Path $artifactsIntermediateDir))
-  {
-    New-Item -ItemType Directory -Force -Path $artifactsIntermediateDir
-  }
-
-  $vcpkgDir = Join-Path $artifactsIntermediateDir "vcpkg"
-  if (Test-Path -Path $vcpkgDir) {
-    cd $vcpkgDir
-    git pull
-    ./vcpkg upgrade
-  } else {
-    cd $artifactsIntermediateDir
-    $env:GIT_REDIRECT_STDERR="2>&1"
-    git clone https://github.com/Microsoft/vcpkg.git
-    cd $vcpkgDir
-    ./bootstrap-vcpkg.bat
-    ./vcpkg integrate install
-    ./vcpkg install zstd:x86-windows-static
-    ./vcpkg install zstd:x64-windows-static
-    ./vcpkg install zstd:arm64-windows-static
-  }
-}
