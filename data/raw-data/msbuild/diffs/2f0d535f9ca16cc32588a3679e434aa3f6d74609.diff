diff --git a/src/Build.UnitTests/ConsoleOutputAlignerTests.cs b/src/Build.UnitTests/ConsoleOutputAlignerTests.cs
index 2f1fc8ce362..1a135f60b4d 100644
--- a/src/Build.UnitTests/ConsoleOutputAlignerTests.cs
+++ b/src/Build.UnitTests/ConsoleOutputAlignerTests.cs
@@ -164,6 +164,25 @@ public void ShortMultiLineWithAlign_NoChange(string input)
             output.ShouldBe(input + Environment.NewLine);
         }
 
+        [Theory]
+        [InlineData("a\nb")]
+        [InlineData("a\r\nb")]
+        [InlineData("a\nb\r\n")]
+        [InlineData("a\nb\n")]
+        [InlineData("\r\na\nb")]
+        [InlineData("\na\nb")]
+        [InlineData("\na\r\nb\nc")]
+        [InlineData("\r\na\nb\r\nc")]
+        public void ShortMultiLineWithMixedNewLines_NewLinesReplacedByActualEnvironmentNewLines(string input)
+        {
+            string expected = input.Replace("\r", "").Replace("\n", Environment.NewLine) + Environment.NewLine;
+            var aligner = new ConsoleOutputAligner(bufferWidth: 10, alignMessages: true);
+
+            string output = aligner.AlignConsoleOutput(message: input, prefixAlreadyWritten: true, prefixWidth: 0);
+
+            output.ShouldBe(expected);
+        }
+
         [Theory]
         [InlineData("", "a\n12345", "a\n123\n45\n")]
         [InlineData("", "12345\na\n54321", "123\n45\na\n543\n21\n")]
