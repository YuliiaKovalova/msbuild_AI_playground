diff --git a/documentation/specs/BuildCheck/Codes.md b/documentation/specs/BuildCheck/Codes.md
index 9845c431061..ded4f1f27be 100644
--- a/documentation/specs/BuildCheck/Codes.md
+++ b/documentation/specs/BuildCheck/Codes.md
@@ -10,7 +10,8 @@ Report codes are chosen to conform to suggested guidelines. Those guidelines are
 | [BC0104](#bc0104---projectreference-is-preferred-to-reference) | Warning | N/A | 9.0.200 | ProjectReference is preferred to Reference. |
 | [BC0105](#bc0105---embeddedresource-should-specify-culture-metadata) | Warning | N/A | 9.0.200 | Culture specific EmbeddedResource should specify Culture metadata. |
 | [BC0106](#bc0106---copytooutputdirectoryalways-should-be-avoided) | Warning | N/A | 9.0.200 | CopyToOutputDirectory='Always' should be avoided. |
-| [BC0107](#bc0107---targetframework-and-targetframeworks-specified-together) | Warning | N/A | 9.0.200 | TargetFramework and TargetFrameworks specified together. |
+| [BC0107](#bc0107---targetframework-and-targetframeworks-specified-together) | Warning | N/A | 9.0.200 | TargetFramework or TargetFrameworks specified in non-SDK style project. |
+| [BC0108](#bc0108---targetframework-or-targetframeworks-specified-in-non-sdk-style-project) | Warning | N/A | 9.0.300 | TargetFramework and TargetFrameworks specified together. |
 | [BC0201](#bc0201---usage-of-undefined-property) | Warning | Project | 9.0.100 | Usage of undefined property. |
 | [BC0202](#bc0202---property-first-declared-after-it-was-used) | Warning | Project | 9.0.100 | Property first declared after it was used. |
 | [BC0203](#bc0203----property-declared-but-never-used) | None | Project | 9.0.100 | Property declared but never used. |
@@ -126,6 +127,16 @@ If you specify `TargetFramework` you are instructing the build to produce a sing
 dotnet build my-multi-target.csproj /p:TargetFramework=net9.0
 ```
 
+<a name="BC0108"></a>
+## BC0108 - TargetFramework or TargetFrameworks specified in non-SDK style project.
+
+"'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects."
+
+'TargetFramework' or 'TargetFrameworks' control the project output targets in modern .NET SDK-style projects. The older non-SDK style projects ('legacy style' projects) interprets different properties for similar mechanism (like 'TargetFrameworkVersion') and the 'TargetFramework' or 'TargetFrameworks' are silently ignored.
+
+Make sure the Target Framework targetting is done by properly understood mechanism.
+
+
 <a name="BC0201"></a>
 ## BC0201 - Usage of undefined property.
 
diff --git a/src/Build/BuildCheck/Checks/TargetFrameworkUnexpectedCheck.cs b/src/Build/BuildCheck/Checks/TargetFrameworkUnexpectedCheck.cs
new file mode 100644
index 00000000000..6f99967da68
--- /dev/null
+++ b/src/Build/BuildCheck/Checks/TargetFrameworkUnexpectedCheck.cs
@@ -0,0 +1,67 @@
+ï»¿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System.Collections.Generic;
+using System.Diagnostics;
+using System.IO;
+using Microsoft.Build.Collections;
+using Microsoft.Build.Construction;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Experimental.BuildCheck.Checks;
+internal class TargetFrameworkUnexpectedCheck : Check
+{
+    private const string RuleId = "BC0108";
+    public static CheckRule SupportedRule = new CheckRule(RuleId, "TargetFrameworkUnexpected",
+        ResourceUtilities.GetResourceString("BuildCheck_BC0108_Title")!,
+        ResourceUtilities.GetResourceString("BuildCheck_BC0108_MessageFmt")!,
+        new CheckConfiguration() { RuleId = RuleId, Severity = CheckResultSeverity.Warning });
+
+    public override string FriendlyName => "MSBuild.TargetFrameworkUnexpected";
+
+    public override IReadOnlyList<CheckRule> SupportedRules { get; } = [SupportedRule];
+
+    public override void Initialize(ConfigurationContext configurationContext)
+    {
+        /* This is it - no custom configuration */
+    }
+
+    public override void RegisterActions(IBuildCheckRegistrationContext registrationContext)
+    {
+        registrationContext.RegisterEvaluatedPropertiesAction(EvaluatedPropertiesAction);
+    }
+
+    internal override bool IsBuiltIn => true;
+
+    private readonly HashSet<string> _projectsSeen = new(MSBuildNameIgnoreCaseComparer.Default);
+
+    private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedPropertiesCheckData> context)
+    {
+        // We want to avoid repeated checking of a same project (as it might be evaluated multiple times)
+        //  for this reason we use a hashset with already seen projects.
+        if (!_projectsSeen.Add(context.Data.ProjectFilePath))
+        {
+            return;
+        }
+
+        string? frameworks = null;
+        string? framework = null;
+        // This is not SDK style project
+        if ((!context.Data.EvaluatedProperties.TryGetValue(PropertyNames.UsingMicrosoftNETSdk, out string? usingSdkStr) ||
+            !StringExtensions.IsMSBuildTrueString(usingSdkStr))
+            &&
+            // But TargetFramework(s) is specified
+            (context.Data.EvaluatedProperties.TryGetValue(PropertyNames.TargetFrameworks, out frameworks) ||
+            context.Data.EvaluatedProperties.TryGetValue(PropertyNames.TargetFramework, out framework)) &&
+            !string.IsNullOrEmpty(framework ?? frameworks))
+        {
+            // {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}'
+            context.ReportResult(BuildCheckResult.Create(
+                SupportedRule,
+                // Populating precise location tracked via https://github.com/orgs/dotnet/projects/373/views/1?pane=issue&itemId=58661732
+                ElementLocation.EmptyLocation,
+                Path.GetFileName(context.Data.ProjectFilePath),
+                framework ?? frameworks ?? string.Empty));
+        }
+    }
+}
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
index cc9ee125ac1..7b7da02ab3c 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
@@ -152,6 +152,7 @@ internal readonly record struct BuiltInCheckFactory(
                 new BuiltInCheckFactory([NoEnvironmentVariablePropertyCheck.SupportedRule.Id], NoEnvironmentVariablePropertyCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<NoEnvironmentVariablePropertyCheck>),
                 new BuiltInCheckFactory([EmbeddedResourceCheck.SupportedRule.Id], EmbeddedResourceCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<EmbeddedResourceCheck>),
                 new BuiltInCheckFactory([TargetFrameworkConfusionCheck.SupportedRule.Id], TargetFrameworkConfusionCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<TargetFrameworkConfusionCheck>),
+                new BuiltInCheckFactory([TargetFrameworkUnexpectedCheck.SupportedRule.Id], TargetFrameworkUnexpectedCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<TargetFrameworkUnexpectedCheck>),
             ],
 
             // BuildCheckDataSource.Execution
diff --git a/src/Build/Graph/ProjectInterpretation.cs b/src/Build/Graph/ProjectInterpretation.cs
index 40531c06c2e..d927eaa7e8c 100644
--- a/src/Build/Graph/ProjectInterpretation.cs
+++ b/src/Build/Graph/ProjectInterpretation.cs
@@ -556,7 +556,7 @@ public bool RequiresTransitiveProjectReferences(ProjectGraphNode projectGraphNod
             // special case for Quickbuild which updates msbuild binaries independent of props/targets. Remove this when all QB repos will have
             // migrated to new enough Visual Studio versions whose Microsoft.Managed.After.Targets enable transitive references.
             if (string.IsNullOrWhiteSpace(projectInstance.GetEngineRequiredPropertyValue(AddTransitiveProjectReferencesInStaticGraphPropertyName)) &&
-                MSBuildStringIsTrue(projectInstance.GetEngineRequiredPropertyValue("UsingMicrosoftNETSdk")) &&
+                MSBuildStringIsTrue(projectInstance.GetEngineRequiredPropertyValue(PropertyNames.UsingMicrosoftNETSdk)) &&
                 MSBuildStringIsFalse(projectInstance.GetEngineRequiredPropertyValue("DisableTransitiveProjectReferences")))
             {
                 return true;
diff --git a/src/Build/Resources/Strings.resx b/src/Build/Resources/Strings.resx
index afa2052daca..6ec030a3b78 100644
--- a/src/Build/Resources/Strings.resx
+++ b/src/Build/Resources/Strings.resx
@@ -2198,6 +2198,14 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
     <value>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</value>
     <comment>Terms in quotes are not to be translated.</comment>
   </data>
+  <data name="BuildCheck_BC0108_Title" xml:space="preserve">
+    <value>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</value>
+    <comment>Terms in quotes are not to be translated.</comment>
+  </data>
+  <data name="BuildCheck_BC0108_MessageFmt" xml:space="preserve">
+    <value>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</value>
+    <comment>Terms in quotes are not to be translated.</comment>
+  </data>
   <data name="BuildCheck_BC0201_Title" xml:space="preserve">
     <value>A property that is accessed should be declared first.</value>
   </data>
diff --git a/src/Build/Resources/xlf/Strings.cs.xlf b/src/Build/Resources/xlf/Strings.cs.xlf
index de10f0f34a9..e055e7f2a65 100644
--- a/src/Build/Resources/xlf/Strings.cs.xlf
+++ b/src/Build/Resources/xlf/Strings.cs.xlf
@@ -211,6 +211,16 @@
         <target state="translated">NezadÃ¡vejte always pro CopyToOutputDirectory, protoÅ¾e to mÅ¯Å¾e zpÅ¯sobit nepotÅebnÃ© operace kopÃ­rovÃ¡nÃ­ bÄhem sestavovÃ¡nÃ­. Pokud chcete pouÅ¾Ã­vat efektivnÄjÅ¡Ã­ kopÃ­rovÃ¡nÃ­, pouÅ¾ijte hodnotu metadat PreserveNeexport nebo IfDifferent, nebo nastavte vlastnost SkipUnchangedFilesOnCopyAlways na true.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">K vlastnosti: {0} bylo pÅistupovÃ¡no, ale nebyla nikdy inicializovÃ¡na.</target>
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index 7ae4ff64846..0b0fbc5b7d4 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -211,6 +211,16 @@
         <target state="translated">Vermeiden Sie die Angabe von "Always" fÃ¼r "CopyToOutputDirectory", da dies zu unnÃ¶tigen KopiervorgÃ¤ngen wÃ¤hrend des Buildvorgangs fÃ¼hren kann. Verwenden Sie den Metadatenwert "PreserveNewest" oder "IfDifferent", oder legen Sie die Eigenschaft "SkipUnchangedFilesOnCopyAlways" auf TRUE fest, um effektiveres Kopieren zu verwenden.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Auf die Eigenschaft â{0}â wurde zugegriffen, sie wurde jedoch nie initialisiert.</target>
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index f94a047df5b..cd0fb01593c 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -211,6 +211,16 @@
         <target state="translated">Evite especificar "Always" para "CopyToOutputDirectory", ya que esto puede provocar operaciones de copia innecesarias durante la compilaciÃ³n. Use el valor de metadatos "PreserveNewest" o "IfDifferent", o establezca la propiedad "SkipUnchangedFilesOnCopyAlways" en true para usar una copia mÃ¡s eficaz.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Propiedad: se obtuvo acceso a "{0}", pero nunca se inicializÃ³.</target>
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index 56c560c71f7..3bcb6e943e5 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -211,6 +211,16 @@
         <target state="translated">Ãvitez de spÃ©cifier 'Always' pour 'CopyToOutputDirectory', car cela peut entraÃ®ner des opÃ©rations de copie inutiles pendant la gÃ©nÃ©ration. Utilisez la valeur de mÃ©tadonnÃ©es 'PreserveNerid' ou 'IfDifferent', ou dÃ©finissez la propriÃ©tÃ© 'SkipUnchangedFilesOnCopyAlways' sur true pour utiliser une copie plus efficace.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">PropriÃ©tÃ©Â : Â«Â {0} Â» a Ã©tÃ© consultÃ©e, mais elle n'a jamais Ã©tÃ© initialisÃ©e.</target>
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index c70a79dbe40..0615ff795fc 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -211,6 +211,16 @@
         <target state="translated">Evitare di specificare 'Always' per 'CopyToOutputDirectory' perchÃ© ciÃ² puÃ² causare operazioni di copia non necessarie durante la compilazione. Usare il valore dei metadati 'PreserveNewest' o 'IfDifferent' oppure impostare la proprietÃ  'SkipUnchangedFilesOnCopyAlways' su true per utilizzare una copia piÃ¹ efficace.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Ã stato eseguito l'accesso alla proprietÃ  '{0}', ma non Ã¨ mai stata inizializzata.</target>
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index 0981d946bbb..7ea260c69cc 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -211,6 +211,16 @@
         <target state="translated">ãã«ãä¸­ã«ä¸è¦ãªã³ãã¼æä½ãçºçããå¯è½æ§ãããããã'CopyToOutputDirectory' ã« 'Always' ãæå®ããªãã§ãã ãããããå¹æçãªã³ãã¼ãä½¿ç¨ããã«ã¯ã'PreserveNewest' ã¾ãã¯ 'IfDifferent' ã¡ã¿ãã¼ã¿å¤ãä½¿ç¨ãããã'SkipUnchangedFilesOnCopyAlways' ãã­ããã£ã true ã«è¨­å®ãã¦ãã ããã</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">ãã­ããã£: '{0}' ã«ã¢ã¯ã»ã¹ãã¾ããããåæåããã¾ããã§ããã</target>
diff --git a/src/Build/Resources/xlf/Strings.ko.xlf b/src/Build/Resources/xlf/Strings.ko.xlf
index bc6bd7f0df2..851db5e0b03 100644
--- a/src/Build/Resources/xlf/Strings.ko.xlf
+++ b/src/Build/Resources/xlf/Strings.ko.xlf
@@ -211,6 +211,16 @@
         <target state="translated">ë¹ëíë ëì ë¶íìí ë³µì¬ ììì´ ë°ìí  ì ìì¼ë¯ë¡ 'CopyToOutputDirectory'ì ëí´ 'Always'ë¥¼ ì§ì íì§ ë§ì¸ì. 'PreserveNewest' ëë 'IfDifferent' ë©íë°ì´í° ê°ì ì¬ì©íê±°ë' SkipUnchangedFilesOnCopyAlways' ìì±ì trueë¡ ì¤ì íì¬ ë³´ë¤ í¨ê³¼ì ì¸ ë³µì¬ë¥¼ ì¬ì©í©ëë¤.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">ìì±: '{0}'ì ì¡ì¸ì¤íì§ë§ ì´ê¸°íëì§ ìììµëë¤.</target>
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index 197d5dd80b1..8fd923b1f73 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -211,6 +211,16 @@
         <target state="translated">Unikaj okreÅlania opcji "Always" dla elementu "CopyToOutputDirectory", poniewaÅ¼ moÅ¼e to prowadziÄ do niepotrzebnych operacji kopiowania podczas kompilacji. UÅ¼yj wartoÅci metadanych "PreserveNewest" lub "IfDifferent" albo ustaw wÅaÅciwoÅÄ "SkipUnchangedFilesOnCopyAlways" na wartoÅÄ true, aby zastosowaÄ bardziej efektywne kopiowanie.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">WÅaÅciwoÅÄ: uzyskano dostÄp do â{0}â, ale nigdy nie dokonano inicjacji.</target>
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index 2a5e78cb408..4a9ecdd2493 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -211,6 +211,16 @@
         <target state="translated">Evite especificar 'Always' para 'CopyToOutputDirectory', pois isso pode levar a operaÃ§Ãµes de cÃ³pia desnecessÃ¡rias durante o build. Use o valor de metadados 'PreserveNewest' ou 'IfDifferent' ou defina a propriedade 'SkipUnchangedFilesOnCopyAlways' como true para empregar uma cÃ³pia mais eficaz.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Propriedade: "{0}" foi acessada, mas nunca foi inicializada.</target>
diff --git a/src/Build/Resources/xlf/Strings.ru.xlf b/src/Build/Resources/xlf/Strings.ru.xlf
index 82bb6700ee8..a9398c45d59 100644
--- a/src/Build/Resources/xlf/Strings.ru.xlf
+++ b/src/Build/Resources/xlf/Strings.ru.xlf
@@ -211,6 +211,16 @@
         <target state="translated">ÐÐµ ÑÐºÐ°Ð·ÑÐ²Ð°Ð¹ÑÐµ "Always" Ð´Ð»Ñ "CopyToOutputDirectory", ÑÐ°Ðº ÐºÐ°Ðº ÑÑÐ¾ Ð¼Ð¾Ð¶ÐµÑ Ð¿ÑÐ¸Ð²ÐµÑÑÐ¸ Ðº Ð½ÐµÐ½ÑÐ¶Ð½ÑÐ¼ Ð¾Ð¿ÐµÑÐ°ÑÐ¸ÑÐ¼ ÐºÐ¾Ð¿Ð¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ Ð²Ð¾ Ð²ÑÐµÐ¼Ñ ÑÐ±Ð¾ÑÐºÐ¸. ÐÑÐ¿Ð¾Ð»ÑÐ·ÑÐ¹ÑÐµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ Ð¼ÐµÑÐ°Ð´Ð°Ð½Ð½ÑÑ PreserveNewest Ð¸Ð»Ð¸ IfDifferent Ð¸Ð»Ð¸ Ð·Ð°Ð´Ð°Ð¹ÑÐµ ÑÐ²Ð¾Ð¹ÑÑÐ²Ñ SkipUnchangedFilesOnCopyAlways Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ true, ÑÑÐ¾Ð±Ñ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑ Ð±Ð¾Ð»ÐµÐµ ÑÑÑÐµÐºÑÐ¸Ð²Ð½Ð¾Ðµ ÐºÐ¾Ð¿Ð¸ÑÐ¾Ð²Ð°Ð½Ð¸Ðµ.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Ð¡Ð²Ð¾Ð¹ÑÑÐ²Ð¾: Ðº "{0}" Ð¿Ð¾Ð»ÑÑÐµÐ½ Ð´Ð¾ÑÑÑÐ¿, Ð½Ð¾ Ð¾Ð½ Ð½Ðµ Ð¸Ð½Ð¸ÑÐ¸Ð°Ð»Ð¸Ð·Ð¸ÑÐ¾Ð²Ð°Ð½.</target>
diff --git a/src/Build/Resources/xlf/Strings.tr.xlf b/src/Build/Resources/xlf/Strings.tr.xlf
index a7d019b7276..db44cfc1c28 100644
--- a/src/Build/Resources/xlf/Strings.tr.xlf
+++ b/src/Build/Resources/xlf/Strings.tr.xlf
@@ -211,6 +211,16 @@
         <target state="translated">Derleme sÄ±rasÄ±nda gereksiz kopyalama iÅlemlerine yol aÃ§acaÄÄ±ndan 'CopyToOutputDirectory' iÃ§in 'Always' belirtmeyi Ã¶nle. Daha etkili kopyalamayÄ± kullanmak iÃ§in 'PreserveNewest' veya 'IfDifferent' meta veri deÄerini kullanÄ±n veya 'SkipUnchangedFilesOnCopyAlways' Ã¶zelliÄini true olarak ayarlayÄ±n.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">'{0}' Ã¶zelliÄine eriÅildi, ancak hiÃ§ baÅlatÄ±lmadÄ±.</target>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index 66127cb659d..1d7242da1db 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -211,6 +211,16 @@
         <target state="translated">é¿åä¸º âCopyToOutputDirectoryâ æå® âAlwaysâï¼å ä¸ºè¿å¯è½ä¼å¯¼è´çæè¿ç¨ä¸­åºç°ä¸å¿è¦çå¤å¶æä½ãä½¿ç¨ âPreserveNewestâ æ âIfDifferentâ åæ°æ®å¼ï¼æå° âSkipUnchangedFilesOnCopyAlwaysâ å±æ§è®¾ç½®ä¸º true ä»¥ä½¿ç¨æ´ææçå¤å¶ã</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">å·²è®¿é®å±æ§â{0}âï¼ä½ä»æªå°å¶åå§åè¿ã</target>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hant.xlf b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
index c10b95fe378..eec3d6f1048 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
@@ -211,6 +211,16 @@
         <target state="translated">é¿åçº 'CopyToOutputDirectory' æå® 'Always'ï¼å çºéå¯è½æå¨å»ºç½®æéå°è´ä¸å¿è¦çè¤è£½ä½æ¥­ãè«ä½¿ç¨ ãPreserveNewestã æ 'IfDifferent' åæ¸æå¼ï¼æå° 'SkipUnchangedFilesOnCopyAlways' å±æ§è¨­å®çº trueï¼ä»¥æ¡ç¨è¼ææçè¤è£½ã</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_MessageFmt">
+        <source>Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</source>
+        <target state="new">Project {0} specifies 'TargetFramework(s)' property '{1}', while it's not SDK-style project. Those properties are not understood by legacy-style projects and have no impact.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0108_Title">
+        <source>'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</source>
+        <target state="new">'TargetFramework' nor 'TargetFrameworks' property should not be specified in non-SDK style projects.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">å·²å­åå±¬æ§: '{0}'ï¼ä½å¾æªåå§åã</target>
diff --git a/src/BuildCheck.UnitTests/EndToEndTests.cs b/src/BuildCheck.UnitTests/EndToEndTests.cs
index 8568632ce04..fd56b9d388a 100644
--- a/src/BuildCheck.UnitTests/EndToEndTests.cs
+++ b/src/BuildCheck.UnitTests/EndToEndTests.cs
@@ -401,6 +401,37 @@ void ReplaceStringInFile(string filePath, string original, string replacement)
         }
     }
 
+    [Fact]
+    public void TFMinNonSdkCheckTest()
+    {
+        string content = """
+                <Project ToolsVersion="msbuilddefaulttoolsversion">
+                    <PropertyGroup>
+                      <TargetFramework>net472</TargetFramework>
+                    </PropertyGroup>
+                    <Target Name="Build">
+                        <Message Text="Build done"/>
+                    </Target>
+                </Project>
+                """;
+
+        TransientTestFolder workFolder = _env.CreateFolder(createFolder: true);
+
+        workFolder.CreateFile("testproj.proj", content);
+
+        _env.SetCurrentDirectory(workFolder.Path);
+
+        string output = RunnerUtilities.ExecBootstrapedMSBuild($"-check -restore", out bool success);
+        _env.Output.WriteLine(output);
+        _env.Output.WriteLine("=========================");
+        success.ShouldBeTrue();
+
+        string expectedDiagnostic = "warning BC0108: .* specifies 'TargetFramework\\(s\\)' property";
+        Regex.Matches(output, expectedDiagnostic).Count.ShouldBe(2);
+
+        GetWarningsCount(output).ShouldBe(1);
+    }
+
 
     [Fact]
     public void ConfigChangeReflectedOnReuse()
diff --git a/src/Shared/Constants.cs b/src/Shared/Constants.cs
index 1139c492224..03c8646f384 100644
--- a/src/Shared/Constants.cs
+++ b/src/Shared/Constants.cs
@@ -144,6 +144,7 @@ internal static class PropertyNames
         internal const string InnerBuildPropertyValues = nameof(InnerBuildPropertyValues);
         internal const string TargetFrameworks = nameof(TargetFrameworks);
         internal const string TargetFramework = nameof(TargetFramework);
+        internal const string UsingMicrosoftNETSdk = nameof(UsingMicrosoftNETSdk);
     }
 
     // TODO: Remove these when VS gets updated to setup project cache plugins.
