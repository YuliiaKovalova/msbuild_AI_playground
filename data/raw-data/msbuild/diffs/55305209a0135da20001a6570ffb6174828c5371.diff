diff --git a/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs b/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs
index 716bb8827e3..a8dd9de497d 100644
--- a/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs
+++ b/src/Tasks.UnitTests/GetCompatiblePlatform_Tests.cs
@@ -65,8 +65,8 @@ public void ResolvesViaChildsPlatformLookupTable()
         [Fact]
         public void ResolvesViaAnyCPUDefault()
         {
-            // No valid mapping via the lookup table, should default to AnyCPU when the parent
-            // and child's platforms don't match.
+            // No valid mapping via the lookup table, should default to AnyCPU when the current project
+            // and ProjectReference platforms don't match.
             TaskItem projectReference = new TaskItem("foo.bar");
             projectReference.SetMetadata("Platforms", "x64;AnyCPU");
 
@@ -86,8 +86,8 @@ public void ResolvesViaAnyCPUDefault()
         [Fact]
         public void ResolvesViaSamePlatform()
         {
-            // No valid mapping via the lookup table. If the child's platform
-            // matches the parent's platform, it takes priority over AnyCPU default.
+            // No valid mapping via the lookup table. If the ProjectReference's platform
+            // matches the current project's platform, it takes priority over AnyCPU default.
             TaskItem projectReference = new TaskItem("foo.bar");
             projectReference.SetMetadata("Platforms", "x86;x64;AnyCPU");
             projectReference.SetMetadata("PlatformLookupTable", "x86=AnyCPU"); // matching platform takes priority over lookup tables
@@ -108,8 +108,8 @@ public void ResolvesViaSamePlatform()
         [Fact]
         public void FailsToResolve()
         {
-            // No valid mapping via the lookup table, child project can't default to AnyCPU,
-            // child can't match with parent, log a warning.
+            // No valid mapping via the lookup table, ProjectReference can't default to AnyCPU,
+            // it also can't match with current project, log a warning.
             TaskItem projectReference = new TaskItem("foo.bar");
             projectReference.SetMetadata("Platforms", "x64");
 
diff --git a/src/Tasks/GetCompatiblePlatform.cs b/src/Tasks/GetCompatiblePlatform.cs
index e5a3c9e8304..cc3abfd7393 100644
--- a/src/Tasks/GetCompatiblePlatform.cs
+++ b/src/Tasks/GetCompatiblePlatform.cs
@@ -29,8 +29,8 @@ public class GetCompatiblePlatform : TaskExtension
         public string CurrentProjectPlatform { get; set; }
 
         /// <summary>
-        /// Optional parameter that defines translations from parent platforms to
-        /// what the ProjectReference should build as.
+        /// Optional parameter that defines translations from current project platforms
+        /// to what the ProjectReference should build as.
         /// Win32=x86, for example.
         /// </summary>
         public string PlatformLookupTable { get; set; }
@@ -84,7 +84,7 @@ public override bool Execute()
                 if (childPlatforms.Contains(CurrentProjectPlatform))
                 {
                     buildChildProjectAs = CurrentProjectPlatform;
-                    Log.LogMessage(MessageImportance.Low, $"Child and parent have the same platform.");
+                    Log.LogMessage(MessageImportance.Low, $"ProjectReference and current project have the same platform.");
                 }
                 // Prioritize PlatformLookupTable **metadata** attached to the ProjectReference item
                 // before the current project's table. We do this to allow per-ProjectReference fine tuning.
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index 172c4089e8b..0cf22090b6b 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -1644,8 +1644,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
     <!-- Managed Platform "source of truth" is $(PlatformTarget). For cpp it's $(Platform) -->
     <PropertyGroup>
-      <ParentPlatform>$(PlatformTarget)</ParentPlatform>
-      <ParentPlatform Condition="'$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj'">$(Platform)</ParentPlatform>
+      <CurrentPlatform>$(PlatformTarget)</CurrentPlatform>
+      <CurrentPlatform Condition="'$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj'">$(Platform)</CurrentPlatform>
     </PropertyGroup>
 
     <!-- Assign default PlatformLookupTables when doing Managed <-> Unmanaged hops -->
@@ -1663,7 +1663,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     </ItemGroup>
 
     <GetCompatiblePlatform AnnotatedProjects="@(_ProjectReferencePlatformPossibilities)"
-                           CurrentProjectPlatform="$(ParentPlatform)"
+                           CurrentProjectPlatform="$(CurrentPlatform)"
                            PlatformLookupTable="$(PlatformLookupTable)"
                            Condition="'@(_ProjectReferencePlatformPossibilities)' != ''">
       <Output ItemName="_ProjectsWithPlatformAssignment" TaskParameter="AssignedProjectsWithPlatform" />
