diff --git a/src/Shared/FileSystem/ManagedFileSystem.cs b/src/Shared/FileSystem/ManagedFileSystem.cs
index 9ba49ffccdf..69ca0f81e05 100644
--- a/src/Shared/FileSystem/ManagedFileSystem.cs
+++ b/src/Shared/FileSystem/ManagedFileSystem.cs
@@ -40,7 +40,7 @@ public byte[] ReadFileAllBytes(string path)
         }
 
 #if FEATURE_MSIOREDIST
-        private IEnumerable<string> HandleFileLoadException(
+        private static IEnumerable<string> HandleFileLoadException(
             Func<string, string, Microsoft.IO.SearchOption, IEnumerable<string>> enumerateFunctionDelegate,
             string path,
             string searchPattern,
@@ -56,12 +56,12 @@ Microsoft.IO.SearchOption searchOption
             // We rethrow it to make it fail with a proper error message and call stack.
             catch (FileLoadException ex)
             {
-                throw new InvalidOperationException("Could not load file or assembly.", ex);
+                throw new InvalidOperationException(ex.Message, ex);
             }
             // Sometimes FileNotFoundException is thrown when there is an assembly load failure. In this case it should have FusionLog.
             catch (FileNotFoundException ex) when (ex.FusionLog != null)
             {
-                throw new InvalidOperationException("Could not load file or assembly.", ex);
+                throw new InvalidOperationException(ex.Message, ex);
             }
         }
 #endif
@@ -70,8 +70,13 @@ public virtual IEnumerable<string> EnumerateFiles(string path, string searchPatt
         {
 #if FEATURE_MSIOREDIST
             return ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)
-                    ? HandleFileLoadException(Microsoft.IO.Directory.EnumerateFiles, path, searchPattern, (Microsoft.IO.SearchOption)searchOption)
-                    : Directory.EnumerateFiles(path, searchPattern, searchOption);
+                ? HandleFileLoadException(
+                    (path, searchPattern, searchOption) => Microsoft.IO.Directory.EnumerateFiles(path, searchPattern, searchOption),
+                    path,
+                    searchPattern,
+                    (Microsoft.IO.SearchOption)searchOption
+                )
+                : Directory.EnumerateFiles(path, searchPattern, searchOption);
 #else
             return Directory.EnumerateFiles(path, searchPattern, searchOption);
 #endif
@@ -81,7 +86,12 @@ public virtual IEnumerable<string> EnumerateDirectories(string path, string sear
         {
 #if FEATURE_MSIOREDIST
             return ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)
-                ? HandleFileLoadException(Microsoft.IO.Directory.EnumerateDirectories, path, searchPattern, (Microsoft.IO.SearchOption)searchOption)
+                ? HandleFileLoadException(
+                    (path, searchPattern, searchOption) => Microsoft.IO.Directory.EnumerateDirectories(path, searchPattern, searchOption),
+                    path,
+                    searchPattern,
+                    (Microsoft.IO.SearchOption)searchOption
+                )
                 : Directory.EnumerateDirectories(path, searchPattern, searchOption);
 #else
             return Directory.EnumerateDirectories(path, searchPattern, searchOption);
@@ -92,7 +102,11 @@ public virtual IEnumerable<string> EnumerateFileSystemEntries(string path, strin
         {
 #if FEATURE_MSIOREDIST
             return ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)
-                ? HandleFileLoadException(Microsoft.IO.Directory.EnumerateFileSystemEntries, path, searchPattern, (Microsoft.IO.SearchOption)searchOption)
+                ? HandleFileLoadException(
+                    (path, searchPattern, searchOption) => Microsoft.IO.Directory.EnumerateFileSystemEntries(path, searchPattern, searchOption),
+                    path,
+                    searchPattern, (Microsoft.IO.SearchOption)searchOption
+                )
                 : Directory.EnumerateFileSystemEntries(path, searchPattern, searchOption);
 #else
             return Directory.EnumerateFileSystemEntries(path, searchPattern, searchOption);
