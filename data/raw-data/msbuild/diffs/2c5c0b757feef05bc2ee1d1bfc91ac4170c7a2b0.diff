diff --git a/src/MSBuild/TerminalLogger/Project.cs b/src/MSBuild/TerminalLogger/Project.cs
index 7f1a1cdf0f5..b1dc99d2944 100644
--- a/src/MSBuild/TerminalLogger/Project.cs
+++ b/src/MSBuild/TerminalLogger/Project.cs
@@ -44,7 +44,7 @@ public Project(string? targetFramework, StopwatchAbstraction? stopwatch)
     /// <summary>
     /// Full path to the 'root' of this project's source control repository, if known.
     /// </summary>
-    public ReadOnlyMemory<char>? SourceRoot { get; set; }
+    public string? SourceRoot { get; set; }
 
     /// <summary>
     /// The target framework of the project or null if not multi-targeting.
diff --git a/src/MSBuild/TerminalLogger/TerminalLogger.cs b/src/MSBuild/TerminalLogger/TerminalLogger.cs
index 8a94d9c0c05..2bb1bf4b8c3 100644
--- a/src/MSBuild/TerminalLogger/TerminalLogger.cs
+++ b/src/MSBuild/TerminalLogger/TerminalLogger.cs
@@ -670,14 +670,13 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
                             }
 
                             // if the output path isn't under the working directory, but is under the source root, make the output relative to that to save space
-                            else if (project.SourceRoot is ReadOnlyMemory<char> sourceRoot)
+                            else if (project.SourceRoot is string sourceRoot)
                             {
-                                var sourceRootString = sourceRoot.Span.ToString();
-                                if (outputPathString.StartsWith(sourceRootString, FileUtilities.PathComparison))
+                                if (outputPathString.StartsWith(sourceRoot, FileUtilities.PathComparison))
                                 {
-                                    var relativePathFromOutputToRoot = Path.GetRelativePath(sourceRootString, outputPathString);
+                                    var relativePathFromOutputToRoot = Path.GetRelativePath(sourceRoot, outputPathString);
                                     // we have the portion from sourceRoot to outputPath, now we need to get the portion from workingDirectory to sourceRoot
-                                    var relativePathFromWorkingDirToSourceRoot = Path.GetRelativePath(workingDirectory, sourceRootString);
+                                    var relativePathFromWorkingDirToSourceRoot = Path.GetRelativePath(workingDirectory, sourceRoot);
                                     relativeDisplayPath = Path.Join(relativePathFromWorkingDirToSourceRoot, relativePathFromOutputToRoot);
                                 }
                             }
@@ -802,7 +801,7 @@ private void TryReadSourceControlInformationForProject(BuildEventContext? contex
                 // This seems to be the Target InitializeSourceControlInformationFromSourceControlManager.
                 // So far this has been acceptable, but if a SourceRoot would be modified by a task later on
                 // (e.g. TranslateGitHubUrlsInSourceControlInformation) we would lose that modification.
-                project.SourceRoot = sourceControlSourceRoot.ItemSpec.AsMemory();
+                project.SourceRoot = sourceControlSourceRoot.ItemSpec;
             }
         }
     }
