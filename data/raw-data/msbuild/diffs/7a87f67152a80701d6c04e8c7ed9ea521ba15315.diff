diff --git a/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs b/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
index e49ebbb1d89..197e775cecb 100644
--- a/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
+++ b/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
@@ -1068,6 +1068,7 @@ public override bool Execute()
             }
         }
 
+#if !FEATURE_RUN_EXE_IN_TESTS
         [Fact]
         public void RoslynCodeTaskFactory_UsingAPI()
         {
@@ -1082,7 +1083,6 @@ public void RoslynCodeTaskFactory_UsingAPI()
       <SayHi ParameterType=""System.String"" Required=""true"" />
     </ParameterGroup>
     <Task>
-      <Reference Include=""{typeof(Enumerable).Assembly.Location}"" />
       <Code Type=""Fragment"" Language=""cs"">
         <![CDATA[
         string sayHi = ""Hello "" + SayHi;
@@ -1099,29 +1099,17 @@ public void RoslynCodeTaskFactory_UsingAPI()
 </Project>";
 
             using var env = TestEnvironment.Create();
-#if !FEATURE_RUN_EXE_IN_TESTS
             RunnerUtilities.ApplyDotnetHostPathEnvironmentVariable(env);
-#endif
+            var dotnetPath = Environment.GetEnvironmentVariable("DOTNET_HOST_PATH");
 
             var project = env.CreateTestProjectWithFiles("p1.proj", text);
-
             var logger = project.BuildProjectExpectSuccess();
-#if !FEATURE_RUN_EXE_IN_TESTS
-            var filter = "dotnet path is ";
-#else
-            var filter = "Compiling task source code";
-
-#endif
             var logLines = logger.AllBuildEvents.Select(a => a.Message);
             var log = string.Join("\n", logLines);
-            var messages = logLines.Where(l => l.Contains(filter)).ToList();
+            var messages = logLines.Where(l => l.Contains(dotnetPath)).ToList();
             messages.Count.ShouldBe(1, log);
-#if !FEATURE_RUN_EXE_IN_TESTS
-            var dotnetPath = messages[0].Replace(filter, string.Empty);
-            bool isFilePath = File.Exists(dotnetPath);
-            isFilePath.ShouldBeTrue(dotnetPath);
-#endif
         }
+#endif
 
         private void TryLoadTaskBodyAndExpectFailure(string taskBody, string expectedErrorMessage)
         {
diff --git a/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactoryCompilers.cs b/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactoryCompilers.cs
index 19681d71676..b13486e975a 100644
--- a/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactoryCompilers.cs
+++ b/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactoryCompilers.cs
@@ -120,7 +120,6 @@ protected override string GenerateFullPathToTool()
             }
 
 #if RUNTIME_TYPE_NETCORE
-            Log.LogMessageFromText($"dotnet path is {dotnetCliPath}", StandardOutputImportanceToUse);
             return dotnetCliPath;
 #else
             return _executablePath.Value;
