diff --git a/eng/Common.globalconfig b/eng/Common.globalconfig
index 49de8011d44..c75fbec9493 100644
--- a/eng/Common.globalconfig
+++ b/eng/Common.globalconfig
@@ -253,7 +253,7 @@ dotnet_diagnostic.CA1805.severity = none
 dotnet_diagnostic.CA1806.severity = none
 
 # Initialize reference type static fields inline
-dotnet_diagnostic.CA1810.severity = suggestion
+dotnet_diagnostic.CA1810.severity = warning
 
 # Avoid uninstantiated internal classes
 dotnet_diagnostic.CA1812.severity = none
diff --git a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupLoggingHelper.cs b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupLoggingHelper.cs
index c1679d38212..4f67ed79862 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupLoggingHelper.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupLoggingHelper.cs
@@ -44,7 +44,9 @@ internal static class ItemGroupLoggingHelper
         /// to materialize the Message as that's a declaration assembly. We inject the logic
         /// here.
         /// </summary>
+#pragma warning disable CA1810 // Initialize reference type static fields inline
         static ItemGroupLoggingHelper()
+#pragma warning restore CA1810 // Initialize reference type static fields inline
         {
             BuildEventArgs.ResourceStringFormatter = ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword;
             TaskParameterEventArgs.MessageGetter = GetTaskParameterText;
diff --git a/src/Build/Evaluation/ProjectRootElementCache.cs b/src/Build/Evaluation/ProjectRootElementCache.cs
index bb85186e17c..17ecae43227 100644
--- a/src/Build/Evaluation/ProjectRootElementCache.cs
+++ b/src/Build/Evaluation/ProjectRootElementCache.cs
@@ -71,14 +71,13 @@ internal class ProjectRootElementCache : ProjectRootElementCacheBase
         /// If this number is increased much higher, the datastructure may
         /// need to be changed from a linked list, since it's currently O(n).
         /// </remarks>
-#pragma warning disable CA1802 // Use literals where appropriate
-        private static readonly int s_maximumStrongCacheSize = 200;
-#pragma warning restore CA1802 // Use literals where appropriate
+        private static readonly int s_maximumStrongCacheSize =
+            int.TryParse(Environment.GetEnvironmentVariable("MSBUILDPROJECTROOTELEMENTCACHESIZE"), out int cacheSize) ? cacheSize : 200;
 
         /// <summary>
         /// Whether the cache should log activity to the Debug.Out stream
         /// </summary>
-        private static bool s_debugLogCacheActivity;
+        private static bool s_debugLogCacheActivity = Environment.GetEnvironmentVariable("MSBUILDDEBUGXMLCACHE") == "1";
 
         /// <summary>
         /// Whether the cache should check file content for cache entry invalidation.
@@ -86,7 +85,7 @@ internal class ProjectRootElementCache : ProjectRootElementCacheBase
         /// <remarks>
         /// Value shall be true only in case of testing. Outside QA tests it shall be false.
         /// </remarks>
-        private static bool s_сheckFileContent;
+        private static bool s_сheckFileContent = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("MSBUILDCACHECHECKFILECONTENT"));
 
 #if DEBUG
         /// <summary>
@@ -123,24 +122,6 @@ internal class ProjectRootElementCache : ProjectRootElementCacheBase
         /// </summary>
         private Object _locker = new Object();
 
-        /// <summary>
-        /// Static constructor to choose cache size.
-        /// </summary>
-        static ProjectRootElementCache()
-        {
-            // Configurable in case a customer has related perf problems after shipping and so that
-            // we can measure different values for perf easily.
-            string userSpecifiedSize = Environment.GetEnvironmentVariable("MSBUILDPROJECTROOTELEMENTCACHESIZE");
-            if (!String.IsNullOrEmpty(userSpecifiedSize))
-            {
-                // Not catching as this is an undocumented setting
-                s_maximumStrongCacheSize = Convert.ToInt32(userSpecifiedSize, NumberFormatInfo.InvariantInfo);
-            }
-
-            s_debugLogCacheActivity = Environment.GetEnvironmentVariable("MSBUILDDEBUGXMLCACHE") == "1";
-            s_сheckFileContent = !String.IsNullOrEmpty(Environment.GetEnvironmentVariable("MSBUILDCACHECHECKFILECONTENT"));
-        }
-
         /// <summary>
         /// Creates an empty cache.
         /// </summary>
diff --git a/src/Build/PublicAPI/net/PublicAPI.Shipped.txt b/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
index 027d79e6239..03d0963d09f 100644
--- a/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
+++ b/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
@@ -578,6 +578,8 @@ Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(string
 Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(string name, string output, string required, string parameterType) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
 Microsoft.Build.Construction.UsingTaskParameterGroupElement.Parameters.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectUsingTaskParameterElement>
 Microsoft.Build.Definition.ProjectOptions
+Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.get -> Microsoft.Build.FileSystem.IDirectoryCacheFactory
+Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.set -> void
 Microsoft.Build.Definition.ProjectOptions.EvaluationContext.get -> Microsoft.Build.Evaluation.Context.EvaluationContext
 Microsoft.Build.Definition.ProjectOptions.EvaluationContext.set -> void
 Microsoft.Build.Definition.ProjectOptions.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
@@ -1320,6 +1322,7 @@ Microsoft.Build.Experimental.ProjectCache.CacheResultType.CacheMiss = 2 -> Micro
 Microsoft.Build.Experimental.ProjectCache.CacheResultType.CacheNotApplicable = 3 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
 Microsoft.Build.Experimental.ProjectCache.CacheResultType.None = 0 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
 Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase
+Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.PluginLoggerBase() -> void
 Microsoft.Build.Experimental.ProjectCache.PluginTargetResult
 Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.PluginTargetResult() -> void
 Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.PluginTargetResult(string targetName, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Framework.ITaskItem2> taskItems, Microsoft.Build.Execution.BuildResultCode resultCode) -> void
@@ -1341,6 +1344,15 @@ Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.ProjectCachePlu
 Microsoft.Build.Experimental.ProjectCache.ProxyTargets
 Microsoft.Build.Experimental.ProjectCache.ProxyTargets.ProxyTargets(System.Collections.Generic.IReadOnlyDictionary<string, string> proxyTargetToRealTargetMap) -> void
 Microsoft.Build.Experimental.ProjectCache.ProxyTargets.ProxyTargetToRealTargetMap.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
+Microsoft.Build.FileSystem.FindPredicate
+Microsoft.Build.FileSystem.FindTransform<TResult>
+Microsoft.Build.FileSystem.IDirectoryCache
+Microsoft.Build.FileSystem.IDirectoryCache.DirectoryExists(string path) -> bool
+Microsoft.Build.FileSystem.IDirectoryCache.EnumerateDirectories<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
+Microsoft.Build.FileSystem.IDirectoryCache.EnumerateFiles<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
+Microsoft.Build.FileSystem.IDirectoryCache.FileExists(string path) -> bool
+Microsoft.Build.FileSystem.IDirectoryCacheFactory
+Microsoft.Build.FileSystem.IDirectoryCacheFactory.GetDirectoryCacheForEvaluation(int evaluationId) -> Microsoft.Build.FileSystem.IDirectoryCache
 Microsoft.Build.FileSystem.MSBuildFileSystemBase
 Microsoft.Build.FileSystem.MSBuildFileSystemBase.MSBuildFileSystemBase() -> void
 Microsoft.Build.Globbing.CompositeGlob
@@ -1771,6 +1783,7 @@ static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateCacheHit(Sy
 static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateNonCacheHit(Microsoft.Build.Experimental.ProjectCache.CacheResultType resultType) -> Microsoft.Build.Experimental.ProjectCache.CacheResult
 static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.FromAssemblyPath(string pluginAssemblyPath, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings = null) -> Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
 static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.FromInstance(Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase pluginInstance, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings = null) -> Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
+static Microsoft.Build.Globbing.CompositeGlob.Create(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> Microsoft.Build.Globbing.IMSBuildGlob
 static Microsoft.Build.Globbing.Extensions.MSBuildGlobExtensions.GetParsedGlobs(this Microsoft.Build.Globbing.IMSBuildGlob glob) -> System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.MSBuildGlob>
 static Microsoft.Build.Globbing.MSBuildGlob.Parse(string fileSpec) -> Microsoft.Build.Globbing.MSBuildGlob
 static Microsoft.Build.Globbing.MSBuildGlob.Parse(string globRoot, string fileSpec) -> Microsoft.Build.Globbing.MSBuildGlob
@@ -1818,4 +1831,4 @@ virtual Microsoft.Build.Logging.ConfigurableForwardingLogger.Shutdown() -> void
 virtual Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource) -> void
 virtual Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource eventSource, int nodeCount) -> void
 virtual Microsoft.Build.Logging.ConsoleLogger.Shutdown() -> void
-virtual Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.Disconnected(Microsoft.Build.Evaluation.ProjectCollection collection) -> void
+virtual Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.Disconnected(Microsoft.Build.Evaluation.ProjectCollection collection) -> void
\ No newline at end of file
diff --git a/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt b/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
index 9281b0c3cf8..e69de29bb2d 100644
--- a/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
+++ b/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
@@ -1,13 +0,0 @@
-Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.get -> Microsoft.Build.FileSystem.IDirectoryCacheFactory
-Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.set -> void
-Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.PluginLoggerBase() -> void
-Microsoft.Build.FileSystem.FindPredicate
-Microsoft.Build.FileSystem.FindTransform<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache
-Microsoft.Build.FileSystem.IDirectoryCache.DirectoryExists(string path) -> bool
-Microsoft.Build.FileSystem.IDirectoryCache.EnumerateDirectories<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache.EnumerateFiles<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache.FileExists(string path) -> bool
-Microsoft.Build.FileSystem.IDirectoryCacheFactory
-Microsoft.Build.FileSystem.IDirectoryCacheFactory.GetDirectoryCacheForEvaluation(int evaluationId) -> Microsoft.Build.FileSystem.IDirectoryCache
-static Microsoft.Build.Globbing.CompositeGlob.Create(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> Microsoft.Build.Globbing.IMSBuildGlob
diff --git a/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt
index b2b3f82f392..f34fab4b645 100644
--- a/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ b/src/Build/PublicAPI/netstandard/PublicAPI.Shipped.txt
@@ -578,6 +578,8 @@ Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(string
 Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(string name, string output, string required, string parameterType) -> Microsoft.Build.Construction.ProjectUsingTaskParameterElement
 Microsoft.Build.Construction.UsingTaskParameterGroupElement.Parameters.get -> System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectUsingTaskParameterElement>
 Microsoft.Build.Definition.ProjectOptions
+Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.get -> Microsoft.Build.FileSystem.IDirectoryCacheFactory
+Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.set -> void
 Microsoft.Build.Definition.ProjectOptions.EvaluationContext.get -> Microsoft.Build.Evaluation.Context.EvaluationContext
 Microsoft.Build.Definition.ProjectOptions.EvaluationContext.set -> void
 Microsoft.Build.Definition.ProjectOptions.GlobalProperties.get -> System.Collections.Generic.IDictionary<string, string>
@@ -1317,6 +1319,7 @@ Microsoft.Build.Experimental.ProjectCache.CacheResultType.CacheMiss = 2 -> Micro
 Microsoft.Build.Experimental.ProjectCache.CacheResultType.CacheNotApplicable = 3 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
 Microsoft.Build.Experimental.ProjectCache.CacheResultType.None = 0 -> Microsoft.Build.Experimental.ProjectCache.CacheResultType
 Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase
+Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.PluginLoggerBase() -> void
 Microsoft.Build.Experimental.ProjectCache.PluginTargetResult
 Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.PluginTargetResult() -> void
 Microsoft.Build.Experimental.ProjectCache.PluginTargetResult.PluginTargetResult(string targetName, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Framework.ITaskItem2> taskItems, Microsoft.Build.Execution.BuildResultCode resultCode) -> void
@@ -1338,6 +1341,15 @@ Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase.ProjectCachePlu
 Microsoft.Build.Experimental.ProjectCache.ProxyTargets
 Microsoft.Build.Experimental.ProjectCache.ProxyTargets.ProxyTargets(System.Collections.Generic.IReadOnlyDictionary<string, string> proxyTargetToRealTargetMap) -> void
 Microsoft.Build.Experimental.ProjectCache.ProxyTargets.ProxyTargetToRealTargetMap.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
+Microsoft.Build.FileSystem.FindPredicate
+Microsoft.Build.FileSystem.FindTransform<TResult>
+Microsoft.Build.FileSystem.IDirectoryCache
+Microsoft.Build.FileSystem.IDirectoryCache.DirectoryExists(string path) -> bool
+Microsoft.Build.FileSystem.IDirectoryCache.EnumerateDirectories<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
+Microsoft.Build.FileSystem.IDirectoryCache.EnumerateFiles<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
+Microsoft.Build.FileSystem.IDirectoryCache.FileExists(string path) -> bool
+Microsoft.Build.FileSystem.IDirectoryCacheFactory
+Microsoft.Build.FileSystem.IDirectoryCacheFactory.GetDirectoryCacheForEvaluation(int evaluationId) -> Microsoft.Build.FileSystem.IDirectoryCache
 Microsoft.Build.FileSystem.MSBuildFileSystemBase
 Microsoft.Build.FileSystem.MSBuildFileSystemBase.MSBuildFileSystemBase() -> void
 Microsoft.Build.Globbing.CompositeGlob
@@ -1768,6 +1780,7 @@ static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateCacheHit(Sy
 static Microsoft.Build.Experimental.ProjectCache.CacheResult.IndicateNonCacheHit(Microsoft.Build.Experimental.ProjectCache.CacheResultType resultType) -> Microsoft.Build.Experimental.ProjectCache.CacheResult
 static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.FromAssemblyPath(string pluginAssemblyPath, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings = null) -> Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
 static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.FromInstance(Microsoft.Build.Experimental.ProjectCache.ProjectCachePluginBase pluginInstance, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings = null) -> Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor
+static Microsoft.Build.Globbing.CompositeGlob.Create(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> Microsoft.Build.Globbing.IMSBuildGlob
 static Microsoft.Build.Globbing.Extensions.MSBuildGlobExtensions.GetParsedGlobs(this Microsoft.Build.Globbing.IMSBuildGlob glob) -> System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.MSBuildGlob>
 static Microsoft.Build.Globbing.MSBuildGlob.Parse(string fileSpec) -> Microsoft.Build.Globbing.MSBuildGlob
 static Microsoft.Build.Globbing.MSBuildGlob.Parse(string globRoot, string fileSpec) -> Microsoft.Build.Globbing.MSBuildGlob
diff --git a/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt b/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
index 24abeee2c89..a0b76d9caa0 100644
--- a/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
+++ b/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
@@ -1,15 +1,2 @@
-Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.get -> Microsoft.Build.FileSystem.IDirectoryCacheFactory
-Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.set -> void
 Microsoft.Build.Execution.BuildParameters.BuildThreadPriority.get -> System.Threading.ThreadPriority
 Microsoft.Build.Execution.BuildParameters.BuildThreadPriority.set -> void
-Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.PluginLoggerBase() -> void
-Microsoft.Build.FileSystem.FindPredicate
-Microsoft.Build.FileSystem.FindTransform<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache
-Microsoft.Build.FileSystem.IDirectoryCache.DirectoryExists(string path) -> bool
-Microsoft.Build.FileSystem.IDirectoryCache.EnumerateDirectories<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache.EnumerateFiles<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform) -> System.Collections.Generic.IEnumerable<TResult>
-Microsoft.Build.FileSystem.IDirectoryCache.FileExists(string path) -> bool
-Microsoft.Build.FileSystem.IDirectoryCacheFactory
-Microsoft.Build.FileSystem.IDirectoryCacheFactory.GetDirectoryCacheForEvaluation(int evaluationId) -> Microsoft.Build.FileSystem.IDirectoryCache
-static Microsoft.Build.Globbing.CompositeGlob.Create(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> Microsoft.Build.Globbing.IMSBuildGlob
\ No newline at end of file
diff --git a/src/Build/Resources/xlf/Strings.cs.xlf b/src/Build/Resources/xlf/Strings.cs.xlf
index 708ffe70810..9951ac58b2b 100644
--- a/src/Build/Resources/xlf/Strings.cs.xlf
+++ b/src/Build/Resources/xlf/Strings.cs.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">Inicializuje se modul plug-in mezipaměti projektu.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">Vypíná se modul plug-in mezipaměti projektu.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">Přístup do mezipaměti projektu pro „{0}“ (výchozí cíle).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; Přístup do mezipaměti</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">Přístup do mezipaměti projektu pro „{0}“ ({1} cíl(e/ů)).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">Neúspěšný přístup do mezipaměti projektu pro „{0}“ (výchozí cíle).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">Neúspěšný přístup do mezipaměti projektu pro „{0}“ ({1} cíl(e/ů)).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">Přístup do mezipaměti nepoužitelný pro „{0}“ (výchozí cíle).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">Přístup do mezipaměti nepoužitelný pro „{0}“ ({1} cíl(e/ů)).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">Dotazování mezipaměti projektu pro „{0}“ (výchozí cíle):</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">Dotazování mezipaměti projektu pro „{0}“ (cíle: {1}):</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index dddee5c6a65..02032c039e1 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">Das Projektcache-Plug-in wird initialisiert.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">Das Projektcache-Plug-in wird heruntergefahren.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">Projektcachetreffer für „{0}“ (Standardziele).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; Cachetreffer</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">Projektcachetreffer für „{0}“ ( Ziel[e]: {1}).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">Projektcachefehler für „{0}“ (Standardziele).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">Projektcachetreffer für „{0}“ (Ziel[e]: {1}).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">Der Projektcache ist für „{0}“ (Standardziele) nicht anwendbar.</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">Der Projektcache ist für „{0}“ (Ziel[e]: {1}) nicht anwendbar.</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">Projektcachefehler für „{0}“ (Standardziele) wird abgefragt:</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">Projektcachefehler für „{0}“ (Ziele: {1}) wird abgefragt:</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index e23302b1c50..e43d0f258df 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">Inicializando complemento de caché de proyecto.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">Cerrando complemento de caché de proyecto.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">Acierto de caché de proyecto para "{0}" (destinos predeterminados).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; acierto de caché</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">Acierto de caché del proyecto para "{0}" ({1} destino(s)).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">Error de caché de proyecto para "{0}" (destinos predeterminados).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">Error de caché de proyecto para "{0}" ({1} destino(s)).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">La memoria caché del proyecto no es aplicable para "{0}" (destinos predeterminados).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">La memoria caché del proyecto no es aplicable para "{0}" ({1} destino(s)).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">Consultando la memoria caché del proyecto para "{0}" (destinos predeterminados):</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">Consultando caché de proyecto para "{0}" (destinos: {1}):</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index 54ec9ef9bd2..652e71d684f 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">Initialisation du plug-in du cache de projet.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">Arrêt du plug-in du cache de projet.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">Le cache de projet a été atteint pour « {0} » (cibles par défaut).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; accès au cache</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">Le cache de projet a été atteint pour « {0} » ({1} cible(s) ).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">Absence du cache de projet pour « {0} » (cibles par défaut).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">Absence du cache de projet pour « {0} » ({1} cible(s) ).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">Cache de projet non applicable pour « {0} » (cibles par défaut).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">Cache de projet non applicable pour « {0} » (cible(s){1} ).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">Interrogation du cache de projet pour « {0} » (cibles par défaut) :</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">Interrogation du cache de projet pour « {0} » (cibles : {1}) :</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index 64be5427ab7..513693a1059 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">Inizializzazione del plug-in della cache del progetto.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">Arresto del plug-in della cache del progetto.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">Riscontro nella cache del progetto per "{0}" (destinazioni predefinite).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; riscontro nella cache</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">Riscontro nella cache del progetto per "{0}" ({1} destinazioni).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">Mancato riscontro nella cache del progetto per "{0}" (destinazioni predefinite).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">Mancato riscontro nella cache del progetto per "{0}" ({1} destinazioni).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">Cache del progetto non applicabile per "{0}" (destinazioni predefinite).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">Cache del progetto non applicabile per "{0}" ({1} destinazioni).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">Query nella cache del progetto per "{0}" (destinazioni predefinite):</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">Query nella cache del progetto per "{0}" (destinazioni: {1}):</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index 66b995fd080..b84ce3e9436 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">プロジェクト キャッシュ プラグインを初期化しています。</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">プロジェクト キャッシュ プラグインをシャットダウンしています。</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">"{0}" のプロジェクト キャッシュ ヒット (既定のターゲット)。</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; キャッシュ ヒット</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">"{0}" (ターゲット{1}) のプロジェクト キャッシュ ヒット。</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">"{0}" のプロジェクト キャッシュ ミス (既定のターゲット)。</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">"{0}" (ターゲット{1} ) のプロジェクト キャッシュ ミス。</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">プロジェクト キャッシュは "{0}" (既定のターゲット) には適用されません。</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">プロジェクト キャッシュは"{0}" ({1} ターゲット) には適用されません。</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">"{0}" のプロジェクト キャッシュを照会しています (既定のターゲット):</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">"{0}" のプロジェクト キャッシュを照会しています (ターゲット: {1}):</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.ko.xlf b/src/Build/Resources/xlf/Strings.ko.xlf
index ff4d1f8af9b..334948b2ff5 100644
--- a/src/Build/Resources/xlf/Strings.ko.xlf
+++ b/src/Build/Resources/xlf/Strings.ko.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">프로젝트 캐시 플러그인을 초기화 중입니다.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">프로젝트 캐시 플러그인을 종료합니다.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">"{0}"(기본 대상)에 대한 프로젝트 캐시 적중입니다.</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; 캐시 적중</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">"{0}"({1} 대상)에 대한 프로젝트 캐시 적중입니다.</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">"{0}"(기본 대상)에 대한 프로젝트 캐시 누락입니다.</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">"{0}"({1}개 대상)에 대한 프로젝트 캐시 누락입니다.</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">프로젝트 캐시는 "{0}"(기본 대상)에 적용할 수 없습니다.</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">프로젝트 캐시는 "{0}"({1} 대상)에 적용할 수 없습니다.</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">"{0}"(기본 대상)에 대한 프로젝트 캐시 쿼리 중:</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">"{0}"에 대한 프로젝트 캐시 쿼리(대상: {1}):</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index e10e8be1f9c..13026af6d02 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">Inicjowanie wtyczki pamięci podręcznej projektu.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">Zamykanie wtyczki pamięci podręcznej projektu.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">Trafienie pamięci podręcznej projektu dla „{0}” (domyślne elementy docelowe).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; Trafienia w pamięci podręcznej</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">Trafienie w pamięci podręcznej projektu dla „{0}” ({1} elementów docelowych).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">Chybienia w pamięci podręcznej projektu dla „{0}” (domyślne elementy docelowe).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">Chybienia w pamięci podręcznej projektu dla „{0}” (domyślne elementy docelowe: {1}).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">Pamięć podręczna projektu nie ma zastosowania do „{0}” (domyślne elementy docelowe).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">Pamięć podręczna projektu nie ma zastosowania do „{0}” (domyślne elementy docelowe: {1}).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">Badanie pamięci podręcznej projektu dla „{0}” (domyślne elementy docelowe):</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">Badanie pamięci podręcznej projektu dla „{0}” (domyślne elementy docelowe: {1}):</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index c59aed5b1f1..f1e618ea62e 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">Inicializando o plugin de cache do projeto.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">Desligando o plug-in de cache do projeto.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">Acerto de cache do projeto para "{0}" (destinos padrão).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; de Cache</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">Acerto de cache do projeto para "{0}" ({1} destino(s)).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">Falta de cache do projeto para "{0}" (destinos padrão).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">Falta de cache do projeto para "{0}" ({1} alvo(s)).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">Cache do projeto não aplicável para "{0}" (destinos padrão).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">Cache do projeto não aplicável para "{0}" ({1} alvo(s)).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">Consultando o cache do projeto para "{0}" (destinos padrão):</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">Consultando o cache do projeto para "{0}" (destinos: {1}):</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.ru.xlf b/src/Build/Resources/xlf/Strings.ru.xlf
index 057fd65607c..e19868a5b6e 100644
--- a/src/Build/Resources/xlf/Strings.ru.xlf
+++ b/src/Build/Resources/xlf/Strings.ru.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">Инициализация подключаемого модуля кэша проекта.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">Завершение работы подключаемого модуля кэша проекта.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">Попадание в кэше проекта для "{0}" (целевые объекты по умолчанию).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; Попадание в кэше</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">Попадание в кэше проекта для "{0}" (целевые объекты: {1}).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">Промах кэша проекта для "{0}" (целевые объекты по умолчанию).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">Промах кэша проекта для "{0}" (целевые объекты: {1}).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">Кэш проекта не применим для "{0}" (целевые объекты по умолчанию).</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">Кэш проекта не применим для "{0}" (целевые объекты: {1}).</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">Запрос кэша проекта для "{0}" (целевые объекты по умолчанию):</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">Запрос кэша проекта для "{0}" (целевые объекты: {1}):</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.tr.xlf b/src/Build/Resources/xlf/Strings.tr.xlf
index e1e56d08ba5..40f4948f71a 100644
--- a/src/Build/Resources/xlf/Strings.tr.xlf
+++ b/src/Build/Resources/xlf/Strings.tr.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">Proje önbellek eklentisi başlatılıyor.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">Proje önbellek eklentisi kapatılıyor.</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">"{0}" (varsayılan hedefler) için proje önbelleği isabeti.</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; İsabetli Önbellek</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">"{0}" ({1} hedefi) için proje önbelleği isabeti.</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">"{0}" (varsayılan hedefler) için proje önbelleği eksik.</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">"{0}" ({1} hedefi) için proje önbelleği eksik.</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">"{0}" (varsayılan hedefler) için proje önbelleği geçerli değil.</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">"{0}" ({1} hedefleri) için proje önbelleği geçerli değil.</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">"{0}" (varsayılan hedefler) için proje önbelleği sorgulanıyor:</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">"{0}" (varsayılan hedefler: {1}) için proje önbelleği sorgulanıyor:</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index b70e5579c49..84aab29de64 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">正在初始化项目缓存插件。</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">正在关闭项目缓存插件。</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">项目缓存命中 "{0}" (默认目标)。</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; 缓存命中</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">项目缓存命中 "{0}" ({1} 个目标)。</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">项目缓存未命中 "{0}" (默认目标)。</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">项目缓存未命中 "{0}" ({1} 目标)。</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">项目缓存不适用于 "{0}" (默认目标)。</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">项目缓存不适用于 "{0}" ({1} 目标)。</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">正在查询 "{0}" 的项目缓存(默认目标):</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">正在查询 "{0}" 的项目缓存(目标: {1}):</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hant.xlf b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
index 8b4b00c4ca2..9677e859408 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
@@ -221,12 +221,12 @@
       </trans-unit>
       <trans-unit id="ProjectCacheBeginBuild">
         <source>Initializing project cache plugin.</source>
-        <target state="new">Initializing project cache plugin.</target>
+        <target state="translated">正在初始化專案快取外掛程式。</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheEndBuild">
         <source>Shutting down project cache plugin.</source>
-        <target state="new">Shutting down project cache plugin.</target>
+        <target state="translated">正在關閉專案快取外掛程式。</target>
         <note />
       </trans-unit>
       <trans-unit id="ProjectCacheException">
@@ -236,21 +236,21 @@
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithDefaultTargets">
         <source>Project cache hit for "{0}" (default targets).</source>
-        <target state="new">Project cache hit for "{0}" (default targets).</target>
+        <target state="translated">"{0}" 的專案快取命中 (預設目標)。</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithOutputs">
         <source>{0} -&gt; Cache Hit</source>
-        <target state="new">{0} -&gt; Cache Hit</target>
+        <target state="translated">{0} -&gt; 快取命中</target>
         <note>
       {StrBegin="{0} -&gt; "}LOCALIZATION: This string is used to indicate progress and matches the format for a log message from Microsoft.Common.CurrentVersion.targets. {0} is a project name.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheHitWithTargetNames">
         <source>Project cache hit for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache hit for "{0}" ({1} target(s)).</target>
+        <target state="translated">"{0}" 的專案快取命中 ({1} 個目標)。</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -262,28 +262,28 @@
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithDefaultTargets">
         <source>Project cache miss for "{0}" (default targets).</source>
-        <target state="new">Project cache miss for "{0}" (default targets).</target>
+        <target state="translated">"{0}" 的專案快取遺漏 (預設目標)。</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheMissWithTargetNames">
         <source>Project cache miss for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache miss for "{0}" ({1} target(s)).</target>
+        <target state="translated">"{0}" 的專案快取遺漏 ({1} 個目標)。</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithDefaultTargets">
         <source>Project cache not applicable for "{0}" (default targets).</source>
-        <target state="new">Project cache not applicable for "{0}" (default targets).</target>
+        <target state="translated">不適用於 "{0}" 的專案快取 (預設目標)。</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheNotApplicableWithTargetNames">
         <source>Project cache not applicable for "{0}" ({1} target(s)).</source>
-        <target state="new">Project cache not applicable for "{0}" ({1} target(s)).</target>
+        <target state="translated">不適用於 "{0}" 的專案快取 ({1} 個目標)。</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
@@ -295,14 +295,14 @@
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithDefaultTargets">
         <source>Querying project cache for "{0}" (default targets):</source>
-        <target state="new">Querying project cache for "{0}" (default targets):</target>
+        <target state="translated">"{0}" 的查詢專案快取 (預設目標):</target>
         <note>
       LOCALIZATION: {0} is a file path.
     </note>
       </trans-unit>
       <trans-unit id="ProjectCacheQueryStartedWithTargetNames">
         <source>Querying project cache for "{0}" (targets: {1}):</source>
-        <target state="new">Querying project cache for "{0}" (targets: {1}):</target>
+        <target state="translated">"{0}" 的查詢專案快取 (目標: {1})。</target>
         <note>
       LOCALIZATION: {0} is a file path. {1} is a comma-separated list of target names
     </note>
diff --git a/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt b/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt
index 4ba35aaf1b9..ec298ae0076 100644
--- a/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt
+++ b/src/Framework/PublicAPI/net/PublicAPI.Shipped.txt
@@ -916,4 +916,4 @@ virtual Microsoft.Build.Framework.SdkResult.Version.set -> void
 virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(string path, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
 virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(System.Collections.Generic.IEnumerable<string> paths, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd = null, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd = null, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
 virtual Microsoft.Build.Framework.XamlTypes.BaseProperty.BeginInit() -> void
-virtual Microsoft.Build.Framework.XamlTypes.BaseProperty.EndInit() -> void
+virtual Microsoft.Build.Framework.XamlTypes.BaseProperty.EndInit() -> void
\ No newline at end of file
diff --git a/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt
index 49f59b81603..fa0dac7c7ef 100644
--- a/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ b/src/Framework/PublicAPI/netstandard/PublicAPI.Shipped.txt
@@ -629,4 +629,4 @@ virtual Microsoft.Build.Framework.SdkResult.Success.set -> void
 virtual Microsoft.Build.Framework.SdkResult.Version.get -> string
 virtual Microsoft.Build.Framework.SdkResult.Version.set -> void
 virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(string path, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
-virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(System.Collections.Generic.IEnumerable<string> paths, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd = null, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd = null, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
+virtual Microsoft.Build.Framework.SdkResultFactory.IndicateSuccess(System.Collections.Generic.IEnumerable<string> paths, string version, System.Collections.Generic.IDictionary<string, string> propertiesToAdd = null, System.Collections.Generic.IDictionary<string, Microsoft.Build.Framework.SdkResultItem> itemsToAdd = null, System.Collections.Generic.IEnumerable<string> warnings = null) -> Microsoft.Build.Framework.SdkResult
\ No newline at end of file
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 49aded135a5..e28ca074553 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -121,7 +121,9 @@ public enum ExitType
         /// <summary>
         /// Static constructor
         /// </summary>
+#pragma warning disable CA1810 // Initialize reference type static fields inline
         static MSBuildApp()
+#pragma warning restore CA1810 // Initialize reference type static fields inline
         {
             try
             {
diff --git a/src/Shared/ExceptionHandling.cs b/src/Shared/ExceptionHandling.cs
index dd432c913ce..ffbf64c1033 100644
--- a/src/Shared/ExceptionHandling.cs
+++ b/src/Shared/ExceptionHandling.cs
@@ -34,12 +34,7 @@ namespace Microsoft.Build.Shared
     /// </summary>
     internal static class ExceptionHandling
     {
-        private static readonly string s_debugDumpPath;
-
-        static ExceptionHandling()
-        {
-            s_debugDumpPath = GetDebugDumpPath();
-        }
+        private static readonly string s_debugDumpPath = GetDebugDumpPath();
 
         /// <summary>
         /// Gets the location of the directory used for diagnostic log files.
diff --git a/src/Shared/FrameworkLocationHelper.cs b/src/Shared/FrameworkLocationHelper.cs
index 135c2aa2b49..01ff320cf7d 100644
--- a/src/Shared/FrameworkLocationHelper.cs
+++ b/src/Shared/FrameworkLocationHelper.cs
@@ -33,7 +33,7 @@ internal enum DotNetFrameworkArchitecture
         /// <summary>
         /// Indicates the 64-bit .NET Framework
         /// </summary>
-        Bitness64 = 2
+        Bitness64 = 2,
     }
 
     /// <summary>
@@ -72,7 +72,7 @@ internal static class FrameworkLocationHelper
         internal static readonly Version visualStudioVersion170 = new Version(17, 0);
 
         // keep this up-to-date; always point to the latest visual studio version.
-        internal static readonly Version visualStudioVersionLatest = visualStudioVersion160;
+        internal static readonly Version visualStudioVersionLatest = visualStudioVersion170;
 
         private const string dotNetFrameworkRegistryPath = "SOFTWARE\\Microsoft\\.NETFramework";
         private const string dotNetFrameworkSetupRegistryPath = "SOFTWARE\\Microsoft\\NET Framework Setup\\NDP";
@@ -145,7 +145,7 @@ internal static class FrameworkLocationHelper
         /// <summary>
         /// List the supported .net versions.
         /// </summary>
-        private static readonly DotNetFrameworkSpec[] s_dotNetFrameworkSpecs =
+        private static DotNetFrameworkSpec[] DotNetFrameworkSpecs() => new DotNetFrameworkSpec[]
         {
             // v1.1
             new DotNetFrameworkSpecLegacy(
@@ -225,7 +225,7 @@ internal static class FrameworkLocationHelper
         /// <remarks>
         /// The items must be ordered by the version, because some methods depend on that fact to find the previous visual studio version.
         /// </remarks>
-        private static readonly VisualStudioSpec[] s_visualStudioSpecs =
+        private static readonly Lazy<VisualStudioSpec[]> VisualStudioSpecs = new(() => new VisualStudioSpec[]
         {
             // VS10
             new VisualStudioSpec(visualStudioVersion100, "Windows\\v7.0A", null, null, new []
@@ -255,7 +255,7 @@ internal static class FrameworkLocationHelper
                 dotNetFrameworkVersion40,
                 dotNetFrameworkVersion45,
                 dotNetFrameworkVersion451,
-                dotNetFrameworkVersion452
+                dotNetFrameworkVersion452,
             }),
 
             // VS14
@@ -269,7 +269,7 @@ internal static class FrameworkLocationHelper
                 dotNetFrameworkVersion451,
                 dotNetFrameworkVersion452,
                 dotNetFrameworkVersion46,
-                dotNetFrameworkVersion461
+                dotNetFrameworkVersion461,
             }),
 
             // VS15
@@ -328,7 +328,7 @@ internal static class FrameworkLocationHelper
                 dotNetFrameworkVersion472,
                 dotNetFrameworkVersion48,
             }),
-        };
+        });
 
 #if FEATURE_WIN32_REGISTRY
         /// <summary>
@@ -373,20 +373,14 @@ private static readonly (Version, Version)[,] s_explicitFallbackRulesForPathToDo
             { (dotNetFrameworkVersion471, visualStudioVersion160), (dotNetFrameworkVersion47, visualStudioVersion160) },
             { (dotNetFrameworkVersion472, visualStudioVersion160), (dotNetFrameworkVersion471, visualStudioVersion160) },
             { (dotNetFrameworkVersion48, visualStudioVersion160), (dotNetFrameworkVersion472, visualStudioVersion160) },
-       };
+        };
 #endif // FEATURE_WIN32_REGISTRY
 
-        private static readonly IReadOnlyDictionary<Version, DotNetFrameworkSpec> s_dotNetFrameworkSpecDict;
-        private static readonly IReadOnlyDictionary<Version, VisualStudioSpec> s_visualStudioSpecDict;
+        private static readonly Lazy<IReadOnlyDictionary<Version, DotNetFrameworkSpec>> DotNetFrameworkSpecDict = new(() => DotNetFrameworkSpecs().ToDictionary(spec => spec.Version));
+        private static readonly Lazy<IReadOnlyDictionary<Version, VisualStudioSpec>> VisualStudioSpecDict = new(() => VisualStudioSpecs.Value.ToDictionary(spec => spec.Version));
 
 #endregion // Static member variables
 
-        static FrameworkLocationHelper()
-        {
-            s_dotNetFrameworkSpecDict = s_dotNetFrameworkSpecs.ToDictionary(spec => spec.Version);
-            s_visualStudioSpecDict = s_visualStudioSpecs.ToDictionary(spec => spec.Version);
-        }
-
 #region Static properties
 
         internal static string PathToDotNetFrameworkV11
@@ -1118,13 +1112,13 @@ private static string FindRegistryValueUnderKey
 
         private static VisualStudioSpec GetVisualStudioSpec(Version version)
         {
-            ErrorUtilities.VerifyThrowArgument(s_visualStudioSpecDict.TryGetValue(version, out VisualStudioSpec spec), "FrameworkLocationHelper.UnsupportedVisualStudioVersion", version);
+            ErrorUtilities.VerifyThrowArgument(VisualStudioSpecDict.Value.TryGetValue(version, out VisualStudioSpec spec), "FrameworkLocationHelper.UnsupportedVisualStudioVersion", version);
             return spec;
         }
 
         private static DotNetFrameworkSpec GetDotNetFrameworkSpec(Version version)
         {
-            ErrorUtilities.VerifyThrowArgument(s_dotNetFrameworkSpecDict.TryGetValue(version, out DotNetFrameworkSpec spec), "FrameworkLocationHelper.UnsupportedFrameworkVersion", version);
+            ErrorUtilities.VerifyThrowArgument(DotNetFrameworkSpecDict.Value.TryGetValue(version, out DotNetFrameworkSpec spec), "FrameworkLocationHelper.UnsupportedFrameworkVersion", version);
             return spec;
         }
 
@@ -1473,11 +1467,11 @@ public virtual string GetPathToDotNetFrameworkSdkTools(VisualStudioSpec visualSt
                         // i.e. fallback to v110 if the current visual studio version is v120.
                         if (!foundExplicitRule)
                         {
-                            int index = Array.IndexOf(s_visualStudioSpecs, visualStudioSpec);
+                            int index = Array.IndexOf(VisualStudioSpecs.Value, visualStudioSpec);
                             if (index > 0)
                             {
                                 // The items in the array "visualStudioSpecs" must be ordered by version. That would allow us to fallback to the previous visual studio version easily.
-                                VisualStudioSpec fallbackVisualStudioSpec = s_visualStudioSpecs[index - 1];
+                                VisualStudioSpec fallbackVisualStudioSpec = VisualStudioSpecs.Value[index - 1];
                                 generatedPathToDotNetFrameworkSdkTools = FallbackToPathToDotNetFrameworkSdkToolsInPreviousVersion(
                                     this.Version,
                                     fallbackVisualStudioSpec.Version);
@@ -1570,10 +1564,8 @@ public virtual string GetPathToWindowsSdk()
 #if FEATURE_WIN32_REGISTRY
             private static string FallbackToPathToDotNetFrameworkSdkToolsInPreviousVersion(Version dotNetFrameworkVersion, Version visualStudioVersion)
             {
-                VisualStudioSpec visualStudioSpec;
-                DotNetFrameworkSpec dotNetFrameworkSpec;
-                if (s_visualStudioSpecDict.TryGetValue(visualStudioVersion, out visualStudioSpec)
-                    && s_dotNetFrameworkSpecDict.TryGetValue(dotNetFrameworkVersion, out dotNetFrameworkSpec)
+                if (VisualStudioSpecDict.Value.TryGetValue(visualStudioVersion, out VisualStudioSpec visualStudioSpec)
+                    && DotNetFrameworkSpecDict.Value.TryGetValue(dotNetFrameworkVersion, out DotNetFrameworkSpec dotNetFrameworkSpec)
                     && visualStudioSpec.SupportedDotNetFrameworkVersions.Contains(dotNetFrameworkVersion))
                 {
                     return dotNetFrameworkSpec.GetPathToDotNetFrameworkSdkTools(visualStudioSpec);
diff --git a/src/Shared/MSBuildNameIgnoreCaseComparer.cs b/src/Shared/MSBuildNameIgnoreCaseComparer.cs
index 47beaffd08c..f02c8c5cada 100644
--- a/src/Shared/MSBuildNameIgnoreCaseComparer.cs
+++ b/src/Shared/MSBuildNameIgnoreCaseComparer.cs
@@ -22,16 +22,7 @@ internal class MSBuildNameIgnoreCaseComparer : IConstrainedEqualityComparer<stri
         /// <summary>
         /// The processor architecture on which we are running, but default it will be x86
         /// </summary>
-        private static readonly NativeMethodsShared.ProcessorArchitectures s_runningProcessorArchitecture;
-
-        /// <summary>
-        /// We need a static constructor to retrieve the running ProcessorArchitecture that way we can
-        /// avoid using optimized code that will not run correctly on IA64 due to alignment issues
-        /// </summary>
-        static MSBuildNameIgnoreCaseComparer()
-        {
-            s_runningProcessorArchitecture = NativeMethodsShared.ProcessorArchitecture;
-        }
+        private static readonly NativeMethodsShared.ProcessorArchitectures s_runningProcessorArchitecture = NativeMethodsShared.ProcessorArchitecture;
 
         /// <summary>
         /// The default immutable comparer instance.
diff --git a/src/Shared/TypeLoader.cs b/src/Shared/TypeLoader.cs
index d296c8c7547..fe5ea680c49 100644
--- a/src/Shared/TypeLoader.cs
+++ b/src/Shared/TypeLoader.cs
@@ -23,7 +23,7 @@ internal class TypeLoader
         /// <summary>
         /// AssemblyContextLoader used to load DLLs outside of msbuild.exe directory
         /// </summary>
-        private static readonly CoreClrAssemblyLoader s_coreClrAssemblyLoader;
+        private static readonly CoreClrAssemblyLoader s_coreClrAssemblyLoader = new CoreClrAssemblyLoader();
 #endif
 
         /// <summary>
@@ -41,13 +41,6 @@ internal class TypeLoader
         /// </summary>
         private Func<Type, object, bool> _isDesiredType;
 
-#if FEATURE_ASSEMBLYLOADCONTEXT
-        static TypeLoader()
-        {
-            s_coreClrAssemblyLoader = new CoreClrAssemblyLoader();
-        }
-#endif
-
         /// <summary>
         /// Constructor.
         /// </summary>
diff --git a/src/StringTools/PublicAPI/net/PublicAPI.Shipped.txt b/src/StringTools/PublicAPI/net/PublicAPI.Shipped.txt
index 2cd09cc29ef..9086e5e2c2a 100644
--- a/src/StringTools/PublicAPI/net/PublicAPI.Shipped.txt
+++ b/src/StringTools/PublicAPI/net/PublicAPI.Shipped.txt
@@ -1,7 +1,6 @@
-#nullable enable
 Microsoft.NET.StringTools.SpanBasedStringBuilder
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string! value) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string! value, int startIndex, int count) -> void
+Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string value) -> void
+Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string value, int startIndex, int count) -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(System.ReadOnlyMemory<char> span) -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Capacity.get -> int
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Clear() -> void
@@ -13,14 +12,14 @@ Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.MoveNext() -> bool
 Microsoft.NET.StringTools.SpanBasedStringBuilder.GetEnumerator() -> Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Length.get -> int
 Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(int capacity = 4) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(string! str) -> void
+Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(string str) -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Trim() -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.TrimEnd() -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.TrimStart() -> void
 Microsoft.NET.StringTools.Strings
-override Microsoft.NET.StringTools.SpanBasedStringBuilder.ToString() -> string!
-static Microsoft.NET.StringTools.Strings.CreateDiagnosticReport() -> string!
+override Microsoft.NET.StringTools.SpanBasedStringBuilder.ToString() -> string
+static Microsoft.NET.StringTools.Strings.CreateDiagnosticReport() -> string
 static Microsoft.NET.StringTools.Strings.EnableDiagnostics() -> void
-static Microsoft.NET.StringTools.Strings.GetSpanBasedStringBuilder() -> Microsoft.NET.StringTools.SpanBasedStringBuilder!
-static Microsoft.NET.StringTools.Strings.WeakIntern(string! str) -> string!
-static Microsoft.NET.StringTools.Strings.WeakIntern(System.ReadOnlySpan<char> str) -> string!
+static Microsoft.NET.StringTools.Strings.GetSpanBasedStringBuilder() -> Microsoft.NET.StringTools.SpanBasedStringBuilder
+static Microsoft.NET.StringTools.Strings.WeakIntern(string str) -> string
+static Microsoft.NET.StringTools.Strings.WeakIntern(System.ReadOnlySpan<char> str) -> string
\ No newline at end of file
diff --git a/src/StringTools/PublicAPI/net35/PublicAPI.Shipped.txt b/src/StringTools/PublicAPI/net35/PublicAPI.Shipped.txt
index 3ac8d4a6e79..e2b05b1bd03 100644
--- a/src/StringTools/PublicAPI/net35/PublicAPI.Shipped.txt
+++ b/src/StringTools/PublicAPI/net35/PublicAPI.Shipped.txt
@@ -1,21 +1,20 @@
-#nullable enable
 Microsoft.NET.StringTools.SpanBasedStringBuilder
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Clear() -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Dispose() -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Current.get -> char
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Enumerator() -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Enumerator(System.Text.StringBuilder! builder) -> void
+Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.Enumerator(System.Text.StringBuilder builder) -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.MoveNext() -> bool
 Microsoft.NET.StringTools.SpanBasedStringBuilder.GetEnumerator() -> Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Length.get -> int
 Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(int capacity = 4) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(string! str) -> void
+Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(string str) -> void
 Microsoft.NET.StringTools.Strings
-override Microsoft.NET.StringTools.SpanBasedStringBuilder.ToString() -> string!
-static Microsoft.NET.StringTools.Strings.CreateDiagnosticReport() -> string!
+override Microsoft.NET.StringTools.SpanBasedStringBuilder.ToString() -> string
+static Microsoft.NET.StringTools.Strings.CreateDiagnosticReport() -> string
 static Microsoft.NET.StringTools.Strings.EnableDiagnostics() -> void
-static Microsoft.NET.StringTools.Strings.GetSpanBasedStringBuilder() -> Microsoft.NET.StringTools.SpanBasedStringBuilder!
-static Microsoft.NET.StringTools.Strings.WeakIntern(string! str) -> string!
-static System.MemoryExtensions.AsSpan<T>(this T[]! array, int start, int length) -> string!
-System.MemoryExtensions
+static Microsoft.NET.StringTools.Strings.GetSpanBasedStringBuilder() -> Microsoft.NET.StringTools.SpanBasedStringBuilder
+static Microsoft.NET.StringTools.Strings.WeakIntern(string str) -> string
+static System.MemoryExtensions.AsSpan<T>(this T[] array, int start, int length) -> string
+System.MemoryExtensions
\ No newline at end of file
diff --git a/src/StringTools/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/StringTools/PublicAPI/netstandard/PublicAPI.Shipped.txt
index 2cd09cc29ef..9086e5e2c2a 100644
--- a/src/StringTools/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ b/src/StringTools/PublicAPI/netstandard/PublicAPI.Shipped.txt
@@ -1,7 +1,6 @@
-#nullable enable
 Microsoft.NET.StringTools.SpanBasedStringBuilder
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string! value) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string! value, int startIndex, int count) -> void
+Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string value) -> void
+Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(string value, int startIndex, int count) -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Append(System.ReadOnlyMemory<char> span) -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Capacity.get -> int
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Clear() -> void
@@ -13,14 +12,14 @@ Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator.MoveNext() -> bool
 Microsoft.NET.StringTools.SpanBasedStringBuilder.GetEnumerator() -> Microsoft.NET.StringTools.SpanBasedStringBuilder.Enumerator
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Length.get -> int
 Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(int capacity = 4) -> void
-Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(string! str) -> void
+Microsoft.NET.StringTools.SpanBasedStringBuilder.SpanBasedStringBuilder(string str) -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.Trim() -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.TrimEnd() -> void
 Microsoft.NET.StringTools.SpanBasedStringBuilder.TrimStart() -> void
 Microsoft.NET.StringTools.Strings
-override Microsoft.NET.StringTools.SpanBasedStringBuilder.ToString() -> string!
-static Microsoft.NET.StringTools.Strings.CreateDiagnosticReport() -> string!
+override Microsoft.NET.StringTools.SpanBasedStringBuilder.ToString() -> string
+static Microsoft.NET.StringTools.Strings.CreateDiagnosticReport() -> string
 static Microsoft.NET.StringTools.Strings.EnableDiagnostics() -> void
-static Microsoft.NET.StringTools.Strings.GetSpanBasedStringBuilder() -> Microsoft.NET.StringTools.SpanBasedStringBuilder!
-static Microsoft.NET.StringTools.Strings.WeakIntern(string! str) -> string!
-static Microsoft.NET.StringTools.Strings.WeakIntern(System.ReadOnlySpan<char> str) -> string!
+static Microsoft.NET.StringTools.Strings.GetSpanBasedStringBuilder() -> Microsoft.NET.StringTools.SpanBasedStringBuilder
+static Microsoft.NET.StringTools.Strings.WeakIntern(string str) -> string
+static Microsoft.NET.StringTools.Strings.WeakIntern(System.ReadOnlySpan<char> str) -> string
\ No newline at end of file
diff --git a/src/Tasks/CultureInfoCache.cs b/src/Tasks/CultureInfoCache.cs
index 4955e8a766e..a5c52d41275 100644
--- a/src/Tasks/CultureInfoCache.cs
+++ b/src/Tasks/CultureInfoCache.cs
@@ -19,35 +19,34 @@ namespace Microsoft.Build.Tasks
     /// </summary>
     internal static class CultureInfoCache
     {
-        private static readonly HashSet<string> ValidCultureNames;
+        private static readonly HashSet<string> ValidCultureNames = InitializeValidCultureNames();
 
-        static CultureInfoCache()
+        static HashSet<string> InitializeValidCultureNames()
         {
-            ValidCultureNames = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
-
 #if !FEATURE_CULTUREINFO_GETCULTURES
             if (!AssemblyUtilities.CultureInfoHasGetCultures())
             {
-                ValidCultureNames = HardcodedCultureNames;
-                return;
+                return HardcodedCultureNames;
             }
 #endif
-
+            HashSet<string> validCultureNames = new(StringComparer.OrdinalIgnoreCase);
             foreach (CultureInfo cultureName in AssemblyUtilities.GetAllCultures())
             {
-                ValidCultureNames.Add(cultureName.Name);
+                validCultureNames.Add(cultureName.Name);
             }
 
             // https://docs.microsoft.com/en-gb/windows/desktop/Intl/using-pseudo-locales-for-localization-testing
             // These pseudo-locales are available in versions of Windows from Vista and later.
             // However, from Windows 10, version 1803, they are not returned when enumerating the
             // installed cultures, even if the registry keys are set. Therefore, add them to the list manually.
-            var pseudoLocales = new[] { "qps-ploc", "qps-ploca", "qps-plocm", "qps-Latn-x-sh" };
+            string[] pseudoLocales = new[] { "qps-ploc", "qps-ploca", "qps-plocm", "qps-Latn-x-sh" };
 
             foreach (string pseudoLocale in pseudoLocales)
             {
-                ValidCultureNames.Add(pseudoLocale);
+                validCultureNames.Add(pseudoLocale);
             }
+
+            return validCultureNames;
         }
 
         /// <summary>
diff --git a/src/Tasks/GenerateResource.cs b/src/Tasks/GenerateResource.cs
index e5cb2b89c17..8d14a11f700 100644
--- a/src/Tasks/GenerateResource.cs
+++ b/src/Tasks/GenerateResource.cs
@@ -546,29 +546,6 @@ public GenerateResource()
             // do nothing
         }
 
-#if FEATURE_COM_INTEROP
-        /// <summary>
-        /// Static constructor checks the registry opt-out for mark-of-the-web rejection.
-        /// </summary>
-        static GenerateResource()
-        {
-            if (!NativeMethodsShared.IsWindows)
-            {
-                allowMOTW = true;
-                return;
-            }
-            try
-            {
-                object allowUntrustedFiles = Registry.GetValue(@"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework\SDK", "AllowProcessOfUntrustedResourceFiles", null);
-                if (allowUntrustedFiles is string allowUntrustedFilesString)
-                {
-                    allowMOTW = allowUntrustedFilesString.Equals("true", StringComparison.OrdinalIgnoreCase);
-                }
-            }
-            catch { }
-        }
-#endif
-
         /// <summary>
         /// Logs a Resgen.exe command line that indicates what parameters were
         /// passed to this task. Since this task is replacing Resgen, and we used
@@ -931,7 +908,7 @@ public override bool Execute()
         }
 
 #if FEATURE_COM_INTEROP
-        private static bool allowMOTW;
+        private static readonly bool AllowMOTW = !NativeMethodsShared.IsWindows || (Registry.GetValue(@"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework\SDK", "AllowProcessOfUntrustedResourceFiles", null) is string allowUntrustedFiles && allowUntrustedFiles.Equals("true", StringComparison.OrdinalIgnoreCase));
 
         private const string CLSID_InternetSecurityManager = "7b8a2d94-0ac9-11d1-896c-00c04fb6bfc4";
         private const uint ZoneInternet = 3;
@@ -942,7 +919,7 @@ public override bool Execute()
         private bool IsDangerous(String filename)
         {
             // If they are opted out, there's no work to do
-            if (allowMOTW)
+            if (AllowMOTW)
             {
                 return false;
             }
diff --git a/src/Tasks/GetFrameworkPath.cs b/src/Tasks/GetFrameworkPath.cs
index 999bd44f434..5793e004a7c 100644
--- a/src/Tasks/GetFrameworkPath.cs
+++ b/src/Tasks/GetFrameworkPath.cs
@@ -14,26 +14,6 @@ namespace Microsoft.Build.Tasks
     /// </summary>
     public class GetFrameworkPath : TaskExtension
     {
-        static GetFrameworkPath()
-        {
-            s_path           = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Latest));
-            s_version11Path  = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version11));
-            s_version20Path  = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version20));
-            s_version30Path  = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version30));
-            s_version35Path  = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version35));
-            s_version40Path  = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version40));
-            s_version45Path  = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version45));
-            s_version451Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version451));
-            s_version452Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version452));
-            s_version46Path  = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version46));
-            s_version461Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version461));
-            s_version462Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version462));
-            s_version47Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version47));
-            s_version471Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version471));
-            s_version472Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version472));
-            s_version48Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version48));
-        }
-
         #region ITask Members
 
         /// <summary>
@@ -52,23 +32,22 @@ public override bool Execute()
         // it still seems to give an advantage perhaps because there is one less string copy.
         // In a large build, this adds up.
         // PERF NOTE: We also only find paths we are actually asked for (via <Output> tags)
-
-        private static readonly Lazy<string> s_path;
-        private static readonly Lazy<string> s_version11Path;
-        private static readonly Lazy<string> s_version20Path;
-        private static readonly Lazy<string> s_version30Path;
-        private static readonly Lazy<string> s_version35Path;
-        private static readonly Lazy<string> s_version40Path;
-        private static readonly Lazy<string> s_version45Path;
-        private static readonly Lazy<string> s_version451Path;
-        private static readonly Lazy<string> s_version452Path;
-        private static readonly Lazy<string> s_version46Path;
-        private static readonly Lazy<string> s_version461Path;
-        private static readonly Lazy<string> s_version462Path;
-        private static readonly Lazy<string> s_version47Path;
-        private static readonly Lazy<string> s_version471Path;
-        private static readonly Lazy<string> s_version472Path;
-        private static readonly Lazy<string> s_version48Path;
+        private static readonly Lazy<string> s_path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Latest));
+        private static readonly Lazy<string> s_version11Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version11));
+        private static readonly Lazy<string> s_version20Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version20));
+        private static readonly Lazy<string> s_version30Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version30));
+        private static readonly Lazy<string> s_version35Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version35));
+        private static readonly Lazy<string> s_version40Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version40));
+        private static readonly Lazy<string> s_version45Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version45));
+        private static readonly Lazy<string> s_version451Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version451));
+        private static readonly Lazy<string> s_version452Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version452));
+        private static readonly Lazy<string> s_version46Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version46));
+        private static readonly Lazy<string> s_version461Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version461));
+        private static readonly Lazy<string> s_version462Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version462));
+        private static readonly Lazy<string> s_version47Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version47));
+        private static readonly Lazy<string> s_version471Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version471));
+        private static readonly Lazy<string> s_version472Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version472));
+        private static readonly Lazy<string> s_version48Path = new Lazy<string>(() => ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version48));
 
         /// <summary>
         /// Path to the latest framework, whatever version it happens to be
diff --git a/src/Tasks/ManifestUtil/ComImporter.cs b/src/Tasks/ManifestUtil/ComImporter.cs
index 116439f37de..86e28d204d0 100644
--- a/src/Tasks/ManifestUtil/ComImporter.cs
+++ b/src/Tasks/ManifestUtil/ComImporter.cs
@@ -163,16 +163,38 @@ private void CheckForUnknownValues(RegistryKey key, string[] knownNames)
         private ClassInfo GetRegisteredClassInfo(Guid clsid)
         {
             ClassInfo info = null;
-            RegistryKey userKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\CLASSES\\CLSID");
-            if (GetRegisteredClassInfo(userKey, clsid, ref info))
+
+            using (RegistryKey userKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\CLASSES\\CLSID"))
+            {
+               if (GetRegisteredClassInfo(userKey, clsid, ref info))
+               {
+                   return info;
+               }
+            }
+
+            using (RegistryKey machineKey = Registry.ClassesRoot.OpenSubKey("CLSID"))
             {
-                return info;
+               if (GetRegisteredClassInfo(machineKey, clsid, ref info))
+               {
+                  return info;
+               }
             }
-            RegistryKey machineKey = Registry.ClassesRoot.OpenSubKey("CLSID");
-            if (GetRegisteredClassInfo(machineKey, clsid, ref info))
+
+            // Check Wow6432Node of HKCR incase the COM reference is to a 32-bit binary.
+            if (Environment.Is64BitProcess)
             {
-                return info;
+                using (RegistryKey classesRootKey = RegistryKey.OpenBaseKey(RegistryHive.ClassesRoot, RegistryView.Registry32))
+                {
+                    using (RegistryKey clsidKey = classesRootKey.OpenSubKey("CLSID"))
+                    {
+                        if (GetRegisteredClassInfo(clsidKey, clsid, ref info))
+                        {
+                            return info;
+                        }
+                    }
+                }
             }
+
             return null;
         }
 
diff --git a/src/Tasks/PublicAPI/netstandard/PublicAPI.Shipped.txt b/src/Tasks/PublicAPI/netstandard/PublicAPI.Shipped.txt
index 37b2642bb9b..092772496e2 100644
--- a/src/Tasks/PublicAPI/netstandard/PublicAPI.Shipped.txt
+++ b/src/Tasks/PublicAPI/netstandard/PublicAPI.Shipped.txt
@@ -1277,6 +1277,24 @@ Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetPlatformWith32BitPreference(str
 Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetSubsystemVersion(string subsystemVersion) -> bool
 Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded
 Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded.Compile() -> bool
+Microsoft.Build.Tasks.LC
+Microsoft.Build.Tasks.LC.LC() -> void
+Microsoft.Build.Tasks.LC.LicenseTarget.get -> Microsoft.Build.Framework.ITaskItem
+Microsoft.Build.Tasks.LC.LicenseTarget.set -> void
+Microsoft.Build.Tasks.LC.NoLogo.get -> bool
+Microsoft.Build.Tasks.LC.NoLogo.set -> void
+Microsoft.Build.Tasks.LC.OutputDirectory.get -> string
+Microsoft.Build.Tasks.LC.OutputDirectory.set -> void
+Microsoft.Build.Tasks.LC.OutputLicense.get -> Microsoft.Build.Framework.ITaskItem
+Microsoft.Build.Tasks.LC.OutputLicense.set -> void
+Microsoft.Build.Tasks.LC.ReferencedAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
+Microsoft.Build.Tasks.LC.ReferencedAssemblies.set -> void
+Microsoft.Build.Tasks.LC.SdkToolsPath.get -> string
+Microsoft.Build.Tasks.LC.SdkToolsPath.set -> void
+Microsoft.Build.Tasks.LC.Sources.get -> Microsoft.Build.Framework.ITaskItem[]
+Microsoft.Build.Tasks.LC.Sources.set -> void
+Microsoft.Build.Tasks.LC.TargetFrameworkVersion.get -> string
+Microsoft.Build.Tasks.LC.TargetFrameworkVersion.set -> void
 Microsoft.Build.Tasks.MakeDir
 Microsoft.Build.Tasks.MakeDir.Directories.get -> Microsoft.Build.Framework.ITaskItem[]
 Microsoft.Build.Tasks.MakeDir.Directories.set -> void
@@ -1840,6 +1858,12 @@ override Microsoft.Build.Tasks.GetFileHash.Execute() -> bool
 override Microsoft.Build.Tasks.GetFrameworkPath.Execute() -> bool
 override Microsoft.Build.Tasks.GetReferenceAssemblyPaths.Execute() -> bool
 override Microsoft.Build.Tasks.Hash.Execute() -> bool
+override Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
+override Microsoft.Build.Tasks.LC.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
+override Microsoft.Build.Tasks.LC.Execute() -> bool
+override Microsoft.Build.Tasks.LC.GenerateFullPathToTool() -> string
+override Microsoft.Build.Tasks.LC.ToolName.get -> string
+override Microsoft.Build.Tasks.LC.ValidateParameters() -> bool
 override Microsoft.Build.Tasks.MakeDir.Execute() -> bool
 override Microsoft.Build.Tasks.Message.Execute() -> bool
 override Microsoft.Build.Tasks.Move.Execute() -> bool
diff --git a/src/Tasks/PublicAPI/netstandard/PublicAPI.Unshipped.txt b/src/Tasks/PublicAPI/netstandard/PublicAPI.Unshipped.txt
index 23c8f38efd6..e69de29bb2d 100644
--- a/src/Tasks/PublicAPI/netstandard/PublicAPI.Unshipped.txt
+++ b/src/Tasks/PublicAPI/netstandard/PublicAPI.Unshipped.txt
@@ -1,24 +0,0 @@
-Microsoft.Build.Tasks.LC
-Microsoft.Build.Tasks.LC.LC() -> void
-Microsoft.Build.Tasks.LC.LicenseTarget.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.LC.LicenseTarget.set -> void
-Microsoft.Build.Tasks.LC.NoLogo.get -> bool
-Microsoft.Build.Tasks.LC.NoLogo.set -> void
-Microsoft.Build.Tasks.LC.OutputDirectory.get -> string
-Microsoft.Build.Tasks.LC.OutputDirectory.set -> void
-Microsoft.Build.Tasks.LC.OutputLicense.get -> Microsoft.Build.Framework.ITaskItem
-Microsoft.Build.Tasks.LC.OutputLicense.set -> void
-Microsoft.Build.Tasks.LC.ReferencedAssemblies.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.LC.ReferencedAssemblies.set -> void
-Microsoft.Build.Tasks.LC.SdkToolsPath.get -> string
-Microsoft.Build.Tasks.LC.SdkToolsPath.set -> void
-Microsoft.Build.Tasks.LC.Sources.get -> Microsoft.Build.Framework.ITaskItem[]
-Microsoft.Build.Tasks.LC.Sources.set -> void
-Microsoft.Build.Tasks.LC.TargetFrameworkVersion.get -> string
-Microsoft.Build.Tasks.LC.TargetFrameworkVersion.set -> void
-override Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.LC.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) -> void
-override Microsoft.Build.Tasks.LC.Execute() -> bool
-override Microsoft.Build.Tasks.LC.GenerateFullPathToTool() -> string
-override Microsoft.Build.Tasks.LC.ToolName.get -> string
-override Microsoft.Build.Tasks.LC.ValidateParameters() -> bool
\ No newline at end of file
diff --git a/src/Utilities/TrackedDependencies/FileTracker.cs b/src/Utilities/TrackedDependencies/FileTracker.cs
index d33f0b35127..b3c775b9642 100644
--- a/src/Utilities/TrackedDependencies/FileTracker.cs
+++ b/src/Utilities/TrackedDependencies/FileTracker.cs
@@ -85,7 +85,7 @@ public static class FileTracker
         // Is equal to C:\Documents and Settings\All Users\Application Data on XP, and C:\ProgramData on Vista+.
         // But for backward compatibility, the paths "C:\Documents and Settings\All Users\Application Data" and "C:\Users\All Users\Application Data" are still accessible via Junction point on Vista+.
         // Thus this list is created to store all possible common application data paths to cover more cases as possible.
-        private static readonly List<string> s_commonApplicationDataPaths;
+        private static readonly List<string> s_commonApplicationDataPaths = InitializeCommonApplicationDataPaths();
 
         // The name of the standalone tracker tool.
         private const string s_TrackerFilename = "Tracker.exe";
@@ -105,29 +105,31 @@ public static class FileTracker
 
 #endregion
 
-#region Static constructor
+#region Static Member Initializers
 
-        static FileTracker()
+        static List<string> InitializeCommonApplicationDataPaths()
         {
-            s_commonApplicationDataPaths = new List<string>();
+            List<string> commonApplicationDataPaths = new();
 
             string defaultCommonApplicationDataPath = FileUtilities.EnsureTrailingSlash(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData).ToUpperInvariant());
-            s_commonApplicationDataPaths.Add(defaultCommonApplicationDataPath);
+            commonApplicationDataPaths.Add(defaultCommonApplicationDataPath);
 
             string defaultRootDirectory = Path.GetPathRoot(defaultCommonApplicationDataPath);
             string alternativeCommonApplicationDataPath1 = FileUtilities.EnsureTrailingSlash(Path.Combine(defaultRootDirectory, @"Documents and Settings\All Users\Application Data").ToUpperInvariant());
 
             if (!alternativeCommonApplicationDataPath1.Equals(defaultCommonApplicationDataPath, StringComparison.Ordinal))
             {
-                s_commonApplicationDataPaths.Add(alternativeCommonApplicationDataPath1);
+                commonApplicationDataPaths.Add(alternativeCommonApplicationDataPath1);
             }
 
             string alternativeCommonApplicationDataPath2 = FileUtilities.EnsureTrailingSlash(Path.Combine(defaultRootDirectory, @"Users\All Users\Application Data").ToUpperInvariant());
 
             if (!alternativeCommonApplicationDataPath2.Equals(defaultCommonApplicationDataPath, StringComparison.Ordinal))
             {
-                s_commonApplicationDataPaths.Add(alternativeCommonApplicationDataPath2);
+                commonApplicationDataPaths.Add(alternativeCommonApplicationDataPath2);
             }
+
+            return commonApplicationDataPaths;
         }
 
 #endregion
